[
  {
    "owner": "grnhse",
    "repo": "greenhouse-api-docs",
    "content": "TITLE: Parsing New Candidate Application Webhook in JSON\nDESCRIPTION: This JSON snippet represents the payload of a webhook event triggered when a new application is created for a candidate in Greenhouse. It includes detailed information about the application, candidate, job, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_application_events.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"new_candidate_application\",\n  \"payload\": {\n    \"application\": {\n      \"id\": 71980812,\n      \"rejected_at\": null,\n      \"prospect\": false,\n      \"status\": \"active\",\n      \"applied_at\": \"2017-10-27T14:44:43Z\",\n      \"last_activity_at\": \"2017-10-27T14:44:42Z\",\n      \"url\": \"http://app.greenhouse.io/people/60304594?application_id=71980812\",\n      \"source\": {\n        \"id\": 16,\n        \"name\": \"LinkedIn (Prospecting)\"\n      },\n      \"credited_to\": {\n        \"id\": 92120,\n        \"email\": \"test123@example.com\",\n        \"name\": \"Greenhouse Admin\",\n        \"employee_id\": \"123ABC\"\n      },\n      \"rejection_reason\": null,\n      \"rejection_details\": null,\n      \"current_stage\": {\n        \"id\": 2944102,\n        \"name\": \"Preliminary Phone Screen\",\n        \"interviews\": [\n          {\n            \"id\": 4368004,\n            \"name\": \"Preliminary Screening Call\",\n            \"status\": \"to_be_scheduled\",\n            \"interview_kit\": {\n              \"url\": \"http://app.greenhouse.io/guides/4368142/people/60304594?application_id=71980812\",\n              \"content\": \"<p>Directions on how to conduct this interview.</p>\",\n              \"questions\": [\n                {\n                  \"id\": 3136352,\n                  \"question\": \"Could you tell me about your previous experience?\"\n                },\n                {\n                  \"id\": 3136353,\n                  \"question\": \"Why do you want to work with us?\"\n                }\n              ]\n            },\n            \"interviewers\": []\n          }\n        ]\n      },\n      \"prospect_detail\": {\n        \"prospect_pool\": null,\n        \"prospect_stage\": null,\n        \"prospect_owner\": null\n      },\n      \"custom_fields\": {\n        \"application_custom_test\": {\n          \"name\": \"Application Custom Test\",\n          \"type\": \"single_select\",\n          \"value\": null\n        },\n        \"custom_boolean_test\": {\n          \"name\": \"Custom Boolean Test\",\n          \"type\": \"boolean\",\n          \"value\": null\n        }\n      },\n      \"candidate\": {\n        \"id\": 60304594,\n        \"first_name\": \"Jane\",\n        \"last_name\": \"Smith\",\n        \"title\": \"Manager\",\n        \"company\": \"Current Company Co.\",\n        \"created_at\": \"2017-10-27T14:44:42Z\",\n        \"external_id\": null,\n        \"photo_url\": null,\n        \"url\": \"http://app.greenhouse.io/people/60304594\",\n        \"is_private\": false,\n        \"can_email\": true,\n        \"phone_numbers\": [\n          {\n            \"value\": \"555-555-5555\",\n            \"type\": \"mobile\"\n          }\n        ],\n        \"email_addresses\": [\n          {\n            \"value\": \"person@work.com\",\n            \"type\": \"work\"\n          },\n          {\n            \"value\": \"person@example.com\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"addresses\": [\n          {\n            \"value\": \"123 Test Street\\nNew York, NY 10001\",\n            \"type\": \"home\"\n          }\n        ],\n        \"website_addresses\": [\n          {\n            \"value\": \"mysite.com\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"social_media_addresses\": [\n          {\n            \"value\": \"socialmedia.com\"\n          }\n        ],\n        \"educations\": [\n          {\n            \"school_name\": \"Stanford University\",\n            \"degree\": \"Bachelor's Degree\",\n            \"discipline\": \"Computer Science\",\n            \"start_date\": \"09/15/2007\",\n            \"end_date\": \"05/15/2011\"\n          }\n        ],\n        \"employments\": [],\n        \"recruiter\": {\n          \"id\": 92121,\n          \"email\": \"employee@test.com\",\n          \"name\": \"Betty Smith\",\n          \"employee_id\": \"123ABC\"\n        },\n        \"coordinator\": {\n          \"id\": 92427,\n          \"email\": \"user@example.com\",\n          \"name\": \"Bonnie Bonnet\",\n          \"employee_id\": \"456DEF\"\n        },\n        \"attachments\": [\n          {\n            \"filename\": \"Test Cover Letter.docx\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"cover_letter\"\n          },\n          {\n            \"filename\": \"Test Resume.docx\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"resume\"\n          }\n        ],\n        \"tags\": [\n          \"Ruby\",\n          \"Comp Sci\"\n        ],\n        \"custom_fields\": {\n          \"date_test\": {\n            \"name\": \"Date Test\",\n            \"type\": \"date\",\n            \"value\": \"\"\n          },\n          \"desired_salary\": {\n            \"name\": \"Desired Salary\",\n            \"type\": \"short_text\",\n            \"value\": null\n          },\n          \"graduation_year_1\": {\n            \"name\": \"Graduation Year\",\n            \"type\": \"single_select\",\n            \"value\": null\n          },\n          \"work_remotely\": {\n            \"name\": \"Work Remotely\",\n            \"type\": \"boolean\",\n            \"value\": null\n          }\n        }\n      },\n      \"jobs\": [\n        {\n          \"id\": 274075,\n          \"name\": \"Data Scientist\",\n          \"requisition_id\": \"ABC\",\n          \"notes\": null,\n          \"confidential\": false,\n          \"job_post_id\": 263533,\n          \"status\": \"open\",\n          \"created_by_id\": 273555,\n          \"created_at\": \"2016-07-14T17:21:30Z\",\n          \"opened_at\": \"2016-07-20T16:00:00Z\",\n          \"closed_at\": null,\n          \"url\": \"http://app.greenhouse.io/sdash/274075\",\n          \"departments\": [\n            {\n              \"id\": 8717,\n              \"name\": \"Data Science\",\n              \"external_id\": \"ex-dept-1\"\n            }\n          ],\n          \"offices\": [\n            {\n              \"id\": 16478,\n              \"name\": \"London\",\n              \"location\": \"London, United Kingdom\",\n              \"external_id\": \"ex-office-1\"\n            }\n          ],\n          \"hiring_team\": {\n            \"hiring_managers\": [\n              {\n                \"user_id\": 92913,\n                \"employee_id\": \"123ABC\"\n              }\n            ],\n            \"sourcers\": [\n              {\n                  \"user_id\": 92427,\n                \"employee_id\": null\n              }\n            ],\n            \"recruiters\":  [\n              {\n                  \"user_id\": 92427,\n                \"employee_id\": null\n              }\n            ],\n            \"coordinators\": [\n              {\n                \"user_id\": 92427,\n                \"employee_id\": \"DEFG123\"\n              }\n            ]\n          },\n          \"custom_fields\": {\n            \"date_test\": {\n              \"name\": \"Date Test\",\n              \"type\": \"date\",\n              \"value\": \"2017-10-27\"\n            },\n            \"employment_type\": {\n              \"name\": \"Employment\",\n              \"type\": \"single_select\",\n              \"value\": \"Full-time\"\n            },\n            \"replacement_role_\": {\n              \"name\": \"Replacement Role\",\n              \"type\": \"boolean\",\n              \"value\": true\n            },\n            \"salary_range_2\": {\n              \"name\": \"Salary Range\",\n              \"type\": \"currency_range\",\n              \"value\": {\n                \"unit\": null,\n                \"min_value\": \"10000.0\",\n                \"max_value\": \"10000.0\"\n              }\n            },\n            \"test_field_1\": {\n              \"name\": \"Test Short Text Field\",\n              \"type\": \"short_text\",\n              \"value\": \"test\"\n            },\n            \"test_user_field\": {\n              \"name\": \"Test User Field\",\n              \"type\": \"user\",\n              \"value\": {\n                \"user_id\": 117730,\n                \"name\": \"Job Admin\",\n                \"email\": \"asegal+jobadmin@greenhouse.io\",\n                \"employee_id\": \"user-abc\"\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Authentication for Greenhouse Harvest API in Ruby\nDESCRIPTION: Demonstrates how to authenticate with the Greenhouse Harvest API using Base64 encoding in Ruby. This code creates the Authorization header required for API requests by encoding the API token with a trailing colon.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_introduction.md#2025-04-14_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nrequire 'base64'\napi_token = 'a7183e1b7e9ab09b8a5cfa87d1934c3c'\ncredential = Base64.strict_encode64(api_token + ':')\n# => \"YTcxODNlMWI3ZTlhYjA5YjhhNWNmYTg3ZDE5MzRjM2M6\"\n\nheaders = {\n  \"Authorization\" => \"Basic \" + credential\n}\n```\n\n----------------------------------------\n\nTITLE: Application Response Structure in Greenhouse API (JSON)\nDESCRIPTION: Example JSON response structure when retrieving an application. Includes details such as candidate info, job details, custom fields, and attachments.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 69306314,\n    \"candidate_id\": 57683957,\n    \"prospect\": false,\n    \"applied_at\": \"2017-09-29T12:56:05.244Z\",\n    \"rejected_at\": null,\n    \"last_activity_at\": \"2017-09-29T13:00:28.038Z\",\n    \"location\": {\n        \"address\": \"New York, New York, USA\"\n    },\n    \"source\": {\n        \"id\": 2,\n        \"public_name\": \"Jobs page on your website\"\n    },\n    \"credited_to\": {\n      \"id\": 4080,\n      \"first_name\": \"Kate\",\n      \"last_name\": \"Austen\",\n      \"name\": \"Kate Austen\",\n      \"employee_id\": \"12345\"\n    },\n    \"rejection_reason\": null,\n    \"rejection_details\": null,\n    \"jobs\": [\n        {\n            \"id\": 107761,\n            \"name\": \"UX Designer - Boston\"\n        }\n    ],\n    \"job_post_id\": 123,\n    \"status\": \"active\",\n    \"current_stage\": {\n        \"id\": 767358,\n        \"name\": \"Application Review\"\n    },\n    \"answers\": [\n        {\n            \"question\": \"How did you hear about this job?\",\n            \"answer\": \"Online Research\"\n        },\n        {\n            \"question\": \"Website\",\n            \"answer\": \"mytestwebsite.com\"\n        }\n    ],\n    \"prospective_office\": null,\n    \"prospective_department\": null,\n    \"prospect_detail\": {\n        \"prospect_pool\": null,\n        \"prospect_stage\": null,\n        \"prospect_owner\": null\n    },\n    \"custom_fields\": {\n        \"application_custom_test\": \"Option 1\"\n    },\n    \"keyed_custom_fields\": {\n        \"application_custom_test\": {\n            \"name\": \"Application Custom Test\",\n            \"type\": \"single_select\",\n            \"value\": \"Option 1\"\n        }\n    },\n    \"attachments\": [\n        {\n            \"filename\": \"John_Locke_Offer_Packet_09_27_2017.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"offer_packet\",\n            \"created_at\": \"2020-09-27T18:45:27.137Z\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Application Object Structure in JSON\nDESCRIPTION: This snippet shows the structure of an application object in JSON format. Applications associate candidates with jobs and can be either candidate applications (tied to exactly one job) or prospect applications (tied to zero or more jobs).\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 985314,\n    \"candidate_id\": 978031,\n    \"prospect\": false,\n    \"applied_at\": \"2016-03-26T20:11:39.000Z\",\n    \"rejected_at\": \"2016-08-17T21:08:29.686Z\",\n    \"last_activity_at\": \"2016-08-27T16:13:15.000Z\",\n    \"location\": {\n        \"address\": \"New York, New York, USA\"\n    },\n    \"source\": {\n        \"id\": 1871,\n        \"public_name\": \"Happy Hour\"\n    },\n    \"credited_to\": {\n        \"id\": 4080,\n        \"first_name\": \"Kate\",\n        \"last_name\": \"Austen\",\n        \"name\": \"Kate Austen\",\n        \"employee_id\": \"12345\"\n    },\n    \"rejection_reason\": {\n        \"id\": 8,\n        \"name\": \"Lacking skill(s)/qualification(s)\",\n        \"type\": {\n            \"id\": 1,\n            \"name\": \"We rejected them\"\n        }\n    },\n    \"rejection_details\": {\n        \"custom_fields\": {\n            \"custom_rejection_question_field\": \"Not a good fit\"\n        },\n        \"keyed_custom_fields\": {\n            \"custom_rejection_question_field\": {\n                \"name\": \"Was this candidate a good fit?\",\n                \"type\": \"short_text\",\n                \"value\": \"Not a good fit.\"\n            }\n        }\n    },\n    \"jobs\": [\n        {\n            \"id\": 123,\n            \"name\": \"Accounting Manager\"\n        }\n    ],\n    \"job_post_id\": 123,\n    \"status\": \"rejected\",\n    \"current_stage\": {\n        \"id\": 62828,\n        \"name\": \"Recruiter Phone Screen\"\n    },\n    \"answers\": [\n        {\n            \"question\": \"Why do you want to work for us?\",\n            \"answer\": \"I heard you're awesome!\"\n        },\n        {\n            \"question\": \"How did you hear about this job?\",\n            \"answer\": \"From a former colleague.\"\n        }\n    ],\n    \"prospective_office\": null,\n    \"prospective_department\": null,\n    \"prospect_detail\": {\n        \"prospect_pool\": null,\n        \"prospect_stage\": null,\n        \"prospect_owner\": null\n    },\n    \"custom_fields\": {\n        \"bio\": \"This is a bio\",\n        \"birthday\": \"1992-01-27\"\n    },\n    \"keyed_custom_fields\": {\n        \"date_of_birth\": {\n            \"name\": \"Birthday\",\n            \"type\": \"date\",\n            \"value\": \"1992-01-27\"\n        },\n        \"bio\": {\n            \"name\": \"Bio\",\n            \"type\": \"long_text\",\n            \"value\": \"This is a bio\"\n        }\n    },\n    \"attachments\": [\n        {\n            \"filename\": \"John_Locke_Offer_Packet_09_27_2017.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"offer_packet\",\n            \"created_at\": \"2020-09-27T18:45:27.137Z\"\n        }\n    ]\n\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Prospect Application in Greenhouse API (JSON)\nDESCRIPTION: JSON payload for creating a prospect application. Includes options for specifying jobs, office, department, and prospect pool details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"prospect\": \"true\",\n  \"job_ids\": [123, 456],\n  \"prospective_office_id\": 58319,\n  \"prospective_department_id\": 9021,\n  \"prospect_pool_id\": 1640,\n  \"prospect_pool_stage_id\": 7594,\n  \"prospect_owner_id\": 107468\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with the Greenhouse Onboarding API using cURL\nDESCRIPTION: Example of how to authenticate with the Greenhouse Onboarding API using cURL. The request demonstrates HTTP Basic Authentication with an Access Key as the username and Secret Key as the password.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_introduction.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ curl https://onboarding-api.greenhouse.io/graphql \\\n  -X POST \\\n  -u your_access_key:your_secret_key \\\n  -d '{\"query\":\"{\\n  rateLimit {\\n    limit\\n  }\\n}\"}' \\\n  -H \"Content-Type: application/json\"\n\n...\n\n> GET /graphql HTTP/1.1\n> Host: onboarding-api.greenhouse.io\n> Authorization: Basic eW91cl9hY2Nlc3Nfa2V5OnlvdXJfdmFsdWU=\n```\n\n----------------------------------------\n\nTITLE: Authentication for Greenhouse Harvest API using cURL\nDESCRIPTION: Shows how to authenticate with the Greenhouse Harvest API using cURL. The example demonstrates using the -u flag with an API token followed by a colon, which automatically generates the required Authorization header.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_introduction.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Note the trailing colon after the username (API token):\n$ curl https://harvest.greenhouse.io/v1/candidates/ -u a7183e1b7e9ab09b8a5cfa87d1934c3c:\n...\n\n> GET /v1/candidates/ HTTP/1.1\n> Host: harvest.greenhouse.io\n> Authorization: Basic YTcxODNlMWI3ZTlhYjA5YjhhNWNmYTg3ZDE5MzRjM2M6\n\n...\n```\n\n----------------------------------------\n\nTITLE: Moving Application Between Stages Using Greenhouse API (Shell)\nDESCRIPTION: API request to move an application from one stage to another within the same job. Requires the application ID, source stage ID, and destination stage ID. Only applications in the 'active' state can be moved.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/applications/{id}/move'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: JSON Payload Structure for New Prospect Application Event in Greenhouse API\nDESCRIPTION: This JSON structure represents the webhook payload sent when a new prospect application is created in Greenhouse. It includes detailed information about the application, candidate, jobs, and various associated metadata.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_application_events.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"new_prospect_application\",\n  \"payload\": {\n    \"application\": {\n      \"id\": 979554,\n      \"rejected_at\": null,\n      \"prospect\": true,\n      \"status\": \"active\",\n      \"applied_at\": \"2014-12-02T23:10:16Z\",\n      \"last_activity_at\": \"2014-12-02T23:10:16Z\",\n      \"url\": \"https://app.greenhouse.io/people/968190?application_id=979554\",\n      \"source\": {\n        \"id\": 13,\n        \"public_name\": \"Referral\"\n      },\n      \"credited_to\": {\n        \"id\": 2622,\n        \"email\": \"carl.buddha.2622@example.com\",\n        \"name\": \"Carl Buddha\",\n        \"employee_id\": \"123ABC\"\n      },\n      \"rejection_reason\": null,\n      \"rejection_details\": null,\n      \"current_stage\": null,\n      \"custom_fields\": {\n        \"custom_application_field\": {\n          \"name\": \"Custom Application Field\",\n          \"type\": \"short_text\",\n          \"value\": null\n        }\n      },\n      \"candidate\": {\n        \"id\": 968190,\n        \"first_name\": \"Trisha\",\n        \"last_name\": \"Troy\",\n        \"title\": null,\n        \"company\": null,\n        \"created_at\": \"2014-12-02T23:10:16Z\",\n        \"external_id\": null,\n        \"photo_url\": null,\n        \"is_private\": false,\n        \"can_email\": true,\n        \"phone_numbers\": [\n          {\n            \"value\": \"123456\",\n            \"type\": \"other\"\n          }\n        ],\n        \"email_addresses\": [\n          {\n            \"value\": \"t.troy@example.com\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"addresses\": [],\n        \"website_addresses\": [],\n        \"social_media_addresses\": [],\n        \"educations\": [\n          {\n            \"school_name\": \"Harvard University\",\n            \"degree\": \"Bachelor's Degree\",\n            \"discipline\": \"Information Systems\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"employments\": [\n          {\n            \"company_name\": \"Greenhouse\",\n            \"title\": \"Engineer\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"recruiter\": {\n          \"id\": 3128,\n          \"email\": \"alicia.flopple.3128@example.com\",\n          \"name\": \"Alicia Flopple\",\n          \"employee_id\": \"456DEF\"\n        },\n        \"coordinator\": null,\n        \"attachments\": [\n          {\n            \"filename\": \"resume.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"resume\"\n          }\n        ],\n        \"tags\": [\n          \"Import from Previous ATS\"\n        ],\n        \"custom_fields\": {\n          \"favorite_color\": {\n            \"name\": \"Favorite Color\",\n            \"type\": \"short_text\",\n            \"value\": \"Blue\"\n          }\n        }\n      },\n      \"jobs\": [\n        {\n          \"id\": 371417,\n          \"name\": \"Designer\",\n          \"requisition_id\": null,\n          \"notes\": \"Digital and print\",\n          \"confidential\": false,\n          \"job_post_id\": 54321,\n          \"status\": \"open\",\n          \"created_by_id\": 273555,\n          \"created_at\": \"2013-10-02T22:59:29Z\",\n          \"opened_at\": \"2015-01-23T00:25:04Z\",\n          \"closed_at\": null,\n          \"departments\": [\n            {\n              \"id\": 237,\n              \"name\": \"Community\",\n              \"external_id\": \"ex-dept-1\"\n            }\n          ],\n          \"offices\": [\n            {\n              \"id\": 54,\n              \"name\": \"New York\",\n              \"location\": \"New York, NY\",\n              \"external_id\": \"ex-office-1\"\n            }\n          ],\n          \"custom_fields\": {\n            \"employment_type\": {\n              \"name\": \"Employment Type\",\n              \"type\": \"single_select\",\n              \"value\": \"Full Time\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Submitting Attachments via Direct Upload (multipart/form-data)\nDESCRIPTION: Example of submitting a resume attachment using direct upload with multipart/form-data content type. This method is specific to cURL and requires the 'resume' field.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_applications.md#2025-04-14_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n\"resume\": \"@/Users/UserName/Documents/resume.pdf\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving the Offer Object Structure in JSON\nDESCRIPTION: This snippet shows the structure of an Offer object as returned by the Greenhouse API. It includes all fields such as offer ID, version, application details, timestamps, status, and custom fields in two different formats.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offers.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 1142785,\n  \"version\": 1,\n  \"application_id\": 91081818,\n  \"job_id\": 84593,\n  \"candidate_id\": 7328851,\n  \"opening\": {\n    \"id\": 2586842,\n    \"opening_id\": \"4-7\",\n    \"status\": \"open\",\n    \"opened_at\": \"2019-05-22T20:58:51.697Z\",\n    \"closed_at\": null,\n    \"application_id\": null,\n    \"close_reason\": null\n  },\n  \"created_at\": \"2018-06-06T20:23:10.378Z\",\n  \"updated_at\": \"2018-06-06T20:23:43.388Z\",\n  \"sent_at\": \"2018-06-07\",\n  \"resolved_at\": \"2018-06-06T20:23:43.387Z\",\n  \"starts_at\": \"2018-07-20\",\n  \"status\": \"accepted\",\n  \"custom_fields\": {\n    \"employment_type\": \"Contractor\",\n    \"favorite_station\": \"The Swan\",\n    \"best_seasons\": null,\n    \"start_date\": \"2004-09-21\",\n    \"willing_to_negotiate\": null,\n    \"salary\": \"Around $100k\",\n    \"notes\": \"This is a note field\"\n  },\n  \"keyed_custom_fields\": {\n    \"time_type\": {\n      \"name\": \"Employment Type\",\n      \"type\": \"single_select\",\n      \"value\": \"Contractor\"\n    },\n    \"favorite_station\": {\n      \"name\": \"Favorite Station\",\n      \"type\": \"single_select\",\n      \"value\": \"The Swan\"\n    },\n    \"best_seasons\": {\n      \"name\": \"Best seasons\",\n      \"type\": \"multi_select\",\n      \"value\": null\n    },\n    \"start_date\": {\n      \"name\": \"Start Date\",\n      \"type\": \"date\",\n      \"value\": \"2004-09-21\"\n    },\n    \"will_negotiate\": {\n      \"name\": \"Willing to negotiate\",\n      \"type\": \"yes_no\",\n      \"value\": null\n    },\n    \"salary\": {\n      \"name\": \"Salary\",\n      \"type\": \"short_text\",\n      \"value\": \"Around $100k\"\n    },\n    \"notes\": {\n      \"name\": \"Notes\",\n      \"type\": \"long_text\",\n      \"value\": \"This is a note field\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Form for Greenhouse Job Application Submission\nDESCRIPTION: An example HTML form for submitting a job application to Greenhouse. This demonstrates how to structure a multipart form with various field types including text inputs, file uploads, checkboxes, and dropdowns. The form includes comments about security considerations regarding API tokens.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_applications.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--\nEXAMPLE FORM BELOW (simplified):\n\nPlease keep in mind that the HTTP Basic Auth API token is a secret key.  Any form posts should be proxied by your own servers.  Any direct post to the /applications POST method would reveal your secret key to anybody that views source--which would be a very bad thing.\n-->\n<form method=\"POST\" action=\"!!REQUEST MUST BE PROXIED ON YOUR SERVERS!!\" enctype='multipart/form-data'>\n  <!-- represents the ID of the job post -->\n  <input type=\"hidden\" name=\"id\" value=\"55555\" />\n  <!-- place the value of the gh_src URL parameter in the field below -->\n  <input type=\"hidden\" name=\"mapped_url_token\" value=\"token12345\" />\n  <label>First Name <input type=\"text\" name=\"first_name\" /></label><br/>\n  <label>Last Name <input type=\"text\" name=\"last_name\" /></label><br/>\n  <label>Email <input type=\"text\" name=\"email\" /></label><br/>\n  <label>Phone <input type=\"text\" name=\"phone\" /></label><br/>\n  <label>Resume <input type=\"file\" name=\"resume\" /></label><br/>\n  <label>Cover Letter <input type=\"file\" name=\"cover_letter\" /></label><br/>\n  <label>LinkedIn Profile <input type=\"text\" name=\"question_5555\" /></label><br/>\n  <label>Some dropdown\n    <select name=\"question_3333\">\n      <option></option>\n      <option value=\"1\">Yes</option>\n      <option value=\"0\">No</option>\n    </select>\n  </label><br/>\n  <label>Multi select with checkboxes<br/>\n    <label><input type=\"checkbox\" name=\"question_2222[]\" value=\"2\" /> Red</label><br/>\n    <label><input type=\"checkbox\" name=\"question_2222[]\" value=\"5\" /> Orange</label>\n  </label><br/>\n  <label>\n    <input type=\"checkbox\" name=\"data_compliance[gdpr_consent_given]\" value=\"1\" />\n    <!-- `gdpr_consent_given` to be deprecated. Use if your organization doesn't have single-purpose consent configured, otherwise use separate checkboxes for processing and retention -->\n    <input type=\"checkbox\" name=\"data_compliance[gdpr_processing_consent_given]\" value=\"1\" />\n    <input type=\"checkbox\" name=\"data_compliance[gdpr_retention_consent_given]\" value=\"1\" />\n    {{ORGANIZATION}} has my consent to collect, store, and process my data for the purpose\n    of considering me for employment.\n  </label>\n  <label>\n    <input type=\"checkbox\" name=\"data_compliance[gdpr_demographic_data_consent_given]\" value=\"1\" />\n    By checking this box, I consent to {{ORGANIZATION}} collecting, storing, and processing my responses to the demographic data surveys above.\n  </label>\n  <input type=\"submit\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Create Scheduled Interview Request (JSON)\nDESCRIPTION: Illustrates the JSON structure for creating a new scheduled interview, including application ID, interview details, and interviewer information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"application_id\": 102717462,\n\t\"interview_id\": 8055374,\n\t\"interviewers\": [\n\t\t{ \"user_id\": 102361, \"response_status\": \"accepted\" },\n\t\t{ \"email\": \"lucius.barbarossa.46444@example.com\", \"response_status\": \"declined\" }\n\t],\n\t\"start\": \"2018-12-12T13:15:00Z\",\n\t\"end\": \"2018-12-12T14:15:00Z\",\n\t\"external_event_id\": \"external_event_id_1\",\n\t\"location\": \"Big Conference Room\",\n\t\"video_conferencing_url\": \"http://example.com\"\n}\n```\n\n----------------------------------------\n\nTITLE: Application Updated Event Webhook JSON Schema\nDESCRIPTION: JSON schema for the webhook event that occurs when an application is updated in Greenhouse. Contains comprehensive application details including candidate information, current stage, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_application_events.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"application_updated\",\n  \"payload\": {\n    \"application\": {\n      \"id\": 22202940,\n      \"rejected_at\": null,\n      \"prospect\": false,\n      \"prospect_detail\": {\n        \"prospect_owner\": null,\n        \"prospect_pool\": null,\n        \"prospect_stage\": null\n      },\n      \"status\": \"active\",\n      \"applied_at\": \"2015-12-03T06:31:26Z\",\n      \"last_activity_at\": \"2015-12-03T06:31:26Z\",\n      \"url\": \"https://app.greenhouse.io/people/13857579?application_id=22202940\",\n      \"source\": {\n        \"id\":2,\n        \"name\": \"Jobs page on your website\"\n      },\n      \"credited_to\": {\n        \"id\": 3695,\n        \"email\": \"beauregard.blacksmith.3695@example.com\",\n        \"name\": \"Beauregard Blacksmith\",\n        \"employee_id\": \"123ABC\"\n      },\n      \"rejection_reason\": null,\n      \"rejection_details\": null,\n      \"current_stage\": {\n        \"id\": 711020,\n        \"name\": \"Application Review\",\n        \"interviews\": [\n          {\n            \"id\": 1063685,\n            \"name\": \"Application Review\",\n            \"status\": \"collect_feedback\",\n            \"interview_kit\": {\n              \"url\": \"http://app.greenhouse.io/guides/1063859/people/13857579\",\n              \"content\": \"\",\n              \"questions\":[]\n            },\n            \"interviewers\": []\n          }\n        ]\n      },\n      \"custom_fields\": {\n        \"custom_application_field\": {\n          \"name\": \"Custom Application Field\",\n          \"type\": \"short_text\",\n          \"value\": \"Example\"\n        }\n      },\n      \"candidate\": {\n        \"id\": 13857579,\n        \"first_name\": \"Hank\",\n        \"last_name\": \"Von Diablo\",\n        \"title\": null,\n        \"company\": null,\n        \"created_at\": \"2015-12-03T06:31:26Z\",\n        \"external_id\": null,\n        \"photo_url\": null,\n        \"url\": \"https://app.greenhouse.io/people/13857579\",\n        \"is_private\": false,\n        \"can_email\": true,\n        \"phone_numbers\": [\n          {\n            \"value\": \"330-281-8004\",\n            \"type\": \"other \"\n          }\n        ],\n        \"email_addresses\": [\n          {\n            \"value\": \"hank.von diablo.13857579@example.com\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"addresses\": [],\n        \"website_addresses\": [\n          {\n            \"value\": \"http://www.example.com/\",\n            \"type\": \"other\"\n          }\n        ],\n        \"social_media_addresses\": [\n          {\n            \"value\": \"https://twitter.com/TheRock\"\n          }\n        ],\n        \"educations\": [],\n        \"recruiter\":null,\n        \"coordinator\": null,\n        \"attachments\":[],\n        \"tags\":[],\n        \"custom_fields\": {\n          \"current_salary\": {\n            \"name\": \"Current Salary\",\n            \"type\": \"short_text\",\n            \"value\": null\n          },\n          \"desired_salary\": {\n            \"name\": \"Desired Salary\",\n            \"type\": \"short_text\",\n            \"value\":null\n          }\n        }\n      },\n      \"jobs\": []\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Scheduled Interview (Shell)\nDESCRIPTION: Shows how to create a new scheduled interview using a POST request to the Greenhouse API, including necessary headers and JSON payload structure.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/scheduled_interviews'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Candidate Update Webhook Response\nDESCRIPTION: JSON payload structure when a candidate or prospect's information is updated in Greenhouse. Contains comprehensive candidate details including contact information, employment history, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"update_candidate\",\n  \"payload\": {\n    \"candidate\": {\n      \"id\": 15696179,\n      \"first_name\": \"Ronald\",\n      \"last_name\": \"Ronnie\",\n      \"title\": \"Director of Strategic Initiatives\",\n      \"company\": \"Example\",\n      \"created_at\": \"2016-08-23T17:51:27Z\",\n      \"external_id\": \"946aa514658\",\n      \"photo_url\": null,\n      \"url\": \"https://app.greenhouse.io/people/15696179\",\n      \"phone_numbers\": [\n        {\n          \"value\": \"911\",\n          \"type\": \"mobile\"\n        }\n      ],\n      \"email_addresses\": [\n        {\n          \"value\": \"123456email@email.com\",\n          \"type\": \"work\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"value\": \"99-99 5th Ave.\\nNew York, NY 101-11\",\n          \"type\": \"home\"\n        }\n      ],\n      \"website_addresses\": [\n        {\n          \"value\": \"google.com\",\n          \"type\": \"personal\"\n        }\n      ],\n      \"social_media_addresses\": [\n        {\n          \"value\": \"@ronaldronnie99999\"\n        }\n      ],\n      \"educations\": [\n        {\n          \"school_name\": \"Harvard University\",\n          \"degree\": \"Bachelor's Degree\",\n          \"discipline\": \"Information Systems\",\n          \"start_date\": \"01/01/2012\",\n          \"end_date\": \"01/01/2016\"\n        }\n      ],\n      \"employments\": [\n        {\n          \"company_name\": \"Greenhouse\",\n          \"title\": \"Engineer\",\n          \"start_date\": \"01/01/2012\",\n          \"end_date\": \"01/01/2016\"\n        }\n      ],\n      \"recruiter\": {\n        \"id\": 169779,\n        \"email\": \"hank.hollandaise.169779@example.com\",\n        \"name\": \"Hank Hollandaise\",\n        \"employee_id\": \"123ABC\"\n      },\n      \"coordinator\": {\n        \"id\": 83637,\n        \"email\": \"sterling.kang.83637@example.com\",\n        \"name\": \"Sterling Kang\",\n        \"employee_id\": \"456DEF\"\n      },\n      \"attachments\": [\n        {\n          \"filename\": \"resumeA.pdf\",\n          \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n          \"type\": \"resume\"\n        },\n        {\n          \"filename\": \"resumeB.pdf\",\n          \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n          \"type\": \"resume\"\n        }\n      ],\n      \"tags\": [\n        \"foo\",\n        \"File Import\"\n      ],\n      \"custom_fields\": {\n        \"current_salary\": {\n          \"name\": \"Current Salary\",\n          \"type\": \"short_text\",\n          \"value\": null\n        },\n        \"desired_salary\": {\n          \"name\": \"Desired Salary\",\n          \"type\": \"short_text\",\n          \"value\": null\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Tracking Link with Greenhouse API using cURL\nDESCRIPTION: This snippet demonstrates how to create a tracking link for a specific job using a POST request to the Greenhouse API. It includes the necessary headers for authorization and content type.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_tracking_link.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://api.greenhouse.io/v1/partner/tracking_link'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n-H \"Content-Type: application/json\"\n```\n\n----------------------------------------\n\nTITLE: Application Creation Response in Greenhouse API (JSON)\nDESCRIPTION: Example JSON response structure when creating a new application. Includes application details, candidate info, and job specifics.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 38776620,\n  \"candidate_id\": 15803530,\n  \"prospect\": false,\n  \"applied_at\": \"2016-11-08T19:50:49.746Z\",\n  \"rejected_at\": null,\n  \"last_activity_at\": \"2016-11-04T19:46:40.377Z\",\n  \"source\": {\n    \"id\": 7,\n    \"public_name\": \"Indeed\"\n  },\n  \"credited_to\": {\n        \"id\": 770,\n        \"first_name\": \"Moon\",\n        \"last_name\": \"Colorado\",\n        \"name\": \"Moon Colorado\",\n        \"employee_id\": null\n    },\n  \"rejection_reason\": null,\n  \"rejection_details\": null,\n  \"jobs\": [\n    {\n      \"id\": 266926,\n      \"name\": \"Construction Project Manager\"\n    }\n  ],\n  \"job_post_id\": null,\n  \"status\": \"active\",\n  \"current_stage\": {\n    \"id\": 1945557,\n    \"name\": \"Application Review\"\n  },\n  \"answers\": [],\n  \"custom_fields\": {\n    \"birthday\": \"1992-01-27\",\n    \"bio\": \"This is my bio\"\n  },\n  \"prospective_office\": null,\n  \"prospective_department\": null,\n  \"prospect_detail\": {\n    \"prospect_pool\": null,\n    \"prospect_stage\": null,\n    \"prospect_owner\": null\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Hire Application Request Body (JSON)\nDESCRIPTION: This JSON structure represents the request body for hiring an application. It includes optional parameters such as start date, opening ID, and close reason ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"start_date\": \"2017-03-15\",\n  \"opening_id\": 454,\n  \"close_reason_id\": 43432\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Candidates or Prospects using Greenhouse API\nDESCRIPTION: This snippet shows how to create new candidates or prospects using the Greenhouse API. It includes the API endpoint, required headers, and an example request and response with detailed parameters.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_candidates.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://api.greenhouse.io/v1/partner/candidates'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n-H \"Content-Type: application/json\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"prospect\": \"true\",\n\t\"first_name\": \"Harry\",\n\t\"last_name\": \"Potter\",\n\t\"company\": \"Hogwarts\",\n\t\"title\": \"Student\",\n\t\"resume\": \"https://hogwarts.com/resume\",\n\t\"phone_numbers\": [\n\t\t{\n\t\t\t\"phone_number\": \"123-456-7890\",\n\t\t\t\"type\": \"home\"\n\t\t}\n\t],\n\t\"emails\": [\n\t\t{\n\t\t\t\"email\": \"hpotter@hogwarts.edu\",\n\t\t\t\"type\": \"other\"\n\t\t}\n\t],\n\t\"social_media\": [\n\t\t{\n\t\t\t\"url\": \"https://twitter.com/hp\"\n\t\t}\n\t],\n\t\"websites\": [\n\t\t{\n\t\t\t\"url\": \"https://harrypotter.com\",\n\t\t\t\"type\": \"blog\"\n\t\t}\n\t],\n\t\"addresses\": [\n\t\t{\n\t\t\t\"address\": \"4 Privet Dr\",\n\t\t\t\"type\": \"home\"\n\t\t}\n\t],\n\t\"job_id\": 12345,\n\t\"external_id\": \"24680\",\n\t\"notes\": \"Good at Quiddich\",\n\t\"prospect_pool_id\": 123,\n\t\"prospect_pool_stage_id\": 456,\n\t\"prospect_owner_email\": \"prospect_owners_email@example.com\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n\"id\": 12345,\n\"application_id\": 17681532,\n\"external_id\": \"24680\",\n\"profile_url\": \"https://app.greenhouse.io/people/17681532?application_id=26234709\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Fields Structure in JSON for Greenhouse API\nDESCRIPTION: This snippet demonstrates the structure and format of various custom field types in the Greenhouse API. It includes examples of short text, long text, boolean, single select, multi-select, currency, compensation, currency range, number, number range, date, URL, and user field types.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_introduction.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"custom_fields\": {\n        \"short_text_field\": {\n            \"name\": \"Short Text Field\",\n            \"type\": \"short_text\",\n            \"value\": \"A text string with fewer than 255 characters.\"\n        },\n        \"long_text_field\": {\n            \"name\": \"Long Text Field\",\n            \"type\": \"long_text\",\n            \"value\": \"A text string of any length.\"\n        },\n        \"boolean_field\": {\n            \"name\": \"Boolean Field\",\n            \"type\": \"boolean\",\n            \"value\": true\n        },\n        \"single_select\": {\n            \"name\": \"Single Select Field\",\n            \"type\": \"single_select\",\n            \"value\": \"The text of selected custom field option.\"\n        },\n        \"multi_select\": {\n            \"name\": \"Multi Select Field\",\n            \"type\": \"multi_select\",\n            \"value\": [\n                \"An array containing the text of\",\n                \"all the selected\",\n                \"custom field options\"\n            ]\n        },\n        \"currency_field\": {\n            \"name\": \"Currency Field\",\n            \"type\": \"currency\",\n            \"value\": {\n                \"amount\": 80000,\n                \"unit\": \"USD\"\n            }\n        },\n        \"compensation_field\": {\n            \"name\": \"Compensation Field\",\n            \"type\": \"currency\",\n            \"value\": {\n                \"amount\": 80000,\n                \"unit\": \"USD\"\n            },\n            \"compensation_type\": \"base\",\n            \"frequency\": \"annually\",\n            \"rationale\": \"base rationale\"\n        },\n        \"currency_range_field\": {\n            \"name\": \"Currency Range Field\",\n            \"type\": \"currency_range\",\n            \"value\": {\n                \"min_value\": 80000,\n                \"max_value\": 150000,\n                \"unit\": \"USD\"\n            }\n        },\n        \"number_field\": {\n            \"name\": \"Number Field\",\n            \"type\": \"number\",\n            \"value\": 125\n        },\n        \"number_range_field\": {\n            \"name\": \"Number Range Field\",\n            \"type\": \"number_range\",\n            \"value\": {\n                \"min_value\": 80000,\n                \"max_value\": 150000\n            }\n        },\n        \"date_field\": {\n            \"name\": \"Date Field\",\n            \"type\": \"date\",\n            \"value\": \"YYYY-MM-DD\"\n        },\n        \"url_field\": {\n            \"name\": \"URL Field\",\n            \"type\": \"url\",\n            \"value\": \"https://www.thisisjustatextvalue.com\"\n        },\n        \"user_field\": {\n            \"name\": \"User Field\",\n            \"type\": \"user\",\n            \"value\": {\n                \"user_id\": 94354,\n                \"name\": \"Ben Smith\",\n                \"email\": \"ben@example.com\",\n                \"employee_id\": \"bs0615\"\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Candidate Data using Greenhouse API\nDESCRIPTION: This snippet demonstrates how to retrieve candidate data using the Greenhouse API. It includes the API endpoint, required headers, and an example request and response.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_candidates.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://api.greenhouse.io/v1/partner/candidates'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"candidate_ids\": 17681532\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"id\": 17681532,\n\t\"name\": \"Harry Potter\",\n\t\"external_id\": \"24680\",\n\t\"applications\": [\n\t\t{\n\t\t\t\"id\": 59724,\n\t\t\t\"job\": \"Auror\",\n\t\t\t\"status\": \"Active\",\n\t\t\t\"stage\": \"Application Review\",\n\t\t\t\"profile_url\": \"https://app.greenhouse.io/people/17681532?application_id=26234709\"\n\t\t}\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Job Post Data\nDESCRIPTION: API request to get job post details including title, location, content, and application questions. Returns comprehensive job post information including demographics and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_posts.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/jobs/{id}/job_post'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 123,\n    \"title\": \"Software Engineer\",\n    \"location\": {\n      \"id\": 123456,\n      \"name\": \"New York, NY\",\n      \"office_id\": null,\n      \"job_post_custom_location_id\": 303145,\n      \"job_post_location_type\": {\n        \"id\": 1,\n        \"name\": \"Free Text\"\n      }\n    },\n    \"internal\": true,\n    \"external\": false,\n    \"active\": true,\n    \"live\": true,\n    \"first_published_at\": \"2023-04-03T18:06:18Z\",\n    \"job_id\": 1234,\n    \"content\": \"<p>We're looking for the next big innovator.</p>\",\n    \"internal_content\": \"<p>Apply today!</p>\",\n    \"updated_at\": \"2024-11-21T15:39:24Z\",\n    \"created_at\": \"2023-04-01T17:56:19Z\",\n    \"demographic_question_set_id\": 999,\n    \"questions\": [...]}}\n```\n\n----------------------------------------\n\nTITLE: Converting Prospect to Candidate Using Greenhouse API (Shell)\nDESCRIPTION: API request to convert a prospect application to a candidate application. Requires the application ID, target job ID, and optionally an initial stage ID. Will return an error if used on a non-prospect application.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/applications/{id}/convert_prospect'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Reject Application Request Body (JSON)\nDESCRIPTION: This JSON structure represents the request body for rejecting an application. It includes parameters such as rejection reason ID, notes, and optional rejection email details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rejection_reason_id\": 815,\n  \"notes\": \"The prospect is not qualified for this position.\",\n  \"rejection_email\": {\n    \"send_email_at\": \"2014-03-26T20:11:39Z\",\n    \"email_template_id\": 42\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Jobs with Detailed Content in the Greenhouse API\nDESCRIPTION: This endpoint shows an enhanced job listing when the content=true parameter is used. In addition to basic job information, it includes the full job description, department information, and office details for each job post.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_jobs.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"jobs\": [\n    {\n      \"id\":127817,\n      \"internal_job_id\":144381,\n      \"title\":\"Vault Designer\",\n      \"updated_at\":\"2016-01-14T10:55:28-05:00\",\n      \"requisition_id\": \"50\",\n      \"location\":{\n        \"name\":\"NYC\"\n      },\n      \"absolute_url\":\"https://boards.greenhouse.io/vaulttec/jobs/127817\",\n      \"metadata\":null,\n      \"content\":\"This is the job description. &amp;lt;p&amp;gt;Any HTML included through the hosted job application editor will be automatically converted into corresponding HTML entities.&amp;lt;/p&amp;gt;\",\n      \"departments\":[\n        {\n          \"id\":13583,\n          \"name\":\"Department of Departments\",\n          \"parent_id\":null,\n          \"child_ids\":[\n            13585\n          ]\n        }\n      ],\n      \"offices\":[\n        {\n          \"id\":8304,\n          \"name\":\"East Coast\",\n          \"location\":\"United States\",\n          \"parent_id\":null,\n          \"child_ids\":[\n            8787\n          ]\n        },\n        {\n          \"id\":8787,\n          \"name\":\"New York City\",\n          \"location\":\"New York, NY, United States\",\n          \"parent_id\":8304,\n          \"child_ids\":[\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"total\": 1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Offer for an Application using Greenhouse API\nDESCRIPTION: This endpoint fetches the current offer for a specific application. It returns detailed information about the offer including custom fields and status.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offers.md#2025-04-14_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/applications/{application_id}/offers/current_offer' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 1142768,\n  \"version\": 2,\n  \"application_id\": 91078894,\n  \"job_id\": 837749,\n  \"candidate_id\": 7327285,\n  \"opening\": {\n    \"id\": 2586842,\n    \"opening_id\": \"4-7\",\n    \"status\": \"open\",\n    \"opened_at\": \"2019-05-22T20:58:51.697Z\",\n    \"closed_at\": null,\n    \"application_id\": null,\n    \"close_reason\": null\n  },\n  \"created_at\": \"2018-06-06T20:21:29.911Z\",\n  \"updated_at\": \"2018-06-06T20:24:30.707Z\",\n  \"sent_at\": \"2018-06-06\",\n  \"resolved_at\": null,\n  \"starts_at\": \"2018-06-30\",\n  \"status\": \"unresolved\",\n  \"custom_fields\": {\n    \"employment_type\": \"Contractor\",\n    \"favorite_station\": \"The Swan\",\n    \"best_seasons\": null,\n    \"start_date\": null,\n    \"willing_to_negotiate\": null,\n    \"salary\": \"$123,000\",\n    \"notes\": \"This is a note field\"\n  },\n  \"keyed_custom_fields\": {\n    \"time_type\": {\n      \"name\": \"Employment Type\",\n      \"type\": \"single_select\",\n      \"value\": \"Contractor\"\n    },\n    \"favorite_station\": {\n      \"name\": \"Favorite Station\",\n      \"type\": \"single_select\",\n      \"value\": \"The Swan\"\n    },\n    \"best_seasons\": {\n      \"name\": \"Best seasons\",\n      \"type\": \"multi_select\",\n      \"value\": null\n    },\n    \"start_date\": {\n      \"name\": \"Start Date\",\n      \"type\": \"date\",\n      \"value\": null\n    },\n    \"will_negotiate\": {\n      \"name\": \"Willing to negotiate\",\n      \"type\": \"yes_no\",\n      \"value\": null\n    },\n    \"salary\": {\n      \"name\": \"Salary\",\n      \"type\": \"currency\",\n      \"value\": \"$123,000\"\n    },\n    \"notes\": {\n      \"name\": \"Notes\",\n      \"type\": \"long_text\",\n      \"value\": \"This is a note field\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Activity Feed JSON Structure in Greenhouse API\nDESCRIPTION: This snippet shows the JSON structure of the activity feed object returned by the Greenhouse API. It includes notes, emails, and activities associated with a candidate.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_activity_feed.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notes\": [\n    {\n      \"id\": 123456,\n      \"created_at\": \"2014-03-26T20:11:40Z\",\n      \"body\": \"Very mysterious.\",\n      \"user\": {\n        \"id\": 512,\n        \"first_name\": \"Sayid\",\n        \"last_name\": \"Jarrah\",\n        \"name\": \"Sayid Jarrah\",\n        \"employee_id\": \"12345\"\n      },\n      \"private\": false,\n      \"visiblity\": \"public\",\n      \"visibility\": \"public\"\n    }\n  ],\n  \"emails\": [\n    {\n      \"id\": 234675,\n      \"created_at\": \"2014-04-01T15:55:06Z\",\n      \"subject\": \"Regarding your application\",\n      \"body\": \"Hey John,  just wanted to touch base!\",\n      \"to\": \"john.locke@example.com\",\n      \"from\": \"boone.carlyle@example.com\",\n      \"cc\": \"sam.smith@example.com\",\n      \"user\": {\n        \"id\": 214,\n        \"first_name\": \"Boone\",\n        \"last_name\": \"Carlyle\",\n        \"name\": \"Boone Carlyle\",\n        \"employee_id\": \"67890\"\n      }\n    }\n  ],\n  \"activities\": [\n    {\n      \"id\": 6756789,\n      \"created_at\": \"2014-04-01T15:55:29Z\",\n      \"subject\": \"Candidate Rejected\",\n      \"body\": \"Reason: Lacking hustle\\n\\nThis candidate turned out to be problematic for us...\",\n      \"user\": {\n        \"id\": 214,\n        \"first_name\": \"Boone\",\n        \"last_name\": \"Carlyle\",\n        \"name\": \"Boone Carlyle\",\n        \"employee_id\": \"67890\"\n      }\n    },\n    {\n      \"id\": 6757869,\n      \"created_at\": \"2014-03-26T20:26:38Z\",\n      \"subject\": \"Candidate Stage Change\",\n      \"body\": \"John Locke was moved into Recruiter Phone Screen for Accounting Manager on 03/27/2014 by Boone Carlyle\",\n      \"user\": {\n        \"id\": 214,\n        \"first_name\": \"Boone\",\n        \"last_name\": \"Carlyle\",\n        \"name\": \"Boone Carlyle\",\n        \"employee_id\": \"67890\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: User Creation Request Body Structure in Greenhouse API (JSON)\nDESCRIPTION: JSON structure for creating a new user in Greenhouse. Includes required fields like name and email, plus optional fields for employee ID, office and department associations, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"first_name\": \"Bob\",\n  \"last_name\": \"Smith\",\n  \"email\": \"bob@email.org\",\n  \"send_email_invite\": true,\n  \"employee_id\": \"ABC12345\",\n  \"office_ids\": [47013],\n  \"department_ids\": [25907],\n  \"custom_fields\": [\n    {\n      \"name_key\": \"shirt_size\",\n      \"value\": \"Medium\"\n    },\n    {\n      \"id\": 12345,\n      \"value\": \"Laptop\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Request Body for Converting Prospect to Candidate (JSON)\nDESCRIPTION: JSON request body for converting a prospect to a candidate. Requires job_id parameter to specify the destination job, and optional initial_stage_id to determine the starting stage.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"job_id\": 123456,\n  \"initial_stage_id\": 234567\n}\n```\n\n----------------------------------------\n\nTITLE: Update Application via PATCH Request - Shell & JSON\nDESCRIPTION: API endpoint to update an existing application's details including source, referrer and custom fields. Requires authentication and user ID for auditing. Returns updated application object.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/applications/{id}'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"source_id\": 16,\n  \"referrer\": {\n    \"type\": \"id\",\n    \"value\": 123\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Submitting Job Application via cURL with JSON Payload\nDESCRIPTION: Example showing how to submit a job application to Greenhouse using cURL with a JSON-encoded body. This approach is an alternative to multipart form-data when not uploading actual files. It includes structured data for applicant information, education history, employment history, and demographic answers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_applications.md#2025-04-14_snippet_2\n\nLANGUAGE: curl\nCODE:\n```\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\" \\\n  -d '{\n    \"first_name\": \"Sammy\",\n    \"last_name\": \"McSamson\",\n    \"email\": \"sammy@example.com\",\n    \"phone\": \"3337778888\",\n    \"location\": \"110 5th Ave New York, NY, 10011\",\n    \"latitude\": \"40.7376671\",\n    \"longitude\": \"-73.9929196\",\n    \"resume_text\": \"I have many years of experience as an expert basket weaver...\",\n    \"cover_letter_text\": \"I have a very particular set of skills, skills I have acquired over a very long career. Skills that make me...\",\n    \"gender\": 2,\n    \"race\": 4,\n    \"veteran_status\": 3,\n    \"disability_status\": 3,\n    \"question_12345\": \"Here is some short text for the first question\",\n    \"question_12346\": 1,\n    \"question_12347\": 5869311,\n    \"question_12348\": [5869319,5869317],\n    \"question_12349_url\": \"http://dropbox.com/dl/attachment.pdf\",\n    \"question_12349_url_filename\": \"attachment.pdf\",\n    \"question_12350_content\": \"SGVsbG8sIHdvcmxkIQo=\",\n    \"question_12350_content_filename\": \"something_else.txt\",\n    \"educations\": [\n      {\n        \"school_name_id\" : \"1403524\",\n        \"degree_id\": \"1403534\",\n        \"discipline_id\": \"1403605\",\n        \"start_date\": { \"month\": \"1\", \"year\": \"1989\"},\n        \"end_date\": { \"month\": \"2\", \"year\": \"1990\"}\n      },\n      {\n        \"school_name_id\" : \"1401063\",\n        \"degree_id\": \"1403525\",\n        \"discipline_id\": \"1403608\",\n        \"start_date\": { \"month\": \"1\", \"year\": \"2011\"},\n        \"end_date\": { \"month\": \"2\", \"year\": \"2012\"}\n      }\n    ],\n    \"employments\": [\n      {\n        \"company_name\": \"Business Co.\",\n        \"title\": \"Sales Manager\",\n        \"start_date\": {\n          \"month\": \"1\",\n          \"year\": \"2016\"\n        },\n        \"end_date\": {\n          \"month\": \"2\",\n          \"year\": \"2018\"\n        },\n        \"current\": \"false\"\n      }\n    ],\n    \"mapped_url_token\":\"token12345\",\n    \"demographic_answers\":[\n      {\n        \"question_id\": 87,\n        \"answer_options\": [\n          {\n            \"answer_option_id\": 194\n          }\n        ]\n      },\n      {\n        \"question_id\": 88,\n        \"answer_options\": [\n          {\n            \"answer_option_id\": 212,\n            \"text\": \"Free-form Answer\"\n          }\n        ]\n      }\n    ]\n  },\n  \"data_compliance\": {\n    \"gdpr_consent_given\": true, // To be deprecated. Use if your organization doesn't have single-purpose consent configured, otherwise use separate values for processing and retention\n    \"gdpr_processing_consent_given\": true\n    \"gdpr_retention_consent_given\": true\n    \"gdpr_demographic_data_consent_given\": true\n  }' \\\n  \"https://boards-api.greenhouse.io/v1/boards/very_awesome_inc/jobs/127817\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Scheduled Interviews for a Specific Application\nDESCRIPTION: API call to list all scheduled interviews for a specific application ID with curl command example and JSON response. Includes all available query parameters for filtering and pagination.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/applications/{id}/scheduled_interviews'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 9128481,\n    \"application_id\": 4684156,\n    \"external_event_id\": \"event123\",\n    \"start\": {\n      \"date_time\": \"2014-03-26T22:15:00.000Z\"\n    },\n    \"end\": {\n      \"date_time\": \"2014-03-26T22:30:00.000Z\"\n    },\n    \"location\": \"Big Conference Room\",\n    \"video_conferencing_url\": \"http://example.com\",\n    \"status\": \"awaiting_feedback\",\n    \"created_at\": \"2016-02-10T14:31:51.019Z\",\n    \"updated_at\": \"2016-05-23T20:43:11.679Z\",\n    \"interview\": {\n      \"id\": 7001,\n      \"name\": \"Culture Fit\"\n    },\n    \"organizer\": {\n      \"id\": 2000,\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Shepard\",\n      \"name\": \"Jack Shepard\",\n      \"employee_id\": \"12345\"\n    },\n    \"interviewers\": [\n      {\n        \"id\": 4080,\n        \"employee_id\": \"employee123\",\n        \"name\": \"Kate Austen\",\n        \"email\": \"kate.austen@example.com\",\n        \"response_status\": \"needs_action\",\n        \"scorecard_id\": 11274\n      }\n    ]\n  },\n  {\n    \"id\": 9128482,\n    \"application_id\": 4684156,\n    \"external_event_id\": \"event456\",\n    \"start\": {\n      \"date\": \"2017-08-22\"\n    },\n    \"end\": {\n      \"date\": \"2017-08-23\"\n    },\n    \"location\": \"Small Conference Room\",\n    \"video_conferencing_url\": \"http://example.com\",\n    \"status\": \"complete\",\n    \"interview\": {\n      \"id\": 7002,\n      \"name\": \"Whiteboarding Challenge\"\n    },\n    \"organizer\": {\n      \"id\": 2000,\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Shepard\",\n      \"name\": \"Jack Shepard\",\n      \"employee_id\": \"12345\"\n    },\n    \"interviewers\": [\n      {\n        \"id\": 3412,\n        \"employee_id\": \"employee456\",\n        \"name\": \"Charlie Pace\",\n        \"email\": \"youalleverybody@example.com\",\n        \"response_status\": \"needs_action\",\n        \"scorecard_id\": null\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Scorecard Object Structure in JSON\nDESCRIPTION: This JSON example shows the complete structure of a scorecard object in the Greenhouse API, including candidate information, interviewer details, overall recommendation, attribute ratings, and interview questions with answers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scorecards.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 123,\n  \"updated_at\": \"2016-08-22T19:52:38.384Z\",\n  \"created_at\": \"2016-08-22T19:52:38.384Z\",\n  \"interview\": \"Application Review\",\n  \"interview_step\": {\n    \"id\": 432,\n    \"name\": \"Application Review\"\n  },\n  \"candidate_id\": 1234,\n  \"application_id\": 3456,\n  \"interviewed_at\": \"2016-08-18T16:00:00.000Z\",\n  \"submitted_by\": {\n    \"id\": 4080,\n    \"first_name\": \"Kate\",\n    \"last_name\": \"Austen\",\n    \"name\": \"Kate Austen\",\n    \"employee_id\": \"12345\"\n  },\n  \"interviewer\": {\n    \"id\": 821,\n    \"first_name\": \"Robert\",\n    \"last_name\": \"Robertson\",\n    \"name\": \"Robert Robertson\",\n    \"employee_id\": \"100377\"\n  },\n  \"submitted_at\": \"2014-03-26T21:59:51Z\",\n  \"overall_recommendation\": \"yes\",\n  \"attributes\": [\n    {\n      \"name\": \"Communication\",\n      \"type\": \"Skills\",\n      \"note\": \"What a great communicator!\",\n      \"rating\": \"yes\"\n    },\n    {\n      \"name\": \"Adaptable\",\n      \"type\": \"Skills\",\n      \"note\": null,\n      \"rating\": \"yes\"\n    },\n    {\n      \"name\": \"Relationship Manager\",\n      \"type\": \"Skills\",\n      \"note\": null,\n      \"rating\": \"mixed\"\n    },\n    {\n      \"name\": \"Project Management\",\n      \"type\": \"Qualifications\",\n      \"note\": null,\n      \"rating\": \"mixed\"\n    },\n    {\n      \"name\": \"Problem Solver\",\n      \"type\": \"Qualifications\",\n      \"note\": null,\n      \"rating\": \"no\"\n    },\n    {\n      \"name\": \"Analytical\",\n      \"type\": \"Skills\",\n      \"note\": null,\n      \"rating\": \"definitely_not\"\n    }\n  ],\n  \"ratings\": {\n    \"definitely_not\": [\n      \"Analytical\"\n    ],\n    \"no\": [\n      \"Problem Solver\"\n    ],\n    \"mixed\": [\n      \"Relationship Manager\",\n      \"Project Management\"\n    ],\n    \"yes\": [\n      \"Communication\",\n      \"Adaptable\"\n    ],\n    \"strong_yes\": []\n  },\n  \"questions\": [\n    {\n      \"id\": null,\n      \"question\": \"Key Take-Aways\",\n      \"answer\": \"Seems like a decent candidate.\"\n    },\n    {\n      \"id\": null,\n      \"question\": \"Private Notes\",\n      \"answer\": \"Seems like a decent candidate.\"\n    },\n    {\n      \"id\": 1234567,\n      \"question\": \"Does the candidate have experience designing APIs?\",\n      \"answer\": \"Yes\"\n    },\n    {\n      \"id\": 1234568,\n      \"question\": \"Which team would you suggest for this candidate?\",\n      \"answer\": \"Alpha Team\"\n    },\n    {\n      \"id\": 1234569,\n      \"question\": \"Where would the candidate be willing to work?\",\n      \"answer\": \"London, Dubai, San Diego\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Job Openings API Request\nDESCRIPTION: cURL command demonstrating how to create new job openings via the Greenhouse API\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/jobs/{job_id}/openings'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Transfer Application to Different Job - Shell & JSON\nDESCRIPTION: API endpoint to move an application to a different job and optionally a specific stage. Requires new job ID and optionally new stage ID. Returns updated application object.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/applications/{id}/transfer_to_job'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"new_job_id\": 123456,\n  \"new_stage_id\": 234567\n}\n```\n\n----------------------------------------\n\nTITLE: Update Scheduled Interview Request (JSON)\nDESCRIPTION: Shows the JSON structure for updating an existing scheduled interview, including changes to interviewers, start and end times, and location.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"interviewers\": [\n\t\t{ \"user_id\": 102361, \"response_status\": \"needs_action\" },\n\t\t{ \"email\": \"lucius.barbarossa.46444@example.com\", \"response_status\": \"declined\" }\n\t],\n\t\"start\": \"2018-11-12T13:15:00Z\",\n\t\"end\": \"2018-11-12T14:15:00Z\",\n\t\"external_event_id\": \"external_event_id_0\",\n\t\"location\": \"Dunder Mifflin, Scranton\",\n\t\"video_conferencing_url\": \"http://example.com\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Applications API Request and Response\nDESCRIPTION: This snippet demonstrates how to list all applications in a Greenhouse organization using the API. It includes both the curl command for making the GET request and an example JSON response showing application data, including both regular and prospect applications.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X GET 'https://harvest.greenhouse.io/v1/applications'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 69306314,\n    \"candidate_id\": 57683957,\n    \"prospect\": false,\n    \"applied_at\": \"2017-09-29T12:56:05.244Z\",\n    \"rejected_at\": null,\n    \"last_activity_at\": \"2017-09-29T13:00:28.038Z\",\n    \"location\": {\n        \"address\": \"New York, New York, USA\"\n    },\n    \"source\": {\n        \"id\": 2,\n        \"public_name\": \"Jobs page on your website\"\n    },\n    \"credited_to\": {\n      \"id\": 4080,\n      \"first_name\": \"Kate\",\n      \"last_name\": \"Austen\",\n      \"name\": \"Kate Austen\",\n      \"employee_id\": \"12345\"\n    },\n    \"rejection_reason\": null,\n    \"rejection_details\": null,\n    \"jobs\": [\n        {\n            \"id\": 107761,\n            \"name\": \"UX Designer - Boston\"\n        }\n    ],\n    \"job_post_id\": 123,\n    \"status\": \"active\",\n    \"current_stage\": {\n        \"id\": 767358,\n        \"name\": \"Application Review\"\n    },\n    \"answers\": [\n        {\n            \"question\": \"How did you hear about this job?\",\n            \"answer\": \"Online Research\"\n        },\n        {\n            \"question\": \"Website\",\n            \"answer\": \"mytestwebsite.com\"\n        }\n    ],\n    \"prospective_office\": null,\n    \"prospective_department\": null,\n    \"prospect_detail\": {\n        \"prospect_pool\": null,\n        \"prospect_stage\": null,\n        \"prospect_owner\": null\n    },\n    \"custom_fields\": {\n        \"application_custom_test\": \"Option 1\"\n    },\n    \"keyed_custom_fields\": {\n        \"application_custom_test\": {\n            \"name\": \"Application Custom Test\",\n            \"type\": \"single_select\",\n            \"value\": \"Option 1\"\n        }\n    },\n    \"attachments\": [\n        {\n            \"filename\": \"John_Locke_Offer_Packet_09_27_2017.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"offer_packet\",\n            \"created_at\": \"2020-09-27T18:45:27.137Z\"\n        }\n    ]\n},\n{\n    \"id\": 69306509,\n    \"candidate_id\": 57683957,\n    \"prospect\": true,\n    \"applied_at\": \"2017-09-29T13:00:04.058Z\",\n    \"rejected_at\": null,\n    \"last_activity_at\": \"2017-09-29T13:08:19.111Z\",\n    \"location\": null,\n    \"source\": {\n        \"id\": 100674,\n        \"public_name\": \"Campus Job Fair\"\n    },\n    \"credited_to\": {\n        \"id\": 566819,\n        \"first_name\": \"Bob\",\n        \"last_name\": \"Smith\",\n        \"name\": \"Bob Smith\",\n        \"employee_id\": \"ABC12345\"\n    },\n    \"rejection_reason\": null,\n    \"rejection_details\": null,\n    \"jobs\": [\n        {\n            \"id\": 224587,\n            \"name\": \"Product Manager \"\n        },\n        {\n            \"id\": 109322,\n            \"name\": \"Web Developer \"\n        }\n    ],\n    \"job_post_id\": null,\n    \"status\": \"hired\",\n    \"current_stage\": null,\n    \"answers\": [\n      {\n          \"question\": \"How did you hear about this job?\",\n          \"answer\": \"Online Research\"\n      },\n      {\n          \"question\": \"Website\",\n          \"answer\": \"mytestwebsite.com\"\n      }\n    ],\n    \"prospective_office\": {\n      \"primary_contact_user_id\": null,\n      \"parent_id\": null,\n      \"name\": \"New York\",\n      \"location\": {\n        \"name\": \"New York, NY\"\n      },\n      \"id\": 59213,\n      \"external_id\": null,\n      \"child_ids\": []\n    },\n    \"prospective_department\": {\n      \"parent_id\": null,\n      \"name\": \"Marketing\",\n      \"id\": 9024,\n      \"external_id\": null,\n      \"child_ids\": []\n    },\n    \"prospect_detail\": {\n        \"prospect_pool\": {\n            \"id\": 227,\n            \"name\": \"Opted In: In-Person Event\"\n        },\n        \"prospect_stage\": {\n            \"id\": 826,\n            \"name\": \"In Discussion\"\n        },\n        \"prospect_owner\": {\n            \"id\": 92120,\n            \"name\": \"Greenhouse Admin\"\n        }\n    },\n    \"custom_fields\": {\n        \"application_custom_test\": \"Option 1\"\n    },\n    \"keyed_custom_fields\": {\n        \"application_custom_test\": {\n            \"name\": \"Application Custom Test\",\n            \"type\": \"single_select\",\n            \"value\": \"Option 1\"\n        }\n    },\n    \"attachments\": [\n        {\n            \"filename\": \"Jack_Smith_Offer_Packet_09_27_2020.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"offer_packet\",\n            \"created_at\": \"2020-09-27T18:45:27.137Z\"\n        }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Handling Job Post Created Event in Greenhouse API (JSON)\nDESCRIPTION: This snippet demonstrates the webhook payload structure when a job post or prospect post is created in Greenhouse. It includes details about the post such as title, location, content, and associated questions. The presence of a 'job_id' field determines whether it's a job post or a prospect post.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_job_events.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"job_post_created\",\n  \"payload\": {\n    \"id\": 1815002,\n    \"title\": \"A Cool Job\",\n    \"location\": \"New York, NY\",\n    \"content\": \"<p>Hey, this is a neat job. You should apply!</p>\",\n    \"internal_content\": null,\n    \"updated_at\": \"2017-10-12T15:06:32.691Z\",\n    \"job_id\": 1842002,\n    \"external\": true,\n    \"internal\": false,\n    \"live\": false,\n    \"questions\": [\n      {\n        \"required\": false,\n        \"private\": false,\n        \"label\": \"LinkedIn Profile\",\n        \"type\": \"input_text\",\n        \"values\": []\n      },\n      {\n        \"required\": false,\n        \"private\": false,\n        \"label\": \"Website\",\n        \"type\": \"input_text\",\n        \"values\": []\n      },\n      {\n        \"required\": false,\n        \"private\": false,\n        \"label\": \"How did you hear about this job?\",\n        \"type\": \"input_text\",\n        \"values\": []\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Job Post Status Update Parameters Schema\nDESCRIPTION: Defines the required parameters for updating a job post's status. The status parameter accepts only 'live' or 'offline' values and is required for all status update requests. This endpoint has separate permissions from other job post properties.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_posts.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"live\" // or \"offline\"\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Job Approved Event in Greenhouse API (JSON)\nDESCRIPTION: This snippet shows the webhook payload structure when a job is approved in Greenhouse. It includes information about the approval flow type and detailed job data. This event is triggered when the final approval is received in a job's approval flow.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_job_events.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"job_approved\",\n  \"payload\": {\n    \"approval_flow\": {\n      \"approval_flow_type\": \"open_job\"\n    },\n    \"job\": {\n      \"id\": 100445,\n      \"name\": \"Assistant Store Manager, NYC\",\n      \"requisition_id\": null,\n      \"notes\": \"<p>Looking for the best!<\\/p>\",\n      \"confidential\": false,\n      \"job_post_id\": 88010,\n      \"status\": \"open\",\n      \"created_by_id\": 273555,\n      \"created_at\": \"2015-08-11T23:02:09Z\",\n      \"opened_at\": \"2015-08-11T23:02:09Z\",\n      \"closed_at\": null,\n      \"departments\": [\n        {\n          \"id\": 74,\n          \"name\": \"Guideshops\",\n          \"external_id\": \"ex-dept-1\"\n        }\n      ],\n      \"offices\": [\n        {\n          \"id\": 104,\n          \"name\": \"New York\",\n          \"location\": \"New York, NY\",\n          \"external_id\": \"ex-office-1\"\n        }\n      ],\n      \"hiring_team\": {\n        \"hiring_managers\": [\n          {\n            \"user_id\": 1234,\n            \"employee_id\": \"abc-123\"\n          }\n        ],\n        \"sourcers\": [],\n        \"recruiters\": [\n          {\n            \"user_id\": 2345,\n            \"employee_id\": null\n          },\n          {\n            \"user_id\": 3456,\n            \"employee_id\": \"abc-234\"\n          }\n        ],\n        \"coordinators\": []\n      },\n      \"openings\": [\n        {\n          \"id\": 1234,\n          \"opening_id\": \"abc-1\",\n          \"custom_fields\": []\n        },\n        {\n          \"id\": 1235,\n          \"opening_id\": \"abc-2\",\n          \"custom_fields\": []\n        }\n      ],\n      \"custom_fields\": {\n        \"bonus\": {\n          \"name\": \"Bonus\",\n          \"type\": \"short_text\",\n          \"value\": null\n        },\n        \"employment_type\": {\n          \"name\": \"Employment Type\",\n          \"type\": \"single_select\",\n          \"value\": null\n        },\n        \"options\": {\n          \"name\": \"Options\",\n          \"type\": \"short_text\",\n          \"value\": null\n        },\n        \"salary\": {\n          \"name\": \"Salary\",\n          \"type\": \"short_text\",\n          \"value\": null\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GET Request for Listing All Job Stages\nDESCRIPTION: Demonstrates how to make a GET request to retrieve all job stages for an organization. The request includes an authorization header and returns a JSON array of job stage objects.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_stages.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/job_stages' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 6001,\n    \"name\": \"Cultural Fit Interview\",\n    \"created_at\": \"2015-11-22T05:31:37.263Z\",\n    \"updated_at\": \"2015-11-22T05:31:37.263Z\",\n    \"job_id\": 12345,\n    \"priority\": 0,\n    \"interviews\": [\n      {\n        \"id\": 7890,\n        \"name\": \"Cultural Fit Interview\",\n        \"schedulable\": true,\n        \"estimated_minutes\": 30,\n        \"default_interviewer_users\": [\n          {\n            \"id\": 821,\n            \"first_name\": \"Robert\",\n            \"last_name\": \"Robertson\",\n            \"name\": \"Robert Robertson\",\n            \"employee_id\": \"100377\"\n          }\n        ],\n        \"interview_kit\": {\n          \"id\": 9124,\n          \"content\": \"<h5>Purpose</h5><span>Determine whether or not the candidate would be a strong fit.</span>\",\n          \"questions\": [\n              {\n                \"id\": 11052,\n                \"question\": \"Is this person really a good fit?\"\n              }\n            ]        \n          }\n        }\n      ]\n    },\n  {\n    \"id\": 6002,\n    \"name\": \"Executive Interview\",\n    \"created_at\": \"2015-11-22T05:31:37.263Z\",\n    \"updated_at\": \"2015-11-22T05:31:37.263Z\",\n    \"job_id\": 34567,\n    \"priority\": 1,\n    \"interviews\": [\n      {\n        \"id\": 7345,\n        \"name\": \"Executive Interview\",\n        \"schedulable\": true,\n        \"estimated_minutes\": 60,\n        \"default_interviewer_users\": [\n          {\n            \"id\": 4080,\n            \"first_name\": \"Kate\",\n            \"last_name\": \"Austen\",\n            \"name\": \"Kate Austen\",\n            \"employee_id\": \"12345\"\n          }\n        ],\n        \"interview_kit\": {\n          \"id\": 9125,\n          \"content\": \"<h5>Purpose</h5><span>Determine whether or not the candidate would be a strong fit.</span>\",\n          \"questions\": [\n              {\n                \"id\": 11053,\n                \"question\": \"What's their favorite color?\"\n              },\n              {\n                \"id\": 11054,\n                \"question\": \"Do they really want to work here?\"\n              }\n            ]        \n          }\n        }\n      ]\n    }\n  ]\n```\n\n----------------------------------------\n\nTITLE: Job Stage Object Structure in JSON\nDESCRIPTION: Describes the structure of a job stage object, including its attributes such as id, name, created_at, updated_at, active, job_id, priority, and interviews. The interviews array contains detailed information about each interview step.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_stages.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 72200,\n  \"name\": \"Face to Face\",\n  \"created_at\": \"2016-10-22T05:31:37.263Z\",\n  \"updated_at\": \"2016-10-22T05:31:37.263Z\",\n  \"active\": true,\n  \"job_id\": 98765,\n  \"priority\": 0,\n  \"interviews\": [\n    {\n      \"id\": 6001,\n      \"name\": \"Cultural Fit Interview\",\n      \"schedulable\": true,\n      \"estimated_minutes\": 30,\n      \"default_interviewer_users\": [\n        {\n          \"id\": 821,\n          \"first_name\": \"Robert\",\n          \"last_name\": \"Robertson\",\n          \"name\": \"Robert Robertson\",\n          \"employee_id\": \"100377\"\n        }\n      ],\n      \"interview_kit\": {\n        \"id\": 9123,\n        \"content\": \"<h5>Purpose</h5><span>Determine whether or not the candidate would be a strong fit.</span>\",\n        \"questions\": [\n          {\n            \"id\": 11052,\n            \"question\": \"Is this person really a good fit?\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": 6002,\n      \"name\": \"Executive Interview\",\n      \"schedulable\": true,\n      \"estimated_minutes\": 60,\n      \"default_interviewer_users\": [\n        {\n          \"id\": 4080,\n          \"first_name\": \"Kate\",\n          \"last_name\": \"Austen\",\n          \"name\": \"Kate Austen\",\n          \"employee_id\": \"12345\"\n        }\n      ],\n      \"interview_kit\": {\n        \"id\": 9124,\n        \"content\": \"<h5>Purpose</h5><span>See if they can work with the boss.</span>\",\n        \"questions\": [\n          {\n            \"id\": 11053,\n            \"question\": \"What's their favorite color?\"\n          },\n          {\n            \"id\": 11054,\n            \"question\": \"Do they really want to work here?\"\n          }\n        ]\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Request Body for Adding Attachment to Application (JSON)\nDESCRIPTION: JSON request body for adding an attachment to an application. Includes filename, attachment type, base64-encoded content, and content type. Attachments can be provided either as base64-encoded content or via URL.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"filename\" : \"resume.pdf\",\n  \"type\" : \"resume\",\n  \"content\" : \"R0lGODlhAQABAIAAAAUEBAAAACwAAAAAAQABAAACAkQBADs...\",\n  \"content_type\" : \"application/pdf\"\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Job Updated Event in Greenhouse API (JSON)\nDESCRIPTION: This snippet illustrates the webhook payload structure when a job is updated in Greenhouse. It includes detailed information about the job, similar to the job created event. This event is triggered when specific fields of a job are modified.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_job_events.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"job_updated\",\n  \"payload\": {\n    \"job\": {\n      \"id\": 100445,\n      \"name\": \"Assistant Store Manager, NYC\",\n      \"requisition_id\": null,\n      \"notes\": \"<p>Looking for the best!<\\/p>\",\n      \"confidential\": false,\n      \"job_post_id\": 88010,\n      \"status\": \"open\",\n      \"created_by_id\": 273555,\n      \"created_at\": \"2015-08-11T23:02:09Z\",\n      \"opened_at\": \"2015-08-11T23:02:09Z\",\n      \"closed_at\": null,\n      \"departments\": [\n        {\n          \"id\": 74,\n          \"name\": \"Guideshops\",\n          \"external_id\": \"ex-dept-1\"\n        }\n      ],\n      \"offices\": [\n        {\n          \"id\": 104,\n          \"name\": \"New York\",\n          \"location\": \"New York, NY\",\n          \"external_id\": \"ex-office-1\"\n        }\n      ],\n      \"hiring_team\": {\n        \"hiring_managers\": [\n          {\n            \"user_id\": 1234,\n            \"employee_id\": \"abc-123\"\n          }\n        ],\n        \"sourcers\": [],\n        \"recruiters\": [\n          {\n            \"user_id\": 2345,\n            \"employee_id\": null\n          },\n          {\n            \"user_id\": 3456,\n            \"employee_id\": \"abc-234\"\n          }\n        ],\n        \"coordinators\": []\n      },\n      \"openings\": [\n        {\n          \"id\": 1234,\n          \"opening_id\": \"abc-1\",\n          \"custom_fields\": []\n        },\n        {\n          \"id\": 1235,\n          \"opening_id\": \"abc-2\",\n          \"custom_fields\": []\n        }\n      ],\n      \"custom_fields\": {\n        \"bonus\": {\n          \"name\": \"Bonus\",\n          \"type\": \"short_text\",\n          \"value\": null\n        },\n        \"employment_type\": {\n          \"name\": \"Employment Type\",\n          \"type\": \"single_select\",\n          \"value\": null\n        },\n        \"options\": {\n          \"name\": \"Options\",\n          \"type\": \"short_text\",\n          \"value\": null\n        },\n        \"salary\": {\n          \"name\": \"Salary\",\n          \"type\": \"short_text\",\n          \"value\": null\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Request Body for Editing Job Openings in JSON\nDESCRIPTION: Example JSON request body for editing a job opening, showing how to update opening ID, status, close reason, and custom fields. Used with the PATCH endpoint.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"opening_id\": \"abc-123\",\n    \"status\": \"closed\",\n    \"close_reason_id\": 1234,\n    \"custom_fields\": [ { \"id\": 123, \"value\": \"some value\" } ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Custom Field with cURL and Response Format\nDESCRIPTION: These code snippets show how to retrieve a specific custom field by its ID using the Greenhouse API, along with the expected JSON response format containing all field attributes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/custom_field/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 123456,\n  \"name\": \"Custom Field Name\",\n  \"active\": true,\n  \"field_type\": \"job\",\n  \"priority\": 1,\n  \"value_type\": \"single_select\",\n  \"private\": true,\n  \"required\": false,\n  \"require_approval\": true,\n  \"trigger_new_version\": false,\n  \"name_key\": \"custom_field_name\",\n  \"description\": \"Field description\",\n  \"expose_in_job_board_api\": false,\n  \"api_only\": false,\n  \"offices\": [],\n  \"departments\": [],\n  \"template_token_string\": \"{{FIELD1}}\",\n  \"custom_field_options\": [\n    {\n      \"id\": 123,\n      \"name\": \"Name One\",\n      \"priority\": 1,\n      \"external_id\": \"name-one\"\n    },\n    {\n      \"id\": 234,\n      \"name\": \"Name Two\",\n      \"priority\": 2,\n      \"external_id\": null\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Attachment to Application Using Greenhouse API (Shell)\nDESCRIPTION: API request to add an attachment to an application. Requires the application ID and attachment details such as filename, type, and content. Supports various attachment types including resumes, cover letters, and offer letters.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/applications/{id}/attachments'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: User Role Object Structure in JSON\nDESCRIPTION: Represents the structure of a user role object in the Greenhouse API. Each role has an ID, type (either 'interviewer' or 'job_admin'), and a display name.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_roles.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 4729,\n  \"type\": \"interviewer\",\n  \"name\": \"Interviewer\"\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Candidate Stage Change Webhook in Greenhouse API (JSON)\nDESCRIPTION: This snippet illustrates the payload structure for a candidate stage change webhook event in the Greenhouse API. It includes comprehensive details about the application, candidate, job, and the current stage of the application process.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"candidate_stage_change\",\n  \"payload\": {\n    \"application\": {\n      \"id\": 265277,\n      \"rejected_at\": null,\n      \"prospect\": false,\n      \"status\": \"active\",\n      \"applied_at\": \"2013-03-22T00:00:00Z\",\n      \"last_activity_at\": \"2015-02-09T16:38:36Z\",\n      \"url\": \"https://app.greenhouse.io/people/265772?application_id= 265277\",\n      \"source\": {\n        \"id\": 31,\n        \"name\": \"Agency\"\n      },\n      \"credited_to\": {\n        \"id\": 15,\n        \"email\": \"ada@example.com\",\n        \"name\": \"Ada Lacey\",\n        \"employee_id\": \"123ABC\"\n      },\n      \"rejection_reason\": null,\n      \"rejection_details\": null,\n      \"current_stage\": {\n        \"id\": 71416,\n        \"name\": \"Assessment\",\n        \"interviews\": [\n          {\n            \"id\": 113101,\n            \"name\": \"Assessment\",\n            \"status\": \"to_be_scheduled\",\n            \"interview_kit\": {\n              \"url\": \"https://app.greenhouse.io/guides/113153/people/265772\",\n              \"content\": \"Assess their skills\",\n              \"questions\": []\n            },\n            \"interviewers\": [\n              {\n                \"id\": 2622,\n                \"display_name\": \"Carl Buddha\",\n                \"status\": \"tentative\"\n              }\n            ]\n          }\n        ]\n      },\n      \"custom_fields\": {\n        \"custom_application_field\": {\n          \"name\": \"Custom Application Field\",\n          \"type\": \"short_text\",\n          \"value\": \"Example\"\n        }\n      },\n      \"candidate\": {\n        \"id\": 265772,\n        \"first_name\": \"Giuseppe\",\n        \"last_name\": \"Hurley\",\n        \"title\": \"Great Person\",\n        \"company\": null,\n        \"created_at\": \"2013-10-04T01:24:44Z\",\n        \"external_id\": \"241b399ce4b0fd1c84e5528d\",\n        \"photo_url\": null,\n        \"url\": \"https://app.greenhouse.io/people/265772\",\n        \"is_private\": false,\n        \"can_email\": true,\n        \"phone_numbers\": [\n          {\n            \"value\": \"330-281-8004\",\n            \"type\": \"home\"\n          }\n        ],\n        \"email_addresses\": [\n          {\n            \"value\": \"giuseppe.hurley@example.com\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"addresses\": [\n          {\n            \"value\": \"123 Fake St.\",\n            \"type\": \"home\"\n          }\n        ],\n        \"website_addresses\": [\n          {\n            \"value\": \"ghurley.example.com\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"social_media_addresses\": [\n          {\n            \"value\": \"linkedin.example.com/ghurley\"\n          }\n        ],\n        \"educations\": [\n          {\n            \"school_name\": \"Harvard University\",\n            \"degree\": \"Bachelor's Degree\",\n            \"discipline\": \"Information Systems\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"employments\": [\n          {\n            \"company_name\": \"Greenhouse\",\n            \"title\": \"Engineer\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"recruiter\": {\n          \"id\": 3128,\n          \"email\": \"alicia.flopple.3128@example.com\",\n          \"name\": \"Alicia Flopple\",\n          \"employee_id\": \"789GHI\"\n        },\n        \"coordinator\": {\n          \"id\": 3128,\n          \"email\": \"alicia.flopple.3128@example.com\",\n          \"name\": \"Alicia Flopple\",\n          \"employee_id\": \"789GHI\"\n        },\n        \"attachments\": [\n          {\n            \"filename\": \"resume.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"resume\"\n          },\n          {\n            \"filename\": \"cover_letter.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"cover_letter\"\n          },\n          {\n            \"filename\": \"portfolio.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"attachment\"\n          }\n        ],\n        \"tags\": [\n          \"Import from Previous ATS\"\n        ],\n        \"custom_fields\": {\n          \"favorite_color\": {\n            \"name\": \"Favorite Color\",\n            \"type\": \"short_text\",\n            \"value\": \"Blue\"\n          }\n        }\n      },\n      \"jobs\": [\n        {\n          \"id\": 3485,\n          \"name\": \"Designer\",\n          \"requisition_id\": null,\n          \"notes\": \"Digital and print\",\n          \"confidential\": false,\n          \"job_post_id\": 553282,\n          \"status\": \"open\",\n          \"created_by_id\": 273555,\n          \"created_at\": \"2013-10-02T22:59:29Z\",\n          \"opened_at\": \"2015-01-23T00:25:04Z\",\n          \"closed_at\": null,\n          \"departments\": [\n            {\n              \"id\": 237,\n              \"name\": \"Community\",\n              \"external_id\": \"ex-dept-1\"\n            }\n          ],\n          \"offices\": [\n            {\n              \"id\": 54,\n              \"name\": \"New York\",\n              \"location\": \"New York, NY\",\n              \"external_id\": \"ex-office-1\"\n            }\n          ],\n          \"custom_fields\": {\n            \"employment_type\": {\n              \"name\": \"Employment Type\",\n              \"type\": \"single_select\",\n              \"value\": \"Full Time\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Complete cURL Request Example for Greenhouse Onboarding API\nDESCRIPTION: A complete example showing how to make a GraphQL request to the Greenhouse Onboarding API using cURL, including authentication, query formatting, and the expected response.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_introduction.md#2025-04-14_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n# Here's what the final cURL request would look like\n\ncurl 'https://onboarding-api.greenhouse.io/graphql' \\\n  -X POST \\\n  -u your_access_key:your_secret_key \\\n  -d '{\"query\":\"{\\n  employee(id: 25) {\\n    email\\n  }\\n}\"}' \\\n  -H 'content-type: application/json'\n\n# and here's what the response would look like\n\n{\"data\":{\"employee\":{\"email\":\"employee_25_email@example.com\"}}}\n```\n\n----------------------------------------\n\nTITLE: User Object Structure in Greenhouse API\nDESCRIPTION: Defines the JSON structure of a user object in the Greenhouse API, including personal information, email addresses, office and department associations, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 112,\n  \"name\": \"Juliet Burke\",\n  \"first_name\": \"Juliet\",\n  \"last_name\": \"Burke\",\n  \"primary_email_address\": \"juliet.burke@example.com\",\n  \"updated_at\": \"2016-11-17T16:13:48.888Z\",\n  \"created_at\": \"2015-11-18T22:26:32.243Z\",  \n  \"disabled\": false,\n  \"site_admin\": true,\n  \"emails\": [\n    \"juliet.burke@example.com\",\n    \"other.woman@example.com\"\n  ],\n  \"employee_id\": \"221\",\n  \"linked_candidate_ids\": [123, 654],\n  \"offices\": [\n    {\n      \"id\": 47012,\n      \"name\": \"New York\",\n      \"location\": {\n        \"name\": \"New York, United States\"\n      },\n      \"primary_contact_user_id\": 150893,\n      \"parent_id\": 50849,\n      \"parent_office_external_id\": \"14679\",\n      \"child_ids\": [50852, 50891],\n      \"child_office_external_ids\": [\"13473\", \"123473\"],\n      \"external_id\": \"15679\"\n    }\n  ],\n  \"departments\": [\n    {\n      \"id\": 25907,\n      \"name\": \"Second-Level department\",\n      \"parent_id\": 25908,\n      \"parent_department_external_id\": \"13473\",\n      \"child_ids\": [50852, 50891],\n      \"child_department_external_ids\": [\"13473\", \"123473\"],\n      \"external_id\": \"15679\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Marking a Take-Home Test as Completed using the Greenhouse API\nDESCRIPTION: This PATCH request notifies Greenhouse that a candidate has completed a test. It uses basic authentication and requires the unique test ID in the URL path. After this request is made, Greenhouse will automatically send a request to the testing partner's Test Status endpoint.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_patch_completed_test.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://app.greenhouse.io/integrations/testing_partners/take_home_tests/12345'\n\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: List Job Posts API Response\nDESCRIPTION: Example JSON response from the job posts list endpoint showing an array of job post objects with full details including questions and location information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_posts.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123,\n    \"title\": \"Software Engineer\",\n    \"location\": {\n      \"id\": 123456,\n      \"name\": \"New York, NY\",\n      \"office_id\": null,\n      \"job_post_custom_location_id\": 303145,\n      \"job_post_location_type\": {\n        \"id\": 1,\n        \"name\": \"Free Text\"\n      }\n    },\n    \"internal\": true,\n    \"external\": false,\n    \"active\": true,\n    \"live\": true,\n    \"first_published_at\": \"2023-04-03T18:06:18Z\",\n    \"job_id\": 1234,\n    \"content\": \"<p>We're looking for the next big innovator.</p>\",\n    \"internal_content\": \"<p>Apply today!</p>\",\n    \"updated_at\": \"2024-11-21T15:39:24Z\",\n    \"created_at\": \"2023-04-01T17:56:19Z\",\n    \"demographic_question_set_id\": 999,\n    \"questions\": [...]}]\n```\n\n----------------------------------------\n\nTITLE: Approval Flow Object Structure - JSON\nDESCRIPTION: The structure of an approval flow object showing all fields including id, offer details, approval status, and approver groups configuration.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 49394,\n  \"offer_id\": 45545,\n  \"sequential\": true,\n  \"version\": 2,\n  \"approval_type\": \"offer_candidate\",\n  \"approval_status\": \"pending\",\n  \"job_id\": 12321,\n  \"requested_by_user_id\": 543,\n  \"approver_groups\": [\n    {\n      \"id\": 2011242,\n      \"approvals_required\": 1,\n      \"created_at\": \"2018-03-30T19:32:04.295Z\",\n      \"resolved_at\": null,\n      \"priority\": 1,\n      \"job_id\": 12321,\n      \"offer_id\": null,\n      \"approvers\": [\n        {\n          \"id\": 1234,\n          \"name\": \"Michael Clayton\",\n          \"employee_id\": \"abc-123\",\n          \"email_addresses\": [\"mclayton@example.com\"]\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Job Openings POST Request Body\nDESCRIPTION: JSON request body for creating multiple job openings with custom fields\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"openings\": [\n      {\n          \"opening_id\": \"abc-123\",\n          \"custom_fields\": [ { \"id\": 123, \"value\": \"some value\" } ]\n      },\n      {\"opening_id\": null}\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Job with Application Questions in the Greenhouse API\nDESCRIPTION: This endpoint retrieves detailed information about a specific job post, including application questions, location fields, and metadata. It provides all the information needed to construct a custom job application form, including field types and validation requirements.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_jobs.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\":44444,\n  \"title\":\"Product Engineer\",\n  \"updated_at\":\"2013-07-02T19:39:23Z\",\n  \"requisition_id\": \"50\",\n  \"location\":{\n    \"name\":\"San Francisco, CA\"\n  },\n  \"content\":\"This is the job description. &amp;lt;p&amp;gt;Any HTML included through the hosted job application editor will be automatically converted into corresponding HTML entities.&amp;lt;/p&amp;gt;\",\n  \"absolute_url\":\"http://your.co/careers?gh_jid=444444\",\n  \"internal_job_id\":55555,\n  \"location_questions\": [\n    {\n      \"label\": \"Location\",\n      \"fields\": [\n        {\n          \"name\": \"location\",\n          \"type\": \"input_text\",\n          \"values\": []\n        }\n      ],\n      \"required\": true\n    },\n    {\n      \"label\": \"Latitude\",\n      \"fields\": [\n        {\n          \"name\": \"latitude\",\n          \"type\": \"input_hidden\",\n          \"values\": []\n        }\n      ],\n      \"required\": true\n    },\n    {\n      \"label\": \"Longitude\",\n      \"fields\": [\n        {\n          \"name\": \"longitude\",\n          \"type\": \"input_hidden\",\n          \"values\": []\n        }\n      ],\n      \"required\": true\n    }\n  ],\n  \"questions\":[\n    {\n      \"required\":true,\n      \"label\":\"First Name\",\n      \"fields\":[\n        {\n          \"name\":\"first_name\",\n          \"type\":\"input_text\"\n        }\n      ]\n    },\n    {\n      \"required\":true,\n      \"label\":\"Resume\",\n      \"fields\":[\n        {\n          \"name\":\"resume\",\n          \"type\":\"input_file\"\n        },\n        {\n          \"name\":\"resume_text\",\n          \"type\":\"textarea\"\n        }\n      ]\n    },\n    {\n      \"required\":false,\n      \"label\":\"Do you like apples?\",\n      \"fields\":[\n        {\n          \"name\":\"question_2222\",\n          \"type\":\"multi_value_single_select\",\n          \"values\":[\n            {\n              \"value\":0,\n              \"label\":\"No\"\n            },\n            {\n              \"value\":1,\n              \"label\":\"Yes\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"metadata\":[\n    {\n      \"id\":12345,\n      \"name\":\"Field Name\",\n      \"value_type\":\"text\",\n      \"value\":\"Some value\"\n    }\n  ],\n  \"data_compliance\": [\n    {\n      \"type\": \"gdpr\",\n      \"requires_consent\": true,\n      // To be deprecated. Use if your organization doesn't have single-purpose consent configured, otherwise use separate values for processing and retention\n      \"requires_processing_consent\": true,\n      \"requires_retention_consent\": true,\n      \"retention_period\": 12345\n    }\n  ],\n  \"pay_input_ranges\": [\n    {\n      \"min_cents\":5000000,\n      \"max_cents\":7500000,\n      \"currency_type\":\"USD\",\n      \"title\":\"NYC Salary Range\",\n      \"blurb\":\"In order to provide transparency...\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Candidate Application in Greenhouse API (JSON)\nDESCRIPTION: JSON payload for creating a candidate application. Includes job details, source, initial stage, referrer, and attachment information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"job_id\": 266926,\n  \"source_id\": 7,\n  \"initial_stage_id\": 2708728,\n  \"referrer\": {\n    \"type\": \"id\",\n    \"value\": 770\n  },\n  \"attachments\": [\n    {\n      \"filename\": \"resume.pdf\",\n      \"type\": \"resume\",\n      \"content\": \"MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6...\",\n      \"content_type\": \"application/pdf\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a List of Jobs with the Greenhouse API\nDESCRIPTION: This endpoint returns a list of all job posts. It provides basic job information including unique identifiers, title, location, and URL. The response includes the job post ID and internal job ID which are used for different purposes in the API.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_jobs.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"jobs\": [\n    {\n      \"id\":127817,\n      \"internal_job_id\":144381,\n      \"title\":\"Vault Designer\",\n      \"updated_at\":\"2016-01-14T10:55:28-05:00\",\n      \"requisition_id\": \"50\",\n      \"location\":{\n        \"name\":\"NYC\"\n      },\n      \"absolute_url\":\"https://boards.greenhouse.io/vaulttec/jobs/127817\",\n      \"metadata\":null\n    }\n  ],\n  \"meta\": {\n    \"total\": 1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Field Options via POST Request (Shell)\nDESCRIPTION: Makes a POST request to add new options to a custom field. Includes authentication headers and content type.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/custom_field/{id}/custom_field_options'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Departments List with Tree Rendering in Greenhouse API\nDESCRIPTION: This JSON response demonstrates the structure when retrieving all departments with the 'tree' rendering option. It presents departments in a hierarchical tree structure with nested children objects instead of ID references.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_departments.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"departments\":[\n    {\n      \"id\":77777,\n      \"name\":\"R & D\",\n      \"jobs\":[\n      ],\n      \"children\":[\n        {\n          \"id\":33333,\n          \"name\":\"Engineering\",\n          \"jobs\":[\n            {\n              \"id\":44444,\n              \"title\":\"Product Engineer\",\n              \"location\":{\n                \"name\":\"San Francisco, CA\"\n              },\n              \"updated_at\":\"2013-07-02T19:39:23Z\",\n              \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n            },\n            {\n              \"id\":55555,\n              \"title\":\"Mobile Engineer - iOS\",\n              \"location\":{\n                \"name\":\"San Francisco, CA\"\n              },\n              \"updated_at\":\"2013-07-02T19:39:23Z\",\n              \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n            }\n          ],\n          \"children\":[\n          ]\n        }\n      ]\n    },\n    {\n      \"id\":22222,\n      \"name\":\"Account Management\",\n      \"jobs\":[\n      ],\n      \"children\":[\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Candidate Hired Webhook Payload in JSON\nDESCRIPTION: This code snippet shows the JSON payload for a candidate hired webhook. It contains detailed information about the hired candidate, including their application details, job information, and offer details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"hire_candidate\",\n  \"payload\": {\n    \"application\": {\n      \"id\": 46194062,\n      \"opening\": {\n        \"opening_id\": \"1234-56\",\n        \"custom_fields\": []\n      },\n      \"credited_to\": {\n        \"id\": 158104,\n        \"email\": \"bob_johnson1@localhost.com\",\n        \"name\": \"Robert Johnson\",\n        \"employee_id\": \"123ABC\"\n      },\n      \"source\": {\n        \"id\": 25,\n        \"public_name\": \"Monster\"\n      },\n      \"url\": \"https://app.greenhouse.io/people/35897443?application_id=46194062\",\n      \"candidate\": {\n        \"id\": 35897443,\n        \"first_name\": \"Johnny\",\n        \"last_name\": \"Smith\",\n        \"title\": \"Previous Title\",\n        \"external_id\": \"12345\",\n        \"url\": \"https://app.greenhouse.io/people/35897443\",\n        \"is_private\": false,\n        \"can_email\": true,\n        \"phone_numbers\": [\n          {\n            \"value\": \"518-555-1212\",\n            \"type\": \"work\"\n          },\n          {\n            \"value\": \"212-555-1212\",\n            \"type\": \"home\"\n          }\n        ],\n        \"email_addresses\": [\n          {\n            \"value\": \"personal@example.com\",\n            \"type\": \"personal\"\n          },\n          {\n            \"value\": \"work@example.com\",\n            \"type\": \"work\"\n          }\n        ],\n        \"addresses\": [\n          {\n            \"value\": \"455 Broadway New York, NY 10280\",\n            \"type\": \"home\"\n          }\n        ],\n        \"educations\": [\n          {\n            \"school_name\": \"Harvard University\",\n            \"degree\": \"Bachelor's Degree\",\n            \"discipline\": \"Information Systems\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"employments\": [\n          {\n            \"company_name\": \"Greenhouse\",\n            \"title\": \"Engineer\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"recruiter\": {\n          \"id\": 55,\n          \"email\": \"bob_johnson@localhost.com\",\n          \"name\": \"Bob Johnson\",\n          \"employee_id\": \"456DEF\"\n        },\n        \"coordinator\": {\n          \"id\": 56,\n          \"email\": \"bob_johnson_approver1@localhost.com\",\n          \"name\": \"Robert J Approver\",\n          \"employee_id\": \"789GHI\"\n        },\n        \"attachments\": [\n          {\n            \"filename\": \"resume.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"resume\"\n          }\n        ],\n        \"custom_fields\": {\n          \"desired_level\": {\n            \"name\": \"Desired Level\",\n            \"type\": \"short_text\",\n            \"value\": \"Senior\"\n          },\n          \"favorite_programming_language\": {\n            \"name\": \"Favorite Programming Language\",\n            \"type\": \"short_text\",\n            \"value\": \"Rails\"\n          }\n        }\n      },\n      \"job\": {\n        \"id\": 323753,\n        \"name\": \"Developer\",\n        \"open_date\": \"2014-11-20T22:49:14Z\",\n        \"close_date\": \"2014-11-25T22:49:14Z\",\n        \"requisition_id\": null,\n        \"departments\": [\n          {\n            \"id\": 7,\n            \"name\": \"Technology\",\n            \"external_id\": \"ex-dept-1\"\n          }\n        ],\n        \"offices\": [\n          {\n            \"id\": 13,\n            \"name\": \"New York City\",\n            \"location\": \"New York, NY\",\n            \"external_id\": \"ex-office-1\"\n          },\n          {\n            \"id\": 14,\n            \"name\": \"St. Louis\",\n            \"location\": null,\n            \"external_id\": null\n          }\n        ],\n        \"custom_fields\": {\n          \"approved\": {\n            \"name\": \"Approved\",\n            \"type\": \"boolean\",\n            \"value\": true\n          },\n          \"employment_type\": {\n            \"name\": \"Employment Type\",\n            \"type\": \"single_select\",\n            \"value\": \"Full-time\"\n          },\n          \"salary_range\": {\n            \"name\": \"SalaryRange\",\n            \"type\": \"currency_range\",\n            \"value\": {\n              \"unit\": \"USD\",\n              \"min_value\": \"10000.0\",\n              \"max_value\": \"20000.0\"\n            }\n          }\n        }\n      },\n      \"jobs\": [\n        {\n          \"id\": 323753,\n          \"name\": \"Developer\",\n          \"requisition_id\": null,\n          \"confidential\": false,\n          \"opened_at\": \"2014-11-20T22:49:14Z\",\n          \"closed_at\": \"2014-11-25T22:49:14Z\",\n          \"departments\": [\n            {\n              \"id\": 7,\n              \"name\": \"Technology\",\n              \"external_id\": \"ex-dept-1\"\n            }\n          ],\n          \"offices\": [\n            {\n              \"id\": 13,\n              \"name\": \"New York City\",\n              \"location\": \"New York, NY\",\n              \"external_id\": \"ex-office-1\"\n            },\n            {\n              \"id\": 14,\n              \"name\": \"St. Louis\",\n              \"location\": null,\n              \"external_id\": null\n            }\n          ],\n          \"custom_fields\": {\n            \"approved\": {\n              \"name\": \"Approved\",\n              \"type\": \"boolean\",\n              \"value\": true\n            },\n            \"employment_type\": {\n              \"name\": \"Employment Type\",\n              \"type\": \"single_select\",\n              \"value\": \"Full-time\"\n            },\n            \"salary_range\": {\n              \"name\": \"SalaryRange\",\n              \"type\": \"currency_range\",\n              \"value\": {\n                \"unit\": \"USD\",\n                \"min_value\": \"10000.0\",\n                \"max_value\": \"20000.0\"\n              }\n            }\n          }\n        }\n      ],\n      \"custom_fields\": {\n        \"custom_application_field\": {\n          \"name\": \"Custom Application Field\",\n          \"type\": \"short_text\",\n          \"value\": \"Example123\"\n        }\n      },\n      \"offer\": {\n        \"id\": 506409,\n        \"version\": 2,\n        \"created_at\": \"2014-11-20T22:49:14Z\",\n        \"sent_at\": \"2014-11-10\",\n        \"resolved_at\": \"2014-11-20T22:49:14Z\",\n        \"starts_at\": \"2015-01-23\",\n        \"custom_fields\": {\n          \"salary\": {\n            \"name\": \"Salary\",\n            \"type\": \"currency\",\n            \"value\": {\n              \"amount\": 80000,\n              \"unit\": \"USD\"\n            }\n          },\n          \"seasons\": {\n            \"name\": \"Seasons\",\n            \"type\": \"multi_select\",\n            \"value\": [\n              \"Season 1\",\n              \"Season 2\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Greenhouse Audit Log API using cURL\nDESCRIPTION: This snippet demonstrates how to authenticate with the Greenhouse Audit Log API using a POST request to obtain an access token. The request requires a Harvest API key and returns a JWT token valid for 24 hours.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/audit-log/_introduction.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/auth/jwt_access_token'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFmE2MWwNjdlMjQ6\"\n\n{\n    \"access_token\": \"MeyJhbGci.eyJhdWQiO\",\n    \"expires\": 2024-02-03T16:38:46.985Z\n}\n```\n\n----------------------------------------\n\nTITLE: Creating/Replacing Approval Flow - Shell API Request\nDESCRIPTION: This curl command demonstrates how to make a PUT request to create or replace an entire approval flow using the Greenhouse API. It includes necessary headers for content type, user authentication, and authorization.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PUT 'https://harvest.greenhouse.io/v1/jobs/{job_id}/approval_flows'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Advance Application Stage - Shell & JSON\nDESCRIPTION: API endpoint to move an active application to its next stage in the hiring process. Requires the current stage ID and returns the updated application object.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/applications/{id}/advance'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"from_stage_id\": 123\n}\n```\n\n----------------------------------------\n\nTITLE: Job Opening Object Structure in JSON\nDESCRIPTION: Example JSON structure showing the format of job opening objects in Greenhouse API responses. Includes both open and closed job opening examples with all fields including custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"id\": 123,\n        \"opening_id\": \"OPENED-1\",\n        \"status\": \"open\",\n        \"opened_at\": \"2015-11-19T19:53:32.565Z\",\n        \"closed_at\": null,\n        \"application_id\": null,\n        \"close_reason\": null,\n      \t\"custom_fields\": {\n    \t    \"employment_type\": \"Full-Time\",\n             \"maximum_budget\": \"$81.5k\"\n  \t},\n  \t\"keyed_custom_fields\": {\n    \t    \"employment_type\": {\n      \t\t\"name\": \"Time type\",\n      \t\t\"type\": \"single_select\",\n      \t\t\"value\": \"Full-Time\"\n    \t    },\n    \t    \"budget\": {\n      \t\t\"name\": \"Maximum Budget\",\n      \t\t\"type\": \"short_text\",\n      \t\t\"value\": \"$81.5k\"\n    \t    }\n    \t}\n    },\n    {\n        \"id\": 123,\n        \"opening_id\": \"CLOSED-1\",\n        \"status\": \"closed\",\n        \"opened_at\": \"2015-11-19T19:53:32.565Z\",\n        \"closed_at\": \"2015-12-14T19:53:32.565Z\",\n        \"application_id\": 65565,\n        \"close_reason\": {\n          \"id\": 678,\n          \"name\": \"Hired - Backfill\"\n        },\n      \t\"custom_fields\": {\n    \t    \"employment_type\": \"Full-Time\",\n             \"maximum_budget\": \"$81.5k\"\n  \t},\n  \t\"keyed_custom_fields\": {\n    \t    \"employment_type\": {\n      \t\t\"name\": \"Time type\",\n      \t\t\"type\": \"single_select\",\n      \t\t\"value\": \"Full-Time\"\n    \t    },\n    \t    \"budget\": {\n      \t\t\"name\": \"Maximum Budget\",\n      \t\t\"type\": \"short_text\",\n      \t\t\"value\": \"$81.5k\"\n    \t    }\n    \t}\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Custom Field Options Creation Request JSON (JSON)\nDESCRIPTION: JSON payload for creating new custom field options, including name, priority, and external ID for each option.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"options\": [\n    {\"name\": \"Option A\", \"priority\": 5, \"external_id\": \"3z84k11\"},\n    {\"name\": \"Option B\", \"priority\": 6, \"external_id\": \"bmlpk1\"},\n    {\"name\": \"Option C\", \"priority\": 7, \"external_id\": \"32290\"}\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Hiring an Application via Greenhouse API (Shell)\nDESCRIPTION: This snippet demonstrates how to make a POST request to hire an application using the Greenhouse API. It includes the required headers and endpoint URL.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_20\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/applications/{id}/hire'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Parsing Application Deleted Webhook in JSON\nDESCRIPTION: This JSON snippet represents the payload of a webhook event triggered when an application is deleted in Greenhouse. It includes basic information about the deleted application, such as its ID, candidate ID, job ID, and rejection details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_application_events.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"delete_application\",\n  \"payload\": {\n    \"application\": {\n        \"id\": 46194062,\n        \"candidate_id\": 37031511,\n        \"job_id\": 371417,\n        \"created_at\": \"2013-03-22T00:00:00Z\",\n        \"source_id\": 2,\n        \"candidate_rejection_reason_id\": null,\n        \"rejection_note_id\": 123,\n        \"rejected_at\": \"2014-04-22T01:00:00Z\",\n        \"referrer_id\": 158104,\n        \"prospect\": false,\n        \"rejected_by_user_id\": 158103\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: List Scorecards Response Format\nDESCRIPTION: JSON response structure showing an array of scorecard objects. Each scorecard includes interview details, candidate info, ratings, and questionnaire responses.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scorecards.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 211231,\n    \"updated_at\": \"2016-08-22T19:52:38.384Z\",\n    \"created_at\": \"2016-08-22T19:52:38.384Z\",\n    \"interview\": \"Application Review\",\n    \"interview_step\": {\n      \"id\": 432,\n      \"name\": \"Application Review\"\n    },\n    \"candidate_id\": 2131415,\n    \"application_id\": 23558552,\n    \"interviewed_at\": \"2016-08-18T16:00:00.000Z\",\n    \"submitted_by\": {\n      \"id\": 4080,\n      \"first_name\": \"Kate\",\n      \"last_name\": \"Austen\",\n      \"name\": \"Kate Austen\",\n      \"employee_id\": \"12345\"\n    },\n    \"interviewer\": {\n      \"id\": 821,\n      \"first_name\": \"Robert\",\n      \"last_name\": \"Robertson\",\n      \"name\": \"Robert Robertson\",\n      \"employee_id\": \"100377\"\n    },\n    \"submitted_at\": \"2014-03-26T21:59:51Z\",\n    \"overall_recommendation\": \"yes\",\n    \"attributes\": [...],\n    \"ratings\": {...},\n    \"questions\": [...]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Computing HMAC Digest for Webhook Authentication in PHP\nDESCRIPTION: This code snippet shows how to compute the HMAC digest for webhook authentication using PHP. It uses the hash_hmac function to generate a SHA256 HMAC signature. This method requires PHP version 5.1.2 or higher and PECL hash 1.1 or higher.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_introduction.md#2025-04-14_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n  // Requires PHP >= 5.1.2 and PECL hash >= 1.1\n  $signature = hash_hmac('sha256', $body, $secret_key);\n?>\n```\n\n----------------------------------------\n\nTITLE: Submitting Job Application via cURL with Multipart Form-Data\nDESCRIPTION: Example showing how to submit a job application to Greenhouse using cURL with multipart form-data. This approach is needed when uploading resume or cover letter files. The example includes applicant information, education history, employment history, and GDPR consent flags.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_applications.md#2025-04-14_snippet_1\n\nLANGUAGE: curl\nCODE:\n```\ncurl -X POST \\ \n  -H \"Content-Type: multipart/form-data\" \\\n  -H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\" \\\n  -F \"first_name=Sammy\" \\\n  -F \"last_name=McSamson\" \\\n  -F \"email=sammy@example.com\" \\\n  -F \"phone=3337778888\" \\\n  -F \"location=110 5th Ave New York, NY, 10011\" \\\n  -F \"latitude=40.7376671\" \\\n  -F \"longitude=-73.9929196\" \\\n  -F \"resume=@/path/to/resume/ADA084551.pdf\" \\\n  -F \"cover_letter=@/path/to/coverletter/blah.pdf\" \\\n  -F \"educations[][school_name_id]=5417077\" \\\n  -F \"educations[][degree_id]=5494452\"\\\n  -F \"educations[][discipline_id]=5494865\" \\\n  -F \"educations[][start_date][month]=8\" \\\n  -F \"educations[][start_date][year]=2012\" \\\n  -F \"educations[][end_date][month]=5\" \\\n  -F \"educations[][end_date][year]=2016\" \\\n  -F \"employments[][company_name]=Business Co\" \\\n  -F \"employments[][title]=Sales Manager\" \\\n  -F \"employments[][start_date][month]=1\" \\\n  -F \"employments[][start_date][year]=2016\" \\\n  -F \"employments[][end_date][month]=2\" \\\n  -F \"employments[][end_date][year]=2018\" \\\n  -F \"employments[][current]=false\"\n  -F \"mapped_url_token=token12345\" \\\n  -F \"question_12349_url=http://dropbox.com/dl/attachment.pdf\" \\\n  -F \"question_12349_url_filename=attachment.pdf\" \\\n  -F \"question_12350_content=SGVsbG8sIHdvcmxkIQo=\" \\\n  -F \"question_12350_content_filename=something_else.txt\" \\\n  -F \"demographic_answers[][question_id]=87\" \\\n  -F \"demographic_answers[][answer_options][][answer_option_id]=194\" \\\n  -F \"demographic_answers[][question_id]=88\" \\\n  -F \"demographic_answers[][answer_options][][answer_option_id]=212\" \\\n  -F \"demographic_answers[][answer_options][][text]=Free-form Answer\" \\\n  -F \"data_compliance[gdpr_consent_given]=true\" \\ # `gdpr_consent_given` to be deprecated. Use if your organization doesn't have single-purpose consent configured, otherwise use separate values for processing and retention\n  -F \"data_compliance[gdpr_processing_consent_given]=true\" \\\n  -F \"data_compliance[gdpr_retention_consent_given]=true\" \\\n  -F \"data_compliance[gdpr_demographic_data_consent_given]=true\" \\\n  \"https://boards-api.greenhouse.io/v1/boards/very_awesome_inc/jobs/127817\"\n```\n\n----------------------------------------\n\nTITLE: Single Job Opening Response Structure in JSON\nDESCRIPTION: Example JSON response structure returned when retrieving a single job opening. Shows the complete opening object with its associated metadata and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 123,\n    \"opening_id\": \"OPENED-1\",\n    \"status\": \"open\",\n    \"opened_at\": \"2015-11-19T19:53:32.565Z\",\n    \"closed_at\": null,\n    \"application_id\": null,\n    \"close_reason\": null,\n    \"custom_fields\": {\n    \t\"employment_type\": \"Full-Time\",\n        \"maximum_budget\": \"$81.5k\"\n    },\n    \"keyed_custom_fields\": {\n        \"employment_type\": {\n      \t    \"name\": \"Time type\",\n      \t    \"type\": \"single_select\",\n      \t    \"value\": \"Full-Time\"\n    \t},\n    \t\"budget\": {\n      \t    \"name\": \"Maximum Budget\",\n      \t    \"type\": \"short_text\",\n      \t    \"value\": \"$81.5k\"\n    \t}\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Office Request Body\nDESCRIPTION: JSON request body for creating a new office. Demonstrates two alternative ways to specify the parent office (by ID or by external_parent_id).\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"Brooklyn\",\n  \"parent_id\": 47012,\n  \"primary_contact_user_id\": 336474,\n  \"location\": \"Brooklyn, NY\"\n}\n\nor\n\n{\n  \"name\": \"Brooklyn\",\n  \"external_parent_id\": \"parent-1\",\n  \"primary_contact_user_id\": 336474,\n  \"location\": \"Brooklyn, NY\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Job Permission Object Structure in JSON\nDESCRIPTION: Describes the structure of a job permission object, including its unique identifier, associated job ID, and user role ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 382934,\n  \"job_id\": 9192,\n  \"user_role_id\": 123\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Rate Limiting in Greenhouse Audit Log API Responses\nDESCRIPTION: This snippet shows the rate limiting headers returned in a successful API response. It demonstrates how to check the remaining requests allowed within the rate limit period.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/audit-log/_introduction.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nStatus: 200 OK\nX-RateLimit-Limit: 50\nX-RateLimit-Remaining: 49\n```\n\n----------------------------------------\n\nTITLE: Activity Feed JSON Response in Greenhouse API\nDESCRIPTION: This snippet shows the JSON response structure when retrieving a candidate's activity feed. It includes notes, emails, and activities associated with the candidate.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_activity_feed.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notes\": [\n    {\n      \"id\": 12345,\n      \"created_at\": \"2014-03-26T20:11:40Z\",\n      \"body\": \"Very mysterious.\",\n      \"user\": {\n        \"id\": 512,\n        \"first_name\": \"Sayid\",\n        \"last_name\": \"Jarrah\",\n        \"name\": \"Sayid Jarrah\",\n        \"employee_id\": \"12345\"\n      },\n      \"private\": false,\n      \"visiblity\": \"public\",\n      \"visibility\": \"public\"\n    }\n  ],\n  \"emails\": [\n    {\n      \"id\": 234675,\n      \"created_at\": \"2014-04-01T15:55:06Z\",\n      \"subject\": \"Regarding your application\",\n      \"body\": \"Hey John,  just wanted to touch base!\",\n      \"to\": \"john.locke@example.com\",\n      \"from\": \"boone.carlyle@example.com\",\n      \"cc\": \"sam.smith@example.com\",\n      \"user\": {\n        \"id\": 214,\n        \"first_name\": \"Boone\",\n        \"last_name\": \"Carlyle\",\n        \"name\": \"Boone Carlyle\",\n        \"employee_id\": \"67890\"\n      }\n    }\n  ],\n  \"activities\": [\n    {\n      \"id\": 6756789,\n      \"created_at\": \"2014-04-01T15:55:29Z\",\n      \"subject\": \"Candidate Rejected\",\n      \"body\": \"Reason: Lacking hustle\\n\\nThis candidate turned out to be problematic for us...\",\n      \"user\": {\n        \"id\": 214,\n        \"first_name\": \"Boone\",\n        \"last_name\": \"Carlyle\",\n        \"name\": \"Boone Carlyle\",\n        \"employee_id\": \"67890\"\n      }\n    },\n    {\n      \"id\": 6757869,\n      \"created_at\": \"2014-03-26T20:26:38Z\",\n      \"subject\": \"Candidate Stage Change\",\n      \"body\": \"John Locke was moved into Recruiter Phone Screen for Accounting Manager on 03/27/2014 by Boone Carlyle\",\n      \"user\": {\n        \"id\": 214,\n        \"first_name\": \"Boone\",\n        \"last_name\": \"Carlyle\",\n        \"name\": \"Boone Carlyle\",\n        \"employee_id\": \"67890\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Job Permission Addition Request Body in JSON\nDESCRIPTION: Specifies the JSON structure for the request body when adding a job permission, including the job ID and user role ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"job_id\": \"150056\", \n  \"user_role_id\": \"16229\" \n}\n```\n\n----------------------------------------\n\nTITLE: Replacing an Approver in Approver Group - Shell API Request\nDESCRIPTION: This curl command demonstrates how to make a PUT request to replace an approver in an approver group using the Greenhouse API. It includes necessary headers for content type, user authentication, and authorization.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PUT 'https://harvest.greenhouse.io/v1/approver_groups/{id}/replace_approvers'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Application in Greenhouse API (Shell)\nDESCRIPTION: Makes a GET request to retrieve an application by its ID. Requires authentication via Basic Auth.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X GET 'https://harvest.greenhouse.io/v1/applications/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Job with Demographic Questions in the Greenhouse API\nDESCRIPTION: This endpoint shows how demographic questions are included in the job response when enabled. It includes a header, description, and structured question information for diversity and inclusion data collection, with options for both pre-defined selections and free-form responses.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_jobs.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 44444,\n  \"title\": \"Product Engineer\",\n  ...\n  \"demographic_questions\": {\n    \"header\": \"Diversity and Inclusion at Acme Corp.\",\n    \"description\": \"<p>Acme Corp. is dedicated to...</p>\",\n    \"questions\": [\n      {\n        \"id\": 1,\n        \"label\": \"Favorite Color\",\n        \"required\": false,\n        \"type\":\"multi_value_multi_select\",\n        \"answer_options\": [\n          {\n            \"id\": 100,\n            \"label\": \"Red\",\n            \"free_form\": false\n          },\n          {\n            \"id\": 101,\n            \"label\": \"Green\",\n            \"free_form\": false\n          },\n          {\n            \"id\": 102,\n            \"label\": \"Blue\",\n            \"free_form\": false\n          },\n          {\n            \"id\": 102,\n            \"label\": \"Prefer to Type My Own\",\n            \"free_form\": true\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Candidate Tag with cURL\nDESCRIPTION: Demonstrates how to add a new candidate tag using a POST request with cURL, including necessary headers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/tags/candidate'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Custom Field Options Object Structure in JSON\nDESCRIPTION: This JSON example shows the structure of a custom field option object used for single-select and multi-select custom fields, including its ID, name, priority, and external ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 123456,\n  \"name\": \"Option A\",\n  \"priority\": 0,\n  \"external_id\": \"option-a\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response Structure for Job Openings List in JSON\nDESCRIPTION: Example JSON response structure returned when listing job openings. Shows an array of job opening objects with various statuses and their associated metadata.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n      \"id\": 123,\n      \"opening_id\": \"OPENED-1\",\n      \"status\": \"open\",\n      \"opened_at\": \"2015-11-19T19:53:32.565Z\",\n      \"closed_at\": null,\n      \"application_id\": null,\n      \"close_reason\": null,\n      \"custom_fields\": {\n    \t  \"employment_type\": \"Full-Time\",\n          \"maximum_budget\": \"$81.5k\"\n      },\n      \"keyed_custom_fields\": {\n          \"employment_type\": {\n      \t      \"name\": \"Time type\",\n      \t      \"type\": \"single_select\",\n      \t      \"value\": \"Full-Time\"\n    \t  },\n    \t  \"budget\": {\n      \t      \"name\": \"Maximum Budget\",\n      \t      \"type\": \"short_text\",\n      \t      \"value\": \"$81.5k\"\n    \t  }\n      }\n  },\n  {\n      \"id\": 123,\n      \"opening_id\": \"CLOSED-1\",\n      \"status\": \"closed\",\n      \"opened_at\": \"2015-11-19T19:53:32.565Z\",\n      \"closed_at\": \"2015-12-14T19:53:32.565Z\",\n      \"application_id\": 65565,\n      \"close_reason\": {\n          \"id\": 678,\n          \"name\": \"Hired - Backfill\"\n      },\n      \"custom_fields\": {\n    \t  \"employment_type\": \"Full-Time\",\n          \"maximum_budget\": \"$81.5k\"\n      },\n      \"keyed_custom_fields\": {\n          \"employment_type\": {\n      \t      \"name\": \"Time type\",\n      \t      \"type\": \"single_select\",\n      \t      \"value\": \"Full-Time\"\n    \t  },\n    \t  \"budget\": {\n      \t      \"name\": \"Maximum Budget\",\n      \t      \"type\": \"short_text\",\n      \t      \"value\": \"$81.5k\"\n    \t  }\n      }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Enabling Users via Greenhouse API\nDESCRIPTION: PATCH endpoint to enable a previously disabled Greenhouse user account. Accepts user identification via email, user ID, or employee ID. Returns the complete user object with updated enabled status.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v2/users/enable'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"user\": {\"email\": \"test@example.com\"}\n}\n```\n\n----------------------------------------\n\nTITLE: Submitting Attachments via External URL\nDESCRIPTION: Example of submitting a resume attachment by providing a URL to the file on an external server. This method works with both multipart/form-data and application/json content types.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_applications.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n\"resume_url\": \"https://example.com/resume.pdf\",\n\"resume_url_filename\": \"resume.pdf\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Cursor-based Pagination in GraphQL\nDESCRIPTION: Demonstrates how to implement cursor-based pagination in GraphQL queries using first and after parameters. Shows both the query structure and response format, including pageInfo for navigation and edges containing the actual records. Maximum page size is 25 records.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_pagination.md#2025-04-14_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  employees(first: 2, after: \"NQ==\") { # Please fetch the next 2 records, starting after the \"NQ==\" cursor\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        email\n      }\n    }\n  }\n}\n\n# Returns:\n\n{\n  \"data\": {\n    \"employees\": {\n      \"pageInfo\": {\n        \"endCursor\": \"MTA=\",\n        \"hasNextPage\": true\n      },\n      \"edges\": [\n        {\n          \"node\": {\n            \"email\": \"kima@example.com\"\n          }\n        },\n        {\n          \"node\": {\n            \"email\": \"omar@example.com\"\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: EEOC Object Structure in JSON\nDESCRIPTION: Defines the structure of an EEOC object in Greenhouse, including application and candidate IDs, race, gender, veteran status, disability status, and submission timestamp.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_eeoc.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"application_id\": 286,\n  \"candidate_id\": 406,\n  \"race\": {\n    \"id\": 7,\n    \"description\": \"Two or More Races\"\n  },\n  \"gender\": {\n    \"id\": 1,\n    \"description\": \"Male\"\n  },\n  \"veteran_status\": {\n    \"id\": 3,\n    \"message\": \"I don't wish to answer\"\n  },\n  \"disability_status\": {\n    \"id\": 1,\n    \"description\": \"Yes, I have a disability, or have a history/record of having a disability\"\n  },\n  \"submitted_at\": \"2017-01-29T15:09:46.806Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Making API Request to List Offers in Shell\nDESCRIPTION: This shell command demonstrates how to make an HTTP GET request to the Greenhouse API to retrieve a list of offers. It includes the authorization header using Basic authentication with an API key.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offers.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/offers' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Updating Job Post Content\nDESCRIPTION: PATCH request to update job post properties including title, location, and content. Requires user authentication and supports HTML content updates.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_posts.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v2/job_posts/{id}'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"title\": \"New Job Title\",\n    \"location\": \"NYC\",\n    \"content\": \"<p style=\\\"text-align: center;\\\"><span style=\\\"font-weight: 400;\\\">My exciting new job post!</span></p><p>Check it out!</p>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Job Openings with cURL Request\nDESCRIPTION: Example shell command for retrieving all job openings for a specific job using the Greenhouse API with authentication. Uses the GET endpoint for job openings.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/jobs/{job_id}/openings' -H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Changing User Permission Level via Greenhouse API\nDESCRIPTION: PATCH endpoint to modify a user's permission level to Basic. Cannot be used to elevate permissions. Removes all job-based, developer, and user-specific permissions when downgrading to Basic level.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/users/permission_level'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"user\": {\"email\": \"test@example.com\"},\n  \"level\": \"basic\"\n}\n```\n\n----------------------------------------\n\nTITLE: Job Post Object Structure in JSON\nDESCRIPTION: Defines the complete structure of a job post object including location details, status flags, content, and application questions. Contains all possible fields that can be returned by the API.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_posts.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 123,\n  \"title\": \"Software Engineer\",\n  \"location\": {\n    \"id\": 123456,\n    \"name\": \"New York, NY\",\n    \"office_id\": null,\n    \"job_post_custom_location_id\": 303145,\n    \"job_post_location_type\": {\n      \"id\": 1,\n      \"name\": \"Free Text\"\n    }\n  },\n  \"internal\": true,\n  \"external\": false,\n  \"active\": true,\n  \"live\": true,\n  \"first_published_at\": \"2023-04-03T18:06:18Z\",\n  \"job_id\": 1234,\n  \"content\": \"<p>We're looking for the next big innovator.</p>\",\n  \"internal_content\": \"<p>Apply today!</p>\",\n  \"updated_at\": \"2024-11-21T15:39:24Z\",\n  \"created_at\": \"2023-04-01T17:56:19Z\",\n  \"demographic_question_set_id\": 999,\n  \"questions\": [...]}}\n```\n\n----------------------------------------\n\nTITLE: Create Scheduled Interview Response (JSON)\nDESCRIPTION: Shows the JSON response structure after successfully creating a scheduled interview, including all interview details and interviewer information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 109170954,\n  \"application_id\": 102717457,\n  \"external_event_id\": \"external_event_id_1\",\n  \"start\": {\n    \"date_time\": \"2018-12-12T13:15:00.000Z\"\n  },\n  \"end\": {\n    \"date_time\": \"2018-12-12T14:15:00.000Z\"\n  },\n  \"location\": \"Big Conference Room\",\n  \"video_conferencing_url\": \"http://example.com\",\n  \"status\": \"scheduled\",\n  \"created_at\": \"2018-10-17T19:22:07.302Z\",\n  \"updated_at\": \"2018-12-03T20:45:14.320Z\",\n  \"interview\": {\n    \"id\": 8055374,\n    \"name\": \"Executive Interview\"\n  },\n  \"organizer\": {\n    \"id\": 102361,\n    \"first_name\": \"Champ\",\n    \"last_name\": \"Telluride\",\n    \"name\": \"Champ Telluride\",\n    \"employee_id\": null\n  },\n  \"interviewers\": [\n    {\n      \"id\": 102361,\n      \"employee_id\": null,\n      \"name\": \"Champ Telluride\",\n      \"email\": \"champ.telluride.102361@example.com\",\n      \"response_status\": \"accepted\",\n      \"scorecard_id\": null\n    },\n    {\n      \"id\": 46444,\n      \"employee_id\": \"AAA1\",\n      \"name\": \"Lucius Barbarossa\",\n      \"email\": \"lucius.barbarossa.46444@example.com\",\n      \"response_status\": \"declined\",\n      \"scorecard_id\": null\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: EEOC List Response in JSON\nDESCRIPTION: Shows the structure of the JSON response when listing EEOC data. The response is an array of EEOC objects, each containing application details and EEOC information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_eeoc.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"application_id\": 286,\n    \"candidate_id\": 406,\n    \"race\": {\n      \"id\": 7,\n      \"description\": \"Two or More Races\"\n    },\n    \"gender\": {\n      \"id\": 1,\n      \"description\": \"Male\"\n    },\n    \"veteran_status\": {\n      \"id\": 3,\n      \"message\": \"I don't wish to answer\"\n    },\n    \"disability_status\": {\n      \"id\": 1,\n      \"description\": \"Yes, I have a disability, or have a history/record of having a disability\"\n    },\n    \"submitted_at\": \"2017-01-29T15:09:46.806Z\"\n  },\n  {\n    \"application_id\": 287,\n    \"candidate_id\": 342,\n    \"race\": {\n      \"id\": 7,\n      \"description\": \"Two or More Races\"\n    },\n    \"gender\": {\n      \"id\": 2,\n      \"description\": \"Female\"\n    },\n    \"veteran_status\": null,\n    \"disability_status\": {\n      \"id\": 1,\n      \"description\": \"Yes, I have a disability, or have a history/record of having a disability\"\n    },\n    \"submitted_at\": \"2017-01-30T17:10:32.432Z\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Fetching Email Templates List with cURL\nDESCRIPTION: API request to retrieve all email templates for an organization using cURL. This request requires Basic Authentication and returns a list of template objects.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_email_templates.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/email_templates/' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Handling Candidate Merged Webhook in Greenhouse API (JSON)\nDESCRIPTION: This snippet demonstrates the payload structure for a candidate merged webhook event in the Greenhouse API. It includes details about the merged candidate and the ID of the winning candidate record.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"merge_candidate\",\n  \"payload\": {\n    \"person\": {\n        \"id\": 37031511,\n        \"first_name\": \"Jack\",\n        \"last_name\": \"Sparrow\",\n        \"company\": \"Pirate Shipping\",\n        \"title\": \"Captain\",\n        \"created_at\": \"2013-03-22T00:00:00Z\",\n        \"headline\": \"Eager to find a new commission\",\n        \"is_private\": false,\n        \"recruiter_user_id\": 123,\n        \"coordinator_user_id\": 456,\n        \"can_email\": false,\n        \"new_candidate_id\": 457456\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Moving Application Between Stages (JSON)\nDESCRIPTION: JSON response returned after successfully moving an application. Contains the updated application data including candidate information, job details, current stage, answers to application questions, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 48206478,\n  \"candidate_id\": 36952451,\n  \"prospect\": false,\n  \"applied_at\": \"2017-02-01T14:26:02.282Z\",\n  \"rejected_at\": null,\n  \"last_activity_at\": \"2017-02-01T14:51:12.670Z\",\n  \"location\": {\n    \"address\": \"New York, New York, USA\"\n  },\n  \"source\": {\n    \"id\": 33,\n    \"public_name\": \"Glassdoor\"\n  },\n  \"credited_to\": null,\n  \"rejection_reason\": null,\n  \"rejection_details\": null,\n  \"jobs\": [\n    {\n      \"id\": 211706,\n      \"name\": \"Community Manager - New York\"\n    }\n  ],\n  \"job_post_id\": 123,\n  \"status\": \"active\",\n  \"current_stage\": {\n    \"id\": 1551142,\n    \"name\": \"Offer\"\n  },\n  \"answers\": [\n    {\n      \"question\": \"How many years experience do you have?\",\n      \"answer\": \"2-4\"\n    },\n    {\n      \"question\": \"Can do you the travel required for this job?\",\n      \"answer\": \"Yes\"\n    }\n  ],\n  \"prospective_office\": null,\n  \"prospective_department\": null,\n  \"prospect_detail\": {\n    \"prospect_pool\": null,\n    \"prospect_stage\": null,\n    \"prospect_owner\": null\n  },\n  \"custom_fields\": {\n    \"current_title\": \"Community Manager\",\n    \"requires_visa_sponsorship?\": false\n  },\n  \"keyed_custom_fields\": {\n    \"current_title\": {\n      \"name\": \"Current Title\",\n      \"type\": \"short_text\",\n      \"value\": \"Community Manager\"\n    },\n    \"requires_visa_sponsorship_\": {\n      \"name\": \"Requires visa sponsorship?\",\n      \"type\": \"boolean\",\n      \"value\": false\n    }\n  },\n  \"attachments\": [\n      {\n          \"filename\": \"John_Locke_Offer_Packet_09_27_2017.pdf\",\n          \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n          \"type\": \"offer_packet\",\n          \"created_at\": \"2020-09-27T18:45:27.137Z\"\n      }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Request Body for Moving Applications (JSON)\nDESCRIPTION: JSON request body for moving an application between stages. Requires the from_stage_id and to_stage_id parameters to specify the current and destination stage IDs.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"from_stage_id\": 1,\n  \"to_stage_id\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: Scheduled Interview Object Structure in JSON\nDESCRIPTION: Detailed structure of the Scheduled Interview object that represents interviews scheduled for a specific application. This object includes interview details like id, time, location, status, organizer, and interviewers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 9128481,\n  \"application_id\": 4684156,\n  \"external_event_id\": \"event123\",\n  \"start\": {\n    \"date_time\": \"2014-03-26T22:15:00.000Z\"\n  },\n  \"end\": {\n    \"date_time\": \"2014-03-26T22:30:00.000Z\"\n  },\n  \"location\": \"Big Conference Room\",\n  \"video_conferencing_url\": \"http://example.com\",\n  \"status\": \"awaiting_feedback\",\n  \"created_at\": \"2016-02-10T14:31:51.019Z\",\n  \"updated_at\": \"2016-05-23T20:43:11.679Z\",\n  \"interview\": {\n    \"id\": 7001,\n    \"name\": \"Culture Fit\"\n  },\n  \"organizer\": {\n    \"id\": 2000,\n    \"first_name\": \"Jack\",\n    \"last_name\": \"Shepard\",\n    \"name\": \"Jack Shepard\",\n    \"employee_id\": \"12345\"\n  },\n  \"interviewers\": [\n    {\n      \"id\": 4080,\n      \"employee_id\": \"employee123\",\n      \"name\": \"Kate Austen\",\n      \"email\": \"kate.austen@example.com\",\n      \"response_status\": \"needs_action\",\n      \"scorecard_id\": 11274\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Hire Application Response (JSON)\nDESCRIPTION: This JSON structure represents the response received after successfully hiring an application. It includes detailed information about the application, candidate, and hiring details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 48206478,\n  \"candidate_id\": 36952451,\n  \"prospect\": false,\n  \"applied_at\": \"2017-02-01T14:26:02.282Z\",\n  \"rejected_at\": null,\n  \"last_activity_at\": \"2017-02-01T14:51:12.670Z\",\n  \"location\": {\n    \"address\": \"New York, New York, USA\"\n  },\n  \"source\": {\n    \"id\": 33,\n    \"public_name\": \"Glassdoor\"\n  },\n  \"credited_to\": null,\n  \"rejection_reason\": null,\n  \"rejection_details\": null,\n  \"jobs\": [\n    {\n      \"id\": 211706,\n      \"name\": \"Community Manager - New York\"\n    }\n  ],\n  \"job_post_id\": 123,\n  \"status\": \"hired\",\n  \"current_stage\": null,\n  \"answers\": [\n    {\n      \"question\": \"How many years experience do you have?\",\n      \"answer\": \"2-4\"\n    },\n    {\n      \"question\": \"Can do you the travel required for this job?\",\n      \"answer\": \"Yes\"\n    }\n  ],\n  \"prospective_office\": null,\n  \"prospective_department\": null,\n  \"prospect_detail\": {\n    \"prospect_pool\": null,\n    \"prospect_stage\": null,\n    \"prospect_owner\": null\n  },\n  \"custom_fields\": {\n    \"current_title\": \"Community Manager\",\n    \"requires_visa_sponsorship?\": false\n  },\n  \"keyed_custom_fields\": {\n    \"current_title\": {\n      \"name\": \"Current Title\",\n      \"type\": \"short_text\",\n      \"value\": \"Community Manager\"\n    },\n    \"requires_visa_sponsorship_\": {\n      \"name\": \"Requires visa sponsorship?\",\n      \"type\": \"boolean\",\n      \"value\": false\n    }\n  },\n  \"attachments\": [\n      {\n          \"filename\": \"John_Locke_Offer_Packet_09_27_2017.pdf\",\n          \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n          \"type\": \"offer_packet\",\n          \"created_at\": \"2020-09-27T18:45:27.137Z\"\n      }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Field with cURL and JSON Payload\nDESCRIPTION: These code snippets demonstrate how to create a new custom field using the Greenhouse API, including the JSON request payload structure and the expected response format.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/custom_fields/'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"Custom Field Name\",\n  \"field_type\": \"application\",\n  \"value_type\": \"single_select\",\n  \"private\": false,\n  \"generate_email_token\": true,\n  \"required\": false,\n  \"require_approval\": false,\n  \"expose_in_job_board_api\": true,\n  \"api_only\": false,\n  \"trigger_new_version\": false,\n  \"office_ids\": [123, 456],\n  \"department_ids\": [567, 890],\n  \"custom_field_options\": [\n    {\n      \"name\": \"Name One\",\n      \"priority\": 1,\n      \"external_id\": \"name-one\"\n    },\n    {\n      \"name\": \"Name Two\",\n      \"priority\": 2,\n      \"external_id\": null\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123456,\n    \"name\": \"Custom Field Name\",\n    \"active\": true,\n    \"field_type\": \"job\",\n    \"priority\": 1,\n    \"value_type\": \"single_select\",\n    \"private\": true,\n    \"required\": false,\n    \"require_approval\": true,\n    \"trigger_new_version\": false,\n    \"name_key\": \"custom_field_name\",\n    \"description\": \"Field description\",\n    \"expose_in_job_board_api\": false,\n    \"api_only\": false,\n    \"offices\": [],\n    \"departments\": [],\n    \"template_token_string\": \"{{FIELD1}}\",\n    \"custom_field_options\": [\n      {\n        \"id\": 123,\n        \"name\": \"Name One\",\n        \"priority\": 1,\n        \"external_id\": \"name-one\"\n      },\n      {\n        \"id\": 234,\n        \"name\": \"Name Two\",\n        \"priority\": 2,\n        \"external_id\": null\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Packing a GraphQL Query into JSON\nDESCRIPTION: Example demonstrating how a GraphQL query is packed into a JSON object as a string for the API request.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_introduction.md#2025-04-14_snippet_5\n\nLANGUAGE: graphql\nCODE:\n```\n# We then pack this query into a JSON object as a string\n\n{\n    \"query\": \"{\\n  employee(id: 25) {\\n    email\\n  }\\n}\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Specific Offer using Greenhouse API\nDESCRIPTION: This endpoint retrieves a specific offer by its ID. It returns detailed information about the offer including custom fields and status.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offers.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/offers/{id}' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 1142785,\n  \"version\": 1,\n  \"application_id\": 91081818,\n  \"job_id\": 84593,\n  \"candidate_id\": 7328851,\n  \"opening\": {\n    \"id\": 2586842,\n    \"opening_id\": \"4-7\",\n    \"status\": \"open\",\n    \"opened_at\": \"2019-05-22T20:58:51.697Z\",\n    \"closed_at\": null,\n    \"application_id\": null,\n    \"close_reason\": null\n  },\n  \"created_at\": \"2018-06-06T20:23:10.378Z\",\n  \"updated_at\": \"2018-06-06T20:23:43.388Z\",\n  \"sent_at\": \"2018-06-07\",\n  \"resolved_at\": \"2018-06-06T20:23:43.387Z\",\n  \"starts_at\": \"2018-07-20\",\n  \"status\": \"accepted\",\n  \"custom_fields\": {\n    \"employment_type\": \"Contractor\",\n    \"favorite_station\": \"The Swan\",\n    \"best_seasons\": null,\n    \"start_date\": \"2004-09-21\",\n    \"willing_to_negotiate\": null,\n    \"salary\": \"Around $100k\",\n    \"notes\": \"This is a note field\"\n  },\n  \"keyed_custom_fields\": {\n    \"time_type\": {\n      \"name\": \"Employment Type\",\n      \"type\": \"single_select\",\n      \"value\": \"Contractor\"\n    },\n    \"favorite_station\": {\n      \"name\": \"Favorite Station\",\n      \"type\": \"single_select\",\n      \"value\": \"The Swan\"\n    },\n    \"best_seasons\": {\n      \"name\": \"Best seasons\",\n      \"type\": \"multi_select\",\n      \"value\": null\n    },\n    \"start_date\": {\n      \"name\": \"Start Date\",\n      \"type\": \"date\",\n      \"value\": \"2004-09-21\"\n    },\n    \"will_negotiate\": {\n      \"name\": \"Willing to negotiate\",\n      \"type\": \"yes_no\",\n      \"value\": null\n    },\n    \"salary\": {\n      \"name\": \"Salary\",\n      \"type\": \"short_text\",\n      \"value\": \"Around $100k\"\n    },\n    \"notes\": {\n      \"name\": \"Notes\",\n      \"type\": \"long_text\",\n      \"value\": \"This is a note field\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Scheduled Interviews from Greenhouse API\nDESCRIPTION: API call to list all scheduled interviews for an organization with curl command example and response showing multiple interview objects. Includes query parameters for filtering and pagination.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/scheduled_interviews'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 9128481,\n    \"application_id\": 4684156,\n    \"external_event_id\": \"event123\",\n    \"start\": {\n      \"date_time\": \"2014-03-26T22:15:00.000Z\"\n    },\n    \"end\": {\n      \"date_time\": \"2014-03-26T22:30:00.000Z\"\n    },\n    \"location\": \"Big Conference Room\",\n    \"video_conferencing_url\": \"http://example.com\",\n    \"status\": \"awaiting_feedback\",\n    \"created_at\": \"2016-02-10T14:31:51.019Z\",\n    \"updated_at\": \"2016-05-23T20:43:11.679Z\",\n    \"interview\": {\n      \"id\": 7001,\n      \"name\": \"Culture Fit\"\n    },\n    \"organizer\": {\n      \"id\": 2000,\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Shepard\",\n      \"name\": \"Jack Shepard\",\n      \"employee_id\": \"12345\"\n    },\n    \"interviewers\": [\n      {\n        \"id\": 4080,\n        \"employee_id\": \"employee123\",\n        \"name\": \"Kate Austen\",\n        \"email\": \"kate.austen@example.com\",\n        \"response_status\": \"needs_action\",\n        \"scorecard_id\": 11274\n      }\n    ]\n  },\n  {\n    \"id\": 9128482,\n    \"application_id\": 432905,\n    \"external_event_id\": \"event456\",\n    \"start\": {\n      \"date\": \"2017-08-22\"\n    },\n    \"end\": {\n      \"date\": \"2017-08-23\"\n    },\n    \"location\": \"Small Conference Room\",\n    \"video_conferencing_url\": \"http://example.com\",\n    \"status\": \"complete\",\n    \"interview\": {\n      \"id\": 7002,\n      \"name\": \"Whiteboarding Challenge\"\n    },\n    \"organizer\": {\n      \"id\": 2000,\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Shepard\",\n      \"name\": \"Jack Shepard\",\n      \"employee_id\": \"12345\"\n    },\n    \"interviewers\": [\n      {\n        \"id\": 3412,\n        \"employee_id\": \"employee456\",\n        \"name\": \"Charlie Pace\",\n        \"email\": \"youalleverybody@example.com\",\n        \"response_status\": \"needs_action\",\n        \"scorecard_id\": null\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Reject Application Response (JSON)\nDESCRIPTION: This JSON structure represents the response received after successfully rejecting an application. It includes detailed information about the rejected application and candidate.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_25\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 985314,\n  \"candidate_id\": 978031,\n  \"prospect\": false,\n  \"applied_at\": \"2016-03-26T20:11:39.000Z\",\n  \"rejected_at\": \"2016-08-17T21:08:29.686Z\",\n  \"last_activity_at\": \"2016-08-27T16:13:15.000Z\",\n  \"location\": {\n    \"address\": \"New York, New York, USA\"\n  },\n  \"source\": {\n    \"id\": 1871,\n    \"public_name\": \"Happy Hour\"\n  },\n  \"credited_to\": {\n    \"id\": 4080,\n    \"first_name\": \"Kate\",\n    \"last_name\": \"Austen\",\n    \"name\": \"Kate Austen\",\n    \"employee_id\": \"12345\"\n  },\n  \"rejection_reason\": {\n    \"id\": 815,\n    \"name\": \"The prospect is not qualified for this position.\",\n    \"type\": {\n      \"id\": 1,\n      \"name\": \"We rejected them\"\n    }\n  },\n  \"rejection_details\": {\n    \"custom_fields\": {\n      \"custom_rejection_question_field\": \"Not a good fit\"\n    },\n    \"keyed_custom_fields\": {\n      \"custom_rejection_question_field\": {\n        \"name\": \"Was this candidate a good fit?\",\n        \"type\": \"short_text\",\n        \"value\": \"This candidate wasn't a good fit.\"\n      }\n    }\n  },\n  \"jobs\": [\n    {\n      \"id\": 123,\n      \"name\": \"Accounting Manager\"\n    }\n  ],\n  \"job_post_id\": 456,\n  \"status\": \"rejected\",\n  \"current_stage\": {\n    \"id\": 62828,\n    \"name\": \"Recruiter Phone Screen\"\n  },\n  \"answers\": [\n    {\n      \"question\": \"Why do you want to work for us?\",\n      \"answer\": \"I heard you're awesome!\"\n    },\n    {\n      \"question\": \"How did you hear about this job?\",\n      \"answer\": \"From a former colleague.\"\n    }\n  ],\n  \"prospective_office\": null,\n  \"prospective_department\": null,\n  \"prospect_detail\": {\n    \"prospect_pool\": null,\n    \"prospect_stage\": null,\n    \"prospect_owner\": null\n  },\n  \"custom_fields\": {\n    \"bio\": \"This is a bio\",\n    \"birthday\": \"1992-01-27\"\n  },\n  \"keyed_custom_fields\": {\n    \"date_of_birth\": {\n      \"name\": \"Birthday\",\n      \"type\": \"date\",\n      \"value\": \"1992-01-27\"\n    },\n    \"bio\": {\n      \"name\": \"Bio\",\n      \"type\": \"long_text\",\n      \"value\": \"This is a bio\"\n    }\n  },\n  \"attachments\": [\n      {\n          \"filename\": \"John_Locke_Offer_Packet_09_27_2017.pdf\",\n          \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n          \"type\": \"offer_packet\",\n          \"created_at\": \"2020-09-27T18:45:27.137Z\"\n      }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Job Post Deleted Webhook Payload in JSON\nDESCRIPTION: This snippet demonstrates the JSON payload structure for when a job post or prospect post is deleted. It includes information about the deleted post such as ID, title, location, and associated questions.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_job_events.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"job_post_deleted\",\n  \"payload\": {\n    \"job_post\": {\n      \"id\": 258341,\n      \"job_id\": 284999,\n      \"title\": \"Software Engineer\",\n      \"location\": \"Dallas\",\n      \"content\": \"<p>A pretty interesting job post!</p>\",\n      \"updated_at\": \"2017-01-19T20:01:53.146Z\",\n      \"internal_content\": null,\n      \"questions\": [\n        {\n          \"required\": false,\n          \"private\": false,\n          \"label\": \"LinkedIn Profile\",\n          \"type\": \"input_text\",\n          \"values\": []\n        },\n        {\n          \"required\": false,\n          \"private\": false,\n          \"label\": \"Website\",\n          \"type\": \"input_text\",\n          \"values\": []\n        },\n        {\n          \"required\": false,\n          \"private\": false,\n          \"label\": \"How did you hear about this job?\",\n          \"type\": \"input_text\",\n          \"values\": []\n        },\n        {\n          \"required\": true,\n          \"private\": true,\n          \"label\": \"Are you a cool engineer?\",\n          \"type\": \"multi_value_single_select\",\n          \"values\": [\n            \"Yes\",\n            \"No\",\n            \"As a cucumber\"\n          ]\n        }\n      ],\n      \"external\": true,\n      \"internal\": false,\n      \"live\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Jobs from Greenhouse API\nDESCRIPTION: Makes a GET request to fetch all jobs visible to the current user. Requires Basic Authentication and jobs.view scope. Returns both public and private job listings accessible to the authenticated user.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_jobs.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://api.greenhouse.io/v1/partner/jobs'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 146859,\n    \"name\": \"Auror\",\n    \"status\": \"open\",\n    \"public\": true\n  },\n  {\n    \"id\": 150050,\n    \"name\": \"Professor\",\n    \"status\": \"open\",\n    \"public\": true\n  },\n  {\n    \"id\": 147886,\n    \"name\": \"Caretaker\",\n    \"status\": \"open\",\n    \"public\": false\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Department Object Structure - Tree View\nDESCRIPTION: JSON structure showing a department object in hierarchical tree view format with nested children.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_departments.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 12345,\n  \"name\": \"Technology\",\n  \"children\": [\n    {\n      \"id\": 34065,\n      \"name\": \"Design\",\n      \"children\": [],\n      \"external_id\": \"32526\"\n    },\n    {\n      \"id\": 25908,\n      \"name\": \"Engineering\",\n      \"children\": [               \n        {\n            \"id\": 14510,\n            \"name\": \"Third-Level Department\",\n            \"children\": [\n              {\n                  \"id\": 14502,\n                  \"name\": \"Strategy\",\n                  \"children\": [],\n                  \"external_id\": null\n              }\n            ],\n            \"external_id\": \"56735\"\n        }\n      ],\n      \"external_id\": \"47658\"\n    }\n  ],\n  \"external_id\": \"26758\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating/Replacing Approval Flow - JSON Response\nDESCRIPTION: This JSON object represents the successful response from the API after creating or replacing an approval flow. It includes confirmation of success and the ID of the created or modified approval flow.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"success\": true,\n    \"approval_flow_id\": 49394\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Job Post Status\nDESCRIPTION: PATCH request to update the status of a job post to either 'live' or 'offline'. Requires user authentication for auditing purposes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_posts.md#2025-04-14_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v2/job_posts/{id}/status'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"status\": \"live\"\n}\n```\n\n----------------------------------------\n\nTITLE: Office Object Structure - List Format\nDESCRIPTION: JSON representation of an office object when rendered as a list (default format). Shows the structure including ID, name, location, primary contact, parent/child relationships, and external ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 47012,\n  \"name\": \"New York\",\n  \"location\": {\n      \"name\": \"New York, United States\"\n  },\n  \"primary_contact_user_id\": 485538,\n  \"parent_id\": 50849,\n  \"parent_office_external_id\": \"parent-1\",\n  \"child_ids\": [\n      50891,\n      50852\n  ],\n  \"child_office_external_ids\": [\n      \"child-1\",\n      \"child-2\"\n  ],\n  \"external_id\": \"12345\"\n}\n```\n\n----------------------------------------\n\nTITLE: List User Roles API Response\nDESCRIPTION: Example JSON response from the User Roles API endpoint. Returns an array of user role objects with their respective IDs, types, and names.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_roles.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 4729,\n    \"type\": \"interviewer\",\n    \"name\": \"Interviewer\"\n  },\n  {\n    \"id\": 4730,\n    \"type\": \"job_admin\",\n    \"name\": \"Standard\"\n  },\n  {\n    \"id\": 4731,\n    \"type\": \"job_admin\",\n    \"name\": \"Private\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Job Post Updated Webhook Payload in JSON\nDESCRIPTION: This snippet shows the structure of the JSON payload sent when a job post or prospect post is updated. It includes details such as the post ID, title, location, content, and associated questions.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_job_events.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"job_post_updated\",\n  \"payload\": {\n    \"id\": 1813002,\n    \"title\": \"A Cool Job\",\n    \"location\": \"At a Cool Place\",\n    \"content\": \"<p>Come work for us!</p>\",\n    \"internal_content\": null,\n    \"updated_at\": \"2017-10-12T18:29:08.399Z\",\n    \"job_id\": 1842002,\n    \"external\": true,\n    \"internal\": false,\n    \"live\": false,\n    \"questions\": [\n      {\n        \"required\": false,\n        \"private\": false,\n        \"label\": \"LinkedIn Profile\",\n        \"type\": \"input_text\",\n        \"values\": []\n      },\n      {\n        \"required\": false,\n        \"private\": false,\n        \"label\": \"Website\",\n        \"type\": \"input_text\",\n        \"values\": []\n      },\n      {\n        \"required\": false,\n        \"private\": false,\n        \"label\": \"How did you hear about this job?\",\n        \"type\": \"input_text\",\n        \"values\": []\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Body Parameters for Office Creation in Greenhouse API\nDESCRIPTION: This JSON structure defines the parameters used in the request body when creating a new office. It includes both required and optional fields, with special notes on package-specific features like tiered offices and external IDs.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"string\",\n  \"location\": \"string\",\n  \"primary_contact_user_id\": number,\n  \"parent_id\": number,\n  \"external_parent_id\": \"string\",\n  \"external_id\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Department with List Rendering in Greenhouse API\nDESCRIPTION: This JSON response shows the structure when retrieving a specific department with the default 'list' rendering. It includes department details, parent and child department IDs, and associated job listings.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_departments.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\":33333,\n  \"name\":\"Engineering\",\n  \"jobs\":[\n    {\n      \"id\":44444,\n      \"title\":\"Product Engineer\",\n      \"location\":{\n        \"name\":\"San Francisco, CA\"\n      },\n      \"updated_at\":\"2013-07-02T19:39:23Z\",\n      \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n    },\n    {\n      \"id\":55555,\n      \"title\":\"Mobile Engineer - iOS\",\n      \"location\":{\n        \"name\":\"San Francisco, CA\"\n      },\n      \"updated_at\":\"2013-07-02T19:39:23Z\",\n      \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n    }\n  ],\n  \"parent_id\":null,\n  \"child_ids\":[\n    77777\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Request Body for Deleting Job Openings in JSON\nDESCRIPTION: Example JSON request body required when deleting job openings, containing an array of opening IDs to be deleted. Used with the DELETE endpoint.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"ids\": [123, 456, 789]\n}\n```\n\n----------------------------------------\n\nTITLE: Offer Updated Event Webhook JSON Schema\nDESCRIPTION: JSON schema for the webhook event that fires when an offer is updated in Greenhouse. Shows the offer with updated status and version.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_application_events.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"action\": \"offer_updated\",\n    \"payload\": {\n        \"id\": 12345,\n        \"application_id\": 234556,\n        \"job_id\": 45678,\n        \"user_id\": 67890,\n        \"version\": 2,\n        \"sent_on\": \"2013-03-22\",\n        \"resolved_at\": \"2013-03-25T00:00:00Z\",\n        \"start_date\": \"04/15/2013\",\n        \"notes\": \"Vacation scheduled 4/20 - 4/23\",\n        \"offer_status\": \"Deprecated\",\n        \"custom_fields\": {\n            \"custom_application_field\": {\n                \"name\": \"Custom Application Field\",\n                \"type\": \"short_text\",\n                \"value\": \"Example\"\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Offices List with Tree Rendering in Greenhouse API\nDESCRIPTION: This JSON response shows the format when listing all offices using the Greenhouse API with render_as=tree. It displays offices with their departments and jobs in a nested tree structure, using 'children' arrays to represent hierarchical relationships.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_offices.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"offices\":[\n    {\n      \"id\":10201,\n      \"name\":\"West Coast\",\n      \"departments\":[\n      ],\n      \"children\":[\n        {\n          \"id\":11111,\n          \"name\":\"San Francisco\",\n          \"departments\":[\n            {\n              \"id\":33333,\n              \"name\":\"Engineering\",\n              \"jobs\":[\n                {\n                  \"id\":44444,\n                  \"title\":\"Product Engineer\",\n                  \"location\":{\n                    \"name\":\"San Francisco, CA\"\n                  },\n                  \"updated_at\":\"2013-07-02T19:39:23Z\",\n                  \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n                },\n                {\n                  \"id\":55555,\n                  \"title\":\"Mobile Engineer - iOS\",\n                  \"location\":{\n                    \"name\":\"San Francisco, CA\"\n                  },\n                  \"updated_at\":\"2013-07-02T19:39:23Z\",\n                  \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n                }\n              ],\n              \"children\":[\n              ]\n            },\n            {\n              \"id\":22222,\n              \"name\":\"Account Management\",\n              \"jobs\":[\n\n              ],\n              \"children\":[\n              ]\n            }\n          ],\n          \"children\":[\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Successful Response for Unreject Application Request\nDESCRIPTION: This JSON response shows the structure of a successful unreject application request. It includes detailed information about the application's new state, including candidate details, job information, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_31\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 69306314,\n  \"candidate_id\": 57683957,\n  \"prospect\": false,\n  \"applied_at\": \"2017-09-29T12:56:05.244Z\",\n  \"rejected_at\": null,\n  \"last_activity_at\": \"2017-09-29T13:00:28.038Z\",\n  \"location\": {\n    \"address\": \"New York, New York, USA\"\n  },\n  \"source\": {\n    \"id\": 2,\n    \"public_name\": \"Jobs page on your website\"\n  },\n  \"credited_to\": {\n    \"id\": 4080,\n    \"first_name\": \"Kate\",\n    \"last_name\": \"Austen\",\n    \"name\": \"Kate Austen\",\n    \"employee_id\": \"12345\"\n  },\n  \"rejection_reason\": null,\n  \"rejection_details\": null,\n  \"jobs\": [\n    {\n      \"id\": 107761,\n      \"name\": \"UX Designer - Boston\"\n    }\n  ],\n  \"job_post_id\": 123,\n  \"status\": \"active\",\n  \"current_stage\": {\n    \"id\": 767358,\n    \"name\": \"Application Review\"\n  },\n  \"answers\": [\n    {\n      \"question\": \"How did you hear about this job?\",\n      \"answer\": \"Online Research\"\n    },\n    {\n      \"question\": \"Website\",\n      \"answer\": \"mytestwebsite.com\"\n    }\n  ],\n  \"prospective_office\": null,\n  \"prospective_department\": null,\n  \"prospect_detail\": {\n    \"prospect_pool\": null,\n    \"prospect_stage\": null,\n    \"prospect_owner\": null\n  },\n  \"custom_fields\": {\n    \"application_custom_test\": \"Option 1\"\n  },\n  \"keyed_custom_fields\": {\n    \"application_custom_test\": {\n      \"name\": \"Application Custom Test\",\n      \"type\": \"single_select\",\n      \"value\": \"Option 1\"\n    }\n  },\n  \"attachments\": [\n    {\n      \"filename\": \"John_Locke_Offer_Packet_09_27_2017.pdf\",\n      \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n      \"type\": \"offer_packet\",\n      \"created_at\": \"2020-09-27T18:45:27.137Z\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Adding Attachment to Application (JSON)\nDESCRIPTION: JSON response returned after successfully adding an attachment to an application. Contains the filename, URL to access the attachment, attachment type, and content type information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"filename\": \"resume.pdf\",\n  \"url\": \"https://prod.s3.amazonaws.com/...\",\n  \"type\": \"resume\",\n  \"content_type\": \"application/pdf\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Prospect Pools via Greenhouse API\nDESCRIPTION: Makes a GET request to retrieve all prospect pools and their stages for the current organization. Requires Basic Authentication and the 'prospect_pools.view' scope.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_prospect_pools.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://api.greenhouse.io/v1/partner/prospect_pools'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Departments List with Default List Rendering in Greenhouse API\nDESCRIPTION: This JSON response shows the structure when retrieving all departments with the default 'list' rendering. It includes department details with parent-child relationships represented through IDs, along with associated job listings.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_departments.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"departments\":[\n    {\n      \"id\":77777,\n      \"name\":\"R & D\",\n      \"jobs\":[\n      ],\n      \"parent_id\":null,\n      \"child_ids\":[\n        33333\n      ]\n    },\n    {\n      \"id\":33333,\n      \"name\":\"Engineering\",\n      \"jobs\":[\n        {\n          \"id\":44444,\n          \"title\":\"Product Engineer\",\n          \"location\":{\n            \"name\":\"San Francisco, CA\"\n          },\n          \"updated_at\":\"2013-07-02T19:39:23Z\",\n          \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n        },\n        {\n          \"id\":55555,\n          \"title\":\"Mobile Engineer - iOS\",\n          \"location\":{\n            \"name\":\"San Francisco, CA\"\n          },\n          \"updated_at\":\"2013-07-02T19:39:23Z\",\n          \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n        }\n      ],\n      \"parent_id\":77777,\n      \"child_ids\":[\n      ]\n    },\n    {\n      \"id\":22222,\n      \"name\":\"Account Management\",\n      \"jobs\":[\n      ],\n      \"parent_id\":null,\n      \"child_ids\":[\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Editing Office Request Body\nDESCRIPTION: JSON request body for updating an office's information. Allows changing the name, location, and external ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"name\": \"Research and Development\",\n   \"location\": \"New York, NY\",\n   \"external_id\": \"1234567890\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Users in Greenhouse API\nDESCRIPTION: Demonstrates how to make a GET request to list all users in an organization using the Greenhouse API. The response includes an array of user objects with their details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/users'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 112,\n    \"name\": \"Juliet Burke\",\n    \"first_name\": \"Juliet\",\n    \"last_name\": \"Burke\",\n    \"primary_email_address\": \"juliet.burke@example.com\",\n    \"updated_at\": \"2016-11-17T16:13:48.888Z\",\n    \"created_at\": \"2015-11-18T22:26:32.243Z\",  \n    \"disabled\": false,\n    \"site_admin\": true,\n    \"emails\": [\n      \"juliet.burke@example.com\",\n      \"other.woman@example.com\"\n    ],\n    \"employee_id\": \"221\",\n    \"linked_candidate_ids\": [123, 654],\n    \"offices\": [\n      {\n        \"id\": 47012,\n        \"name\": \"New York\",\n        \"location\": {\n          \"name\": \"New York, United States\"\n        },\n        \"primary_contact_user_id\": 150893,\n        \"parent_id\": 50849,\n        \"parent_office_external_id\": \"14679\",\n        \"child_ids\": [50852, 50891],\n        \"child_office_external_ids\": [\"13473\", \"123473\"],\n        \"external_id\": \"15679\"\n      }\n    ],\n    \"departments\": [\n      {\n        \"id\": 25907,\n        \"name\": \"Research & Development\",\n        \"parent_id\": 25908,\n        \"parent_department_external_id\": \"13473\",\n        \"child_ids\": [50852, 50891],\n        \"child_department_external_ids\": [\"13473\", \"123473\"],\n        \"external_id\": \"15679\"\n      }\n    ]\n  },\n  {\n    \"id\": 712,\n    \"name\": \"John Doe\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"primary_email_address\": \"john.doe@example.com\",\n    \"updated_at\": \"2016-11-03T18:05:47.361Z\",\n    \"created_at\": \"2015-11-18T22:27:11.111Z\",\n    \"disabled\": false,\n    \"site_admin\": true,\n    \"emails\": [\n      \"john.doe@example.com\"\n    ],\n    \"employee_id\": \"700\",\n    \"linked_candidate_ids\": [789, 1022],\n    \"offices\": [\n      {\n        \"id\": 47013,\n        \"name\": \"San Francisco\",\n        \"location\": {\n          \"name\": \"San Francisco, California\"\n        },\n        \"primary_contact_user_id\": 150894,\n        \"parent_id\": 50850,\n        \"parent_office_external_id\": \"14680\",\n        \"child_ids\": [50852, 50891],\n        \"child_office_external_ids\": [\"13473\", \"123473\"],\n        \"external_id\": \"15679\"\n      }\n    ],\n    \"departments\": [\n      {\n        \"id\": 25907,\n        \"name\": \"Marketing\",\n        \"parent_id\": 25908,\n        \"parent_department_external_id\": \"13473\",\n        \"child_ids\": [50852, 50891],\n        \"child_department_external_ids\": [\"13473\", \"123473\"],\n        \"external_id\": \"15679\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Structure of Rejection Reason Object in JSON\nDESCRIPTION: Representation of a rejection reason object as configured in Greenhouse's Custom Options section. Contains an ID, name, and type information including whether the rejection was initiated by the organization or candidate.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_rejection_reasons.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 262,\n  \"name\": \"Missing resume\",\n  \"type\": {\n    \"id\": 1,\n    \"name\": \"We rejected them\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Job Created Event in Greenhouse API (JSON)\nDESCRIPTION: This snippet shows the structure of the webhook payload when a new job is created in Greenhouse. It includes detailed information about the job, such as its ID, name, status, departments, offices, hiring team, openings, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_job_events.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"job_created\",\n  \"payload\": {\n    \"job\": {\n      \"id\": 371417,\n      \"name\": \"Software Engineer\",\n      \"requisition_id\": null,\n      \"notes\": \"Looking for the best!\",\n      \"confidential\": false,\n      \"job_post_id\": 2154,\n      \"status\": \"open\",\n      \"created_by_id\": 273555,\n      \"created_at\": \"2016-10-20T18:16:32Z\",\n      \"opened_at\": \"2016-10-20T18:16:32Z\",\n      \"closed_at\": null,\n      \"departments\": [\n        {\n          \"id\": 7,\n          \"name\": \"Technology\",\n          \"external_id\": \"ex-dept-1\"\n        }\n      ],\n      \"offices\": [\n        {\n          \"id\": 13,\n          \"name\": \"New York City\",\n          \"location\": \"New York, NY\",\n          \"external_id\": \"ex-office-1\"\n        },\n        {\n          \"id\": 14,\n          \"name\": \"St. Louis\",\n          \"location\": null,\n          \"external_id\": null\n        }\n      ],\n      \"hiring_team\": {\n        \"hiring_managers\": [\n          {\n            \"user_id\": 1234,\n            \"employee_id\": \"abc-123\"\n          }\n        ],\n        \"sourcers\": [],\n        \"recruiters\": [\n          {\n            \"user_id\": 2345,\n            \"employee_id\": null\n          },\n          {\n            \"user_id\": 3456,\n            \"employee_id\": \"abc-234\"\n          }\n        ],\n        \"coordinators\": []\n      },\n      \"openings\": [\n        {\n          \"id\": 1234,\n          \"opening_id\": \"abc-1\",\n          \"custom_fields\": []\n        },\n        {\n          \"id\": 1235,\n          \"opening_id\": \"abc-2\",\n          \"custom_fields\": []\n        }\n      ],\n      \"custom_fields\": {\n        \"approved\": {\n          \"name\": \"Approved\",\n          \"type\": \"boolean\",\n          \"value\": true\n        },\n        \"employment_type\": {\n          \"name\": \"Employment Type\",\n          \"type\": \"single_select\",\n          \"value\": \"Full-time\"\n        },\n        \"salary_range\": {\n          \"name\": \"SalaryRange\",\n          \"type\": \"currency_range\",\n          \"value\": {\n            \"unit\": \"USD\",\n            \"min_value\": \"10000.0\",\n            \"max_value\": \"20000.0\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User with Basic Permissions in Greenhouse API (Shell)\nDESCRIPTION: This code sends a POST request to create a new user with Basic permissions in Greenhouse. The request requires authentication headers including an On-Behalf-Of user ID for auditing purposes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/users'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing Offers for an Application using Greenhouse API\nDESCRIPTION: This endpoint retrieves a list of offers associated with a specific application. It supports pagination and includes detailed information about each offer including custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offers.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/applications/{application_id}/offers'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n  \"id\": 1142785,\n  \"version\": 1,\n  \"application_id\": 91078894,\n  \"job_id\": 837749,\n  \"candidate_id\": 7327285,\n  \"opening\": {\n    \"id\": 2586842,\n    \"opening_id\": \"4-7\",\n    \"status\": \"open\",\n    \"opened_at\": \"2019-05-22T20:58:51.697Z\",\n    \"closed_at\": null,\n    \"application_id\": null,\n    \"close_reason\": null\n  },\n  \"created_at\": \"2018-06-06T20:23:10.378Z\",\n  \"updated_at\": \"2018-06-06T20:23:43.388Z\",\n  \"sent_at\": \"2018-06-07\",\n  \"resolved_at\": \"2018-06-06T20:23:43.387Z\",\n  \"starts_at\": \"2018-07-20\",\n  \"status\": \"accepted\",\n  \"custom_fields\": {\n    \"employment_type\": \"Contractor\",\n    \"favorite_station\": \"The Swan\",\n    \"best_seasons\": null,\n    \"start_date\": \"2004-09-21\",\n    \"willing_to_negotiate\": null,\n    \"salary\": \"Around $100k\",\n    \"notes\": \"This is a note field\"\n  },\n  \"keyed_custom_fields\": {\n    \"time_type\": {\n      \"name\": \"Employment Type\",\n      \"type\": \"single_select\",\n      \"value\": \"Contractor\"\n    },\n    \"favorite_station\": {\n      \"name\": \"Favorite Station\",\n      \"type\": \"single_select\",\n      \"value\": \"The Swan\"\n    },\n    \"best_seasons\": {\n      \"name\": \"Best seasons\",\n      \"type\": \"multi_select\",\n      \"value\": null\n    },\n    \"start_date\": {\n      \"name\": \"Start Date\",\n      \"type\": \"date\",\n      \"value\": \"2004-09-21\"\n    },\n    \"will_negotiate\": {\n      \"name\": \"Willing to negotiate\",\n      \"type\": \"yes_no\",\n      \"value\": null\n    },\n    \"salary\": {\n      \"name\": \"Salary\",\n      \"type\": \"short_text\",\n      \"value\": \"Around $100k\"\n    },\n    \"notes\": {\n      \"name\": \"Notes\",\n      \"type\": \"long_text\",\n      \"value\": \"This is a note field\"\n    }\n  }\n},\n  {\n    \"id\": 1142765,\n    \"version\": 1,\n    \"application_id\": 91078894,\n    \"job_id\": 837749,\n    \"candidate_id\": 7327285,\n    \"opening\": null,\n    \"created_at\": \"2018-06-06T20:21:15.639Z\",\n    \"updated_at\": \"2018-06-06T20:21:29.796Z\",\n    \"sent_at\": null,\n    \"resolved_at\": null,\n    \"starts_at\": \"2018-06-30\",\n    \"status\": \"deprecated\",\n    \"custom_fields\": {\n      \"employment_type\": \"Part-Time\",\n      \"favorite_station\": \"The Looking Glass\",\n      \"best_seasons\": [\"Season 1\", \"Season 2\"],\n      \"start_date\": \"2014-05-01\",\n      \"willing_to_negotiate\": true,\n      \"salary\": {\n        \"value\": 42000,\n        \"currency\": \"EUR\"\n      },\n      \"notes\": \"Very excited to start working with this candidate\"\n    },\n    \"keyed_custom_fields\": {\n      \"time_type\": {\n        \"name\": \"Employment Type\",\n        \"type\": \"single_select\",\n        \"value\": \"Part-Time\"\n      },\n      \"favorite_station\": {\n        \"name\": \"Favorite Station\",\n        \"type\": \"single_select\",\n        \"value\": \"The Looking Glass\"\n      },\n      \"best_seasons\": {\n        \"name\": \"Best seasons\",\n        \"type\": \"multi_select\",\n        \"value\": [\"Season 1\", \"Season 2\"]\n      },\n      \"start_date\": {\n        \"name\": \"Start Date\",\n        \"type\": \"date\",\n        \"value\": \"2014-05-01\"\n      },\n      \"will_negotiate\": {\n        \"name\": \"Willing to negotiate\",\n        \"type\": \"yes_no\",\n        \"value\": true\n      },\n      \"salary\": {\n        \"name\": \"Salary\",\n        \"type\": \"currency\",\n        \"value\": {\n          \"value\": 42000,\n          \"currency\": \"EUR\"\n        }\n      },\n      \"notes\": {\n        \"name\": \"Notes\",\n        \"type\": \"long_text\",\n        \"value\": \"Very excited to start working with this candidate\"\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Department with Tree Rendering in Greenhouse API\nDESCRIPTION: This JSON response demonstrates the structure when retrieving a specific department with the 'tree' rendering option. It shows a department with its job listings and child departments represented in a hierarchical structure.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_departments.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\":33333,\n  \"name\":\"Engineering\",\n  \"jobs\":[\n    {\n      \"id\":44444,\n      \"title\":\"Product Engineer\",\n      \"location\":{\n        \"name\":\"San Francisco, CA\"\n      },\n      \"updated_at\":\"2013-07-02T19:39:23Z\",\n      \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n    },\n    {\n      \"id\":55555,\n      \"title\":\"Mobile Engineer - iOS\",\n      \"location\":{\n        \"name\":\"San Francisco, CA\"\n      },\n      \"updated_at\":\"2013-07-02T19:39:23Z\",\n      \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n    }\n  ],\n  \"children\":[\n    {\n      \"id\":77777,\n      \"name\":\"Mobile Development\",\n      \"jobs\":[\n      ],\n      \"children\":[\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: User Creation Response Structure in Greenhouse API (JSON)\nDESCRIPTION: JSON response structure returned after successfully creating a user in Greenhouse. Contains the user's details including ID, name, email, timestamps, employee ID, linked candidate IDs, offices, departments, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 253818,\n    \"name\": \"Bob Smith\",\n    \"first_name\": \"Bob\",\n    \"last_name\": \"Smith\",\n    \"primary_email_address\": \"bob@email.org\",\n    \"updated_at\": \"2018-06-07T22:12:31.303Z\",\n    \"created_at\": \"2016-04-28T19:10:46.688Z\",\n    \"disabled\": false,\n    \"site_admin\": false,\n    \"emails\": [\n        \"bob@email.org\"\n    ],\n    \"employee_id\": \"ABC12345\",\n    \"linked_candidate_ids\": [123, 654],\n    \"offices\": [\n    {\n      \"id\": 47013,\n      \"name\": \"San Francisco\",\n      \"location\": {\n        \"name\": \"San Francisco, California\"\n      },\n      \"primary_contact_user_id\": 150894,\n      \"parent_id\": 50850,\n      \"parent_office_external_id\": \"14680\",\n      \"child_ids\": [50852, 50891],\n      \"child_office_external_ids\": [\"13473\", \"123473\"],\n      \"external_id\": \"15679\"\n    }\n    ],\n    \"departments\": [\n    {\n      \"id\": 25907,\n      \"name\": \"Marketing\",\n      \"parent_id\": 25908,\n      \"parent_department_external_id\": \"13473\",\n      \"child_ids\": [50852, 50891],\n      \"child_department_external_ids\": [\"13473\", \"123473\"],\n      \"external_id\": \"15679\"\n    }\n    ],\n    \"custom_fields\": {\n    \"equipment\": \"Laptop\",\n    \"shirt_size\": \"Medium\"\n    },\n    \"keyed_custom_fields\": {\n    \"equipment\": {\n      \"name\": \"Equipment\",\n      \"type\": \"short_text\",\n      \"value\": \"Laptop\"\n    },\n    \"shirt_size\": {\n      \"name\": \"Shirt Size\",\n      \"type\": \"single_select\",\n      \"value\": \"Medium\"\n    }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Request for Adding a New Candidate Tag\nDESCRIPTION: Shows the JSON structure for the request body when adding a new candidate tag, specifying the tag name.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"name\": \"New tag name\"\n}\n```\n\n----------------------------------------\n\nTITLE: List Application Demographic Answers API Request\nDESCRIPTION: GET request to retrieve all demographic answers for a specific application. Supports pagination and filtering by creation/update timestamps.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_16\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/applications/{id}/demographics/answers'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123,\n    \"free_form_text\": \"12am\",\n    \"application_id\": 787,\n    \"demographic_question_id\": 25,\n    \"demographic_answer_option_id\": 106,\n    \"created_at\": \"2019-04-29T18:46:03.707Z\",\n    \"updated_at\": \"2019-04-29T18:46:03.707Z\"\n  },\n  {\n    \"id\": 456,\n    \"free_form_text\": null,\n    \"application_id\": 787,\n    \"demographic_question_id\": 29,\n    \"demographic_answer_option_id\": 109,\n    \"created_at\": \"2017-01-29T15:09:46.806Z\",\n    \"updated_at\": \"2017-01-29T15:09:46.806Z\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Candidate/Prospect Rejected Webhook Event\nDESCRIPTION: Webhook payload that fires when a candidate or prospect is rejected for a position. This event triggers individually for each candidate when rejecting multiple candidates through a bulk action.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"reject_candidate\",\n  \"payload\": {\n    \"application\": {\n      \"id\": 265293,\n      \"rejected_at\": \"2015-02-11T15:50:41Z\",\n      \"prospect\": false,\n      \"status\": \"rejected\",\n      \"applied_at\": \"2013-03-22T00:00:00Z\",\n      \"last_activity_at\": \"2015-02-11T15:50:41Z\",\n      \"url\": \"https://app.greenhouse.io/people/265788?application_id=265293\",\n      \"source\": {\n        \"id\": 27,\n        \"public_name\": \"LinkedIn\"\n      },\n      \"credited_to\": null,\n      \"rejection_reason\": {\n        \"id\": 14,\n        \"name\": \"Too Junior\",\n        \"type\": {\n          \"id\": 3,\n          \"name\": \"Wrong skill set\"\n        }\n      },\n      \"rejection_details\": {\n        \"custom_fields\": {\n          \"custom_rejection_question_field\": {\n            \"name\": \"Custom Rejection Question Field\",\n            \"type\": \"short_text\",\n            \"value\": \"Example\"\n          }\n        }\n      },\n      \"current_stage\": {\n        \"id\": 2708728,\n        \"name\": \"Offer\",\n        \"interviews\": []\n      },\n      \"custom_fields\": {\n        \"custom_application_field\": {\n          \"name\": \"Custom Application Field\",\n          \"type\": \"short_text\",\n          \"value\": \"Example123\"\n        }\n      },\n      \"candidate\": {\n        \"id\": 265788,\n        \"first_name\": \"Hector\",\n        \"last_name\": \"Porter\",\n        \"title\": null,\n        \"company\": null,\n        \"created_at\": \"2013-10-04T01:24:48Z\",\n        \"external_id\": null,\n        \"photo_url\": null,\n        \"is_private\": false,\n        \"can_email\": true,\n        \"phone_numbers\": [\n          {\n            \"value\": \"330-281-8004\",\n            \"type\": \"home\"\n          }\n        ],\n        \"email_addresses\": [\n          {\n            \"value\": \"hector.porter.265788@example.com\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"addresses\": [],\n        \"website_addresses\": [],\n        \"social_media_addresses\": [],\n        \"educations\": [\n          {\n            \"school_name\": \"Harvard University\",\n            \"degree\": \"Bachelor's Degree\",\n            \"discipline\": \"Information Systems\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"employments\": [\n          {\n            \"company_name\": \"Greenhouse\",\n            \"title\": \"Engineer\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"recruiter\": null,\n        \"coordinator\": null,\n        \"attachments\": [\n          {\n            \"filename\": \"resume.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"resume\"\n          }\n        ],\n        \"tags\": [\n          \"Imported\"\n        ],\n        \"custom_fields\": {\n          \"favorite_color\": {\n            \"name\": \"Favorite Color\",\n            \"type\": \"short_text\",\n            \"value\": \"Blue\"\n          }\n        }\n      },\n      \"jobs\": [\n        {\n          \"id\": 371417,\n          \"name\": \"Designer\",\n          \"requisition_id\": null,\n          \"notes\": \"Digital and print\",\n          \"confidential\": false,\n          \"job_post_id\": 54321,\n          \"status\": \"open\",\n          \"created_by_id\": 273555,\n          \"created_at\": \"2013-10-02T22:59:29Z\",\n          \"opened_at\": \"2015-01-23T00:25:04Z\",\n          \"closed_at\": null,\n          \"departments\": [\n            {\n              \"id\": 237,\n              \"name\": \"Community\",\n              \"external_id\": \"ex-dept-1\"\n            }\n          ],\n          \"offices\": [\n            {\n              \"id\": 9099,\n              \"name\": \"New York\",\n              \"location\": \"New York, NY\",\n              \"external_id\": \"ex-office-1\"\n            }\n          ],\n          \"custom_fields\": {\n            \"employment_type\": {\n              \"name\": \"Employment Type\",\n              \"type\": \"single_select\",\n              \"value\": \"Full Time\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Email Template Object Structure in JSON\nDESCRIPTION: This JSON structure represents an email template object in the Greenhouse API. It includes attributes such as ID, name, description, type, body content, and user information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_email_templates.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 48765,\n  \"name\": \"Default Scorecard Reminder\",\n  \"description\": \"To be sent to an interviewer when their scorecard is due.\",\n  \"default\": true,\n  \"updated_at\": \"2018-06-01T17:04:13.598Z\",\n  \"created_at\": \"2015-11-18T22:26:32.154Z\",\n  \"type\": \"scorecard_reminder\",\n  \"from\": null,\n  \"cc\": [\n      \"example.user@example.com\"\n  ],\n  \"body\": null,\n  \"html_body\": \"<p>Hello,</p>\\r\\n<p>Please help us keep our hiring on track!</p>\\r\\n<p>Send in your feedback now for the interview you conducted earlier today with {{CANDIDATE_NAME}}.</p>\\r\\n<p>It's easy - just visit the following link to fill out your scorecard online: {{SCORECARD_LINK}}</p>\\r\\n<p>Thanks,<br /> {{ORGANIZER_NAME}}</p>\",\n  \"user\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Scheduled Interview Response Structure (JSON)\nDESCRIPTION: Shows the JSON structure of a scheduled interview response, including details like application ID, start and end times, location, and interviewer information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 9128481,\n  \"application_id\": 4684156,\n  \"external_event_id\": \"event123\",\n  \"start\": {\n    \"date_time\": \"2014-03-26T22:15:00.000Z\"\n  },\n  \"end\": {\n    \"date_time\": \"2014-03-26T22:30:00.000Z\"\n  },\n  \"location\": \"Big Conference Room\",\n  \"video_conferencing_url\": \"http://example.com\",\n  \"status\": \"awaiting_feedback\",\n  \"created_at\": \"2016-02-10T14:31:51.019Z\",\n  \"updated_at\": \"2016-05-23T20:43:11.679Z\",\n  \"interview\": {\n    \"id\": 7001,\n    \"name\": \"Culture Fit\"\n  },\n  \"organizer\": {\n    \"id\": 2000,\n    \"first_name\": \"Jack\",\n    \"last_name\": \"Shepard\",\n    \"name\": \"Jack Shepard\",\n    \"employee_id\": \"12345\"\n  },\n  \"interviewers\": [\n    {\n      \"id\": 4080,\n      \"employee_id\": \"employee123\",\n      \"name\": \"Kate Austen\",\n      \"email\": \"kate.austen@example.com\",\n      \"response_status\": \"needs_action\",\n      \"scorecard_id\": 11274\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Job Board Information with Greenhouse API (JSON)\nDESCRIPTION: This code snippet demonstrates the JSON response structure when retrieving job board information. It includes the organization name and content. The content is typically HTML that can be used to display the job board.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_boards.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"Your Organization\",\n  \"content\": \"<p>...</p>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Anonymized Fields in Greenhouse API\nDESCRIPTION: A detailed table listing the anonymizable fields in the Greenhouse API and the corresponding anonymization process for each field. The table includes attributes such as activity items, addresses, offer versions, and various candidate-related data points.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| Attribute | Anonymize Process |\n|------------|--------|\n| `activity_items` | Destroy all items in the candidate's activity feed of type \"activity\". In Harvest's Activity Feed endpoint, these are items in the `activities` section. |\n| `addresses` | Destroy all values from `candidate.addresses` |\n| `all_offer_versions` | For each of this candidate's applications, destroy all offers. (For legacy reasons, this will also raise an [Offer Deleted](#offer-deleted) webhook if one is configured.) |\n| `application_questions` | For each of this candidate's applications, destroy all values from `application.answers`. |\n| `attachments` | Destroy all attachments on this candidate and all their associated applications. |\n| `candidate_stage_data` | For each of this candidate's applications, set the `created_at` time to now, remove the candidate from the current stage, destroy all stage transition information, and set the candidate back to the first stage. |\n| `coordinator` | Set `candidate.coordinator` to null |\n| `credited_to` | For each of this candidate's application, destroy `application.credited_to`. |\n| `custom_application_fields` | For each of this candidate's applications, destroy `application.custom_fields`. |\n| `custom_candidate_fields` | Destroy all values from `candidate.custom_fields` |\n| `custom_rejection_question_fields` | For each of this candidate's application, destroy all custom fields on rejection details. |\n| `current_company` | Set `candidate.company` to null. |\n| `current_title` | Set `candidate.title` to null. |\n| `education` | Remove all values from `candidate.educations` |\n| `email_addresses` | Destroy all values from `candidate.email_addresses` |\n| `employment` | Remove all values from `candidate.employments` |\n| `emails` | Destroy record of any e-mails sent to this candidate via Greenhouse. |\n| `follow_up_reminders` | Destroy any follow-up reminders configured on this person. |\n| `full_name` | Set `candidate.first_name` to \"Anonymized\" and `candidate.last_name` to the `candidate.id`. |\n| `headline` | Set the candidate's headline to null. |\n| `inmails` | Destroy record of any LinkedIn Inmails synced to this candidate from LinkedIn. |\n| `innotes` | Destroy record of any LinkedIn Innotes synced to this candidate from LinkedIn. |\n| `location` | For each of this candidate's applications, set `application.location` to null. |\n| `notes` | Destroy all notes on this candidate. |\n| `offers` | Destroy all information on all offers on any of this candidate's applications without destroying that an offer was made. |\n| `phone_numbers` | Remove all values from `candidate.phone_numbers` |\n| `prospect_jobs` | Remove all associations between this prospect and jobs. |\n| `prospect_offices` | Remove all associations between this prospect and offices. |\n| `prospect_offices_and_departments` | Remove all associations between this prospect and departments. |\n| `prospect_owner` | For each of this candidate's prospect applications, destroy the prospect owner. |\n| `prospect_pool_and_stage` | For each of this candidate's application, destroy the prospect pool and the prospect pool stage. |\n| `recruiter` | Set `candidate.recruiter` to null |\n| `referral_questions` | Destroy all referral answers for this candidate. |\n| `rejection_notes` | Destroy all notes specifically related to this candidate's rejection. |\n| `rejection_reasons` | Set `rejection_reason` on all candidate applications to null. |\n| `scorecards_and_interviews` | Destroy all scorecards with this candidate id and all interviews with any application from this candidate id |\n| `social_media_links` | Remove all values from `candidate.social_media_addresses` |\n| `source` | Remove `application.source` in all this candidate's applications. |\n| `tags` | Remove all values from `candidate.tags` |\n| `third_party_integrations` | Disconnect the candidate's profile from the LinkedIn CSA and RSC integrations. |\n| `touchpoints` | Destroy all touchpoints on the candidate, all the candidate's applications, and any notes associated with touchpoints. |\n| `websites` | Remove all values from `candidate.website_addresses` |\n```\n\n----------------------------------------\n\nTITLE: Listing Offices API Request\nDESCRIPTION: Shell command to request a list of all offices from the Greenhouse API using cURL. Requires Basic Authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/offices'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Demographic Question Set in JSON\nDESCRIPTION: This snippet shows the structure of a Demographic Question Set object returned by the API. It includes attributes such as id, title, description, and active status.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 1991,\n  \"title\": \"Question Set\",\n  \"description\": \"<p>Questions for candidates</p>\",\n  \"active\": true\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Payload for Sending Test Request (JSON)\nDESCRIPTION: This JSON object represents the payload sent in the POST request to the Assessment Partner's API. It includes candidate information, test details, and callback URLs.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_send_test.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"partner_test_id\": \"12345\",\n  \"candidate\": {\n    \"first_name\": \"Harry\",\n    \"last_name\": \"Potter\",\n    \"preferred_name\": \"The Chosen One\",\n    \"resume_url\": \"https://hogwarts.com/resume\",\n    \"phone_number\": \"123-456-7890\",\n    \"email\": \"hpotter@hogwarts.edu\",\n    \"greenhouse_profile_url\": \"https://app.greenhouse.io/people/17681532?application_id=26234709\"\n  },\n  \"sent_by\": \"test_sender@example.org\",\n  \"url\": \"https://app.greenhouse.io/integrations/testing_partners/take_home_tests/12345\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Converting Prospect to Candidate (JSON)\nDESCRIPTION: JSON response returned after successfully converting a prospect to a candidate. Contains success status, original application ID, new application ID, and information about the new job and stage placement.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"success\": true,\n  \"old_application_id\": 1234321,\n  \"new_application_id\": 43234323,\n  \"new_job_id\": 123456,\n  \"new_stage_id\": 234567\n}\n```\n\n----------------------------------------\n\nTITLE: Example Response from List Offers Endpoint in JSON\nDESCRIPTION: This JSON snippet shows an example response from the List Offers endpoint. It returns an array of offer objects with all their attributes, including both standard fields and custom fields with different data types.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offers.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n  \"id\": 1142785,\n  \"version\": 1,\n  \"application_id\": 91081818,\n  \"job_id\": 84593,\n  \"candidate_id\": 7328851,\n  \"opening\": {\n    \"id\": 2586842,\n    \"opening_id\": \"4-7\",\n    \"status\": \"open\",\n    \"opened_at\": \"2019-05-22T20:58:51.697Z\",\n    \"closed_at\": null,\n    \"application_id\": null,\n    \"close_reason\": null\n  },\n  \"created_at\": \"2018-06-06T20:23:10.378Z\",\n  \"updated_at\": \"2018-06-06T20:23:43.388Z\",\n  \"sent_at\": \"2018-06-07\",\n  \"resolved_at\": \"2018-06-06T20:23:43.387Z\",\n  \"starts_at\": \"2018-07-20\",\n  \"status\": \"accepted\",\n  \"custom_fields\": {\n    \"employment_type\": \"Contractor\",\n    \"favorite_station\": \"The Swan\",\n    \"best_seasons\": null,\n    \"start_date\": \"2004-09-21\",\n    \"willing_to_negotiate\": null,\n    \"salary\": \"Around $100k\",\n    \"notes\": \"This is a note field\"\n  },\n  \"keyed_custom_fields\": {\n    \"time_type\": {\n      \"name\": \"Employment Type\",\n      \"type\": \"single_select\",\n      \"value\": \"Contractor\"\n    },\n    \"favorite_station\": {\n      \"name\": \"Favorite Station\",\n      \"type\": \"single_select\",\n      \"value\": \"The Swan\"\n    },\n    \"best_seasons\": {\n      \"name\": \"Best seasons\",\n      \"type\": \"multi_select\",\n      \"value\": null\n    },\n    \"start_date\": {\n      \"name\": \"Start Date\",\n      \"type\": \"date\",\n      \"value\": \"2004-09-21\"\n    },\n    \"will_negotiate\": {\n      \"name\": \"Willing to negotiate\",\n      \"type\": \"yes_no\",\n      \"value\": null\n    },\n    \"salary\": {\n      \"name\": \"Salary\",\n      \"type\": \"short_text\",\n      \"value\": \"Around $100k\"\n    },\n    \"notes\": {\n      \"name\": \"Notes\",\n      \"type\": \"long_text\",\n      \"value\": \"This is a note field\"\n    }\n  }\n},\n  {\n    \"id\": 1142765,\n    \"version\": 1,\n    \"application_id\": 91078894,\n    \"job_id\": 837749,\n    \"candidate_id\": 7327285,\n    \"opening\":  null,\n    \"created_at\": \"2018-06-06T20:21:15.639Z\",\n    \"updated_at\": \"2018-06-06T20:21:29.796Z\",\n    \"sent_at\": null,\n    \"resolved_at\": null,\n    \"starts_at\": \"2018-06-30\",\n    \"status\": \"deprecated\",\n    \"custom_fields\": {\n      \"employment_type\": \"Part-Time\",\n      \"favorite_station\": \"The Looking Glass\",\n      \"best_seasons\": [\"Season 1\", \"Season 2\"],\n      \"start_date\": \"2014-05-01\",\n      \"willing_to_negotiate\": true,\n      \"salary\": {\n        \"value\": 42000,\n        \"currency\": \"EUR\"\n      },\n      \"notes\": \"Very excited to start working with this candidate\"\n    },\n    \"keyed_custom_fields\": {\n      \"time_type\": {\n        \"name\": \"Employment Type\",\n        \"type\": \"single_select\",\n        \"value\": \"Part-Time\"\n      },\n      \"favorite_station\": {\n        \"name\": \"Favorite Station\",\n        \"type\": \"single_select\",\n        \"value\": \"The Looking Glass\"\n      },\n      \"best_seasons\": {\n        \"name\": \"Best seasons\",\n        \"type\": \"multi_select\",\n        \"value\": [\"Season 1\", \"Season 2\"]\n      },\n      \"start_date\": {\n        \"name\": \"Start Date\",\n        \"type\": \"date\",\n        \"value\": \"2014-05-01\"\n      },\n      \"will_negotiate\": {\n        \"name\": \"Willing to negotiate\",\n        \"type\": \"yes_no\",\n        \"value\": true\n      },\n      \"salary\": {\n        \"name\": \"Salary\",\n        \"type\": \"currency\",\n        \"value\": {\n          \"value\": 42000,\n          \"currency\": \"EUR\"\n        }\n      },\n      \"notes\": {\n        \"name\": \"Notes\",\n        \"type\": \"long_text\",\n        \"value\": \"Very excited to start working with this candidate\"\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Listing Demographic Questions API Call in Shell\nDESCRIPTION: This snippet shows how to make an API call to list all demographic questions for an organization using cURL. It includes the endpoint and necessary authorization header.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/questions'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Activity Feed using cURL in Greenhouse API\nDESCRIPTION: This snippet demonstrates how to retrieve a candidate's activity feed using a cURL command. It requires authentication and the candidate's ID as a parameter.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_activity_feed.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/candidates/{id}/activity_feed' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: List Job Posts API Request\nDESCRIPTION: Example cURL request to retrieve a list of job posts from the Greenhouse API. Requires Basic Authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_posts.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/job_posts'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Future Job Permission Addition Request Body in JSON\nDESCRIPTION: Specifies the JSON structure for the request body when adding a future job permission, including the office ID, department ID, and user role ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"office_id\": 58028, \n  \"department_id\": 45644, \n  \"user_role_id\": 7607 \n}\n```\n\n----------------------------------------\n\nTITLE: Department Deletion Webhook Payload in Greenhouse API\nDESCRIPTION: JSON example of a webhook payload sent when a department is deleted from the Greenhouse system. The payload includes the department's ID, name, child department IDs, parent department ID, and external ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_organization_events.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"department_deleted\",\n  \"payload\": {\n    \"department\": {\n      \"id\": 106,\n      \"name\": \"Creative\",\n      \"child_ids\": [\n        23328\n      ],\n      \"parent_id\": 5,\n      \"external_id\": \"ex-office-1\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rejecting an Application via Greenhouse API (Shell)\nDESCRIPTION: This snippet demonstrates how to make a POST request to reject an application using the Greenhouse API. It includes the required headers and endpoint URL.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_23\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/applications/{id}/reject'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Candidate Anonymization Webhook Response\nDESCRIPTION: JSON payload structure when a candidate's information is anonymized in Greenhouse. Includes the candidate ID and list of fields that were anonymized.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"candidate_anonymized\",\n  \"payload\": {\n    \"candidate_id\": 37031511,\n    \"anonymized_fields\": [\"full_name\", \"current_title\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Demographic Question Set API Call in Shell\nDESCRIPTION: This snippet demonstrates how to make an API call to retrieve a specific demographic question set by its ID using cURL. It includes the endpoint with a placeholder for the question set ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/question_sets/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Get Pending Approvals - API Request\nDESCRIPTION: HTTP GET request to retrieve all pending approvals for a specific user with example response structure.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X GET 'https://harvest.greenhouse.io/v1/users/{id}/pending_approvals'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Requesting List Tests API Endpoint using HTTP Basic Authentication\nDESCRIPTION: This snippet demonstrates how Greenhouse would make a GET request to the Assessment Partner's list_tests endpoint using HTTP Basic Authentication. The API key is provided as the username in the Basic Authentication header after being base64 encoded.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_introduction.md#2025-04-14_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET https://www.testing-partner-a.com/api/list_tests\nAuthorization: Basic < base-64-encoded-credentials >\n```\n\n----------------------------------------\n\nTITLE: Deleting Scheduled Interview via Greenhouse API\nDESCRIPTION: This snippet demonstrates how to delete a scheduled interview using the Greenhouse API. It requires the interview ID and user authentication. The API returns a JSON response confirming the deletion.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X DELETE 'https://harvest.greenhouse.io/v1/scheduled_interviews/{id}'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"Interview 109170954 has been deleted.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Offer Approved Event Webhook JSON Schema\nDESCRIPTION: JSON schema for the webhook event that fires when an offer is approved in Greenhouse. Contains the same structure as offer created event.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_application_events.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"action\": \"offer_approved\",\n    \"payload\": {\n        \"id\": 12345,\n        \"application_id\": 234556,\n        \"job_id\": 45678,\n        \"user_id\": 67890,\n        \"version\": 1,\n        \"sent_on\": \"2013-03-22\",\n        \"resolved_at\": \"2013-03-25T00:00:00Z\",\n        \"start_date\": \"04/15/2013\",\n        \"notes\": \"Vacation scheduled 4/20 - 4/23\",\n        \"offer_status\": \"Accepted\",\n        \"custom_fields\": {\n            \"custom_application_field\": {\n                \"name\": \"Custom Application Field\",\n                \"type\": \"short_text\",\n                \"value\": \"Example\"\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Office Response\nDESCRIPTION: JSON response returned after successfully creating a new office. Contains the full office object with all attributes including the newly assigned ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 58028,\n  \"name\": \"Brooklyn\",\n  \"location\": {\n      \"name\": \"Brooklyn, NY\"\n  },\n  \"primary_contact_user_id\": 336474,\n  \"parent_id\": 47012,\n  \"parent_office_external_id\": \"parent-1\",\n  \"child_ids\": [],\n  \"child_office_external_id\": [],\n  \"external_id\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Demographic Answer in JSON\nDESCRIPTION: This snippet demonstrates the structure of a Demographic Answer object. It includes attributes such as id, free-form text, application id, question id, answer option id, and timestamps.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 51,\n  \"free_form_text\": \"12am\",\n  \"application_id\": 107594341,\n  \"demographic_question_id\": 25,\n  \"demographic_answer_option_id\": 106,\n  \"created_at\": \"2019-04-29T18:46:03.707Z\",\n  \"updated_at\": \"2019-04-29T18:46:03.707Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Request Body for Creating a Tracking Link\nDESCRIPTION: This JSON object represents the request body for creating a tracking link. It includes the job_id parameter, which is required for specifying the job associated with the tracking link.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_tracking_link.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"job_id\": 12345\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Custom Field Options via PATCH Request (Shell)\nDESCRIPTION: Makes a PATCH request to update existing options of a custom field. Includes authentication headers and content type.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/custom_field/{id}/custom_field_options'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Demographic Question API Call in Shell\nDESCRIPTION: This snippet demonstrates how to make an API call to retrieve a specific demographic question by its ID using cURL. It includes the endpoint with a placeholder for the question ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/questions/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Scorecard Deleted Webhook Event Structure in JSON\nDESCRIPTION: JSON payload structure that is sent when individual scorecards are destroyed via the Harvest API delete endpoint or the delete scorecard link in the application. This webhook doesn't fire when a candidate or application is deleted.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_interview_events.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"scorecard_deleted\",\n  \"payload\": {\n    \"scorecard\": {\n      \"id\": 6036088,\n      \"candidate_id\": 29843272,\n      \"interviewed_at\": \"2016-12-28T17:00:00.000Z\",\n      \"created_at\": \"2016-12-28T22:58:03.552Z\",\n      \"updated_at\": \"2016-12-28T22:58:03.552Z\",\n      \"scorecard_status\": \"complete\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Tracking Link Response - JSON\nDESCRIPTION: Example JSON response returned when retrieving tracking link data, showing all fields including job board details, source information, and credited employee data.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tracking_links.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 6004841,\n  \"token\": \"tnch4u\",\n  \"created_at\": \"2012-10-07T15:06:35.975Z\",\n  \"updated_at\": \"2016-09-27T17:52:56.533Z\",\n  \"related_post_id\": 1,\n  \"related_post_type\": \"SocialMediaPost\",\n  \"job_id\": 12314,\n  \"job_post_id\": 124263,\n  \"job_board\": {\n    \"id\": 8578,\n    \"company_name\": \"Business Corp\",\n    \"url_token\": \"businessco\"\n  },\n  \"source\": {\n    \"id\": 4,\n    \"public_name\": \"Twitter\"\n  },\n  \"credited_to\": {\n    \"id\": 1,\n    \"first_name\": \"Some\",\n    \"last_name\": \"Employee\",\n    \"name\": \"Some Employee\",\n    \"employee_id\": \"ABC12345\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Scheduled Interview (Shell)\nDESCRIPTION: Demonstrates how to update an existing scheduled interview using a PATCH request to the Greenhouse API, including necessary headers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/scheduled_interviews/{id}'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Editing User Information in Greenhouse API\nDESCRIPTION: This snippet demonstrates how to edit user information using the Greenhouse API. It sends a PATCH request to the /users/ endpoint with JSON payload containing updated user details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v2/users/'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Custom Field Update Request JSON (JSON)\nDESCRIPTION: JSON payload for updating a custom field, including new name, description, privacy setting, and template token.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Name\",\n  \"description\": \"New description\",\n  \"private\": false,\n  \"template_token_string\": \"token123\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Degrees List with cURL\nDESCRIPTION: Shows how to make a GET request to retrieve a list of degree levels using cURL. This endpoint returns all degree levels for the organization, sorted by priority.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_education.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/degrees' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing Candidate Tags with cURL\nDESCRIPTION: Demonstrates how to list all candidate tags for an organization using a GET request with cURL.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X GET 'https://harvest.greenhouse.io/v1/tags/candidate'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Replacing an Approver - JSON Request Body\nDESCRIPTION: This JSON object represents the request body for replacing an approver in an approver group. It specifies the user ID of the approver to be removed and the user ID of the new approver to be added.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"remove_user_id\": 1443,\n  \"add_user_id\": 5432\n}\n```\n\n----------------------------------------\n\nTITLE: Single Scorecard Response Format\nDESCRIPTION: JSON response structure for a single scorecard, including detailed interview information, ratings, and questionnaire responses.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scorecards.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 211231,\n  \"updated_at\": \"2016-08-22T19:52:38.384Z\",\n  \"created_at\": \"2016-08-22T19:52:38.384Z\",\n  \"interview\": \"Application Review\",\n  \"interview_step\": {\n    \"id\": 432,\n    \"name\": \"Application Review\"\n  },\n  \"candidate_id\": 2131415,\n  \"application_id\": 23558552,\n  \"interviewed_at\": \"2016-08-18T16:00:00.000Z\",\n  \"submitted_by\": {...},\n  \"interviewer\": {...},\n  \"submitted_at\": \"2014-03-26T21:59:51Z\",\n  \"overall_recommendation\": \"yes\",\n  \"attributes\": [...],\n  \"ratings\": {...},\n  \"questions\": [...]\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Current Offer for an Application using Greenhouse API\nDESCRIPTION: This endpoint updates the current offer for a specific application. It allows modification of offer details including custom fields. The response indicates success or failure of the update operation.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offers.md#2025-04-14_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/applications/{id}/offers/current_offer'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"start_date\": \"2018-03-15\",\n  \"sent_at\": \"2018-06-27\",\n  \"created_at\": \"2017-09-29T12:56:05Z\",\n  \"custom_fields\": [\n    {\n        \"id\": 1234,\n        \"value\": \"Some new value\"\n    },\n    {\n        \"name_key\": \"single_select_field_name\",\n        \"value\": 12345\n   },\n   {\n        \"id\": 5678,\n        \"delete_value\": \"true\"\n   }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"success\": true\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Payload for Editing User in Greenhouse API\nDESCRIPTION: This JSON structure represents the payload for editing user information in the Greenhouse API. It includes user identification and updated fields such as name, employee ID, office and department associations, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"user\": {\n    \"email\": \"test@example.com\"\n  },\n  \"payload\": {\n    \"first_name\": \"Bob\",\n    \"last_name\": \"Smith\",\n    \"employee_id\": \"ABC12345\",        \n    \"office_ids\": [12345, 67890],\n    \"department_ids\": [12345, 67890],\n    \"custom_fields\": [\n      {\n        \"id\": 1234,\n        \"value\": \"Some new value\"\n      },\n      {\n        \"name_key\": \"custom_field_name_key\",\n        \"value\": \"Some new value\"\n      },\n      {\n        \"id\": 5678,\n        \"delete_value\": \"true\"\n      }\n    ]\n  }\t\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Field Options Update Request JSON (JSON)\nDESCRIPTION: JSON payload for updating existing custom field options, including ID, updated name, priority, and external ID for each option.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"options\": [\n    {\n      \"id\": 123,\n      \"name\": \"Option A\",\n      \"priority\": 5,\n      \"external_id\": \"3z84k11\"\n    },\n    {\n      \"id\": 234,\n      \"name\": \"Option B\",\n      \"priority\": 6,\n      \"external_id\": null\n    },\n    {\n      \"id\": 345,\n      \"name\": \"Option C\",\n      \"priority\": 7,\n      \"external_id\": \"32290\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Job Permissions List using cURL\nDESCRIPTION: Demonstrates how to make a GET request to retrieve a list of job permissions for a specific user using cURL. Requires authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/users/{id}/permissions/jobs'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: List Job Approvals - API Request\nDESCRIPTION: HTTP GET request to retrieve all approval flows for a specific job ID with authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/jobs/{job_id}/approval_flows'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Replacing an Approver - JSON Response\nDESCRIPTION: This JSON object represents the successful response from the API after replacing an approver. It includes confirmation of success, a message, and details about the approval flow and user IDs involved in the change.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"success\": \"true\",\n  \"message\": \"Approver group updated.\",\n  \"approval_flow_id\": 454,\n  \"approver_group_id\": 343,\n  \"removed_user_id\": 1443,\n  \"added_user_id\": 5432\n}\n```\n\n----------------------------------------\n\nTITLE: User Object Structure in Greenhouse API Response\nDESCRIPTION: This JSON structure represents the response from the Greenhouse API when retrieving user details. It includes personal information, office and department associations, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 112,\n  \"name\": \"Juliet Burke\",\n  \"first_name\": \"Juliet\",\n  \"last_name\": \"Burke\",\n  \"primary_email_address\": \"juliet.burke@example.com\",\n  \"updated_at\": \"2016-11-17T16:13:48.888Z\",\n  \"created_at\": \"2015-11-18T22:26:32.243Z\",  \n  \"disabled\": false,\n  \"site_admin\": true,\n  \"emails\": [\n    \"juliet.burke@example.com\",\n    \"other.woman@example.com\"\n  ],\n  \"employee_id\": \"221\",\n  \"linked_candidate_ids\": [123, 654],\n  \"offices\": [\n    {\n      \"id\": 47013,\n      \"name\": \"San Francisco\",\n      \"location\": {\n        \"name\": \"San Francisco, California\"\n      },\n      \"primary_contact_user_id\": 150894,\n      \"parent_id\": 50850,\n      \"parent_office_external_id\": \"14680\",\n      \"child_ids\": [50852, 50891],\n      \"child_office_external_ids\": [\"13473\", \"123473\"],\n      \"external_id\": \"15679\"\n    }\n  ],\n  \"departments\": [\n    {\n      \"id\": 25907,\n      \"name\": \"Marketing\",\n      \"parent_id\": 25908,\n      \"parent_department_external_id\": \"13473\",\n      \"child_ids\": [50852, 50891],\n      \"child_department_external_ids\": [\"13473\", \"123473\"],\n      \"external_id\": \"15679\"\n    }\n  ],\n  \"custom_fields\": {\n    \"equipment\": \"Laptop\",\n    \"shirt_size\": \"M\",\n    \"hiring_specialties\": [\n      \"Engineers\",\n      \"Executives\"\n    ],\n    \"trained_for_interviews\": true,\n    \"recruiting_partner\": {\n      \"name\": \"Johnny Recruiter\",\n      \"email\": \"johnny@example.com\",\n      \"user_id\": 4000000000\n    }\n  },\n  \"keyed_custom_fields\": {\n    \"equipment\": {\n      \"name\": \"Equipment\",\n      \"type\": \"short_text\",\n      \"value\": \"Laptop\"\n    },\n    \"shirt_size\": {\n      \"name\": \"Shirt Size\",\n      \"type\": \"single_select\",\n      \"value\": \"M\"\n    },\n    \"hiring_specialties\": {\n      \"name\": \"Hiring Specialties\",\n      \"type\": \"multi_select\",\n      \"value\": [\n        \"Engineers\",\n        \"Executives\"\n      ]\n    },\n    \"trained_for_interviews\": {\n      \"name\": \"Trained for interviews\",\n      \"type\": \"boolean\",\n      \"value\": true\n    },\n    \"recruiting_partner\": {\n      \"name\": \"Recruiting Partner\",\n      \"type\": \"user\",\n      \"value\": {\n        \"name\": \"Johnny Recruiter\",\n        \"email\": \"johnny@example.com\",\n        \"user_id\": 4000000000\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Rejection Reason via Greenhouse API (Shell)\nDESCRIPTION: This snippet demonstrates how to make a PATCH request to update the rejection reason for an application using the Greenhouse API. It includes the required headers and endpoint URL.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_26\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/applications/{id}/reject'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Add Department API Request\nDESCRIPTION: Shell command and JSON payload for creating a new department with optional parent relationship.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_departments.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/departments\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"A New Department\",\n  \"parent_id\": 12345,\n  \"external_id\": \"456454\"\n}\n```\n\n----------------------------------------\n\nTITLE: List Departments API Request\nDESCRIPTION: Shell command to retrieve all departments from the Greenhouse API using Basic authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_departments.md#2025-04-14_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/departments'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Adding a Tag to a Candidate with cURL\nDESCRIPTION: Shows how to add a specific tag to a candidate using a PUT request with cURL.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PUT 'https://harvest.greenhouse.io/v1/candidates/{candidate_id}/tags/{tag_id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Job Openings Creation Response\nDESCRIPTION: Sample JSON response showing the created job openings with their IDs and timestamps\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"openings\": [\n        {\n            \"id\": 123456,\n            \"opening_id\": \"abc-123\",\n            \"open_date\": \"2017-10-02T19:53:32.565Z\"\n        },\n        {\n            \"id\": 123457,\n            \"opening_id\": null,\n            \"open_date\": \"2017-10-02T19:53:32.565Z\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sending POST Request to Unreject Application in Greenhouse API\nDESCRIPTION: This cURL command demonstrates how to send a POST request to unreject an application. It requires an empty JSON body and includes necessary headers for authentication and user identification.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_29\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/applications/{id}/unreject'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Creating/Replacing Approval Flow - JSON Request Body\nDESCRIPTION: This JSON object represents the request body for creating or replacing an approval flow. It specifies the approval type, offer ID, whether the flow is sequential, and the structure of approver groups with their required approvals and approvers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"approval_type\": \"offer_candidate\",\n    \"offer_id\": 343,\n    \"sequential\": false,\n    \"approver_groups\": [\n        {\n            \"approvals_required\": 2,\n            \"approvers\": [\n                { \"user_id\": 1432 },\n                { \"email\": \"eddie.vedder@example.com\" }\n            ]\n        },\n        {\n            \"approvals_required\": 1,\n            \"approvers\": [\n                { \"employee_id\": \"abc-123\" }\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Submitting Attachments as Plaintext\nDESCRIPTION: Example of submitting a resume attachment by providing the plaintext file contents. This method works with both multipart/form-data and application/json content types.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_applications.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n\"resume_text\": \"This is my awesome resume!\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Job Stage with cURL in Shell\nDESCRIPTION: This snippet demonstrates how to make a GET request to retrieve a job stage by its ID using cURL. It includes the necessary authorization header.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_stages.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/job_stages/{id}' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Edit Department API Request\nDESCRIPTION: Shell command and JSON payload for updating an existing department's information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_departments.md#2025-04-14_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/departments/{id}'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"name\": \"Engineering\",\n   \"external_id\": \"EXTERNAL_ID_1234\"\n}\n```\n\n----------------------------------------\n\nTITLE: Successful User Edit Response in Greenhouse API\nDESCRIPTION: This JSON structure represents the response from the Greenhouse API after successfully editing user information. It confirms the success of the operation.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"success\": \"true\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Scorecard - Shell Request\nDESCRIPTION: HTTP GET request to retrieve a specific scorecard by its ID. Requires Basic Authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scorecards.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/scorecards/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Demographic Answer Option in JSON\nDESCRIPTION: This snippet shows the structure of a Demographic Answer Option object. It includes attributes such as id, free-form flag, active status, name, question id, and translations.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 456,\n  \"free_form\": false,\n  \"active\": true,\n  \"name\": \"Blue\",\n  \"demographic_question_id\": 123,\n  \"translations\": [\n    {\n      \"language\": \"en\",\n      \"name\": \"Blue\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Demographic Question in JSON\nDESCRIPTION: This snippet demonstrates the structure of a Demographic Question object. It includes attributes such as id, active status, question set id, name, translations, required flag, and answer type.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 123,\n  \"active\": true,\n  \"demographic_question_set_id\": 456,\n  \"name\": \"What is your favorite color?\",\n  \"translations\": [\n    {\n      \"language\": \"en\",\n      \"name\": \"What is your favorite color?\"\n    }\n  ],\n  \"required\": true,\n  \"answer_type\": \"multi_value_multi_select\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving the Custom Field Object Structure in JSON\nDESCRIPTION: This JSON example shows the complete structure of a custom field object, including its attributes like ID, name, field type, value type, and available options.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 123456,\n  \"name\": \"Seniority Level\",\n  \"field_type\": \"job\",\n  \"priority\": 1,\n  \"value_type\": \"single_select\",\n  \"private\": true,\n  \"required\": false,\n  \"require_approval\": true,\n  \"trigger_new_version\": false,\n  \"name_key\": \"custom_field_name\",\n  \"description\": \"Seniority of this role\",\n  \"expose_in_job_board_api\": true,\n  \"api_only\": false,\n  \"offices\": [\n    {\n      \"id\": 11915,\n      \"name\": \"New York\",\n      \"location\": {\n        \"name\": \"New York, New York, United States\"\n      },\n      \"primary_contact_user_id\": null,\n      \"parent_id\": null,\n      \"parent_office_external_id\": null,\n      \"child_ids\": [],\n      \"child_office_external_ids\": [],\n      \"external_id\": null\n    }\n  ],\n  \"departments\": [],\n  \"template_token_string\": \"{{SENIORITY}}\",\n  \"custom_field_options\": [\n    {\n      \"id\": 123,\n      \"name\": \"Junior\",\n      \"priority\": 1,\n      \"external_id\": \"jr\"\n    },\n    {\n      \"id\": 234,\n      \"name\": \"Senior\",\n      \"priority\": 2,\n      \"external_id\": null\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Prospect Pool Object Structure in JSON\nDESCRIPTION: Defines the structure of a prospect pool object, including its ID, name, active status, and associated prospect stages.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_prospect_pools.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 25,\n    \"name\": \"Cold Outreach: Sourced\",\n    \"active\": true,\n    \"prospect_stages\": [\n        {\n            \"id\": 85,\n            \"name\": \"Discussed\"\n        },\n        {\n            \"id\": 86,\n            \"name\": \"Had email listed on their blog\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Editing Job Openings with cURL Request\nDESCRIPTION: Example shell command for editing a job opening using the Greenhouse API. Uses the PATCH endpoint with authentication and On-Behalf-Of header for auditing.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/jobs/{job_id}/openings/{d}'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Current User API Request\nDESCRIPTION: This snippet shows the expected JSON response from the Greenhouse API when retrieving current user information. It includes the user's full name, first name, last name, email, and user ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_current_user.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"full_name\": \"Ron Weasley\",\n  \"first_name\": \"Ron\",\n  \"last_name\": \"Weasley\",\n  \"email\": \"rweasley@hogwarts.edu\",\n  \"id\": 1234\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Sections Response Example in JSON\nDESCRIPTION: Example JSON response when listing all sections through the Greenhouse API. Shows the structure of sections containing prospect posts, including section IDs, names, and associated jobs with their details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_sections.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"sections\":[\n    {\n      \"id\":14128,\n      \"name\":\"Don't see a job you like?\",\n      \"jobs\":[\n        {\n          \"id\":44444,\n          \"title\":\"Engineer\",\n          \"location\":{\n            \"name\":\"San Francisco, CA\"\n          },\n          \"updated_at\":\"2013-07-02T19:39:23Z\",\n          \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n        },\n        {\n          \"id\":55555,\n          \"title\":\"Product Manager\",\n          \"location\":{\n            \"name\":\"San Francisco, CA\"\n          },\n          \"updated_at\":\"2013-07-02T19:39:23Z\",\n          \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n        }\n      ]\n    },\n  {\n      \"id\":85764,\n      \"name\":\"General Application\",\n      \"jobs\":[\n        {\n          \"id\":888888,\n          \"title\":\"Prospect\",\n          \"location\":{\n            \"name\":\"San Francisco, CA\"\n          },\n          \"updated_at\":\"2013-07-02T19:39:23Z\",\n          \"absolute_url\":\"http://your.co/careers?gh_jid=888888\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieve Single Demographic Answer API Request\nDESCRIPTION: GET request to retrieve a specific demographic answer by ID. Requires Basic authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/answers/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 123,\n  \"free_form_text\": \"12am\",\n  \"application_id\": 787,\n  \"demographic_question_id\": 25,\n  \"demographic_answer_option_id\": 106,\n  \"created_at\": \"2019-04-29T18:46:03.707Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Email Address Addition Request Body Structure in Greenhouse API (JSON)\nDESCRIPTION: JSON structure for adding an email address to a user in Greenhouse. Includes the email address and a boolean indicating whether to send a verification email.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"email\": \"bob@email.org\",\n  \"send_verification\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Candidate Unrejection Webhook Response\nDESCRIPTION: JSON payload structure when a candidate or prospect is unrejected in Greenhouse. Contains detailed application and candidate information including status, stage, custom fields, and job details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"unreject_candidate\",\n  \"payload\": {\n    \"application\": {\n      \"id\": 265293,\n      \"rejected_at\": null,\n      \"prospect\": false,\n      \"status\": \"active\",\n      \"applied_at\": \"2013-03-22T00:00:00Z\",\n      \"last_activity_at\": \"2015-02-11T15:50:41Z\",\n      \"url\": \"https://app.greenhouse.io/people/265788?application_id=265293\",\n      \"source\": {\n        \"id\": 27,\n        \"public_name\": \"LinkedIn\"\n      },\n      \"credited_to\": null,\n      \"rejection_reason\": null,\n      \"rejection_details\": null,\n      \"current_stage\": {\n        \"id\": 2708728,\n        \"name\": \"Offer\",\n        \"interviews\": []\n      },\n      \"custom_fields\": {\n        \"custom_application_field\": {\n          \"name\": \"Custom Application Field\",\n          \"type\": \"short_text\",\n          \"value\": \"Example123\"\n        }\n      },\n      \"candidate\": {\n        \"id\": 265788,\n        \"first_name\": \"Hector\",\n        \"last_name\": \"Porter\",\n        \"title\": null,\n        \"company\": null,\n        \"created_at\": \"2013-10-04T01:24:48Z\",\n        \"external_id\": null,\n        \"photo_url\": null,\n        \"is_private\": false,\n        \"can_email\": true,\n        \"phone_numbers\": [\n          {\n            \"value\": \"330-281-8004\",\n            \"type\": \"home\"\n          }\n        ],\n        \"email_addresses\": [\n          {\n            \"value\": \"hector.porter.265788@example.com\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"addresses\": [],\n        \"website_addresses\": [],\n        \"social_media_addresses\": [],\n        \"educations\": [\n          {\n            \"school_name\": \"Harvard University\",\n            \"degree\": \"Bachelor's Degree\",\n            \"discipline\": \"Information Systems\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"employments\": [\n          {\n            \"company_name\": \"Greenhouse\",\n            \"title\": \"Engineer\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"recruiter\": null,\n        \"coordinator\": null,\n        \"attachments\": [\n          {\n            \"filename\": \"resume.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"resume\"\n          }\n        ],\n        \"tags\": [\n          \"Imported\"\n        ],\n        \"custom_fields\": {\n          \"favorite_color\": {\n            \"name\": \"Favorite Color\",\n            \"type\": \"short_text\",\n            \"value\": \"Blue\"\n          }\n        }\n      },\n      \"jobs\": [\n        {\n          \"id\": 371417,\n          \"name\": \"Designer\",\n          \"requisition_id\": null,\n          \"notes\": \"Digital and print\",\n          \"confidential\": false,\n          \"job_post_id\": 54321,\n          \"status\": \"open\",\n          \"created_by_id\": 273555,\n          \"created_at\": \"2013-10-02T22:59:29Z\",\n          \"opened_at\": \"2015-01-23T00:25:04Z\",\n          \"closed_at\": null,\n          \"departments\": [\n            {\n              \"id\": 237,\n              \"name\": \"Community\",\n              \"external_id\": \"ex-dept-1\"\n            }\n          ],\n          \"offices\": [\n            {\n              \"id\": 9099,\n              \"name\": \"New York\",\n              \"location\": \"New York, NY\",\n              \"external_id\": \"ex-office-1\"\n            }\n          ],\n          \"custom_fields\": {\n            \"employment_type\": {\n              \"name\": \"Employment Type\",\n              \"type\": \"single_select\",\n              \"value\": \"Full Time\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Job Permission using cURL\nDESCRIPTION: Demonstrates how to make a PUT request to add a job permission for a user. Requires authentication and job details in the request body.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PUT 'https://harvest.greenhouse.io/v1/users/{id}/permissions/jobs'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Offer Deleted Event Webhook JSON Schema\nDESCRIPTION: JSON schema for the webhook event that fires when an offer is deleted from Greenhouse. Contains basic offer identification details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_application_events.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"offer_deleted\",\n  \"payload\": {\n    \"offer\": {\n      \"id\": 506406,\n      \"application_id\": 46194062,\n      \"offering_user_id\": 158104,\n      \"offer_status\": \"Created\",\n      \"version\": 1,\n      \"sent_on\": \"2013-03-22\",\n      \"resolved_at\": \"2013-03-25T00:00:00Z\",\n      \"notes\": \"These are notes on the offer.\",\n      \"job_id\": 371417\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: API Request for Listing Rejection Reasons in Shell\nDESCRIPTION: Example of a cURL command to retrieve all rejection reasons from the Greenhouse API. Uses Basic Authorization to authenticate the request.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_rejection_reasons.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/rejection_reasons'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing Demographic Question Sets API Call in Shell\nDESCRIPTION: This snippet shows how to make an API call to list all demographic question sets for an organization using cURL. It includes the endpoint and necessary authorization header.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/question_sets'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Candidate Tag with cURL\nDESCRIPTION: Shows how to delete a candidate tag using a DELETE request with cURL, including the required headers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X DELETE 'https://harvest.greenhouse.io/v1/tags/candidate/{tag id}'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Email Address Addition Response Structure in Greenhouse API (JSON)\nDESCRIPTION: JSON response structure returned after successfully adding an email address to a user in Greenhouse. Contains the email ID, user ID, email address, and verification status.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 898318,\n    \"user_id\": 253818,\n    \"email\": \"bob@email.org\",\n    \"verified\": \"false\"\n}\n```\n\n----------------------------------------\n\nTITLE: GET Request for Listing Job Stages for a Specific Job\nDESCRIPTION: Shows how to make a GET request to retrieve job stages for a specific job ID. The request includes an authorization header and returns a JSON array of job stage objects for the specified job.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_stages.md#2025-04-14_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/jobs/{id}/stages' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 72200,\n    \"name\": \"Face to Face\",\n    \"created_at\": \"2015-11-22T05:31:37.263Z\",\n    \"updated_at\": \"2015-11-22T05:31:37.263Z\",\n    \"job_id\": 146218,\n    \"priority\": 0,\n    \"interviews\": [\n      {\n        \"id\": 6001,\n        \"name\": \"Cultural Fit Interview\",\n        \"schedulable\": true,\n        \"estimated_minutes\": 30,\n        \"default_interviewer_users\": [\n          {\n            \"id\": 821,\n            \"first_name\": \"Robert\",\n            \"last_name\": \"Robertson\",\n            \"name\": \"Robert Robertson\",\n            \"employee_id\": \"100377\"\n          }\n        ],\n        \"interview_kit\": {\n          \"id\": 9128,\n          \"content\": \"<h5>Purpose</h5><span>Determine whether or not the candidate would be a strong fit.</span>\",\n          \"questions\": [\n            {\n              \"id\": 11052,\n              \"question\": \"Is this person really a good fit?\"\n            }\n          ]\n        }\n      },\n      {\n        \"id\": 6002,\n        \"name\": \"Executive Interview\",\n        \"schedulable\": true,\n        \"created_at\": \"2015-11-22T05:31:37.263Z\",\n        \"updated_at\": \"2015-11-22T05:31:37.263Z\",\n        \"job_id\": 146219,\n        \"estimated_minutes\": 60,\n        \"default_interviewer_users\": [\n          {\n            \"id\": 4080,\n            \"first_name\": \"Kate\",\n            \"last_name\": \"Austen\",\n            \"name\": \"Kate Austen\",\n            \"employee_id\": \"12345\"\n          }\n        ],\n        \"interview_kit\": {\n          \"id\": 9129,\n          \"content\": \"<h5>Purpose</h5><span>See if they can work with the boss.</span>\",\n          \"questions\": [\n            {\n              \"id\": 11053,\n              \"question\": \"What's their favorite color?\"\n            },\n            {\n              \"id\": 11054,\n              \"question\": \"Do they really want to work here?\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  {\n    \"id\": 72199,\n    \"name\": \"Offer\",\n    \"created_at\": \"2015-11-22T05:31:37.263Z\",\n    \"updated_at\": \"2015-11-22T05:31:37.263Z\",\n    \"job_id\": 146220,\n    \"priority\": 1,\n    \"interviews\": []\n  },\n  {\n    \"id\": 72194,\n    \"name\": \"Application Review\",\n    \"created_at\": \"2015-11-22T05:31:37.263Z\",\n    \"updated_at\": \"2015-11-22T05:31:37.263Z\",\n    \"job_id\": 146221,\n    \"priority\": 2,\n    \"interviews\": [\n      {\n        \"id\": 8004,\n        \"name\": \"Application Review\",\n        \"schedulable\": false,\n        \"interview_kit\": {\n          \"id\": 9130,\n          \"content\": null,\n          \"questions\": []\n        }\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Update Scheduled Interview Response (JSON)\nDESCRIPTION: Illustrates the JSON response structure after successfully updating a scheduled interview, showing all updated interview details and interviewer information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 109170954,\n  \"application_id\": 102717457,\n  \"external_event_id\": \"external_event_id_0\",\n  \"start\": {\n    \"date_time\": \"2018-12-12T13:15:00.000Z\"\n  },\n  \"end\": {\n    \"date_time\": \"2018-12-12T14:15:00.000Z\"\n  },\n  \"location\": \"Big Conference Room\",\n  \"video_conferencing_url\": \"http://example.com\",\n  \"status\": \"scheduled\",\n  \"created_at\": \"2018-10-17T19:22:07.302Z\",\n  \"updated_at\": \"2018-12-03T20:45:14.320Z\",\n  \"interview\": {\n    \"id\": 8055374,\n    \"name\": \"Executive Interview\"\n  },\n  \"organizer\": {\n    \"id\": 102361,\n    \"first_name\": \"Champ\",\n    \"last_name\": \"Telluride\",\n    \"name\": \"Champ Telluride\",\n    \"employee_id\": null\n  },\n  \"interviewers\": [\n    {\n      \"id\": 102361,\n      \"employee_id\": null,\n      \"name\": \"Champ Telluride\",\n      \"email\": \"champ.telluride.102361@example.com\",\n      \"response_status\": \"accepted\",\n      \"scorecard_id\": null\n    },\n    {\n      \"id\": 46444,\n      \"employee_id\": \"AAA1\",\n      \"name\": \"Lucius Barbarossa\",\n      \"email\": \"lucius.barbarossa.46444@example.com\",\n      \"response_status\": \"declined\",\n      \"scorecard_id\": null\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Candidate Unhired Webhook Event\nDESCRIPTION: Webhook payload that fires when a candidate is unhired through the Greenhouse platform. This event is triggered specifically when using the 'Unhire' button on a hired candidate's profile page.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"unhire_candidate\",\n  \"payload\": {\n    \"application\": {\n      \"id\": 265293,\n      \"rejected_at\": null,\n      \"prospect\": false,\n      \"status\": \"active\",\n      \"applied_at\": \"2013-03-22T00:00:00Z\",\n      \"last_activity_at\": \"2015-03-18T20:28:09Z\",\n      \"url\": \"https://app.greenhouse.io/people/265788?application_id=265293\",\n      \"source\": {\n        \"id\": 27,\n        \"public_name\": \"LinkedIn\"\n      },\n      \"credited_to\": null,\n      \"rejection_reason\": null,\n      \"rejection_details\": null,\n      \"current_stage\": {\n        \"id\": 678901,\n        \"name\": \"Application Review\",\n        \"interviews\": [\n          {\n            \"id\": 989099,\n            \"name\":\"Application Review\",\n            \"status\": \"collect_feedback\",\n            \"interview_kit\": {\n              \"url\": \"http://app.greenhouse.io/guides/67656/people/265788\",\n              \"content\": \"\",\n              \"questions\": []\n            },\n            \"interviewers\": []\n          }\n        ]\n      },\n      \"custom_fields\": {\n        \"custom_application_field\": {\n          \"name\": \"Custom Application Field\",\n          \"type\": \"short_text\",\n          \"value\": null\n        }\n      },\n      \"candidate\": {\n        \"id\": 265788,\n        \"first_name\": \"Hector\",\n        \"last_name\": \"Porter\",\n        \"title\": null,\n        \"company\": null,\n        \"created_at\": \"2013-10-04T01:24:48Z\",\n        \"external_id\": null,\n        \"photo_url\": null,\n        \"url\": \"https://app.greenhouse.io/people/265788\",\n        \"is_private\": false,\n        \"can_email\": true,\n        \"phone_numbers\": [\n          {\n            \"value\": \"330-281-8004\",\n            \"type\": \"home\"\n          }\n        ],\n        \"email_addresses\": [\n          {\n            \"value\": \"hector.porter.265788@example.com\",\n            \"type\": \"personal\"\n          }\n        ],\n        \"addresses\": [],\n        \"website_addresses\": [],\n        \"social_media_addresses\": [],\n        \"educations\": [\n          {\n            \"school_name\": \"Harvard University\",\n            \"degree\": \"Bachelor's Degree\",\n            \"discipline\": \"Information Systems\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"employments\": [\n          {\n            \"company_name\": \"Greenhouse\",\n            \"title\": \"Engineer\",\n            \"start_date\": \"01/01/2012\",\n            \"end_date\": \"01/01/2016\"\n          }\n        ],\n        \"recruiter\": null,\n        \"coordinator\": null,\n        \"attachments\": [\n          {\n            \"filename\": \"resume.pdf\",\n            \"url\": \"https://prod-heroku.s3.amazonaws.com/...\",\n            \"type\": \"resume\"\n          }\n        ],\n        \"tags\": [\n          \"Import from Previous ATS\"\n        ],\n        \"custom_fields\": {\n          \"favorite_color\": {\n            \"name\": \"Favorite Color\",\n            \"type\": \"short_text\",\n            \"value\": \"Blue\"\n          }\n        }\n      },\n      \"jobs\": [\n        {\n          \"id\": 371417,\n          \"name\": \"Designer\",\n          \"requisition_id\": null,\n          \"notes\": \"Digital and print\",\n          \"confidential\": false,\n          \"job_post_id\": 54321,\n          \"status\": \"open\",\n          \"created_by_id\": 273555,\n          \"created_at\": \"2013-10-02T22:59:29Z\",\n          \"opened_at\": \"2015-01-23T00:25:04Z\",\n          \"closed_at\": null,\n          \"departments\": [\n            {\n              \"id\": 14501,\n              \"name\": \"Community\",\n              \"external_id\": \"ex-dept-1\"\n            }\n          ],\n          \"offices\": [\n            {\n              \"id\": 9099,\n              \"name\": \"New York\",\n              \"location\": \"New York, NY\",\n              \"external_id\": \"ex-office-1\"\n            }\n          ],\n          \"custom_fields\": {\n            \"employment_type\": {\n              \"name\": \"Employment Type\",\n              \"type\": \"single_select\",\n              \"value\": \"Full Time\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Tags for a Specific Candidate with cURL\nDESCRIPTION: Demonstrates how to retrieve tags for a specific candidate using a GET request with cURL.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X GET 'https://harvest.greenhouse.io/v1/candidates/{id}/tags'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Degrees List in JSON\nDESCRIPTION: Illustrates the JSON structure returned when requesting the list of degrees. Each degree object contains an id, name, and priority.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_education.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"id\": 123,\n        \"name\": \"Bachelor's Degree\",\n        \"priority\": 0\n    },\n    {\n        \"id\": 234,\n        \"name\": \"Master's Degree\",\n        \"priority\": 1\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Listing Candidate-Specific Tags\nDESCRIPTION: Shows the expected JSON response structure when retrieving tags for a specific candidate.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 239759,\n    \"name\": \"Don't have a job open for them now\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: JSON Request for Deleting Custom Field Options in Greenhouse API\nDESCRIPTION: This JSON structure represents the request body for deleting custom field options. It contains an array of option IDs to be removed from a specific custom field.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"option_ids\": [\n    85709, 85710\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Department Object Structure - List View\nDESCRIPTION: JSON structure showing a department object in list view format, including ID, name, parent/child relationships and external IDs.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_departments.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 12345,\n  \"name\": \"Technology\",\n  \"parent_id\": 12345,\n  \"parent_department_external_id\": \"parent-1\",\n  \"child_ids\": [\n      34065,\n      25908\n  ],\n  \"child_department_external_ids\": [\n      \"child-1\",\n      \"child-2\"\n  ],\n  \"external_id\": \"89076\"\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Users via Greenhouse API\nDESCRIPTION: PATCH endpoint to disable a Greenhouse user account. Accepts user identification via email, user ID, or employee ID. Returns the complete user object with updated disabled status.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v2/users/disable'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"user\": {\"email\": \"test@example.com\"}\n}\n```\n\n----------------------------------------\n\nTITLE: EEOC Data Response for a Specific Application in JSON\nDESCRIPTION: Illustrates the structure of the JSON response when retrieving EEOC data for a specific application. The response contains a single EEOC object with application details and EEOC information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_eeoc.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"application_id\": 286,\n  \"candidate_id\": 406,\n  \"race\": {\n    \"id\": 7,\n    \"description\": \"Two or More Races\"\n  },\n  \"gender\": {\n    \"id\": 1,\n    \"description\": \"Male\"\n  },\n  \"veteran_status\": {\n    \"id\": 3,\n    \"message\": \"I don't wish to answer\"\n  },\n  \"disability_status\": {\n    \"id\": 1,\n    \"description\": \"Yes, I have a disability, or have a history/record of having a disability\"\n  },\n  \"submitted_at\": \"2017-01-29T15:09:46.806Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Job Opening with cURL Request\nDESCRIPTION: Example shell command for retrieving a specific job opening by ID using the Greenhouse API with authentication. Uses the GET endpoint for a single opening.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/jobs/{job_id}/openings/{id}' -H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Creating Office API Request\nDESCRIPTION: Shell command to create a new office in the Greenhouse API using cURL. Requires Basic Authentication and On-Behalf-Of header for audit purposes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/offices'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Sources API Response Format\nDESCRIPTION: Example JSON response from the sources endpoint showing multiple source objects returned in an array.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_sources.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 632,\n    \"name\": \"Other\",\n    \"type\": {\n      \"id\": 5,\n      \"name\": \"Prospecting\"\n    }\n  },\n  {\n    \"id\": 928,\n    \"name\": \"Destiny\",\n    \"type\": {\n      \"id\": 7,\n      \"name\": \"Supernatural Means\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Listing Prospect Pools API Response in JSON\nDESCRIPTION: Shows the expected JSON response structure when listing prospect pools, including multiple pool objects with their details and prospect stages.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_prospect_pools.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"id\": 25,\n        \"name\": \"Cold Outreach: Sourced\",\n        \"active\": true,\n        \"prospect_stages\": [\n            {\n                \"id\": 85,\n                \"name\": \"Discussed\"\n            },\n            {\n                \"id\": 86,\n                \"name\": \"Had email listed on their business card\"\n            },\n            {\n                \"id\": 87,\n                \"name\": \"Had email listed on their blog\"\n            },\n            {\n                \"id\": 88,\n                \"name\": \"Not Contacted\"\n            }\n        ]\n    },\n    {\n        \"id\": 26,\n        \"name\": \"Opted In: Referral\",\n        \"active\": false,\n        \"prospect_stages\": [\n            {\n                \"id\": 90,\n                \"name\": \"1st. Follow Up Sent\"\n            },\n            {\n                \"id\": 91,\n                \"name\": \"2nd Follow Up Sent\"\n            },\n            {\n                \"id\": 92,\n                \"name\": \"In Discussion\"\n            },\n            {\n                \"id\": 93,\n                \"name\": \"Discussed\"\n            },\n            {\n                \"id\": 94,\n                \"name\": \"Had email listed on their github profile\"\n            }\n        ]\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Email Address to User in Greenhouse API (Shell)\nDESCRIPTION: This code sends a POST request to add an unverified email address to an existing user in Greenhouse. The request requires authentication headers and the user's ID in the URL path.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/users/{id}/email_addresses'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Job Openings with cURL Request\nDESCRIPTION: Example shell command for deleting multiple job openings using the Greenhouse API. Uses the DELETE endpoint with authentication and On-Behalf-Of header for auditing.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X DELETE 'https://harvest.greenhouse.io/v1/jobs/{job_id}/openings'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Custom Field Options Response JSON (JSON)\nDESCRIPTION: JSON response returned after retrieving custom field options, showing option details including ID, name, priority, and external ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123456,\n    \"name\": \"Option A\",\n    \"priority\": 0,\n    \"external_id\": \"option-a\"\n  },\n  {\n    \"id\": 123457,\n    \"name\": \"Option B\",\n    \"priority\": 1,\n    \"external_id\": \"option-b\"\n  },\n  {\n    \"id\": 123458,\n    \"name\": \"Option C\",\n    \"priority\": 2,\n    \"external_id\": null\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Office Deletion Webhook Payload in Greenhouse API\nDESCRIPTION: JSON example of a webhook payload sent when an office is deleted from the Greenhouse system. The payload includes the office's ID, name, location, child office IDs, parent office ID, and external ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_organization_events.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"office_deleted\",\n  \"payload\": {\n    \"office\": {\n      \"id\": 16492,\n      \"name\": \"New York\",\n      \"location\": {\n        \"name\": \"New York, NY\"\n      },\n      \"child_ids\": [\n        123,\n        456\n      ],\n      \"parent_id\": 789,\n      \"external_id\": \"ex-dep-1\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieve Department API Request\nDESCRIPTION: Shell command to retrieve a specific department by ID from the Greenhouse API.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_departments.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/departments/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Office Object Structure - Tree Format\nDESCRIPTION: JSON representation of an office object when rendered as a tree. Shows the hierarchical structure with nested children objects rather than just their IDs.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 47012,\n  \"name\": \"New York\",\n  \"location\": {\n      \"name\": \"New York, United States\"\n  },\n  \"primary_contact_user_id\": 485538,\n  \"external_id\": \"12345\",\n  \"children\": [\n      {\n          \"id\": 50891,\n          \"name\": \"Utica\",\n          \"location\": {\n              \"name\": \"Utica, New York, United States\"\n          },\n          \"primary_contact_user_id\": 336474,\n          \"external_id\": \"45647\",\n          \"children\": []\n      },\n      {\n          \"id\": 50852,\n          \"name\": \"New York City\",\n          \"location\": {\n              \"name\": \"New York, New York, United States\"\n          },\n          \"primary_contact_user_id\": 676259,\n          \"external_id\": \"67890\",\n          \"children\": []\n      }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Scorecards with cURL in Shell\nDESCRIPTION: This example shows how to make a GET request to fetch all scorecards from the Greenhouse API using cURL with Basic Authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scorecards.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/scorecards'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Submitting Attachments via Direct Upload (application/json)\nDESCRIPTION: Example of submitting a resume attachment using direct upload with application/json content type. This method requires 'resume_content' and 'resume_content_filename' fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_applications.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n\"resume_content\": \"SGVsbG8sIHdvcmxkIQo=\",\n\"resume_content_filename\": \"resume.pdf\"\n```\n\n----------------------------------------\n\nTITLE: Listing Demographic Questions Response in JSON\nDESCRIPTION: This snippet demonstrates the expected JSON response structure when listing demographic questions. It includes an array of question objects with their respective attributes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123,\n    \"active\": true,\n    \"demographic_question_set_id\": 456,\n    \"name\": \"What is your favorite color?\",\n    \"translations\": [\n      {\n        \"language\": \"en\",\n        \"name\": \"What is your favorite color?\"\n      }\n    ],\n    \"required\": true\n  },\n  {\n    \"id\": 897,\n    \"active\": true,\n    \"demographic_question_set_id\": 555,\n    \"name\": \"Pizza or pasta?\",\n    \"translations\": [\n      {\n        \"language\": \"en\",\n        \"name\": \"Pizza or pasta?\"\n      }\n    ],\n    \"required\": false\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Disciplines List via Greenhouse API\nDESCRIPTION: Returns a paginated JSON list of all disciplines configured in your Greenhouse organization. Each discipline has an ID and display text. Supports filtering by term and pagination.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_educations.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"items\": [\n    {\n      \"id\": 5494865,\n      \"text\": \"Accounting\"\n    },\n    {\n      \"id\": 5494892,\n      \"text\": \"African Studies\"\n    },\n    {\n      \"id\": 5494917,\n      \"text\": \"Agriculture\"\n    },\n    {\n      \"id\": 5494940,\n      \"text\": \"Anthropology\"\n    },\n    {\n      \"id\": 5494964,\n      \"text\": \"Applied Health Services\"\n    },\n    {\n      \"id\": 5495009,\n      \"text\": \"Architecture\"\n    },\n    {\n      \"id\": 5495033,\n      \"text\": \"Art\"\n    },\n    {\n      \"id\": 5495051,\n      \"text\": \"Asian Studies\"\n    },\n    {\n      \"id\": 5495074,\n      \"text\": \"Biology\"\n    },\n    {\n      \"id\": 5495101,\n      \"text\": \"Business\"\n    }\n  ],\n  \"meta\": {\n    \"total_count\": 71,\n    \"per_page\": 100\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Disciplines List in JSON\nDESCRIPTION: Shows the JSON structure returned when requesting the list of disciplines. Each discipline object contains an id, name, and priority.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_education.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"id\": 123,\n        \"name\": \"Accounting\",\n        \"priority\": 0\n    },\n    {\n        \"id\": 234,\n        \"name\": \"Biology\",\n        \"priority\": 1\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Requesting Test Status with cURL in Shell\nDESCRIPTION: Example of how to make a GET request to the test_status endpoint using cURL. The request includes the partner_interview_id as a query parameter and Authorization header for authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_test_status.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://www.testing-partner.com/api/test_status?partner_interview_id=12345'\n\t\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing Offices Response - Tree Format\nDESCRIPTION: Example JSON response when listing offices with render_as=tree parameter. Shows offices in a hierarchical tree structure with nested children.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 50891,\n    \"name\": \"Utica\",\n    \"location\": {\n      \"name\": \"Utica, New York, United States\"\n    },\n    \"primary_contact_user_id\": 336474,\n    \"external_id\": \"45647\",\n    \"children\": [\n      {\n        \"id\": 12345,\n        \"name\": \"Child-office-1\",\n        \"location\": {\n          \"name\": \"Rome, New York, United States\"\n        },\n        \"primary_contact_user_id\": 95313,\n        \"external_id\": \"Rome-NY\",\n        \"children\": [\n          {\n            \"id\": 54321,\n            \"name\": \"Child-office-1-2\",\n            \"location\": {\n              \"name\": \"Syracuse, New York, United States\"\n            },\n            \"primary_contact_user_id\": 95313,\n            \"external_id\": \"Syracuse-NY\",\n            \"children\": []\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"id\": 50852,\n    \"name\": \"New York\",\n    \"location\": {\n      \"name\": \"New York City, New York, United States\"\n    },\n    \"primary_contact_user_id\": 5659415,\n    \"external_id\": \"NYC-123\",\n    \"children\": [\n      {\n        \"id\": 4020460005,\n        \"name\": \"Child-office-2\",\n        \"location\": {\n          \"name\": \"New York City, New York, United States\"\n        },\n        \"primary_contact_user_id\": 567863,\n        \"external_id\": \"Manhattan\",\n        \"children\": []\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Adding a New Candidate Tag\nDESCRIPTION: Displays the expected JSON response structure when successfully adding a new candidate tag, including the assigned ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 123456,\n    \"name\": \"New tag name\"\n}\n```\n\n----------------------------------------\n\nTITLE: Update Rejection Reason Response (JSON)\nDESCRIPTION: This JSON structure represents the response received after successfully updating the rejection reason for an application. It includes a success message and the new rejection reason ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_28\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 12345,\n    \"message\": \"Rejection reason updated to 815 (Higher Salary Offer Made)\",\n    \"success\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Field Update Response JSON (JSON)\nDESCRIPTION: JSON response returned after successfully updating a custom field, showing the updated field attributes and options.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123456,\n    \"name\": \"New Name\",\n    \"active\": true,\n    \"field_type\": \"job\",\n    \"priority\": 1,\n    \"value_type\": \"single_select\",\n    \"private\": false,\n    \"required\": false,\n    \"require_approval\": true,\n    \"trigger_new_version\": false,\n    \"name_key\": \"custom_field_name\",\n    \"description\": \"New description\",\n    \"expose_in_job_board_api\": false,\n    \"api_only\": false,\n    \"offices\": [],\n    \"departments\": [],\n    \"template_token_string\": \"{{token123}}\",\n    \"custom_field_options\": [\n      {\n        \"id\": 123,\n        \"name\": \"Name One\",\n        \"priority\": 1,\n        \"external_id\": \"name-one\"\n      },\n      {\n        \"id\": 234,\n        \"name\": \"Name Two\",\n        \"priority\": 2,\n        \"external_id\": null\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Email Templates List Response in JSON\nDESCRIPTION: Example response from the API when listing email templates. Shows multiple email templates with different types, including both default and user-created templates.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_email_templates.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 48765,\n    \"name\": \"Default Scorecard Reminder\",\n    \"description\": \"To be sent to an interviewer when their scorecard is due.\",\n    \"default\": true,\n    \"updated_at\": \"2018-06-01T17:04:13.598Z\",\n    \"created_at\": \"2015-11-18T22:26:32.154Z\",\n    \"type\": \"scorecard_reminder\",\n    \"from\": null,\n    \"cc\": [\n        \"example.user@example.com\"\n    ],\n    \"body\": null,\n    \"html_body\": \"<p>Hello,</p>\\r\\n<p>Please help us keep our hiring on track!</p>\\r\\n<p>Send in your feedback now for the interview you conducted earlier today with {{CANDIDATE_NAME}}.</p>\\r\\n<p>It's easy - just visit the following link to fill out your scorecard online: {{SCORECARD_LINK}}</p>\\r\\n<p>Thanks,<br /> {{ORGANIZER_NAME}}</p>\",\n    \"user\": null\n  },\n  {\n    \"id\": 200008,\n    \"name\": \"Personal Candidate Email Template\",\n    \"description\": \"To email candidates\",\n    \"default\": false,\n    \"updated_at\": \"2018-06-01T17:08:03.320Z\",\n    \"created_at\": \"2018-06-01T17:08:03.320Z\",\n    \"type\": \"candidate_email\",\n    \"from\": \"{{MY_EMAIL_ADDRESS}}\",\n    \"cc\": [],\n    \"body\": null,\n    \"html_body\": \"Hi&nbsp;{{CANDIDATE_FIRST_NAME}},<br /><br />Please let me know if you're still interested in&nbsp;{{JOB_NAME}}.<br /><br />Thank you!<br /><br />{{MY_SIGNATURE}}\",\n    \"user\": {\n        \"id\": 297349,\n        \"first_name\": \"Jane\",\n        \"last_name\": \"Smith\",\n        \"name\": \"Jane Smith\",\n        \"employee_id\": \"12345\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: JSON Response Structure for Job Stage Retrieval\nDESCRIPTION: This snippet shows the expected JSON structure returned by the API when retrieving a job stage. It includes details about the stage, associated interviews, and interview kit information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_stages.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 6001,\n  \"name\": \"Cultural Fit Interview\",\n  \"created_at\": \"2015-11-22T05:31:37.263Z\",\n  \"updated_at\": \"2015-11-22T05:31:37.263Z\",\n  \"job_id\": 12345,\n  \"priority\": 1,\n  \"interviews\": [\n    {\n      \"id\": 7890,\n      \"name\": \"Cultural Fit Interview\",\n      \"schedulable\": true,\n      \"estimated_minutes\": 30,\n      \"default_interviewer_users\": [\n        {\n          \"id\": 821,\n          \"first_name\": \"Robert\",\n          \"last_name\": \"Robertson\",\n          \"name\": \"Robert Robertson\",\n          \"employee_id\": \"100377\"\n        }\n      ],\n      \"interview_kit\": {\n        \"id\": 9127,\n        \"content\": \"<h5>Purpose</h5><span>Determine whether or not the candidate would be a strong fit.</span>\",\n        \"questions\": [\n            {\n              \"id\": 11052,\n              \"question\": \"Is this person really a good fit?\"\n            }\n          ]        \n        }\n      }\n    ]\n  }\n```\n\n----------------------------------------\n\nTITLE: Single Email Template Response in JSON\nDESCRIPTION: Example response when retrieving a specific email template by ID. Shows the complete template object with all its attributes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_email_templates.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 48765,\n  \"name\": \"Default Scorecard Reminder\",\n  \"description\": \"To be sent to an interviewer when their scorecard is due.\",\n  \"default\": true,\n  \"updated_at\": \"2018-06-01T17:04:13.598Z\",\n  \"created_at\": \"2015-11-18T22:26:32.154Z\",\n  \"type\": \"scorecard_reminder\",\n  \"from\": null,\n  \"cc\": [\n      \"example.user@example.com\"\n  ],\n  \"body\": null,\n  \"html_body\": \"<p>Hello,</p>\\r\\n<p>Please help us keep our hiring on track!</p>\\r\\n<p>Send in your feedback now for the interview you conducted earlier today with {{CANDIDATE_NAME}}.</p>\\r\\n<p>It's easy - just visit the following link to fill out your scorecard online: {{SCORECARD_LINK}}</p>\\r\\n<p>Thanks,<br /> {{ORGANIZER_NAME}}</p>\",\n  \"user\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Office Response - Tree Format\nDESCRIPTION: Example JSON response when retrieving a single office with render_as=tree parameter. Shows hierarchical structure with nested children objects.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 47012,\n  \"name\": \"New York\",\n  \"location\": {\n      \"name\": \"New York, United States\"\n  },\n  \"primary_contact_user_id\": 485538,\n  \"external_id\": \"12345\",\n  \"children\": [\n      {\n          \"id\": 50891,\n          \"name\": \"Utica\",\n          \"location\": {\n              \"name\": \"Utica, New York, United States\"\n          },\n          \"primary_contact_user_id\": 336474,\n          \"external_id\": \"45647\",\n          \"children\": []\n      },\n      {\n          \"id\": 50852,\n          \"name\": \"New York City\",\n          \"location\": {\n              \"name\": \"New York, New York, United States\"\n          },\n          \"primary_contact_user_id\": 676259,\n          \"external_id\": \"67890\",\n          \"children\": []\n      }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Details from Greenhouse API\nDESCRIPTION: This snippet demonstrates how to retrieve user details using the Greenhouse API. It sends a GET request to the /users/{id} endpoint with Basic authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/users/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing Prospect Pools API Request in Shell\nDESCRIPTION: Demonstrates how to make a GET request to list all prospect pools for an organization using cURL. Requires authentication via Basic Auth.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_prospect_pools.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/prospect_pools'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Updating Custom Field via PATCH Request (Shell)\nDESCRIPTION: Makes a PATCH request to update an existing custom field. Includes authentication headers and a JSON payload with updated field attributes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/custom_fields/{id}'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkeODyN2VhZmEMWRjMzc1YZjMqmUwNjsdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Basic Auth On-Behalf-Of Header\nDESCRIPTION: Required header when using Basic Authentication to specify the email of the user being impersonated.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_introduction.md#2025-04-14_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nOn-Behalf-Of: john.smith@example.com\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Deleting Custom Field Options in Greenhouse API\nDESCRIPTION: This JSON structure shows the response after deleting custom field options. It provides a message indicating how many options were successfully deleted and how many were not found.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"3 option(s) deleted. 1 option(s) not found.\"\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Listing Candidate Tags\nDESCRIPTION: Shows the expected JSON response structure when listing candidate tags, including multiple tag objects.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 365,\n    \"name\": \"Ruby\"\n  },\n  {\n    \"id\": 366,\n    \"name\": \"Rails\"\n  },\n  {\n    \"id\": 367,\n    \"name\": \"Junior\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Future Job Permissions List Response in JSON\nDESCRIPTION: Shows the expected JSON response format when retrieving a list of future job permissions, including multiple permission objects with their respective details.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 87819,\n    \"office_id\": 24141,\n    \"external_office_id\": \"ex-office-1\",\n    \"department_id\": 12315,\n    \"external_department_id\": \"ex-dept-1\",\n    \"user_role_id\": 4730\n  },\n  {\n    \"id\": 92834,\n    \"office_id\": 8232,\n    \"external_office_id\": \"ex-office-2\",\n    \"department_id\": 12315,\n    \"external_department_id\": \"ex-dept-2\",\n    \"user_role_id\": 4730\n  },\n  {\n    \"id\": 82129,\n    \"office_id\": 8232,\n    \"external_office_id\": \"ex-office-2\",\n    \"department_id\": 92921,\n    \"external_department_id\": null,\n    \"user_role_id\": 4730\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Processing Job Deleted Event in Greenhouse API (JSON)\nDESCRIPTION: This snippet demonstrates the structure of the webhook payload when a job is deleted in Greenhouse. It includes the job's ID and name. This event is triggered when a closed job is deleted from the Job Dashboard.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_job_events.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"job_deleted\",\n  \"payload\": {\n    \"job\": {\n      \"id\": 209256,\n      \"name\": \"Project Manager\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Office API Request\nDESCRIPTION: Shell command to retrieve a specific office by ID from the Greenhouse API using cURL. Requires Basic Authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/offices/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving EEOC Data for an Application with cURL\nDESCRIPTION: Shows how to use cURL to make a GET request to retrieve EEOC data for a specific application. Requires the application ID and authentication using a Basic Auth token.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_eeoc.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/applications/{id}/eeoc'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Office Response - List Format\nDESCRIPTION: Example JSON response when retrieving a single office with the default render_as=list parameter. Shows full office object details including parent/child relationships.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 47012,\n  \"name\": \"New York\",\n  \"location\": {\n      \"name\": \"New York, United States\"\n  },\n  \"primary_contact_user_id\": 485538,\n  \"parent_id\": 50849,\n  \"parent_office_external_id\": \"parent-1\",\n  \"child_ids\": [\n      50891,\n      50852\n  ],\n  \"child_office_external_ids\": [\n      \"child-office-1\",\n      \"\"\n  ],\n  \"external_id\": \"12345\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieve Single Approval Flow - API Request\nDESCRIPTION: HTTP GET request to fetch a specific approval flow by its ID with authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/approval_flows/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing EEOC Data with cURL\nDESCRIPTION: Demonstrates how to use cURL to make a GET request to list all EEOC data for an organization. Requires authentication using a Basic Auth token.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_eeoc.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/eeoc'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Close Reasons List Response Structure\nDESCRIPTION: Demonstrates the JSON response structure when retrieving all close reasons, showing an array of close reason objects each with an ID and name.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_close_reasons.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 365,\n    \"name\": \"Hired\"\n  },\n  {\n    \"id\": 366,\n    \"name\": \"Backfill\"\n  },\n  {\n    \"id\": 367,\n    \"name\": \"Order cancelled\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Editing Office Response\nDESCRIPTION: JSON response returned after successfully editing an office. Contains the full updated office object with all attributes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 50891,\n  \"name\": \"Utica\",\n  \"location\": {\n      \"name\": \"Utica, New York, United States\"\n  },\n  \"primary_contact_user_id\": 336474,\n  \"parent_id\": 47012,\n  \"parent_office_external_id\": \"parent-1\",\n  \"child_ids\": [],\n  \"child_office_external_id\": [],\n  \"external_id\": \"45647\"\n}\n```\n\n----------------------------------------\n\nTITLE: Assessment Partner API Response (JSON)\nDESCRIPTION: This JSON object represents the expected response from the Assessment Partner's API after successfully sending a test. It includes a unique identifier for the candidate's test instance.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_send_test.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"partner_interview_id\": \"98765\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Schools List in JSON\nDESCRIPTION: Demonstrates the JSON structure returned when requesting the list of schools. Each school object contains an id, name, and priority.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_education.md#2025-04-14_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"id\": 123,\n        \"name\": \"Siena College\",\n        \"priority\": 0\n    },\n    {\n        \"id\": 234,\n        \"name\": \"Union College\",\n        \"priority\": 1\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Job Permissions List Response in JSON\nDESCRIPTION: Shows the expected JSON response format when retrieving a list of job permissions, including multiple permission objects with their respective IDs, job IDs, and user role IDs.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 7879576,\n    \"job_id\": 80722,\n    \"user_role_id\": 4730\n  },\n  {\n    \"id\": 7879577,\n    \"job_id\": 83475,\n    \"user_role_id\": 4730\n  },\n  {\n    \"id\": 7879579,\n    \"job_id\": 146048,\n    \"user_role_id\": 4730\n  },\n  {\n    \"id\": 7879580,\n    \"job_id\": 87904,\n    \"user_role_id\": 4730\n  },\n  {\n    \"id\": 7879582,\n    \"job_id\": 116958,\n    \"user_role_id\": 4730\n  },\n  {\n    \"id\": 7879583,\n    \"job_id\": 82318,\n    \"user_role_id\": 4730\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Version Header Example in Markdown\nDESCRIPTION: Standard format for version headers in the changelog showing version number and date.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/CHANGELOG.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Version 2.13.1\\n\\n*January 31, 2023*\n```\n\n----------------------------------------\n\nTITLE: Job Interview Stage Deleted Webhook Payload in JSON\nDESCRIPTION: This snippet illustrates the JSON payload structure for when a job interview stage is deleted. It includes details about the deleted stage such as ID, job ID, name, and active status.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_job_events.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"job_interview_stage_deleted\",\n  \"payload\": {\n    \"job_interview_stage\": {\n      \"id\": 430608,\n      \"job_id\": 60453,\n      \"created_at\": \"2015-03-11T13:25:25.313Z\",\n      \"updated_at\": \"2016-08-16T09:29:33.650Z\",\n      \"name\": \"Phone Screen\",\n      \"active\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Office with List Rendering in Greenhouse API\nDESCRIPTION: This JSON response shows the default format when retrieving a specific office by ID using the Greenhouse API with render_as=list. It includes the office's departments, jobs, and parent/child relationships represented with IDs.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_offices.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\":11111,\n  \"name\":\"San Francisco\",\n  \"departments\":[\n    {\n      \"id\":33333,\n      \"name\":\"Engineering\",\n      \"jobs\":[\n        {\n          \"id\":44444,\n          \"title\":\"Product Engineer\",\n          \"location\":{\n            \"name\":\"San Francisco, CA\"\n          },\n          \"updated_at\":\"2013-07-02T19:39:23Z\",\n          \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n        },\n        {\n          \"id\":55555,\n          \"title\":\"Mobile Engineer - iOS\",\n          \"location\":{\n            \"name\":\"San Francisco, CA\"\n          },\n          \"updated_at\":\"2013-07-02T19:39:23Z\",\n          \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n        }\n      ]\n    },\n    {\n      \"id\":22222,\n      \"name\":\"Account Management\",\n      \"jobs\":[]\n    }\n  ],\n  \"parent_id\":10201,\n  \"child_ids\":[\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Events from Greenhouse Recruiting API using cURL\nDESCRIPTION: This snippet demonstrates how to make a GET request to the Greenhouse Recruiting Events API using cURL. It includes the necessary headers for authentication and content type, and shows a sample response with event data.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/audit-log/_events.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X GET 'https://auditlog.us.greenhouse.io/events'\n-H \"Content-Type: application/json\"\n-H \"Authorization: Bearer MeyJhbGci.eyJhdWQiO\"\n\n{\n    \"paging\": {\n        \"pit_id\": \"cmFuZG9tX3ZhbHVl\",\n        \"search_after\": null,\n        \"size\": \"100\",\n        \"next_search_after\": \"1685989175\"\n    },\n    \"hits\": 2,\n    \"results\": [\n        {\n            \"request\": {\n                \"id\": \"1234zID\",\n                \"type\": \"email_settings#create_organization_email\"\n            },\n            \"performer\": {\n                \"meta\": {\n                    \"name\": \"Allison Jamie\",\n                    \"username\": \"allison.j@omniva-corp.com\"\n                },\n                \"id\": 12345,\n                \"ip_address\": \"192.168.0.1\",\n                \"type\": \"user\"\n            },\n            \"organization_id\": 123,\n            \"event\": {\n                \"meta\": null,\n                \"target_type\": \"Global Email Added\",\n                \"type\": \"action\"\n            },\n            \"event_time\": \"2023-06-02T16:06:19.217Z\"\n        },\n        {\n            \"request\": {\n                \"id\": \"1234zID\",\n                \"type\": \"email_settings#create_organization_email\"\n            },\n            \"performer\": {\n                \"meta\": {\n                    \"name\": \"Allison Jamie\",\n                    \"username\": \"allison.j@omniva-corp.com\"\n                },\n                \"id\": 12345,\n                \"ip_address\": \"192.168.0.1\",\n                \"type\": \"user\"\n            },\n            \"organization_id\": 123,\n            \"event\": {\n                \"meta\": {\n                    \"id\": [\n                        null,\n                        1234\n                    ],\n                    \"value\": [\n                        null,\n                        \"johnny.c@omniva-corp.com\"\n                    ]\n                },\n                \"target_type\": \"OrganizationEmail\",\n                \"target_id\": 1234,\n                \"type\": \"data_change_create\"\n            },\n            \"event_time\": \"2023-06-02T16:06:19.137Z\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example Response from Rejection Reasons API\nDESCRIPTION: Sample JSON response from the rejection reasons endpoint showing multiple rejection reasons with their IDs, names, and types. Demonstrates different type categories including 'We rejected them' and 'None specified'.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_rejection_reasons.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 262,\n    \"name\": \"Missing resume\",\n    \"type\": {\n      \"id\": 1,\n      \"name\": \"We rejected them\"\n    }\n  },\n  {\n    \"id\": 280,\n    \"name\": \"Not in NYC\",\n    \"type\": {\n      \"id\": 1,\n      \"name\": \"We rejected them\"\n    }\n  },\n  {\n    \"id\": 230,\n    \"name\": \"Hiring Freeze\",\n    \"type\": {\n      \"id\": 2,\n      \"name\": \"None specified\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Schools List with cURL\nDESCRIPTION: Illustrates how to make a GET request to retrieve a list of schools using cURL. This endpoint returns all schools for the organization, sorted by priority.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_education.md#2025-04-14_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/schools' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Job Permission Addition Response in JSON\nDESCRIPTION: Shows the expected JSON response format after successfully adding a job permission, including the new permission's ID, job ID, and user role ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 42906871,\n  \"job_id\": 150056,\n  \"user_role_id\": 16229\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Email Template with cURL\nDESCRIPTION: API request to fetch a specific email template by its ID. Uses Basic Authentication to access the resource.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_email_templates.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/email_templates/{id}' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Empty JSON Body for Unreject Application Request\nDESCRIPTION: The POST request to unreject an application requires an empty JSON object as the request body.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_30\n\nLANGUAGE: json\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Office with Tree Rendering in Greenhouse API\nDESCRIPTION: This JSON response shows the format when retrieving a specific office by ID using the Greenhouse API with render_as=tree. It includes the office's departments and jobs, with hierarchical relationships represented using nested 'children' arrays.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_offices.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\":11111,\n  \"name\":\"San Francisco\",\n  \"departments\":[\n    {\n      \"id\":33333,\n      \"name\":\"Engineering\",\n      \"jobs\":[\n        {\n          \"id\":44444,\n          \"title\":\"Product Engineer\",\n          \"location\":{\n            \"name\":\"San Francisco, CA\"\n          },\n          \"updated_at\":\"2013-07-02T19:39:23Z\",\n          \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n        },\n        {\n          \"id\":55555,\n          \"title\":\"Mobile Engineer - iOS\",\n          \"location\":{\n            \"name\":\"San Francisco, CA\"\n          },\n          \"updated_at\":\"2013-07-02T19:39:23Z\",\n          \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n        }\n      ]\n    },\n    {\n      \"id\":22222,\n      \"name\":\"Account Management\",\n      \"jobs\":[]\n    }\n  ],\n  \"children\":[\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Scheduled Interview (Shell)\nDESCRIPTION: Demonstrates how to retrieve a scheduled interview by its ID using a GET request to the Greenhouse API.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scheduled_interviews.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/scheduled_interviews/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing Application Scorecards - Shell Request\nDESCRIPTION: HTTP GET request to retrieve all scorecards associated with a specific application ID. Requires Basic Authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scorecards.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/applications/{id}/scorecards'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Disciplines List with cURL\nDESCRIPTION: Demonstrates how to make a GET request to retrieve a list of disciplines using cURL. This endpoint returns all disciplines for the organization, sorted by priority.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_education.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/disciplines' \n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: List Tests response JSON format\nDESCRIPTION: Example JSON response from the Assessment Partner's list_tests endpoint. The response contains an array of test objects, each with partner_test_id and partner_test_name properties.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_list_tests.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n\t{\n\t\t\"partner_test_id\": \"12345\",\n\t\t\"partner_test_name\": \"My First Test\" \n\t},\n\t{\n\t\t\"partner_test_id\": \"54321\",\n\t\t\"partner_test_name\": \"My Second Test\"\n\t}\n]\n```\n\n----------------------------------------\n\nTITLE: Success Response for Opening Update\nDESCRIPTION: Sample response indicating a successful opening update operation\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"success\": \"true\"\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Tracking Link Creation\nDESCRIPTION: This JSON object represents the API response after successfully creating a tracking link. It includes the generated tracking link URL, job name, source, and referrer information.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_tracking_link.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{ \n\t\"tracking_link\": \"http://grnh.se/yvj0bj\",\n\t\"job\": \"Auror\", \n\t\"source\": \"Campus Recruiting\",\n\t\"referrer\": \"Hermione Granger\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Degrees List from Greenhouse API\nDESCRIPTION: This JSON response shows the structure returned when querying the degrees endpoint. It includes an array of degree items with id and text fields, plus metadata about pagination. The response demonstrates available degree options like High School, Associate's Degree, Bachelor's Degree, etc.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_degrees.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"items\": [\n    {\n      \"id\": 1403525,\n      \"text\": \"High School\"\n    },\n    {\n      \"id\": 1403526,\n      \"text\": \"Associate's Degree\"\n    },\n    {\n      \"id\": 1403527,\n      \"text\": \"Bachelor's Degree\"\n    },\n    {\n      \"id\": 1403528,\n      \"text\": \"Master's Degree\"\n    },\n    {\n      \"id\": 1403529,\n      \"text\": \"Master of Business Administration (M.B.A.)\"\n    },\n    {\n      \"id\": 1403534,\n      \"text\": \"Other\"\n    }\n  ],\n  \"meta\": {\n    \"total_count\": 6,\n    \"per_page\": 30\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Custom Fields with cURL and Response Format\nDESCRIPTION: These code snippets demonstrate how to retrieve a list of custom fields of a specific type using the Greenhouse API, along with the expected JSON response format.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/custom_fields/{field_type}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123456,\n    \"name\": \"Custom Field Name\",\n    \"active\": true,\n    \"field_type\": \"job\",\n    \"priority\": 1,\n    \"value_type\": \"single_select\",\n    \"private\": true,\n    \"required\": false,\n    \"require_approval\": true,\n    \"trigger_new_version\": false,\n    \"name_key\": \"custom_field_name\",\n    \"description\": \"Field description\",\n    \"expose_in_job_board_api\": false,\n    \"api_only\": false,\n    \"offices\": [],\n    \"departments\": [],\n    \"template_token_string\": \"{{FIELD1}}\",\n    \"custom_field_options\": [\n      {\n        \"id\": 123,\n        \"name\": \"Name One\",\n        \"priority\": 1,\n        \"external_id\": \"name-one\"\n      },\n      {\n        \"id\": 234,\n        \"name\": \"Name Two\",\n        \"priority\": 2,\n        \"external_id\": null\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Test Status Response JSON Structure\nDESCRIPTION: Example of a JSON response from the test_status endpoint. The response includes the partner_status indicating completion, a URL to the candidate's profile, their test score, and additional metadata about the test instance.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_test_status.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"partner_status\": \"complete\",\n\t\"partner_profile_url\": \"http://example.com/tests/12345\",\n\t\"partner_score\": 81,\n\t\"metadata\":\n\t\t{\n\t\t\t\"Started At\": \"10:15 AM 26 March 2014\",\n\t\t\t\"Completed At\": \"10:15 AM 26 March 2014\",\n\t\t\t\"Notes\": \"This candidate did extremely well!\"\n\t\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Degrees List via Greenhouse API\nDESCRIPTION: Returns a paginated JSON list of all degrees configured in your Greenhouse organization. Each degree has an ID and display text. Supports filtering by term and pagination.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_educations.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"items\": [\n    {\n      \"id\": 5494452,\n      \"text\": \"High School\"\n    },\n    {\n      \"id\": 5494478,\n      \"text\": \"Associate's Degree\"\n    },\n    {\n      \"id\": 5494516,\n      \"text\": \"Bachelor's Degree\"\n    },\n    {\n      \"id\": 5494551,\n      \"text\": \"Master's Degree\"\n    },\n    {\n      \"id\": 5494580,\n      \"text\": \"Master of Business Administration (M.B.A.)\"\n    },\n    {\n      \"id\": 5494607,\n      \"text\": \"Juris Doctor (J.D.)\"\n    },\n    {\n      \"id\": 5494638,\n      \"text\": \"Doctor of Medicine (M.D.)\"\n    },\n    {\n      \"id\": 5494662,\n      \"text\": \"Doctor of Philosophy (Ph.D.)\"\n    },\n    {\n      \"id\": 5494689,\n      \"text\": \"Engineer's Degree\"\n    },\n    {\n      \"id\": 5494710,\n      \"text\": \"Other\"\n    }\n  ],\n  \"meta\": {\n    \"total_count\": 10,\n    \"per_page\": 100\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Sources List with cURL\nDESCRIPTION: Example of how to retrieve sources from the Greenhouse API using cURL with authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_sources.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/sources'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Custom Field Deletion Response JSON (JSON)\nDESCRIPTION: JSON response returned after successfully deleting a custom field, confirming the deletion.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"success\": \"Custom Field ID 12345 has been deleted.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Education Object Structure in JSON\nDESCRIPTION: Demonstrates the structure of an education object, which includes an id, name, and priority. This structure is used for degrees, disciplines, and schools in the Greenhouse API.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_education.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 1234,\n    \"name\": \"Siena College\",\n    \"priority\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Schools List via Greenhouse API\nDESCRIPTION: Returns a paginated JSON list of all schools configured in your Greenhouse organization. Each school has an ID and display text. Supports filtering by term and pagination with 100 items per page.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_educations.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"items\": [\n    {\n      \"id\": 5417077,\n      \"text\": \"Abraham Baldwin Agricultural College\"\n    },\n    {\n      \"id\": 5417117,\n      \"text\": \"Academy of Art University\"\n    },\n    {\n      \"id\": 5417156,\n      \"text\": \"Acadia University\"\n    },\n    {\n      \"id\": 5417194,\n      \"text\": \"Adams State University\"\n    },\n    {\n      \"id\": 5417217,\n      \"text\": \"Adelphi University\"\n    },\n    {\n      \"id\": 5417245,\n      \"text\": \"Adrian College\"\n    },\n    {\n      \"id\": 5417295,\n      \"text\": \"Adventist University of Health Sciences\"\n    },\n    {\n      \"id\": 5417331,\n      \"text\": \"Agnes Scott College\"\n    },\n    {\n      \"id\": 5417366,\n      \"text\": \"AIB College of Business\"\n    },\n    {\n      \"id\": 5417384,\n      \"text\": \"Alaska Pacific University\"\n    }\n  ],\n  \"meta\": {\n    \"total_count\": 2464,\n    \"per_page\": 100\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic GraphQL Query in Greenhouse Onboarding API\nDESCRIPTION: Example of a basic GraphQL query to retrieve an employee's email address. Shows the query structure and how it's packed into a JSON object for the API request.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_introduction.md#2025-04-14_snippet_4\n\nLANGUAGE: graphql\nCODE:\n```\n# If we wanted to retrieve the email address of the employee \n# with ID 25, the GraphQL query would look like this:\n\n{\n  employee(id: 25) {\n    email\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Future Job Permissions List using cURL\nDESCRIPTION: Demonstrates how to make a GET request to retrieve a list of future job permissions for a specific user using cURL. Requires authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/users/{id}/permissions/future_jobs'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing Demographic Answer Options Response in JSON\nDESCRIPTION: This snippet demonstrates the expected JSON response structure when listing demographic answer options. It includes an array of answer option objects with their respective attributes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 456,\n    \"free_form\": false,\n    \"active\": true,\n    \"name\": \"Blue\",\n    \"demographic_question_id\": 123,\n    \"translations\": [\n      {\n        \"language\": \"en\",\n        \"name\": \"Blue\"\n      }\n    ]\n  },\n  {\n    \"id\": 789,\n    \"free_form\": true,\n    \"active\": true,\n    \"name\": \"Other\",\n    \"demographic_question_id\": 123,\n    \"translations\": [\n      {\n        \"language\": \"en\",\n        \"name\": \"Other\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Offer Created Event Webhook JSON Schema\nDESCRIPTION: JSON schema for the webhook event that fires when a new offer is created in Greenhouse. Contains offer details including status, dates, and custom fields.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_application_events.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"action\": \"offer_created\",\n    \"payload\": {\n        \"id\": 12345,\n        \"application_id\": 234556,\n        \"job_id\": 45678,\n        \"user_id\": 67890,\n        \"version\": 1,\n        \"sent_on\": \"2013-03-22\",\n        \"resolved_at\": \"2013-03-25T00:00:00Z\",\n        \"start_date\": \"04/15/2013\",\n        \"notes\": \"Vacation scheduled 4/20 - 4/23\",\n        \"offer_status\": \"Accepted\",\n        \"custom_fields\": {\n            \"custom_application_field\": {\n                \"name\": \"Custom Application Field\",\n                \"type\": \"short_text\",\n                \"value\": \"Example\"\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Update Rejection Reason Request Body (JSON)\nDESCRIPTION: This JSON structure represents the request body for updating the rejection reason of an application. It includes the new rejection reason ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_27\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rejection_reason_id\": 815\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Job Permission using cURL\nDESCRIPTION: Illustrates how to make a DELETE request to remove a job permission for a user. Requires authentication and the job permission ID in the request body.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PUT 'https://harvest.greenhouse.io/v1/users/{id}/permissions/jobs'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Prospect Pools API Response Structure\nDESCRIPTION: Example JSON response showing the structure of prospect pools data. Each pool contains an ID, name, and ordered array of stages with their respective IDs and names.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_prospect_pools.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123,\n    \"name\": \"Cold Outreach: Referred\",\n    \"stages\": [\n      {\n        \"id\": 1957,\n        \"name\": \"Not Contacted\"\n      },\n      {\n        \"id\": 1958,\n        \"name\": \"Contacted\"\n      },\n      {\n        \"id\": 1959,\n        \"name\": \"1st. Follow Up Sent\"\n      },\n      {\n        \"id\": 1960,\n        \"name\": \"2nd Follow Up Sent\"\n      },\n      {\n        \"id\": 1961,\n        \"name\": \"In Discussion\"\n      }\n    ]\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Cold Outreach: Sourced\",\n    \"stages\": [\n      {\n        \"id\": 1962,\n        \"name\": \"Not Contacted\"\n      },\n      {\n        \"id\": 1963,\n        \"name\": \"Contacted\"\n      },\n      {\n        \"id\": 1964,\n        \"name\": \"1st. Follow Up Sent\"\n      },\n      {\n        \"id\": 1965,\n        \"name\": \"2nd Follow Up Sent\"\n      },\n      {\n        \"id\": 1966,\n        \"name\": \"In Discussion\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Removing a Tag from a Candidate with cURL\nDESCRIPTION: Demonstrates how to remove a specific tag from a candidate using a DELETE request with cURL.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X DELETE 'https://harvest.greenhouse.io/v1/candidates/{candidate_id}/tags/{tag_id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing Offices Response - List Format\nDESCRIPTION: Example JSON response when listing offices with the default render_as=list parameter. Shows multiple office objects in a flat array structure.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 50891,\n    \"name\": \"Utica\",\n    \"location\": {\n        \"name\": \"Utica, New York, United States\"\n    },\n    \"primary_contact_user_id\": 336474,\n    \"parent_id\": 47012,\n    \"parent_office_external_id\": \"parent-1\",\n    \"child_ids\": [],\n    \"child_office_external_ids\": [],\n    \"external_id\": \"45647\"\n  },\n  {\n    \"id\": 47012,\n    \"name\": \"New York\",\n    \"location\": {\n        \"name\": \"New York, United States\"\n    },\n    \"primary_contact_user_id\": 485538,\n    \"parent_id\": 50849,\n    \"parent_office_external_id\": \"parent-2\",\n    \"child_ids\": [\n        50891,\n        50852\n    ],\n    \"child_office_external_ids\": [\n        \"child-office-1\",\n        \"\"\n    ],\n    \"external_id\": \"12345\"\n  },\n  {\n    \"id\": 50852,\n    \"name\": \"New York City\",\n    \"location\": {\n        \"name\": \"New York, New York, United States\"\n    },\n    \"primary_contact_user_id\": 676259,\n    \"parent_id\": 47012,\n    \"parent_office_external_id\": \"parent-1\",\n    \"child_ids\": [],\n    \"child_office_external_ids\": [],\n    \"external_id\": \"67890\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Listing Demographic Answer Options API Call in Shell\nDESCRIPTION: This snippet shows how to make an API call to list all demographic answer options for an organization using cURL. It includes the endpoint and necessary authorization header.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/answer_options'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Request Body for Response Error Endpoint\nDESCRIPTION: JSON payload sent to the Assessment Partner containing error details. This includes the API call that failed, specific error messages, and contextual information such as test IDs and candidate data when available.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_response_error.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"api_call\": \"test_status\",\n\t\"errors\": [\"partner_status is 'complete' but partner_profile url is missing\"],\n\t\"partner_test_id\" : \"12345\",\n\t\"partner_test_name\": \"Personality Test\",\n\t\"partner_interview_id\": \"299506\",\n\t\"candidate_email\": \"hpotter@hogwarts.edu\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Test Request to Assessment Partner API (Shell)\nDESCRIPTION: This snippet demonstrates how to send a POST request to the Assessment Partner's API endpoint for sending a test to a candidate. It includes the necessary authorization header.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_send_test.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://www.testing-partner.com/api/send_test'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Defining Future Job Permission Object Structure in JSON\nDESCRIPTION: Describes the structure of a future job permission object, including its unique identifier, office and department details, and user role ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 87819,\n  \"office_id\": 29192,\n  \"external_office_id\": \"ex-office-1\",\n  \"department_id\": 23425,\n  \"external_department_id\": \"ex-dept-1\",\n  \"user_role_id\": 4730\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Prospect Pool API Response in JSON\nDESCRIPTION: Demonstrates the expected JSON response structure when retrieving a single prospect pool, including its ID, name, active status, and associated prospect stages.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_prospect_pools.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": 25,\n    \"name\": \"Cold Outreach: Sourced\",\n    \"active\": true,\n    \"prospect_stages\": [\n        {\n            \"id\": 85,\n            \"name\": \"Discussed\"\n        },\n        {\n            \"id\": 86,\n            \"name\": \"Had email listed on their blog\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Close Reason Object Structure in JSON\nDESCRIPTION: Defines the structure of a close reason object, containing a unique identifier and name. This represents the format used when working with individual close reasons in the API.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_close_reasons.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 230,\n  \"name\": \"Hired\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Rate Limit Information in Greenhouse Onboarding API\nDESCRIPTION: GraphQL query example showing how to request the current rate limit information. The response provides the limit, remaining requests, and when the rate limit will reset.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_introduction.md#2025-04-14_snippet_2\n\nLANGUAGE: graphql\nCODE:\n```\n# To request the current rate limit information:\n{\n  rateLimit {\n    resetAt\n    limit\n    remaining\n  }\n}\n\n# rateLimit response:\n{\n  \"data\": { \n    \"rateLimit\": {\n      \"resetAt\": \"2018-09-12T18:00:00Z\",\n      \"limit\": 100,\n      \"remaining\": 99\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: List Demographic Answer Options API Request\nDESCRIPTION: GET request to retrieve demographic answer options for a specific demographic question. Requires Basic authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/questions/{id}/answer_options'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 456,\n    \"free_form\": false,\n    \"active\": true,\n    \"name\": \"Blue\",\n    \"demographic_question_id\": 123,\n    \"translations\": [\n      {\n        \"language\": \"en\",\n        \"name\": \"Blue\"\n      }\n    ]\n  },\n  {\n    \"id\": 789,\n    \"free_form\": true,\n    \"active\": true,\n    \"name\": \"Other\",\n    \"demographic_question_id\": 123,\n    \"translations\": [\n      {\n        \"language\": \"en\",\n        \"name\": \"Other\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Interview Deleted Webhook Event Structure in JSON\nDESCRIPTION: JSON payload structure that is sent when a scheduled interview is cancelled or deleted directly. This webhook won't fire if an interview is deleted as a result of deleting a candidate, application, or hiring plan.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_interview_events.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"interview_deleted\",\n  \"payload\": {\n    \"interview\": {\n      \"id\": 31087450\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current User Information with Greenhouse API\nDESCRIPTION: This snippet demonstrates how to make a GET request to retrieve details about the current user. It uses curl to send an authenticated request to the Greenhouse API endpoint.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_current_user.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://api.greenhouse.io/v1/partner/current_user'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Removing Future Job Permission using cURL\nDESCRIPTION: Illustrates how to make a DELETE request to remove a future job permission for a user. Requires authentication and the future job permission ID in the request body.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PUT 'https://harvest.greenhouse.io/v1/users/{id}/permissions/future_jobs'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Listing Demographic Question Sets Response in JSON\nDESCRIPTION: This snippet shows the expected JSON response structure when listing demographic question sets. It includes an array of question set objects with their respective attributes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 1991,\n    \"title\": \"Question Set A\",\n    \"description\": \"<p>Questions for US candidates</p>\",\n    \"active\": true\n  },\n  {\n    \"id\": 1992,\n    \"title\": \"Question Set B\",\n    \"description\": \"<p>Questions for European candidates</p>\",\n    \"active\": true\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Tracking Link Object Structure - JSON\nDESCRIPTION: JSON representation of a tracking link object showing all available fields including id, token, timestamps, job details, source information and credited employee data.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tracking_links.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 6004841,\n  \"token\": \"tnch4u\",\n  \"created_at\": \"2012-10-07T15:06:35.975Z\",\n  \"updated_at\": \"2016-09-27T17:52:56.533Z\",\n  \"related_post_id\": 1,\n  \"related_post_type\": \"SocialMediaPost\",\n  \"job_id\": 12314,\n  \"job_post_id\": 124263,\n  \"job_board\": {\n    \"id\": 8578,\n    \"company_name\": \"Business Corp\",\n    \"url_token\": \"businessco\"\n  },\n  \"source\": {\n    \"id\": 4,\n    \"public_name\": \"Twitter\"\n  },\n  \"credited_to\": {\n    \"id\": 1,\n    \"first_name\": \"Some\",\n    \"last_name\": \"Employee\",\n    \"name\": \"Some Employee\",\n    \"employee_id\": \"ABC12345\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieve Single Demographic Answer Option API Request\nDESCRIPTION: GET request to retrieve a specific demographic answer option by ID. Requires Basic authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/answer_options/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 456,\n  \"free_form\": false,\n  \"active\": true,\n  \"name\": \"Blue\",\n  \"demographic_question_id\": 123,\n  \"translations\": [\n    {\n      \"language\": \"en\",\n      \"name\": \"Blue\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: List All Demographic Answers API Request\nDESCRIPTION: GET request to retrieve all demographic answers for an organization. Supports pagination and filtering by creation/update timestamps.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/answers'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123,\n    \"free_form_text\": \"12am\",\n    \"application_id\": 787,\n    \"demographic_question_id\": 25,\n    \"demographic_answer_option_id\": 106,\n    \"created_at\": \"2019-04-29T18:46:03.707Z\",\n    \"updated_at\": \"2019-04-29T18:46:03.707Z\"\n  },\n  {\n    \"id\": 456,\n    \"free_form_text\": null,\n    \"application_id\": 783,\n    \"demographic_question_id\": 29,\n    \"demographic_answer_option_id\": 109,\n    \"created_at\": \"2017-01-29T15:09:46.806Z\",\n    \"updated_at\": \"2017-01-29T15:09:46.806Z\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Response Structure for Delete Operation in JSON\nDESCRIPTION: Example JSON response structure returned after attempting to delete job openings. Indicates successful deletions and failed deletion attempts with corresponding IDs.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_openings.md#2025-04-14_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"success\": true\n    \"deleted_ids\": [123, 456],\n    \"failed_ids\": [789]\n}\n```\n\n----------------------------------------\n\nTITLE: Future Job Permission Addition Response in JSON\nDESCRIPTION: Shows the expected JSON response format after successfully adding a future job permission, including the new permission's details such as ID, office and department information, and user role ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 9283,\n  \"office_id\": 281921,\n  \"external_office_id\": \"ex-office-1\",\n  \"department_id\": 61921,\n  \"external_department_id\": \"ex-dept-1\",\n  \"user_role_id\": 91821\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Demographic Questions for Question Set API Call in Shell\nDESCRIPTION: This snippet shows how to make an API call to list all demographic questions for a specific question set using cURL. It includes the endpoint with a placeholder for the question set ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_demographic_data.md#2025-04-14_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/demographics/question_sets/{id}/questions'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: POST Request to Assessment Partner's Response Error Endpoint\nDESCRIPTION: Example of how Greenhouse sends error information to the Assessment Partner's request_errors endpoint. The request includes authentication via Basic Auth and provides details about the specific API call that failed.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_response_error.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://www.testing-partner.com/api/request_errors'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Deleting an Application in Greenhouse API (Shell)\nDESCRIPTION: Makes a DELETE request to remove an application by its ID. Requires authentication and On-Behalf-Of header for auditing.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X DELETE 'https://harvest.greenhouse.io/v1/applications/{id}'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Computing HMAC Digest for Webhook Authentication in Ruby\nDESCRIPTION: This snippet demonstrates how to compute the HMAC digest for webhook authentication using Ruby. It uses the OpenSSL library to create a SHA256 digest and generate the HMAC hexadecimal signature.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_introduction.md#2025-04-14_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\ndigest = OpenSSL::Digest.new('sha256')\nsignature = OpenSSL::HMAC.hexdigest(digest, secret_key, body)\n```\n\n----------------------------------------\n\nTITLE: Deleting Custom Field via DELETE Request (Shell)\nDESCRIPTION: Makes a DELETE request to remove a custom field. Includes authentication headers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X DELETE 'https://harvest.greenhouse.io/v1/custom_fields/{id}'\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkeODyN2VhZmEMWRjMzc1YZjMqmUwNjsdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Parsing Candidate Deletion Webhook Payload in JSON\nDESCRIPTION: This code snippet represents the JSON payload for a candidate deletion webhook. It includes information about the deleted candidate, such as their personal details and any associated application IDs that were also deleted.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/webhooks/_candidate_events.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"delete_candidate\",\n  \"payload\": {\n    \"person\": {\n        \"id\": 37031511,\n        \"first_name\": \"Jack\",\n        \"last_name\": \"Sparrow\",\n        \"company\": \"Pirate Shipping\",\n        \"title\": \"Captain\",\n        \"created_at\": \"2013-03-22T00:00:00Z\",\n        \"headline\": \"Eager to find a new commission\",\n        \"is_private\": false,\n        \"recruiter_user_id\": 123,\n        \"coordinator_user_id\": 456,\n        \"can_email\": false,\n        \"deleted_application_ids\": [\n                46196263,\n                46196258\n            ]\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Removing a Tag from a Candidate\nDESCRIPTION: Displays the expected JSON response structure when successfully removing a tag from a candidate.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"Tag 365 has been removed from candidate 29555013\"\n}\n```\n\n----------------------------------------\n\nTITLE: Request Approvals - API Request\nDESCRIPTION: HTTP POST request to initiate an approval flow with required headers including On-Behalf-Of user ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_approvals.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST 'https://harvest.greenhouse.io/v1/approval_flows/{id}/request_approvals'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Example Error Response in JSON for Greenhouse API\nDESCRIPTION: This snippet shows the structure of an error response from the Greenhouse API. It includes an 'errors' array with objects containing 'message' and 'field' properties.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_errors.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"errors\": [\n\t\t{\n\t\t\t\"message\": \"Your request included invalid JSON.\",\n\t\t\t\"field\": \"email\"\n\t\t}\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Offices List with Default List Rendering in Greenhouse API\nDESCRIPTION: This JSON response shows the default format when listing all offices using the Greenhouse API with render_as=list. It displays offices with their departments and jobs, using parent_id and child_ids to represent the hierarchical relationship between offices.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_offices.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"offices\":[\n    {\n      \"id\":10201,\n      \"name\":\"West Coast\",\n      \"departments\":[\n      ],\n      \"child_ids\":[\n        11111\n      ]\n    },\n    {\n      \"id\":11111,\n      \"name\":\"San Francisco\",\n      \"departments\":[\n        {\n          \"id\":33333,\n          \"name\":\"Engineering\",\n          \"jobs\":[\n            {\n              \"id\":44444,\n              \"title\":\"Product Engineer\",\n              \"location\":{\n                \"name\":\"San Francisco, CA\"\n              },\n              \"updated_at\":\"2013-07-02T19:39:23Z\",\n              \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n            },\n            {\n              \"id\":55555,\n              \"title\":\"Mobile Engineer - iOS\",\n              \"location\":{\n                \"name\":\"San Francisco, CA\"\n              },\n              \"updated_at\":\"2013-07-02T19:39:23Z\",\n              \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n            }\n          ],\n          \"parent_id\":null,\n          \"child_ids\":[\n          ]\n        },\n        {\n          \"id\":22222,\n          \"name\":\"Account Management\",\n          \"jobs\":[\n\n          ],\n          \"parent_id\":null,\n          \"child_ids\":[\n          ]\n        }\n      ],\n      \"parent_id\":10201,\n      \"child_ids\":[\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Custom Locations\nDESCRIPTION: API request to get all custom location options available for a specific job post. Returns an array of location objects with details like ID, value, and status.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_job_posts.md#2025-04-14_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/job_posts/{id}/custom_locations'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n     {\n         \"id\": 1234,\n         \"value\": \"Boston\",\n         \"active\": true,\n         \"greenhouse_job_board_id\": 111,\n         \"created_at\": \"2019-05-15T15:19:53.617Z\",\n         \"updated_at\": \"2019-05-15T15:19:53.617Z\"\n     }]\n```\n\n----------------------------------------\n\nTITLE: List User Roles API Request\nDESCRIPTION: Example cURL request to list all user roles in the organization. Requires Basic Authentication with an API token.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_roles.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/user_roles'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Custom Field Options in Greenhouse API (Shell)\nDESCRIPTION: This snippet demonstrates how to delete custom field options using a cURL request to the Greenhouse API. It requires the custom field ID and user authentication headers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_16\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X DELETE 'https://harvest.greenhouse.io/v1/custom_field/{id}/custom_field_options'\n  -H \"On-Behalf-Of: {greenhouse user ID}\"\n  -H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Candidate Tag Object Structure in JSON\nDESCRIPTION: Defines the structure of a candidate tag object, including its unique identifier and name.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 230,\n  \"name\": \"New York\"\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Body Parameters for Adding User Email in Greenhouse API\nDESCRIPTION: Defines the JSON parameters for adding a user's email address. The 'email' field is required and must be a valid email address. The optional 'send_verification' boolean controls whether a verification email is sent.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_users.md#2025-04-14_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"email\": \"user@example.com\",\n  \"send_verification\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Close Reasons via API Request\nDESCRIPTION: Shows how to make an authenticated GET request to retrieve all close reasons for an organization using the Greenhouse API.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_close_reasons.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X GET 'https://harvest.greenhouse.io/v1/close_reasons'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: OAuth Bearer Token Authentication Header\nDESCRIPTION: Example of how to include the OAuth access token in the Authorization header for API requests.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_introduction.md#2025-04-14_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nAuthorization: Bearer <access_token>\n```\n\n----------------------------------------\n\nTITLE: Making a List Tests API request with cURL\nDESCRIPTION: A shell command example showing how to make a GET request to the Assessment Partner's list_tests endpoint using cURL with Basic Authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_list_tests.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://www.testing-partner.com/api/list_tests'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Future Job Permission Removal Response in JSON\nDESCRIPTION: Shows the expected JSON response format after successfully removing a future job permission, including a confirmation message with the deleted permission ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"Future Job Permission 639234 has been deleted.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Slate via Git Clone and Bundle Install\nDESCRIPTION: Instructions for setting up Slate by cloning the repository and installing dependencies using Bundler.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/README.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```bash\ngit clone https://github.com/slatedocs/slate.git\ncd slate\nbundle install\nbundle exec middleman server\n```\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Response from List Scorecards Endpoint\nDESCRIPTION: This JSON shows the structure of the response when listing multiple scorecards via the API. The response is an array of scorecard objects, each containing complete details about candidate evaluations.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_scorecards.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 123,\n    \"updated_at\": \"2016-08-22T19:52:38.384Z\",\n    \"created_at\": \"2016-08-22T19:52:38.384Z\",\n    \"interview\": \"Application Review\",\n    \"interview_step\": {\n      \"id\": 432,\n      \"name\": \"Application Review\"\n    },\n    \"candidate_id\": 1234,\n    \"application_id\": 3456,\n    \"interviewed_at\": \"2016-08-18T16:00:00.000Z\",\n    \"submitted_by\": {\n      \"id\": 4080,\n      \"first_name\": \"Kate\",\n      \"last_name\": \"Austen\",\n      \"name\": \"Kate Austen\",\n      \"employee_id\": \"12345\"\n    },\n    \"interviewer\": {\n      \"id\": 821,\n      \"first_name\": \"Robert\",\n      \"last_name\": \"Robertson\",\n      \"name\": \"Robert Robertson\",\n      \"employee_id\": \"100377\"\n    },\n    \"submitted_at\": \"2014-03-26T21:59:51Z\",\n    \"overall_recommendation\": \"yes\",\n    \"attributes\": [\n      {\n        \"name\": \"Communication\",\n        \"type\": \"Skills\",\n        \"note\": \"What a great communicator!\",\n        \"rating\": \"yes\"\n      },\n      {\n        \"name\": \"Adaptable\",\n        \"type\": \"Skills\",\n        \"note\": null,\n        \"rating\": \"yes\"\n      },\n      {\n        \"name\": \"Relationship Manager\",\n        \"type\": \"Skills\",\n        \"note\": null,\n        \"rating\": \"mixed\"\n      },\n      {\n        \"name\": \"Project Management\",\n        \"type\": \"Qualifications\",\n        \"note\": null,\n        \"rating\": \"mixed\"\n      },\n      {\n        \"name\": \"Problem Solver\",\n        \"type\": \"Qualifications\",\n        \"note\": null,\n        \"rating\": \"no\"\n      },\n      {\n        \"name\": \"Analytical\",\n        \"type\": \"Skills\",\n        \"note\": null,\n        \"rating\": \"definitely_not\"\n      }\n    ],\n    \"ratings\": {\n      \"definitely_not\": [\n        \"Analytical\"\n      ],\n      \"no\": [\n        \"Problem Solver\"\n      ],\n      \"mixed\": [\n        \"Relationship Manager\",\n        \"Project Management\"\n      ],\n      \"yes\": [\n        \"Communication\",\n        \"Adaptable\"\n      ],\n      \"strong_yes\": []\n    },\n    \"questions\": [\n      {\n        \"id\": null,\n        \"question\": \"Key Take-Aways\",\n        \"answer\": \"Seems like a decent candidate.\"\n      },\n      {\n        \"id\": null,\n        \"question\": \"Private Notes\",\n        \"answer\": \"Seems like a decent candidate.\"\n      },\n      {\n        \"id\": 1234567,\n        \"question\": \"Does the candidate have experience designing APIs?\",\n        \"answer\": \"Yes\"\n      },\n      {\n        \"id\": 1234568,\n        \"question\": \"Which team would you suggest for this candidate?\",\n        \"answer\": \"Alpha Team\"\n      },\n      {\n        \"id\": 1234569,\n        \"question\": \"Where would the candidate be willing to work?\",\n        \"answer\": \"London, Dubai, San Diego\"\n      }\n    ]\n  },\n  {\n    \"id\": 3414169,\n    \"updated_at\": \"2016-01-08T19:07:08.295Z\",\n    \"created_at\": \"2016-01-08T19:07:08.295Z\",\n    \"interview\": \"Behavioral Phone Interview\",\n    \"interview_step\": {\n      \"id\": 433,\n      \"name\": \"Behavioral Phone Interview\"\n    },\n    \"candidate_id\": 14271904,\n    \"application_id\": 23558552,\n    \"interviewed_at\": \"2016-01-08T17:00:00.000Z\",\n    \"submitted_by\": {\n        \"id\": 158104,\n        \"first_name\": \"Jane\",\n        \"last_name\": \"Doe\",\n        \"name\": \"Dane Doe\",\n        \"employee_id\": \"034509364\"\n    },\n    \"interviewer\": {\n      \"id\": 821,\n      \"first_name\": \"Robert\",\n      \"last_name\": \"Robertson\",\n      \"name\": \"Robert Robertson\",\n      \"employee_id\": \"100377\"\n    },\n    \"submitted_at\": \"2016-01-08T19:07:08.295Z\",\n    \"overall_recommendation\": \"no\",\n    \"attributes\": [\n      {\n        \"name\": \"Communication\",\n        \"type\": \"Skills\",\n        \"note\": \"What a great communicator!\",\n        \"rating\": \"yes\"\n      },\n      {\n        \"name\": \"Adaptable\",\n        \"type\": \"Skills\",\n        \"note\": null,\n        \"rating\": \"yes\"\n      },\n      {\n        \"name\": \"Relationship Manager\",\n        \"type\": \"Skills\",\n        \"note\": null,\n        \"rating\": \"mixed\"\n      },\n      {\n        \"name\": \"Project Management\",\n        \"type\": \"Qualifications\",\n        \"note\": null,\n        \"rating\": \"mixed\"\n      },\n      {\n        \"name\": \"Problem Solver\",\n        \"type\": \"Qualifications\",\n        \"note\": null,\n        \"rating\": \"no\"\n      },\n      {\n        \"name\": \"Analytical\",\n        \"type\": \"Skills\",\n        \"note\": null,\n        \"rating\": \"definitely_not\"\n      }\n    ],\n    \"ratings\": {\n      \"definitely_not\": [\n        \"Analytical\"\n      ],\n      \"no\": [\n        \"Problem Solver\"\n      ],\n      \"mixed\": [\n        \"Relationship Manager\",\n        \"Project Management\"\n      ],\n      \"yes\": [\n        \"Communication\",\n        \"Adaptable\"\n      ],\n      \"strong_yes\": []\n    },\n    \"questions\": [\n      {\n        \"id\": null,\n        \"question\": \"Key Take-Aways\",\n        \"answer\": \"Seems like a decent candidate.\"\n      },\n      {\n        \"id\": null,\n        \"question\": \"Private Notes\",\n        \"answer\": \"Seems like a decent candidate.\"\n      },\n      {\n        \"id\": 1234567,\n        \"question\": \"Does the candidate have experience designing APIs?\",\n        \"answer\": \"Yes\"\n      },\n      {\n        \"id\": 1234568,\n        \"question\": \"Which team would you suggest for this candidate?\",\n        \"answer\": \"Alpha Team\"\n      },\n      {\n        \"id\": 1234569,\n        \"question\": \"Where would the candidate be willing to work?\",\n        \"answer\": \"London, Dubai, San Diego\"\n      }\n    ]     \n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Editing Office API Request\nDESCRIPTION: Shell command to update an existing office in the Greenhouse API using cURL. Requires Basic Authentication and On-Behalf-Of header for audit purposes.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_offices.md#2025-04-14_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PATCH 'https://harvest.greenhouse.io/v1/offices/{id}'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Basic Auth URL Format\nDESCRIPTION: Example of including the Base64 encoded API key in the request URL for Basic Authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_introduction.md#2025-04-14_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nhttps://<base64_encoded_api_key>:@api.greenhouse.io/v1/partners/candidates\n```\n\n----------------------------------------\n\nTITLE: Unsuccessful Response for Unreject Application Request\nDESCRIPTION: This JSON response demonstrates the structure of an unsuccessful unreject application request. It includes an error message indicating that the application must be in a 'rejected' state to be unrejected.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_applications.md#2025-04-14_snippet_32\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"errors\": [\n    {\n      \"message\": \"Application must be 'rejected', is currently 'active'\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Future Job Permission using cURL\nDESCRIPTION: Demonstrates how to make a PUT request to add a future job permission for a user. Requires authentication and job details in the request body.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X PUT 'https://harvest.greenhouse.io/v1/users/{id}/permissions/future_jobs'\n-H \"Content-Type: application/json\"\n-H \"On-Behalf-Of: {greenhouse user ID}\"\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of API Error Codes\nDESCRIPTION: A markdown table listing HTTP error codes returned by the Kittn API along with their meanings. The table covers common errors from 400-level client errors to 500-level server errors.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/_errors.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nError Code | Meaning\n---------- | -------\n400 | Bad Request -- Your request is invalid.\n401 | Unauthorized -- Your API key is wrong.\n403 | Forbidden -- The kitten requested is hidden for administrators only.\n404 | Not Found -- The specified kitten could not be found.\n405 | Method Not Allowed -- You tried to access a kitten with an invalid method.\n406 | Not Acceptable -- You requested a format that isn't json.\n410 | Gone -- The kitten requested has been removed from our servers.\n418 | I'm a teapot.\n429 | Too Many Requests -- You're requesting too many kittens! Slow down!\n500 | Internal Server Error -- We had a problem with our server. Try again later.\n503 | Service Unavailable -- We're temporarily offline for maintenance. Please try again later.\n```\n\n----------------------------------------\n\nTITLE: Releasing Slate Documentation Updates\nDESCRIPTION: Steps for publishing updates to Slate documentation, including merging changes and running a publish command.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/README.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. Merge your branch to master\n2. Run `bundle exec rake publish` - this will build & push to the `gh-pages` branch\n3. Validate the changes are up on `https://developers.greenhouse.io/` - sometimes there is a few minutes lag\n```\n\n----------------------------------------\n\nTITLE: Retrieve Tracking Link Data - Shell\nDESCRIPTION: cURL command demonstrating how to make a GET request to retrieve tracking link data for a specific token. Requires Basic authentication.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tracking_links.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X GET 'https://harvest.greenhouse.io/v1/tracking_links/{token}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Linking to API Changelog Locations in Markdown\nDESCRIPTION: Provides direct links to the changelog sections for the Harvest API, Assessment API, and Candidate Ingestion API within the Greenhouse API documentation repository.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/pull_request_template.md#2025-04-14_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nHarvest: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_introduction.md?plain=1#L173\nAssessment: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_introduction.md?plain=1#L73\nCandidate Ingestion: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_introduction.md?plain=1#L115\n```\n\n----------------------------------------\n\nTITLE: Source Object Structure in JSON\nDESCRIPTION: The JSON structure of a source object in Greenhouse API, showing its ID, name, and type properties.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_sources.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 632,\n  \"name\": \"Other\",\n  \"type\": {\n    \"id\": 5,\n    \"name\": \"Prospecting\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Structuring Greenhouse Developer Resources Landing Page in HTML\nDESCRIPTION: This HTML snippet creates a landing page for Greenhouse's developer resources. It includes a main title and a grid of clickable blocks, each representing a different API or service offered by Greenhouse. Each block contains a title and brief description of the corresponding API.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/index.html.md#2025-04-14_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"center-big\">Developer Resources</div>\n<div class=\"blocks\">\n  <a href=\"/harvest.html\" title=\"Harvest API Docs\" class=\"block block-harvest\">\n    <h3>Harvest API</h3>\n    <p class=\"block-description\">Programmatically access your jobs, candidates, interviews, and other data from Greenhouse.</p>\n  </a>\n  <a href=\"/job-board.html\" title=\"Job Board API Docs\" class=\"block block-job-board\">\n    <h3>Job Board API</h3>\n    <p class=\"block-description\">Build careers pages with a unique look and feel, construct department-level pages and more!</p>\n  </a>\n  <a href=\"/webhooks.html\" title=\"Webhook Docs\" class=\"block block-webhooks\">\n    <h3>Webhooks</h3>\n    <p class=\"block-description\">Be notified when particular events happen on Greenhouse.</p>\n  </a>\n  <a href=\"/gho.html\" title=\"Greenhouse Onboarding API Docs\" class=\"block block-gho\">\n    <h3>Onboarding API</h3>\n    <p class=\"block-description\">Programmatically access your employee information from Greenhouse Onboarding.</p>\n  </a>\n  <a href=\"/candidate-ingestion.html\" title=\"Ingestion API Docs\" class=\"block block-candidate-ingestion\">\n    <h3>Ingestion API</h3>\n    <p class=\"block-description\">Enables sourcing partners to submit prospects and candidates to Greenhouse.</p>\n  </a>\n  <a href=\"/assessment.html\" title=\"Assessment API Docs\" class=\"block block-assessment\">\n    <h3>Assessment API</h3>\n    <p class=\"block-description\">Enables assessment platforms to seamlessly integrate with Greenhouse.</p>\n  </a>\n  <a href=\"/audit-log.html\" title=\"Audit Log API Docs\" class=\"block block-audit-log\">\n    <h3>Audit Log API</h3>\n    <p class=\"block-description\">Offers a record of important events, providing insights into who accessed or edited information in Greenhouse.</p>\n  </a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Querying Non-existent Employee with GraphQL\nDESCRIPTION: A GraphQL query attempting to retrieve an employee with a non-existent ID (100000000), which will result in an error response.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_errors.md#2025-04-14_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  employee(id: 100000000) {\n  \temail\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Individual Section Response Example in JSON\nDESCRIPTION: Example JSON response when retrieving a specific section by ID. Shows the complete details of a single section including its jobs with their titles, locations, and URLs.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_sections.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\":14128,\n  \"name\":\"Don't see a job you like?\",\n  \"jobs\":[\n    {\n      \"id\":44444,\n      \"title\":\"Engineer\",\n      \"location\":{\n        \"name\":\"San Francisco, CA\"\n      },\n      \"updated_at\":\"2013-07-02T19:39:23Z\",\n      \"absolute_url\":\"http://your.co/careers?gh_jid=444444\"\n    },\n    {\n      \"id\":55555,\n      \"title\":\"Product Manager\",\n      \"location\":{\n        \"name\":\"San Francisco, CA\"\n      },\n      \"updated_at\":\"2013-07-02T19:39:23Z\",\n      \"absolute_url\":\"http://your.co/careers?gh_jid=55555\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Auth Authorization Header\nDESCRIPTION: Alternative method to include the Base64 encoded API key in the Authorization header.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/candidate-ingestion/_introduction.md#2025-04-14_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nAuthorization: Basic base64_encoded_api_key:\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Adding a Tag to a Candidate\nDESCRIPTION: Displays the expected JSON response structure when successfully adding a tag to a candidate.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_tags.md#2025-04-14_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"Tag 365, 'Ruby', has been applied to candidate 29555013\"\n}\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Error Response in Greenhouse Onboarding API\nDESCRIPTION: Example of the error response returned when the API rate limit is reached. The response includes the current limit, remaining requests, and when the rate limit will reset.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_introduction.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n# When the rate limit is reached, ensuing requests will result \n# in the following response (until the next time period begins):\n{\n  \"errors\": [\n    {\n      \"message\": \"Rate limit reached.\",\n      \"limit\": 100,\n      \"remaining\": 0,\n      \"resetAt\": \"2018-01-01T01:00:00Z\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing JSONP Requests with Greenhouse Job Board API\nDESCRIPTION: Example of how to make a JSONP request to the Greenhouse Job Board API by inserting a script tag into your HTML document. The callback parameter must be specified and can only contain numbers, letters, underscore, and period characters.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/job-board/_introduction.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script\n  type=\"text/javascript\"\n  src=\"https://boards-api.greenhouse.io/v1/example/method/url?callback=\">\n</script>\n```\n\n----------------------------------------\n\nTITLE: Job Permission Removal Request Body in JSON\nDESCRIPTION: Specifies the JSON structure for the request body when removing a job permission, containing the job permission ID to be deleted.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"job_permission_id\": 27207466\n}\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format in Markdown\nDESCRIPTION: Example of how individual changelog entries are formatted with bullet points.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/CHANGELOG.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* Fix Vagrantfile gem install for ruby >= 2.6 (thanks @Cyb0rk)\\n* Disable file watcher in run_build() for sake of qemu on arm64 (thanks @anapsix)\\n* Expand deprecated git.io links to full url in docs (thanks @judge2020)\n```\n\n----------------------------------------\n\nTITLE: Job Permission Removal Response in JSON\nDESCRIPTION: Shows the expected JSON response format after successfully removing a job permission, including a confirmation message with the deleted permission ID.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"Job Permission 321231 has been deleted.\"\n}\n```\n\n----------------------------------------\n\nTITLE: GraphQL Error Response Structure in JSON\nDESCRIPTION: The JSON response to a failed GraphQL query, containing both a data field with null values and an errors array with detailed error information including message, locations, path, and errorCode.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_errors.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"employee\": null\n  },\n  \"errors\": [\n    {\n      \"message\": \"Unable to find Employee with id 100000000\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"path\": [\n        \"employee\"\n      ],\n      \"errorCode\": \"NotFound\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Expected Response from Assessment Partner\nDESCRIPTION: The expected JSON response from the Assessment Partner after receiving error information. A successful receipt of the error information should return a 200 status code.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/assessment/_response_error.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"status\": 200\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Complexity Information in Greenhouse Onboarding API\nDESCRIPTION: Example showing how to request the complexity score of a GraphQL query. The complexity score helps determine if a query exceeds the maximum allowed complexity.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/gho/_introduction.md#2025-04-14_snippet_3\n\nLANGUAGE: graphql\nCODE:\n```\n# Say we had the following query:\n{\n  employee(id: 25) {\n    email\n  }\n}\n\n# To request the complexity score of this query, simply \n# include complexityInfo as such:\n{\n  employee(id: 25) {\n    email\n  }\n  complexityInfo {\n    score\n    maximum\n  }\n}\n\n# The response:\n{\n  \"data\": {\n    \"employee\": {\n      \"email\": \"email_address@example.com\"\n    },\n    \"complexityInfo\": {\n      \"score\": 1,\n      \"maximum\": 2500\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Prospect Pool API Request in Shell\nDESCRIPTION: Shows how to make a GET request to retrieve a specific prospect pool by its ID using cURL. Requires authentication via Basic Auth.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_prospect_pools.md#2025-04-14_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/prospect_pools/{id}'\n-H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Custom Field Options via GET Request (Shell)\nDESCRIPTION: Makes a GET request to retrieve options for a specific custom field. Includes authentication headers.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_custom_fields.md#2025-04-14_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ncurl 'https://harvest.greenhouse.io/v1/custom_field/{id}/custom_field_options'\n-H \"On-Behalf-Of: {greenhouse user ID}\" -H \"Authorization: Basic MGQwMzFkODIyN2VhZmE2MWRjMzc1YTZjMmUwNjdlMjQ6\"\n```\n\n----------------------------------------\n\nTITLE: Future Job Permission Removal Request Body in JSON\nDESCRIPTION: Specifies the JSON structure for the request body when removing a future job permission, containing the future job permission ID to be deleted.\nSOURCE: https://github.com/grnhse/greenhouse-api-docs/blob/master/source/includes/harvest/_user_permissions.md#2025-04-14_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"future_job_permission_id\": 427600 \n}\n```"
  }
]
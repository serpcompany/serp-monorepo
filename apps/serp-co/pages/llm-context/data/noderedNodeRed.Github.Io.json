[
  {
    "owner": "node-red",
    "repo": "node-red.github.io",
    "content": "TITLE: Installing Node-RED using npm\nDESCRIPTION: Command for installing Node-RED globally using npm. This installs Node-RED as a global module along with its dependencies. Note that Windows users should omit the 'sudo' prefix.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm install -g --unsafe-perm node-red\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Context Values at Once\nDESCRIPTION: Shows how to set multiple context values in a single operation, available in Node-RED 0.19 or later.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n// Node-RED 0.19 or later\nflow.set([\"count\", \"colour\", \"temperature\"], [123, \"red\", \"12.5\"]);\n```\n\n----------------------------------------\n\nTITLE: Logging from Node-RED Functions\nDESCRIPTION: Demonstrates the three main logging methods available in Function nodes: log for general information, warn for warnings, and error for reporting errors.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nnode.log(\"Something happened\");\nnode.warn(\"Something happened you should know about\");\nnode.error(\"Oh no, something bad happened\");\n```\n\n----------------------------------------\n\nTITLE: Proper Error Handling in Node-RED Functions\nDESCRIPTION: Shows how to report an error and trigger Catch nodes by calling node.error() with both the error message and the original message object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nnode.error(\"hit an error\", msg);\n```\n\n----------------------------------------\n\nTITLE: Node-RED startup console output\nDESCRIPTION: Example console output when starting Node-RED, showing version information, loading of nodes, settings location, and the server address for accessing the editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n$ node-red\n\nWelcome to Node-RED\n===================\n\n30 Jun 23:43:39 - [info] Node-RED version: v1.3.5\n30 Jun 23:43:39 - [info] Node.js  version: v14.7.2\n30 Jun 23:43:39 - [info] Darwin 19.6.0 x64 LE\n30 Jun 23:43:39 - [info] Loading palette nodes\n30 Jun 23:43:44 - [warn] rpi-gpio : Raspberry Pi specific node set inactive\n30 Jun 23:43:44 - [info] Settings file  : /Users/nol/.node-red/settings.js\n30 Jun 23:43:44 - [info] HTTP Static    : /Users/nol/node-red/web\n30 Jun 23:43:44 - [info] Context store  : 'default' [module=localfilesystem]\n30 Jun 23:43:44 - [info] User directory : /Users/nol/.node-red\n30 Jun 23:43:44 - [warn] Projects disabled : set editorTheme.projects.enabled=true to enable\n30 Jun 23:43:44 - [info] Creating new flows file : flows_noltop.json\n30 Jun 23:43:44 - [info] Starting flows\n30 Jun 23:43:44 - [info] Started flows\n30 Jun 23:43:44 - [info] Server now running at http://127.0.0.1:1880/red/\n```\n\n----------------------------------------\n\nTITLE: Signaling Completion of Asynchronous Processing in Node-RED\nDESCRIPTION: Demonstrates the proper way to signal completion of asynchronous message handling using node.done() to help the runtime track messages through the system.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\ndoSomeAsyncWork(msg, function(result) {\n    msg.payload = result;\n    node.send(msg);\n    node.done();\n});\nreturn;\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Settings in Node-RED\nDESCRIPTION: Basic HTTPS configuration using SSL certificates. Requires private key and certificate files in PEM format.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhttps: {\n    key: require(\"fs\").readFileSync('privkey.pem'),\n    cert: require(\"fs\").readFileSync('cert.pem')\n},\n```\n\n----------------------------------------\n\nTITLE: Sending Multiple Messages to Multiple Outputs in Node-RED\nDESCRIPTION: Demonstrates sending multiple messages to different outputs. Three messages are sent to the first output in sequence, while one message is sent to the second output.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar msg1 = { payload:\"first out of output 1\" };\nvar msg2 = { payload:\"second out of output 1\" };\nvar msg3 = { payload:\"third out of output 1\" };\nvar msg4 = { payload:\"only message from output 2\" };\nreturn [ [ msg1, msg2, msg3 ], msg4 ];\n```\n\n----------------------------------------\n\nTITLE: Running Node-RED Docker Container in Background\nDESCRIPTION: This bash command shows how to run a Node-RED Docker container in detached mode (background). It maps the container's port to the host and mounts a volume for data persistence.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 1880:1880 -v node_red_data:/data --name mynodered nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Splitting Text into Multiple Messages in Node-RED\nDESCRIPTION: Splits the incoming payload text by spaces and returns a separate message for each word, demonstrating how to generate multiple messages from a single input.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar outputMsgs = [];\nvar words = msg.payload.split(\" \");\nfor (var w in words) {\n    outputMsgs.push({payload:words[w]});\n}\nreturn [ outputMsgs ];\n```\n\n----------------------------------------\n\nTITLE: Getting Multiple Context Values at Once\nDESCRIPTION: Demonstrates how to retrieve multiple context values in a single operation, available in Node-RED 0.19 or later.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n// Node-RED 0.19 or later\nvar values = flow.get([\"count\", \"colour\", \"temperature\"]);\n// values[0] is the 'count' value\n// values[1] is the 'colour' value\n// values[2] is the 'temperature' value\n```\n\n----------------------------------------\n\nTITLE: Accessing Host Devices in Node-RED Docker Container\nDESCRIPTION: Command to run a Node-RED Docker container with access to a specific host device (in this example, a serial port). This allows the container to directly interact with hardware connected to the host system.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v node_red_data:/data --name mynodered --device=/dev/ttyACM0 nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Embedding Node-RED in Express Application (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to embed Node-RED into an Express application. It sets up the necessary dependencies, creates an Express app and server, configures Node-RED settings, initializes the runtime, and sets up routes for the editor and node UIs.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/embedding.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar http = require('http');\nvar express = require(\"express\");\nvar RED = require(\"node-red\");\n\n// Create an Express app\nvar app = express();\n\n// Add a simple route for static content served from 'public'\napp.use(\"/\",express.static(\"public\"));\n\n// Create a server\nvar server = http.createServer(app);\n\n// Create the settings object - see default settings.js file for other options\nvar settings = {\n    httpAdminRoot:\"/red\",\n    httpNodeRoot: \"/api\",\n    userDir:\"/home/nol/.nodered/\",\n    functionGlobalContext: { }    // enables global context\n};\n\n// Initialise the runtime with a server and settings\nRED.init(server,settings);\n\n// Serve the editor UI from /red\napp.use(settings.httpAdminRoot,RED.httpAdmin);\n\n// Serve the http nodes UI from /api\napp.use(settings.httpNodeRoot,RED.httpNode);\n\nserver.listen(8000);\n\n// Start the runtime\nRED.start();\n```\n\n----------------------------------------\n\nTITLE: Sending Different Messages to Multiple Outputs in Node-RED\nDESCRIPTION: Passes the original message to the first output while simultaneously sending a derived message (containing payload length) to the second output.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar newMsg = { payload: msg.payload.length };\nreturn [msg, newMsg];\n```\n\n----------------------------------------\n\nTITLE: Accessing Node-RED Docker Container Shell\nDESCRIPTION: These bash commands demonstrate how to access the shell of a running Node-RED Docker container, install additional nodes, and restart the container to apply changes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ docker exec -it mynodered /bin/bash\nbash-4.4$ npm install node-red-dashboard\nbash-4.4$ exit\n$ docker stop mynodered\n$ docker start mynodered\n```\n\n----------------------------------------\n\nTITLE: Accessing Specific Context Stores in Node-RED\nDESCRIPTION: Shows how to access named context stores for both synchronous and asynchronous operations, available in Node-RED 0.19 or later.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n// Get value - sync\nvar myCount = flow.get(\"count\", storeName);\n\n// Get value - async\nflow.get(\"count\", storeName, function(err, myCount) { ... });\n\n// Set value - sync\nflow.set(\"count\", 123, storeName);\n\n// Set value - async\nflow.set(\"count\", 123, storeName, function(err) { ... })\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom User Authentication in Node-RED\nDESCRIPTION: Module that provides custom user authentication with three main functions: users() to validate usernames, authenticate() to verify credentials, and default() to handle anonymous access.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n   type: \"credentials\",\n   users: function(username) {\n       return new Promise(function(resolve) {\n           // Do whatever work is needed to check username is a valid\n           // user.\n           if (valid) {\n               // Resolve with the user object. It must contain\n               // properties 'username' and 'permissions'\n               var user = { username: \"admin\", permissions: \"*\" };\n               resolve(user);\n           } else {\n               // Resolve with null to indicate this user does not exist\n               resolve(null);\n           }\n       });\n   },\n   authenticate: function(username,password) {\n       return new Promise(function(resolve) {\n           // Do whatever work is needed to validate the username/password\n           // combination.\n           if (valid) {\n               // Resolve with the user object. Equivalent to having\n               // called users(username);\n               var user = { username: \"admin\", permissions: \"*\" };\n               resolve(user);\n           } else {\n               // Resolve with null to indicate the username/password pair\n               // were not valid.\n               resolve(null);\n           }\n       });\n   },\n   default: function() {\n       return new Promise(function(resolve) {\n           // Resolve with the user object for the default user.\n           // If no default user exists, resolve with null.\n           resolve({anonymous: true, permissions:\"read\"});\n       });\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Persisting Node-RED Data using Host Directory\nDESCRIPTION: Command to run Node-RED with a bind mount to persist user data in a host directory. Ensures data is not lost when the container is destroyed.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v /home/pi/.node-red:/data --name mynodered nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Installing Node-RED on Android using Termux\nDESCRIPTION: This snippet shows the commands to update Termux, install necessary packages, and install Node-RED globally. It also includes the command to start Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/android.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\napt update\napt upgrade\napt install coreutils nano nodejs\nnpm i -g --unsafe-perm node-red\nnode-red\n```\n\n----------------------------------------\n\nTITLE: Creating New Message Object in Node-RED Function\nDESCRIPTION: Creates a completely new message object with a payload containing the length of the original payload. This approach loses any other properties from the original message.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar newMsg = { payload: msg.payload.length };\nreturn newMsg;\n```\n\n----------------------------------------\n\nTITLE: Successful npm installation output\nDESCRIPTION: Example output showing a successful Node-RED installation with npm. This shows the installed version, package count, and vulnerability check status.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n+ node-red@1.1.0\nadded 332 packages from 341 contributors in 18.494s\nfound 0 vulnerabilities\n```\n\n----------------------------------------\n\nTITLE: Overriding Node-RED settings via command-line\nDESCRIPTION: Examples of overriding individual Node-RED settings using the -D flag. Shows both direct parameter setting and using a settings file.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n-D logging.console.level=trace\n```\n\n----------------------------------------\n\nTITLE: Using warn() for Debugging in Node-RED Function\nDESCRIPTION: Demonstrates how to use node.warn() to output debugging information to the sidebar, useful for troubleshooting Function nodes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nnode.warn(\"my var xyz = \" + xyz);\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Counter Example in Node-RED\nDESCRIPTION: Complete example of implementing a counter using asynchronous context access with proper error handling.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\ncontext.get('count', function(err, count) {\n    if (err) {\n        node.error(err, msg);\n    } else {\n        // initialise the counter to 0 if it doesn't exist already\n        count = count || 0;\n        count += 1;\n        // store the value back\n        context.set('count',count, function(err) {\n            if (err) {\n                node.error(err, msg);\n            } else {\n                // make it part of the outgoing msg object\n                msg.count = count;\n                // send the message\n                node.send(msg);\n            }\n        });\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Running Node-RED Docker Container\nDESCRIPTION: Basic command to run Node-RED in a Docker container. It maps port 1880, mounts a volume for data persistence, and names the container.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v node_red_data:/data --name mynodered nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Installing Node-RED globally using npm\nDESCRIPTION: This command installs Node-RED as a global npm package, making the 'node-red' command available system-wide.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/windows.md#2025-04-09_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nnpm install -g --unsafe-perm node-red\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP Node Middleware in Node-RED\nDESCRIPTION: Example of defining a custom middleware function for HTTP In nodes in Node-RED. This allows custom processing like authentication for HTTP endpoints provided by nodes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/configuration.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhttpNodeMiddleware: function(req,res,next) {\n    // Perform any processing on the request.\n    // Be sure to call next() if the request should be passed\n    // to the relevant HTTP In node.\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring File-Based Context Storage in Node-RED\nDESCRIPTION: Example configuration in settings.js to enable file-based context storage. This sets the default context store to use the localfilesystem plugin, which stores data under ~/.node-red/context/ and caches values in memory, writing to disk every 30 seconds.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/context.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncontextStorage: {\n   default: {\n       module: \"localfilesystem\"\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Credentials in Node-RED settings.js\nDESCRIPTION: This JavaScript code snippet demonstrates how to configure Node-RED to use an environment variable for the credential secret in the settings.js file. This approach allows for secure handling of credentials in Docker environments.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  credentialSecret: process.env.NODE_RED_CREDENTIAL_SECRET // add exactly this\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Context Store Set Callback in JavaScript\nDESCRIPTION: This snippet shows the structure of a callback function used specifically for the set operation in the Context Store API. It demonstrates how to handle errors during the storing process.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/context/methods/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction callback(error) {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Middleware for Admin API Security Headers\nDESCRIPTION: Implementation of custom middleware for setting security headers on admin/editor routes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nhttpAdminMiddleware: function(req, res, next) {\n    // Set the X-Frame-Options header to limit where the editor\n    // can be embedded\n    res.set('X-Frame-Options', 'sameorigin');\n    next();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Node-RED on Raspberry Pi using Installation Script\nDESCRIPTION: Command to download and execute the Node-RED installation script for Raspberry Pi. The script installs Node.js, npm, and Node-RED with Pi-specific configurations.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/raspberrypi.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbash <(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered)\n```\n\n----------------------------------------\n\nTITLE: Cloning the Node-RED Repository\nDESCRIPTION: Clones the Node-RED source code repository from GitHub to the local machine.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/development.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/node-red/node-red.git\n```\n\n----------------------------------------\n\nTITLE: Custom Token Authentication in Node-RED\nDESCRIPTION: Implementation of custom token authentication with optional header configuration for Node-RED admin API.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nadminAuth: {\n    ...\n    tokens: function(token) {\n        return new Promise(function(resolve, reject) {\n            // Do whatever work is needed to check token is valid\n            if (valid) {\n                // Resolve with the user object. It must contain\n                // properties 'username' and 'permissions'\n                var user = { username: 'admin', permissions: '*' };\n                resolve(user);\n            } else {\n                // Resolve with null as this user does not exist\n                resolve(null);\n            }\n        });\n    },\n    tokenHeader: \"x-my-custom-token\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js and Node-RED on Ubuntu EC2 Instance\nDESCRIPTION: This bash script installs Node.js and Node-RED on an Ubuntu EC2 instance. It adds the NodeSource repository, installs Node.js and build essentials, then globally installs Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/aws.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\nsudo apt-get install -y nodejs build-essential\nsudo npm install -g --unsafe-perm node-red\n```\n\n----------------------------------------\n\nTITLE: Implementing Context Store Callback Function in JavaScript\nDESCRIPTION: This snippet demonstrates the structure of a callback function used in the Context Store API for get and set operations. It shows how to handle errors and multiple return values.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/context/methods/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction callback(error, value1, value2, ... ) {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Node Module from NPM Repository - JSON Request\nDESCRIPTION: JSON request body example for installing a node module from the npm repository. The module field specifies the name of the package to install.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/nodes/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"module\": \"node-red-node-suncalc\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Context Store Module\nDESCRIPTION: Example implementation of a custom context store module showing the required constructor pattern and initialization of a store instance.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/context/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar ContextStore = function(config) {\n    this.config = config;\n}\n\nContextStore.prototype.open = function() { ... }\n\n\nmodule.exports = function(config){\n    return new ContextStore(config);\n};\n```\n\n----------------------------------------\n\nTITLE: Running Node-RED with Docker\nDESCRIPTION: Basic Docker command to run Node-RED. This runs Node-RED in a container exposing port 1880, which is the default port for the Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 --name mynodered nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Implementing Node-RED Node Runtime Logic in JavaScript\nDESCRIPTION: The JavaScript implementation of the lowercase node that processes incoming messages and converts payload strings to lowercase before sending them onwards.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/first-node.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function(RED) {\n    function LowerCaseNode(config) {\n        RED.nodes.createNode(this,config);\n        var node = this;\n        node.on('input', function(msg) {\n            msg.payload = msg.payload.toLowerCase();\n            node.send(msg);\n        });\n    }\n    RED.nodes.registerType(\"lower-case\",LowerCaseNode);\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Node Constructor in Node-RED JavaScript\nDESCRIPTION: Defines the constructor function for a Node-RED node, initializing shared features and registering the node type.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-js.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction SampleNode(config) {\n    RED.nodes.createNode(this,config);\n    // node-specific code goes here\n\n}\n\nRED.nodes.registerType(\"sample\",SampleNode);\n```\n\n----------------------------------------\n\nTITLE: Handling Node Closure in Node-RED Function\nDESCRIPTION: Registers an event handler for the 'close' event to clean up resources when a node is stopped or redeployed, useful for closing connections or stopping timers.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nnode.on('close', function() {\n    // tidy up any async code here - shutdown connections and so on.\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Message Structure in Node-RED (JSON)\nDESCRIPTION: Shows the basic structure of a Node-RED message object, including the _msgid and payload properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/messages.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"_msgid\": \"12345\",\n    \"payload\": \"...\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Node Status in Node-RED\nDESCRIPTION: Demonstrates how to set the status of a Node-RED node, which is displayed in the flow editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-js.md#2025-04-09_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nthis.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n```\n\n----------------------------------------\n\nTITLE: Converting Fahrenheit to Celsius using JSONata (JSONata)\nDESCRIPTION: Demonstrates using a JSONata expression in a Change node to convert a temperature from Fahrenheit to Celsius and store it in a new message property.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/messages.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"payload\": {\n        \"temperature\": 90,\n        \"temperature_c\": 32.22222\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Node-RED Node Frontend Elements in HTML\nDESCRIPTION: The HTML definition for the lowercase node that includes the node's appearance in the editor, its edit dialog, and help documentation.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/first-node.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/javascript\">\n    RED.nodes.registerType('lower-case',{\n        category: 'function',\n        color: '#a6bbcf',\n        defaults: {\n            name: {value:\"\"}\n        },\n        inputs: 1,\n        outputs: 1,\n        icon: \"file.svg\",\n        label: function() {\n            return this.name||\"lower-case\";\n        }\n    });\n</script>\n\n<script type=\"text/html\" data-template-name=\"lower-case\">\n    <div class=\"form-row\">\n        <label for=\"node-input-name\"><i class=\"fa fa-tag\"></i> Name</label>\n        <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\">\n    </div>\n</script>\n\n<script type=\"text/html\" data-help-name=\"lower-case\">\n    <p>A simple node that converts the message payloads into all lower-case characters</p>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies in Alpine-based Node-RED Container\nDESCRIPTION: Dockerfile that extends the base Node-RED Alpine container to add Python dependencies including numpy, pandas, scikit-learn, and tensorflow. Uses apk package manager for Alpine Linux.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker-custom.md#2025-04-09_snippet_0\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM nodered/node-red:latest\nUSER root\nRUN apk add py3-pip py3-numpy py3-pandas py3-scikit-learn\nRUN pip install tensorflow\nUSER node-red\n```\n\n----------------------------------------\n\nTITLE: Importing Node-RED Flow JSON\nDESCRIPTION: This JSON represents the complete flow created in the tutorial. It includes an Inject node, a Function node for formatting timestamps, and a Debug node. Users can import this JSON into their Node-RED editor to recreate the flow.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/tutorials/first-flow.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[{\"id\":\"58ffae9d.a7005\",\"type\":\"debug\",\"name\":\"\",\"active\":true,\"complete\":false,\"x\":640,\"y\":200,\"wires\":[]},{\"id\":\"17626462.e89d9c\",\"type\":\"inject\",\"name\":\"\",\"topic\":\"\",\"payload\":\"\",\"repeat\":\"\",\"once\":false,\"x\":240,\"y\":200,\"wires\":[[\"2921667d.d6de9a\"]]},{\"id\":\"2921667d.d6de9a\",\"type\":\"function\",\"name\":\"Format timestamp\",\"func\":\"// Create a Date object from the payload\\nvar date = new Date(msg.payload);\\n// Change the payload to be a formatted Date string\\nmsg.payload = date.toString();\\n// Return the message so it can be sent on\\nreturn msg;\",\"outputs\":1,\"x\":440,\"y\":200,\"wires\":[[\"58ffae9d.a7005\"]]}]\n```\n\n----------------------------------------\n\nTITLE: Enabling Node-RED Autostart Service\nDESCRIPTION: Command to enable Node-RED service to automatically start on system boot using systemctl.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/raspberrypi.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl enable nodered.service\n```\n\n----------------------------------------\n\nTITLE: Loading Custom Authentication Module in Node-RED\nDESCRIPTION: Configuration to load the custom authentication module in Node-RED's settings.js file.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nadminAuth: require(\"./user-authentication\")\n```\n\n----------------------------------------\n\nTITLE: Function Node Code Causing Potential Issues in Node-RED 1.0\nDESCRIPTION: This code snippet demonstrates a pattern in a Function node that could cause unexpected behavior in Node-RED 1.0 due to asynchronous message passing. It modifies and sends the same message object twice.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-09-13-cloning-messages.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmsg.topic = \"A\";\nmsg.payload = \"1\";\nnode.send(msg);\n\nmsg.topic = \"B\";\nmsg.payload = \"2\";\nnode.send(msg);\n```\n\n----------------------------------------\n\nTITLE: Implementing postReceive Hook in Node-RED\nDESCRIPTION: Example of implementing a postReceive hook that logs the message payload after it has been received by a node.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/messaging/index.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"postReceive\", (receiveEvent) => {\n    console.log(`Message received: ${receiveEvent.msg.payload}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Modal Notification with Custom Buttons in Node-RED\nDESCRIPTION: Complete example showing a modal notification with custom buttons, fixed display, and warning type.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/notifications/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nlet myNotification = RED.notify(\"This is the message to display\",{\n    modal: true,\n    fixed: true,\n    type: 'warning',\n    buttons: [\n        {\n            text: \"cancel\",\n            click: function(e) {\n                myNotification.close();\n            }\n        },\n        {\n            text: \"okay\",\n            class:\"primary\",\n            click: function(e) {\n                myNotification.close();\n            }\n        }\n    ]\n});\n```\n\n----------------------------------------\n\nTITLE: Setting TreeList Data Using JavaScript\nDESCRIPTION: Shows how to programmatically set data for a TreeList widget using jQuery.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/treeList/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").treeList('data',[{label:\"Colours\"}]);\n```\n\n----------------------------------------\n\nTITLE: Implementing postInstall Hook for Electron Environment in JavaScript\nDESCRIPTION: This snippet shows how to implement a postInstall hook specifically for an Electron environment. It uses child_process to run a rebuild command after the module installation.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/install/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"postInstall\",  (installEvent, done) => {\n    child_process.exec(\"npm run rebuild \" +  installEvent.module,\n        {cwd: installEvent.dir},\n        (err, stdout, stderr) => {\n            done();\n        }\n    );\n});\n```\n\n----------------------------------------\n\nTITLE: Installing PM2 Process Manager\nDESCRIPTION: Command to globally install the PM2 process manager using npm. Requires sudo privileges on Linux/OS X or Administrator access on Windows.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/starting-node-red-on-boot.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm install -g pm2\n```\n\n----------------------------------------\n\nTITLE: Configuring External Modules and Node Package Management in Node-RED\nDESCRIPTION: Comprehensive configuration for controlling how Node-RED handles external npm modules, including auto-installation settings and allow/deny lists for both palette nodes and module dependencies.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/configuration.md#2025-04-09_snippet_5\n\nLANGUAGE: json\nCODE:\n```\nexternalModules: {\n   autoInstall: false,\n   autoInstallRetry: 30,\n   palette: {\n      allowInstall: true,\n      allowUpload: true,\n      allowList: [],\n      denyList: []\n   },\n   modules: {\n      allowInstall: true,\n      allowList: [],\n      denyList: []\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Dynamic Output Management with Random Distribution in Node-RED\nDESCRIPTION: Dynamically handles variable number of outputs by using node.outputCount to randomly distribute incoming messages to available outputs.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Create an array same length as there are outputs\nconst messages = new Array(node.outputCount)\n// Choose random output number to send the message to\nconst chosenOutputIndex = Math.floor(Math.random() * node.outputCount);\n// Send the message only to chosen output\nmessages[chosenOutputIndex] = msg;\n// Return the array containing chosen output\nreturn messages;\n```\n\n----------------------------------------\n\nTITLE: Basic Node-RED package.json Configuration\nDESCRIPTION: Example package.json configuration for a Node-RED node module showing required fields including name, version, keywords and node-red specific configuration.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/packaging.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\"         : \"@myScope/node-red-sample\",\n    \"version\"      : \"0.0.1\",\n    \"description\"  : \"A sample node for node-red\",\n    \"dependencies\": {\n    },\n    \"keywords\": [ \"node-red\" ],\n    \"node-red\"     : {\n        \"nodes\": {\n            \"sample\": \"sample/sample.js\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Synchronous onSend Hook in Node-RED\nDESCRIPTION: Example of implementing a synchronous onSend hook that logs the number of messages being sent. This hook is called when a node uses node.send() to send messages.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/messaging/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"onSend\", (sendEvents) => {\n    console.log(`Sending ${sendEvents.length} messages`);\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Async Children Loading in TreeList\nDESCRIPTION: Demonstrates how to implement asynchronous loading of child nodes using a callback function with jQuery's AJAX request.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/treeList/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nchildren: function(done) {\n    $.getJSON('/some/url', function(result) {\n        done(result);\n    })\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Library Store Plugin Implementation\nDESCRIPTION: Implementation template for a custom Node-RED library store plugin, including required methods for initialization and entry management.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/library/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function(RED) {\n\n    // This must be a unique identifier for the library store type\n    const PLUGIN_TYPE_ID = \"node-red-library-custom-store\";\n\n    class CustomStorePlugin {\n\n        /**\n         * @param {object} config an object containing the configuration for an\n         *                        instance of the store\n         */\n        constructor(config) {\n            // Required properties\n            this.type = PLUGIN_TYPE_ID;\n            this.id = config.id;\n            this.label = config.label;\n        }\n\n        /**\n         * Initialise the store.\n         */\n        async init() {\n        }\n\n        /**\n         * Get an entry from the store\n         * @param {string} type The type of entry, for example, \"flow\"\n         * @param {string} path The path to the library entry\n         * @return if 'path' resolves to a single entry, it returns the contents\n         *         of that entry.\n         *         if 'path' resolves to a 'directory', it returns a listing of\n         *         the contents of the directory\n         *         if 'path' is not valid, it should throw a suitable error\n         */\n        async getEntry(type,path) {\n            throw new Error(\"Not implemented\")\n        }\n\n        /**\n         * Save an entry to the library\n         * @param {string} type The type of entry, for example, \"flow\"\n         * @param {string} path The path to the library entry\n         * @param {object} meta An object of key/value meta data about the entry\n         * @param {string} body The entry contents\n         */\n        async saveEntry(type,path,meta,body) {\n            throw new Error(\"Not implemented\")\n        }\n    }\n\n    // Register the plugin.\n    RED.plugins.registerPlugin(PLUGIN_TYPE_ID, {\n        // This tells Node-RED the plugin is a library source plugin\n        type: \"node-red-library-source\",\n        class: CustomStorePlugin\n    })\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Node Settings in Node-RED\nDESCRIPTION: Shows how to register custom settings for a Node-RED node, making them available in both the runtime and editor environments.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-js.md#2025-04-09_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nRED.nodes.registerType(\"sample\",SampleNode, {\n    settings: {\n        sampleNodeColour: {\n            value: \"red\",\n            exportable: true\n        }\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Building and Running Custom Node-RED Docker Image\nDESCRIPTION: These bash commands show how to build a custom Node-RED Docker image and run it with specific environment variables and volume mounts. It demonstrates setting the credential secret and mapping the local directory to the container.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t your-image-name:your-tag .\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --rm -e \"NODE_RED_CREDENTIAL_SECRET=your_secret_goes_here\" -p 1880:1880 -v `pwd`:/data --name a-container-name your-image-name\n```\n\n----------------------------------------\n\nTITLE: Sending Messages from Node-RED Node\nDESCRIPTION: Shows how to send messages from a Node-RED node, both in response to external events and within an input listener.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-js.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar msg = { payload:\"hi\" }\nthis.send(msg);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nlet node = this;\nthis.on('input', function(msg, send, done) {\n    // For maximum backwards compatibility, check that send exists.\n    // If this node is installed in Node-RED 0.x, it will need to\n    // fallback to using `node.send`\n    send = send || function() { node.send.apply(node,arguments) }\n\n    msg.payload = \"hi\";\n    send(msg);\n\n    if (done) {\n        done();\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Structuring Flow Configuration Object in JSON\nDESCRIPTION: This snippet shows the structure of a flow configuration object that should be sent in the request body. It includes the flow's id, label, and arrays for nodes and configs.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/flow/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"91ad451.f6e52b8\",\n  \"label\": \"Sheet 1\",\n  \"nodes\": [ ],\n  \"configs\": [ ]\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Function Return in Node-RED\nDESCRIPTION: The simplest possible Function node implementation that passes the message through unchanged.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nreturn msg;\n```\n\n----------------------------------------\n\nTITLE: Implementing Item Filtering in EditableList\nDESCRIPTION: This example demonstrates how to implement a filter function for an EditableList. The filter callback determines which items should be visible based on their data.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    filter: function(data) {\n        return data.index%2 === 0\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP Admin Middleware in Node-RED\nDESCRIPTION: Example of defining a custom middleware function for Node-RED admin routes. This function can process requests before they reach their destination.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/configuration.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhttpAdminMiddleware: function(req,res,next) {\n    // Perform any processing on the request.\n    // Be sure to call next() if the request should be passed on\n}\n```\n\n----------------------------------------\n\nTITLE: Preventing Message Cloning in Node-RED Functions\nDESCRIPTION: Shows how to prevent the runtime from cloning a message when using node.send(), which can improve performance or handle non-cloneable message properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nnode.send(msg,false);\n```\n\n----------------------------------------\n\nTITLE: Implementing Item-Specific Resize in EditableList\nDESCRIPTION: This snippet demonstrates how to implement an item-specific resize callback for EditableList. The function is called for each item when the list size changes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    resizeItem: function(row,index) {\n        var originalData = $(row).data('data');\n        console.log(\"Resize the row for item:\", originalData)\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Asynchronous HTTPS Certificate Loading\nDESCRIPTION: Function-based HTTPS configuration that asynchronously loads SSL certificates. Available since Node-RED 1.1.0.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhttps: function() {\n    return new Promise((resolve, reject) => {\n        var key, cert;\n        // Do some work to obtain valid certificates\n        // ...\n        resolve({\n            key: key\n            cert: cert\n        })\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: Node-RED Docker Compose Configuration\nDESCRIPTION: Docker Compose file for running Node-RED. Sets up a service with a custom timezone, port mapping, network, and volume for data persistence.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3.7\"\n\nservices:\n  node-red:\n    image: nodered/node-red:latest\n    environment:\n      - TZ=Europe/Amsterdam\n    ports:\n      - \"1880:1880\"\n    networks:\n      - node-red-net\n    volumes:\n      - node-red-data:/data\n\nvolumes:\n  node-red-data:\n\nnetworks:\n  node-red-net:\n```\n\n----------------------------------------\n\nTITLE: Handling Node Closure in Node-RED\nDESCRIPTION: Demonstrates how to register a listener for the 'close' event in a Node-RED node, allowing for cleanup operations when a node is removed or restarted.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-js.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nthis.on('close', function() {\n    // tidy up any state\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nthis.on('close', function(done) {\n    doSomethingWithACallback(function() {\n        done();\n    });\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nthis.on('close', function(removed, done) {\n    if (removed) {\n        // This node has been disabled/deleted\n    } else {\n        // This node is being restarted\n    }\n    done();\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Node Credentials in Runtime JavaScript\nDESCRIPTION: This snippet demonstrates how to access node credentials within the runtime environment of Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/credentials.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nfunction MyNode(config) {\n    RED.nodes.createNode(this,config);\n    var username = this.credentials.username;\n    var password = this.credentials.password;\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Parent Flow Context from Subflow in Node-RED\nDESCRIPTION: Example code showing how to access the context of a parent flow from within a subflow by prepending '$parent.' to the context key. This feature is available from Node-RED 0.20 onwards.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/context.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar colour = flow.get(\"$parent.colour\");\n```\n\n----------------------------------------\n\nTITLE: Clearing All Items from EditableList in JavaScript\nDESCRIPTION: Shows how to remove all items from an EditableList without triggering any callbacks.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList('empty');\n```\n\n----------------------------------------\n\nTITLE: Setting Node Status in a Function Node\nDESCRIPTION: Demonstrates how to update the visual status of a Function node with different colors, shapes, and text.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nnode.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\nnode.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\nnode.status({text:\"Just text status\"});\nnode.status({});   // to clear the status\n```\n\n----------------------------------------\n\nTITLE: Cancelling Sort Operation on EditableList in JavaScript\nDESCRIPTION: Demonstrates how to cancel an ongoing sort operation on an EditableList.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList('cancel');\n```\n\n----------------------------------------\n\nTITLE: Maintaining a Counter in Node Context\nDESCRIPTION: Example that initializes, increments, and stores a counter in the node's local context, then adds it to the outgoing message.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n// make it part of the outgoing msg object\nmsg.count = count;\nreturn msg;\n```\n\n----------------------------------------\n\nTITLE: Customizing Node-RED Docker Image with Local Resources\nDESCRIPTION: This Dockerfile builds upon the base Node-RED Docker image and incorporates local project files. It copies package.json, installs dependencies, and adds custom settings and flow files to the image.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_7\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM nodered/node-red\n\n# Copy package.json to the WORKDIR so npm builds all\n# of your added nodes modules for Node-RED\nWORKDIR /data\nCOPY package.json /data\nRUN npm install --unsafe-perm --no-update-notifier --no-fund --only=production\nWORKDIR /usr/src/node-red\n\n# Copy _your_ Node-RED project files into place\n# NOTE: This will only work if you DO NOT later mount /data as an external volume.\n#       If you need to use an external volume for persistence then\n#       copy your settings and flows files to that volume instead.\nCOPY settings.js /data/settings.js\nCOPY flows_cred.json /data/flows_cred.json\nCOPY flows.json /data/flows.json\n```\n\n----------------------------------------\n\nTITLE: Configuring Console Logging in Node-RED\nDESCRIPTION: This snippet shows how to configure the console logging output in Node-RED's settings file. It demonstrates setting the log level, enabling metrics, and enabling audit logging.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/logging.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Configure the logging output\nlogging: {\n    // Console logging\n    console: {\n        level: \"info\",\n        metrics: false,\n        audit: false\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Tab to Node-RED Sidebar\nDESCRIPTION: Demonstrates how to create and add a custom tab to the Node-RED sidebar. Shows creation of content container, optional toolbar header, action registration, and tab configuration with various properties including id, label, name, and icon.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/sidebar/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// The sidebar content\nconst content = $(\"<div>\").css({\"position\":\"relative\",\"height\":\"100%\"});\n\n// (optional) A toolbar header for the sidebar\nconst header = $(\"<div>\", {class:\"red-ui-sidebar-header\"}).appendTo(content);\n\n\nRED.actions.add(\"my-custom-tab:show-custom-tab\",function() {\n    RED.sidebar.show(\"my-custom-tab\");\n});\n\nRED.sidebar.addTab({\n    id: \"my-custom-tab\",\n    label: \"custom\",\n    name: \"My Custom Tab\",\n    iconClass: \"fa fa-database\",\n    content: content,\n    action: \"my-custom-tab:show-custom-tab\"\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Windows Build Tools with Python\nDESCRIPTION: This command installs the windows-build-tools package globally and adds Python to the system PATH.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/windows.md#2025-04-09_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\nnpm install --global --production --add-python-to-path windows-build-tools\n```\n\n----------------------------------------\n\nTITLE: Removing Specific Item from EditableList in JavaScript\nDESCRIPTION: Shows how to remove a specific item from the EditableList by providing the item's associated data object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList('removeItem',{fruit:\"banana\"});\n```\n\n----------------------------------------\n\nTITLE: Sorting Items in EditableList with JavaScript\nDESCRIPTION: Demonstrates how to sort items in an EditableList using a custom sort function. The example sorts items based on their index property.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList('sort', function(dataA, dataB) {\n    return dataA.index-dataB.index;\n});\n```\n\n----------------------------------------\n\nTITLE: Dynamic Node Label Configuration\nDESCRIPTION: Example of a function that dynamically sets the node label based on the name property, with a fallback default value.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nlabel: function() {\n    return this.name||\"lower-case\";\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing onComplete Hook in Node-RED\nDESCRIPTION: Example of implementing an onComplete hook that logs any errors that occurred during message processing.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/messaging/index.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"onComplete\", (completeEvent) => {\n    if (completeEvent.error) {\n        console.log(`Message completed with error: ${completeEvent.error}`);\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Node-RED Docker Container with Environment Variables\nDESCRIPTION: This bash command demonstrates how to run a Node-RED Docker container with custom environment variables. It shows setting the flows file and Node.js runtime arguments.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v node_red_data:/data -e FLOWS=my_flows.json nodered/node-red\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v node_red_data:/data -e NODE_OPTIONS=\"--max_old_space_size=128\" nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Evaluating TypedInput Values at Runtime in Node-RED\nDESCRIPTION: Demonstrates how to use the RED.util.evaluateNodeProperty utility function to convert string values from TypedInput controls to their appropriate types at runtime. The function handles different value types with varying parameters depending on synchronous or asynchronous evaluation needs.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/typedInput/index.md#2025-04-09_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nRED.util.evaluateNodeProperty(value, type, node, msg, callback)\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = RED.util.evaluateNodeProperty(value, type, node)\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = RED.util.evaluateNodeProperty(value, type, node, msg)\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRED.util.evaluateNodeProperty(value, type, node, msg, (err, result) => {\n    if (err) {\n        // Something went wrong accessing context\n    } else {\n        // Do something with 'result'\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Logging Module in Node-RED\nDESCRIPTION: This code snippet demonstrates how to implement a custom logging module in Node-RED. It shows the configuration structure and how to define a custom handler function that processes log messages.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/logging.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Configure the logging output\nlogging: {\n    // Console logging\n    console: {\n        level: \"info\",\n        metrics: false,\n        audit: false\n    },\n    // Custom logger\n    myCustomLogger: {\n        level: 'debug',\n        metrics: true,\n        handler: function(settings) {\n            // Called when the logger is initialised\n\n            // Return the logging function\n            return function(msg) {\n                console.log(msg.timestamp, msg.event);\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Built-in Types Example\nDESCRIPTION: Shows how to initialize TypedInput with basic data types (string, number, boolean).\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/typedInput/index.md#2025-04-09_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-example1\">\n```\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"#node-input-example1\").typedInput({\n    type:'str',\n    types:['str','num','bool']\n})\n```\n\n----------------------------------------\n\nTITLE: Multiple Context Store Configuration\nDESCRIPTION: Example showing how to configure multiple context stores, including both built-in memory store and a custom store module.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/context/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ncontextStorage: {\n   default: {\n       module:\"memory\",\n   },\n   custom: {\n       module:require(\"my-custom-store\")\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing AutoComplete with Synchronous Search in JavaScript\nDESCRIPTION: Example of implementing autoComplete with a synchronous search function that filters animal names based on input value and returns matching results immediately.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/autoComplete/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// View the page source to see the full list of animals used in\n// this example\nlet animals = [\"Aardvark\",\"Alligator\",\"Alpaca\",\"Anaconda\",\"Ant\",\"Antelope\",\n               \"Carp\",\"Cat\",\"Caterpillar\",\"Catfish\",\"Cheetah\",\"Chicken\",\n               \"Deer\",\"Dinosaur\",\"Dog\",\"Dolphin\",\"Donkey\",\"Dove\" ];\n\n$(\"#node-input-example1\").autoComplete({\n    search: function(val) {\n        var matches = [];\n        animals.forEach(v => {\n            var i = v.toLowerCase().indexOf(val.toLowerCase());\n            if (i > -1) {\n                matches.push({\n                    value: v,\n                    label: v,\n                    i: i\n                })\n            }\n        });\n        matches.sort(function(A,B){return A.i-B.i})\n        return matches\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Triggering Change Event on SearchBox in JavaScript\nDESCRIPTION: Demonstrates how to programmatically trigger the change event on a SearchBox widget. This method can be used to force the SearchBox to update its state and fire associated events.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/searchBox/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").searchBox('change');\n```\n\n----------------------------------------\n\nTITLE: Registering Node Type with Credentials in JavaScript\nDESCRIPTION: This code shows how to register a node type with Node-RED, including the credential definitions for username and password.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/credentials.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nRED.nodes.registerType(\"my-node\",MyNode,{\n    credentials: {\n        username: {type:\"text\"},\n        password: {type:\"password\"}\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Setting up Node-RED Autostart with PM2 on Azure\nDESCRIPTION: Commands to configure PM2 for automatically starting Node-RED when the VM boots. This installs PM2 globally, adds Node-RED to PM2's management, saves the configuration, and sets up PM2 to start on system boot.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/azure.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm install -g --unsafe-perm pm2\npm2 start `which node-red` -- -v\npm2 save\npm2 startup\n```\n\n----------------------------------------\n\nTITLE: Configuring a Custom Storage Module in Node-RED\nDESCRIPTION: This snippet shows how to configure a custom storage module in the Node-RED settings.js file by setting the storageModule property to require a custom plugin module.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/storage/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nstorageModule: require(\"my-node-red-storage-plugin\")\n```\n\n----------------------------------------\n\nTITLE: Implementing preInstall Hook in JavaScript\nDESCRIPTION: This code snippet demonstrates how to add a preInstall hook using Node-RED's API. It logs a message before installing a module, showcasing how to access the InstallEvent object properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/install/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"preInstall\", (installEvent) => {\n    console.log(`About to install ${installEvent.module}@${installEvent.version}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring externalModules in Node-RED Settings (JSON)\nDESCRIPTION: Example of how to configure the new externalModules setting in Node-RED's settings file. This setting governs what can be installed and loaded by Node-RED, replacing several deprecated settings.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2021-04-08-version-1-3-released.md#2025-04-09_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"externalModules\": {\n    \"palette\": {\n      \"allowInstall\": true,\n      \"allowUpload\": true\n    },\n    \"autoInstall\": true,\n    \"autoInstallRetry\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Information Notification in Node-RED\nDESCRIPTION: Simple example showing how to display a basic information notification.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/notifications/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nRED.notify(\"Hello World\");\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Message Sending in Node-RED Function\nDESCRIPTION: Demonstrates handling asynchronous operations in a Function node by using node.send() instead of returning a message directly.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\ndoSomeAsyncWork(msg, function(result) {\n    msg.payload = result;\n    node.send(msg);\n});\nreturn;\n```\n\n----------------------------------------\n\nTITLE: Loading Additional Modules via functionGlobalContext Configuration\nDESCRIPTION: Example settings.js configuration to make the 'os' module available to all function nodes through global context.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nfunctionGlobalContext: {\n    osModule:require('os')\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Tab from Node-RED Sidebar\nDESCRIPTION: Shows how to remove a tab from the sidebar using its ID. This is particularly important when cleaning up tabs added by nodes during their onpaletteremove function.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/sidebar/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nRED.sidebar.removeTab(\"my-custom-tab\");\n```\n\n----------------------------------------\n\nTITLE: Conditional Message Routing in Node-RED Function\nDESCRIPTION: Routes messages to different outputs based on the topic property. Messages with topic 'banana' go to the second output, everything else to the first output.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nif (msg.topic === \"banana\") {\n   return [ null, msg ];\n} else {\n   return [ msg, null ];\n}\n```\n\n----------------------------------------\n\nTITLE: Building Node-RED from Source\nDESCRIPTION: Builds the Node-RED application from source code using Grunt.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/development.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngrunt build\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Context Access Examples\nDESCRIPTION: Demonstrates the callback-based methods for accessing context asynchronously, including getting and setting single and multiple values.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n// Get single value\nflow.get(\"count\", function(err, myCount) { ... });\n\n// Get multiple values\nflow.get([\"count\", \"colour\"], function(err, count, colour) { ... })\n\n// Set single value\nflow.set(\"count\", 123, function(err) { ... })\n\n// Set multiple values\nflow.set([\"count\", \"colour\"], [123, \"red\"], function(err) { ... })\n```\n\n----------------------------------------\n\nTITLE: Setting npm global prefix in PowerShell\nDESCRIPTION: These commands create a new directory for global npm packages and set it as the npm prefix.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/windows.md#2025-04-09_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nmkdir $env:ALLUSERSPROFILE\\npmglobal\nnpm config set prefix $env:ALLUSERSPROFILE\\npmglobal\n```\n\n----------------------------------------\n\nTITLE: Using a Configuration Node in Node-RED\nDESCRIPTION: JavaScript code demonstrating how to access and use a configuration node instance at runtime. The code retrieves the referenced config node using RED.nodes.getNode() and accesses its properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/config-nodes.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function(RED) {\n    function MyNode(config) {\n        RED.nodes.createNode(this,config);\n\n        // Retrieve the config node\n        this.server = RED.nodes.getNode(config.server);\n\n        if (this.server) {\n            // Do something with:\n            //  this.server.host\n            //  this.server.port\n        } else {\n            // No config node configured\n        }\n    }\n    RED.nodes.registerType(\"my-node\",MyNode);\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Tab Existence in Node-RED Sidebar\nDESCRIPTION: Shows how to check if a specific tab exists in the sidebar, returning a boolean value.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/sidebar/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nlet debugExists = RED.sidebar.containsTab('my-custom-tab');\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Sort Function in EditableList\nDESCRIPTION: This example demonstrates how to implement a custom sort function for an EditableList. The sort callback compares two items to determine their order in the list.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    sort: function(dataA, dataB) {\n        return dataA.index-dataB.index;\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Structuring Message Payload as JSON Object in Node-RED\nDESCRIPTION: This example shows how to structure a message payload as a JSON object containing multiple properties. While this approach keeps related data together, it may require additional processing in nodes that expect to work directly with msg.payload.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/developing-flows/message-design.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"payload\": {\n        \"temperature\": 123,\n        \"humidity\": 50,\n        \"pressure\": 900\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Node-RED on Raspberry Pi 3B\nDESCRIPTION: Command to run Node-RED on a Raspberry Pi 3B using the arm32v7 architecture. Docker automatically selects the appropriate image tag.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v node_red_data:/data --name mynodered nodered/node-red:latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Function Node External Modules in Node-RED Settings\nDESCRIPTION: Enables the use of npm modules in Function nodes by setting functionExternalModules to true in the Node-RED settings file.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2021-04-08-version-1-3-released.md#2025-04-09_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"functionExternalModules\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Configuration Node HTML in Node-RED\nDESCRIPTION: HTML and JavaScript code for defining a configuration node that stores remote server details. The node is registered with the category 'config' and includes form fields for host and port settings.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/config-nodes.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/javascript\">\n    RED.nodes.registerType('remote-server',{\n        category: 'config',\n        defaults: {\n            host: {value:\"localhost\",required:true},\n            port: {value:1234,required:true,validate:RED.validators.number()},\n        },\n        label: function() {\n            return this.host+\":\"+this.port;\n        }\n    });\n</script>\n\n<script type=\"text/html\" data-template-name=\"remote-server\">\n    <div class=\"form-row\">\n        <label for=\"node-config-input-host\"><i class=\"fa fa-bookmark\"></i> Host</label>\n        <input type=\"text\" id=\"node-config-input-host\">\n    </div>\n    <div class=\"form-row\">\n        <label for=\"node-config-input-port\"><i class=\"fa fa-bookmark\"></i> Port</label>\n        <input type=\"text\" id=\"node-config-input-port\">\n    </div>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Copying Payload to Custom Property in Node-RED\nDESCRIPTION: This snippet demonstrates using a Change node to copy the payload to a custom msg.id property. This technique is useful for preserving original data that might be overwritten by subsequent nodes in the flow.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/developing-flows/message-design.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nmsg.id = msg.payload;\n```\n\n----------------------------------------\n\nTITLE: Registering a New Action in Node-RED\nDESCRIPTION: Demonstrates how to add a new action using RED.actions.add(). This example registers an action to show a custom tab in the sidebar.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/actions/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nRED.actions.add(\"my-custom-tab:show-custom-tab\",function() {\n    RED.sidebar.show(\"my-custom-tab\");\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring TypedInput Types\nDESCRIPTION: Demonstrates setting available types for the TypedInput widget to message and string types only.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/typedInput/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").typedInput({\n    types: [\"msg\",\"str\"]\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Node Credentials in JavaScript\nDESCRIPTION: This snippet shows how to add a credentials entry to a node's definition, specifying username and password fields.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/credentials.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncredentials: {\n   username: {type:\"text\"},\n   password: {type:\"password\"}\n},\n```\n\n----------------------------------------\n\nTITLE: Implementing onReceive Hook in Node-RED\nDESCRIPTION: Example of implementing an onReceive hook that logs when a message is about to be received by a node.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/messaging/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"onReceive\", (receiveEvent) => {\n    console.log(`Message about to be passed to node: ${receiveEvent.destination.id}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Registering a Node Type in Node-RED\nDESCRIPTION: Basic structure for registering a Node-RED node with the editor using RED.nodes.registerType function, which requires the node type identifier and its definition object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-html.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/javascript\">\n    RED.nodes.registerType('node-type',{\n        // node definition\n    });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Running Node-RED on Raspberry Pi Zero\nDESCRIPTION: Command to run Node-RED on a Raspberry Pi Zero using the arm32v6 architecture. The full image tag must be specified due to a Docker bug.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v node_red_data:/data --name mynodered nodered/node-red:1.2.0-10-arm32v6\n```\n\n----------------------------------------\n\nTITLE: Configuring Monaco Editor in Node-RED Settings\nDESCRIPTION: Configuration snippet to enable the Monaco text editor in Node-RED by modifying the editorTheme settings.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2021-07-20-version-2-0-released.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\neditorTheme: {\n    codeEditor: {\n        lib: \"monaco\"\n    }\n},\n```\n\n----------------------------------------\n\nTITLE: Adding Credential Fields to Node Edit Template in HTML\nDESCRIPTION: This HTML snippet demonstrates how to add input fields for username and password credentials in the node's edit template.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/credentials.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-row\">\n    <label for=\"node-input-username\"><i class=\"fa fa-tag\"></i> Username</label>\n    <input type=\"text\" id=\"node-input-username\">\n</div>\n<div class=\"form-row\">\n    <label for=\"node-input-password\"><i class=\"fa fa-tag\"></i> Password</label>\n    <input type=\"password\" id=\"node-input-password\">\n</div>\n```\n\n----------------------------------------\n\nTITLE: New Node-RED 1.0 Input Event Handler Signature\nDESCRIPTION: The new signature for input event handlers in Node-RED 1.0, where the callback receives the message object, a send function, and a done function for better message handling tracking.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-09-20-node-done.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nthis.on('input', function(msg, send, done) {\n\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Asynchronous preRoute Hook in Node-RED\nDESCRIPTION: Example of implementing an asynchronous preRoute hook that handles message cloning and performs async operations. This hook is called before a message is routed to its destination.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/messaging/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"preRoute\", (sendEvent, done) => {\n    // As this hook needs to do async work, clone the message if needed\n    if (sendEvent.cloneMessage) {\n        sendEvent.msg = RED.util.cloneMessage(sendEvent.msg);\n        sendEvent.cloneMessage = false;\n    }\n    someAsyncAPI(sendEvent).then(() => {\n        done()\n    }).catch(err => {\n        // An error means stop processing this message\n        done(err);\n    })\n});\n```\n\n----------------------------------------\n\nTITLE: Handling TreeList Selection Events\nDESCRIPTION: Example of handling item selection events in TreeList, including checkbox state checking.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/treeList/index.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").on('treelistselect', function(event, item) {\n    if (item.selected) {\n        // The checkbox is checked\n    } else {\n        // The checkbox is not checked\n    }\n} );\n```\n\n----------------------------------------\n\nTITLE: Removing Hook Handlers in Node-RED\nDESCRIPTION: Shows how to remove all hooks with a specific label using RED.hooks.remove(). This example removes all hooks labeled 'my-hooks'.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.remove(\"*.my-hooks\");\n```\n\n----------------------------------------\n\nTITLE: Implementing preDeliver Hook in Node-RED\nDESCRIPTION: Example of implementing a preDeliver hook that logs the destination node ID before message delivery.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/messaging/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"preDeliver\", (sendEvent) => {\n    console.log(`About to deliver to ${sendEvent.destination.id}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Node-RED Application Package for AWS Elastic Beanstalk\nDESCRIPTION: This package.json file defines the dependencies and scripts for running a Node-RED application on AWS Elastic Beanstalk. It includes Node-RED, AWS SDK, and S3 storage module.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/aws.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"name\": \"demoapp\",\n    \"version\": \"1.0.0\",\n    \"description\": \"node-red demo app\",\n    \"main\": \"\",\n    \"scripts\": {\n        \"start\": \"./node_modules/.bin/node-red -s ./settings.js\"\n    },\n    \"engines\": {\n        \"node\": \"10.x\"\n    },\n    \"dependencies\": {\n        \"node-red\": \"1.1.x\",\n        \"aws-sdk\": \"2.4.x\",\n        \"node-red-contrib-storage-s3\": \"0.0.x\",\n        \"when\": \"3.7.x\"\n    },\n    \"author\": \"\",\n    \"license\": \"ISC\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running Node-RED Docker with User Permissions for Troubleshooting\nDESCRIPTION: Command to run a Node-RED Docker container with specific user and group permissions to resolve permission denied errors when accessing files or host devices.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v node_red_data:/data --name mynodered -u node-red:dialout nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables in Node-RED Function Node\nDESCRIPTION: This code snippet demonstrates how to access predefined environment variables within a Function node in Node-RED. It retrieves the node name and flow name to construct a dynamic message payload that identifies the function and flow that processed the message.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2022-01-27-version-2-2-released.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst functionName = env.get(\"NR_NODE_NAME\")\nconst flowName = env.get(\"NR_FLOW_NAME\")\nmsg.payload = `I was sent by Function '${functionName}', on flow '${flowName}'`\nreturn msg\n```\n\n----------------------------------------\n\nTITLE: Credential Authentication Response\nDESCRIPTION: Response returned for credential-based authentication, specifying required username and password prompt fields for token exchange.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/auth/login/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"credentials\",\n  \"prompts\": [\n    {\n      \"id\": \"username\",\n      \"type\": \"text\",\n      \"label\": \"Username\"\n    },\n    {\n      \"id\": \"password\",\n      \"type\": \"password\",\n      \"label\": \"Password\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Package.json with Dependencies\nDESCRIPTION: Extended package.json configuration showing how to declare both npm and Node-RED specific dependencies.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/subflow-modules.md#2025-04-09_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"node-red-example-subflow\",\n    ...\n    \"node-red\": {\n        \"nodes\": {\n            \"example-node\": \"example.js\"\n        },\n        \"dependencies\": [\n            \"node-red-node-random\"\n        ]\n    },\n    \"dependencies\": {\n        \"node-red-node-random\": \"1.2.3\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing TypedInput with Default Type\nDESCRIPTION: Example showing how to initialize a TypedInput widget with a default type setting of 'msg'.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/typedInput/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").typedInput({\n    default: \"msg\"\n});\n```\n\n----------------------------------------\n\nTITLE: SendEvent Object Structure in Node-RED\nDESCRIPTION: JSON structure definition for the SendEvent object used in messaging hooks.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/messaging/index.md#2025-04-09_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"msg\": \"<message object>\",\n    \"source\": {\n        \"id\": \"<node-id>\",\n        \"node\": \"<node-object>\",\n        \"port\": \"<index of port being sent on>\"\n    },\n    \"destination\": {\n        \"id\": \"<node-id>\",\n        \"node\": undefined\n    },\n    \"cloneMessage\": \"true|false\"\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing TreeList Data Structure in JavaScript\nDESCRIPTION: Example of the basic data structure used to initialize a TreeList widget. Shows how to define parent nodes with children, icons, and labels.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/treeList/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n[\n    {\n        label: 'Local',\n        icon: 'fa fa-rocket',\n        children: [\n            { label: \"child 1\"},\n            { label: \"child 2\"}\n        ]\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Advanced LED Control Flow with Johnny-Five\nDESCRIPTION: A more sophisticated Node-RED flow that demonstrates control of an LED with start/stop capability. It uses Johnny-Five and maintains the LED instance in the function context to avoid reinstantiation.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/interacting-with-arduino.md#2025-04-09_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[{\"id\":\"62f58834.9d0a78\",\"type\":\"inject\",\"name\":\"\",\"topic\":\"\",\"payload\":\"1\",\"payloadType\":\"string\",\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"x\":226,\"y\":326,\"z\":\"359a4b52.ca65b4\",\"wires\":[[\"ae84ad08.517b5\"]]},{\"id\":\"ae84ad08.517b5\",\"type\":\"function\",\"name\":\"1 = start flash, 0 = stop\",\"func\":\"var five = context.global.jfive;\\ncontext.led = context.led || new five.Led(13);\\ncontext.switch = context.switch || 0;\\ncontext.switch = msg.payload;\\nconsole.log(typeof(context.switch));\\nif (context.switch == 1) {\\n    context.led.blink(500);\\n}\\nif (context.switch == 0) {\\n    context.led.stop().off();\\n}\\nreturn msg;\",\"outputs\":1,\"noerr\":0,\"x\":447,\"y\":349,\"z\":\"359a4b52.ca65b4\",\"wires\":[[\"df638a80.209c78\"]]},{\"id\":\"df638a80.209c78\",\"type\":\"debug\",\"name\":\"\",\"active\":true,\"console\":\"false\",\"complete\":\"false\",\"x\":645,\"y\":349,\"z\":\"359a4b52.ca65b4\",\"wires\":[]},{\"id\":\"d79bc51d.286438\",\"type\":\"inject\",\"name\":\"\",\"topic\":\"\",\"payload\":\"0\",\"payloadType\":\"string\",\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"x\":224.4000244140625,\"y\":364.60003662109375,\"z\":\"359a4b52.ca65b4\",\"wires\":[[\"ae84ad08.517b5\"]]}]\n```\n\n----------------------------------------\n\nTITLE: Installing Windows Build Tools\nDESCRIPTION: This command installs the windows-build-tools package globally, which is necessary for compiling some Node.js modules on Windows.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/windows.md#2025-04-09_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nnpm install --global --production windows-build-tools\n```\n\n----------------------------------------\n\nTITLE: Installing node-red-admin CLI Tool\nDESCRIPTION: Command to install the node-red-admin tool globally using npm. The --unsafe-perm flag is required for proper installation.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/node-red-admin.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g --unsafe-perm node-red-admin\n```\n\n----------------------------------------\n\nTITLE: Updating Node-RED Docker Container\nDESCRIPTION: Series of commands to update the Node-RED container while preserving user data stored in a named volume.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull nodered/node-red\ndocker stop mynodered\ndocker rm mynodered\ndocker run -it -p 1880:1880 -v node_red_data:/data --name mynodered nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Using Access Token - cURL\nDESCRIPTION: cURL command demonstrating how to use the obtained access token in the Authorization header for subsequent API calls.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/oauth.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Authorization: Bearer A_SECRET_TOKEN\" http://localhost:1880/settings\n```\n\n----------------------------------------\n\nTITLE: Example JSON Response for GET /nodes/:module in Node-RED\nDESCRIPTION: This JSON snippet demonstrates the structure of a successful response when retrieving a node module's information. It includes the module name, version, and details about the nodes it contains.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/nodes/module/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"node-red-node-suncalc\",\n  \"version\": \"0.0.6\",\n  \"nodes\": [\n    {\n      \"id\": \"node-red-node-suncalc/suncalc\",\n      \"name\": \"suncalc\",\n      \"types\": [\n        \"sunrise\"\n      ],\n      \"enabled\": true,\n      \"module\": \"node-red-node-suncalc\",\n      \"version\": \"0.0.6\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Registering an Event Handler in Node-RED Editor\nDESCRIPTION: Demonstrates how to register a handler function for the 'nodes:add' event, which is triggered when a node is added to the workspace. The example shows the basic pattern for subscribing to editor events.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/events/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nRED.events.on(\"nodes:add\", function(node) {\n    console.log(\"A node has been added to the workspace!\")\n})\n```\n\n----------------------------------------\n\nTITLE: Mermaid Theme Configuration\nDESCRIPTION: Configuration for setting Mermaid diagram theme in Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/themes/index.md#2025-04-09_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nRED.plugins.registerPlugin(\"my-custom-theme\", {\n   type: \"node-red-theme\",\n   css: \"style.css\",\n   mermaid: {\n     theme: \"dark\" //Mermaid theme name\n   }\n })\n```\n\n----------------------------------------\n\nTITLE: Retrieving Installed Node Sets in JSON Format\nDESCRIPTION: Example response when requesting the list of installed nodes with an Accept header of application/json. The response includes node information such as ID, name, types, enabled status, module, and version.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/nodes/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"node-red/sentiment\",\n    \"name\": \"sentiment\",\n    \"types\": [\n      \"sentiment\"\n    ],\n    \"enabled\": true,\n    \"module\": \"node-red\"\n    \"version\": \"0.10.6\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Monaco Editor Theme Configuration\nDESCRIPTION: Configuration for customizing Monaco editor appearance with built-in theme.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/themes/index.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nRED.plugins.registerPlugin(\"my-custom-theme\", {\n   type: \"node-red-theme\",\n   css: \"style.css\",\n   monacoOptions: {\n     theme: \"vs-dark\", // Monaco theme name\n     fontSize: 14,\n     fontLigatures: true,\n     fontFamily: \"Cascadia Code, Fira Code, Consolas, 'Courier New', monospace\",\n     minimap: { enabled: false }\n   }\n })\n```\n\n----------------------------------------\n\nTITLE: Adding Machine Learning Dependencies to Debian-based Container\nDESCRIPTION: Dockerfile that extends the Debian-based Node-RED container to add Python machine learning libraries including numpy, pandas, scikit-learn, and tensorflow.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker-custom.md#2025-04-09_snippet_3\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM testing:node-red-build\nUSER root\nRUN apt-get install -y python3-pip python3-numpy python3-pandas \nRUN pip install scikit-learn tensorflow\nUSER node-red\n```\n\n----------------------------------------\n\nTITLE: Configuring Flow File Formatting in Node-RED Settings\nDESCRIPTION: Example of enabling pretty formatting for the Node-RED flow file by uncommenting the flowFilePretty option in settings.js\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/settings-file.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n//flowFilePretty: true,\n```\n\n----------------------------------------\n\nTITLE: Configuring Node-RED Settings for AWS S3 Storage\nDESCRIPTION: This JavaScript snippet shows the additional configuration required in the Node-RED settings.js file to enable AWS S3 storage for flows and credentials.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/aws.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n     awsRegion: 'eu-west-1',\n     awsS3Appname: 'demoapp',\n     storageModule: require('node-red-contrib-storage-s3'),\n```\n\n----------------------------------------\n\nTITLE: Obtaining Access Token - cURL\nDESCRIPTION: cURL command to obtain an access token by sending a POST request with client credentials to the /auth/token endpoint.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/oauth.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl http://localhost:1880/auth/token --data 'client_id=node-red-admin&grant_type=password&scope=*&username=admin&password=password'\n```\n\n----------------------------------------\n\nTITLE: Parsing Response Body for Node Set Status in Node-RED\nDESCRIPTION: JSON structure returned upon successful modification of a node set's status. It includes the set's ID, name, types, enabled status, and associated module name.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/put/nodes/module/set/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"node-red-node-suncalc/suncalc\",\n  \"name\": \"suncalc\",\n  \"types\": [\n    \"sunrise\"\n  ],\n  \"enabled\": false,\n  \"module\": \"node-red-node-suncalc\"\n}\n```\n\n----------------------------------------\n\nTITLE: Switching to the Development Branch\nDESCRIPTION: Changes to the development branch ('dev') of Node-RED, which contains the latest development code rather than the stable version.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/development.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout dev\n```\n\n----------------------------------------\n\nTITLE: Modifying Base Debian Dockerfile with Dependencies\nDESCRIPTION: Snippet showing how to modify the base Debian Dockerfile to include machine learning dependencies during initial container build.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker-custom.md#2025-04-09_snippet_4\n\nLANGUAGE: dockerfile\nCODE:\n```\nCOPY --from=build /usr/src/node-red/prod_node_modules ./node_modules\n\n# Chown, install devtools & Clean up\nRUN chown -R node-red:root /usr/src/node-red && \\\n    apt-get update && apt-get install -y build-essential python-dev python3 \\ \n    python3-pip python3-numpy python3-pandas && \\\n    pip install scikit-learn tensorflow && \\\n    rm -r /tmp/*\n\nUSER node-red\n```\n\n----------------------------------------\n\nTITLE: Setting Flows with Encrypted Node Credentials\nDESCRIPTION: Example showing how to include encrypted credentials with the flow. The credentials are encrypted and provided in a single property under the credentials object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/flows/index.md#2025-04-09_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"rev\": \"abc-123\",\n    \"flows\": [\n      {\n        \"type\": \"tab\",\n        \"id\": \"396c2376.c693dc\",\n        \"label\": \"Sheet 1\"\n      }\n    ],\n    \"credentials\": {\n        \"$\": \"beea417990012379ca6d4116bd1fda5bOWbwy7UnQvccxAEH1V1pSEETTfSNerYGvP4Aai6RT/DNpnjCCP/fdzildzlJhFjYcRKdO1Q=\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Debian-based Node-RED Container\nDESCRIPTION: Shell commands to clone the Node-RED Docker repository and build a Debian-based container using the provided script.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker-custom.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/node-red/node-red-docker.git\n$ cd node-red-docker/docker-custom\n$ ./docker-debian.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Local Filesystem Context Store in Node-RED\nDESCRIPTION: This snippet demonstrates how to configure the Local Filesystem Context Store in Node-RED. It shows the basic structure of the configuration object, which includes the module name and a config object for additional options.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/context/store/localfilesystem.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncontextStorage: {\n   default: {\n       module:\"localfilesystem\",\n       config: {\n           // see below\n       }\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables in JSONata Expressions\nDESCRIPTION: Shows how to access environment variables in JSONata expressions, such as in the Change node, using the $env function.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/environment-variables.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$env('ENV_VAR')\n```\n\n----------------------------------------\n\nTITLE: Setting Flows with Inline Node Credentials\nDESCRIPTION: Example showing how to include credentials directly within individual flow nodes. This method embeds the credentials property within the specific node that requires authentication.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/flows/index.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"rev\": \"abc-123\",\n    \"flows\": [\n      {\n        \"type\": \"tab\",\n        \"id\": \"396c2376.c693dc\",\n        \"label\": \"Sheet 1\",\n        \"credentials\": {\n            \"user\": \"my-username\",\n            \"pass\": \"my-password\"\n        }\n      }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Flows with API v2 (Flow Response Object)\nDESCRIPTION: Example of how to set flows using API v2, which includes a revision identifier and flows array. The rev property should reflect the revision returned by GET /flows.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/flows/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"rev\": \"abc-123\",\n    \"flows\": [\n      {\n        \"type\": \"tab\",\n        \"id\": \"396c2376.c693dc\",\n        \"label\": \"Sheet 1\"\n      }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Drag-and-Drop Sorting in EditableList\nDESCRIPTION: This snippet shows how to enable drag-and-drop sorting for items in an EditableList. Setting sortable to true adds default drag handles to list items.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    sortable: true\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Notification Buttons in Node-RED UI\nDESCRIPTION: Example of configuring notification buttons with cancel and okay actions. Shows button configuration with text, class, and click handlers.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/notifications/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nbuttons: [\n    {\n        text: \"cancel\",\n        click: function(e) {\n            myNotification.close();\n        }\n    },\n    {\n        text: \"okay\",\n        class:\"primary\",\n        click: function(e) {\n            myNotification.close();\n        }\n    }\n\n```\n\n----------------------------------------\n\nTITLE: Checking Node.js and npm versions in PowerShell\nDESCRIPTION: This command checks the installed versions of Node.js and npm using PowerShell.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/windows.md#2025-04-09_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nnode --version; npm --version\n```\n\n----------------------------------------\n\nTITLE: Initializing Subflow Module Wrapper in JavaScript\nDESCRIPTION: A JavaScript wrapper that loads and registers a subflow JSON file with Node-RED. This is the main entry point for the subflow module that handles loading the subflow definition.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/subflow-modules.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nmodule.exports = function(RED) {\n    const subflowFile = path.join(__dirname,\"subflow.json\");\n    const subflowContents = fs.readFileSync(subflowFile);\n    const subflowJSON = JSON.parse(subflowContents);\n    RED.nodes.registerSubflow(subflowJSON);\n}\n```\n\n----------------------------------------\n\nTITLE: Warning Notification with Timeout in Node-RED\nDESCRIPTION: Example of displaying a warning notification that persists for 10 seconds.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/notifications/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nRED.notify(\"Something has happened\", { type: \"warning\", timeout: 10000 });\n```\n\n----------------------------------------\n\nTITLE: Error Response JSON Format Example in Node-RED Admin API\nDESCRIPTION: An example of the JSON error response format returned by the Node-RED Admin API when a 400 Bad Request occurs. The response includes a code field identifying the specific error and a message field with a human-readable description.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/errors.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  code: \"module_already_loaded\",\n  message: \"Module already loaded\"\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Normal Flow with PUT Request in Node-RED API\nDESCRIPTION: JSON structure for updating a normal flow in Node-RED. The payload requires an id, label, and arrays for nodes and configs. This represents a standard flow tab in the editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/put/flow/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"91ad451.f6e52b8\",\n  \"label\": \"Sheet 1\",\n  \"nodes\": [ ],\n  \"configs\": [ ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Drag-and-Drop Between Lists in EditableList\nDESCRIPTION: This snippet shows how to enable drag-and-drop functionality between different EditableList instances or other sortable lists using the connectWith option.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    connectWith: \".my-other-list\"\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing EditableList with Custom Add Button in JavaScript\nDESCRIPTION: This snippet demonstrates how to initialize an EditableList widget with a custom 'Add' button label. The addButton option is set to 'pets' to customize the text of the add button.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    addButton: \"pets\"\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Item Addition Callback for EditableList in JavaScript\nDESCRIPTION: This code shows how to set up the addItem callback function for an EditableList. The function is called when a new item is added to the list, allowing custom content to be added to each row.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    addItem: function(row, index, data) {\n        $(row).html(\"Item \"+index);\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Flow Configuration with v1 API Response in Node-RED\nDESCRIPTION: Example response from the GET /flows endpoint using API version v1, which returns an array of node objects representing the current flow configuration.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/flows/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"tab\",\n    \"id\": \"396c2376.c693dc\",\n    \"label\": \"Sheet 1\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Specifying a Custom Flow File in Development Mode\nDESCRIPTION: Runs Node-RED in development mode with a custom flow file specified.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/development.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngrunt dev --flowFile=my-flow-file.json\n```\n\n----------------------------------------\n\nTITLE: Defining Node Help Text in Node-RED\nDESCRIPTION: HTML template for a node's help text that appears in the Info sidebar when the node is selected. Includes a description, information about outputs, and additional details.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-html.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/html\" data-help-name=\"node-type\">\n   <p>Some useful help text to introduce the node.</p>\n   <h3>Outputs</h3>\n       <dl class=\"message-properties\">\n       <dt>payload\n           <span class=\"property-type\">string | buffer</span>\n       </dt>\n   <h3>Details</h3>\n   <p>Some more information about the node.</p>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Node-RED Admin Init Command Usage\nDESCRIPTION: Command-line instruction to initialize and configure a new Node-RED environment using the admin init command.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2021-07-20-version-2-0-released.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode-red admin init\n```\n\n----------------------------------------\n\nTITLE: Retrieving Flow Configuration with v2 API Response in Node-RED\nDESCRIPTION: Example response from the GET /flows endpoint using API version v2, which returns a flow response object that includes both the current flow configuration and its revision identifier.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/flows/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"rev\": \"abc-123\",\n    \"flows\": [\n      {\n        \"type\": \"tab\",\n        \"id\": \"396c2376.c693dc\",\n        \"label\": \"Sheet 1\"\n      }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Node Property Edit Template\nDESCRIPTION: HTML template for editing node properties in the Node-RED editor\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/properties.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-row\">\n    <label for=\"node-input-prefix\"><i class=\"fa fa-tag\"></i> Prefix</label>\n    <input type=\"text\" id=\"node-input-prefix\">\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTTP DELETE Flow Request Format\nDESCRIPTION: HTTP request format for deleting a specific flow by ID. Requires flows.write permission and Bearer token authentication if enabled.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/delete/flow/index.md#2025-04-09_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nDELETE /flow/:id\nAuthorization: Bearer [token]\n```\n\n----------------------------------------\n\nTITLE: Implementing AutoComplete with Asynchronous Search in JavaScript\nDESCRIPTION: Example of implementing autoComplete with an asynchronous search function that uses a callback to return results after a simulated delay.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/autoComplete/index.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// View the page source to see the full list of animals used in\n// this example\nlet animals = [\"Aardvark\",\"Alligator\",\"Alpaca\",\"Anaconda\",\"Ant\",\"Antelope\",\n               \"Carp\",\"Cat\",\"Caterpillar\",\"Catfish\",\"Cheetah\",\"Chicken\",\n               \"Deer\",\"Dinosaur\",\"Dog\",\"Dolphin\",\"Donkey\",\"Dove\" ];\n\n$(\"#node-input-example2\").autoComplete({\n    search: function(val, done) {\n        var matches = [];\n        animals.forEach(v => {\n            var i = v.toLowerCase().indexOf(val.toLowerCase());\n            if (i > -1) {\n                matches.push({\n                    value: v,\n                    label: v,\n                    i: i\n                })\n            }\n        });\n        matches.sort(function(A,B){return A.i-B.i})\n        // Simulate asynchronous work by using setTimout\n        // to delay response by 1 second\n        setTimeout(function() {\n            done(matches);\n        },1000)\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Node-RED command-line usage example\nDESCRIPTION: Command-line syntax for starting Node-RED with various options. Options include port selection, settings file path, user directory, and more.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nnode-red [-v] [-?] [--settings settings.js] [--userDir DIR]\n         [--port PORT] [--title TITLE] [--safe] [flows.json|projectName]\n         [-D X=Y|@file]\n```\n\n----------------------------------------\n\nTITLE: Handling Credentials in Node Editor JavaScript\nDESCRIPTION: This code shows how to handle credentials within the node editor, including the use of 'has_password' to check for non-blank password values.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/credentials.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\noneditprepare: function() {\n    // this.credentials.username is set to the appropriate value\n    // this.credentials.password is not set\n    // this.credentials.has_password indicates if the property is present in the runtime\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Dialout Group Access to Node-RED Docker Container\nDESCRIPTION: Command to run a Node-RED Docker container with access to the host's serial ports by adding the container to the dialout group. This enables interaction with serial devices connected to the host system.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v node_red_data:/data --group-add dialout --name mynodered nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Generating Authentication Token Response in Node-RED\nDESCRIPTION: Example JSON response from the /auth/token endpoint showing a successful authentication token generation. The response includes the access token, expiration time in seconds, and token type.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/auth/token/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"access_token\": \"A_SECRET_TOKEN\",\n  \"expires_in\":604800,\n  \"token_type\": \"Bearer\"\n}\n```\n\n----------------------------------------\n\nTITLE: Code Permission Block\nDESCRIPTION: Shows the required permission code needed to access this endpoint\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/delete/nodes/module/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\nnodes.write\n```\n\n----------------------------------------\n\nTITLE: Node Module Structure in JSON\nDESCRIPTION: Represents the collection of Node Sets provided by an npm package. Contains the module name, version, and an array of Node Set objects.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/types.md#2025-04-09_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"node-module-name\",\n  \"version\": \"0.0.6\",\n  \"nodes\": [ ... ]\n}\n```\n\n----------------------------------------\n\nTITLE: Node-RED Flow Configuration for Earthquake Data Processing\nDESCRIPTION: Complete Node-RED flow configuration that retrieves earthquake data every 5 minutes from USGS, processes CSV data, and implements magnitude-based alerting. The flow includes nodes for HTTP requests, CSV parsing, conditional logic, and debug output.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/tutorials/second-flow.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[{\"id\":\"e36406f2.8ef798\",\"type\":\"inject\",\"z\":\"f03b57d5.e525f8\",\"name\":\"\",\"topic\":\"\",\"payload\":\"\",\"payloadType\":\"str\",\"repeat\":\"300\",\"crontab\":\"\",\"once\":false,\"x\":130,\"y\":900,\"wires\":[[\"c3c50023.3bbed\"]]},{\"id\":\"c3c50023.3bbed\",\"type\":\"http request\",\"z\":\"f03b57d5.e525f8\",\"name\":\"Recent Quakes\",\"method\":\"GET\",\"url\":\"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_month.csv\",\"tls\":\"\",\"x\":300,\"y\":900,\"wires\":[[\"8afc6cac.e0812\"]]},{\"id\":\"8afc6cac.e0812\",\"type\":\"csv\",\"z\":\"f03b57d5.e525f8\",\"name\":\"\",\"sep\":\",\",\"hdrin\":true,\"hdrout\":\"\",\"multi\":\"one\",\"ret\":\"\\\\n\",\"temp\":\"\",\"x\":470,\"y\":900,\"wires\":[[\"44779781.4190f8\",\"6f0eb546.9e208c\"]]},{\"id\":\"44779781.4190f8\",\"type\":\"debug\",\"z\":\"f03b57d5.e525f8\",\"name\":\"\",\"active\":true,\"complete\":false,\"x\":630,\"y\":900,\"wires\":[]},{\"id\":\"6f0eb546.9e208c\",\"type\":\"switch\",\"z\":\"f03b57d5.e525f8\",\"name\":\"\",\"property\":\"payload.mag\",\"propertyType\":\"msg\",\"rules\":[{\"t\":\"gte\",\"v\":\"7\",\"vt\":\"num\"}],\"checkall\":\"true\",\"outputs\":1,\"x\":510,\"y\":960,\"wires\":[[\"d78d4aa8.8c8208\"]]},{\"id\":\"d78d4aa8.8c8208\",\"type\":\"change\",\"z\":\"f03b57d5.e525f8\",\"name\":\"\",\"rules\":[{\"t\":\"set\",\"p\":\"payload\",\"pt\":\"msg\",\"to\":\"PANIC!\",\"tot\":\"str\"}],\"action\":\"\",\"property\":\"\",\"from\":\"\",\"to\":\"\",\"reg\":false,\"x\":650,\"y\":1020,\"wires\":[[\"72fddece.fac0d\"]]},{\"id\":\"72fddece.fac0d\",\"type\":\"debug\",\"z\":\"f03b57d5.e525f8\",\"name\":\"\",\"active\":true,\"complete\":false,\"x\":750,\"y\":960,\"wires\":[]}]\n```\n\n----------------------------------------\n\nTITLE: Disabling Node-RED Autostart on BeagleBone\nDESCRIPTION: Command to prevent Node-RED from automatically starting on system boot. This stops Node-RED from running on startup without uninstalling it.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/beaglebone.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl disable node-red.service\n```\n\n----------------------------------------\n\nTITLE: Revoking Access Token - cURL\nDESCRIPTION: cURL command to revoke an access token by sending a POST request to the /auth/revoke endpoint with the token in both the request body and Authorization header.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/oauth.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl --data 'token=A_SECRET_TOKEN' -H \"Authorization: Bearer A_SECRET_TOKEN\" http://localhost:1880/auth/revoke\n```\n\n----------------------------------------\n\nTITLE: Upgrading Node-RED and Node.js on BeagleBone\nDESCRIPTION: Commands to update package lists and upgrade Node.js and Node-RED on BeagleBone. This ensures you're running the latest version of both without breaking the system configuration.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/beaglebone.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt update\nsudo apt upgrade nodejs bb-node-red-installer\n```\n\n----------------------------------------\n\nTITLE: Success Response Format for Node Module API in Node-RED\nDESCRIPTION: Example JSON response showing a successfully enabled Node-RED module. The response includes the module name, version, and details about each node within the module including its ID, name, supported node types, and enabled/loaded status.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/put/nodes/module/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"node-red-node-suncalc\",\n  \"version\": \"0.0.6\",\n  \"nodes\": [\n    {\n      \"id\": \"node-red-node-suncalc/suncalc\",\n      \"name\": \"suncalc\",\n      \"types\": [\n        \"sunrise\"\n      ],\n      \"enabled\": true,\n      \"loaded\": true,\n      \"module\": \"node-red-node-suncalc\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Bearer Token Authorization Header\nDESCRIPTION: Example of the required Authorization header format when authentication is enabled\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/delete/nodes/module/index.md#2025-04-09_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\nBearer [token]\n```\n\n----------------------------------------\n\nTITLE: Asynchronous AutoComplete HTML Input Setup\nDESCRIPTION: HTML markup for an input field that will use asynchronous search for autoComplete suggestions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/autoComplete/index.md#2025-04-09_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-example2\">\n```\n\n----------------------------------------\n\nTITLE: Setting Fixed Height for EditableList in JavaScript\nDESCRIPTION: This snippet shows how to set a fixed height for an EditableList widget. The height option can be set to a number of pixels or 'auto' for automatic sizing.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    height: 300\n});\n```\n\n----------------------------------------\n\nTITLE: Obtaining Access Token Response - JSON\nDESCRIPTION: Example JSON response when successfully obtaining an access token. It includes the token, expiration time, and token type.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/oauth.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"access_token\": \"A_SECRET_TOKEN\",\n  \"expires_in\":604800,\n  \"token_type\": \"Bearer\"\n}\n```\n\n----------------------------------------\n\nTITLE: Status Change Message Structure in Node-RED\nDESCRIPTION: This JSON structure shows the message sent by a Status node when it detects a status change in a Node-RED node. It includes information about the new status and the source node.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/handling-errors.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"status\": {\n        \"fill\": \"red\",\n        \"shape\": \"ring\",\n        \"text\": \"node-red:common.status.disconnected\",\n        \"source\": {\n            \"id\": \"27bbb5b1.d3eb3a\",\n            \"type\": \"mqtt out\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Unit Testing for Node-RED Nodes with Test Helper\nDESCRIPTION: JavaScript unit tests for the lowercase node using node-red-node-test-helper. Tests validate that the node loads properly and correctly converts payloads to lowercase.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/first-node.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar helper = require(\"node-red-node-test-helper\");\nvar lowerNode = require(\"../lower-case.js\");\n\ndescribe('lower-case Node', function () {\n\n  afterEach(function () {\n    helper.unload();\n  });\n\n  it('should be loaded', function (done) {\n    var flow = [{ id: \"n1\", type: \"lower-case\", name: \"test name\" }];\n    helper.load(lowerNode, flow, function () {\n      var n1 = helper.getNode(\"n1\");\n      n1.should.have.property('name', 'test name');\n      done();\n    });\n  });\n\n  it('should make payload lower case', function (done) {\n    var flow = [{ id: \"n1\", type: \"lower-case\", name: \"test name\",wires:[[\"n2\"]] },\n    { id: \"n2\", type: \"helper\" }];\n    helper.load(lowerNode, flow, function () {\n      var n2 = helper.getNode(\"n2\");\n      var n1 = helper.getNode(\"n1\");\n      n2.on(\"input\", function (msg) {\n        msg.should.have.property('payload', 'uppercase');\n        done();\n      });\n      n1.receive({ payload: \"UpperCase\" });\n    });\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: JSON Request Body for Token Revocation in Node-RED API\nDESCRIPTION: JSON request body required when making a POST request to the /auth/revoke endpoint. The request must include the token to be revoked as a field.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/auth/revoke/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"token\": \"[token-to-revoke]\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Single Item to EditableList in JavaScript\nDESCRIPTION: Shows how to add a single item to the end of an EditableList. The item is added with associated data in the form of an object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList('addItem',{fruit:\"banana\"});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Runtime Settings Response Example in Node-RED Admin API\nDESCRIPTION: Example JSON response from the GET /settings endpoint showing runtime settings including HTTP node root path, Node-RED version, and user information. The user field is only present when authentication is enabled.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/settings/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"httpNodeRoot\": \"/\",\n  \"version\": \"0.X.Y\",\n  \"user\": {\n    \"username\": \"admin\",\n    \"permissions\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Node Set Structure in JSON\nDESCRIPTION: Represents the collection of node types provided by a single file within a Node Module. Corresponds to entries in the node-red.nodes property of the module's package.json.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/types.md#2025-04-09_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"node-module-name/node-set-name\",\n  \"name\": \"node-set-name\",\n  \"types\": [ ... ],\n  \"enabled\": true,\n  \"module\": \"node-module-name\",\n  \"version\": \"0.0.6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Removing an Action in Node-RED\nDESCRIPTION: Shows how to remove a previously registered action using RED.actions.remove().\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/actions/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nRED.actions.remove(\"my-custom-tab:show-custom-tab\")\n```\n\n----------------------------------------\n\nTITLE: Showing Specific Item in EditableList with JavaScript\nDESCRIPTION: Shows how to scroll the EditableList to ensure a specific item is in view.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList('show', item);\n```\n\n----------------------------------------\n\nTITLE: Single Flow Configuration in JSON\nDESCRIPTION: Represents what gets presented in the editor as a tab. Contains properties for the flow ID, label, and arrays of nodes, configs, and subflows included in this flow.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/types.md#2025-04-09_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"1234\",\n  \"label\": \"Sheet1\",\n  \"nodes\": [ ... ],\n  \"configs\": [ ... ],\n  \"subflows\": [ ... ]\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Node Modules to Latest Version\nDESCRIPTION: Command to install the latest version of a specific node module in Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/adding-nodes.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install <name-of-module>@latest\n```\n\n----------------------------------------\n\nTITLE: Handling Input Messages in Node-RED Node\nDESCRIPTION: Demonstrates how to register a listener for input events in a Node-RED node, compatible with both Node-RED 1.0 and earlier versions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-js.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nthis.on('input', function(msg, send, done) {\n    // do something with 'msg'\n\n    // Once finished, call 'done'.\n    // This call is wrapped in a check that 'done' exists\n    // so the node will work in earlier versions of Node-RED (<1.0)\n    if (done) {\n        done();\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Node Module from TGZ Package - cURL Command\nDESCRIPTION: cURL command example showing how to install a node module from a local tgz package using multipart/form-data.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/nodes/index.md#2025-04-09_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST http://localhost:1880/nodes -H \"Content-Type: multipart/form-data\" -F \"tarball=@node-red-contrib-foo-1.0.3.tgz;type=application/x-compressed-tar;filename=node-red-contrib-foo-1.0.3.tgz\"\n```\n\n----------------------------------------\n\nTITLE: Setting Count Label on SearchBox in JavaScript\nDESCRIPTION: Shows how to set the count label on a SearchBox widget. This method is used to provide feedback to the user about the number of matching items. It accepts a string value that typically represents the current matches and total items.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/searchBox/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").searchBox('count', '120 / 300');\n```\n\n----------------------------------------\n\nTITLE: Using i18n in Node-RED Editor HTML\nDESCRIPTION: Examples of using the data-i18n attribute in HTML to specify internationalized text for various element types and attributes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/i18n.md#2025-04-09_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<span data-i18n=\"myNode.label.foo\"></span>\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" data-i18n=\"[placeholder]myNode.placeholder.foo\">\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" data-i18n=\"[title]myNode.label.linkTitle;myNode.label.linkText\"></a>\n```\n\n----------------------------------------\n\nTITLE: Subflow Object Structure in JSON\nDESCRIPTION: Defines the configuration of a subflow in Node-RED. Contains properties for identifying the subflow, defining inputs and outputs, and specifying included nodes and configurations.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/types.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"6115be82.9eea4\",\n  \"type\": \"subflow\",\n  \"name\": \"Subflow 1\",\n  \"info\": \"\",\n  \"in\": [{\n    \"x\": 60,\n    \"y\": 40,\n    \"wires\": [{\n      \"id\": \"1830cc4e.e7cf34\"\n    }]\n  }],\n  \"out\": [{\n    \"x\": 320,\n    \"y\": 40,\n    \"wires\": [{\n      \"id\": \"1830cc4e.e7cf34\",\n      \"port\": 0\n    }]\n  }],\n  \"configs\": [ ... ],\n  \"nodes\": [ ... ]\n}\n```\n\n----------------------------------------\n\nTITLE: Logging into Node-RED with Authentication\nDESCRIPTION: Command to authenticate with a Node-RED instance when authentication is enabled.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/node-red-admin.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode-red-admin login\n```\n\n----------------------------------------\n\nTITLE: Handling TreeList Mouse Events\nDESCRIPTION: Examples of handling mouse over and out events for TreeList items.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/treeList/index.md#2025-04-09_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").on('treelistmouseout', function(event, item) { });\n\n$(\".input\").on('treelistmouseover', function(event, item) { });\n```\n\n----------------------------------------\n\nTITLE: Error Handling in Node-RED Node Input Listener\nDESCRIPTION: Illustrates error handling within a Node-RED node's input listener, compatible with both Node-RED 1.0 and earlier versions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-js.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nlet node = this;\nthis.on('input', function(msg, send, done) {\n    // do something with 'msg'\n\n    // If an error is hit, report it to the runtime\n    if (err) {\n        if (done) {\n            // Node-RED 1.0 compatible\n            done(err);\n        } else {\n            // Node-RED 0.x compatible\n            node.error(err, msg);\n        }\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node-RED Flow State JSON Response\nDESCRIPTION: Example JSON response from the GET /flows/state endpoint, showing the current runtime state of Node-RED flows. The response includes a 'state' field indicating whether flows are running ('start') or stopped ('stop').\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/flows/state/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"state\": \"stop\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring User Settings in Node-RED systemd Service\nDESCRIPTION: YAML configuration for changing the user, group, working directory, and memory allocation in the Node-RED systemd service file. This allows you to run Node-RED as a different user than the default 'pi' user.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/customising-systemd-on-pi.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n[Service]\nType=simple\n# Run as normal pi user - change to the user name you wish to run Node-RED as\nUser=<your_user>\nGroup=<your_user>\nWorkingDirectory=/home/<your_user>\n\nEnvironment=\"NODE_OPTIONS=--max_old_space_size=256\"\n...\n```\n\n----------------------------------------\n\nTITLE: HTML Resource Loading Examples\nDESCRIPTION: Shows how to properly reference resource files in HTML using relative URLs within the Node-RED editor interface.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/resources.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"resources/node-red-node-example/image.png\" />\n<script src=\"resources/node-red-node-example/library.js\">\n```\n\n----------------------------------------\n\nTITLE: Node Object Structure in JSON\nDESCRIPTION: Represents the configuration of a single node within a flow. Contains properties such as id, type, coordinates, parent flow reference, and wire connections.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/types.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"123\",\n  \"type\": \"inject\",\n  \"x\": 0,\n  \"y\": 0,\n  \"z\": \"456\",\n  \"wires\": [ ... ]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Buttons to EditableList in JavaScript\nDESCRIPTION: This example demonstrates how to add custom buttons to an EditableList widget. It includes a button with an icon, label, tooltip, and click handler.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    addItem: function(row, index, data) {\n        $(row).html(\"Item \"+index);\n    }\n    buttons: [{\n        label: \"with icon\",\n        icon: \"fa fa-star\",\n        title: \"my custom button\",\n        click: function(evt) {\n            alert(\"button clicked\");\n        }\n   }]\n});\n```\n\n----------------------------------------\n\nTITLE: Linking Node-RED with MQTT Broker in Docker\nDESCRIPTION: This JSON snippet shows a Node-RED flow configuration that connects to an MQTT broker running in a separate Docker container. It demonstrates how to use container names for internal communication within a Docker network.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n[{\"id\":\"c51cbf73.d90738\",\"type\":\"mqtt in\",\"z\":\"3fa278ec.8cbaf\",\"name\":\"\",\"topic\":\"test\",\"broker\":\"5673f1d5.dd5f1\",\"x\":290,\"y\":240,\"wires\":[[\"7781c73.639b8b8\"]]},{\"id\":\"7008d6ef.b6ee38\",\"type\":\"mqtt out\",\"z\":\"3fa278ec.8cbaf\",\"name\":\"\",\"topic\":\"test\",\"qos\":\"\",\"retain\":\"\",\"broker\":\"5673f1d5.dd5f1\",\"x\":517,\"y\":131,\"wires\":[]},{\"id\":\"ef5b970c.7c864\",\"type\":\"inject\",\"z\":\"3fa278ec.8cbaf\",\"name\":\"\",\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"topic\":\"\",\"payload\":\"\",\"payloadType\":\"date\",\"x\":290,\"y\":153,\"wires\":[[\"7008d6ef.b6ee38\"]]},{\"id\":\"7781c73.639b8b8\",\"type\":\"debug\",\"z\":\"3fa278ec.8cbaf\",\"name\":\"\",\"active\":true,\"tosidebar\":true,\"console\":false,\"tostatus\":true,\"complete\":\"payload\",\"targetType\":\"msg\",\"statusVal\":\"payload\",\"statusType\":\"auto\",\"x\":505,\"y\":257,\"wires\":[]},{\"id\":\"5673f1d5.dd5f1\",\"type\":\"mqtt-broker\",\"z\":\"\",\"name\":\"\",\"broker\":\"mybroker\",\"port\":\"1883\",\"clientid\":\"\",\"usetls\":false,\"compatmode\":false,\"keepalive\":\"15\",\"cleansession\":true,\"birthTopic\":\"\",\"birthQos\":\"0\",\"birthRetain\":\"false\",\"birthPayload\":\"\",\"closeTopic\":\"\",\"closeRetain\":\"false\",\"closePayload\":\"\",\"willTopic\":\"\",\"willQos\":\"0\",\"willRetain\":\"false\",\"willPayload\":\"\"}]\n```\n\n----------------------------------------\n\nTITLE: Adding a Custom Header to EditableList in JavaScript\nDESCRIPTION: This code demonstrates how to add a custom header to an EditableList widget. It creates a header with two columns for 'Name' and 'Type'.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    header: $(\"<div>\").append($.parseHTML(\"<div style='width:40%; display: inline-grid'>Name</div><div style='display: inline-grid'>Type</div>\")),\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring package.json for Node-RED Custom Node\nDESCRIPTION: The package.json file configuration for a Node-RED custom node that defines the module metadata and registers the lowercase node with the Node-RED runtime.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/first-node.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\" : \"node-red-contrib-example-lower-case\",\n    ...\n    \"node-red\" : {\n        \"nodes\": {\n            \"lower-case\": \"lower-case.js\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Response from GET /diagnostics Endpoint in Node-RED\nDESCRIPTION: This JSON response contains comprehensive diagnostic information from a Node-RED instance, including internationalization settings, Node.js details, operating system information, runtime data, and configuration settings. The diagnostics feature must be enabled in settings.js with 'diagnostics.enabled: true'.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/diagnostics/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"report\": \"diagnostics\",\n  \"scope\": \"basic\",\n  \"time\": {\n    \"utc\": \"Mon, 23 Jan 2023 20:15:08 GMT\",\n    \"local\": \"1/23/2023, 8:15:08 PM\"\n  },\n  \"intl\": {\n    \"locale\": \"en-US\",\n    \"timeZone\": \"UTC\"\n  },\n  \"nodejs\": {\n    \"version\": \"v16.16.0\",\n    \"arch\": \"x64\",\n    \"platform\": \"linux\",\n    \"memoryUsage\": {\n      \"rss\": 106336256,\n      \"heapTotal\": 36225024,\n      \"heapUsed\": 33527912,\n      \"external\": 1905248,\n      \"arrayBuffers\": 145556\n    }\n  },\n  \"os\": {\n    \"containerised\": true,\n    \"wsl\": false,\n    \"totalmem\": 32841064448,\n    \"freemem\": 28394344448,\n    \"arch\": \"x64\",\n    \"loadavg\": [\n      1,\n      1.01,\n      0.89\n    ],\n    \"platform\": \"linux\",\n    \"release\": \"5.15.85-1-MANJARO\",\n    \"type\": \"Linux\",\n    \"uptime\": 5554.97,\n    \"version\": \"#1 SMP PREEMPT Wed Dec 21 21:15:06 UTC 2022\"\n  },\n  \"runtime\": {\n    \"version\": \"3.0.2\",\n    \"isStarted\": true,\n    \"flows\": {\n      \"state\": \"start\",\n      \"started\": true\n    },\n    \"modules\": {\n      \"node-red\": \"3.0.2\"\n    },\n    \"settings\": {\n      \"available\": true,\n      \"apiMaxLength\": \"UNSET\",\n      \"disableEditor\": false,\n      \"contextStorage\": {},\n      \"debugMaxLength\": 1000,\n      \"editorTheme\": {\n        \"palette\": {},\n        \"projects\": {\n          \"enabled\": false,\n          \"workflow\": {\n            \"mode\": \"manual\"\n          }\n        },\n        \"codeEditor\": {\n          \"lib\": \"ace\",\n          \"options\": {\n            \"theme\": \"vs\"\n          }\n        }\n      },\n      \"flowFile\": \"flows.json\",\n      \"mqttReconnectTime\": 15000,\n      \"serialReconnectTime\": 15000,\n      \"socketReconnectTime\": \"UNSET\",\n      \"socketTimeout\": \"UNSET\",\n      \"tcpMsgQueueSize\": \"UNSET\",\n      \"inboundWebSocketTimeout\": \"UNSET\",\n      \"runtimeState\": {\n        \"enabled\": false,\n        \"ui\": false\n      },\n      \"adminAuth\": \"SET\",\n      \"httpAdminRoot\": \"/\",\n      \"httpAdminCors\": \"UNSET\",\n      \"httpNodeAuth\": \"UNSET\",\n      \"httpNodeRoot\": \"/\",\n      \"httpNodeCors\": \"UNSET\",\n      \"httpStatic\": \"UNSET\",\n      \"httpStaticRoot\": \"UNSET\",\n      \"httpStaticCors\": \"UNSET\",\n      \"uiHost\": \"SET\",\n      \"uiPort\": \"SET\",\n      \"userDir\": \"SET\",\n      \"nodesDir\": \"UNSET\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Automatically Restarting Node-RED During Development\nDESCRIPTION: Runs Node-RED in development mode, which automatically rebuilds and restarts when source code changes are detected.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/development.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngrunt dev\n```\n\n----------------------------------------\n\nTITLE: Setting Timezone in Node-RED Docker Container via Docker Compose\nDESCRIPTION: Docker Compose configuration snippet that sets a custom timezone for a Node-RED container using the environment variable. This is useful when managing Node-RED alongside other services.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\n  node-red:\n    environment:\n      - TZ=America/New_York\n```\n\n----------------------------------------\n\nTITLE: Showing Specific TreeList Item\nDESCRIPTION: Demonstrates how to make a specific item visible in the TreeList by its ID.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/treeList/index.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").treeList('show','my-red-item');\n```\n\n----------------------------------------\n\nTITLE: Creating and Using Named Data Volume for Node-RED\nDESCRIPTION: Commands to create a named data volume, list volumes, and run Node-RED using the volume for data persistence.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker volume create --name node_red_data\ndocker volume ls\ndocker run -it -p 1880:1880 -v node_red_data:/data --name mynodered nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Legacy Node-RED Embedding Pattern\nDESCRIPTION: The previous pattern for embedding Node-RED in a Node.js application, which needs to be updated for version 0.6.0 due to the separation of admin and node HTTP endpoints.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2014-02-21-version-0-6-0-released.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\napp.use(settings.httpRoot,RED.app);\n```\n\n----------------------------------------\n\nTITLE: Formatting Timestamp in Node-RED Function Node\nDESCRIPTION: This JavaScript function takes a timestamp payload, creates a Date object, and formats it as a readable string. It demonstrates how to manipulate message payloads within a Node-RED Function node.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/tutorials/first-flow.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Create a Date object from the payload\nvar date = new Date(msg.payload);\n// Change the payload to be a formatted Date string\nmsg.payload = date.toString();\n// Return the message so it can be sent on\nreturn msg;\n```\n\n----------------------------------------\n\nTITLE: Setting Flows with API v1 (JSON Array Format)\nDESCRIPTION: Example of how to set flows using API v1, which uses an array of node objects. Each object represents a node in the flow, with v1 being the simpler format.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/flows/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"tab\",\n    \"id\": \"396c2376.c693dc\",\n    \"label\": \"Sheet 1\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Receiving Flow ID Response in JSON\nDESCRIPTION: This snippet demonstrates the JSON response format when a flow is successfully added. It returns the assigned id of the new flow.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/flow/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"5a04dce3.a5fb24\"}\n```\n\n----------------------------------------\n\nTITLE: Setting Up PM2 for Automatic Node-RED Startup on EC2\nDESCRIPTION: This bash script installs PM2 and configures it to automatically start Node-RED when the EC2 instance boots. It also saves the PM2 configuration and sets up the startup script.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/aws.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm install -g --unsafe-perm pm2\npm2 start `which node-red` -- -v\npm2 save\npm2 startup\n```\n\n----------------------------------------\n\nTITLE: Implementing Multi-line Text Editor\nDESCRIPTION: Setup for Ace-based multi-line text editor in Node-RED with proper initialization and cleanup.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/edit-dialog.md#2025-04-09_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"height: 250px; min-height:150px;\" class=\"node-text-editor\" id=\"node-input-example-editor\"></div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nthis.editor = RED.editor.createEditor({\n   id: 'node-input-example-editor',\n   mode: 'ace/mode/text',\n   value: this.exampleText\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\noneditsave: function() {\n    this.exampleText = this.editor.getValue();\n    this.editor.destroy();\n    delete this.editor;\n},\noneditcancel: function() {\n    this.editor.destroy();\n    delete this.editor;\n},\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Context Stores in Node-RED\nDESCRIPTION: Example configuration in settings.js to set up multiple context stores - one in-memory store (default) and one file-based store. This allows choosing where specific context values are stored based on persistence requirements.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/context.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ncontextStorage: {\n   default: \"memoryOnly\",\n   memoryOnly: { module: 'memory' },\n   file: { module: 'localfilesystem' }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating the Global Flow with PUT Request in Node-RED API\nDESCRIPTION: JSON structure for updating the global flow in Node-RED. The payload uses 'global' as the id and contains arrays for configs and subflows, but no nodes array.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/put/flow/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"global\",\n  \"configs\": [ ],\n  \"subflows\": [ ]\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing Request Body for Enabling/Disabling Node Set in Node-RED\nDESCRIPTION: JSON structure for the request body to enable or disable a node set. The 'enabled' field is a boolean indicating whether to enable (true) or disable (false) the module.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/put/nodes/module/set/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Request Body Format for Enabling/Disabling Modules in Node-RED Admin API\nDESCRIPTION: JSON request body format for enabling or disabling a Node-RED module. The 'enabled' field must be set to either true or false to enable or disable the module respectively.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/put/nodes/module/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Credentials for Elastic Beanstalk CLI\nDESCRIPTION: This snippet shows how to set up AWS credentials in a local configuration file for use with the Elastic Beanstalk CLI. It includes the access key ID and secret access key.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/aws.md#2025-04-09_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\n[profile eb-cli]\naws_access_key_id = key id\naws_secret_access_key = access key\n```\n\n----------------------------------------\n\nTITLE: Adding Resize Callback to EditableList in JavaScript\nDESCRIPTION: This code shows how to add a resize callback function to an EditableList. The function is called whenever the size of the list changes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    resize: function() {\n        console.log(\"I have changed in size\")\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Successful Response from Node-RED Flow Update API\nDESCRIPTION: Example of a successful response after updating a flow. The response contains the id of the updated flow.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/put/flow/index.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"5a04dce3.a5fb24\"}\n```\n\n----------------------------------------\n\nTITLE: Starting the Node-RED Service on BeagleBone\nDESCRIPTION: Command to start the Node-RED service using systemd. This launches the Node-RED process if it's currently stopped.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/beaglebone.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo service node-red start\n```\n\n----------------------------------------\n\nTITLE: Adding Post-Sort Callback to EditableList in JavaScript\nDESCRIPTION: This code demonstrates how to add a callback function that is called after items in an EditableList have been reordered. The function receives an array of the sorted item elements.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    sortItems: function(items) {\n        console.log(\"The items have changed order\")\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Node Help Documentation with HTML in Node-RED\nDESCRIPTION: This HTML template demonstrates the proper structure for Node-RED node help documentation. It includes sections for node introduction, inputs, outputs, details, and references. This structured format ensures consistency across different nodes in the Node-RED ecosystem.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/help-style-guide.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/html\" data-help-name=\"node-type\">\n<p>Connects to a MQTT broker and publishes messages.</p>\n\n<h3>Inputs</h3>\n    <dl class=\"message-properties\">\n        <dt>payload\n            <span class=\"property-type\">string | buffer</span>\n        </dt>\n        <dd> the payload of the message to publish. </dd>\n        <dt class=\"optional\">topic <span class=\"property-type\">string</span></dt>\n        <dd> the MQTT topic to publish to.</dd>\n    </dl>\n\n <h3>Outputs</h3>\n     <ol class=\"node-ports\">\n         <li>Standard output\n             <dl class=\"message-properties\">\n                 <dt>payload <span class=\"property-type\">string</span></dt>\n                 <dd>the standard output of the command.</dd>\n             </dl>\n         </li>\n         <li>Standard error\n             <dl class=\"message-properties\">\n                 <dt>payload <span class=\"property-type\">string</span></dt>\n                 <dd>the standard error of the command.</dd>\n             </dl>\n         </li>\n     </ol>\n\n<h3>Details</h3>\n    <p><code>msg.payload</code> is used as the payload of the published message.\n    If it contains an Object it will be converted to a JSON string before being sent.\n    If it contains a binary Buffer the message will be published as-is.</p>\n    <p>The topic used can be configured in the node or, if left blank, can be set\n    by <code>msg.topic</code>.</p>\n    <p>Likewise the QoS and retain values can be configured in the node or, if left\n    blank, set by <code>msg.qos</code> and <code>msg.retain</code> respectively.</p>\n\n<h3>References</h3>\n    <ul>\n        <li><a>Twitter API docs</a> - full description of <code>msg.tweet</code> property</li>\n        <li><a>GitHub</a> - the nodes github repository</li>\n    </ul>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Empty Authentication Response\nDESCRIPTION: Response returned when no active authentication scheme is configured.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/auth/login/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Defining InstallEvent Object Structure in JSON\nDESCRIPTION: This snippet defines the structure of the InstallEvent object passed to the preInstall and postInstall hooks. It includes properties such as module name, version, installation directory, and npm arguments.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/install/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"module\": \"<npm module name>\",\n    \"version\": \"<version to be installed>\",\n    \"url\": \"<optional url to install from>\",\n    \"dir\": \"<directory to run the install in>\",\n    \"isExisting\": \"<boolean> this is a module we already know about\",\n    \"isUpgrade\": \"<boolean> this is an upgrade rather than new install\",\n    \"args\": [ \"an array\", \"of the args\", \"that will be passed to npm\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Authentication Scheme - cURL\nDESCRIPTION: cURL command to check the active authentication scheme by sending a GET request to the /auth/login endpoint.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/oauth.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl http://localhost:1880/auth/login\n```\n\n----------------------------------------\n\nTITLE: Stopping the Node-RED Service on BeagleBone\nDESCRIPTION: Command to stop the Node-RED service using systemd. This halts the Node-RED process without uninstalling it.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/beaglebone.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo service node-red stop\n```\n\n----------------------------------------\n\nTITLE: Logging in Node-RED Nodes\nDESCRIPTION: Shows various logging methods available in Node-RED nodes for different levels of information and severity.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-js.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nthis.log(\"Something happened\");\nthis.warn(\"Something happened you should know about\");\nthis.error(\"Oh no, something bad happened\");\n\n// Since Node-RED 0.17\nthis.trace(\"Log some internal detail not needed for normal operation\");\nthis.debug(\"Log something more details for debugging the node's behaviour\");\n\n```\n\n----------------------------------------\n\nTITLE: Defining UninstallEvent Object Structure in JSON\nDESCRIPTION: This snippet defines the structure of the UninstallEvent object passed to the preUninstall and postUninstall hooks. It includes properties such as module name, uninstallation directory, and npm arguments.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/install/index.md#2025-04-09_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"module\": \"<npm module name>\",\n    \"dir\": \"<directory to run the remove in>\",\n    \"args\": [ \"an array\", \"of the args\", \"we will pass to npm\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Updating and Upgrading the Debian System on BeagleBone\nDESCRIPTION: Command to update package lists and perform a full system upgrade on BeagleBone running Debian 10 Buster. This ensures all packages are up to date before working with Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/beaglebone.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt update && sudo apt full-upgrade\n```\n\n----------------------------------------\n\nTITLE: Implementing postUninstall Hook in JavaScript\nDESCRIPTION: This snippet shows how to implement a postUninstall hook. It logs a message after a module has been removed, demonstrating basic usage of the UninstallEvent object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/install/index.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"postUninstall\",  (uninstallEvent) => {\n    console.log(`Removed ${uninstallEvent.module}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Node Help Documentation with Markdown in Node-RED\nDESCRIPTION: This Markdown template shows how to structure Node-RED node help documentation using Markdown syntax (available since Node-RED 2.1.0). It includes the same sections as the HTML version but uses Markdown formatting for improved readability during development.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/help-style-guide.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<script type=\"text/markdown\" data-help-name=\"node-type\">\nConnects to a MQTT broker and publishes messages.\n\n### Inputs\n\n: payload (string | buffer) :  the payload of the message to publish.\n: *topic* (string)          :  the MQTT topic to publish to.\n\n\n### Outputs\n\n1. Standard output\n: payload (string) : the standard output of the command.\n\n2. Standard error\n: payload (string) : the standard error of the command.\n\n### Details\n\n`msg.payload` is used as the payload of the published message.\nIf it contains an Object it will be converted to a JSON string before being sent.\nIf it contains a binary Buffer the message will be published as-is.\n\nThe topic used can be configured in the node or, if left blank, can be set\n`msg.topic`.\n\nLikewise the QoS and retain values can be configured in the node or, if left\nblank, set by `msg.qos` and `msg.retain` respectively.\n\n### References\n\n - [Twitter API docs]() - full description of `msg.tweet` property\n - [GitHub]() - the nodes github repository\n</script>\n```\n\n----------------------------------------\n\nTITLE: Complete Flow Configuration in JSON (v2 Format)\nDESCRIPTION: Enhanced flow configuration format introduced in Node-RED 0.15.0, adding revision tracking. Used when the Node-RED-API-Version header is set to v2 in the /flows API.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/types.md#2025-04-09_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"rev\": \"abc-123\",\n    \"flows\": [\n      {\n        \"id\": \"1234\",\n        \"type\": \"inject\"\n      },\n      {\n        \"id\": \"5678\",\n        \"type\": \"debug\"\n      }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: ReceiveEvent Object Structure in Node-RED\nDESCRIPTION: JSON structure definition for the ReceiveEvent object used in messaging hooks.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/messaging/index.md#2025-04-09_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"msg\": \"<message object>\",\n    \"destination\": {\n        \"id\": \"<node-id>\",\n        \"node\": \"<node-object>\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: API v2 Success Response Format\nDESCRIPTION: Example of a successful response when using API v2. The response includes the new revision identifier for the deployed flows.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/flows/index.md#2025-04-09_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"rev\": \"def-456\",\n}\n```\n\n----------------------------------------\n\nTITLE: CompleteEvent Object Structure in Node-RED\nDESCRIPTION: JSON structure definition for the CompleteEvent object used in messaging hooks.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/messaging/index.md#2025-04-09_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"msg\": \"<message object>\",\n    \"node\": {\n        \"id\": \"<node-id>\",\n        \"node\": \"<node-object>\"\n    },\n    \"error\": \"<error passed to done, otherwise, undefined>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running Node-RED on Windows\nDESCRIPTION: This command starts Node-RED from the command line, assuming it has been installed globally.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/windows.md#2025-04-09_snippet_7\n\nLANGUAGE: batch\nCODE:\n```\nC:>node-red\n```\n\n----------------------------------------\n\nTITLE: Enabling Item Removal in EditableList\nDESCRIPTION: This snippet shows how to enable item removal in an EditableList. Setting removable to true adds a delete button to each row, allowing items to be removed from the list.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    removable: true\n});\n```\n\n----------------------------------------\n\nTITLE: Message Properties Formatting in Node-RED Node Help\nDESCRIPTION: This example shows how to format message properties in both HTML and Markdown for Node-RED node help documentation. It demonstrates the proper structure for listing properties, their types, and descriptions, including marking optional properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/help-style-guide.md#2025-04-09_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<dl class=\"message-properties\">\n    <dt>payload\n        <span class=\"property-type\">string | buffer</span>\n    </dt>\n    <dd> the payload of the message to publish. </dd>\n    <dt class=\"optional\">topic\n        <span class=\"property-type\">string</span>\n    </dt>\n    <dd> the MQTT topic to publish to.</dd>\n</dl>\n```\n\nLANGUAGE: markdown\nCODE:\n```\n: payload (string | buffer) :  the payload of the message to publish.\n: *topic* (string)          :  the MQTT topic to publish to.\n```\n\n----------------------------------------\n\nTITLE: Implementing preUninstall Hook in JavaScript\nDESCRIPTION: This code demonstrates how to add a preUninstall hook. It logs a message before removing a module, showing how to access the UninstallEvent object properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/install/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"preUninstall\", (uninstallEvent) => {\n    console.log(`About to remove ${uninstallEvent.module}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Node-RED Dependencies\nDESCRIPTION: Installs all the required Node.js dependencies for Node-RED using npm.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/development.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Johnny-Five for Node-RED\nDESCRIPTION: Commands to install the Johnny-Five npm package for use with Node-RED from within your Node-RED home directory.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/interacting-with-arduino.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd ~/.node-red\nnpm install johnny-five\n```\n\n----------------------------------------\n\nTITLE: Running Node-RED with Command-Line Arguments\nDESCRIPTION: Shows how to pass command-line arguments to Node-RED when starting it with npm.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/development.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm start -- <args>\n```\n\n----------------------------------------\n\nTITLE: Removing Items from EditableList in JavaScript\nDESCRIPTION: Demonstrates how to set up a callback function that is called when an item is removed from the EditableList. The function logs a message to the console when an item is removed.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    removeItem: function(data) {\n        console.log(\"An item has been removed\")\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Timezone in Node-RED Docker Container via Command Line\nDESCRIPTION: Command to run a Node-RED Docker container with a custom timezone setting using the TZ environment variable. This ensures that logs and timestamps reflect the correct local time.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 1880:1880 -v node_red_data:/data --name mynodered -e TZ=America/New_York nodered/node-red\n```\n\n----------------------------------------\n\nTITLE: Example of custom settings file content\nDESCRIPTION: Example content for a custom settings file that overrides Node-RED logging settings. Each line contains a setting key and value.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nlogging.console.level=trace\nlogging.console.audit=true\n```\n\n----------------------------------------\n\nTITLE: AutoComplete with Custom Result Labels - HTML Setup\nDESCRIPTION: HTML markup for an input field that will display custom formatted labels in the dropdown suggestions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/autoComplete/index.md#2025-04-09_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-example2\">\n```\n\n----------------------------------------\n\nTITLE: Simple Johnny-Five LED Blink in Node-RED Function\nDESCRIPTION: A basic Node-RED function example that uses Johnny-Five to blink an LED on pin 13 every 500ms. It demonstrates how to access Johnny-Five from the global context.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/interacting-with-arduino.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar five = context.global.jfive;    // create a shorter alias\nvar led = new five.Led(13);         // instantiate the led\nled.blink(500);                     // blink it every 500 ms\n```\n\n----------------------------------------\n\nTITLE: Implementing Context Store Keys Callback in JavaScript\nDESCRIPTION: This snippet illustrates the structure of a callback function used for the keys operation in the Context Store API. It shows how to handle errors and return the list of keys.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/context/methods/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction callback(error, keys) {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Passing Node.js arguments using node-red-pi\nDESCRIPTION: Examples of passing arguments to the underlying Node.js process using either the node-red-pi script or directly with the node command. Useful for memory-constrained devices.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode-red-pi --max-old-space-size=128 --userDir /home/user/node-red-data/\nnode --max-old-space-size=128 red.js --userDir /home/user/node-red-data/\n```\n\n----------------------------------------\n\nTITLE: Formatting Multiple Node Outputs in Markdown\nDESCRIPTION: Alternative representation of multiple node outputs using Markdown syntax. Shows how to document message properties and their types in a more concise format.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/help-style-guide.md#2025-04-09_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n1. Standard output\n: payload (string) : the standard output of the command.\n\n2. Standard error\n: payload (string) : the standard error of the command.\n```\n\n----------------------------------------\n\nTITLE: NPM Rebuild Command\nDESCRIPTION: Command to rebuild Node-RED dependencies after changing Node.js versions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/node-versions.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm rebuild\n```\n\n----------------------------------------\n\nTITLE: Destroying AutoComplete Functionality in JavaScript\nDESCRIPTION: Example showing how to remove the autoComplete functionality from an input element using the destroy method.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/autoComplete/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").autoComplete('destroy');\n```\n\n----------------------------------------\n\nTITLE: Running Node-RED Locally with Memory Optimization\nDESCRIPTION: Command to run Node-RED locally on Raspberry Pi with memory optimization settings, limiting the old space size to 256MB.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/raspberrypi.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode-red-pi --max-old-space-size=256\n```\n\n----------------------------------------\n\nTITLE: NPM List Command for Global Modules\nDESCRIPTION: Command to list globally installed npm modules to locate Node-RED installation directory.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/node-versions.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm list -g --depth 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic Button Behavior with Enabled and Visible Functions\nDESCRIPTION: Extends button functionality by adding enabled and visible functions that dynamically control whether the button is enabled or visible based on the node's current configuration.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n...\nbutton: {\n    enabled: function() {\n        // return whether or not the button is enabled, based on the current\n        // configuration of the node\n        return !this.changed\n    },\n    visible: function() {\n        // return whether or not the button is visible, based on the current\n        // configuration of the node\n        return this.hasButton\n    },\n    onclick: function() { }\n},\n...\n```\n\n----------------------------------------\n\nTITLE: Creating a Node Edit Dialog Template in Node-RED\nDESCRIPTION: HTML template for a node's edit dialog that allows users to configure node properties. This example shows a simple form with a name field and a helpful tip.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/node-html.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/html\" data-template-name=\"node-type\">\n    <div class=\"form-row\">\n        <label for=\"node-input-name\"><i class=\"fa fa-tag\"></i> Name</label>\n        <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\">\n    </div>\n    <div class=\"form-tips\"><b>Tip:</b> This is here to help.</div>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Setting Node Status with i18n Messages\nDESCRIPTION: Shows how to set a node's status using internationalized messages, including an example using a core Node-RED status message.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/i18n.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nthis.status({fill:\"green\",shape:\"dot\",text:\"myNode.status.ready\"});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nthis.status({fill:\"green\",shape:\"dot\",text:\"node-red:common.status.connected\"});\n```\n\n----------------------------------------\n\nTITLE: Checking Node.js and npm versions in Command Prompt\nDESCRIPTION: This command checks the installed versions of Node.js and npm using the Windows Command Prompt.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/windows.md#2025-04-09_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nnode --version && npm --version\n```\n\n----------------------------------------\n\nTITLE: Referencing Core:show-selected-node-labels Action in Markdown\nDESCRIPTION: Markdown table showing the reference for the core:show-selected-node-labels action in Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/nodes.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:show-selected-node-labels</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Installing Arduino Nodes in Node-RED\nDESCRIPTION: Commands for installing the Arduino nodes in your Node-RED user directory. This includes checking the npm version and installing the required node-red-node-arduino package.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/interacting-with-arduino.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm i -g npm@latest\nhash -r\ncd ~/.node-red\nnpm install node-red-node-arduino\n```\n\n----------------------------------------\n\nTITLE: Configuring File Store Library in Node-RED Settings\nDESCRIPTION: Configuration object for adding a file store library source in the Node-RED settings.js file under the editorTheme section.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/library/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\neditorTheme: {\n    library: {\n        sources: [\n            {\n                id: \"team-collaboration-library\",\n                type: \"node-red-library-file-store\",\n                path: \"/Users/tom/work/team-library/\",\n                label: \"Team collaboration\",\n                icon: \"font-awesome/fa-users\"\n            }\n        ]\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: Setting a Value in Context in Node-RED Function Node\nDESCRIPTION: Shows how to store a value in flow context using the synchronous set method.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/writing-functions.md#2025-04-09_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nflow.set(\"count\", 123);\n```\n\n----------------------------------------\n\nTITLE: Node Edit Dialog Form Row Structure\nDESCRIPTION: A typical form row structure for a Node-RED node edit dialog, showing a labeled input field with an icon. This pattern should be used for each property in the node.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/edit-dialog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-row\">\n    <label for=\"node-input-name\"><i class=\"fa fa-tag\"></i> Name</label>\n    <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\">\n</div>\n```\n\n----------------------------------------\n\nTITLE: Merging Nodes/Groups in Node-RED Editor\nDESCRIPTION: Shows the menu option and action name for merging selected nodes or groups in the Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/groups.md#2025-04-09_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><i>none</i></td></tr>\n <tr><td>Menu option</td><td><code>Groups -&gt; Merge selection</code></td></tr>\n <tr><td>Action</td><td><code>core:merge-selection-to-group</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Examples Import Dialog Actions for Node-RED\nDESCRIPTION: Reference table showing the action for opening the examples import dialog in Node-RED, without keyboard shortcuts or menu options.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/import-export.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><i>none</i></td></tr>\n <tr><td>Menu option</td><td><i>none</i></td></tr>\n <tr><td>Action</td><td><code>core:show-examples-import-dialog</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Basic LED Blink Flow in Node-RED using Firmata\nDESCRIPTION: A JSON flow that creates a simple LED blink pattern on Arduino pin 13 using Firmata protocol. It includes an inject node with a timer, a function to toggle the state, and an Arduino output node.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/interacting-with-arduino.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[{\"id\":\"d7663aaf.47194\",\"type\":\"arduino-board\",\"device\":\"\"},{\"id\":\"dae8234f.2517e\",\"type\":\"inject\",\"name\":\"0.5s tick\",\"topic\":\"\",\"payload\":\"\",\"payloadType\":\"date\",\"repeat\":\"0.5\",\"crontab\":\"\",\"once\":false,\"x\":150,\"y\":100,\"z\":\"359a4b52.ca65b4\",\"wires\":[[\"56a6f8f2.a95908\"]]},{\"id\":\"2db61802.d249e8\",\"type\":\"arduino out\",\"name\":\"\",\"pin\":\"13\",\"state\":\"OUTPUT\",\"arduino\":\"d7663aaf.47194\",\"x\":570.5,\"y\":100,\"z\":\"359a4b52.ca65b4\",\"wires\":[]},{\"id\":\"56a6f8f2.a95908\",\"type\":\"function\",\"name\":\"Toggle output on input\",\"func\":\"\\n// If it does exist make it the inverse of what it was or else initialise it to false\\n// (context variables persist between calls to the function)\\ncontext.level = !context.level || false;\\n\\n// set the payload to the level and return\\nmsg.payload = context.level;\\nreturn msg;\",\"outputs\":1,\"noerr\":0,\"x\":358,\"y\":100,\"z\":\"359a4b52.ca65b4\",\"wires\":[[\"2db61802.d249e8\"]]}]\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory Context Store in Node-RED\nDESCRIPTION: This code snippet demonstrates how to configure the default Memory Context Store in Node-RED. It sets up the contextStorage object with a default store using the memory module.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/context/store/memory.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncontextStorage: {\n   default: {\n       module:\"memory\",\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Restarting Node-RED Service After Configuration Changes\nDESCRIPTION: Bash commands to reload the systemd daemon and restart the Node-RED service after modifying the service configuration file. These commands apply the changes made to the service definition.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/customising-systemd-on-pi.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl daemon-reload\nnode-red-stop\nnode-red-start\n```\n\n----------------------------------------\n\nTITLE: Toggle Button Group Event Handling\nDESCRIPTION: JavaScript for implementing toggle button functionality in the Node-RED edit dialog. This code should be placed in the oneditprepare function to manage the selected state of toggle buttons.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/edit-dialog.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".my-button-group\").on(\"click\", function() {\n    $(\".my-button-group\").removeClass(\"selected\");\n    $(this).addClass(\"selected\");\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing TypedInput Widget for String/Number/Boolean\nDESCRIPTION: Configuration for TypedInput widget that supports string, number, and boolean input types with type selection.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/edit-dialog.md#2025-04-09_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-example1\">\n<input type=\"hidden\" id=\"node-input-example1-type\">\n```\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"#node-input-example1\").typedInput({\n    type:\"str\",\n    types:[\"str\",\"num\",\"bool\"],\n    typeField: \"#node-input-example1-type\"\n})\n```\n\n----------------------------------------\n\nTITLE: Removing Nodes from Groups in Node-RED Editor\nDESCRIPTION: Provides the menu option and action name for removing nodes from a group in the Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/groups.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><i>none</i></td></tr>\n <tr><td>Menu option</td><td><code>Groups -&gt; Remove from group</code></td></tr>\n <tr><td>Action</td><td><code>core:remove-selection-from-group</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Library Export Dialog Actions for Node-RED\nDESCRIPTION: Reference table showing the action for opening the library export dialog in Node-RED, without keyboard shortcuts or menu options.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/import-export.md#2025-04-09_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><i>none</i></td></tr>\n <tr><td>Menu option</td><td><i>none</i></td></tr>\n <tr><td>Action</td><td><code>core:show-library-export-dialog</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: SystemD-specific PM2 Startup\nDESCRIPTION: Command to generate startup configuration specifically for systems using systemd.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/starting-node-red-on-boot.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npm2 startup systemd\n```\n\n----------------------------------------\n\nTITLE: Setting Width of EditableList in JavaScript\nDESCRIPTION: Demonstrates how to set the width of an EditableList using a custom method that ensures proper resizing of the component.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.input\").editableList('width', '200px');\n```\n\n----------------------------------------\n\nTITLE: Setting Function Global Context in Node-RED Configuration\nDESCRIPTION: This snippet demonstrates how to attach objects to the global function context in Node-RED, which can be accessed in function nodes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/configuration.md#2025-04-09_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nfunctionGlobalContext: { osModule:require('os') }\n```\n\n----------------------------------------\n\nTITLE: Setting Height of EditableList in JavaScript\nDESCRIPTION: Shows how to set the height of an EditableList using a custom method that ensures proper resizing of the component.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.input\").editableList('height', '200px');\n```\n\n----------------------------------------\n\nTITLE: Registering a Config Node Dependency in Node-RED\nDESCRIPTION: JavaScript code showing how to register a node's dependency on a configuration node type. This is added to the node's 'defaults' object with a 'type' property referencing the configuration node type.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/config-nodes.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndefaults: {\n   server: {value:\"\", type:\"remote-server\"},\n},\n```\n\n----------------------------------------\n\nTITLE: Ungrouping Nodes in Node-RED Editor\nDESCRIPTION: Demonstrates the keyboard shortcut, menu option, and action name for ungrouping nodes in the Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/groups.md#2025-04-09_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-Shift-u</code></td></tr>\n <tr><td>Menu option</td><td><code>Groups -&gt; Ungroup selection</code></td></tr>\n <tr><td>Action</td><td><code>core:ungroup-selection</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts for Node-RED Editor\nDESCRIPTION: Keyboard shortcuts for controlling zoom levels and accessing user settings in the Node-RED editor workspace.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/index.md#2025-04-09_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nCtrl/⌘-=    # Zoom in\nCtrl/⌘-0    # Reset zoom\nCtrl/⌘--    # Zoom out\nCtrl/⌘-,    # Show user settings\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Basic Authentication for Node-RED Editor\nDESCRIPTION: Shows how to set up HTTP Basic Authentication on the Node-RED editor UI with a password hash. Includes an example command to generate the MD5 hash of a password.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/configuration.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nhttpAdminAuth: {user:\"nol\", pass:\"5f4dcc3b5aa765d61d8327deb882cf99\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Git Workflow in Node-RED Settings (JSON)\nDESCRIPTION: Example of how to set the default Git workflow to the simplified version using the editorTheme.projects.workflow option in the settings file.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2021-04-08-version-1-3-released.md#2025-04-09_snippet_5\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"editorTheme\": {\n    \"projects\": {\n      \"workflow\": \"simplified\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Flows Runtime State Response in Node-RED API (JSON)\nDESCRIPTION: Example JSON response when setting the runtime state of flows using the POST /flows/state endpoint. The response includes the current state of the flows, which can be either 'start' or 'stop'.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/flows/state/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"state\": \"stop\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Node-RED Editor Theme in JavaScript\nDESCRIPTION: This snippet demonstrates how to configure various aspects of the Node-RED editor theme, including page layout, header, deploy button, menu items, palette, projects, and code editor settings.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/configuration.md#2025-04-09_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\neditorTheme: {\n    page: {\n        title: \"Node-RED\",\n        favicon: \"/absolute/path/to/theme/icon\",\n        css: \"/absolute/path/to/custom/css/file\",\n        scripts: [ \"/absolute/path/to/custom/script/file\", \"/another/script/file\"]\n    },\n    header: {\n        title: \"Node-RED\",\n        image: \"/absolute/path/to/header/image\", // or null to remove image\n        url: \"http://nodered.org\" // optional url to make the header text/image a link to this url\n    },\n    deployButton: {\n        type:\"simple\",\n        label:\"Save\",\n        icon: \"/absolute/path/to/deploy/button/image\" // or null to remove image\n    },\n    menu: { // Hide unwanted menu items by id. see packages/node_modules/@node-red/editor-client/src/js/red.js:loadEditor for complete list\n        \"menu-item-import-library\": false,\n        \"menu-item-export-library\": false,\n        \"menu-item-keyboard-shortcuts\": false,\n        \"menu-item-help\": {\n            label: \"Alternative Help Link Text\",\n            url: \"http://example.com\"\n        }\n    },\n    tours: false, // disable the Welcome Tour for new users\n    userMenu: false, // Hide the user-menu even if adminAuth is enabled\n    login: {\n        image: \"/absolute/path/to/login/page/big/image\" // a 256x256 image\n    },\n    logout: {\n        redirect: \"http://example.com\"\n    },\n    palette: {\n        editable: true, // *Deprecated* - use externalModules.palette.allowInstall instead\n        catalogues: [   // Alternative palette manager catalogues\n            'https://catalogue.nodered.org/catalogue.json'\n        ],\n        theme: [ // Override node colours - rules test against category/type by RegExp.\n            { category: \".*\", type: \".*\", color: \"#f0f\" }\n        ]\n    },\n    projects: {\n        enabled: false // Enable the projects feature\n    },\n    theme: \"\", // Select a color theme for the editor. See https://github.com/node-red-contrib-themes/theme-collection for a collection of themes to choose from\n    codeEditor: {\n        lib: \"ace\", // Select the text editor component used by the editor. Defaults to \"ace\", but can be set to \"ace\" or \"monaco\"\n        options: {\n            // The following only apply if the editor is set to \"monaco\"\n            theme: \"vs\", // Select a color theme for the text editor component. Must match the file name of a theme in packages/node_modules/@node-red/editor-client/src/vendor/monaco/dist/theme\n        }\n    },\n    mermaid: {\n        theme: \"default\" // Select a color theme for the Mermaid diagramming and charting tool. Must match the name of a theme in https://mermaid.js.org/config/theming.html#available-themes\n    }\n},\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts and Actions for Flow Export\nDESCRIPTION: Reference table showing the keyboard shortcut, menu option, and action for opening the flow export dialog in Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/import-export.md#2025-04-09_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-e</code></td></tr>\n <tr><td>Menu option</td><td><code>Export</code></td></tr>\n <tr><td>Action</td><td><code>core:show-export-dialog</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Implementing Node Property Usage\nDESCRIPTION: JavaScript implementation showing how to use node properties in the runtime\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/properties.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction LowerCaseNode(config) {\n    RED.nodes.createNode(this,config);\n    this.prefix = config.prefix;\n    var node = this;\n    this.on('input', function(msg) {\n        msg.payload = node.prefix + msg.payload.toLowerCase();\n        node.send(msg);\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: Version Compatibility Table in Markdown\nDESCRIPTION: A markdown table showing the minimum Node.js version requirements for different Node-RED versions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/node-versions.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nNode-RED Version | Minimum Node.js Version\n---|---\n4.x | 18\n3.x | 14\n2.x | 12\n```\n\n----------------------------------------\n\nTITLE: Rate Limiting Middleware for HTTP Nodes\nDESCRIPTION: Custom middleware implementation using express-rate-limit to control access rate for HTTP In nodes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// Run `npm install express-rate-limit` on `~/.node-red/` directory in advance\nvar rateLimit = require(\"express-rate-limit\");\nmodule.exports = {\n    httpNodeMiddleware: rateLimit({\n        windowMs: 1000, // 1000 milliseconds is set as the window time.\n        max: 10 // limit access rate to 10 requests/second\n    })\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Language Preference in Node-RED Settings (JSON)\nDESCRIPTION: Example of how to explicitly set the language for the Node-RED runtime using the new lang option in the settings file.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2021-04-08-version-1-3-released.md#2025-04-09_snippet_4\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"lang\": \"en-US\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Johnny-Five in Node-RED settings.js\nDESCRIPTION: Configuration for the Node-RED settings.js file to make Johnny-Five available in the global context. This allows using Johnny-Five functionality within function nodes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/interacting-with-arduino.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunctionGlobalContext: {\n   jfive:require(\"johnny-five\"),                        // this is the reference to the library\n   j5board:require(\"johnny-five\").Board({repl:false})   // this actually starts the board link...\n},\n```\n\n----------------------------------------\n\nTITLE: HTTP Node Basic Authentication Configuration\nDESCRIPTION: Configuration for securing HTTP In nodes using basic authentication with username and bcrypt hashed password.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nhttpNodeAuth: {user:\"user\",pass:\"$2a$08$zZWtXTja0fB1pzD4sHCMyOCMYz2Z6dNbM6tl8sJogENOMcxWV9DN.\"}\n```\n\n----------------------------------------\n\nTITLE: Setting npm global cache in PowerShell\nDESCRIPTION: These commands create a new directory for the npm cache and set it as the global cache location.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/windows.md#2025-04-09_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nmkdir $env:ALLUSERSPROFILE\\npmglobal-cache\nnpm config set cache $env:ALLUSERSPROFILE\\npmglobal-cache --global\n```\n\n----------------------------------------\n\nTITLE: Setting Node Icon in Node-RED\nDESCRIPTION: Example of setting a static icon for a Node-RED node using the icon property. The icon can be a stock icon, custom icon, or Font Awesome icon.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nicon: \"file.svg\"\n```\n\n----------------------------------------\n\nTITLE: Library Import Dialog Actions for Node-RED\nDESCRIPTION: Reference table showing the action for opening the library import dialog in Node-RED, without keyboard shortcuts or menu options.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/import-export.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><i>none</i></td></tr>\n <tr><td>Menu option</td><td><i>none</i></td></tr>\n <tr><td>Action</td><td><code>core:show-library-import-dialog</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Starting Node-RED with PM2\nDESCRIPTION: Command to start Node-RED as a background process using PM2. Includes verbose logging flag.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/starting-node-red-on-boot.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npm2 start /usr/bin/node-red -- -v\n```\n\n----------------------------------------\n\nTITLE: Project Features Markdown List\nDESCRIPTION: A markdown formatted list of planned improvements for the Node-RED Projects feature, including dependency management, version access, settings file integration, and Docker support.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2020-10-13-future-plans.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n - *Managing project dependencies*. At the moment the editor lets you edit the\\n   dependencies yourself, and it tries to give some hints on what needs doing,\\n   but that whole user experience needs to be improved.\\n - *Accessing earlier versions of a project*. Having a full history of changes\\n   is not much use if you can't easily go back to an earlier version. It is\\n   possible to do on the command-line - but that isn't the right answer if we\\n   want this to be accessible to all users within the editor.\\n - *Adding `settings.js` to a project*. For a project to be a complete deployable\\n   artefact, it needs a settings file. At the moment, that has to be created and\\n   added to the project manually.\\n - *Adding a `Dockerfile` to a project*. A common pattern for deploying projects\\n   into a production environment is via some form of containerisation.\n```\n\n----------------------------------------\n\nTITLE: OAuth Twitter Authentication Configuration\nDESCRIPTION: Twitter-based OAuth authentication setup with custom strategy configuration and user permissions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nadminAuth: {\n    type:\"strategy\",\n    strategy: {\n        name: \"twitter\",\n        label: 'Sign in with Twitter',\n        icon:\"fa-twitter\",\n        strategy: require(\"passport-twitter\").Strategy,\n        options: {\n            consumerKey: TWITTER_APP_CONSUMER_KEY,\n            consumerSecret: TWITTER_APP_CONSUMER_SECRET,\n            callbackURL: \"http://example.com/auth/strategy/callback\",\n            verify: function(token, tokenSecret, profile, done) {\n                done(null, profile);\n            }\n        },\n    },\n    users: [\n       { username: \"knolleary\",permissions: [\"*\"]}\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Library Store Plugin Package Configuration\nDESCRIPTION: Package.json configuration for creating a custom Node-RED library store plugin, including required Node-RED plugin registration.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/library/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"your-custom-library-store\",\n    \"version\": \"1.0.0\",\n    \"description\": \"A Custom Library plugin for Node-RED\",\n    \"keywords\": [\n        \"node-red\"\n    ],\n    \"node-red\": {\n        \"plugins\": {\n            \"customstore\": \"store.js\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating HTML List with Mustache Template in Node-RED\nDESCRIPTION: This snippet demonstrates how to use a Mustache template in the Template node to generate an HTML list from an array of names stored in msg.payload.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/nodes.md#2025-04-09_snippet_0\n\nLANGUAGE: Mustache\nCODE:\n```\n<ul>\n{{#payload}}\n  <li>{{.}}</li>\n{{/payload}}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: User Authentication Configuration\nDESCRIPTION: Username/password based authentication setup with bcrypt hashed passwords and permission levels.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/securing-node-red.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nadminAuth: {\n    type: \"credentials\",\n    users: [\n        {\n            username: \"admin\",\n            password: \"$2a$08$zZWtXTja0fB1pzD4sHCMyOCMYz2Z6dNbM6tl8sJogENOMcxWV9DN.\",\n            permissions: \"*\"\n        },\n        {\n            username: \"george\",\n            password: \"$2b$08$wuAqPiKJlVN27eF5qJp.RuQYuy6ZYONW7a/UWYxDTtwKFCdB8F19y\",\n            permissions: \"read\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Module API Documentation\nDESCRIPTION: YAML frontmatter configuration block that defines the page layout, table of contents file, title and slug for the Node-RED Module API documentation page.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/modules/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: docs-api\ntoc: toc-api-modules.html\ntitle: Module APIs\nslug: modules\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Font Awesome Icon in Node-RED\nDESCRIPTION: Demonstrates how to use a Font Awesome 4.7 icon as a node icon by specifying the font-awesome prefix and icon name.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nicon: \"font-awesome/fa-automobile\"\n```\n\n----------------------------------------\n\nTITLE: Search Action Identifier in Node-RED\nDESCRIPTION: The action identifier for the search function that can be used in custom keyboard shortcuts or other editor customizations.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/search.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\ncore:search\n```\n\n----------------------------------------\n\nTITLE: Setting Target Node-RED Instance\nDESCRIPTION: Command to set the target URL for the node-red-admin tool to connect to a remote Node-RED instance.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/node-red-admin.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode-red-admin target http://node-red.example.com/admin\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Context Export in Node-RED Runtime\nDESCRIPTION: A new setting 'exportGlobalContextKeys' has been added to control the visibility of global context values in the context data sidebar. By default, it's set to false for new installations.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-03-12-version-0-20-released.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexportGlobalContextKeys: false\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Variables in Node-RED Settings File\nDESCRIPTION: Demonstrates how to define environment variables in the Node-RED settings file when running as a service, placed outside the module.exports section.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/environment-variables.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nprocess.env.FOO='World';\n```\n\n----------------------------------------\n\nTITLE: Autostarting Node-RED using Termux:Boot\nDESCRIPTION: This snippet shows a shell script that can be used with Termux:Boot to automatically start Node-RED on device boot. It uses termux-wake-lock to prevent the device from sleeping.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/android.md#2025-04-09_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n#!/data/data/com.termux/files/usr/bin/sh\ntermux-wake-lock\nnode /data/data/com.termux/files/usr/bin/node-red\n```\n\n----------------------------------------\n\nTITLE: Installing Node Modules via NPM Command\nDESCRIPTION: Command for installing a new node module from the command-line within the Node-RED user data directory.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/adding-nodes.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install <npm-package-name>\n```\n\n----------------------------------------\n\nTITLE: Setting Node Background Color\nDESCRIPTION: Shows how to set the background color of a node using a hexadecimal color code.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ncolor: \"#a6bbcf\"\n```\n\n----------------------------------------\n\nTITLE: Using Keyboard Shortcut for Search in Node-RED Editor\nDESCRIPTION: The keyboard shortcut to access the search function in the Node-RED editor. This allows quick access to the search dialog without using the mouse.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/search.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nCtrl/⌘-f\n```\n\n----------------------------------------\n\nTITLE: Node-RED Settings File Path Log Output\nDESCRIPTION: Example of the log output showing the path to the active settings file when Node-RED starts up\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/settings-file.md#2025-04-09_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n22 Jun 12:34:56 - [info] Settings file  : /Users/nol/.node-red/settings.js\n```\n\n----------------------------------------\n\nTITLE: Referencing Delete Node Action in Node-RED\nDESCRIPTION: This code snippet shows the action reference and key shortcut for deleting a node while keeping its wires connected in Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/wires.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref double-column\">\n    <tr><th colspan=\"2\">Reference</th></tr>\n    <tr><td>Action</td><td><code>core:core:delete-selection-and-reconnect</code></td></tr>\n    <tr><td>Key shortcut</td><td><kbd>Ctrl/⌘-delete</kbd></td></tr>\n  </table>\n```\n\n----------------------------------------\n\nTITLE: Accessing Palette Manager via Menu Option in Node-RED\nDESCRIPTION: This code snippet displays the menu option for accessing the Palette Manager in Node-RED. It's part of a reference table that includes keyboard shortcuts and action commands.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/palette/manager.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<tr><td>Menu option</td><td><code>Manage palette</code></td></tr>\n```\n\n----------------------------------------\n\nTITLE: Resulting HTML Output from Mustache Template in Node-RED\nDESCRIPTION: This snippet shows the HTML output generated by the Mustache template when processing an array of names ['Nick', 'Dave', 'Claire'].\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/nodes.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<ul>\n  <li>Nick</li>\n  <li>Dave</li>\n  <li>Claire</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Referencing Core:enable-selected-nodes Action in Markdown\nDESCRIPTION: Markdown table showing the reference for the core:enable-selected-nodes action in Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/nodes.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:enable-selected-nodes</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Upgrading Node-RED using npm\nDESCRIPTION: Command to upgrade Node-RED to the latest version when installed as a global npm package. Windows users should omit the 'sudo' prefix.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm install -g --unsafe-perm node-red\n```\n\n----------------------------------------\n\nTITLE: Static Port Labels Configuration\nDESCRIPTION: Example of setting static input and output port labels for a node.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ninputLabels: \"parameter for input\",\noutputLabels: [\"stdout\",\"stderr\",\"rc\"]\n```\n\n----------------------------------------\n\nTITLE: Menu References for Subflow Creation\nDESCRIPTION: Code references for creating subflows, including menu options and action commands\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/subflows.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nSubflows -> Create subflow\\ncore:create-subflow\n```\n\n----------------------------------------\n\nTITLE: Basic AutoComplete Implementation with HTML Input\nDESCRIPTION: HTML markup for a basic example of an input field that will have autoComplete functionality.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/autoComplete/index.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-example1\">\n```\n\n----------------------------------------\n\nTITLE: Upstream and Downstream Node Selection in Node-RED\nDESCRIPTION: Reference tables for selecting upstream or downstream nodes in the flow, showing keyboard shortcuts and action codes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/selection.md#2025-04-09_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Alt-s u</code></td></tr>\n <tr><td>Action</td><td><code>core:select-upstream-nodes</code></td></tr>\n</table>\n\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Alt-s d</code></td></tr>\n <tr><td>Action</td><td><code>core:select-downstream-nodes</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Creating a Group in Node-RED Editor\nDESCRIPTION: Shows the keyboard shortcut, menu option, and action name for creating a group in the Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/groups.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-Shift-g</code></td></tr>\n <tr><td>Menu option</td><td><code>Groups -&gt; Group selection</code></td></tr>\n <tr><td>Action</td><td><code>core:group-selection</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents with jQuery in Node-RED Documentation\nDESCRIPTION: This JavaScript code dynamically generates a table of contents for the Node-RED concepts page. It iterates through each <dt> element with a <b> tag, extracts the text and id, and creates a corresponding list item in the table of contents.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/concepts.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$(function() {\n    $(\"dt b\").each(function() {\n        $('<li><a href=\"#'+$(this).attr('id')+'\">' + $(this).text() + '</a></li>').appendTo(\"#concept-toc\")\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Node Selection Actions in Node-RED Editor\nDESCRIPTION: Core action codes and keyboard shortcuts for selecting connected, upstream, and downstream nodes in the Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/selection.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:select-connected-nodes</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Alt-s c</code></td></tr>\n</table>\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:select-upstream-nodes</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Alt-s u</code></td></tr>\n</table>\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:select-downstream-nodes</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Alt-s d</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Reusing Group Styles in Node-RED Editor\nDESCRIPTION: Demonstrates the keyboard shortcuts and action names for copying and pasting group styles in the Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/groups.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-Shift-c</code></td></tr>\n <tr><td>Action</td><td><code>core:copy-group-style</code></td></tr>\n</table>\n\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-Shift-v</code></td></tr>\n <tr><td>Action</td><td><code>core:paste-group-style</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Dynamic Port Labels Function\nDESCRIPTION: Shows how to generate dynamic output port labels using a function that receives the port index.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\noutputLabels: function(index) {\n    return \"my port number \"+index;\n}\n```\n\n----------------------------------------\n\nTITLE: Menu References for Converting Selection to Subflow\nDESCRIPTION: Code references for converting selected nodes to a subflow, including menu options and action commands\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/subflows.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSubflows -> Selection to Subflow\\ncore:convert-to-subflow\n```\n\n----------------------------------------\n\nTITLE: Displaying Refresh Button Icon in HTML\nDESCRIPTION: This HTML snippet shows an inline icon for the refresh button using Font Awesome, styled with custom CSS to match the description in the text.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/context.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<i style=\"border-radius: 2px; display:inline-block;text-align:center; width: 30px; color: #777; border: 1px solid #777; padding: 6px;\" class=\"fa fa-refresh\"></i>\n```\n\n----------------------------------------\n\nTITLE: Styling Charts and Visualizations with CSS\nDESCRIPTION: This CSS code defines styles for various chart components including bars, labels, legends, and tooltips. It also includes specific styles for a treemap visualization.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/survey/2023/index.md#2025-04-09_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\nh3 {\n    padding-top: 20px;\n}\n\n.chart {\n    padding: 10px 0 20px;\n}\n.chart h4 {\n    margin: 2px 0 20px;\n}\n.chart ol {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n}\n.chart ol li {\n    margin-bottom: 2px;\n}\n.chart-label {\n    font-size: 0.8em;\n    padding-left: 255px;\n    color: #aaa;\n}\n.chart-key {\n    margin: 0 5px 5px;\n}\n.chart-key-swatch {\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    border-radius: 1px;\n    margin-right: 3px;\n}\n.chart-bar-label {\n    text-align: right;\n    width: 250px;\n    padding: 5px;\n    margin-bottom: 1px;\n    display: inline-block;\n    font-size: 0.8em;\n    vertical-align:middle;\n    line-height: 1em;\n    border-right: 1px solid #B68181;\n    min-height: 30px;\n}\n.chart-bar-value {\n    font-family: monospace;\n    vertical-align:middle;\n    display: inline-block;\n    width: 50px;\n    padding: 5px;\n    font-size: 0.8em;\n    line-height: 1em;\n    border-right: 1px solid #B68181;\n    min-height: 30px;\n}\n.chart-bar {\n    vertical-align:middle;\n    display: inline-block;\n    width: calc(100% - 310px);\n    margin-left: 5px;\n    background: #f9f9f9;\n    border-radius: 2px;\n    height: 30px;\n}\n.chart-bar-previous {\n    display: inline-flex;\n    flex-direction: column;\n}\n.chart-bar-fill {\n    position: relative;\n    display: inline-block;\n    height: 100%;\n    box-sizing: border-box;\n    border: 1px solid #000;\n    font-size: 0.6em;\n    color: #eee;\n    padding-left: 2px;\n}\n.chart-bar-fill:first-child {\n    border-top-left-radius: 2px;\n    border-bottom-left-radius: 2px;\n}\n.chart-bar:not(.chart-bar-previous) .chart-bar-fill:not(:first-child) {\n    border-left: 1px solid #f9f9f9\n}\n.chart-bar-previous .chart-bar-fill:first-child {\n    border-bottom-left-radius: 0;\n    margin-botton: 2px;\n    height: calc(30% - 2px);\n}\n.chart-bar-previous .chart-bar-fill:not(:first-child) {\n    border-bottom-left-radius: 2px;\n    height: calc(70% - 2px);\n}\n\n.chart-bar-fill-series-0 { border-color: #B68181; background: #B68181; }\n.chart-bar-fill-series-1 { border-color: #FCD0A1; background: #FCD0A1; }\n.chart-bar-fill-series-2 { border-color: #B1B695; background: #B1B695; }\n.chart-bar-fill-series-3 { border-color: #A393BF; background: #A393BF; }\n.chart-bar-fill-series-4 { border-color: #AFD2E9; background: #AFD2E9; }\n.chart-bar-fill-series-previous { border-color: #f3e0e0; background: #f3e0e0; }\n\n.chart-legend {\n    margin-top: 5px;\n    text-align: center;\n    font-size: 0.8em;\n    color: #666;\n    margin-left: 280px;\n}\n.chart-legend-label {\n    margin-left: 3px;\n    margin-right: 15px;\n    vertical-align: middle;\n}\n\n.chart-legend-swatch {\n    display: inline-block;\n    width: 20px;\n    height: 10px;\n    vertical-align: middle;\n}\n\n.chart-bar-fill:hover .popover {\n    opacity:1;\n}\n\n.popover {\n    pointer-events: none;\n    width: 100px;\n    text-align: center;\n    opacity:0;\n    transition: opacity 1s;\n    position: absolute;\n    height: auto;\n    background: #333;\n    color: #eee;\n    border-radius: 4px;\n    z-index: 1000;\n    border-color: #333;\n    top: -120%;\n    left: calc(50% - 50px);\n    font-size: 12px;\n    padding: 5px 7px;\n    line-height: 1.8em;\n}\n.chart-bar-previous .popover {\n    /* inline-flex means the positioning has to be absolute */\n    top: -38px;\n}\n.popover:after, .popover:before {\n    border: solid transparent;\n    content: \" \";\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n    top: 100%;\n    left: 50%;\n}\n\n\n.popover:after {\n    border-color: transparent;\n    border-top-color: #333;\n    border-width: 7px;\n    margin-left: -7px;\n}\n.popover:before {\n    border-color: transparent;\n    border-top-color: #333;\n    border-width: 8px;\n    margin-left: -8px;\n}\n\n\n#comments-treemap {\n    background: #ddd;\n    height: 500px;\n}\n.treemap-label {\n    font-size: 0.8em;\n    color: #aaa;\n}\ntext {\n    fill: #f3f3f3;\n    font-size: 11px;\n    pointer-events: none;\n}\n.titleBar text {\n    fill: #555;\n    font-size: 14px;\n}\nrect {\n    stroke: #fff;\n    fill-opacity: 0.6;\n}\nrect.parent,\n.titleBar rect {\n    stroke-width: 2px;\n}\n\n.titleBar rect {\n    fill: white;\n}\n\n.children rect.parent,\n.leaf:hover rect.child,\n.titleBar rect {\n    cursor: pointer;\n}\n\n.children rect.parent {\n    <!-- fill-opacity: .5; -->\n}\n\n.children:hover rect.child {\n    fill-opacity: 1;\n}\n.leaf:hover rect.child {\n    fill-opacity: 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Select Connected Nodes Action Reference in Node-RED\nDESCRIPTION: Reference table for selecting all nodes connected to a particular node, showing keyboard shortcuts, menu options, and action code.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/selection.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Alt-s c</code></td></tr>\n <tr><td>Menu option</td><td><code>Edit -&gt; Select all</code></td></tr>\n <tr><td>Action</td><td><code>core:select-connected-nodes</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Example Node-RED Module Structure\nDESCRIPTION: Demonstrates the directory structure for a Node-RED module that includes resource files in a resources directory. Shows how files are organized and exposed through URLs.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/resources.md#2025-04-09_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nnode-red-node-example\n |- resources\n |   |- image.png\n |   \\- library.js\n |- example-node.js\n |- example-node.html\n \\- package.json\n```\n\n----------------------------------------\n\nTITLE: Showing Debug Tab Action Reference in Node-RED\nDESCRIPTION: Action reference for showing the Debug tab in the Node-RED editor, including the action name and keyboard shortcut.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/debug.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:show-debug-tab</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-g d</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Button Click Functionality in Node-RED Nodes\nDESCRIPTION: Sets up a basic button on a Node-RED editor node by defining an onclick function that is called when the button is clicked. This is the minimum configuration needed to add a button to a node.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n...\nbutton: {\n    onclick: function() {\n        // Called when the button is clicked\n    }\n},\n...\n```\n\n----------------------------------------\n\nTITLE: Defining Action Reference Table in HTML\nDESCRIPTION: This HTML table provides a reference for the action to show the context tab, including the action code and key shortcut.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/context.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:show-context-tab</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-g x</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: HTML Keyboard Shortcut Reference Table\nDESCRIPTION: HTML table showing the keyboard shortcuts, menu options, and actions for toggling the sidebar visibility in the Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/index.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-Space</code></td></tr>\n <tr><td>Menu option</td><td><code>View -&gt; Show sidebar</code></td></tr>\n <tr><td>Action</td><td><code>core:toggle-sidebar</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Importing JavaScript Libraries for Survey Charts\nDESCRIPTION: Script tags that import the necessary JavaScript libraries for rendering survey data charts. The code includes a local charts.js file and the D3.js visualization library from a CDN.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/survey/2023/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<script src=\"./charts.js\"></script>\n<script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n```\n\n----------------------------------------\n\nTITLE: HTML Image with Caption\nDESCRIPTION: HTML markup for displaying the Help Sidebar image with a caption, aligned to the right with a specific width.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/help.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"width: 300px\" class=\"figure align-right\">\n  <img src=\"../images/editor-sidebar-help.png\" alt=\"Help Sidebar\">\n  <p class=\"caption\">Help Sidebar</p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Clipboard Operations Reference in Node-RED Editor\nDESCRIPTION: Reference tables for copy, cut, and paste operations in the Node-RED editor, showing action codes and keyboard shortcuts.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/selection.md#2025-04-09_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:copy-selection-to-internal-clipboard</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-c</code></td></tr>\n</table>\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:cut-selection-to-internal-clipboard</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-x</code></td></tr>\n</table>\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:paste-selection-from-internal-clipboard</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-v</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Core Information Tab Shortcut Reference in Node-RED\nDESCRIPTION: Reference for the action command and keyboard shortcut to open the Information tab in the Node-RED editor sidebar.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/info.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:show-info-tab</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-g i</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Node Alignment Configuration\nDESCRIPTION: Demonstrates how to set right alignment for nodes that typically appear at the end of a flow.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nalign: 'right'\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts and Actions for Flow Import\nDESCRIPTION: Reference table showing the keyboard shortcut, menu option, and action for opening the flow import dialog in Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/import-export.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-i</code></td></tr>\n <tr><td>Menu option</td><td><code>Import</code></td></tr>\n <tr><td>Action</td><td><code>core:show-import-dialog</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Creating Toggle Buttons for Node-RED Nodes\nDESCRIPTION: Implements a toggle button similar to those found in the Debug node. This configuration requires a property in the node's defaults object to store the button state, and uses the toggle property to specify which property should be toggled when the button is clicked.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n...\ndefaults: {\n    ...\n    buttonState: {value: true}\n    ...\n},\nbutton: {\n    toggle: \"buttonState\",\n    onclick: function() { }\n}\n...\n```\n\n----------------------------------------\n\nTITLE: Accessing Palette Manager via Action Command in Node-RED\nDESCRIPTION: This code snippet shows the action command for accessing the Palette Manager in Node-RED. It's part of a reference table that includes keyboard shortcuts and menu options.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/palette/manager.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<tr><td>Action</td><td><code>core:manage-palette</code></td></tr>\n```\n\n----------------------------------------\n\nTITLE: View Action Commands in Node-RED Editor\nDESCRIPTION: Core action commands for controlling the workspace view, including zoom controls and navigator toggle.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/index.md#2025-04-09_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncore:zoom-in\ncore:zoom-reset\ncore:zoom-out\ncore:toggle-navigator\ncore:show-user-settings\n```\n\n----------------------------------------\n\nTITLE: Initializing Survey Data Visualization with jQuery\nDESCRIPTION: JavaScript code that loads survey data from JSON files and initializes histogram and treemap visualizations using jQuery and custom RED.chart methods\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/survey/2019/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n$(function() {\n    $.getJSON(\"data.json\", function(data) {\n        for (var id in data) {\n            if (data.hasOwnProperty(id)) {\n                var el = $(\"#\"+id);\n                if (el.length) {\n                    var opts = data[id];\n                    opts.id = \"#\"+id;\n                    RED.chart.histogram(opts)\n                }\n            }\n        }\n    });\n    $.getJSON(\"comments.json\", function(data) {\n        RED.chart.treeMap({id:\"#comments-treemap\",data:data})\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Dynamic Label Style Configuration\nDESCRIPTION: Shows how to dynamically set the CSS style of a node label based on whether the name property is set.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/appearance.md#2025-04-09_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nlabelStyle: function() {\n    return this.name?\"node_label_italic\":\"\";\n}\n```\n\n----------------------------------------\n\nTITLE: Node Alignment Actions Table\nDESCRIPTION: Table showing the available node alignment actions and their corresponding keyboard shortcuts in Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/arrange.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nAction | Key shortcut\\n-------|--------\\n`core:align-selection-to-grid` | _none_\\n`core:align-selection-to-left` | `Alt-a l`\\n`core:align-selection-to-right` | `Alt-a r`\\n`core:align-selection-to-top` | `Alt-a t`\\n`core:align-selection-to-bottom` | `Alt-a b`\\n`core:align-selection-to-middle` | `Alt-a m`\\n`core:align-selection-to-center` | `Alt-a c`\\n`core:distribute-selection-horizontally` | `Alt-a h`\\n`core:distribute-selection-vertically` | `Alt-a v`\n```\n\n----------------------------------------\n\nTITLE: Referencing Core:hide-selected-node-labels Action in Markdown\nDESCRIPTION: Markdown table showing the reference for the core:hide-selected-node-labels action in Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/nodes.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:hide-selected-node-labels</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Node Edit Dialog HTML Template Structure\nDESCRIPTION: The basic structure of a Node-RED node edit dialog HTML template. This snippet shows how to define the script element with the proper type and data-template-name attribute.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/edit-dialog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/html\" data-template-name=\"node-type\">\n    <!-- edit dialog content  -->\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing BeagleBone-specific I/O Nodes for Node-RED\nDESCRIPTION: Command to install BeagleBone-specific Node-RED nodes that provide direct access to I/O pins. This includes beaglebone-io, johnny-five, and node-red-contrib-gpio packages for hardware interaction.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/beaglebone.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm install -g --unsafe-perm beaglebone-io johnny-five node-red-contrib-gpio\n```\n\n----------------------------------------\n\nTITLE: Setting Node Status in Node-RED with JavaScript\nDESCRIPTION: Examples of using the status function to indicate a node's current state. The first example shows how to display a disconnected state with a red ring icon, while the second shows a connected state with a green dot icon.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/status.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nthis.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n\nthis.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for JavaScript Editor Page\nDESCRIPTION: YAML configuration block defining the page layout, navigation structure, and title for the JavaScript editor documentation page.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/editors/js.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: docs-editor-guide\nslug:\n  - url: /docs/user-guide/editor\n    label: editor\n  - url: \"/docs/user-guide/editor/editors\"\n    label: \"type-editor\"\n  - javascript\ntoc: toc-editor-guide.html\ntitle: \"Editors: JavaScript\"\n---\n```\n\n----------------------------------------\n\nTITLE: Accessing Search via Menu Option in Node-RED\nDESCRIPTION: The menu option to open the search dialog in the Node-RED editor. This can be found in the editor's menu system.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/search.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSearch flows\n```\n\n----------------------------------------\n\nTITLE: Chart Container Elements\nDESCRIPTION: HTML div elements used as containers for various survey result charts and visualizations.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/survey/2019/index.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"chart\" id=\"you-and-nr-01\"></div>\n<div class=\"chart\" id=\"you-and-nr-02\"></div>\n```\n\n----------------------------------------\n\nTITLE: Defining Example Flow File Path in Node-RED Package\nDESCRIPTION: Shows the file path structure for including an example flow in a Node-RED node package. The file name becomes the menu entry in the Examples section of the library import menu.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/examples.md#2025-04-09_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nexamples\\My Great Example.json\n```\n\n----------------------------------------\n\nTITLE: Starting Node-RED with Memory Constraints\nDESCRIPTION: Command for running Node-RED with PM2 on memory-constrained devices like Raspberry Pi, limiting old space size to 128MB.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/starting-node-red-on-boot.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npm2 start /usr/bin/node-red --node-args=\"--max-old-space-size=128\" -- -v\n```\n\n----------------------------------------\n\nTITLE: Referencing Detach Node Action in Node-RED\nDESCRIPTION: This code snippet shows the action reference for detaching a node from wires without deleting it in Node-RED. Note that there is no default key shortcut assigned.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/wires.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref double-column\">\n    <tr><th colspan=\"2\">Reference</th></tr>\n    <tr><td>Action</td><td><code>core:detach-selected-nodes</code></td></tr>\n    <tr><td>Key shortcut</td><td><code>*Not assigned</code></td></tr>\n  </table>\n```\n\n----------------------------------------\n\nTITLE: Accessing Context Objects in Node-RED Custom Nodes (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to access different scopes of context (Node, Flow, and Global) within a custom Node-RED node. Each context object provides get/set functions for data storage and retrieval.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/context.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Access the node's context object\nvar nodeContext = this.context();\n\nvar flowContext = this.context().flow;\n\nvar globalContext = this.context().global;\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for JSONata Expression Editor Documentation\nDESCRIPTION: YAML front matter block defining metadata for a Node-RED documentation page about the JSONata Expression editor. It specifies the layout, URL structure, table of contents file, and page title.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/editors/jsonata.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: docs-editor-guide\nslug:\n  - url: /docs/user-guide/editor\n    label: editor\n  - url: \"/docs/user-guide/editor/editors\"\n    label: \"type-editor\"\n  - jsonata\ntoc: toc-editor-guide.html\ntitle: \"Editors: JSONata Expression\"\n---\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcut for Showing Config Tab in Node-RED Editor\nDESCRIPTION: The keyboard shortcut to show the Configuration nodes tab in the Node-RED editor sidebar. This action is identified by the code 'core:show-config-tab'.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/config.md#2025-04-09_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCtrl/⌘-g c\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Node-RED Survey Page\nDESCRIPTION: YAML configuration block that defines the page layout, title, and slug for the Node-RED community surveys page\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/survey/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: about-single\ntitle: Community Surveys\nslug:\n  - survey\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring package.json for a Node-RED Subflow Module\nDESCRIPTION: Example package.json configuration for a Node-RED subflow module. It includes basic npm package metadata, Node-RED specific configuration to register the subflow, and dependency declarations for both Node-RED and npm.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/packaging-subflows.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"node-red-contrib-\",\n  \"version\": \"1.0.1\",\n  \"description\": \"\",\n  \"keywords\": [],\n  \"license\": \"ISC\",\n  \"node-red\": {\n      \"nodes\": {\n          \"test-subflow\": \"subflow.js\"\n      },\n      \"dependencies\": [\n          \"node-red-node-random\"\n      ]\n  },\n  \"dependencies\": {\n      \"node-red-node-random\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Node-RED Autostart on BeagleBone\nDESCRIPTION: Command to configure Node-RED to automatically start on system boot using systemd. This ensures Node-RED runs whenever the BeagleBone is powered on.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/beaglebone.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl enable node-red.service\n```\n\n----------------------------------------\n\nTITLE: Section Headers Formatting in Node-RED Node Help\nDESCRIPTION: This example demonstrates how to format section headers in both HTML and Markdown for Node-RED node help documentation. It shows the proper hierarchy of headings with h3 for main sections and h4 for subsections.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/help-style-guide.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<h3>Inputs</h3>\n...\n<h3>Details</h3>\n...\n <h4>A sub section</h4>\n ...\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### Inputs\n...\n### Details\n...\n#### A sub section\n...\n```\n\n----------------------------------------\n\nTITLE: Structuring Subflow JSON Definition\nDESCRIPTION: Example of how to structure the subflow JSON definition file that contains the subflow configuration and its internal nodes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/subflow-modules.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"Subflow Definition Node\",\n    ...\n    \"flow\": [\n       { \"id\": \"Node 1\", ... },\n       { \"id\": \"Node 2\", ... },\n       ...\n       { \"id\": \"Node n\", ... }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Node-RED with Snap\nDESCRIPTION: Command for installing Node-RED using Snap package manager. This method has limitations on system access that may affect some Node-RED functionality.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo snap install node-red\n```\n\n----------------------------------------\n\nTITLE: Defining Node Module in package.json\nDESCRIPTION: Example of how to define a node module in the package.json file, specifying the node name and its JavaScript file location.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/i18n.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"name\": \"my-node-module\",\n\"node-red\": {\n    \"myNode\": \"myNode/my-node.js\"\n}\n```\n\n----------------------------------------\n\nTITLE: Checking for Node Updates via NPM\nDESCRIPTION: Command to check for available updates for installed node modules in the Node-RED user directory.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/adding-nodes.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm outdated\n```\n\n----------------------------------------\n\nTITLE: Formatting Message Property References in HTML\nDESCRIPTION: Example showing how to properly reference message properties within general documentation text using HTML code tags.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/help-style-guide.md#2025-04-09_snippet_6\n\nLANGUAGE: html\nCODE:\n```\nThe interesting part is in <code>msg.payload</code>.\n```\n\n----------------------------------------\n\nTITLE: Getting Context in Node-RED Function Node (JavaScript)\nDESCRIPTION: Shows how to retrieve context values in a Node-RED function node using the new get method.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2016-01-18-version-0-13-released.md#2025-04-09_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet value = context.get('foo');\n```\n\n----------------------------------------\n\nTITLE: Package.json Theme Configuration\nDESCRIPTION: Package.json configuration for Node-RED theme plugin.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/themes/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"node-red\": {\n    \"plugins\": {\n        \"my-theme\": \"theme.js\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Grunt CLI for Node-RED Development\nDESCRIPTION: Installs the Grunt command-line interface globally using npm, which is required for building Node-RED from source.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/development.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm install -g grunt-cli\n```\n\n----------------------------------------\n\nTITLE: Custom Monaco Theme Object\nDESCRIPTION: Example of custom Monaco editor theme configuration object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/themes/index.md#2025-04-09_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nRED.plugins.registerPlugin(\"my-custom-theme\", {\n    monacoOptions: {\n      theme: {\n        \"base\": \"vs-dark\",\n        \"inherit\": true,\n        \"colors\": {\n          \"editor.foreground\": \"#CCC\",\n          \"editor.background\": \"#434954\",\n          \"editor.selectionBackground\": \"#80000080\",\n          \"editor.lineHighlightBackground\": \"#80000040\",\n          \"editorCursor.foreground\": \"#7070FF\",\n          \"editorWhitespace.foreground\": \"#BFBFBF\"\n        },      \n        \"rules\": [\n            {\n                \"background\": \"434954\",\n            },\n            {\n                \"foreground\": \"aeaeae\",\n                \"fontStyle\": \"italic\",\n                \"token\": \"comment\"\n            },\n            {\n                \"foreground\": \"d8fa3c\",\n                \"token\": \"string\"\n            },\n            {\n                \"foreground\": \"d8fa3c\",\n                \"fontStyle\": \"bold\",\n                \"token\": \"constant\"\n            },\n        ]\n      }\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring PM2 Startup\nDESCRIPTION: Commands to save the current PM2 process list and generate platform-specific startup scripts.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/starting-node-red-on-boot.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npm2 save\npm2 startup\n```\n\n----------------------------------------\n\nTITLE: Creating a Message Catalog for i18n\nDESCRIPTION: Example of a JSON message catalog file containing translated text for a node. The catalog is namespaced under the node's identifier.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/i18n.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"myNode\" : {\n        \"message1\": \"This is my first message\",\n        \"message2\": \"This is my second message\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Configuration Node JavaScript in Node-RED\nDESCRIPTION: JavaScript implementation of a remote server configuration node. The code creates a simple container for the host and port configuration values with no runtime behavior.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/config-nodes.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function(RED) {\n    function RemoteServerNode(n) {\n        RED.nodes.createNode(this,n);\n        this.host = n.host;\n        this.port = n.port;\n    }\n    RED.nodes.registerType(\"remote-server\",RemoteServerNode);\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Slack Invite Form with CSS\nDESCRIPTION: This CSS snippet provides styling for the Slack invite form elements, including input fields, submit button, and error messages. It defines colors, sizes, and layout properties for a consistent appearance.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/slack/index.md#2025-04-09_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\n.slack input {\n    border: 1px solid #999;\n    background: #fff;\n    color: #666;\n    padding: 8px 16px;\n    font-size: 20px;\n}\n.slack #e {\n    width: 370px;\n}\n.slack #go {\n    cursor: pointer;\n}\n.slackerr {\n    margin-top: 0;\n    font-size: 16px;\n    color: #f66;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Context in Node-RED Function Node (JavaScript)\nDESCRIPTION: Demonstrates the new recommended way of setting context values in a Node-RED function node using the set method.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2016-01-18-version-0-13-released.md#2025-04-09_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\ncontext.set('foo', 1);\n```\n\n----------------------------------------\n\nTITLE: Node-RED Editor Theme Configuration\nDESCRIPTION: Settings configuration for applying custom CSS theme to the Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/themes/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\neditorTheme: {\n    page: {\n        // This must be the *absolute* path to the style.css file\n        css: \"/absolute/path/to/my-custom-theme/style.css\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Node-RED CLI Help Output\nDESCRIPTION: Command-line help output showing available options and usage instructions for running Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2014-04-16-version-0-7-0-released.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ node red.js -?\nUsage: node red.js [-v] [-?] [--settings settings.js] [flows.json]\n\nOptions:\n  -s, --settings FILE  use specified settings file\n  -v                   enable verbose output\n  -?, --help           show usage\n\nDocumentation can be found at http://nodered.org\n```\n\n----------------------------------------\n\nTITLE: Loading JSON Data and Creating Charts in JavaScript\nDESCRIPTION: This script loads survey data from JSON files and creates histogram and treemap charts using the RED.chart object. It iterates through the data to generate charts for each specified element.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/survey/2023/index.md#2025-04-09_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n$(function() {\n    $.getJSON(\"data-2023.json\", function(data) {\n        for (var id in data) {\n            if (data.hasOwnProperty(id)) {\n                var el = $(\"#\"+id);\n                if (el.length) {\n                    var opts = data[id];\n                    opts.id = \"#\"+id;\n                    RED.chart.histogram(opts)\n                }\n            }\n        }\n    });\n    $.getJSON(\"comments.json\", function(data) {\n        RED.chart.treeMap({id:\"#comments-treemap\",data:data})\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Accessing i18n Messages in Node-RED Runtime\nDESCRIPTION: Demonstrates how to use the RED._() function to access internationalized messages in the runtime part of a Node-RED node.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/i18n.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(RED._(\"myNode.message1\"));\n```\n\n----------------------------------------\n\nTITLE: Property Validation Examples\nDESCRIPTION: Examples of different property validation methods including number validation, regex validation, and custom validation\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/properties.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndefaults: {\n   minimumLength: { value:0, validate:RED.validators.number() },\n   lowerCaseOnly: {value:\"\", validate:RED.validators.regex(/[a-z]+/) },\n   custom: { value:\"\", validate:function(v) {\n      var minimumLength=$(\"#node-input-minimumLength\").length?$(\"#node-input-minimumLength\").val():this.minimumLength;\n      return v.length > minimumLength\n   } }\n},\n```\n\n----------------------------------------\n\nTITLE: Installing Node-RED Web Nodes via npm\nDESCRIPTION: Command to install additional web service nodes for Node-RED, including nodes for Delicious, Pinboard, Flickr, Dropbox, and Amazon S3.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2014-09-24-version-0-9-0-released.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install node-red-node-web-nodes\n```\n\n----------------------------------------\n\nTITLE: Configuring Context Storage in Node-RED\nDESCRIPTION: Example configuration for setting up context storage in settings.js. Shows how to define a default memory-based store with custom options.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/context/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncontextStorage: {\n   default: {\n       module:\"memory\",\n       config: {\n           customOption: 'value'\n       }\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js and Node-RED on Ubuntu Server in Azure\nDESCRIPTION: Commands to install Node.js 12.x and Node-RED on an Ubuntu Server VM. This installs Node.js via the NodeSource repository, adds build-essential for compilation support, and installs Node-RED globally.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/azure.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\nsudo apt-get install -y nodejs build-essential\nsudo npm install -g --unsafe-perm node-red\n```\n\n----------------------------------------\n\nTITLE: Including External JavaScript Dependencies\nDESCRIPTION: Script tags for loading the local charts.js file and D3.js v3 library for data visualization.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/survey/2019/index.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"./charts.js\"></script>\n<script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Runtime State for Stopped Flows in Node-RED 3.0\nDESCRIPTION: This configuration enables the ability to run Node-RED with flows in a stopped state. It adds UI controls to start and stop flows from the editor interface.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2022-07-14-version-3-0-released.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nruntimeState: {\n   enabled: true,\n   ui: true\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Package.json for Node-RED Module\nDESCRIPTION: Package.json configuration showing how to declare the Node-RED node entry point.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/subflow-modules.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"node-red-example-subflow\",\n    ...\n    \"node-red\": {\n        \"nodes\": {\n            \"example-node\": \"example.js\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Node Properties in JavaScript\nDESCRIPTION: Example showing how to define default properties for a Node-RED node in the defaults object\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/properties.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndefaults: {\n    name: {value:\"\"},\n    prefix: {value:\"\"}\n},\n```\n\n----------------------------------------\n\nTITLE: Node-RED Simplified Error Summary\nDESCRIPTION: New simplified error output format showing a summary of failed node registrations with instructions for verbose output.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2014-04-16-version-0-7-0-released.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n16 Apr 21:23:32 - ------------------------------------------\n16 Apr 21:23:32 - [red] Failed to register 10 node types\n16 Apr 21:23:32 - [red] Run with -v for details\n16 Apr 21:23:32 - ------------------------------------------\n```\n\n----------------------------------------\n\nTITLE: Treemap Visualization Container\nDESCRIPTION: HTML elements for displaying hierarchical feedback data using a treemap visualization.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/survey/2019/index.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"treemap-label\">Click a category to see more detail</div>\n<div id=\"comments-treemap\"></div>\n```\n\n----------------------------------------\n\nTITLE: Defining Page Layout and Title in Markdown\nDESCRIPTION: This snippet sets the layout and title for the API Reference page using YAML front matter in Markdown. It specifies the layout as 'docs-api' and the title as 'API Reference'.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: docs-api\ntitle: API Reference\n---\n```\n\n----------------------------------------\n\nTITLE: Adding Hours to Current Time with JSONata $moment in Node-RED 1.1\nDESCRIPTION: Shows how to add time intervals to a date using the newly added JSONata $moment function integrated with the Moment.js library.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2020-06-30-version-1-1-released.md#2025-04-09_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n$moment().add(2, \"hours\")\n```\n\n----------------------------------------\n\nTITLE: Accessing Palette Manager via Keyboard Shortcut in Node-RED\nDESCRIPTION: This code snippet shows the keyboard shortcut for accessing the Palette Manager in Node-RED. It's part of a reference table that includes menu options and action commands.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/palette/manager.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<tr><td>Key shortcut</td><td><code>Ctrl/⌘-Shift-p</code></td></tr>\n```\n\n----------------------------------------\n\nTITLE: Plain Button Implementation\nDESCRIPTION: HTML code for creating a standard button in the Node-RED edit dialog. Uses the red-ui-button class for consistent styling.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/edit-dialog.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<button type=\"button\" class=\"red-ui-button\">Button</button>\n```\n\n----------------------------------------\n\nTITLE: Example Node-RED Module Directory Structure\nDESCRIPTION: Shows the recommended file and folder structure for a Node-RED node module package.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/packaging.md#2025-04-09_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n├── LICENSE\n├── README.md\n├── package.json\n├── examples\n    │   ├── example-1.json\n    │   └── example-2.json\n└── sample\n    ├── icons\n    │   └── my-icon.svg\n    ├── sample.html\n    └── sample.js\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Flow Structure Documentation Page\nDESCRIPTION: The YAML front matter defines the document layout, table of contents, title, and slug for the Node-RED flow structure documentation page.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/developing-flows/flow-structure.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: docs-developing-flows\ntoc: toc-developing-flows.html\ntitle: Flow structure\nslug: flow structure\n---\n```\n\n----------------------------------------\n\nTITLE: Deprecated JSONata Evaluation APIs in Node-RED\nDESCRIPTION: Two core Node-RED APIs are being deprecated for synchronous usage: RED.util.evaluateNodeProperty and RED.util.evaluateJSONataExpression. These functions will now require callback parameters for asynchronous evaluation, particularly when used with JSONata expressions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2023-09-06-version-3-1-released.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nRED.util.evaluateNodeProperty\nRED.util.evaluateJSONataExpression\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom User Directory via Command Line\nDESCRIPTION: Command to start Node-RED with a custom user directory location using the --userDir argument.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2015-02-25-changing-where-node-red-stores-data.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode red.js --userDir /var/node-red/data\n```\n\n----------------------------------------\n\nTITLE: Small Button Implementation\nDESCRIPTION: HTML code for creating a small-sized button in the Node-RED edit dialog. Uses both red-ui-button and red-ui-button-small classes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/edit-dialog.md#2025-04-09_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<button type=\"button\" class=\"red-ui-button red-ui-button-small\">Button</button>\n```\n\n----------------------------------------\n\nTITLE: Formatting Multiple Node Outputs in HTML\nDESCRIPTION: Example showing how to structure documentation for nodes with multiple outputs using HTML. Demonstrates proper formatting of message property lists within ordered lists using specific CSS classes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/help-style-guide.md#2025-04-09_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ol class=\"node-ports\">\n    <li>Standard output\n        <dl class=\"message-properties\">\n            <dt>payload <span class=\"property-type\">string</span></dt>\n            <dd>the standard output of the command.</dd>\n        </dl>\n    </li>\n    <li>Standard error\n        <dl class=\"message-properties\">\n            <dt>payload <span class=\"property-type\">string</span></dt>\n            <dd>the standard error of the command.</dd>\n        </dl>\n    </li>\n</ol>\n```\n\n----------------------------------------\n\nTITLE: Embedding Speaker Deck Presentation in Markdown\nDESCRIPTION: HTML script tag for embedding a Speaker Deck presentation about the future of Node-RED within a markdown blog post. The embed includes the presentation ID and aspect ratio settings.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2020-10-13-future-plans.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script async class=\"speakerdeck-embed\" data-id=\"df4c972d06664bbe97b2e66897eba5c4\" data-ratio=\"1.77777777777778\" src=\"//speakerdeck.com/assets/embed.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Disabling Node-RED Autostart Service\nDESCRIPTION: Command to disable Node-RED service from automatically starting on system boot using systemctl.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/raspberrypi.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl disable nodered.service\n```\n\n----------------------------------------\n\nTITLE: Message Cloning in Function Nodes\nDESCRIPTION: Function nodes now clone all messages passed to node.send() to maintain consistency with the new asynchronous messaging system. This change affects message handling and flow behavior.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-09-30-version-1-0-released.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnode.send(msg)\n```\n\n----------------------------------------\n\nTITLE: Copying Debug Message Path Example in Node-RED\nDESCRIPTION: Example of a debug message path that can be copied using the new debug panel features in Node-RED 0.17. This shows how to reference a specific element in a message payload.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2017-06-28-version-0-17-released.md#2025-04-09_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\npayload[\"First Name\"]\n```\n\n----------------------------------------\n\nTITLE: Toggle Button Group Implementation\nDESCRIPTION: HTML structure for creating a group of toggle buttons in the Node-RED edit dialog. Buttons are placed inside a span with the button-group class.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/edit-dialog.md#2025-04-09_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"button-group\">\n<button type=\"button\" class=\"red-ui-button toggle selected my-button-group\">b1</button><button type=\"button\" class=\"red-ui-button toggle my-button-group\">b2</button><button type=\"button\" class=\"red-ui-button toggle my-button-group\">b3</button>\n</span>\n```\n\n----------------------------------------\n\nTITLE: Message Properties Example\nDESCRIPTION: Demonstrates TypedInput configuration for message properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/typedInput/index.md#2025-04-09_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-example2\">\n```\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"#node-input-example2\").typedInput({\n    type:'msg',\n    types:['msg']\n})\n```\n\n----------------------------------------\n\nTITLE: YouTube Embed for Node-RED 0.18 Release Overview\nDESCRIPTION: HTML iframe embedding a YouTube video that provides an overview of the Node-RED 0.18 release. The video is configured with a width of 560px, height of 315px, and has autoplay and encrypted media permissions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2018-01-31-version-0-18-released.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/xOpmYVXG7lU?rel=0\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n```\n\n----------------------------------------\n\nTITLE: FAQ Section Structure in Markdown\nDESCRIPTION: Markdown structure defining the FAQ categories and links to detailed answers. Includes sections for general information, Node.js compatibility, Node-RED configuration, Raspberry Pi integration, and hardware interaction.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: docs-faq\ntitle: Frequently Asked Questions\n---\n\n#### General\n\n - [Why is the project called Node-RED?](/about/#history)\n - [What is the history of the project?](/about/#history)\n - [What is 'Flow-based Programming'](/about/#flow-based-programming)\n\n\n#### Node.js\n\n - [What versions of Node.js are supported?](node-versions)\n\n\n#### Node-RED\n\n - [How can I start Node-RED on boot?](starting-node-red-on-boot)\n\n\n#### Raspberry Pi\n\n - [How do I interact with Raspberry Pi GPIO?](interacting-with-pi-gpio)\n - [How can I customise the Raspberry Pi service?](customising-systemd-on-pi)\n\n\n#### Hardware\n\n - [How can I interact with Arduino devices?](interacting-with-arduino)\n```\n\n----------------------------------------\n\nTITLE: Embedding Speakerdeck Presentation in Markdown\nDESCRIPTION: This snippet embeds a Speakerdeck presentation into the markdown document using an asynchronous script tag. The presentation likely contains more detailed information about the Node-RED roadmap.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2017-07-17-roadmap-to-1-dot-0.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script async class=\"speakerdeck-embed\" data-id=\"f647c01eecd94eb0ba0c0a51bbd755ab\" data-ratio=\"1.77777777777778\" src=\"//speakerdeck.com/assets/embed.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Node-RED Citation Information Table\nDESCRIPTION: Markdown table containing citation information for academic references to Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/index.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n-----|----\n**Name** | `Node-RED`\n**Author** | `OpenJS Foundation & Contributors`\n**URL** |  If you are citing the project in general, use the project website URL - `https://nodered.org`. <br/>If you are citing a particular version, use either the website, or find the [release page on GitHub](https://github.com/node-red/node-red/releases) for the version you are citing.\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic HTML Input in Node-RED\nDESCRIPTION: Simple implementation of a plain HTML text input element for Node-RED interface.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/edit-dialog.md#2025-04-09_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-name\">\n```\n\n----------------------------------------\n\nTITLE: Flow/Global Context Properties Example\nDESCRIPTION: Shows TypedInput setup for flow and global context properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/typedInput/index.md#2025-04-09_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-example3\">\n```\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"#node-input-example3\").typedInput({\n    type:'flow',\n    types:['flow','global']\n})\n```\n\n----------------------------------------\n\nTITLE: Accessing Node-RED Search Feature with Keyboard Shortcut\nDESCRIPTION: Demonstrates how to quickly access the new search feature in Node-RED 0.15 using keyboard shortcuts for both Windows/Linux and Mac.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2016-10-11-version-0-15-released.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Ctrl+.` (`Cmd+.` on Mac)\n```\n\n----------------------------------------\n\nTITLE: Configuring Split Config Files in Node-RED 1.2\nDESCRIPTION: Breaking change introducing split configuration files replacing single .config.json. Runtime splits configuration into four separate files for better organization and version control flexibility.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2020-10-15-version-1-2-released.md#2025-04-09_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n.config.json\n```\n\n----------------------------------------\n\nTITLE: Formatting Message Property References in Markdown\nDESCRIPTION: Example showing how to reference message properties in Markdown using backticks for code formatting.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/help-style-guide.md#2025-04-09_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\nThe interesting part is in `msg.payload`.\n```\n\n----------------------------------------\n\nTITLE: Getting SearchBox Value in JavaScript\nDESCRIPTION: Illustrates how to retrieve the current value of a SearchBox widget. This method returns the current text entered in the search input as a string.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/searchBox/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar type = $(\".input\").searchBox('value');\n```\n\n----------------------------------------\n\nTITLE: Installing Node-RED Globally via NPM\nDESCRIPTION: Command to globally install Node-RED using npm package manager. This installation method adds the node-red command to the system path.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2015-02-25-changing-where-node-red-stores-data.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm install -g node-red\n```\n\n----------------------------------------\n\nTITLE: Setting/Clearing Cookies in HTTP Response Node (JavaScript)\nDESCRIPTION: Shows how to set or clear cookies using the msg.cookies property when sending responses through the HTTP Response node. This provides a convenient way to manage cookies in HTTP responses.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2016-06-14-version-0-14-released.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmsg.cookies\n```\n\n----------------------------------------\n\nTITLE: Installing Raspberry Pi GPIO Dependencies\nDESCRIPTION: Commands to update and install the required Python dependencies for Raspberry Pi GPIO functionality in Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2015-02-08-version-0-10-1-released.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get update\nsudo apt-get install python-dev python-rpi.gpio\n```\n\n----------------------------------------\n\nTITLE: Uncommenting eMMC Flasher Script in uEnv.txt\nDESCRIPTION: Line to uncomment in the /boot/uEnv.txt file to enable flashing the Debian image to the BeagleBone's eMMC storage. This allows the system to be installed on internal storage rather than running from SD card.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/beaglebone.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh\n```\n\n----------------------------------------\n\nTITLE: Documentation Format Switcher Script\nDESCRIPTION: jQuery script that implements a toggle functionality between HTML and Markdown documentation formats, including styling for the toggle buttons.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/help-style-guide.md#2025-04-09_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n$(function() {\n    $(\".code-tab-html\").each(function() {\n        let htmlBlock = $(this);\n        let mdBlock = $(this).next(\".code-tab-md\").hide();\n        htmlBlock.wrap(\"<div></div>\");\n        let container = htmlBlock.parent();\n        mdBlock.appendTo(container);\n\n        container.wrap('<div class=\"code-example-switcher\"></div>');\n        let toplevel = container.parent();\n        let toolbar = $('<div></div>').prependTo(toplevel);\n\n        let htmlButton = $('<a href=\"#\" class=\"active format-button\">HTML</a>').appendTo(toolbar).on(\"click\", function(evt) {\n            evt.preventDefault();\n            mdBlock.hide();\n            htmlBlock.show();\n            htmlButton.addClass('active');\n            mdButton.removeClass('active')\n        });\n        let mdButton = $('<a href=\"#\" class=\"format-button\">Markdown</a>').appendTo(toolbar).on(\"click\", function(evt) {\n            evt.preventDefault();\n            mdBlock.show();\n            htmlBlock.hide();\n            htmlButton.removeClass('active');\n            mdButton.addClass('active')\n        });\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Setting SearchBox Value in JavaScript\nDESCRIPTION: Demonstrates how to programmatically set the value of a SearchBox widget. This method allows you to populate the search input with a specified string value.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/searchBox/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").searchBox('value','hello');\n```\n\n----------------------------------------\n\nTITLE: Checking GPIO Library Version\nDESCRIPTION: Command to verify the installed version of the RPi.GPIO library on Raspberry Pi.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2015-02-08-version-0-10-1-released.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n<node-red install dir>/nodes/core/hardware/nrgpio ver 0\n```\n\n----------------------------------------\n\nTITLE: TCP Echo Server Terminal Interaction\nDESCRIPTION: Demonstrates the terminal interaction with the TCP echo server showing connection and response behavior.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2013-12-21-version-0-5-0-released.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ telnet localhost 9001\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nHi There\nYou said: Hi There\n```\n\n----------------------------------------\n\nTITLE: Traditional Node-RED Input Event Handler\nDESCRIPTION: The traditional way to register an input event handler in a Node-RED node, where the callback function receives only the message object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-09-20-node-done.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nthis.on('input', function(msg) {\n\n})\n```\n\n----------------------------------------\n\nTITLE: Node-RED Version Specification in package.json\nDESCRIPTION: Example showing how to specify Node-RED version requirements in package.json configuration.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/creating-nodes/packaging.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"node-red\"     : {\n    \"version\": \">=2.0.0\",\n    \"nodes\": {\n        \"sample\": \"sample/sample.js\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Items to EditableList in JavaScript\nDESCRIPTION: Demonstrates how to add multiple items to the end of an EditableList at once. The items are provided as an array of objects.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList('addItems',[{fruit:\"banana\"},{fruit:\"apple\"},{fruit:\"pear\"}]);\n```\n\n----------------------------------------\n\nTITLE: Implementing Slack Invite Request Form in HTML\nDESCRIPTION: This HTML snippet creates a form for users to enter their email and request an invite to the Node-RED Slack community. It includes placeholders for displaying error messages and success confirmation.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/slack/index.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"slack\">\n    <div class=\"slackform\">\n        <p><input id=\"e\" placeholder=\"Email\"> <input type=\"submit\" id=\"go\" value=\"Get invite\"></p>\n        <p class=\"slackerr\"></p>\n    </div>\n    <div class='slackmsg hide'>\n        <p>Check your email for an invitation</p>\n    </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML Platform Selection Layout\nDESCRIPTION: HTML structure for displaying different Node-RED installation options as clickable cards with icons and descriptions. Each card links to platform-specific installation instructions.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/index.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"post-preview\">\n  <a href=\"local\">\n    <div class=\"post-header\">\n      <img src=\"/images/platform-local.png\">\n      <h2>Running locally</h2>\n    </div>\n    <div class=\"post-content\">\n      Installing Node-RED on your local computer\n    </div>\n  </a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Items from EditableList in JavaScript\nDESCRIPTION: Demonstrates how to get an array of all list items from an EditableList. Each item is a jQuery DOM element with the original data stored in the 'data' property.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nvar items = $(\"ol.list\").editableList('items');\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: Standard boilerplate notice to be included in project files when applying the Apache License 2.0. This template includes placeholders for copyright year and owner, along with standard license terms and reference to the full license text.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/modules/v/0.20.0/scripts/prettify/Apache-License-2.0.txt#2025-04-09_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables in Function Nodes\nDESCRIPTION: Demonstrates how to access environment variables within a Function node using the env.get function.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/environment-variables.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nlet foo = env.get(\"FOO\");\n```\n\n----------------------------------------\n\nTITLE: Filtering Items in EditableList with JavaScript\nDESCRIPTION: Demonstrates how to filter items in an EditableList using a custom filter function. The example shows even-indexed items and returns the count of visible items.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nvar filteredCount = $(\"ol.list\").editableList('filter',function(data) {\n    return data.index%2 === 0\n});\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: The standard boilerplate notice that should be added to files when licensing a project under the Apache License 2.0. It includes placeholders for copyright year and owner information, as well as the standard license disclosure text.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/modules/v/1.0/scripts/prettify/Apache-License-2.0.txt#2025-04-09_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables in Template Nodes\nDESCRIPTION: Shows the syntax for accessing environment variables in the Template node, available since Node-RED 3.0.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/environment-variables.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nMy favourite colour is {{env.COLOUR}}.\n```\n\n----------------------------------------\n\nTITLE: Getting Item Count from EditableList in JavaScript\nDESCRIPTION: Shows how to retrieve the number of items in an EditableList.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\nvar length = $(\"ol.list\").editableList('length');\n```\n\n----------------------------------------\n\nTITLE: Generating MD5 Password Hash for Node-RED Authentication\nDESCRIPTION: Node.js command to generate an MD5 hash of a password for use with HTTP Basic Authentication in Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/configuration.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnode -e \"console.log(require('crypto').createHash('md5').update('YOUR PASSWORD HERE','utf8').digest('hex'))\"\n```\n\n----------------------------------------\n\nTITLE: AutoComplete Basic Object Structure Example in JavaScript\nDESCRIPTION: Example of the required object structure for autoComplete completion items. Each item must have a value property (what gets inserted) and a label property (what is displayed).\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/autoComplete/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n   value: \"<string>\", // The value to insert if selected\n   label: \"<string>\"|DOMElement  // The label to display in the dropdown\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Static HTTP Content with Multiple Directories in Node-RED\nDESCRIPTION: Advanced configuration for serving static content from multiple directories with custom options including path, root URL, middleware, and CORS settings.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/configuration.md#2025-04-09_snippet_4\n\nLANGUAGE: json\nCODE:\n```\nhttpStatic: [\n  {\n      path: '/opt/static/',\n      root: '/private/',\n      middleware: myCustomHttpMiddleware,\n      cors: {\n\n      }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Implementing AutoComplete with Custom DOM Labels in JavaScript\nDESCRIPTION: Example of creating enhanced auto-complete suggestions using DOM elements as labels, highlighting the matched text portion in a different color and style.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/autoComplete/index.md#2025-04-09_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// View the page source to see the full list of animals used in\n// this example\nlet animals = [\"Aardvark\",\"Alligator\",\"Alpaca\",\"Anaconda\",\"Ant\",\"Antelope\",\n               \"Carp\",\"Cat\",\"Caterpillar\",\"Catfish\",\"Cheetah\",\"Chicken\",\n               \"Deer\",\"Dinosaur\",\"Dog\",\"Dolphin\",\"Donkey\",\"Dove\" ];\n\n$(\"#node-input-example3\").autoComplete({\n    search: function(val) {\n        var matches = [];\n        animals.forEach(v => {\n            var i = v.toLowerCase().indexOf(val.toLowerCase());\n            if (i > -1) {\n                var pre = v.substring(0,i);\n                var matchedVal = v.substring(i,i+val.length);\n                var post = v.substring(i+val.length)\n\n                var el = $('<div/>',{style:\"white-space:nowrap\"});\n                $('<span/>').text(pre).appendTo(el);\n                $('<span/>',{style:\"font-weight: bold; color:red\"}).text(matchedVal).appendTo(el);\n                $('<span/>').text(post).appendTo(el);\n\n                matches.push({\n                    value: v,\n                    label: el,\n                    i:i\n                })\n            }\n        })\n        matches.sort(function(A,B){return A.i-B.i})\n        return matches\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Logstash Custom Logger in Node-RED\nDESCRIPTION: This example shows how to create a custom logger that sends metrics events to a Logstash instance over a TCP connection. It demonstrates setting up the connection and formatting log messages for Logstash.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/runtime/logging.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nlogging: {\n    console: {\n        level: \"info\",\n        metrics: false,\n        audit: false\n    },\n    logstash: {\n        level:'off',\n        metrics:true,\n        handler: function(conf) {\n            var net = require('net');\n            var logHost = '192.168.99.100',logPort = 9563;\n            var conn = new net.Socket();\n            conn.connect(logPort,logHost)\n                .on('connect',function() {\n                    console.log(\"Logger connected\")\n                })\n                .on('error', function(err) {\n                    // Should attempt to reconnect in a real env\n                    // This example just exits...\n                    process.exit(1);\n                });\n            // Return the function that will do the actual logging\n            return function(msg) {\n                var message = {\n                    '@tags': ['node-red', 'test'],\n                    '@fields': msg,\n                    '@timestamp': (new Date(msg.timestamp)).toISOString()\n                }\n                try {\n                    conn.write(JSON.stringify(message)+\"\\n\");\n                }catch(err) { console.log(err);}\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Invoking an Action in Node-RED\nDESCRIPTION: Demonstrates how to invoke a registered action using RED.actions.invoke(). This method allows for optional arguments to be passed to the action handler.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/actions/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nRED.actions.invoke(\"my-custom-tab:show-custom-tab\")\n```\n\n----------------------------------------\n\nTITLE: Enabling Projects in Node-RED Settings.js\nDESCRIPTION: Configuration snippet for enabling the Projects feature in Node-RED by modifying the settings.js file to add the required editorTheme option.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/projects/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n   editorTheme: {\n       projects: {\n           enabled: true\n       }\n   },\n```\n\n----------------------------------------\n\nTITLE: Showing Tab in Node-RED Sidebar\nDESCRIPTION: Demonstrates how to programmatically show a specific tab in the sidebar using its ID.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/sidebar/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nRED.sidebar.show(\"my-custom-tab\")\n```\n\n----------------------------------------\n\nTITLE: Select All Nodes Action Reference in Node-RED\nDESCRIPTION: Reference table for selecting all nodes in the current flow, showing keyboard shortcuts, menu options, and action code.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/selection.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-a</code></td></tr>\n <tr><td>Menu option</td><td><code>Edit -&gt; Select all</code></td></tr>\n <tr><td>Action</td><td><code>core:select-all-nodes</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Theme Plugin Registration\nDESCRIPTION: JavaScript code for registering a custom theme plugin with Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/themes/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function(RED) {\n    RED.plugins.registerPlugin(\"my-custom-theme\", {\n        // Tells Node-RED this is a theme plugin\n        type: \"node-red-theme\",\n\n        // List the CSS files the theme provides. If there are\n        // more than one, this should be an array of filenames\n        css: \"style.css\"\n\n        // List the script files the theme provides.\n        // If the theme doesn't include any, this can be left out\n        //scripts: \"theme.js\"\n    })\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Palette Toggle Reference Table\nDESCRIPTION: HTML table showing keyboard shortcuts and menu options for toggling the palette visibility in the Node-RED editor\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/palette/index.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-p</code></td></tr>\n <tr><td>Menu option</td><td><code>View -&gt; Show Palette</code></td></tr>\n <tr><td>Action</td><td><code>core:toggle-palette</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Monaco Theme JSON Configuration\nDESCRIPTION: Example JSON configuration file for Monaco editor theme.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/themes/index.md#2025-04-09_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"base\": \"vs-dark\",\n  \"inherit\": true,\n  \"colors\": {\n    \"editor.foreground\": \"#CCC\",\n    \"editor.background\": \"#434954\",\n    \"editor.selectionBackground\": \"#80000080\",\n    \"editor.lineHighlightBackground\": \"#80000040\",\n    \"editorCursor.foreground\": \"#7070FF\",\n    \"editorWhitespace.foreground\": \"#BFBFBF\"\n  },      \n  \"rules\": [\n      {\n          \"background\": \"434954\"\n      },\n      {\n          \"foreground\": \"aeaeae\",\n          \"fontStyle\": \"italic\",\n          \"token\": \"comment\"\n      },\n      {\n          \"foreground\": \"d8fa3c\",\n          \"token\": \"string\"\n      },\n      {\n          \"foreground\": \"d8fa3c\",\n          \"fontStyle\": \"bold\",\n          \"token\": \"constant\"\n      }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Clearing Debug Messages Action Reference in Node-RED\nDESCRIPTION: Action reference for clearing debug messages in the Node-RED editor, including the action name and keyboard shortcut.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/debug.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:clear-debug-messages</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-Alt-l</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Defining Node-RED Editor APIs in Markdown\nDESCRIPTION: This snippet lists the main Node-RED Editor APIs available for integration, including actions, events, notifications, and sidebar management.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n - [`RED.actions`](actions) - register custom actions\n - [`RED.events`](events) - listen for events within the editor\n - [`RED.notify`](notifications) - show notifications in the editor\n - [`RED.sidebar`](sidebar) - add sidebar tabs\n```\n\n----------------------------------------\n\nTITLE: Debug Node Activation and Deactivation Actions in Node-RED\nDESCRIPTION: Action references for activating and deactivating debug nodes in the Node-RED editor, including actions for selected nodes, all nodes, and all flow nodes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/debug.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:activate-selected-debug-nodes</code></td></tr>\n</table>\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:activate-all-debug-nodes</code></td></tr>\n</table>\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:activate-all-flow-debug-nodes</code></td></tr>\n</table>\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:deactivate-selected-debug-nodes</code></td></tr>\n</table>\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:deactivate-all-debug-nodes</code></td></tr>\n</table>\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:deactivate-all-flow-debug-nodes</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Listing Node-RED Editor Widgets in Markdown\nDESCRIPTION: This snippet enumerates the jQuery widgets available for use in node edit templates, including TypedInput, EditableList, SearchBox, and TreeList.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/index.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n  - [`TypedInput`](typedInput) - a replacement for a regular `<input>` that allows\n    the type of the value to be chosen, including options for string, number and boolean.\n    Used extensively in the core Node-RED nodes.\n  - [`EditableList`](editableList) - an editable list where the elements can be complex\n    forms in their own right. Used by the core `Switch` and `Change` nodes.\n  - [`SearchBox`](searchBox) - an enhanced `<input>` for common usage around Search UX.\n  - [`TreeList`](treeList) - a list to display tree-structured data.\n```\n\n----------------------------------------\n\nTITLE: HTML Table for Action Reference\nDESCRIPTION: A table displaying the keyboard shortcut and action code for showing the help tab in Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/help.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:show-help-tab</code></td></tr>\n <tr><td>Key shortcut</td><td><code>Ctrl/⌘-g h</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Installing node-red-dashboard in Termux\nDESCRIPTION: This snippet demonstrates how to install the node-red-dashboard package in the Node-RED user directory using npm.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/android.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd ~/.node-red\nnpm i node-red-dashboard\n```\n\n----------------------------------------\n\nTITLE: Displaying Context Data Sidebar Image in HTML\nDESCRIPTION: This HTML snippet displays an image of the Context data Sidebar with a caption, aligned to the right of the page with a width of 300 pixels.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/sidebar/context.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"width: 300px\" class=\"figure align-right\">\n  <img src=\"../images/editor-sidebar-context.png\" alt=\"Context data Sidebar\">\n  <p class=\"caption\">Context data Sidebar</p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Termux API for device access\nDESCRIPTION: This command installs the Termux API package, which allows access to various hardware features of the Android device through Termux.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/android.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\napt install termux-api\n```\n\n----------------------------------------\n\nTITLE: Referencing Core:disable-selected-nodes Action in Markdown\nDESCRIPTION: Markdown table showing the reference for the core:disable-selected-nodes action in Node-RED editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/user-guide/editor/workspace/nodes.md#2025-04-09_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<table class=\"action-ref inline\">\n <tr><th colspan=\"2\">Reference</th></tr>\n <tr><td>Action</td><td><code>core:disable-selected-nodes</code></td></tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Viewing Node-RED Service Logs on BeagleBone\nDESCRIPTION: Command to view the real-time logs of the Node-RED service using journalctl. This is useful for debugging and monitoring the Node-RED process.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/beaglebone.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo journalctl -f -u node-red -o cat\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Proxy in Node-RED systemd Service\nDESCRIPTION: YAML configuration showing how to add an HTTP proxy configuration to the Node-RED systemd service. This allows Node-RED flows to use a proxy for HTTP requests by setting the HTTP_PROXY environment variable.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/faq/customising-systemd-on-pi.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n...\nNice=5\nEnvironment=\"NODE_OPTIONS=--max-old-space-size=256\"\nEnvironment=\"HTTP_PROXY=my-proxy-server-address\"\n...\n```\n\n----------------------------------------\n\nTITLE: Starting Node-RED from Source\nDESCRIPTION: Runs Node-RED from the source code using npm start.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/development.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Node-RED Node Configuration with TypedInput\nDESCRIPTION: Complete example showing how to implement TypedInput in a Node-RED node with type field storage.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/typedInput/index.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-row\">\n    <label>Example:</label>\n    <input type=\"text\" id=\"node-input-myField\">\n    <input type=\"hidden\" id=\"node-input-myFieldType\">\n</div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRED.nodes.registerType('example', {\n    defaults: {\n        myField: { value: \"\" },\n        myFieldType: { value: \"str\" }\n    },\n    ...\n    oneditprepare: function () {\n        $(\"#node-input-myField\").typedInput({\n            typeField: \"#node-input-myFieldType\"\n        });\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Overriding Node-RED settings via file\nDESCRIPTION: Command to load custom settings from a file using the -D flag. This allows defining multiple settings in a separate configuration file.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/local.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n-D @./custom-settings.txt\n```\n\n----------------------------------------\n\nTITLE: Creating a Single-Select TypedInput in Node-RED\nDESCRIPTION: Demonstrates how to create a TypedInput control that displays a dropdown list of selectable options. The example initializes a TypedInput with fruit options (apple, banana, cherry) that the user can select from.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/typedInput/index.md#2025-04-09_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-example4\">\n```\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"#node-input-example4\").typedInput({type:\"fruit\", types:[{\n    value: \"fruit\",\n    options: [\n        { value: \"apple\", label: \"Apple\"},\n        { value: \"banana\", label: \"Banana\"},\n        { value: \"cherry\", label: \"Cherry\"},\n    ]\n}]})\n```\n\n----------------------------------------\n\nTITLE: Configuring Node-RED Startup Command in Windows Task Scheduler\nDESCRIPTION: This command is used in the Windows Task Scheduler to start Node-RED automatically. It specifies the path to the Node-RED executable, which should be adjusted for the specific user's profile.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/windows.md#2025-04-09_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nC:\\Users\\<user>\\AppData\\Roaming\\npm\\node-red.cmd\n```\n\n----------------------------------------\n\nTITLE: Creating a Multi-Select TypedInput in Node-RED\nDESCRIPTION: Shows how to configure a TypedInput control that allows selecting multiple items from a list of options. The multiple:true property enables this functionality, allowing users to choose multiple fruit options simultaneously.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/typedInput/index.md#2025-04-09_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" id=\"node-input-example5\">\n```\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"#node-input-example5\").typedInput({type:\"fruit\", types:[{\n    value: \"fruit\",\n    multiple: true,\n    options: [\n        { value: \"apple\", label: \"Apple\"},\n        { value: \"banana\", label: \"Banana\"},\n        { value: \"cherry\", label: \"Cherry\"},\n    ]\n}]})\n```\n\n----------------------------------------\n\nTITLE: Setting Synchronous Delivery Mode in Node-RED Configuration\nDESCRIPTION: Configuration option to temporarily restore synchronous message delivery mode in Node-RED 1.0. This setting is intended as a stop-gap measure for flows that depend on synchronous behavior, but is considered deprecated upon introduction.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-08-16-going-async.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n    runtimeSyncDelivery: true\n```\n\n----------------------------------------\n\nTITLE: Disabling Auto-Scroll on Item Addition in EditableList\nDESCRIPTION: This code shows how to disable the auto-scroll feature when new items are added to an EditableList. Setting scrollOnAdd to false prevents automatic scrolling to new items.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/editableList/index.md#2025-04-09_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n$(\"ol.list\").editableList({\n    scrollOnAdd: false\n});\n```\n\n----------------------------------------\n\nTITLE: Preventing Message Cloning in Node-RED 1.0 Function Node\nDESCRIPTION: This snippet shows how to prevent automatic message cloning in a Function node in Node-RED 1.0 by passing a false flag as the second argument to node.send(). This is useful for high-performance scenarios or when dealing with uncloneable objects.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-09-13-cloning-messages.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nnode.send(msg, false);\n```\n\n----------------------------------------\n\nTITLE: Emptying TreeList Content\nDESCRIPTION: Example of how to remove all items from a TreeList widget.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/ui/treeList/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n$(\".input\").treeList('empty');\n```\n\n----------------------------------------\n\nTITLE: Backward Compatible Node-RED Input Handler Implementation\nDESCRIPTION: A defensive implementation of the input event handler that works in both pre-1.0 and 1.0+ versions of Node-RED by checking for the existence of the new parameters.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-09-20-node-done.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nlet node = this;\nthis.on('input', function(msg, send, done) {\n    // If this is pre-1.0, 'send' will be undefined, so fallback to node.send\n    send = send || function() { node.send.apply(node,arguments) }\n    // do some work with msg\n    someImaginaryLibrary(msg, (err, result) => {\n        if (err) {\n            // Report back the error\n            if (done) {\n                 // Use done if defined (1.0+)\n                done(err)\n            } else {\n                // Fallback to node.error (pre-1.0)\n                node.error(err, msg);\n            }\n        } else {\n            msg.payload = result;\n            send(msg);\n            // Check done exists (1.0+)\n            if (done) {\n                done();\n            }\n        }\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing a Promise-Based Storage API Function in Node-RED\nDESCRIPTION: This example demonstrates how to implement a promise-based function for the Storage API using When.js. It shows a getFlows() function that returns a promise and handles asynchronous operations with proper resolution and error handling.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/storage/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction getFlows() {\n    // create and return a promise\n    return when.promise(function(resolve,reject) {\n        // resolve - a function to be called with the successful result\n        // reject - a function to be called if an error occurs\n\n        // do some asynchronous work, with a callback on completion\n        doAsyncWork(function(err,result) {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(result);\n            }\n        });\n    });\n}\n\ngetFlows()\n    .then(function(result) {\n        // Called when getFlows completes successfully\n    })\n    .otherwise(function(err) {\n        // Called when getFlows hits an error\n    });\n```\n\n----------------------------------------\n\nTITLE: Using JSONata $moment for Timezone Operations in Node-RED 1.1\nDESCRIPTION: Demonstrates the new JSONata $moment function that provides access to the Moment date/time library within expressions, enabling timezone-aware operations.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2020-06-30-version-1-1-released.md#2025-04-09_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n$moment().tz(\"Pacific/Auckland\")\n```\n\n----------------------------------------\n\nTITLE: Example Library Directory Listing Format in JavaScript\nDESCRIPTION: This code snippet demonstrates the expected format for a directory listing returned by Storage.getLibraryEntry() when the name parameter represents a directory. The listing contains a mix of string entries (representing subdirectories) and objects with metadata for file entries.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/storage/methods/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n[ 'directory1',\n  'directory2',\n  { fn: 'File-1.js', outputs: 3 },\n  { fn: 'File-2.js', outputs: 1 },\n  { fn: 'File-3.js', outputs: 2 }\n]\n```\n\n----------------------------------------\n\nTITLE: Generating Password Hash for adminAuth in Node-RED 1.1\nDESCRIPTION: Demonstrates how to use the built-in password hashing feature to create secure password hashes for Node-RED's adminAuth configuration.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2020-06-30-version-1-1-released.md#2025-04-09_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\n$ node-red admin hash-pw\nPassword:\n$2b$08$sjxLvq8MmycyWJpxPLyweuw/WlYt1MX56eG5Q5nlyxJs2fASGm2jm\n```\n\n----------------------------------------\n\nTITLE: Adding a Hook Handler in Node-RED\nDESCRIPTION: Demonstrates how to add a preDeliver hook handler using RED.hooks.add(). This example logs a message before delivering to a destination.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/hooks/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks.add(\"preDeliver.my-hooks\", (sendEvent) => {\n    console.log(`About to deliver to ${sendEvent.destination.id}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Referencing Nested Message Properties in Change Node\nDESCRIPTION: Demonstrates how to use nested property references in a Change node to set a flow context value based on message properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2021-04-08-version-1-3-released.md#2025-04-09_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Change node configuration:\n// set flow.rooms[msg.topic] to the value of msg.payload\n```\n\n----------------------------------------\n\nTITLE: Markdown API Endpoint Table\nDESCRIPTION: A markdown table listing all available Node-RED admin API endpoints with their HTTP methods and descriptions. The table includes endpoints for authentication, flow management, runtime settings, and node administration.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n Endpoint                                                   | Description\n------------------------------------------------------------|-------------------------\n[<span class=\"method\">GET</span>/auth/login](get/auth/login)               | Get the active authentication scheme\n[<span class=\"method\">POST</span>/auth/token](post/auth/token)             | Exchange credentials for access token\n[<span class=\"method\">POST</span>/auth/revoke](post/auth/revoke)           | Revoke an access token\n[<span class=\"method\">GET</span>/settings](get/settings)                   | Get the runtime settings\n[<span class=\"method\">GET</span>/diagnostics](get/diagnostics)             | Get the runtime diagnostics\n[<span class=\"method\">GET</span>/flows](get/flows)                         | Get the active flow configuration\n[<span class=\"method\">GET</span>/flows/state](get/flows/state)             | Get the active flow's runtime state\n[<span class=\"method\">POST</span>/flows](post/flows)                       | Set the active flow configuration\n[<span class=\"method\">POST</span>/flows/state](post/flows/state)           | Set the active flow's runtime state\n[<span class=\"method\">POST</span>/flow](post/flow)                         | Add a flow to the active configuration\n[<span class=\"method\">GET</span>/flow/:id](get/flow)                       | Get an individual flow configuration\n[<span class=\"method\">PUT</span>/flow/:id](put/flow)                       | Update an individual flow configuration\n[<span class=\"method\">DELETE</span>/flow/:id](delete/flow)                 | Delete an individual flow configuration\n[<span class=\"method\">GET</span>/nodes](get/nodes)                         | Get a list of the installed nodes\n[<span class=\"method\">POST</span>/nodes](post/nodes)                       | Install a new node module\n[<span class=\"method\">GET</span>/nodes/:module](get/nodes/module)          | Get a node module's information\n[<span class=\"method\">PUT</span>/nodes/:module](put/nodes/module)          | Enable/Disable a node module\n[<span class=\"method\">DELETE</span>/nodes/:module](delete/nodes/module)    | Remove a node module\n[<span class=\"method\">GET</span>/nodes/:module/:set](get/nodes/module/set) | Get a node module set information\n[<span class=\"method\">PUT</span>/nodes/:module/:set](put/nodes/module/set) | Enable/Disable a node set\n```\n\n----------------------------------------\n\nTITLE: Using Environment Variables in Template Node\nDESCRIPTION: Example syntax for accessing environment variables within the Template node. This allows incorporating system environment values into template content.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2022-07-14-version-3-0-released.md#2025-04-09_snippet_2\n\nLANGUAGE: handlebars\nCODE:\n```\nMy favourite colour is {{env.COLOUR}}.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Flow Configuration JSON Response in Node-RED API\nDESCRIPTION: This JSON response represents the structure of a flow configuration returned by the GET /flow/:id endpoint. It includes the flow's id, label, and arrays for nodes, configs, and subflows.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/flow/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"91ad451.f6e52b8\",\n  \"label\": \"Sheet 1\",\n  \"nodes\": [ ],\n  \"configs\": [ ],\n  \"subflows\": [ ]\n}\n```\n\n----------------------------------------\n\nTITLE: Loading a Specific Project in Node-RED\nDESCRIPTION: Node-RED now allows loading a specific project from the command line by specifying the project name instead of a flow file name.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-03-12-version-0-20-released.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode-red project-name\n```\n\n----------------------------------------\n\nTITLE: Defining API Endpoint Structure in Markdown\nDESCRIPTION: This snippet defines the structure and metadata for the API documentation page. It includes layout information, table of contents reference, title, and navigation slug details.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/get/credentials/type/id/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: docs-api\ntoc: toc-api-admin.html\ntitle: GET /credentials/:type/:id\nslug:\n  - url: \"/docs/api/admin\"\n    label: \"admin\"\n  - url: \"/docs/api/admin/methods\"\n    label: \"methods\"\n  - get credentials\n---\n```\n\n----------------------------------------\n\nTITLE: Starting Node-RED in Safe Mode\nDESCRIPTION: A new command-line flag '--safe' has been added to start Node-RED without running flows. This is useful for troubleshooting crashes caused by problematic flows.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-03-12-version-0-20-released.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode-red --safe\n```\n\n----------------------------------------\n\nTITLE: Setting Flows with Separate Node Credentials\nDESCRIPTION: Example showing how to include credentials as a separate object in the request. This method keeps all credentials in a separate top-level object, referenced by node IDs.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/flows/index.md#2025-04-09_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"rev\": \"abc-123\",\n    \"flows\": [\n      {\n        \"type\": \"tab\",\n        \"id\": \"396c2376.c693dc\",\n        \"label\": \"Sheet 1\"\n      }\n    ],\n    \"credentials\": {\n        \"396c2376.c693dc\": {\n            \"user\": \"my-username\",\n            \"pass\": \"my-password\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables in JSONata Expression\nDESCRIPTION: Shows how to access environment variables within a JSONata expression using the new $env() function.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2018-08-14-version-0-19-released.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$env()\n```\n\n----------------------------------------\n\nTITLE: Successful Installation Response - JSON Response\nDESCRIPTION: Example JSON response after successfully installing a node module, showing the module name, version and details of installed nodes.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/methods/post/nodes/index.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"node-red-node-suncalc\",\n  \"version\": \"0.0.6\",\n  \"nodes\": [\n    {\n      \"id\": \"node-red-node-suncalc/suncalc\",\n      \"name\": \"suncalc\",\n      \"types\": [\n        \"sunrise\"\n      ],\n      \"enabled\": true,\n      \"loaded\": true,\n      \"module\": \"node-red-node-suncalc\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Split Node Streaming Mode Input in Node-RED\nDESCRIPTION: Demonstrates the input for the new streaming mode in the Split node of Node-RED 0.17. Shows how misaligned data packets can be received across multiple messages.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2017-06-28-version-0-17-released.md#2025-04-09_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"one\\ntwo\\nthr\" \"ee\\nfour\\n\"\n```\n\n----------------------------------------\n\nTITLE: Complete Flow Configuration in JSON (Legacy Format)\nDESCRIPTION: Represents the entire set of flows active in the runtime as a flat array of Node objects. This is the main format used by the /flows API and for import/export in the editor.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/types.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"1234\",\n    \"type\": \"inject\"\n  },\n  {\n    \"id\": \"5678\",\n    \"type\": \"debug\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Linking to Specific Flow in Node-RED URL\nDESCRIPTION: Shows the updated URL structure in Node-RED 0.15 that allows linking directly to a particular flow or subflow.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2016-10-11-version-0-15-released.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n![](/blog/content/images/2016/10/flow-url.png)\n```\n\n----------------------------------------\n\nTITLE: Checking Authentication Scheme Response - JSON\nDESCRIPTION: Example JSON response when credential-based authentication is active. It specifies the authentication type and prompts for username and password.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/admin/oauth.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"credentials\",\n  \"prompts\": [\n    {\n      \"id\": \"username\",\n      \"type\": \"text\",\n      \"label\": \"Username\"\n    },\n    {\n      \"id\": \"password\",\n      \"type\": \"password\",\n      \"label\": \"Password\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Cookies in HTTP In Node (JavaScript)\nDESCRIPTION: Demonstrates how to access cookies set on the session using the new cookie parser middleware in the HTTP In node. This allows developers to retrieve cookie data from incoming HTTP requests.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2016-06-14-version-0-14-released.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nmsg.req.cookies\n```\n\n----------------------------------------\n\nTITLE: Configuring Node-RED Settings via Command Line\nDESCRIPTION: Shows how to specify a custom settings file location using command-line arguments in Node-RED.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2013-12-21-version-0-5-0-released.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ node red.js --settings /home/nol/.node-red/settings.js\n```\n\n----------------------------------------\n\nTITLE: Report-By-Exception Node Usage in Node-RED\nDESCRIPTION: The RBE node filters messages based on payload value changes. For numeric or string values, it checks if msg.payload differs from previous message. For numeric values, it can also check if the difference exceeds a specified margin or percentage.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2015-07-15-version-0-11-0-released.md#2025-04-09_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nmsg.payload // Value checked against previous message\\n// For numeric values: checks difference threshold\\n// For string values: checks exact changes\n```\n\n----------------------------------------\n\nTITLE: Updated Node-RED Embedding Pattern for v0.6.0\nDESCRIPTION: The new pattern for embedding Node-RED in a Node.js application with version 0.6.0, showing how to properly mount both the admin and node HTTP endpoints separately.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2014-02-21-version-0-6-0-released.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\napp.use(settings.httpAdminRoot,RED.httpAdmin);\napp.use(settings.httpNodeRoot,RED.httpNode);\n```\n\n----------------------------------------\n\nTITLE: HTTPRequest URL Template Example\nDESCRIPTION: Example of using mustache-style template tags in HTTPRequest node URLs for dynamic URL generation based on message properties.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2014-04-16-version-0-7-0-released.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    topic: \"foo\",\n    user: \"fred\",\n}\n```\n\n----------------------------------------\n\nTITLE: Node-RED Error Output Example\nDESCRIPTION: Example of error messages shown when Node-RED fails to load nodes with missing dependencies.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2014-04-16-version-0-7-0-released.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n16 Apr 21:16:59 - [23-watch.js] Error: Cannot find module 'fs.notify'\n16 Apr 21:16:59 - [32-feedparse.js] Error: Cannot find module 'feedparser'\n```\n\n----------------------------------------\n\nTITLE: TCP Echo Server Flow Configuration\nDESCRIPTION: JSON configuration for a TCP echo server flow that demonstrates session-aware TCP nodes functionality. The flow receives TCP input, processes it through a function node, and sends back a response.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2013-12-21-version-0-5-0-released.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n[{\"id\":\"6534336a.9acbcc\",\"type\":\"tcp in\",\"server\":\"server\",\"host\":\"\",\"port\":\"9001\",\"datamode\":\"stream\",\"datatype\":\"buffer\",\"newline\":\"\",\"topic\":\"\",\"name\":\"\",\"base64\":false,\"x\":80,\"y\":140,\"z\":\"e1c9f85b.1e3608\",\"wires\":[[\"2f63c46b.d09c3c\"]]},{\"id\":\"c5d83ebc.3a27c\",\"type\":\"tcp out\",\"host\":\"\",\"port\":\"\",\"beserver\":\"reply\",\"base64\":false,\"name\":\"\",\"x\":320,\"y\":140,\"z\":\"e1c9f85b.1e3608\",\"wires\":[]},{\"id\":\"2f63c46b.d09c3c\",\"type\":\"function\",\"name\":\"\",\"func\":\"msg.payload = \\\"You said: \\\"+msg.payload.toString();\\n\\nreturn msg;\",\"outputs\":1,\"x\":200,\"y\":140,\"z\":\"e1c9f85b.1e3608\",\"wires\":[[\"c5d83ebc.3a27c\"]]}]\n```\n\n----------------------------------------\n\nTITLE: Setting Flow File Formatting in Node-RED\nDESCRIPTION: Configuration option to make flow files human-readable by formatting the JSON with proper indentation instead of using the default compact single-line format. This is enabled by setting the 'flowFilePretty' option in the Node-RED settings file.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2014-06-26-version-0-8-0-released.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nflowFilePretty: true\n```\n\n----------------------------------------\n\nTITLE: Survey Visualization CSS Styling\nDESCRIPTION: CSS styles for formatting survey data visualizations including charts, bars, legends, popovers and treemaps with detailed styling for interactive elements\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/survey/2019/index.md#2025-04-09_snippet_4\n\nLANGUAGE: css\nCODE:\n```\nh3 {\n    padding-top: 20px;\n}\n\n.chart {\n    padding: 10px 0 20px;\n}\n.chart h4 {\n    margin: 2px 0 20px;\n}\n.chart ol {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n}\n.chart ol li {\n    margin-bottom: 2px;\n}\n.chart-label {\n    font-size: 0.8em;\n    padding-left: 255px;\n    color: #aaa;\n}\n.chart-bar-label {\n    text-align: right;\n    width: 250px;\n    padding: 5px;\n    margin-bottom: 1px;\n    display: inline-block;\n    font-size: 0.8em;\n    vertical-align:middle;\n    line-height: 1em;\n    border-right: 1px solid #B68181;\n    min-height: 30px;\n}\n.chart-bar-value {\n    font-family: monospace;\n    vertical-align:middle;\n    display: inline-block;\n    width: 50px;\n    padding: 5px;\n    font-size: 0.8em;\n    line-height: 1em;\n    border-right: 1px solid #B68181;\n    min-height: 30px;\n}\n.chart-bar {\n    vertical-align:middle;\n    display: inline-block;\n    width: calc(100% - 310px);\n    margin-left: 5px;\n    background: #f9f9f9;\n    border-radius: 2px;\n    height: 30px;\n}\n.chart-bar-fill {\n    position: relative;\n    display: inline-block;\n    height: 100%;\n    box-sizing: border-box;\n    border: 1px solid #000;\n    font-size: 0.6em;\n    color: #eee;\n    padding-left: 2px;\n}\n.chart-bar-fill:first-child {\n    border-top-left-radius: 2px;\n    border-bottom-left-radius: 2px;\n}\n.chart-bar-fill:not(:first-child) {\n    border-left: 1px solid #f9f9f9\n}\n.chart-bar-fill-series-0 { border-color: #B68181; background: #B68181; }\n.chart-bar-fill-series-1 { border-color: #FCD0A1; background: #FCD0A1; }\n.chart-bar-fill-series-2 { border-color: #B1B695; background: #B1B695; }\n.chart-bar-fill-series-3 { border-color: #A393BF; background: #A393BF; }\n.chart-bar-fill-series-4 { border-color: #AFD2E9; background: #AFD2E9; }\n\n.chart-legend {\n    margin-top: 5px;\n    text-align: center;\n    font-size: 0.8em;\n    color: #666;\n    margin-left: 280px;\n}\n.chart-legend-label {\n    margin-left: 3px;\n    margin-right: 15px;\n    vertical-align: middle;\n}\n\n.chart-legend-swatch {\n    display: inline-block;\n    width: 20px;\n    height: 10px;\n    vertical-align: middle;\n}\n\n.chart-bar-fill:hover .popover {\n    opacity:1;\n}\n\n.popover {\n    pointer-events: none;\n    width: 50px;\n    text-align: center;\n    opacity:0;\n    transition: opacity 1s;\n    position: absolute;\n    height: auto;\n    background: #333;\n    color: #eee;\n    border-radius: 4px;\n    z-index: 1000;\n    border-color: #333;\n    top: -120%;\n    left: calc(50% - 25px);\n    font-size: 12px;\n    padding: 5px 7px;\n    line-height: 1.8em;\n}\n\n.popover:after, .popover:before {\n    border: solid transparent;\n    content: \" \";\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n    top: 100%;\n    left: 50%;\n}\n\n\n.popover:after {\n    border-color: transparent;\n    border-top-color: #333;\n    border-width: 7px;\n    margin-left: -7px;\n}\n.popover:before {\n    border-color: transparent;\n    border-top-color: #333;\n    border-width: 8px;\n    margin-left: -8px;\n}\n\n\n#comments-treemap {\n    background: #ddd;\n    height: 500px;\n}\n.treemap-label {\n    font-size: 0.8em;\n    color: #aaa;\n}\ntext {\n    fill: #f3f3f3;\n    font-size: 11px;\n    pointer-events: none;\n}\n.titleBar text {\n    fill: #555;\n    font-size: 14px;\n}\nrect {\n    stroke: #fff;\n    fill-opacity: 0.6;\n}\nrect.parent,\n.titleBar rect {\n    stroke-width: 2px;\n}\n\n.titleBar rect {\n    fill: white;\n}\n\n.children rect.parent,\n.leaf:hover rect.child,\n.titleBar rect {\n    cursor: pointer;\n}\n\n.children rect.parent {\n}\n\n.children:hover rect.child {\n    fill-opacity: 1;\n}\n.leaf:hover rect.child {\n    fill-opacity: 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Global Node-RED Installation\nDESCRIPTION: Command to update a globally installed Node-RED to the latest version using npm.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2015-02-25-changing-where-node-red-stores-data.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm update -g node-red\n```\n\n----------------------------------------\n\nTITLE: Processing Slack Invite Requests with JavaScript and jQuery\nDESCRIPTION: This JavaScript code handles the Slack invite request process. It sends an AJAX POST request to a serverless function, processes the response, and displays appropriate messages to the user based on the result.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/community/slack/index.md#2025-04-09_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n$('#go').click(function() {\n    $('.slackerr').text();\n    $('#go').attr('disabled',true);\n    $.ajax({\n        type: \"POST\",\n        url: 'https://gnh34zyze1.execute-api.eu-west-2.amazonaws.com/default/nodeREDSlackInviter',\n        data: {email:$('#e').val()},\n        success: function(data,status) {\n            $('#go').attr('disabled',false);\n            if (!data.ok) {\n                if (data.error === 'invalid_email') {\n                    $('.slackerr').text('Not a valid email address');\n                } else if (data.error === 'already_invited') {\n                    $('.slackerr').text('Email address already invited');\n                } else if (data.error === 'already_in_team') {\n                    $('.slackerr').text('Email address already in the team');\n                } else {\n                    $('.slackerr').text('Something unexpected happened: '+data.error);\n                }\n                console.log(data);\n            } else {\n                $('#e').val('')\n                $('.slackmsg').show();\n            }\n        }\n    });\n})\n```\n\n----------------------------------------\n\nTITLE: Function Node Timeout Handling in Node-RED\nDESCRIPTION: Function nodes in Node-RED now support both setTimeout and clearTimeout functions for implementing delayed operations and clearing scheduled timeouts.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2015-07-15-version-0-11-0-released.md#2025-04-09_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nsetTimeout(function() {\\n    // Delayed operation\\n}, delay);\\n\\nclearTimeout(timeoutId); // Clear scheduled timeout\n```\n\n----------------------------------------\n\nTITLE: Contributing Guidelines and Requirements for Node-RED Project\nDESCRIPTION: Lists project titles, contributing guidelines, PR requirements, git workflow and tools used in Node-RED project development\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/contribute/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: about-single\ntitle: Contributing to Node-RED\nslug: contributing\n---\n```\n\n----------------------------------------\n\nTITLE: Implementing OneditResize Function in Node-RED (JavaScript)\nDESCRIPTION: Example of using the new oneditresize function in a Node-RED node definition to handle layout changes when the edit dialog is resized.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2016-01-18-version-0-13-released.md#2025-04-09_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\noneditresize: function() {\n    // Handle resize logic here\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for the about page layout and title.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/about/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: about-single\ntitle: About\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Buffer Object in Node-RED JSON Input\nDESCRIPTION: Example of how to define a Buffer object using the new Buffer type in Node-RED 0.17's typedInput widget. This JSON array will be converted to a corresponding Buffer object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2017-06-28-version-0-17-released.md#2025-04-09_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n[1,2,3,4]\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Pass-by-Reference in JavaScript\nDESCRIPTION: This snippet illustrates how JavaScript uses pass-by-reference for objects, showing how modifying one variable can affect another that references the same object.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2019-09-13-cloning-messages.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n> let a = { payload: \"hello\" };\n> let b = a;\n> b.payload = \"goodbye\";\n> console.log(a)\n{ payload: 'goodbye' }\n```\n\n----------------------------------------\n\nTITLE: Cloning Node-RED Documentation Repository in Shell\nDESCRIPTION: Command to clone the Node-RED documentation repository from GitHub. Replace {your-github} with your GitHub username.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/README.md#2025-04-09_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/{your-github}/node-red.github.io\n```\n\n----------------------------------------\n\nTITLE: Configuring RED.hooks API in Node-RED\nDESCRIPTION: Introduction of RED.hooks API to enable pluggable message routing, supporting future features like flow debugging, distributed runtimes, and integrated testing.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2020-10-15-version-1-2-released.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nRED.hooks\n```\n\n----------------------------------------\n\nTITLE: Blog Post Front Matter\nDESCRIPTION: YAML front matter defining the blog post metadata including layout, title and author.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/_posts/2021-10-21-version-2-1-released.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: blog\ntitle: Version 2.1 released\nauthor: nick\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Up Jekyll for Node-RED Site Preview in Shell\nDESCRIPTION: Commands to install dependencies, build, and serve the Node-RED documentation site locally using Jekyll and Bundler.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/README.md#2025-04-09_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd node-red.github.io\nbundle install\nbundle exec jekyll serve -w\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: Standard copyright and license notice template to be included in source files. The template includes placeholders for year and copyright owner information that should be customized for each project.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/api/modules/v/0.20.0-beta.2/scripts/prettify/Apache-License-2.0.txt#2025-04-09_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Configuring Node-RED package.json for Docker\nDESCRIPTION: This snippet shows the required 'start' script in package.json for running Node-RED in a Docker container. It specifies the command to start Node-RED with the necessary options.\nSOURCE: https://github.com/node-red/node-red.github.io/blob/master/docs/getting-started/docker.md#2025-04-09_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n    \"scripts\": {\n        \"start\": \"node $NODE_OPTIONS node_modules/node-red/red.js $FLOWS\",\n        ...\n\n```"
  }
]
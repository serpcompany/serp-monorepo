[
  {
    "owner": "rebus-org",
    "repo": "rebus",
    "content": "TITLE: Fluent Configuration of Rebus with Type-Based Routing in C#\nDESCRIPTION: Shows complete fluent configuration of Rebus including logging, transport setup, and type-based message routing using MSMQ.\nSOURCE: https://github.com/rebus-org/rebus/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nConfigure.With(someContainerAdapter)\n    .Logging(l => l.Serilog())\n    .Transport(t => t.UseMsmq(\"myInputQueue\"))\n    .Routing(r => r.TypeBased().MapAssemblyOf<SomeMessageType>(\"anotherInputQueue\"))\n    .Start();\n\n// have IBus injected in application services for the duration of the application lifetime    \n\n// let the container dispose the bus when your application exits\nmyFavoriteIocContainer.Dispose();\n```\n\n----------------------------------------\n\nTITLE: Manual Rebus Bus Initialization in C#\nDESCRIPTION: Shows how to manually initialize and manage the RebusBus instance with worker threads. Demonstrates basic setup and proper disposal.\nSOURCE: https://github.com/rebus-org/rebus/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nvar bus = new RebusBus(...);\nbus.Start(1); //< 1 worker thread\n\n// use the bus for the duration of the application lifetime\n\n// remember to dispose the bus when your application exits\nbus.Dispose();\n```\n\n----------------------------------------\n\nTITLE: Built-in Container Adapter Configuration in C#\nDESCRIPTION: Demonstrates using the built-in container adapter for Rebus configuration. Shows basic handler activation setup.\nSOURCE: https://github.com/rebus-org/rebus/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nvar someContainerAdapter = new BuiltinHandlerActivator();\n```\n\n----------------------------------------\n\nTITLE: Namespace-Based Message Routing Configuration in C#\nDESCRIPTION: Demonstrates how to configure Rebus routing based on specific namespace mappings rather than entire assemblies.\nSOURCE: https://github.com/rebus-org/rebus/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nConfigure.With(someContainerAdapter)\n    .(...)\n    .Routing(r => r.TypeBased().MapAssemblyNamespaceOf<SomeMessageType>(\"namespaceInputQueue\"))\n    .(...);\n\n// have IBus injected in application services for the duration of the application lifetime    \n\n// let the container dispose the bus when your application exits\nmyFavoriteIocContainer.Dispose();\n```\n\n----------------------------------------\n\nTITLE: Custom IoC Container Integration in C#\nDESCRIPTION: Example of integrating Rebus with a custom IoC container using an adapter pattern.\nSOURCE: https://github.com/rebus-org/rebus/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nvar someContainerAdapter = new AdapterForMyFavoriteIocContainer(myFavoriteIocContainer);\n```\n\n----------------------------------------\n\nTITLE: Version History Documentation in Markdown\nDESCRIPTION: Markdown formatted changelog entries documenting version changes, bug fixes, and new features for the Rebus messaging library, including contributor credits.\nSOURCE: https://github.com/rebus-org/rebus/blob/master/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 8.0.3\n* Fix bug that prevented manually dead-lettering messages from a second-level retry handler\n\n## 8.1.0\n* Introduce IExceptionInfoFactory to enable keeping real `Exception` objects alongside exception details when tracking errors purely in-mem - thanks [ladenedge]\n\n## 8.2.2\n* Add optional `rbs2-delivery-count` header, which may be provided by transports that are capable of counting deliveries natively\n\n## 8.2.4\n* Fix behavior of fail-fast combined with 2nd level retries to be like before (i.e. failing fast will immediately trigger 2nd level retry)\n\n## 8.3.0\n* Alter how the message transaction context is managed when dead-lettering (i.e. the failing message context is now passed to `IErrorHandler` - it is now up to the error handler to create its own scope if it so desires) - thanks [AndreaCuneo]\n\n## 8.4.0\n* Add .NET 6 as compilation target to enable stripping dependencies that are included in the BCL - thanks [thompson-tomo]\n```\n\n----------------------------------------\n\nTITLE: Example Git Commit Command for Rebus Contributions\nDESCRIPTION: A simple example of a Git commit command that can be used when making changes to a local copy of the Rebus repository. This demonstrates the basic syntax for creating a commit with a message.\nSOURCE: https://github.com/rebus-org/rebus/blob/master/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -am\"bam!!!11\"\n```"
  }
]
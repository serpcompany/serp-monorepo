[
  {
    "owner": "chrisroyse",
    "repo": "ai-vibe-code-setup",
    "content": "TITLE: Defining Core Flow Principles in Markdown\nDESCRIPTION: Outlines core principles for maintaining clarity, task management, and code quality in SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Φ•Ω [Core•Flow]\n* §͟min ⟨clarity⟩+⟨maintain⟩ → ¬⟨complex⟩\n* ⊙{task}⊡ ⊥extend\n* Ω⤿ ⊞direct ¬✓temp\n* §͟qual ⊤{clean|tested|doc'd|secure}\n* ⋈team ⟨usr=agent⟩ [?ambig] → ⊦confirm→action\n```\n\n----------------------------------------\n\nTITLE: Defining Coding Standards in Markdown\nDESCRIPTION: Specifies coding standards and best practices for SPARC agentic development, including language conventions, modularity, and code organization.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## Κ•Σ [Code]\n* ⊢{bestPractice}⟨lang⟩\n* ≡⟨conventions⟩\n* ⊤⟨module⟩+⟨scale⟩+⟨clear⟩\n* ⟨file⟩≤350Λ →⋉propose\n* ¬⟨duplication⟩+⟨abstract⟩\n* ⊤{lint|format}config\n```\n\n----------------------------------------\n\nTITLE: Defining Security Practices in Markdown\nDESCRIPTION: Specifies security principles, including server-side logic, input validation, and environment variable usage in SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n## Ξ [Security]\n* ⊤{server-logic}\n* ‼️⊤⟨validate⟩+⟨sanitize⟩\n* ¬⟨hardcode⟩→⊢⟨env⟩\n```\n\n----------------------------------------\n\nTITLE: Defining Context Management in Markdown\nDESCRIPTION: Specifies guidelines for managing context, including documentation, architecture, and decision-making in SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Γ•Μ•Υ [Context]\n* ⊦⟨doc⟩ ⟨ctx⟩ → ⟨action⟩ [?essential]↑\n* ⊤⟨arch⟩{boundSpec}\n* ⊢{⟨tech⟩:ver|⟨pat⟩:arch} ⊥newΔ\n* ≡{Μbanк}⇒⟨decisions⟩\n```\n\n----------------------------------------\n\nTITLE: Defining Testing Requirements in Markdown\nDESCRIPTION: Specifies testing principles, including test-driven development and coverage requirements for SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n## Δ [Testing]\n* ⊢⟨test→code⟩\n* ⊤∀⟨coverage⟩\n* ‼️✓⟨tests⟩→⊦complete\n```\n\n----------------------------------------\n\nTITLE: Defining Documentation Standards in Markdown\nDESCRIPTION: Specifies documentation principles, emphasizing accuracy and structure in SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n## Λ [Docs]\n* ⊤⟨mirror-reality⟩+⟨structure⟩\n```\n\n----------------------------------------\n\nTITLE: Defining Task Management in Markdown\nDESCRIPTION: Outlines task management principles, including task breakdown, research, and self-evaluation in SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Τ•Ρ [Tasks]\n* ⊦⟨micro⟩ = {spec+pseudo+arch}\n* ‼️Ρ{pMCP}→{search|docs|API|error}✓findings\n* Σ⊗ [if→task]\n* ⊗self{logic+rules}→⊦complete\n```\n\n----------------------------------------\n\nTITLE: Defining Debugging Approach in Markdown\nDESCRIPTION: Outlines debugging principles, focusing on root cause analysis and logging practices in SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n## Β [Debug]\n* ⊙{⟨root⟩:SAPPO}\n* ⊢⟨log⟩→{sparse|precise}\n```\n\n----------------------------------------\n\nTITLE: Defining Refactoring Guidelines in Markdown\nDESCRIPTION: Outlines principles for code refactoring and maintaining integrity in SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## Χ [Refactor]\n* ⋉{⟨read⟩|⟨redund⟩|⟨perf⟩|⟨arch⟩}\n* ⊨{⋈intact}⇒{⊦tester-tdd}\n```\n\n----------------------------------------\n\nTITLE: Defining Version Control and Environment Guidelines in Markdown\nDESCRIPTION: Outlines version control and environment configuration principles for SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n## Ψ•Ε [VCS•Env]\n* ⊤⟨git⟩{commit|message|branch}\n* ⟨code⟩→⟨agnostic⟩⇒⟨config⟩\n```\n\n----------------------------------------\n\nTITLE: Defining Project Limitations in Markdown\nDESCRIPTION: Outlines project limitations, including file size restrictions and credential handling in SPARC agentic development.\nSOURCE: https://github.com/ChrisRoyse/AI-Vibe-Code-Setup/blob/main/Custom Coding Instructions.txt#2025-04-17_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n## Θ [Limits]\n* ⟨file⟩≤350Λ\n* ¬⟨credentials⟩→⟨abstract⟩\n```"
  }
]
[
  {
    "owner": "codegouvfr",
    "repo": "react-dsfr",
    "content": "TITLE: Setting Up and Testing the React-DSFR Project\nDESCRIPTION: This snippet contains the commands for cloning the repository, installing dependencies, and running various test environments including Storybook, Create React App, Vite, and Next.js configurations. It also shows how to run unit tests.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ngit clone https://github.com/codegouvfr/react-dsfr\ncd react-dsfr\nyarn\n\n# Starting storybook\nyarn storybook\n\n# Starting test apps\nyarn start-cra  # For testing in a Create React App setup\nyarn start-vite # For testing in a Vite setup\nyarn start-next-pagesdir # For testing in a Next.js 13 PagesDir setup (the default setup)\nyarn start-next-appdir # For testing in a Next.js 13 AppDir setup\n\n# Run all unit test (test/runtime):\nyarn test\n# Run only test/runtime/cssVariable.test.ts (for example)\nnpx vitest -t \"Resolution of CSS variables\"\n```\n\n----------------------------------------\n\nTITLE: Starting DSFR in a Single Page Application\nDESCRIPTION: This function initializes DSFR in a Single Page Application context. It sets up the necessary configuration and prepares the application for using DSFR components.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/src/bin/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { startReactDsfr } from \"@codegouvfr/react-dsfr\";\n```\n\n----------------------------------------\n\nTITLE: Theme Management in React DSFR\nDESCRIPTION: Utilities for managing color schemes and themes in a DSFR-based application. These functions allow for detecting and setting user preferences for light or dark mode.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/src/bin/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { useIsDark, setDarkMode, setLightMode } from \"@codegouvfr/react-dsfr\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Counter with StatefulObservable in React TSX\nDESCRIPTION: This snippet demonstrates how to create a counter using StatefulObservable. It shows the creation of a stateful observable, a function to increment the counter, and a React component that displays and updates the counter value. The useRerenderOnChange hook is used to trigger re-renders when the observable changes.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/src/tools/StatefulObservable/README.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { createStatefulObservable, useRerenderOnChange } from \"tools/StatefulObservable\";\n\nconst $counter = createStatefulObservable(() => 0);\n\nexport function incrementCounter() {\n    $counter.current++;\n}\n\nexport function Counter() {\n    useRerenderOnChange($counter);\n\n    const counter = $counter.current;\n\n    return <span>Counter: {counter}</span>;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Assets from react-dsfr\nDESCRIPTION: Script for importing necessary DSFR assets into your project. This utility helps ensure the proper integration of DSFR styles and resources.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/src/bin/README.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { importFonts, getImportFontsCode } from \"@codegouvfr/react-dsfr/spa\";\n```\n\n----------------------------------------\n\nTITLE: Using DSFR Classes in Custom Components\nDESCRIPTION: Utility for accessing DSFR CSS class names to use in custom components. This helps maintain consistency with the Design System when building custom UI elements.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/src/bin/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { fr } from \"@codegouvfr/react-dsfr\";\n```\n\n----------------------------------------\n\nTITLE: Setting up and running the React DSFR development environment\nDESCRIPTION: Instructions for cloning the repository, installing dependencies, and running various test applications including Storybook, Create React App, Vite, and Next.js configurations. Also includes commands for running unit tests.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/README.fr.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/codegouvfr/react-dsfr\ncd react-dsfr\nyarn\n\n# DÃ©marrer storybook\nyarn storybook\n\n# DÃ©marrer les applications de test\nyarn start-cra  # Pour tester dans une configuration Create React App\nyarn start-vite # Pour tester dans une configuration Vite\nyarn start-next-pagesdir # Pour tester dans une configuration Next.js 13 PagesDir (la configuration par dÃ©faut)\nyarn start-next-appdir # Pour tester dans une configuration Next.js 13 AppDir\n\n# ExÃ©cuter tous les tests unitaires (test/runtime):\nyarn test\n# ExÃ©cuter uniquement test/runtime/cssVariable.test.ts (par exemple)\nnpx vitest -t \"Resolution of CSS variables\"\n```\n\n----------------------------------------\n\nTITLE: Setting up local development with react-dsfr in another project\nDESCRIPTION: Commands to link a local development copy of react-dsfr into an existing project to test changes. This process involves cloning both repositories, building react-dsfr, and using the custom link-external command to connect them.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd ~/github\ngit clone https://github.com/ORG/YOUR-PROJECT-USING-REACT-DSFR\ncd YOUR-PROJECT-USING-REACT-DSFR\nyarn # or npm install or pnpm install depending of what you are using...\n\ncd ~/github\ngit clone https://github.com/codegouvfr/react-dsfr\ncd react-dsfr\nyarn\nyarn build\nyarn link-external YOUR-PROJECT-USING-REACT-DSFR\nnpx tsc -w -p src # Leave this running if you want hot reload.\n```\n\n----------------------------------------\n\nTITLE: Linking a working version of @gouvfr/dsfr for development\nDESCRIPTION: Steps to link a local copy of the @gouvfr/dsfr package to react-dsfr for development purposes. This is especially useful for the SIG team working on both repositories simultaneously.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd ~/github\ngit clone http://github.com/gouvernementfr/dsfr\ncd dsfr\n# git checkout my-working-branch\nyarn\nyarn build --clean\nyarn link\ncd ~/github/react-dsfr\nyarn\nyarn link @gouvfr/dsfr\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Cloning and Running react-dsfr Application using Bash\nDESCRIPTION: This bash script clone the react-dsfr repository, installs dependencies using yarn, and starts the application. It assumes git and yarn are installed on the system.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/test/integration/cra/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/codegouvfr/react-dsfr\ncd react-dsfr\nyarn\nyarn start-cra\n```\n\n----------------------------------------\n\nTITLE: Cloning and Running React-DSFR\nDESCRIPTION: This snippet shows how to clone the React-DSFR repository from GitHub, install the dependencies with yarn, and start the application using the Next.js App Directory feature.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/test/integration/next-appdir/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/codegouvfr/react-dsfr\ncd react-dsfr\nyarn\nyarn start-next-appdir\n```\n\n----------------------------------------\n\nTITLE: Installing and Running React-DSFR\nDESCRIPTION: Commands to clone the React-DSFR repository from GitHub, install dependencies with Yarn, and start the application in development mode using Next.js pages directory configuration.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/test/integration/next-pagesdir/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/codegouvfr/react-dsfr\ncd react-dsfr\nyarn\nyarn start-next-pagesdir\n```\n\n----------------------------------------\n\nTITLE: Installing and Running React DSFR Application\nDESCRIPTION: Commands to clone the React DSFR repository from GitHub, install dependencies with Yarn, and start the development server using Vite\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/test/integration/vite/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/codegouvfr/react-dsfr\ncd react-dsfr\nyarn\nyarn start-vite\n```\n\n----------------------------------------\n\nTITLE: Rendering React-DSFR Introduction Content\nDESCRIPTION: Renders the introduction content for React-DSFR, including a rotating logo, description, links, and an embedded YouTube video. It also mentions the Storybook's purpose and the color helper tool.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/stories/intro.stories.mdx#2025-04-22_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<div style={{ \"margin\": \"0 auto\", \"maxWidth\": \"700px\", \"textAlign\": \"center\" }}>\n<div style={{ \"display\": \"flex\", \"justifyContent\": \"center\" }}>\n<RotatingLogo style={{ \"width\": 250 }} />\n</div>\n<br/>\nðŸ‡«ðŸ‡· <i>The <a href=\"https://www.systeme-de-design.gouv.fr/\">French State Design System</a> React toolkit</i> ðŸ‡«ðŸ‡· \n<br/>\n\n[Github](https://github.com/codegouvfr/react-dsfr) - [Documentation](https://react-dsfr.codegouv.studio/)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/5q88JgXUAY4\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n\n<br/>\n\nThis Storybook website serves as your daily companion for developing with React-DSFR. \nIt not only provides visibility into the available components but also allows you to preview them in various states, \nenabling you to copy and paste the code directly into your project. \n\nAdditionally, this website features a handy [color helper tool](/?path=/docs/%F0%9F%8E%A8-color-helper--page). \nThis tool empowers you to navigate through the DSFR color palette and choose the most fitting shades for your specific use cases.  \n\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering ColorHelper Component in Storybook Documentation\nDESCRIPTION: This snippet demonstrates how to render the ColorHelper component within the Storybook documentation. It wraps the component in a div with specific styling for centering and maximum width.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/stories/colorHelper.stories.mdx#2025-04-22_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<div style={{ \"margin\": \"0 auto\", \"maxWidth\": 1000 }}>\n    <ColorHelper />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Storybook Meta Component for Color Helper Documentation\nDESCRIPTION: This snippet sets up the Storybook Meta component for the Color Helper documentation page. It specifies the title and configures various view parameters to customize the documentation display.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/stories/colorHelper.stories.mdx#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Meta } from \"@storybook/addon-docs\";\nimport { ColorHelper } from \"./ColorHelper\";\n\n<Meta\n    title=\"ðŸŽ¨ Color Helper\" \n    parameters={{\n        \"viewMode\": \"docs\",\n        \"previewTabs\": {\n            \"canvas\": { \"hidden\": true },\n            \"zoom\": { \"hidden\": true },\n            \"storybook/background\": { \"hidden\": true },\n            \"storybook/viewport\": { \"hidden\": true },\n        },\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Storybook Meta for React-DSFR Introduction\nDESCRIPTION: Sets up the Storybook Meta component for the introduction page, configuring the title and hiding various preview tabs.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/stories/intro.stories.mdx#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Meta } from \"@storybook/addon-docs\";\nimport { useDarkMode } from \"storybook-dark-mode\";\nimport { RotatingLogo } from \"./RotatingLogo\";\n\n<Meta\n    title=\"ðŸ‡«ðŸ‡· Introduction\" \n    parameters={{\n        \"viewMode\": \"docs\",\n        \"previewTabs\": {\n            \"canvas\": { \"hidden\": true },\n            \"zoom\": { \"hidden\": true },\n            \"storybook/background\": { \"hidden\": true },\n            \"storybook/viewport\": { \"hidden\": true },\n        },\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Running Scripts with ts-node\nDESCRIPTION: Command showing how the build scripts are executed directly with ts-node, which allows running TypeScript files without compiling them first.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/scripts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nts-node\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Robot Access Rules\nDESCRIPTION: Basic robots.txt configuration that sets default access permissions for web crawlers. Uses standard robotstxt syntax to allow unrestricted access to all user-agents.\nSOURCE: https://github.com/codegouvfr/react-dsfr/blob/main/test/integration/cra/public/robots.txt#2025-04-22_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\n```"
  }
]
[
  {
    "owner": "projectdiscovery",
    "repo": "naabu",
    "content": "TITLE: Naabu Command-Line Options in YAML Format\nDESCRIPTION: Complete list of Naabu command-line options organized by categories including input options, port settings, rate limits, output formats, configuration, host discovery, and optimization parameters.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nUsage:\n  naabu [flags]\n\nFlags:\nINPUT:\n   -host string[]              hosts to scan ports for (comma-separated)\n   -list, -l string            list of hosts to scan ports (file)\n   -exclude-hosts, -eh string  hosts to exclude from the scan (comma-separated)\n   -exclude-file, -ef string   list of hosts to exclude from scan (file)\n\nPORT:\n   -port, -p string            ports to scan (80,443, 100-200)\n   -top-ports, -tp string      top ports to scan (default 100) [full,100,1000]\n   -exclude-ports, -ep string  ports to exclude from scan (comma-separated)\n   -ports-file, -pf string     list of ports to scan (file)\n   -port-threshold, -pts int   port threshold to skip port scan for the host\n   -exclude-cdn, -ec           skip full port scans for CDN/WAF (only scan for port 80,443)\n   -display-cdn, -cdn          display cdn in use\n\nRATE-LIMIT:\n   -c int     general internal worker threads (default 25)\n   -rate int  packets to send per second (default 1000)\n\nUPDATE:\n   -up, -update                 update naabu to latest version\n   -duc, -disable-update-check  disable automatic naabu update check\n\nOUTPUT:\n   -o, -output string  file to write output to (optional)\n   -j, -json           write output in JSON lines format\n   -csv                write output in csv format\n\nCONFIGURATION:\n   -config string                   path to the naabu configuration file (default $HOME/.config/naabu/config.yaml)\n   -scan-all-ips, -sa               scan all the IP's associated with DNS record\n   -ip-version, -iv string[]        ip version to scan of hostname (4,6) - (default 4) (default [\"4\"])\n   -scan-type, -s string            type of port scan (SYN/CONNECT) (default \"c\")\n   -source-ip string                source ip and port (x.x.x.x:yyy - might not work on OSX) \n   -interface-list, -il             list available interfaces and public ip\n   -interface, -i string            network Interface to use for port scan\n   -nmap                            invoke nmap scan on targets (nmap must be installed) - Deprecated\n   -nmap-cli string                 nmap command to run on found results (example: -nmap-cli 'nmap -sV')\n   -r string                        list of custom resolver dns resolution (comma separated or from file)\n   -proxy string                    socks5 proxy (ip[:port] / fqdn[:port]\n   -proxy-auth string               socks5 proxy authentication (username:password)\n   -resume                          resume scan using resume.cfg\n   -stream                          stream mode (disables resume, nmap, verify, retries, shuffling, etc)\n   -passive                         display passive open ports using shodan internetdb api\n   -irt, -input-read-timeout value  timeout on input read (default 3m0s)\n   -no-stdin                        Disable Stdin processing\n\nHOST-DISCOVERY:\n   -sn, -host-discovery           Perform Only Host Discovery\n   -Pn, -skip-host-discovery      Skip Host discovery (Deprecated: use -wn/-with-host-discovery instead)\n   -wn, -with-host-discovery      Enable Host discovery\n   -ps, -probe-tcp-syn string[]   TCP SYN Ping (host discovery needs to be enabled)\n   -pa, -probe-tcp-ack string[]   TCP ACK Ping (host discovery needs to be enabled)\n   -pe, -probe-icmp-echo          ICMP echo request Ping (host discovery needs to be enabled)\n   -pp, -probe-icmp-timestamp     ICMP timestamp request Ping (host discovery needs to be enabled)\n   -pm, -probe-icmp-address-mask  ICMP address mask request Ping (host discovery needs to be enabled)\n   -arp, -arp-ping                ARP ping (host discovery needs to be enabled)\n   -nd, -nd-ping                  IPv6 Neighbor Discovery (host discovery needs to be enabled)\n   -rev-ptr                       Reverse PTR lookup for input ips\n\nOPTIMIZATION:\n   -retries int       number of retries for the port scan (default 3)\n   -timeout int       millisecond to wait before timing out (default 1000)\n   -warm-up-time int  time in seconds between scan phases (default 2)\n   -ping              ping probes for verification of host\n   -verify            validate the ports again with TCP verification\n\nDEBUG:\n   -health-check, -hc        run diagnostic check up\n   -debug                    display debugging information\n   -verbose, -v              display verbose output\n   -no-color, -nc            disable colors in CLI output\n   -silent                   display only results in output\n   -version                  display version of naabu\n   -stats                    display stats of the running scan (deprecated)\n   -si, -stats-interval int  number of seconds to wait between showing a statistics update (deprecated) (default 5)\n   -mp, -metrics-port int    port to expose naabu metrics on (default 63636)\n```\n\n----------------------------------------\n\nTITLE: Running Naabu Help Command in Shell\nDESCRIPTION: Command to display help information for the Naabu tool. This shows all available options and their descriptions.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnaabu -h\n```\n\n----------------------------------------\n\nTITLE: Basic Naabu Port Scan\nDESCRIPTION: Basic command to run Naabu port scanner against a single host.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/README.md#2025-04-23_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnaabu -host hackerone.com\n```\n\n----------------------------------------\n\nTITLE: Naabu Library Usage Example\nDESCRIPTION: Example of using Naabu as a library in Go code to scan port 80 on scanme.sh.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/README.md#2025-04-23_snippet_8\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"log\"\n\n\t\"github.com/projectdiscovery/goflags\"\n\t\"github.com/projectdiscovery/naabu/v2/pkg/result\"\n\t\"github.com/projectdiscovery/naabu/v2/pkg/runner\"\n)\n\nfunc main() {\n\toptions := runner.Options{\n\t\tHost:      goflags.StringSlice{\"scanme.sh\"},\n\t\tScanType: \"s\",\n\t\tOnResult: func(hr *result.HostResult) {\n\t\t\tlog.Println(hr.Host, hr.Ports)\n\t\t},\n\t\tPorts: \"80\",\n\t}\n\n\tnaabuRunner, err := runner.NewRunner(&options)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer naabuRunner.Close()\n\n\tnaabuRunner.RunEnumeration()\n}\n```\n\n----------------------------------------\n\nTITLE: Running Naabu with Basic Port Specification\nDESCRIPTION: Demonstrates how to run Naabu to scan a single port or multiple ports on localhost.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/cmd/functional-test/testcases.txt#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n127.0.0.1 {{binary}} -p 8000\n```\n\nLANGUAGE: shell\nCODE:\n```\n127.0.0.1 {{binary}} -p 8000,443\n```\n\n----------------------------------------\n\nTITLE: Adjusting Naabu Concurrency and Using Nmap-style Flags\nDESCRIPTION: Illustrates setting concurrency for Naabu scans and using Nmap-style TCP connect scan flag.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/cmd/functional-test/testcases.txt#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n127.0.0.1 {{binary}} -c 25 -p 8000\n```\n\nLANGUAGE: shell\nCODE:\n```\n127.0.0.1 {{binary}} -nmap-cli '-sT' -p 8000\n```\n\nLANGUAGE: shell\nCODE:\n```\n127.0.0.1 {{binary}} -nmap-cli '-sT'\n```\n\n----------------------------------------\n\nTITLE: Custom Port Scan Configuration\nDESCRIPTION: Scanning specific ports including UDP ports using nmap format port specification.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/README.md#2025-04-23_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnaabu -p 80,443,21-23,u:53 -host hackerone.com\n```\n\n----------------------------------------\n\nTITLE: Scanning Multiple Hosts\nDESCRIPTION: Shows how to scan multiple hosts using a list file input.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/README.md#2025-04-23_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nnaabu -list hosts.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Naabu Scan Parameters\nDESCRIPTION: Shows how to set the number of top ports to scan and exclude specific ports from scanning.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/cmd/functional-test/testcases.txt#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n127.0.0.1 {{binary}} -tp 100\n```\n\nLANGUAGE: shell\nCODE:\n```\n127.0.0.1 {{binary}} -ep 80 -p 8000\n```\n\n----------------------------------------\n\nTITLE: Integration with httpx\nDESCRIPTION: Example of piping Naabu results to httpx for HTTP server discovery.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/README.md#2025-04-23_snippet_7\n\nLANGUAGE: console\nCODE:\n```\necho hackerone.com | naabu -silent | httpx -silent\n```\n\n----------------------------------------\n\nTITLE: Enabling JSON Output in Naabu\nDESCRIPTION: Shows how to enable JSON-formatted output for Naabu scan results.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/cmd/functional-test/testcases.txt#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n127.0.0.1 {{binary}} -json\n```\n\n----------------------------------------\n\nTITLE: Port Exclusion Example\nDESCRIPTION: Demonstrates how to exclude specific ports from a full port scan.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/README.md#2025-04-23_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nnaabu -p - -exclude-ports 80,443\n```\n\n----------------------------------------\n\nTITLE: Running Naabu in Passive Stream Mode\nDESCRIPTION: Demonstrates using Naabu in passive stream mode, with an option to verify results.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/cmd/functional-test/testcases.txt#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nscanme.sh {{binary}} -stream -passive\n```\n\nLANGUAGE: shell\nCODE:\n```\nscanme.sh {{binary}} -stream -passive -verify\n```\n\n----------------------------------------\n\nTITLE: Installing Naabu with Go in Shell\nDESCRIPTION: Command to install the latest version of Naabu using Go. This requires Go to be installed on the system.\nSOURCE: https://github.com/projectdiscovery/naabu/blob/dev/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngo install -v github.com/projectdiscovery/naabu/v2/cmd/naabu@latest\n```"
  }
]
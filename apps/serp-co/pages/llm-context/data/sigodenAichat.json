[
  {
    "owner": "sigoden",
    "repo": "aichat",
    "content": "TITLE: Installing AIChat via Package Managers\nDESCRIPTION: Instructions for installing AIChat using various package managers including Cargo, Homebrew, Pacman, Scoop, and Termux.\nSOURCE: https://github.com/sigoden/aichat/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncargo install aichat\n```\n\nLANGUAGE: bash\nCODE:\n```\nbrew install aichat\n```\n\nLANGUAGE: bash\nCODE:\n```\npacman -S aichat\n```\n\nLANGUAGE: bash\nCODE:\n```\nscoop install aichat\n```\n\nLANGUAGE: bash\nCODE:\n```\npkg install aichat\n```\n\n----------------------------------------\n\nTITLE: Running AIChat in Server Mode\nDESCRIPTION: Command to start AIChat's built-in HTTP server, which provides access to Chat Completions API, Embeddings API, Rerank API, LLM Playground, and LLM Arena.\nSOURCE: https://github.com/sigoden/aichat/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ aichat --serve\nChat Completions API: http://127.0.0.1:8000/v1/chat/completions\nEmbeddings API:       http://127.0.0.1:8000/v1/embeddings\nRerank API:           http://127.0.0.1:8000/v1/rerank\nLLM Playground:       http://127.0.0.1:8000/playground\nLLM Arena:            http://127.0.0.1:8000/arena?num=2\n```\n\n----------------------------------------\n\nTITLE: Testing AIChat Server with cURL for Chat Completions\nDESCRIPTION: Example cURL command to test the AIChat server's chat completions API endpoint using Claude model with streaming enabled.\nSOURCE: https://github.com/sigoden/aichat/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -X POST -H \"Content-Type: application/json\" -d '{\n  \"model\":\"claude:claude-3-5-sonnet-20240620\",\n  \"messages\":[{\"role\":\"user\",\"content\":\"hello\"}], \n  \"stream\":true\n}' http://127.0.0.1:8000/v1/chat/completions\n```\n\n----------------------------------------\n\nTITLE: Implementing Async Sleep Function in JavaScript\nDESCRIPTION: Creates an asynchronous timeout function that returns a Promise which resolves after the specified milliseconds. This provides a way to pause execution in async functions using await.\nSOURCE: https://github.com/sigoden/aichat/blob/main/assets/roles/%code%.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nasync function timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n```\n\n----------------------------------------\n\nTITLE: Generating OS-Specific Shell Commands\nDESCRIPTION: This snippet outlines the requirements for generating shell commands for a specific OS distribution. It specifies using '&&' to combine multiple steps in most shells, and ';' for PowerShell. The output should be plain text without markdown formatting.\nSOURCE: https://github.com/sigoden/aichat/blob/main/assets/roles/%shell%.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n{{__shell__}} commands for {{__os_distro__}}\n```\n\n----------------------------------------\n\nTITLE: Tool Configuration in YAML\nDESCRIPTION: A YAML configuration block that sets tool usage parameters for the AI chat project, specifying 'all' as the value for use_tools.\nSOURCE: https://github.com/sigoden/aichat/blob/main/assets/roles/%functions%.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nuse_tools: all\n```"
  }
]
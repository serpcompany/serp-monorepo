[
  {
    "owner": "stripe",
    "repo": "stripe-node",
    "content": "TITLE: Validating Stripe Webhook Signatures in JavaScript\nDESCRIPTION: Shows how to use the constructEvent method to validate that a webhook event was sent by Stripe by verifying its signature against a webhook secret.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nconst event = stripe.webhooks.constructEvent(\n  webhookRawBody,\n  webhookStripeSignatureHeader,\n  webhookSecret\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Stripe SDK with Configuration Object in JavaScript\nDESCRIPTION: Shows how to initialize the Stripe SDK with various configuration options including maxNetworkRetries, httpAgent for proxying, timeout, host, port, and telemetry settings.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport ProxyAgent from 'https-proxy-agent';\n\nconst stripe = Stripe('sk_test_...', {\n  maxNetworkRetries: 1,\n  httpAgent: new ProxyAgent(process.env.http_proxy),\n  timeout: 1000,\n  host: 'api.example.com',\n  port: 123,\n  telemetry: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Making Custom Requests with ES Modules and Async/Await in Stripe Node.js SDK\nDESCRIPTION: Alternative implementation of custom requests using ES modules syntax and async/await pattern. This provides a cleaner way to handle responses from undocumented or beta Stripe APIs.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\nimport Stripe from 'stripe';\nconst stripe = new Stripe('sk_test_...');\n\nconst response = await stripe.rawRequest(\n  'POST',\n  '/v1/beta_endpoint',\n  {param: 123},\n  {apiVersion: '2022-11-15; feature_beta=v3'}\n);\n\n// handle response\n```\n\n----------------------------------------\n\nTITLE: Using Stripe with TypeScript\nDESCRIPTION: Example of using Stripe with TypeScript, including proper type annotations for parameters and response objects.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport Stripe from 'stripe';\nconst stripe = new Stripe('sk_test_...');\n\nconst createCustomer = async () => {\n  const params: Stripe.CustomerCreateParams = {\n    description: 'test customer',\n  };\n\n  const customer: Stripe.Customer = await stripe.customers.create(params);\n\n  console.log(customer.id);\n};\ncreateCustomer();\n```\n\n----------------------------------------\n\nTITLE: Initializing Stripe with ES Modules and Async/Await\nDESCRIPTION: Example of initializing the Stripe client using ES modules import syntax and creating a customer using async/await.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport Stripe from 'stripe';\nconst stripe = new Stripe('sk_test_...');\n\nconst customer = await stripe.customers.create({\n  email: 'customer@example.com',\n});\n\nconsole.log(customer.id);\n```\n\n----------------------------------------\n\nTITLE: Using autoPagingEach with Async Functions for Stripe API Pagination\nDESCRIPTION: Shows how to use the autoPagingEach method with an async function to process items from paginated results, with the ability to break early by returning false.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\nawait stripe.customers.list().autoPagingEach(async (customer) => {\n  await doSomething(customer);\n  if (shouldBreak()) {\n    return false;\n  }\n});\nconsole.log('Done iterating.');\n```\n\n----------------------------------------\n\nTITLE: Initializing Stripe with CommonJS and Promise Chains\nDESCRIPTION: Example of initializing the Stripe client using CommonJS require syntax and creating a customer using promise chains.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst stripe = require('stripe')('sk_test_...');\n\nstripe.customers.create({\n  email: 'customer@example.com',\n})\n  .then(customer => console.log(customer.id))\n  .catch(error => console.error(error));\n```\n\n----------------------------------------\n\nTITLE: Using Async Iterators for Auto-pagination in Stripe API Requests\nDESCRIPTION: Demonstrates how to use the for-await-of syntax with Stripe list methods to automatically handle pagination across multiple API requests until all results are processed.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\nfor await (const customer of stripe.customers.list()) {\n  doSomething(customer);\n  if (shouldStop()) {\n    break;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using autoPagingToArray with Stripe Customers API in JavaScript\nDESCRIPTION: A convenience method to fetch multiple pages of results up to a specified limit. This example retrieves all new customers created after last month, limiting to 100 items per page and stopping after 10,000 total items.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\nconst allNewCustomers = await stripe.customers\n  .list({created: {gt: lastMonth}, limit: 100}) // 100 items per page\n  .autoPagingToArray({limit: 10000}); // Stop after 10000 items total\n```\n\n----------------------------------------\n\nTITLE: Generating Test Webhook Signatures for Stripe SDK Testing\nDESCRIPTION: Demonstrates how to generate a test webhook signature header for use in testing webhook handling code without sending actual requests from Stripe.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nconst payload = {\n  id: 'evt_test_webhook',\n  object: 'event',\n};\n\nconst payloadString = JSON.stringify(payload, null, 2);\nconst secret = 'whsec_test_secret';\n\nconst header = stripe.webhooks.generateTestHeaderString({\n  payload: payloadString,\n  secret,\n});\n\nconst event = stripe.webhooks.constructEvent(payloadString, header, secret);\n\n// Do something with mocked signed event\nexpect(event.id).to.equal(payload.id);\n```\n\n----------------------------------------\n\nTITLE: Making Custom Requests to Undocumented Stripe APIs using rawRequest\nDESCRIPTION: Examples of using the rawRequest method to send requests to undocumented or beta Stripe APIs. This provides a way to bypass the SDK's method definitions and directly specify request details.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\nconst client = new Stripe('sk_test_...');\n\nclient.rawRequest(\n    'POST',\n    '/v1/beta_endpoint',\n    { param: 123 },\n    { apiVersion: '2022-11-15; feature_beta=v3' }\n  )\n  .then((response) => /* handle response */ )\n  .catch((error) => console.error(error));\n```\n\n----------------------------------------\n\nTITLE: Handling Expanded Fields in TypeScript\nDESCRIPTION: Example showing how to properly cast expanded fields when using the expand parameter with TypeScript type definitions.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst paymentIntent: Stripe.PaymentIntent = await stripe.paymentIntents.retrieve(\n  'pi_123456789',\n  {\n    expand: ['customer'],\n  }\n);\nconst customerEmail: string = (paymentIntent.customer as Stripe.Customer).email;\n```\n\n----------------------------------------\n\nTITLE: Chaining Promises with Stripe API\nDESCRIPTION: Example demonstrating how to chain multiple Stripe API calls using promises to create a customer, create an invoice item, and then invoice it.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Create a new customer and then create an invoice item then invoice it:\nstripe.customers\n  .create({\n    email: 'customer@example.com',\n  })\n  .then((customer) => {\n    // have access to the customer object\n    return stripe.invoiceItems\n      .create({\n        customer: customer.id, // set the customer id\n        amount: 2500, // 25\n        currency: 'usd',\n        description: 'One-time setup fee',\n      })\n      .then((invoiceItem) => {\n        return stripe.invoices.create({\n          collection_method: 'send_invoice',\n          customer: invoiceItem.customer,\n        });\n      })\n      .then((invoice) => {\n        // New invoice created on a new customer\n      })\n      .catch((err) => {\n        // Deal with an error\n      });\n  });\n```\n\n----------------------------------------\n\nTITLE: Using autoPagingEach with Promises for Stripe API Pagination\nDESCRIPTION: Demonstrates how to use autoPagingEach with promise chains to process paginated results without using await, providing the same ability to break early by resolving to false.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nstripe.customers\n  .list()\n  .autoPagingEach((customer) => {\n    return doSomething(customer).then(() => {\n      if (shouldBreak()) {\n        return false;\n      }\n    });\n  })\n  .then(() => {\n    console.log('Done iterating.');\n  })\n  .catch(handleError);\n```\n\n----------------------------------------\n\nTITLE: Sample Response Event Object Structure in Stripe SDK\nDESCRIPTION: Shows the structure of the response event object that is passed to response event handlers, including API version, account, idempotency key, method, path, status, request ID, and timing information.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  api_version: 'latest',\n  account: 'acct_TEST',              // Only present if provided\n  idempotency_key: 'abc123',         // Only present if provided\n  method: 'POST',\n  path: '/v1/customers',\n  status: 402,\n  request_id: 'req_Ghc9r26ts73DRf',\n  elapsed: 445,                      // Elapsed time in milliseconds\n  request_start_time: 1565125303932, // Unix timestamp in milliseconds\n  request_end_time: 1565125304377    // Unix timestamp in milliseconds\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Stripe Node.js Library\nDESCRIPTION: Commands to install the Stripe Node.js library using either npm or yarn package managers.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install stripe\n# or\nyarn add stripe\n```\n\n----------------------------------------\n\nTITLE: Disabling Network Retries in Stripe SDK\nDESCRIPTION: Shows how to disable the automatic network retry functionality by setting maxNetworkRetries to 0 in the configuration object.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = Stripe('sk_test_...', {\n  maxNetworkRetries: 0, // Disable retries\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Stripe Connect Header for API Requests\nDESCRIPTION: Demonstrates how to add a Stripe-Account header to API requests for use with Stripe Connect, allowing actions to be performed on behalf of a connected account.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n// List the balance transactions for a connected account:\nstripe.balanceTransactions.list(\n  {\n    limit: 10,\n  },\n  {\n    stripeAccount: 'acct_foo',\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Network Retries for a Specific API Request\nDESCRIPTION: Shows how to override the global network retry configuration for a specific API request by passing maxNetworkRetries in the options object.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nstripe.customers.create(\n  {\n    email: 'customer@example.com',\n  },\n  {\n    maxNetworkRetries: 2, // Retry this specific request twice before giving up\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Network Retries in Stripe SDK\nDESCRIPTION: Demonstrates how to configure the Stripe SDK to retry failed requests multiple times with exponential backoff by setting maxNetworkRetries.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = Stripe('sk_test_...', {\n  maxNetworkRetries: 2, // Retry a request twice before giving up\n});\n```\n\n----------------------------------------\n\nTITLE: Disabling Telemetry in Stripe Node.js SDK\nDESCRIPTION: Configuration to disable the default telemetry that sends request data to Stripe regarding latency and feature usage. Telemetry helps Stripe improve API latency and feature development.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = new Stripe('sk_test_...', {\n  telemetry: false,\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Stripe Plugin with appInfo in CommonJS\nDESCRIPTION: Shows how to initialize the Stripe SDK with appInfo when writing a plugin, which helps Stripe track usage patterns and provide better support for different integrations.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = require('stripe')('sk_test_...', {\n  appInfo: {\n    name: 'MyAwesomePlugin',\n    version: '1.2.34', // Optional\n    url: 'https://myawesomeplugin.info', // Optional\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Response Information in Stripe API Results\nDESCRIPTION: Demonstrates how to access metadata about the HTTP response that generated a resource, such as requestId and statusCode, using the lastResponse property.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\ncustomer.lastResponse.requestId; // see: https://stripe.com/docs/api/request_ids?lang=node\ncustomer.lastResponse.statusCode;\n```\n\n----------------------------------------\n\nTITLE: Using Stripe with Deno\nDESCRIPTION: Example showing how to import Stripe in a Deno project using npm specifiers.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport Stripe from 'npm:stripe';\n```\n\n----------------------------------------\n\nTITLE: Configuring Timeout Globally in Stripe SDK\nDESCRIPTION: Demonstrates how to set a global timeout configuration for all Stripe API requests. The timeout is specified in milliseconds.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = Stripe('sk_test_...', {\n  timeout: 20 * 1000, // 20 seconds\n});\n```\n\n----------------------------------------\n\nTITLE: Placeholder API Key for Build Steps\nDESCRIPTION: Alternative approach to handle API key requirements during build steps by providing a placeholder value.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport Stripe from 'stripe';\n\nexport const stripe = new Stripe(\n  process.env.STRIPE_SECRET_KEY || 'api_key_placeholder',\n  {\n    // ...\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Overriding Timeout for Individual Stripe API Requests\nDESCRIPTION: Shows how to override the global timeout setting for a specific Stripe API request. The timeout is specified as a configuration parameter to the API call.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nstripe.customers.create(\n  {\n    email: 'customer@example.com',\n  },\n  {\n    timeout: 1000, // 1 second\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Running TypeScript and JavaScript Examples with Stripe Node.js SDK\nDESCRIPTION: Commands for executing TypeScript and JavaScript example files using the Stripe Node.js SDK. This supports both .js and .mjs JavaScript file formats.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/examples/snippets/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn run ts-node your_example.ts\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode your_example.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode your_example.mjs\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy for Stripe API Requests\nDESCRIPTION: Shows how to use the https-proxy-agent package to configure Stripe to route requests through a proxy server defined in an environment variable.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nif (process.env.http_proxy) {\n  const ProxyAgent = require('https-proxy-agent');\n\n  const stripe = Stripe('sk_test_...', {\n    httpAgent: new ProxyAgent(process.env.http_proxy),\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Stripe with API Version\nDESCRIPTION: Example showing how to initialize the Stripe client with an explicit API version when upgrading to v12. This allows specifying a version matching your Stripe account's default API version.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n- const stripe = require('stripe')('sk_test_...');\n+ const stripe = require('stripe')('sk_test_...', {\n+   apiVersion: 'YYYY-MM-DD' // Determine your default version from https://dashboard.stripe.com/developers\n+ })\n```\n\n----------------------------------------\n\nTITLE: Setting Up Request and Response Event Handlers in Stripe SDK\nDESCRIPTION: Shows how to register and remove event handlers for API request and response events emitted by the Stripe object, allowing for monitoring and debugging.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = require('stripe')('sk_test_...');\n\nconst onRequest = (request) => {\n  // Do something.\n};\n\n// Add the event handler function:\nstripe.on('request', onRequest);\n\n// Remove the event handler function:\nstripe.off('request', onRequest);\n```\n\n----------------------------------------\n\nTITLE: Using rawRequest Method for Custom API Requests\nDESCRIPTION: Method added to the Stripe class that takes an HTTP method type, URL, and relevant parameters to make requests to the Stripe API that are not yet supported in the SDK.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nrawRequest()\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Resource Methods\nDESCRIPTION: Example showing how to define basic CRUD methods on a Stripe resource using stripeMethod.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_30\n\nLANGUAGE: typescript\nCODE:\n```\ncreate: stripeMethod({\n  method: 'POST',\n  fullPath: '/v1/resource',\n}),\nlist: stripeMethod({\n  method: 'GET', \n  methodType: 'list',\n  fullPath: '/v1/resource',\n}),\nretrieve: stripeMethod({\n  method: 'GET',\n  fullPath: '/v1/resource/{id}',\n}),\nupdate: stripeMethod({\n  method: 'POST',\n  fullPath: '/v1/resource/{id}',\n}),\ndel: stripeMethod({\n  method: 'DELETE',\n  fullPath: '/v1/resource/{id}',\n});\n```\n\n----------------------------------------\n\nTITLE: Using parseThinEvent Method on Stripe Class\nDESCRIPTION: Method added to the Stripe class to parse thin events. Thin events are a more efficient event format offered by Stripe's Event Destinations.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nparseThinEvent()\n```\n\n----------------------------------------\n\nTITLE: Lazy Instantiation of Stripe Client in TypeScript\nDESCRIPTION: Pattern for lazy instantiation of the Stripe client to avoid errors during build time when API keys might not be present.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport Stripe from 'stripe';\n\nlet _stripe: Stripe | null = null;\nconst getStripe = (): Stripe => {\n  if (!_stripe) {\n    _stripe = new Stripe(process.env.STRIPE_SECRET_KEY as string, {\n      // ...\n    });\n  }\n  return _stripe;\n};\n\nconst getCustomers = () => getStripe().customers.list();\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Stripe Search API in Node.js\nDESCRIPTION: This snippet adds support for the Stripe Search API, allowing searching across various Stripe resources like Charge, Customer, Invoice, PaymentIntent, Price, Product, and Subscription.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nAdd support for Search API\n  * Add support for `search` method on resources `Charge`, `Customer`, `Invoice`, `PaymentIntent`, `Price`, `Product`, and `Subscription`\n```\n\n----------------------------------------\n\nTITLE: Configuring Stripe Client in TypeScript\nDESCRIPTION: Example showing how to configure the Stripe client with various options like API version, network retries, proxy settings and more.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_29\n\nLANGUAGE: typescript\nCODE:\n```\nconst stripe = Stripe('sk_test_...', {\n  apiVersion: '2019-08-08',\n  maxNetworkRetries: 1,\n  httpAgent: new ProxyAgent(process.env.http_proxy),\n  timeout: 1000,\n  host: 'api.example.com',\n  port: 123,\n  telemetry: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Stripe API Resources and Parameters in Node.js\nDESCRIPTION: This snippet adds support for new Stripe API resources and updates existing parameters across multiple API objects. It includes changes for FinancialConnections, CashBalance, and various payment method options.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nAdd support for new resources `FinancialConnections.AccountOwner`, `FinancialConnections.AccountOwnership`, `FinancialConnections.Account`, and `FinancialConnections.Session`\n\nAdd support for `financial_connections` on `Checkout.Session.payment_method_options.us_bank_account`, `Checkout.SessionCreateParams.payment_method_options.us_bank_account`, `Invoice.payment_settings.payment_method_options.us_bank_account`, `InvoiceCreateParams.payment_settings.payment_method_options.us_bank_account`, `InvoiceUpdateParams.payment_settings.payment_method_options.us_bank_account`, `PaymentIntent.payment_method_options.us_bank_account`, `PaymentIntentConfirmParams.payment_method_options.us_bank_account`, `PaymentIntentCreateParams.payment_method_options.us_bank_account`, `PaymentIntentUpdateParams.payment_method_options.us_bank_account`, `SetupIntent.payment_method_options.us_bank_account`, `SetupIntentConfirmParams.payment_method_options.us_bank_account`, `SetupIntentCreateParams.payment_method_options.us_bank_account`, `SetupIntentUpdateParams.payment_method_options.us_bank_account`, `Subscription.payment_settings.payment_method_options.us_bank_account`, `SubscriptionCreateParams.payment_settings.payment_method_options.us_bank_account`, and `SubscriptionUpdateParams.payment_settings.payment_method_options.us_bank_account`\n```\n\n----------------------------------------\n\nTITLE: Creating a Stripe Plugin with appInfo using ES Modules or TypeScript\nDESCRIPTION: Shows how to initialize the Stripe SDK with appInfo when using ES modules or TypeScript, providing metadata about the plugin to Stripe.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = new Stripe(apiKey, {\n  appInfo: {\n    name: 'MyAwesomePlugin',\n    version: '1.2.34', // Optional\n    url: 'https://myawesomeplugin.info', // Optional\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Adding PayNow and US Bank Account Support in JavaScript\nDESCRIPTION: Adds support for PayNow and US Bank Account payments across various Stripe resources like Charge, Customer, PaymentIntent, etc. New enum values and properties are added to existing types.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example of new properties added\nCharge.payment_method_details.paynow\nCharge.payment_method_details.us_bank_account\n\n// Example of new enum values\nCustomerListPaymentMethodsParams.type = 'paynow' | 'us_bank_account'\n\n// Example of new properties on PaymentIntent\nPaymentIntent.payment_method_options.paynow\nPaymentIntent.payment_method_options.us_bank_account\nPaymentIntent.next_action.paynow_display_qr_code\n```\n\n----------------------------------------\n\nTITLE: Configuring Stripe Node.js Library in JavaScript\nDESCRIPTION: Example of how to configure and use the Stripe Node.js library, including setting the API key, making requests, and handling errors.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_46\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst stripe = require('stripe')('sk_test_...');\n\nstripe.customers.create(\n  { email: 'customer@example.com' },\n  function(err, customer) {\n    // asynchronously called\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Version Control Commit - PR #1774 and #1782\nDESCRIPTION: Adds Link payment method options and card payment details support, plus webhook timestamp verification.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_24\n\nLANGUAGE: Markdown\nCODE:\n```\n* [#1774](https://github.com/stripe/stripe-node/pull/1774) Update generated code\n  * Add support for `link` on `Checkout.Session.payment_method_options` and `Checkout.SessionCreateParams.payment_method_options`\n  * Add support for card payment details fields\n* [#1782](https://github.com/stripe/stripe-node/pull/1782) Let user supply a timestamp when verifying webhooks\n```\n\n----------------------------------------\n\nTITLE: Setting API Version for Beta Features in Stripe Node.js SDK\nDESCRIPTION: Configuration to specify a custom API version when using beta features. This is necessary when a beta feature requires a specific Stripe-Version header to be sent with requests.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = new Stripe('sk_test_...', {\n  apiVersion: '2022-08-01; feature_beta=v3',\n});\n```\n\n----------------------------------------\n\nTITLE: Version Control Commit - PR #1787\nDESCRIPTION: Adds support for subscription updates, payment wallet features, and tax type enums in the Stripe API.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_22\n\nLANGUAGE: Markdown\nCODE:\n```\n* [#1787](https://github.com/stripe/stripe-node/pull/1787) Update generated code\n  * Add support for `subscription_update_confirm` and `subscription_update` on `BillingPortal.Session.flow` and `BillingPortal.SessionCreateParams.flow_data`\n  * Add support for new values `subscription_update_confirm` and `subscription_update` on enums `BillingPortal.Session.flow.type` and `BillingPortal.SessionCreateParams.flow_data.type`\n  * Add support for `link` on `Charge.payment_method_details.card.wallet` and `PaymentMethod.card.wallet`\n  * Add support for `buyer_id` and `cashtag` on `Charge.payment_method_details.cashapp` and `PaymentMethod.cashapp`\n  * Add support for new values `amusement_tax` and `communications_tax` on enums `TaxRate.tax_type`, `TaxRateCreateParams.tax_type`, and `TaxRateUpdateParams.tax_type`\n```\n\n----------------------------------------\n\nTITLE: Adding Test Clock Resource in JavaScript\nDESCRIPTION: Adds a new TestHelpers.TestClock resource for simulating passage of time in test mode. Adds 'test_clock' property to various resources like Customer, Invoice, Quote, etc.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\n// New TestClock resource\nconst testClock = await stripe.testHelpers.testClocks.create({...});\n\n// test_clock property on other resources\nconst customer = await stripe.customers.create({\n  test_clock: testClock.id\n});\n```\n\n----------------------------------------\n\nTITLE: Stripe Node.js SDK Update - Version 9.11.0\nDESCRIPTION: Update adding test helper methods for Issuing.Card resource and adding hosted_regulatory_receipt_url support for Treasury resources.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_34\n\n\n\n----------------------------------------\n\nTITLE: Adding Refund Cancellation in JavaScript\nDESCRIPTION: Adds support for cancelling refunds via a new 'cancel' method on the Refund resource.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\n// New cancel method on Refund resource\nRefund.cancel()\n```\n\n----------------------------------------\n\nTITLE: Stripe Node.js SDK Update - Version 9.12.0\nDESCRIPTION: Update adding currency support to multiple endpoints and introducing currency_options for various resources including Checkout sessions, coupons, and prices.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_33\n\n\n\n----------------------------------------\n\nTITLE: Configuring Automatic Network Retries in Stripe Node.js\nDESCRIPTION: Example of how to set up automatic network retries using the setMaxNetworkRetries method introduced in version 6.25.0.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_47\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst stripe = require('stripe')('sk_test_...');\n\nstripe.setMaxNetworkRetries(2);\n```\n\n----------------------------------------\n\nTITLE: Stripe Node.js SDK Update - Version 9.10.0\nDESCRIPTION: Update adding PromptPay payment support and new tax-related fields for invoices and credit notes.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_35\n\n\n\n----------------------------------------\n\nTITLE: Using fetchRelatedObject in V2 Events\nDESCRIPTION: Example of retrieving an event using stripe.v2.core.events and fetching the related Stripe object. This feature was added in version 17.2.0 to easily fetch the Stripe object related to a retrieved event.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nstripe.v2.core.events.fetchRelatedObject\n```\n\n----------------------------------------\n\nTITLE: Stripe Node.js SDK Update - Version 9.9.0\nDESCRIPTION: Update adding support for Japanese character rendering options and customer fund_cash_balance test helper method.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_36\n\n\n\n----------------------------------------\n\nTITLE: Triggering a Stripe Event\nDESCRIPTION: This command uses the Stripe CLI to trigger a payment_intent.succeeded event for testing purposes.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/examples/webhook-signing/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nstripe trigger payment_intent.succeeded\n```\n\n----------------------------------------\n\nTITLE: New Resource Types - v14.23.0\nDESCRIPTION: Introduction of new Billing resources for meter events and adjustments.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n// New resources\nBilling.MeterEventAdjustment\nBilling.MeterEvent\nBilling.Meter\n```\n\n----------------------------------------\n\nTITLE: Running Stripe CLI for Webhook Forwarding\nDESCRIPTION: This command uses the Stripe CLI to forward webhooks to a local server running on port 3000.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/examples/webhook-signing/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nstripe listen --forward-to localhost:3000/webhook\n```\n\n----------------------------------------\n\nTITLE: Reverse Iteration with ending_before Parameter\nDESCRIPTION: Example of implementing reverse iteration when using the ending_before parameter, as fixed in version 8.130.0.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_45\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet lastId;\nlet hasMore = true;\n\nwhile (hasMore) {\n  const customers = await stripe.customers.list({\n    limit: 100,\n    ending_before: lastId\n  });\n  \n  lastId = customers.data[0].id;\n  hasMore = customers.has_more;\n\n  // Process customers...\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Request Event Object Structure in Stripe SDK\nDESCRIPTION: Shows the structure of the request event object that is passed to request event handlers, including API version, account, idempotency key, method, path, and timestamp.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/README.md#2025-04-21_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  api_version: 'latest',\n  account: 'acct_TEST',              // Only present if provided\n  idempotency_key: 'abc123',         // Only present if provided\n  method: 'POST',\n  path: '/v1/customers',\n  request_start_time: 1565125303932  // Unix timestamp in milliseconds\n}\n```\n\n----------------------------------------\n\nTITLE: Type Definition Change - Setup Intent Confirm Parameters\nDESCRIPTION: Changes the type definition for mandate_data in SetupIntentConfirmParams from using numbered suffixes to a merged union type\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Before\ntype SetupIntentConfirmParams.mandate_data = Stripe.Emptyable<SetupIntentConfirmParams.MandateData1 | SetupIntentConfirmParams.MandateData2>\n\n// After\ntype SetupIntentConfirmParams.mandate_data = Stripe.Emptyable<SetupIntentConfirmParams.MandateData>\n```\n\n----------------------------------------\n\nTITLE: NextJS Webhook Parsing Check Example\nDESCRIPTION: Added code for improved webhook parsing validation in NextJS environment\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nWebhookEndpointCreateParams.enabled_events[] && WebhookEndpointUpdateParams.enabled_events[]\n```\n\n----------------------------------------\n\nTITLE: Type Definition Change - Payment Intent Confirm Parameters\nDESCRIPTION: Changes the type definition for mandate_data in PaymentIntentConfirmParams from using numbered suffixes to a merged union type\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Before\ntype PaymentIntentConfirmParams.mandate_data = Stripe.Emptyable<PaymentIntentConfirmParams.MandateData1 | PaymentIntentConfirmParams.MandateData2>\n\n// After\ntype PaymentIntentConfirmParams.mandate_data = Stripe.Emptyable<PaymentIntentConfirmParams.MandateData>\n```\n\n----------------------------------------\n\nTITLE: Building and Installing Stripe Node.js SDK for Local Development\nDESCRIPTION: Commands to build the Stripe Node.js SDK modules from source and install dependencies for example snippets. Includes a workaround for a common git file monitor error.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/examples/snippets/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\nLANGUAGE: bash\nCODE:\n```\nrm /path/to/node/sdk/.git/fsmonitor--daemon.ipc && yarn\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn upgrade stripe\n```\n\n----------------------------------------\n\nTITLE: Fixing API Version Bug in Stripe Node.js SDK\nDESCRIPTION: This code snippet describes a bug fix in version 17.3.1 where 'latestapiversion' was not updated to '2024-10-28.acacia' in the previous release.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n* [#2218](https://github.com/stripe/stripe-node/pull/2218) Fixed a bug where `latestapiversion` was not updated to `2024-10-28.acacia` in the last release.\n```\n\n----------------------------------------\n\nTITLE: Breaking Change: Stripe Webhooks Property Access\nDESCRIPTION: Changes the webhook access pattern from a factory function to a static property. Users need to update from Stripe.webhooks() to Stripe.webhooks.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Old usage\nStripe.webhooks().someMethod()\n\n// New usage\nStripe.webhooks.someMethod()\n```\n\n----------------------------------------\n\nTITLE: Type System Updates: Deprecated Types Removal\nDESCRIPTION: Removes deprecated type aliases in favor of their new names, affecting various Stripe resource types like Account, Customer, and Transfer related interfaces.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Old types (removed)\ntype AccountDebitSource\ntype CapabilityListParams\ntype CustomerSourceCreateParams\n\n// New types to use\ntype Account\ntype AccountListCapabilitiesParams\ntype CustomerCreateSourceParams\n```\n\n----------------------------------------\n\nTITLE: Updating HTTP Request Handling in Stripe Node.js Library\nDESCRIPTION: This snippet removes the Content-Length header for HTTP verbs that don't have request bodies, addressing an issue in the library.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nStop sending Content-Length header for verbs which don't have bodies.\n  * Fixes https://github.com/stripe/stripe-node/issues/1360.\n```\n\n----------------------------------------\n\nTITLE: Displaying Stripe Node.js Library Changelog for Version 18.0.0\nDESCRIPTION: This markdown snippet outlines the changes, breaking changes, and additions in version 18.0.0 of the Stripe Node.js library. It includes removal of support for certain resources, methods, and parameters, as well as additions of new resources, methods, and enum values.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 18.0.0 - 2025-04-01\n* [#2279](https://github.com/stripe/stripe-node/pull/2279) Support for APIs in the new API version 2025-03-31.basil\n\n  This release changes the pinned API version to `2025-03-31.basil`.\n\n  ### ⚠️ Breaking changes due to changes in the Stripe API\n\n  Please review details for the breaking changes and alternatives in the [Stripe API changelog](https://docs.stripe.com/changelog/basil) before upgrading.\n\n  * Remove support for resources `SubscriptionItemUsageRecordSummary` and `SubscriptionItemUsageRecord`\n  * Remove support for `listUpcomingLines` and `retrieveUpcoming` methods on resource `Invoice`\n  * Remove support for `createUsageRecord` and `listUsageRecordSummaries` methods on resource `SubscriptionItems`\n  * Remove support for `invoice` on `Charge` and `PaymentIntent`\n  * Remove support for `shipping_details` on `Checkout.Session`\n  * Remove support for `carrier`, `phone`, and `tracking_number` on `Checkout.Session.collected_information.shipping_details`. Make `name` and `address` required instead of optional.\n  * Remove support for `refund` on `CreditNoteCreateParams`, `CreditNoteListPreviewLineItemsParams`, `CreditNotePreviewParams`, and `CreditNote`\n  * Remove support for `tax_amounts` on `CreditNoteLineItem`, `CreditNote`, and `InvoiceLineItem`\n  * Remove support for `amount_excluding_tax` and `unit_amount_excluding_tax` on `CreditNoteLineItem` and `InvoiceLineItem`\n  * Remove support for `coupon` on `CustomerCreateParams`, `CustomerUpdateParams`, `InvoiceCreatePreviewParams.schedule_details.phases[]`, `InvoiceCreatePreviewParams`, `SubscriptionCreateParams`, `SubscriptionSchedule.phases[]`, `SubscriptionScheduleCreateParams.phases[]`, `SubscriptionScheduleUpdateParams.phases[]`, and `SubscriptionUpdateParams`\n  * Remove support for `promotion_code` on `CustomerCreateParams`, `CustomerUpdateParams`, `SubscriptionCreateParams`, and `SubscriptionUpdateParams`\n  * Remove support for `price` on `InvoiceAddLinesParams.lines[]`, `InvoiceItemCreateParams`, `InvoiceItemUpdateParams`, `InvoiceItem`, `InvoiceLineItemUpdateParams`, `InvoiceLineItem`, and `InvoiceUpdateLinesParams.lines[]. Use `pricing` instead.\n  * Remove support for `billing_thresholds` on `InvoiceCreatePreviewParams.schedule_details.phases[].items[]`, `InvoiceCreatePreviewParams.schedule_details.phases[]`, `InvoiceCreatePreviewParams.subscription_details.items[]`, `SubscriptionCreateParams.items[]`, `SubscriptionCreateParams`, `SubscriptionItemCreateParams`, `SubscriptionItemUpdateParams`, `SubscriptionItem`, `SubscriptionSchedule.default_settings`, `SubscriptionSchedule.phases[].items[]`, `SubscriptionSchedule.phases[]`, `SubscriptionScheduleCreateParams.default_settings`, `SubscriptionScheduleCreateParams.phases[].items[]`, `SubscriptionScheduleCreateParams.phases[]`, `SubscriptionScheduleUpdateParams.default_settings`, `SubscriptionScheduleUpdateParams.phases[].items[]`, `SubscriptionScheduleUpdateParams.phases[]`, `SubscriptionUpdateParams.items[]`, `SubscriptionUpdateParams`, and `Subscription`\n  * Remove support for `application_fee_amount`, `charge`, `paid_out_of_band`, `paid`, `payment_intent`, `quote`, `subscription`, `subscription_details`, `subscription_proration_date`, `tax`, `total_tax_amounts`, and `transfer_data` on `Invoice`\n  * Remove support for `discount` on `Invoice` and `Subscription`\n  * Remove support for `invoice_item`, `proration_details`, `proration`, `tax_rates`, and `type` on `InvoiceLineItem`\n  * Remove support for `plan` and `subscription_item` on `InvoiceItem` and `InvoiceLineItem`\n  * Remove support for `unit_amount` on `InvoiceItemCreateParams`, `InvoiceItemUpdateParams`, and `InvoiceItem`\n  * Remove support for `subscription` and `unit_amount_decimal` on `InvoiceItem`\n  * Remove support for `naver_pay` on `PaymentMethodUpdateParams`\n  * Remove support for `aggregate_usage` on `PlanCreateParams`, `Plan`, `Price.recurring`, and `PriceCreateParams.recurring`\n  * Remove support for `current_period_end` and `current_period_start` on `Subscription`\n  * `page` has been removed from all V2 list method params (e.g. `EventService.list()`); use the [auto paginator](https://github.com/stripe/stripe-node?tab=readme-ov-file#auto-pagination) or the `next_page_url` and `previous_page_url` fields instead ([more info](https://docs.stripe.com/api-v2-overview#list-pagination))\n\n  ### Changes\n\n  * Change `Checkout.Session.collected_information` to be required\n  * Change `Checkout.Session.collected_information.shipping_details` to be required\n  * Change `Checkout.Session.collected_information.shipping_details.address` to be required\n  * Change `Checkout.Session.collected_information.shipping_details.name` to be required\n  * Change `PaymentIntentConfirmParams.payment_method_options.wechat_pay.client`, `PaymentIntentCreateParams.payment_method_options.wechat_pay.client`, and `PaymentIntentUpdateParams.payment_method_options.wechat_pay.client` to be optional\n  * Change `political_exposure` on resources `Person` and `Token` and params `Token.CreateParams` from string to enum(\"existing\" | \"none\")\n\n  ### Additions\n\n  * Add support for new resource `InvoicePayment`\n  * Add support for `list` and `retrieve` methods on resource `InvoicePayment`\n  * Add support for `billie_payments`, `nz_bank_account_becs_debit_payments`, and `satispay_payments` on `Account.capabilities`, `AccountCreateParams.capabilities`, and `AccountUpdateParams.capabilities`\n  * Add support for `hosted_payment_method_save` on `Account.settings.invoices` and `AccountUpdateParams.settings.invoices`\n  * Add support for `invoices` on `AccountCreateParams.settings`\n  * Add support for new values `information_missing`, `invalid_signator`, `verification_failed_authorizer_authority`, and `verification_rejected_ownership_exemption_reason` on enums `Account.future_requirements.errors[].code`, `Account.requirements.errors[].code`, `AccountCapability.future_requirements.errors[].code`, `AccountCapability.requirements.errors[].code`, `AccountPerson.future_requirements.errors[].code`, `AccountPerson.requirements.errors[].code`, `BankAccount.future_requirements.errors[].code`, and `BankAccount.requirements.errors[].code`\n  * Add support for new values `forwarding_api_retryable_upstream_error` and `setup_intent_mobile_wallet_unsupported` on enums `Invoice.last_finalization_error.code`, `PaymentIntent.last_payment_error.code`, `SetupAttempt.setup_error.code`, `SetupIntent.last_setup_error.code`, and `StripeError.code`\n  * Add support for new values `stripe_balance_payment_debit_reversal` and `stripe_balance_payment_debit` on enum `BalanceTransaction.type`\n  * Add support for new value `last` on enums `Billing.Meter.default_aggregation.formula` and `Billing.MeterCreateParams.default_aggregation.formula`\n  * Add support for `presentment_details` on `Charge`, `Checkout.Session`, `PaymentIntent`, and `Refund`\n  * Add support for `billie` and `satispay` on `Charge.payment_method_details`, `ConfirmationToken.payment_method_preview`, `ConfirmationTokenCreateParams.testHelpers.payment_method_data`, `CustomerPaymentMethod`, `PaymentIntentConfirmParams.payment_method_data`, `PaymentIntentCreateParams.payment_method_data`, `PaymentIntentUpdateParams.payment_method_data`, `PaymentMethodConfigurationCreateParams`, `PaymentMethodConfigurationUpdateParams`, `PaymentMethodConfiguration`, `PaymentMethodCreateParams`, `PaymentMethod`, `SetupIntentConfirmParams.payment_method_data`, `SetupIntentCreateParams.payment_method_data`, and `SetupIntentUpdateParams.payment_method_data`\n  * Add support for `nz_bank_account` on `Charge.payment_method_details`, `ConfirmationToken.payment_method_preview`, `ConfirmationTokenCreateParams.testHelpers.payment_method_data`, `CustomerPaymentMethod`, `Mandate.payment_method_details`, `PaymentIntent.payment_method_options`, `PaymentIntentConfirmParams.payment_method_data`, `PaymentIntentConfirmParams.payment_method_options`, `PaymentIntentCreateParams.payment_method_data`, `PaymentIntentCreateParams.payment_method_options`, `PaymentIntentUpdateParams.payment_method_data`, `PaymentIntentUpdateParams.payment_method_options`, `PaymentMethodConfigurationCreateParams`, `PaymentMethodConfigurationUpdateParams`, `PaymentMethodConfiguration`, `PaymentMethodCreateParams`, `PaymentMethod`, `SetupAttempt.payment_method_details`, `SetupIntentConfirmParams.payment_method_data`, `SetupIntentCreateParams.payment_method_data`, and `SetupIntentUpdateParams.payment_method_data`\n  * Add support for `optional_items` on `Checkout.SessionCreateParams`, `Checkout.Session`, `PaymentLinkCreateParams`, and `PaymentLink`\n  * Add support for `permissions` on `Checkout.SessionCreateParams` and `Checkout.Session`\n  * Add support for new values `billie` and `satispay` on enum `Checkout.SessionCreateParams.payment_method_types`\n  * Add support for new value `custom` on enums `Checkout.Session.ui_mode` and `Checkout.SessionCreateParams.ui_mode`\n  * Add support for `shipping_options` on `Checkout.SessionUpdateParams`\n  * Add support for new values `billie`, `nz_bank_account`, and `satispay` on enums `ConfirmationTokenCreateParams.testHelpers.payment_method_data.type`, `PaymentIntentConfirmParams.payment_method_data.type`, `PaymentIntentCreateParams.payment_method_data.type`, `PaymentIntentUpdateParams.payment_method_data.type`, `SetupIntentConfirmParams.payment_method_data.type`, `SetupIntentCreateParams.payment_method_data.type`, and `SetupIntentUpdateParams.payment_method_data.type`\n  * Add support for `buyer_id` on `ConfirmationToken.payment_method_preview.naver_pay`, `CustomerPaymentMethod.naver_pay`, and `PaymentMethod.naver_pay`\n  * Add support for new values `billie`, `nz_bank_account`, and `satispay` on enums `ConfirmationToken.payment_method_preview.type`, `CustomerPaymentMethod.type`, and `PaymentMethod.type`\n  * Add support for `refunds` on `CreditNoteCreateParams`, `CreditNoteListPreviewLineItemsParams`, `CreditNotePreviewParams`, and `CreditNote`\n```\n\n----------------------------------------\n\nTITLE: Using New API Features in Node.js\nDESCRIPTION: Example of using new API features added in version 8.130.0, such as additional document types for account verification.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst account = await stripe.accounts.update('acct_123', {\n  documents: {\n    company_registration_verification: {\n      files: ['file_123']\n    },\n    company_tax_id_verification: {\n      files: ['file_456']\n    }\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Starting Local Sample Server\nDESCRIPTION: This command starts the local sample server by executing the main.ts file.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/examples/webhook-signing/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./main.ts\n```\n\n----------------------------------------\n\nTITLE: Release Notes Documentation - Stripe Node.js SDK v17.5.0\nDESCRIPTION: Comprehensive changelog detailing API version updates, field changes, and new feature additions in the Stripe Node.js SDK version 17.5.0. Notable changes include updated API version pinning, new field additions for payment processing, and expanded support for tax IDs and merchant data.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 17.5.0 - 2024-12-18\n* [#2237](https://github.com/stripe/stripe-node/pull/2237) This release changes the pinned API version to `2024-12-18.acacia`.\n  * Change `Account.business_profile.annual_revenue` and `Account.business_profile.estimated_worker_count` to be optional\n  * Add support for `network_advice_code` and `network_decline_code` on `Charge.outcome`, `Invoice.last_finalization_error`, `PaymentIntent.last_payment_error`, `SetupAttempt.setup_error`, `SetupIntent.last_setup_error`, and `StripeError`\n  * Add support for new values `payout_minimum_balance_hold` and `payout_minimum_balance_release` on enum `BalanceTransaction.type`\n  * Add support for `credits_application_invoice_voided` on `Billing.CreditBalanceTransaction.credit`\n  * Change type of `Billing.CreditBalanceTransaction.credit.type` from `literal('credits_granted')` to `enum('credits_application_invoice_voided'|'credits_granted')`\n  * Change `BillingPortal.Configuration.features.subscription_update.schedule_at_period_end`, `Issuing.Authorization.verified_by_fraud_challenge`, `LineItem.description`, and `Payout.trace_id` to be required\n  * Add support for `allow_redisplay` on `Card` and `Source`\n  * Add support for `regulated_status` on `Card`, `Charge.payment_method_details.card`, `ConfirmationToken.payment_method_preview.card`, and `PaymentMethod.card`\n  * Add support for `funding` on `Charge.payment_method_details.amazon_pay` and `Charge.payment_method_details.revolut_pay`\n  * Add support for `network_transaction_id` on `Charge.payment_method_details.card`\n  * Add support for `reference_prefix` on various payment method options\n  * Add support for new tax ID types\n  * Add support for `visa_compliance` on dispute evidence\n  * Add support for new value `request_signature` on forwarding request replacements\n  * Add support for various bank transfer and funding instruction fields\n  * Add support for `disabled_reason` on automatic tax fields\n  * Add support for `tax_id` on issuing merchant data\n  * Change type of `LineItem.description` from `string` to `string | null`\n  * Add support for `trial_period_days` on payment link subscription data\n  * Add support for multiple new country options\n  * Add support for new API version value\n* [#2238](https://github.com/stripe/stripe-node/pull/2238) add missing key warning to README\n```\n\n----------------------------------------\n\nTITLE: Stripe Node.js SDK Update - Version 9.14.0\nDESCRIPTION: Update containing additions to API endpoints, support for BLIK payments, and changes to capabilities, payment methods, and consent collection parameters.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_31\n\n\n\n----------------------------------------\n\nTITLE: Stripe Node.js SDK Update - Version 9.13.0\nDESCRIPTION: Update adding customer_details support to Checkout.Session, making LineItem amount fields required, and changing Transfer.source_type to optional.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_32\n\n\n\n----------------------------------------\n\nTITLE: Updating API Version in Stripe Node.js SDK\nDESCRIPTION: This code snippet shows the change in pinned API version for the Stripe Node.js library to '2024-11-20.acacia'. It's part of the release notes for version 17.4.0.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n* [#2222](https://github.com/stripe/stripe-node/pull/2222) This release changes the pinned API version to `2024-11-20.acacia`.\n```\n\n----------------------------------------\n\nTITLE: Updating Stripe Node.js Library Version\nDESCRIPTION: Example of updating the Stripe Node.js library version in package.json.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_43\n\nLANGUAGE: JSON\nCODE:\n```\n\"dependencies\": {\n  \"stripe\": \"^8.130.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: New Payment Methods - v14.22.0\nDESCRIPTION: Addition of MobilePay payment method support and confirmation token functionality.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n// New resources\nConfirmationToken\nForwarding.Request\n\n// MobilePay support\nmobilepay_payments\nmobilepay: PaymentMethodDetails\n```\n\n----------------------------------------\n\nTITLE: Issuing Updates - v14.21.0\nDESCRIPTION: New resources for card personalization and physical bundles in the Issuing API.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\n// New resources\nIssuing.PersonalizationDesign\nIssuing.PhysicalBundle\n\n// Subscription updates\nSubscriptionCreateParams.application_fee_percent // Type changed to emptyStringable(number)\n```\n\n----------------------------------------\n\nTITLE: New Payment Method Options in Stripe Node SDK 15.4.0\nDESCRIPTION: Added support for setup_future_usage on various payment methods and new payment method types\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nCheckout.Session.payment_method_options.amazon_pay.setup_future_usage\nCheckout.Session.payment_method_options.revolut_pay.setup_future_usage\nPaymentIntent.payment_method_options.amazon_pay.setup_future_usage\nPaymentIntent.payment_method_options.revolut_pay.setup_future_usage\n```\n\n----------------------------------------\n\nTITLE: Removing Empty Resources in Stripe Node.js SDK\nDESCRIPTION: This snippet describes the removal of empty resources created for service groupings in version 17.4.0. It affects the public interface types but doesn't impact SDK usage.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n* [#2215](https://github.com/stripe/stripe-node/pull/2215) Remove empty resources created for service groupings\n  * Remove `Stripe.V2.BillingResource`, `Stripe.V2.CoreResource`, and `Stripe.V2Resource` types from the public interface as they are no longer needed.  SDK usage will not be affected but any references to these types in your application will need to be removed.\n```\n\n----------------------------------------\n\nTITLE: Cash Balance Reconciliation Mode Update\nDESCRIPTION: Added new merchant_default reconciliation mode option for cash balance settings\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nCashBalanceUpdateParams.settings.reconciliation_mode,\\nCustomerCreateParams.cash_balance.settings.reconciliation_mode,\\nCustomerUpdateParams.cash_balance.settings.reconciliation_mode\n```\n\n----------------------------------------\n\nTITLE: Stripe API EU Bank Transfer Update\nDESCRIPTION: Added support for BE (Belgium) country code in bank transfer payment settings\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nCheckout.Session.payment_method_options.customer_balance.bank_transfer.eu_bank_transfer.country\n```\n\n----------------------------------------\n\nTITLE: Property Type Changes in Stripe Node SDK 15.5.0\nDESCRIPTION: Changes to property types including new enum values, optional fields, and payment method support updates\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nEntitlements.FeatureUpdateParams.metadata // Changed from map(string: string) to emptyable(map(string: string))\nDispute.payment_method_details.type // Changed from literal('card') to enum('card'|'paypal')\n```\n\n----------------------------------------\n\nTITLE: Parameter Type Updates - v14.24.0\nDESCRIPTION: Changes to parameter types for various Stripe objects including Charge, PaymentIntent, and Identity Verification endpoints.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nCharge.payment_method_details.us_bank_account.payment_reference // Now required\nPaymentIntent.next_action.swish_handle_redirect_or_display_qr_code // Multiple fields now required\nCheckout.SessionCreateParams.payment_method_options.swish.reference // Changed from emptyable(string) to string\n```\n\n----------------------------------------\n\nTITLE: Version Control Commit - PR #1785\nDESCRIPTION: Implements PayPal integration, network token support, and tax calculation features across multiple Stripe services.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_23\n\nLANGUAGE: Markdown\nCODE:\n```\n* [#1785](https://github.com/stripe/stripe-node/pull/1785) Update generated code\n  * Add support for `paypal` on multiple payment interfaces\n  * Add support for `network_token` on `Charge.payment_method_details.card`\n  * Add support for new value `paypal` on payment method enums\n  * Add support for tax calculation fields\n  * Add support for new value `eftpos_au` on card network enums\n  * Add support for card present and interac present payment methods\n  * Add support for `effective_percentage` on `TaxRate`\n  * Add support for bank transfer options\n```\n\n----------------------------------------\n\nTITLE: Updating Stripe Node.js SDK API Parameters\nDESCRIPTION: Code changes show additions of new payment methods (multibanco, twint), capabilities, and enum values across various Stripe API objects and parameters. No actual code snippets are provided, only API parameter changes are documented.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_13\n\n\n\n----------------------------------------\n\nTITLE: Treasury and Payment Method Updates\nDESCRIPTION: Updates to Treasury outbound payments/transfers and payment method preview features. Includes tracking details and preview mode parameters. No actual code snippets are provided, only API parameter changes are documented.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_14\n\n\n\n----------------------------------------\n\nTITLE: Deprecated Methods in Stripe Node SDK 15.5.0\nDESCRIPTION: Methods and properties marked as deprecated including Issuing Authorization methods and persistent token properties\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n// Deprecated methods\nIssuing.Authorization.approve()\nIssuing.Authorization.decline()\n\n// Deprecated properties\nConfirmationToken.PaymentMethodPreview.Link.persistent_token\nPaymentIntent.PaymentMethodOptions.Link.persistent_token\n```\n\n----------------------------------------\n\nTITLE: Type Definition Change - Payment Method Create Parameters\nDESCRIPTION: Changes the type definition for card in PaymentMethodCreateParams from using numbered suffixes to a merged union type\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Before\ntype PaymentMethodCreateParams.card = PaymentMethodCreateParams.Card1 | PaymentMethodCreateParams.Card2\n\n// After\ntype PaymentMethodCreateParams.card = PaymentMethodCreateParams.Card\n```\n\n----------------------------------------\n\nTITLE: Typescript Shebang for Node.js Execution\nDESCRIPTION: This shebang line allows direct execution of the Typescript file using npm run-script.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/examples/webhook-signing/README.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n#!/usr/bin/env -S npm run-script run\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry - 6.23.1 Release\nDESCRIPTION: Changelog entry documenting the addition of persistent connections by default in version 6.23.1.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_48\n\nLANGUAGE: markdown\nCODE:\n```\n## 6.23.1 - 2019-02-04\\n\\n- [#560](https://github.com/stripe/stripe-node/pull/560) Enable persistent connections by default\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry - 6.23.0 Release\nDESCRIPTION: Changelog entry documenting the addition of configurable telemetry for client-side request latency in version 6.23.0.\nSOURCE: https://github.com/stripe/stripe-node/blob/master/CHANGELOG.md#2025-04-21_snippet_49\n\nLANGUAGE: markdown\nCODE:\n```\n## 6.23.0 - 2019-01-30\\n\\n- [#557](https://github.com/stripe/stripe-node/pull/557) Add configurable telemetry to gather information on client-side request latency\n```"
  }
]
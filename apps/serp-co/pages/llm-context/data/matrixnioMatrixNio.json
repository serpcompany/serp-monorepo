[
  {
    "owner": "matrix-nio",
    "repo": "matrix-nio",
    "content": "TITLE: Implementing a Basic Matrix Client with Python and matrix-nio\nDESCRIPTION: A basic client implementation using the asyncio layer of matrix-nio. This example demonstrates establishing a connection to a Matrix homeserver, authenticating, and interacting with a room.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/examples.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# basic_client.py\n# This file is included by reference but not shown in the snippet\n```\n\n----------------------------------------\n\nTITLE: Manual Encryption Key Verification with matrix-nio\nDESCRIPTION: A comprehensive example of implementing end-to-end encryption with manual device verification. The program creates a custom client that restores login details from disk, handles messages, auto-joins rooms, and trusts specific device IDs for encryption.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/examples.rst#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n# manual_encrypted_verify.py\n# This file is included by reference but not shown in the snippet\n```\n\n----------------------------------------\n\nTITLE: Interactive Emoji Verification with matrix-nio\nDESCRIPTION: Implementation of the interactive emoji verification flow for end-to-end encryption. This example shows how to respond to verification requests and complete the verification process using emoji comparison.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/examples.rst#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# verify_with_emoji.py\n# This file is included by reference but not shown in the snippet\n```\n\n----------------------------------------\n\nTITLE: Login with Stored Access Token in matrix-nio\nDESCRIPTION: Example demonstrating how to save login credentials and access tokens to disk as JSON for later use. This allows automatic authentication on subsequent runs without entering credentials again.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/examples.rst#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n# restore_login.py\n# This file is included by reference but not shown in the snippet\n```\n\n----------------------------------------\n\nTITLE: Sending an Image with matrix-nio\nDESCRIPTION: Example showing how to send an image file, such as a photo, to a Matrix room using matrix-nio. This demonstrates media handling capabilities of the library.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/examples.rst#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# send_image.py\n# This file is included by reference but not shown in the snippet\n```\n\n----------------------------------------\n\nTITLE: Installing matrix-nio with E2E encryption support using pip\nDESCRIPTION: Command to install matrix-nio with end-to-end encryption support using pip package manager. This requires the libolm C library (version 3.x) to be installed on the system first.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install matrix-nio[e2e]\n```\n\n----------------------------------------\n\nTITLE: Installing matrix-nio without E2E encryption support using pip\nDESCRIPTION: Command to install the basic version of matrix-nio without end-to-end encryption support using pip package manager.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install matrix-nio\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Application Logging with matrix-nio\nDESCRIPTION: Sets up basic logging and creates a custom logger for an application that integrates with matrix-nio. This allows application-specific logs to be managed through the same logging system.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/nio.rst#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport logging\n\nlogging.basicConfig(level=logging.DEBUG)\n\nlogger = logging.getLogger(\"my-app\")\nlogger.info(\"Hello, world!\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Logging in matrix-nio with DEBUG Level\nDESCRIPTION: Sets up basic logging configuration for matrix-nio with DEBUG level to see all logs produced by the library. This configuration is very verbose and produces a lot of output.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/nio.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport logging\n\nlogging.basicConfig(level=logging.DEBUG)\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Logging in matrix-nio with INFO Level\nDESCRIPTION: Sets up basic logging configuration for matrix-nio with INFO level for a less verbose output than DEBUG. For production environments, WARNING or higher is recommended.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/nio.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport logging\n\nlogging.basicConfig(level=logging.INFO)\n```\n\n----------------------------------------\n\nTITLE: Installing Required Pip Packages for Matrix-NIO Development\nDESCRIPTION: Install the necessary Python dependencies for development and documentation using pip. This installs packages from both test-requirements.txt and rtd-requirements.txt files.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/contributing.rst#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install -r test-requirements.txt\npip install -r rtd-requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Running the Full Test Suite for Matrix-NIO\nDESCRIPTION: Command to run the complete test suite using make. This should be executed before submitting a pull request to ensure all tests pass.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/contributing.rst#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nmake test\n```\n\n----------------------------------------\n\nTITLE: Running Specific Tests in Matrix-NIO\nDESCRIPTION: Command to run a specific test file using pytest directly. This is useful when testing only the changes you've made without running the entire test suite.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/contributing.rst#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npython3 -m pytest --benchmark-disable tests/your-test.py\n```\n\n----------------------------------------\n\nTITLE: Building the Base Docker Image for Matrix-nio\nDESCRIPTION: Command to build the base Docker image for matrix-nio from the repository root. This creates an Alpine-based image with libolm and Python bindings installed.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/docker/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ndocker build -t poljar/matrix-nio:latest -f docker/Dockerfile .\n```\n\n----------------------------------------\n\nTITLE: Customizing Python Version in Matrix-nio Docker Image\nDESCRIPTION: Command to build the Docker image with a custom Python version using the PYTHON_VERSION build argument.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/docker/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ndocker build -t poljar/matrix-nio:latest -f docker/Dockerfile --build-arg PYTHON_VERSION=3.8 .\n```\n\n----------------------------------------\n\nTITLE: Customizing libolm Version in Matrix-nio Docker Image\nDESCRIPTION: Command to build the Docker image with a custom libolm version using the LIBOLM_VERSION build argument.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/docker/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ndocker build -t poljar/matrix-nio:latest -f docker/Dockerfile --build-arg LIBOLM_VERSION=3.1.4 .\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 0.25.0\nDESCRIPTION: Changelog entry listing major features and bug fixes for version 0.25.0, including event relations, threading support, and various compliance updates.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.25.0] - 2024-08-13\n\n### Features\n- [[#449]] Aggregated Event Relations + Threading + Threaded/Private Read Receipts\n- [[#489]] Compliance with MSC2844. BREAKING CHANGE.\n- [[#490]] Moved callback execution to separate methods.\n- [[#499]] Add stop_sync_forever method, to gracefully exit sync_forever loop.\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 0.25.2\nDESCRIPTION: Changelog entry documenting bug fixes and miscellaneous tasks for version 0.25.2, including media path fixes and call event type corrections.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.25.2] - 2024-10-04\n\n### Bug Fixes\n- [[#523]] Utilize old media path for uploads (fix [[#520]])\n- [[#521]] Fix type of call event version\n\n### Miscellaneous Tasks\n- [[#522]] Replace m2r2 with sphinx_mdinclude\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 0.25.1\nDESCRIPTION: Changelog entry describing features and tasks for version 0.25.1, focusing on dependency improvements and authenticated media support.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.25.1] - 2024-09-08\n\n### Features\n- [[#516]] Improve dependency resolution + tidy up dependencies\n- [[#520]] Use authenticated media + Authorization header\n```\n\n----------------------------------------\n\nTITLE: Installing Sphinx for Documentation Preview\nDESCRIPTION: Command to install Sphinx, which is required for building and previewing documentation changes. After installation, you can generate HTML documentation by running 'make html' in the doc directory.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/contributing.rst#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\npip install sphinx\n```\n\n----------------------------------------\n\nTITLE: Adding matrix-nio Shield to Projects\nDESCRIPTION: Markdown code to add a 'Built with matrix-nio' shield to a project's README to show support for the matrix-nio project.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/examples.rst#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Built with matrix-nio](https://img.shields.io/badge/built%20with-matrix--nio-brightgreen)](https://github.com/poljar/matrix-nio)\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation Structure in RST\nDESCRIPTION: Root documentation file that sets up the structure and navigation for matrix-nio documentation using Sphinx toctree directives. Includes main README, API docs, examples and contribution guidelines.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. nio documentation master file, created by\n   sphinx-quickstart on Tue Nov 27 15:15:35 2018.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\n.. mdinclude:: ../README.md\n\n\nApi Documentation\n=================\n\n.. toctree::\n   :maxdepth: 2\n\n   nio\n   examples\n   contributing\n\n\nIndices and tables\n==================\n\n* :ref:`genindex`\n* :ref:`modindex`\n* :ref:`search`\n```\n\n----------------------------------------\n\nTITLE: Documentation List in RST Format\nDESCRIPTION: A ReStructuredText formatted list of projects built with the matrix-nio library, including links to their repositories and brief descriptions of their functionality.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/doc/built-with-nio.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\nProjects built with nio\\n-----------------------\\n\\n- `pantalaimon <https://github.com/matrix-org/pantalaimon>`_ - e2ee-aware reverse proxy daemon\\n- `nio-template <https://github.com/anoadragon453/nio-template>`_ - template for creating bots\\n- `matrix-tweetalong-bot <https://github.com/babolivier/matrix-tweetalong-bot>`_ - Twitter-backed watchalongs\\n- `weechat-matrix <https://github.com/poljar/weechat-matrix>`_ - lets Weechat communicate over Matrix\\n- `hemppa <https://github.com/vranki/hemppa>`_ - generic modular Matrix bot\\n- `devops-bot <https://github.com/rdagnelie/devops-bot>`_ - sysadmin Swiss army knife bot for team efficiency\\n- `podbot <https://github.com/interfect/podbot>`_ - play podcasts sent from AntennaPod via Riot.im elsewhere\\n- `delator <https://github.com/nogaems/delator>`_ - bot with logs and modular commands\\n- `cody <https://gitlab.com/carlbordum/matrix-cody>`_ - REPL for your matrix chat rooms\\n- `matrix-nio-send <https://github.com/8go/matrix-nio-send>`_ - predecessor of matrix-commander\\n- `Mirage <https://github.com/mirukana/mirage/>`_ - feature-rich keyboard-operable chat client written in Qt/QML\\n- `matrix-commander <https://github.com/8go/matrix-commander>`_ - CLI-oriented integratable client\\n- `matrix-archive <https://github.com/russelldavies/matrix-archive>`_ - creates a YAML log of all room messages and media\\n- `matrix-eno-bot <https://github.com/8go/matrix-eno-bot>`_ - admin and personal assistence bot\\n- `infinigpt-matrix <https://github.com/h1ddenpr0cess20/infinigpt-matrix>`_ - OpenAI GPT chatbot with infinite personalities\\n- `ollamarama-matrix <https://github.com/h1ddenpr0cess20/ollamarama-matrix>`_ - AI chatbot with infinite personalities, using local LLMs via Ollama\\n- `matrix-discord-bridge <https://github.com/git-bruh/matrix-discord-bridge>`_\\n- `Matrix Nio - HACS <https://github.com/PaarthShah/matrix-nio-hacs>`_ - A HACS Integration to replace the core matrix Home Assistant integration\\n- `Simple-Matrix-Bot-Lib <https://github.com/KrazyKirby99999/simple-matrix-bot-lib>`_\\n- `pushmatrix <https://github.com/bonukai/pushmatrix>`_\\n- `matrix-webhook <https://github.com/nim65s/matrix-webhook>`_\\n- `matrix-asgi <https://github.com/nim65s/matrix-asgi>`_\\n- `opsdroid <https://github.com/opsdroid/opsdroid>`_\\n- `niobot <https://pypi.org/project/nio-bot>`_ - An extensive framework for building powerful Matrix bots with ease\\n- `matrix-reminder-bot <https://github.com/anoadragon453/matrix-reminder-bot>`_ - A bot to remind you about stuff\\n- `bartleby <https://github.com/gperdrizet/bartleby>`_ - A LLM chatbot and writing assistant using HuggingFace\n```\n\n----------------------------------------\n\nTITLE: 502 Bad Gateway HTTP Response Headers\nDESCRIPTION: HTTP response headers from a server error showing a 502 Bad Gateway status. Includes common headers like connection type, server information, content type, and CORS settings. The response has an empty body with content length 0.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/tests/data/http_502.txt#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 502 BAD GATEWAY\nConnection: keep-alive\nServer: gunicorn/19.8.1\nDate: Wed, 23 May 2018 15:54:52 GMT\nContent-Type: text/html; charset=utf-8\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nContent-Length: 0\nVia: 1.1 vegur\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice for Project Files\nDESCRIPTION: Standard boilerplate notice to be included in project files when applying the Apache License 2.0. The notice includes placeholders for copyright year and owner information, along with standard license terms and reference to the full license.\nSOURCE: https://github.com/matrix-nio/matrix-nio/blob/main/apache_license.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCopyright {yyyy} {name of copyright owner}\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```"
  }
]
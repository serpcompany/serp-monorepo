[
  {
    "owner": "pymysql",
    "repo": "pymysql",
    "content": "TITLE: Connecting and Interacting with MySQL using PyMySQL\nDESCRIPTION: Python code example demonstrating how to use PyMySQL to connect to a database, execute an INSERT statement to add a new user, commit the transaction, and then execute a SELECT statement to retrieve the newly added user's data. It uses a `DictCursor` to return results as dictionaries and parameterized queries for security. Requires the `pymysql` library installed and a database matching the connection details.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/README.md#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nimport pymysql.cursors\n\n# Connect to the database\nconnection = pymysql.connect(host='localhost',\n                             user='user',\n                             password='passwd',\n                             database='db',\n                             cursorclass=pymysql.cursors.DictCursor)\n\nwith connection:\n    with connection.cursor() as cursor:\n        # Create a new record\n        sql = \"INSERT INTO `users` (`email`, `password`) VALUES (%s, %s)\"\n        cursor.execute(sql, ('webmaster@python.org', 'very-secret'))\n\n    # connection is not autocommit by default. So you must commit to save\n    # your changes.\n    connection.commit()\n\n    with connection.cursor() as cursor:\n        # Read a single record\n        sql = \"SELECT `id`, `password` FROM `users` WHERE `email`=%s\"\n        cursor.execute(sql, ('webmaster@python.org',))\n        result = cursor.fetchone()\n        print(result)\n```\n\n----------------------------------------\n\nTITLE: Creating a Sample Users Table in SQL\nDESCRIPTION: SQL script defining the schema for a 'users' table. It includes an auto-incrementing primary key 'id', and columns for 'email' and 'password'. This table structure is used in the accompanying Python usage example.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/README.md#_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE `users` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `email` varchar(255) COLLATE utf8_bin NOT NULL,\n    `password` varchar(255) COLLATE utf8_bin NOT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin\nAUTO_INCREMENT=1 ;\n```\n\n----------------------------------------\n\nTITLE: Basic Installation of PyMySQL using pip (Shell)\nDESCRIPTION: Installs the latest stable release of the PyMySQL library using the pip package manager for Python 3. This command downloads and installs the core PyMySQL package.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/docs/source/user/installation.rst#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n$ python3 -m pip install PyMySQL\n```\n\n----------------------------------------\n\nTITLE: Installing PyMySQL via pip\nDESCRIPTION: Installs the core PyMySQL library using pip, the Python package installer. This command should be run in a terminal or command prompt.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/README.md#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n$ python3 -m pip install PyMySQL\n```\n\n----------------------------------------\n\nTITLE: Installing PyMySQL with RSA Dependency for Authentication (Shell)\nDESCRIPTION: Installs PyMySQL along with the optional 'rsa' dependency using pip for Python 3. This is required to enable support for 'sha256_password' or 'caching_sha2_password' authentication methods in MySQL.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/docs/source/user/installation.rst#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n$ python3 -m pip install PyMySQL[rsa]\n```\n\n----------------------------------------\n\nTITLE: Installing PyMySQL with RSA Authentication Support\nDESCRIPTION: Installs PyMySQL along with the optional 'rsa' dependency using pip. This is required if you need to use 'sha256_password' or 'caching_sha2_password' authentication methods with MySQL.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/README.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n$ python3 -m pip install PyMySQL[rsa]\n```\n\n----------------------------------------\n\nTITLE: Installing PyMySQL with Ed25519 Authentication Support\nDESCRIPTION: Installs PyMySQL with the optional 'ed25519' dependency via pip. This is necessary for utilizing MariaDB's 'ed25519' authentication method.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/README.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\n$ python3 -m pip install PyMySQL[ed25519]\n```\n\n----------------------------------------\n\nTITLE: Example Output of PyMySQL Query\nDESCRIPTION: Illustrates the expected output printed to the console when the preceding Python example script is executed successfully. It shows the dictionary format of the fetched row, as returned by `fetchone()` when using `DictCursor`.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/README.md#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n{'password': 'very-secret', 'id': 1}\n```\n\n----------------------------------------\n\nTITLE: Running PyMySQL Test Suite with pytest\nDESCRIPTION: Commands to install development dependencies and run the PyMySQL test suite using pytest.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/docs/source/user/development.rst#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install -r requirements-dev.txt\n$ pytest -v pymysql\n```\n\n----------------------------------------\n\nTITLE: Creating MySQL Test Databases for PyMySQL Testing\nDESCRIPTION: SQL commands to create two test databases with UTF-8 character set and collation for PyMySQL test suite execution.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/docs/source/user/development.rst#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmysql -e 'create database test_pymysql  DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;'\nmysql -e 'create database test_pymysql2 DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;'\n```\n\n----------------------------------------\n\nTITLE: Setting Up Test Configuration Files for PyMySQL\nDESCRIPTION: Commands to copy and edit the database configuration file needed for running PyMySQL tests.\nSOURCE: https://github.com/pymysql/pymysql/blob/main/docs/source/user/development.rst#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cp ci/database.json pymysql/tests/databases.json\n$ $EDITOR pymysql/tests/databases.json\n```"
  }
]
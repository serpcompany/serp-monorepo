[
  {
    "owner": "vercel",
    "repo": "turborepo",
    "content": "TITLE: Installing Turborepo with npm\nDESCRIPTION: Installs the turbo package globally using npm package manager to enable running turbo commands from anywhere in the repository.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/index.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install turbo --global\n```\n\n----------------------------------------\n\nTITLE: Defining Tasks in Turborepo\nDESCRIPTION: Demonstrates how to define tasks in the turbo.json file, including build, test, and dev tasks with various configurations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_11\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\"dist/**\", \".next/**\", \"!.next/cache/**\"]\n    },\n    \"test\": {\n      \"outputs\": [\"coverage/**\"],\n      \"dependsOn\": [\"build\"]\n    },\n    \"dev\": {\n      \"cache\": false,\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Task Dependencies in Turborepo\nDESCRIPTION: Configuration example showing how to set up task dependencies in turbo.json. This snippet demonstrates setting up a build task that depends on parent builds using the ^build syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/package-and-task-graph.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Repository Installation of Turborepo with PNPM\nDESCRIPTION: This command installs Turborepo as a dev dependency in the root of your repository using PNPM. It helps pin the version for consistent usage across all developers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm add turbo --save-dev --ignore-workspace-root-check\n```\n\n----------------------------------------\n\nTITLE: Configuring Package Dependencies in package.json\nDESCRIPTION: Examples of how to configure internal package dependencies using different package managers (pnpm, yarn, npm, bun) workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/internal-packages.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dependencies\": {\n    \"@repo/ui\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Extending Configuration in Turborepo\nDESCRIPTION: Demonstrates how to extend from the root `turbo.json` to create specific configuration for a package using Package Configurations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"extends\": [\"//\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Dependencies with Specific Package Reference\nDESCRIPTION: Configure a lint task to depend on the build task of a specific utils package, ensuring the utils package is built before linting starts.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"lint\": {\n      \"dependsOn\": [\"utils#build\"] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in Multiple Packages with Yarn\nDESCRIPTION: Commands to install a dependency in multiple packages using Yarn 1 and Yarn 2+ workspace commands.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn workspace web add jest --dev\nyarn workspace @repo/ui add jest --dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn workspaces foreach -R --from '{web,@repo/ui}' add jest --dev\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Turborepo Configuration\nDESCRIPTION: A minimal turbo.json configuration file that defines build and dev tasks for a Turborepo project, specifying task dependencies, outputs, and caching behavior.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n    },\n    \"dev\": {\n      \"cache\": false,\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Long-running Tasks with Runtime Dependencies in Turborepo JSON\nDESCRIPTION: This snippet shows how to configure a long-running task (dev) that requires another task (api#dev) to always be running at the same time using the 'with' key.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"dev\": {\n      \"with\": [\"api#dev\"],\n      \"persistent\": true,\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Task Inputs for Targeted Caching\nDESCRIPTION: Define specific file inputs for a spell-check task to limit the cache computation to only markdown files, optimizing caching behavior.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"spell-check\": {\n      \"inputs\": [\"**/*.md\", \"**/*.mdx\"] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding TypeScript Check Script\nDESCRIPTION: Adding a type checking script to package.json for Next.js applications.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/add-to-existing-repository.mdx#2025-04-22_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"scripts\": {\n+   \"check-types\": \"tsc --noEmit\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing available tasks with turbo run in Turborepo\nDESCRIPTION: Running turbo run without specifying tasks shows all available tasks in the monorepo and the packages that define them. This helps identify what commands can be executed.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/understanding-your-repository.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n> turbo run\nNo tasks provided, here are some potential ones\n\n  lint\n    @repo/ui, docs, web\n  build\n    docs, web\n  dev\n    docs, web\n  start\n    docs, web\n  generate:component\n    @repo/ui\n```\n\n----------------------------------------\n\nTITLE: Specifying Task Input Files for Change Detection\nDESCRIPTION: Defines specific file patterns to consider when determining if a package has changed, which affects whether cached results can be used.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_19\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"test\": {\n      \"inputs\": [\"src/**/*.ts\", \"src/**/*.tsx\", \"test/**/*.ts\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Dependencies with Package Graph Traversal\nDESCRIPTION: Configure a build task to depend on the build tasks of its dependencies using the ^ microsyntax, which ensures dependencies are built before dependents.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring turbo.json with Local JSON Schema from node_modules\nDESCRIPTION: Sets up the turbo.json file to use the JSON Schema from the local node_modules directory. This requires having run your package manager's install command first.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/editor-integration.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"./node_modules/turbo/schema.json\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Package.json for Math Package in Bun\nDESCRIPTION: Defines the package.json file for a math utilities package in a Bun workspace. It includes package name, type, scripts for development and building, exports configuration for multiple entry points, and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/math\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"tsc --watch\",\n    \"build\": \"tsc\"\n  },\n  \"exports\": {\n    \"./add\": {\n      \"types\": \"./src/add.ts\",\n      \"default\": \"./dist/add.js\"\n    },\n    \"./subtract\": {\n      \"types\": \"./src/subtract.ts\",\n      \"default\": \"./dist/subtract.js\"\n    }\n  },\n  \"devDependencies\": {\n    \"@repo/typescript-config\": \"workspace:*\",\n    \"typescript\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tasks in package.json for Turborepo\nDESCRIPTION: Demonstrates how to write turbo commands in the root package.json for frequently run tasks. This setup allows you to execute workflows through your package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"scripts\": {\n    \"dev\": \"turbo run dev\",\n    \"build\": \"turbo run build\",\n    \"test\": \"turbo run test\",\n    \"lint\": \"turbo run lint\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Controlling Cache Behavior for Development Tasks\nDESCRIPTION: Configuration example showing how to enable caching for build tasks while disabling it for long-running development tasks that should always execute.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_18\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\".svelte-kit/**\", \"dist/**\"] // File outputs will be cached\n    },\n    \"dev\": {\n      \"cache\": false, // No outputs will be cached\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Changesets CLI Commands\nDESCRIPTION: Basic Changesets commands for version management and publishing.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/publishing-libraries.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Add a new changeset\nchangeset\n\n# Create new versions of packages\nchangeset version\n\n# Publish all changed packages to npm\nchangeset publish\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Dependencies in Turborepo\nDESCRIPTION: Shows how to define task dependencies using the dependsOn property, including dependency relationships, same-package relationships, and arbitrary task relationships.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_12\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"test\": {\n      \"dependsOn\": [\"lint\", \"build\"]\n    }\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"web#lint\": {\n      \"dependsOn\": [\"utils#build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Affected Tasks in Turborepo\nDESCRIPTION: This command runs the build task only for packages that have changes, using the --affected flag. It's useful for optimizing CI runs in large repositories or when not using a Remote Cache.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/constructing-ci.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --affected\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Output Caching in Turborepo\nDESCRIPTION: Specifies file glob patterns that should be cached when a task completes successfully, relative to the package's package.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_17\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      // Cache all files emitted to the packages's `dist` directory\n      \"outputs\": [\"dist/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Example with NPM\nDESCRIPTION: Commands to bootstrap a Turborepo project using NPM package manager. Supports both official examples and community GitHub repositories.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/examples.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Use an example listed below\nnpx create-turbo@latest --example [example-name]\n\n# Use a GitHub repository from the community\nnpx create-turbo@latest --example [github-url]\n```\n\n----------------------------------------\n\nTITLE: Building Packages with Turbo CLI\nDESCRIPTION: Command to build packages in a Turborepo workspace using either the global turbo installation or package manager script. The build process ensures dependencies are built in the correct order.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nturbo build\n```\n\n----------------------------------------\n\nTITLE: Root package.json Configuration for npm\nDESCRIPTION: Example root package.json configuration for an npm-based Turborepo workspace, including common scripts and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/structuring-a-repository.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"private\": true,\n  \"scripts\": {\n    \"build\": \"turbo run build\",\n    \"dev\": \"turbo run dev\",\n    \"lint\": \"turbo run lint\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"latest\"\n  },\n  \"packageManager\": \"npm@10.0.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Dependencies in Turborepo\nDESCRIPTION: Shows a configuration example with task dependencies defined in turbo.json, which can be referenced when using the --only flag.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"]\n    },\n    \"test\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Build with NPM in Turborepo\nDESCRIPTION: Command to run the build script defined in package.json using NPM package manager in a Turborepo project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/caching.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Specifying Cache Outputs for TypeScript Build\nDESCRIPTION: Configure a TypeScript build task with appropriate cache outputs to store the dist directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\"dist/**\"] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tasks with the --affected Flag\nDESCRIPTION: Using the `--affected` flag to filter and run tasks only for packages affected by changes on the current branch, comparing against the main branch by default.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build lint test --affected\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variable Dependencies in turbo.json\nDESCRIPTION: Example turbo.json configuration showing how to define environment variable dependencies for cache fingerprinting at global and task-specific levels, along with file dependencies that affect all tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-1-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": {\n        \"^build\"\n        // env vars will impact hashes of all \"build\" tasks\n        \"$SOME_ENV_VAR\"\n      },\n      \"outputs\": [\"dist/**\"]\n    },\n    \"web#build\": { // override settings for the \"build\" task for the \"web\" app\n      \"dependsOn\": [\n        \"^build\",\n          // env vars that will impact the hash of \"build\" task for only \"web\" app\n          \"$STRIPE_SECRET_KEY\",\n          \"$NEXT_PUBLIC_STRIPE_PUBLIC_KEY\",\n          \"$NEXT_PUBLIC_ANALYTICS_ID\",\n      ],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"],\n    },\n    \"docs#build\": { // override settings for the \"build\" task for the \"docs\" app\n      \"dependsOn\": [\n        \"^build\",\n          // env vars that will impact the hash of \"build\" task for only \"web\" app\n          \"$STRIPE_SECRET_KEY\",\n          \"$NEXT_PUBLIC_STRIPE_PUBLIC_KEY\",\n          \"$NEXT_PUBLIC_ANALYTICS_ID\",\n      ],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"],\n    }\n  },\n  \"globalDependencies\": [\n    \"$GITHUB_TOKEN\"// env var that will impact the hashes of all tasks,\n    \"tsconfig.json\" // file contents will impact the hashes of all tasks,\n    \".env.*\" // glob file contents will impact the hashes of all tasks,\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript for Math Package\nDESCRIPTION: Creates a tsconfig.json file for the math package that extends a base configuration. It specifies output and source directories and includes/excludes appropriate paths for compilation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"extends\": \"@repo/typescript-config/base.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"dist\",\n    \"rootDir\": \"src\"\n  },\n  \"include\": [\"src\"],\n  \"exclude\": [\"node_modules\", \"dist\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with Yarn\nDESCRIPTION: This command installs Turborepo using Yarn package manager. It creates a new Turbo project using the latest version.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with PNPM\nDESCRIPTION: This command installs Turborepo using PNPM package manager. It creates a new Turbo project using the latest version.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Including .env Files in Turborepo Configuration\nDESCRIPTION: Configuration showing how to include .env files in globalDependencies and task inputs to ensure task hashing accounts for changes in environment variables stored in .env files.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/using-environment-variables.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"globalDependencies\": [\".env\"], // All task hashes\n  \"tasks\": {\n    \"build\": {\n      \"inputs\": [\"$TURBO_DEFAULT$\", \".env\"] // Only the `build` task hash\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Root Tasks in Turborepo JSON\nDESCRIPTION: This snippet shows how to register a root task in turbo.json for linting files in the workspace's root directory, in addition to the lint task in each package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"lint\": {\n      \"dependsOn\": [\"^lint\"]\n    },\n    \"//#lint:root\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Package Manager Configuration\nDESCRIPTION: Specifying the package manager version in package.json for Turborepo optimization.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/add-to-existing-repository.mdx#2025-04-22_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n{\n+  \"packageManager\": \"npm@8.5.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Concurrency Limits for Task Execution\nDESCRIPTION: Examples of how to limit concurrency for task execution using the `--concurrency` flag, which accepts either a fixed number or a percentage of available processors.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --concurrency=50%\nturbo run test --concurrency=5\n```\n\n----------------------------------------\n\nTITLE: Using $TURBO_DEFAULT$ Special Pattern for Inputs\nDESCRIPTION: Example showing how to extend Turborepo's default input behavior by using the special $TURBO_DEFAULT$ string to include default files while excluding specific patterns.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_20\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"check-types\": {\n      // Consider all default inputs except the package's README\n      \"inputs\": [\"$TURBO_DEFAULT$\", \"!README.md\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Dependencies Within Same Package\nDESCRIPTION: Define a test task that depends on the build task in the same package, ensuring build runs before tests within each package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"test\": {\n      \"dependsOn\": [\"build\"] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Affected Package Tasks in Turborepo\nDESCRIPTION: Demonstrates how to use the --affected flag with turbo run to execute tasks only for packages with changes between current branch and default branch.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-1-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo run lint test --affected\n```\n\n----------------------------------------\n\nTITLE: Linking Repository to Turborepo Remote Cache\nDESCRIPTION: Command to link the local repository to Remote Cache. After linking, Turborepo will automatically send task outputs to Remote Cache for sharing across your team.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/caching.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Configuring Framework-Specific Outputs in Root turbo.json\nDESCRIPTION: Example of a root turbo.json configuration that specifies output directories for both Next.js and SvelteKit frameworks in a single configuration file.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/package-configurations.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\".next/**\", \"!.next/cache/**\", \".svelte-kit/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Root Package.json for Turborepo\nDESCRIPTION: This is the root package.json configuration for a Turborepo project, defining build and test scripts that use Turbo to execute tasks across the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/github-actions.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-turborepo\",\n  \"scripts\": {\n    \"build\": \"turbo run build\",\n    \"test\": \"turbo run test\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with Package Managers\nDESCRIPTION: Commands to install Turborepo as a development dependency using different package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/single-package-workspaces.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install turbo --save-dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add turbo --dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install turbo --save-dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun install turbo --dev\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with Package Managers\nDESCRIPTION: Command line instructions for creating a new Turborepo project using different package managers (pnpm, yarn, npm, and bun).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/structuring-a-repository.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Specifying Cache Directory in Turborepo\nDESCRIPTION: Demonstrates how to specify the filesystem cache directory for Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"cacheDir\": \".turbo/cache\"\n}\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions CI Workflow for NPM and Turborepo\nDESCRIPTION: GitHub Actions workflow configuration for NPM-based Turborepo projects. This workflow sets up Node.js with NPM caching, installs dependencies, and runs build and test tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/github-actions.mdx#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nname: CI\n\non:\n  push:\n    branches: [\"main\"]\n  pull_request:\n    types: [opened, synchronize]\n\njobs:\n  build:\n    name: Build and Test\n    timeout-minutes: 15\n    runs-on: ubuntu-latest\n    # To use Remote Caching, uncomment the next lines and follow the steps below.\n    # env:\n    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}\n    #  TURBO_TEAM: ${{ vars.TURBO_TEAM }}\n    #  TURBO_REMOTE_ONLY: true\n\n    steps:\n      - name: Check out code\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 2\n\n      - name: Setup Node.js environment\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm install\n\n      - name: Build\n        run: npm run build\n\n      - name: Test\n        run: npm run test\n```\n\n----------------------------------------\n\nTITLE: Setting Up Persistent Tasks for Development Servers\nDESCRIPTION: Configuration for long-running tasks like development servers to prevent other tasks from depending on them and causing deadlocks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_23\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"dev\": {\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Repository Installation of Turborepo with Bun (Beta)\nDESCRIPTION: This command installs Turborepo as a dev dependency in the root of your repository using Bun (Beta). It helps pin the version for consistent usage across all developers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nbun install turbo --dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Task in turbo.json\nDESCRIPTION: Add a 'test' task to the root turbo.json file to enable parallel execution and caching of test suites across packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/jest.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"test\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Turborepo Run Command Syntax\nDESCRIPTION: The basic syntax for the `turbo run` command, which is used to execute tasks specified in turbo.json. It allows running one or multiple tasks with various options and can pass arguments to the underlying scripts.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo run [tasks] [options] [-- [args passed to tasks]]\n```\n\n----------------------------------------\n\nTITLE: Adding Math Package as Dependency in npm\nDESCRIPTION: Updates the web application's package.json to include the math package as a dependency using npm workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_9\n\nLANGUAGE: diff\nCODE:\n```\n  \"dependencies\": {\n+   \"@repo/math\": \"*\",\n    \"next\": \"latest\",\n    \"react\": \"latest\",\n    \"react-dom\": \"latest\"\n  },\n```\n\n----------------------------------------\n\nTITLE: Filtering Tasks to Include Dependencies in Turborepo\nDESCRIPTION: Shows how to limit the scope to a package and all packages it depends on by appending ... to the package name, useful for testing all required dependencies for a package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nturbo dev --filter=web...\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Inputs with Default Behavior in Turborepo\nDESCRIPTION: This JSON snippet demonstrates how to use the new '$TURBO_DEFAULT$' special value in the 'inputs' array of turbo.json. It allows users to maintain Turborepo's default input behavior while adding custom glob patterns to fine-tune input handling.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-12-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"inputs\": [\"$TURBO_DEFAULT$\", \"!README.md\", \"!**.test.**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Inputs in turbo.json\nDESCRIPTION: Demonstrates how to set up pipeline inputs in turbo.json to control which files impact caching for specific scripts, such as the build script for a docs site.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-3-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\", \"dist/**\"]\n    },\n    \"docs#build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"],\n      \"inputs\": [\n        \"../../docs/**/*.md\",\n        \"pages/**\",\n        \"components/**\",\n        \"package.json\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Environment Variables in Turborepo\nDESCRIPTION: Illustrates how to set global environment variables that will impact the hash of all tasks. Changes to these variables will cause all tasks to miss cache.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"globalEnv\": [\"GITHUB_TOKEN\", \"PACKAGE_VERSION\", \"NODE_ENV\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Rules for Tags in Turborepo JSON\nDESCRIPTION: This configuration sets up a rule in the root turbo.json file that prevents packages with a 'public' tag from depending on packages with an 'internal' tag.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/boundaries.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"boundaries\": {\n    \"tags\": {\n      \"public\": {\n        \"dependencies\": {\n          \"deny\": [\"internal\"]\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up CircleCI Configuration for npm\nDESCRIPTION: This YAML snippet configures CircleCI for a Turborepo project using npm as the package manager. It includes steps for installing dependencies, building, and testing the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/circleci.mdx#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nversion: 2.1\norbs:\n  node: circleci/node@5.0.2\nworkflows:\n  test:\n    jobs:\n      - test\njobs:\n  test:\n    docker:\n      - image: cimg/node:lts\n    steps:\n      - checkout\n      - node/install-packages\n      - run:\n        command: npm run build\n        environment:\n          TURBO_UI: \"false\"\n\n      - run:\n        command: npm run test\n        environment:\n          TURBO_UI: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Source Options\nDESCRIPTION: Examples of how to configure caching sources for Turborepo runs using the `--cache` flag. This allows specifying read/write permissions for both local and remote caches.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Read from and write to local cache. Only read from Remote Cache.\nturbo run build --cache=local:rw,remote:r\n\n# Only read from local cache. Read from and write to Remote Cache.\nturbo run build --cache=local:r,remote:rw\n\n# Read from and write to local cache. No Remote Cache activity.\nturbo run build --cache=local:rw\n\n# Do not use local cache. Only read from Remote Cache.\nturbo run build --cache=local:,remote:r\n```\n\n----------------------------------------\n\nTITLE: Configuring Dev Task in Turborepo\nDESCRIPTION: Defines a development task in turbo.json with cache disabled and persistent mode enabled. This configuration is useful for long-running tasks like development servers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/developing-applications.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"dev\": {\n      \"cache\": false,\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo for Next.js Projects\nDESCRIPTION: Basic turbo.json configuration for Next.js projects, defining build, type checking, and dev tasks with their dependencies and outputs.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/add-to-existing-repository.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n    },\n    \"check-types\": {\n      \"dependsOn\": [\"^check-types\"]\n    },\n    \"dev\": {\n      \"persistent\": true,\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Travis CI with NPM for Turborepo\nDESCRIPTION: Travis CI configuration for a Turborepo project using NPM as the package manager, including install and build/test scripts.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/travis-ci.mdx#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nlanguage: node_js\nnode_js:\n  - lts/*\ninstall:\n  - npm install\nscript:\n  - npm run build\nscript:\n  - npm run test\n```\n\n----------------------------------------\n\nTITLE: Generating Run Summaries in Turborepo\nDESCRIPTION: Creates a JSON file in .turbo/runs containing metadata about the run, including affected packages, executed tasks with timings and hashes, and cached artifact files. Useful for debugging cache misses and performance tracking.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --summarize\n```\n\n----------------------------------------\n\nTITLE: Basic Flat Config Integration for ESLint\nDESCRIPTION: Example of importing and using turbo's flat configuration in an ESLint config file. This demonstrates the simplest integration method for modern ESLint flat configs.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-config-turbo.mdx#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport turboConfig from 'eslint-config-turbo/flat';\n\nexport default [\n  ...turboConfig,\n  // Other configuration\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in turbo.json\nDESCRIPTION: A configuration example showing how to set up environment variables in turbo.json using globalEnv and task-specific env properties. This is essential for ensuring proper task hashing based on environment variable changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/using-environment-variables.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"globalEnv\": [\"IMPORTANT_GLOBAL_VARIABLE\"],\n  \"tasks\": {\n    \"build\": {\n      \"env\": [\"MY_API_URL\", \"MY_API_KEY\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with npm\nDESCRIPTION: Command to initialize a new Turborepo using npm package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Turborepo Configuration for Sequential Task Dependencies\nDESCRIPTION: Turborepo configuration for running development tasks in sequence using the dependsOn property to define task dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/single-package-workspaces.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"dev\": {\n      \"dependsOn\": [\"db:seed\"],\n      \"cache\": false,\n      \"persistent\": true\n    },\n    \"db:seed\": {\n      \"dependsOn\": [\"db:push\"],\n      \"cache\": false\n    },\n    \"db:push\": {\n      \"dependsOn\": [\"db:up\"],\n      \"cache\": false\n    },\n    \"db:up\": {\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Dependencies in turbo.json\nDESCRIPTION: Sets up dependency relationships and artifact caching for both JavaScript and Rust projects in a Turborepo configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/multi-language.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\"dist/**\", \"target/release/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using $TURBO_ROOT$ Microsyntax in Configuration\nDESCRIPTION: This snippet demonstrates the new $TURBO_ROOT$ microsyntax that provides a consistent way to reference files at the workspace root, regardless of package location in the directory structure.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-5.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"inputs\": [\"$TURBO_ROOT$/important-file.txt\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Turborepo Configuration in turbo.json\nDESCRIPTION: The turbo.json configuration file defines tasks, their dependencies, and output directories. It specifies build outputs and task dependencies to optimize the build process.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/github-actions.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\".next/**\", \"!.next/cache/**\", \"other-output-dirs/**\"],\n      \"dependsOn\": [\"^build\"]\n    },\n    \"test\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Side-effect Tasks in Turborepo JSON\nDESCRIPTION: This snippet demonstrates how to configure a task (deploy) that should always run, regardless of caching, by setting 'cache' to false.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"deploy\": {\n      \"dependsOn\": [\"^build\"],\n      \"cache\": false\n    },\n    \"build\": {\n      \"outputs\": [\"dist/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Package Entry Points\nDESCRIPTION: Specifies the package entry points for CommonJS, ESM and TypeScript declarations in package.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/publishing-libraries.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\"\n}\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Filters in Turborepo\nDESCRIPTION: Demonstrates how to combine multiple filters to create a union that further refines the entry points into your Task Graph, running tasks that match any of the specified filters.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nturbo build --filter=...ui --filter={./packages/*} --filter=[HEAD^1]\n```\n\n----------------------------------------\n\nTITLE: Including Multiple .env Files with Wildcards\nDESCRIPTION: Configuration example showing how to use wildcards to include multiple .env files in Turborepo's task hashing system, ensuring that changes to any .env file will impact the task hash.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/using-environment-variables.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"globalDependencies\": [\".env\"], // All task hashes\n  \"tasks\": {\n    \"build\": {\n      \"inputs\": [\"$TURBO_DEFAULT$\", \".env*\"] // Only the `build` task hash\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Migration Codemod with Yarn\nDESCRIPTION: Command to run the Turborepo codemod migration tool using Yarn package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/upgrading.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx @turbo/codemod migrate\n```\n\n----------------------------------------\n\nTITLE: Optimizing Turborepo Caching with Input Filters\nDESCRIPTION: Turborepo configuration that optimizes caching for TypeScript type checking by only considering TypeScript files as inputs.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/single-package-workspaces.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"check-types\": {\n      \"inputs\": [\"**/*.{ts,tsx}\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Cache Outputs for Next.js Build\nDESCRIPTION: Configure a Next.js build task with appropriate cache outputs, including .next directory but excluding the .next/cache directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Package Build Scripts\nDESCRIPTION: Scripts for building and watching TypeScript code in a package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"dev\": \"tsc --watch\",\n    \"build\": \"tsc\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Playwright Environment Variables for End-to-End Tasks in Turborepo\nDESCRIPTION: Configuration that allows Playwright-specific environment variables to be passed through to the e2e task without affecting caching. This ensures Playwright can access its required environment variables while maintaining proper cache behavior.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/playwright.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"e2e\": {\n      \"passThroughEnv\": [\"PLAYWRIGHT_*\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Daemon in Turborepo\nDESCRIPTION: Shows how to enable or disable the background process (daemon) used by Turborepo for pre-calculating expensive operations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"daemon\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Next.js in turbo.json\nDESCRIPTION: This turbo.json configuration specifies environment variables and input files for Next.js build and dev tasks. It follows Next.js's environment variable load order and includes specific variables for hashing.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/using-environment-variables.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"env\": [\"MY_API_URL\", \"MY_API_KEY\"],\n      \"inputs\": [\n        \"$TURBO_DEFAULT$\",\n        \".env.production.local\",\n        \".env.local\",\n        \".env.production\",\n        \".env\"\n      ]\n    },\n    \"dev\": {\n      \"inputs\": [\n        \"$TURBO_DEFAULT$\",\n        \".env.development.local\",\n        \".env.local\",\n        \".env.development\",\n        \".env\"\n      ]\n    },\n    \"test\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Framework Inference in Turborepo\nDESCRIPTION: Demonstrates how to disable automatic environment variable inclusion by setting the framework-inference flag to false.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --framework-inference=false\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo for merged coverage reports\nDESCRIPTION: Defines Turborepo tasks for running tests, merging coverage reports, and generating a final report.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"test\": {\n      \"dependsOn\": [\"^test\", \"@repo/vitest-config#build\"],\n      \"outputs\": [\"coverage.json\"]\n    },\n    \"merge-json-reports\": {\n      \"inputs\": [\"coverage/raw/**\"],\n      \"outputs\": [\"coverage/merged/**\"]\n    },\n    \"report\": {\n      \"dependsOn\": [\"merge-json-reports\"],\n      \"inputs\": [\"coverage/merge\"],\n      \"outputs\": [\"coverage/report/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turbo Watch Command with Tasks\nDESCRIPTION: Basic usage of the `turbo watch` command to re-run specific tasks when code changes are detected. Tasks will be executed in the order configured in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/watch.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo watch [tasks]\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Remote Cache using NPM\nDESCRIPTION: Command to authenticate Turborepo using NPM package manager for developers without global Turbo installation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Filtering Tasks by Package in Turborepo\nDESCRIPTION: Shows how to use the filter flag to run tasks only for a specific package in your repository.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nturbo build --filter=@acme/web\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Tasks with the 'with' Key in JSON\nDESCRIPTION: This snippet demonstrates how to use the new 'with' configuration key to ensure that certain long-running tasks are always executed together. It shows how to configure a web application's dev task to always run with a dependent API's start task.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-5.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"dev\": {\n      \"with\": [\"api#start\"],\n      \"persistent\": true,\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo for Vite Projects\nDESCRIPTION: turbo.json configuration for Vite projects, specifying build outputs and type checking tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/add-to-existing-repository.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\"dist/**\"]\n    },\n    \"check-types\": {\n      \"dependsOn\": [\"^check-types\"]\n    },\n    \"dev\": {\n      \"persistent\": true,\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Actions in Turbo Generators with TypeScript\nDESCRIPTION: This snippet demonstrates how to create custom action functions in a Turbo generator configuration file. It shows how to fetch data from a remote API, add the response to answers for access in subsequent actions, and return a status string.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/generating-code.mdx#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { PlopTypes } from \"@turbo/gen\";\n\nconst customAction: PlopTypes.CustomActionFunction = async (answers) => {\n  // fetch data from a remote API\n  const results = await fetchRemoteData();\n  // add the response to the answers, making this data available to actions\n  answers.results = results;\n  // return a status string\n  return 'Finished data fetching!';\n}\n\nexport default function generator(plop: PlopTypes.NodePlopAPI): void {\n  // create a generator\n  plop.setGenerator(\"Generator name\", {\n    description: \"Generator description\",\n    prompts: [\n      ...\n    ],\n    actions: [\n      customAction\n      {/* actions now have access to `answers.results` */}\n      ...\n    ],\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Turbo.json for Build and Test Tasks\nDESCRIPTION: Turbo.json configuration defining build and test tasks with their dependencies and outputs.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/gitlab-ci.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\".svelte-kit/**\"],\n      \"dependsOn\": [\"^build\"]\n    },\n    \"test\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Interactive Tasks for Terminal Input\nDESCRIPTION: Marks a task as interactive to allow it to accept inputs from stdin in the terminal, useful for test watchers that can be manipulated while running.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_24\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"test:watch\": {\n      \"interactive\": true,\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Internal Package Components in React\nDESCRIPTION: Example of importing and using a component from an internal package in a React application.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/internal-packages.mdx#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from '@repo/ui';\n\nexport default function Page() {\n  return <Button>Submit</Button>;\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Tasks by Package and Task in Turborepo\nDESCRIPTION: Demonstrates the shorthand syntax for filtering to a specific task for a package directly in the CLI command, available since version 2.2.4.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# Run the `build` task for the `web` package\nturbo run web#build\n\n# Run the `build` task for the `web` package, and the `lint` task for the `docs` package\nturbo run web#build docs#lint\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Vite in turbo.json\nDESCRIPTION: This turbo.json configuration specifies environment variables and input files for Vite build and dev tasks. It follows Vite's environment variable load order and includes specific variables for hashing.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/using-environment-variables.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"env\": [\"MY_API_URL\", \"MY_API_KEY\"],\n      \"inputs\": [\n        \"$TURBO_DEFAULT$\",\n        \".env.production.local\",\n        \".env.local\",\n        \".env.production\",\n        \".env\"\n      ]\n    },\n    \"dev\": {\n      \"inputs\": [\n        \"$TURBO_DEFAULT$\",\n        \".env.development.local\",\n        \".env.local\",\n        \".env.development\",\n        \".env\"\n      ]\n    },\n    \"test\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using the Migrate Command in Turborepo Codemods\nDESCRIPTION: The `migrate` command updates your Turborepo codebase to a specified version (defaults to latest), running required codemods and installing the new version. It provides options for specifying version ranges, controlling installation behavior, and running in dry mode.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-codemod/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUsage: @turbo/codemod migrate|update [options] [path]\n\nMigrate a project to the latest version of Turborepo\n\nArguments:\n  path              Directory where the transforms should be applied\n\nOptions:\n  --from <version>  Specify the version to migrate from (default: current version)\n  --to <version>    Specify the version to migrate to (default: latest)\n  --install         Install new version of turbo after migration (default: true)\n  --force           Bypass Git safety checks and forcibly run codemods (default: false)\n  --dry             Dry run (no changes are made to files) (default: false)\n  --print           Print transformed files to your terminal (default: false)\n  -h, --help        display help for command\n```\n\n----------------------------------------\n\nTITLE: Implementing a Turborepo Code Generator with PlopTypes\nDESCRIPTION: Example of creating a basic code generator in Turborepo using the @turbo/gen package. The code demonstrates importing PlopTypes and defining a generator function that sets up prompts to gather user input and actions to generate code based on that input.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-gen.mdx#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { PlopTypes } from \"@turbo/gen\"; // [!code highlight]\n\n// [!code word:PlopTypes]\nexport default function generator(plop: PlopTypes.NodePlopAPI): void {\n  // Create a generator\n  plop.setGenerator(\"Generator name\", {\n    description: \"Generator description\",\n    // Gather information from the user\n    prompts: [\n      ...\n    ],\n    // Perform actions based on the prompts\n    actions: [\n      ...\n    ],\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Explicitly Declaring Output Paths for Caching\nDESCRIPTION: Configuration change showing how to explicitly declare which directories should be cached. In Turborepo 1.7, outputs must be declared explicitly rather than relying on the previous implicit behavior.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-7-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n```diff title=\"turbo.json\"\n{\n  \"pipeline\": {\n    \"build\": {\n+     \"outputs\": [\"dist/**\", \"build/**\"]\n    }\n  }\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Creating Framework-Specific Package Configuration for SvelteKit\nDESCRIPTION: Example of a package-specific turbo.json for a SvelteKit app that overrides the build outputs to specify SvelteKit-specific output directories.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/package-configurations.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"extends\": [\"//\"],\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\".svelte-kit/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Package-Specific Task Configuration in Root turbo.json\nDESCRIPTION: Example of using package-specific task syntax in a root turbo.json to completely override a task for a specific package, showing the need to duplicate shared configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/package-configurations.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputLogs\": \"hash-only\",\n      \"inputs\": [\"src/**\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n    },\n    \"my-sveltekit-app#build\": {\n      \"outputLogs\": \"hash-only\", // must duplicate this\n      \"inputs\": [\"src/**\"], // must duplicate this\n      \"outputs\": [\".svelte-kit/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Verbosity Levels in Turborepo CLI\nDESCRIPTION: Controls the log output level using --verbosity=<num> or shorthand flags. Supports Info (level 1, -v), Debug (level 2, -vv), and Trace (level 3, -vvv) verbosity levels.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --verbosity=2\nturbo run build -vvv\n```\n\n----------------------------------------\n\nTITLE: Generating Task Graph Visualization in Turborepo\nDESCRIPTION: Shows how to generate visual representations of the task graph in various formats like svg, png, jpg, pdf, json, or html.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --graph\nturbo run build test lint --graph=my-graph.svg\n```\n\n----------------------------------------\n\nTITLE: Adding Publish Script to Root Package.json\nDESCRIPTION: Adds a publish-packages script that runs build, lint, and test before publishing.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/publishing-libraries.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"publish-packages\": \"turbo run build lint test && changeset version && changeset publish\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Configuration with dotEnv Support\nDESCRIPTION: Turborepo configuration showing the new dotEnv feature that supports .env files with different configurations for build, dev, and test tasks. Also includes globalDotEnv for repository-wide settings.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-10-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"globalDotEnv\": [\".env\"],\n  \"pipeline\": {\n    \"build\": {\n      \"dotEnv\": [\n        \".env.production.local\",\n        \".env.local\",\n        \".env.production\",\n        \".env\"\n      ]\n    },\n    \"dev\": {\n      \"dotEnv\": [\n        \".env.development.local\",\n        \".env.local\",\n        \".env.development\",\n        \".env\"\n      ]\n    },\n    \"test\": {\n      \"dotEnv\": [\".env.test.local\", \".env.test\", \".env\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New SvelteKit Project with Turbo\nDESCRIPTION: Commands to create a new Turborepo project with SvelteKit using different package managers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/sveltekit.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest -e with-svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest -e with-svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e with-svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest -e with-svelte\n```\n\n----------------------------------------\n\nTITLE: Configuring UI Output in Turborepo\nDESCRIPTION: Shows how to select a terminal UI for the repository, choosing between 'tui' for interactive viewing and 'stream' for non-interactive output.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ui\": \"tui\" | \"stream\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Dependencies for Specific Package and Task\nDESCRIPTION: Configure a specific package's lint task (web#lint) to depend on a specific package's build task (utils#build), creating a precise dependency between tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"web#lint\": {\n      \"dependsOn\": [\"utils#build\"] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Framework Entrypoints in package.json\nDESCRIPTION: This snippet demonstrates how to structure a package.json file to support multiple framework bindings through export paths. It defines separate entrypoints for standard links and framework-specific implementations (Next.js).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/framework-bindings.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"exports\": {\n    \"./link\": \"./dist/link.js\",\n    \"./next-js/link\": \"./dist/next-js/link.js\"\n  },\n  \"peerDependencies\": {\n    \"next\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Vite Application with PNPM\nDESCRIPTION: Command to add a new Vite application to an existing repository using PNPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm create vite@latest apps/my-app\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variable Wildcards in Turborepo\nDESCRIPTION: Example of using wildcards in turbo.json to include all environment variables with a specific prefix in the task hash.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"env\": [\"MY_API_*\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring an internal TypeScript package in package.json\nDESCRIPTION: This snippet demonstrates how to set up an 'internal package' by pointing both the 'main' and 'types' fields to the untranspiled TypeScript source file. This approach eliminates the need for project references or TypeScript build steps.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/you-might-not-need-typescript-project-references.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@sample/my-internal-package\"\n  \"main\": \"./src/index.ts\"\n  \"types\": \"./src/index.ts\", // yes, this works!\n  \"dependencies\": {\n    ...\n  },\n  \"devDependencies\": {\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using the --affected Flag with Custom Base Branch\nDESCRIPTION: Shows how to filter packages to only those affected by changes on the current branch, with a custom base branch set via environment variable.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/ls.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nTURBO_SCM_BASE=development turbo ls --affected\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Environment Variables for Playwright in Turborepo\nDESCRIPTION: Configuration that allows Playwright-specific environment variables to be passed through to all tasks globally without affecting caching. This approach makes Playwright environment variables available throughout the repository.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/playwright.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"globalPassThroughEnv\": [\"PLAYWRIGHT_*\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New Turborepo Project\nDESCRIPTION: Command to initialize a new Turborepo project using the create-turbo package\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/fixtures/turbo_trace/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Remote Cache using Bun\nDESCRIPTION: Command to authenticate Turborepo using Bun package manager (Beta) for developers without global Turbo installation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbunx turbo login\n```\n\n----------------------------------------\n\nTITLE: Adding Internal Package Dependencies\nDESCRIPTION: Package.json configuration to add internal package dependencies to a SvelteKit application using different package managers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/sveltekit.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-app\",\n  \"dependencies\": {\n    \"@repo/ui\": \"workspace:*\"\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-app\",\n  \"dependencies\": {\n    \"@repo/ui\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Specific Application in Turborepo\nDESCRIPTION: Demonstrates how to use the --filter flag to run the dev task for a specific application and its dependencies in the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/developing-applications.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nturbo dev --filter=web\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Dependencies with Deny List Only\nDESCRIPTION: Example of configuring package dependency rules with only a deny list, allowing all packages except those with specific tags.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_28\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"boundaries\": {\n    \"utils\": {\n      \"dependencies\": {\n        // only packages with the `unsafe` tag are banned, all other packages permitted\n        \"deny\": [\"unsafe\"]\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Environment Variables for Tasks in Turborepo\nDESCRIPTION: Demonstrates how to specify environment variables that a task depends on, including global and package-specific variables.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_13\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"env\": [\"DATABASE_URL\"] // Impacts hash of all build tasks\n    },\n    \"web#build\": {\n      \"env\": [\"API_SERVICE_KEY\"] // Impacts hash of web's build task\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Package-specific turbo.json for Storybook App\nDESCRIPTION: Configuration for a package-specific turbo.json in the Storybook app to handle co-located stories build tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_28\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"extends\": [\"//\"],\n  \"tasks\": {\n    \"build:storybook\": {\n      \"dependsOn\": [\"^build:storybook\"],\n      \"outputs\": [\"storybook-static/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Force Flag in Turborepo\nDESCRIPTION: Shows how to use the --force flag to ignore existing cached artifacts and re-execute all tasks, which will overwrite existing task caches.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --force\n```\n\n----------------------------------------\n\nTITLE: Compiled Package Configuration\nDESCRIPTION: Configuration for a Compiled Package that handles its own compilation using TypeScript compiler.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/internal-packages.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/ui\",\n  \"exports\": {\n    \"./button\": {\n      \"types\": \"./src/button.tsx\",\n      \"default\": \"./dist/button.js\"\n    },\n    \"./card\": {\n      \"types\": \"./src/card.tsx\",\n      \"default\": \"./dist/card.js\"\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsc\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Dependencies for End-to-End Tests in Turborepo\nDESCRIPTION: Configuration for turbo.json that sets up proper task dependencies, ensuring end-to-end tests depend on build outputs from other packages. This creates the correct task graph for caching behavior.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/playwright.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"]\n    },\n    \"e2e\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Codemod\nDESCRIPTION: Command to run Turborepo codemod transformations. It allows specifying the transform, path, and options for dry run or printing output.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx @turbo/codemod [transform] [path] [--dry] [--print]\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependent Tasks with Parallelism in Turborepo JSON\nDESCRIPTION: This snippet shows how to configure dependent tasks that can run in parallel while maintaining correctness, using transit nodes in the task graph.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"transit\": {\n      \"dependsOn\": [\"^transit\"]\n    },\n    \"check-types\": {\n      \"dependsOn\": [\"transit\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Task for Specific Package in Turborepo\nDESCRIPTION: Demonstrates how to run a specific task for a specific package using the package-name#task-name format.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nturbo run web#lint\n```\n\n----------------------------------------\n\nTITLE: Setting Output Log Level in Turborepo\nDESCRIPTION: Demonstrates how to control the verbosity of output logging with options like full, hash-only, new-only, errors-only, or none.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --output-logs=errors-only\n```\n\n----------------------------------------\n\nTITLE: Running Multiple Package Tasks with Shortcuts\nDESCRIPTION: Shows how to run different tasks for different packages using the new shortcut syntax for more precise targeting.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-3.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nturbo run web#build docs#lint\n```\n\n----------------------------------------\n\nTITLE: Creating SvelteKit App in Existing Repo\nDESCRIPTION: Commands to create a new SvelteKit application in an existing repository using different package managers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/sveltekit.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx sv create\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx sv create\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx sv create\n```\n\nLANGUAGE: bash\nCODE:\n```\nbunx sv create\n```\n\n----------------------------------------\n\nTITLE: Configuring Persistent Interactive Tasks in Turborepo 2.0\nDESCRIPTION: Code showing how to mark a task as interactive in turbo.json by adding the 'persistent' property set to true. This enables the task to accept user input via stdin in the new terminal UI.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"dev\": {\n      \"cache\": false,\n      \"persistent\": true // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Restricting Public Package Dependencies in Turborepo JSON\nDESCRIPTION: This configuration in turbo.json allows 'public' packages to only depend on other 'public' packages, demonstrating how to use the 'allow' rule for dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/boundaries.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"boundaries\": {\n    \"tags\": {\n      \"public\": {\n        \"dependencies\": {\n          \"allow\": [\"public\"]\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Dependency Rules with Allow and Deny Lists\nDESCRIPTION: Defines rules for package dependencies using allow and deny lists based on tags, controlling which packages can depend on others.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_27\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"boundaries\": {\n    \"utils\": {\n      \"dependencies\": {\n        // permit only packages with the `ui` tag\n        \"allow\": [\"ui\"],\n        // and ban packages with the `unsafe` tag\n        \"deny\": [\"unsafe\"]\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo Tasks in turbo.json\nDESCRIPTION: This JSON snippet defines the Turborepo tasks, including build and test configurations with their respective dependencies and outputs.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/circleci.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"],\n      \"dependsOn\": [\"^build\"]\n    },\n    \"test\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Task Concurrency in Turborepo\nDESCRIPTION: Illustrates how to set or limit the maximum concurrency for task execution, using either an integer or a percentage value.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"concurrency\": \"1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Biome Root Tasks in Turbo.json\nDESCRIPTION: Configures Biome tasks in turbo.json as root tasks, with caching disabled for the fix command to ensure changes are always applied.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/biome.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"//#format-and-lint\": {},\n    \"//#format-and-lint:fix\": {\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependencies in package.json with NPM\nDESCRIPTION: Example of how to define external and internal dependencies in a package.json file using NPM workspace protocol.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dependencies\": {\n    \"next\": \"latest\", // External dependency\n    \"@repo/ui\": \"*\" // Internal dependency\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo in Loose Mode\nDESCRIPTION: Command to run Turborepo in Loose Mode, which allows all environment variables to be available to tasks without filtering based on turbo.json configuration. This is useful for migrating to Strict Mode incrementally.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/using-environment-variables.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --env-mode=loose\n```\n\n----------------------------------------\n\nTITLE: Simplifying Root Configuration After Moving Specialized Tasks\nDESCRIPTION: Example diff showing how to simplify the root turbo.json after moving specialized tasks to a package-specific configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/package-configurations.mdx#2025-04-22_snippet_6\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"tasks\": {\n+    \"build\": {}\n-    \"build\": {\n-      \"dependsOn\": [\"compile\"]\n-    },\n-    \"compile\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: ESLint Config with Turbo Extension\nDESCRIPTION: ESLint configuration example showing how to extend from eslint-config-turbo for automatic environment variable checking.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-4-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  // Automatically flag env vars missing from turbo.json\n  \"extends\": [\"next/core-web-vitals\", \"turbo\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Optimized Dockerfile for Next.js App in Monorepo\nDESCRIPTION: A multi-stage Dockerfile that uses turbo prune to optimize dependency installation and build time. It includes separate stages for pruning, installing dependencies, building, and running the application.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/docker.mdx#2025-04-22_snippet_3\n\nLANGUAGE: docker\nCODE:\n```\nFROM node:18-alpine AS base\n\nFROM base AS builder\nRUN apk update\nRUN apk add --no-cache libc6-compat\n# Set working directory\nWORKDIR /app\n# Replace <your-major-version> with the major version installed in your repository. For example:\n# RUN yarn global add turbo@^2\nRUN yarn global add turbo@^<your-major-version>\nCOPY . .\n\n# Generate a partial monorepo with a pruned lockfile for a target workspace.\n# Assuming \"web\" is the name entered in the project's package.json: { name: \"web\" }\nRUN turbo prune web --docker\n\n# Add lockfile and package.json's of isolated subworkspace\nFROM base AS installer\nRUN apk update\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\n\n# First install the dependencies (as they change less often)\nCOPY --from=builder /app/out/json/ .\nRUN yarn install --frozen-lockfile\n\n# Build the project\nCOPY --from=builder /app/out/full/ .\nRUN yarn turbo run build\n\nFROM base AS runner\nWORKDIR /app\n\n# Don't run production as root\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nextjs\nUSER nextjs\n\n# Automatically leverage output traces to reduce image size\n# https://nextjs.org/docs/advanced-features/output-file-tracing\nCOPY --from=installer --chown=nextjs:nodejs /app/apps/web/.next/standalone ./\nCOPY --from=installer --chown=nextjs:nodejs /app/apps/web/.next/static ./apps/web/.next/static\nCOPY --from=installer --chown=nextjs:nodejs /app/apps/web/public ./apps/web/public\n\nCMD node apps/web/server.js\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with Bun (Beta)\nDESCRIPTION: This command installs Turborepo using Bun package manager (in Beta). It creates a new Turbo project using the latest version.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Root Task in package.json\nDESCRIPTION: This snippet demonstrates how to configure the root lint task in package.json to run both the lint and lint:root tasks using Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"lint\": \"turbo run lint lint:root\",\n    \"lint:root\": \"eslint .\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using JSONC for Turborepo Configuration with Comments\nDESCRIPTION: This example demonstrates how to use the new turbo.jsonc format to add comments to your Turborepo configuration, making it more maintainable and understandable for team members.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-5.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"test\": {\n      // Our tests need their dependencies to be built first\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Turborepo Remote Cache\nDESCRIPTION: Command to authenticate with your Remote Cache provider. This is required before you can use Remote Caching functionality in Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/caching.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Setting Global Dependencies in Turborepo\nDESCRIPTION: Shows how to specify global dependencies that will be included in all task hashes. Changes to these files will cause all tasks to miss cache.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"globalDependencies\": [\".env\", \"tsconfig.json\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tasks in Parallel in Turborepo\nDESCRIPTION: Demonstrates how to run commands in parallel across packages, ignoring the task dependency graph, which is useful for long-running tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nturbo run lint --parallel\nturbo run dev --parallel\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions CI Workflow for Yarn and Turborepo\nDESCRIPTION: GitHub Actions workflow configuration for Yarn-based Turborepo projects. This workflow sets up Node.js with Yarn, installs dependencies, and runs build and test tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/github-actions.mdx#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nname: CI\n\non:\n  push:\n    branches: [\"main\"]\n  pull_request:\n    types: [opened, synchronize]\n\njobs:\n  build:\n    name: Build and Test\n    timeout-minutes: 15\n    runs-on: ubuntu-latest\n    # To use Remote Caching, uncomment the next lines and follow the steps below.\n    # env:\n    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}\n    #  TURBO_TEAM: ${{ vars.TURBO_TEAM }}\n\n    steps:\n      - name: Check out code\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 2\n\n      - name: Setup Node.js environment\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n          cache: 'yarn'\n\n      - name: Install dependencies\n        run: yarn\n\n      - name: Build\n        run: yarn build\n\n      - name: Test\n        run: yarn test\n```\n\n----------------------------------------\n\nTITLE: Setting Log Order in Turborepo\nDESCRIPTION: Demonstrates how to control the ordering of log output using the --log-order flag, which can be set to stream, grouped, or auto.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --log-order=stream\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Task in Turborepo (Incorrect Example)\nDESCRIPTION: An example of an incorrectly defined build task in turbo.json without any dependencies or outputs specified, which would lead to errors.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {} // Incorrect! // [!code highlight]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Nuxt-powered Turborepo with Bun\nDESCRIPTION: Creates a new Turborepo project using the 'with-vue-nuxt' example template via Bun package manager (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest -e with-vue-nuxt\n```\n\n----------------------------------------\n\nTITLE: Opening GraphiQL Playground with turbo query\nDESCRIPTION: Shows how to launch the GraphiQL playground for interactive query development and execution against the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/query.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo query\n```\n\n----------------------------------------\n\nTITLE: Package.json Script Configuration for Parallel Tasks\nDESCRIPTION: Example package.json configuration defining linting, formatting, and type checking scripts that can be run in parallel by Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/single-package-workspaces.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"lint\": \"eslint .\",\n    \"format\": \"prettier .\",\n    \"check-types\": \"tsc --noEmit\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Scan Command in Bash\nDESCRIPTION: This command initiates the interactive Turborepo scan process that guides users through enabling various optimizations for their Turborepo setup. It walks through enabling Git FS Monitor, Turborepo Daemon, Remote Caching, version checking, and LSP installation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/scan.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo scan\n```\n\n----------------------------------------\n\nTITLE: Filtering Tasks with Turborepo CLI in Bash\nDESCRIPTION: Demonstrates the usage of the new --filter flag in Turborepo 1.2 to run tests on changed packages and their dependencies. This command filters tasks based on package location, git changes, and dependency relationships.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-2-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo run test --filter={./apps/web}[HEAD^1]^...\n```\n\n----------------------------------------\n\nTITLE: Adding a New Next.js Application to an Existing Turborepo\nDESCRIPTION: This snippet demonstrates how to add a new Next.js application to an existing Turborepo using create-next-app with different package managers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nextjs.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-next-app@latest apps/my-app\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-next-app@latest apps/my-app\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-next-app@latest apps/my-app\n```\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-next-app@latest apps/my-app\n```\n\n----------------------------------------\n\nTITLE: Importing ESLint Config in App (v8 Legacy)\nDESCRIPTION: Example of an ESLint configuration file in an application that extends the shared configuration using v8 legacy format. This demonstrates how to reference and use the shared ESLint config in individual packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  root: true,\n  extends: ['@repo/eslint-config/next.js'],\n};\n```\n\n----------------------------------------\n\nTITLE: Running Multiple Tasks in Turborepo\nDESCRIPTION: Shows how to run multiple tasks in parallel with Turborepo, where tasks are automatically executed according to their dependencies as defined in task configurations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build test lint check-types\n```\n\n----------------------------------------\n\nTITLE: Configuring Watch Mode Test Task in turbo.json\nDESCRIPTION: Add a 'test:watch' task to the root turbo.json file, disabling caching and setting it as persistent for watch mode testing.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/jest.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"test\": {},\n    \"test:watch\": {\n      \"cache\": false,\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Root package.json Configuration for pnpm\nDESCRIPTION: Example root package.json configuration for a pnpm-based Turborepo workspace, including common scripts and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/structuring-a-repository.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"private\": true,\n  \"scripts\": {\n    \"build\": \"turbo run build\",\n    \"dev\": \"turbo run dev\",\n    \"lint\": \"turbo run lint\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"latest\"\n  },\n  \"packageManager\": \"pnpm@9.0.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Turborepo Configuration with Pipeline-Level Environment Variables\nDESCRIPTION: Example of correct turbo.json configuration declaring environment variables at the pipeline task level.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/docs/rules/no-undeclared-env-vars.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"env\": [\"MY_API_TOKEN\"],\n      \"outputs\": [\"dist/**\", \".next/**\", \"!.next/cache/**\"]\n    },\n    \"lint\": {},\n    \"dev\": {\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Passing Through Environment Variables in Strict Mode\nDESCRIPTION: Configuration to specify which environment variables should be made available to a task's runtime when using Strict Environment Mode, without affecting the cache key.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_16\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      // Values will be available within `build` scripts\n      \"passThroughEnv\": [\"AWS_SECRET_KEY\", \"GITHUB_TOKEN\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running GraphQL Query from File with turbo query\nDESCRIPTION: Demonstrates how to execute a GraphQL query stored in a file, allowing for more complex or reusable queries.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/query.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nturbo query query.gql\n```\n\n----------------------------------------\n\nTITLE: Setting Global Dependencies in turbo.json\nDESCRIPTION: This configuration adds the turbo-cache-key.json file to the globalDependencies array in turbo.json. This ensures that all tasks in Turborepo consider this file when calculating their hashes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/handling-platforms.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"globalDependencies\": [\"turbo-cache-key.json\"],\n  \"tasks\": {\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with npm and GitHub URL\nDESCRIPTION: Command to initialize a new Turborepo with a custom example from GitHub using npm package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest --example [github-url]\n```\n\n----------------------------------------\n\nTITLE: Setting Public Access in Changesets Config\nDESCRIPTION: Configures Changesets for publishing public packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/publishing-libraries.mdx#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"access\": \"public\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tasks with Package Task Shortcuts\nDESCRIPTION: Demonstrates using the new package task shortcut syntax to run specific tasks in targeted packages without using --filter.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-3.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nturbo run web#build\n```\n\n----------------------------------------\n\nTITLE: Creating a Package.json for Math Package in pnpm\nDESCRIPTION: Defines the package.json file for a math utilities package in a pnpm workspace. It includes package name, type, scripts for development and building, exports configuration for multiple entry points, and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/math\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"tsc --watch\",\n    \"build\": \"tsc\"\n  },\n  \"exports\": {\n    \"./add\": {\n      \"types\": \"./src/add.ts\",\n      \"default\": \"./dist/add.js\"\n    },\n    \"./subtract\": {\n      \"types\": \"./src/subtract.ts\",\n      \"default\": \"./dist/subtract.js\"\n    }\n  },\n  \"devDependencies\": {\n    \"@repo/typescript-config\": \"workspace:*\",\n    \"typescript\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Commands\nDESCRIPTION: Example command showing how to run multiple checks in parallel using Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/single-package-workspaces.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo check-types lint format\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions CI Workflow for PNPM and Turborepo\nDESCRIPTION: GitHub Actions workflow configuration for PNPM-based Turborepo projects. This workflow sets up the environment, installs dependencies, and runs build and test tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/github-actions.mdx#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nname: CI\n\non:\n  push:\n    branches: [\"main\"]\n  pull_request:\n    types: [opened, synchronize]\n\njobs:\n  build:\n    name: Build and Test\n    timeout-minutes: 15\n    runs-on: ubuntu-latest\n    # To use Remote Caching, uncomment the next lines and follow the steps below.\n    # env:\n    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}\n    #  TURBO_TEAM: ${{ vars.TURBO_TEAM }}\n\n    steps:\n      - name: Check out code\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 2\n\n      - uses: pnpm/action-setup@v3\n        with:\n          version: 8\n\n      - name: Setup Node.js environment\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n          cache: 'pnpm'\n\n      - name: Install dependencies\n        run: pnpm install\n\n      - name: Build\n        run: pnpm build\n\n      - name: Test\n        run: pnpm test\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo Configuration File\nDESCRIPTION: Basic Turborepo configuration file (turbo.json) that defines build, lint, check-types, and dev tasks with their dependencies, inputs, and outputs. This configuration demonstrates Turborepo's simpler approach compared to Nx.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"/schema.json\",\n  \"ui\": \"tui\",\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"inputs\": [\"$TURBO_DEFAULT$\", \".env*\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n    },\n    \"lint\": {\n      \"dependsOn\": [\"^lint\"]\n    },\n    \"check-types\": {\n      \"dependsOn\": [\"^check-types\"]\n    },\n    \"dev\": {\n      \"cache\": false,\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependencies in package.json with Yarn\nDESCRIPTION: Example of how to define external and internal dependencies in a package.json file using Yarn workspace protocol.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dependencies\": {\n    \"next\": \"latest\", // External dependency\n    \"@repo/ui\": \"*\" // Internal dependency\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Default Outputs (Turborepo 1.7.0)\nDESCRIPTION: Codemod to migrate turbo.json outputs to include the previously inferred dist/** and build/**.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_11\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"globalDependencies\": [\".env\"],\n  \"globalEnv\": [\"CI_ENV\"],\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"env\": [\"API_BASE\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n    },\n-   \"lint\": {\n-     \"outputs\": []\n-    },\n+   \"lint\": {},\n    \"dev\": {\n      \"cache\": false,\n      \"persistent\": true,\n+     \"outputs\": [\"dist/**\", \"build/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Repository Installation of Turborepo with NPM\nDESCRIPTION: This command installs Turborepo as a dev dependency in the root of your repository using NPM. It helps pin the version for consistent usage across all developers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnpm install turbo --save-dev\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo with Next.js Applications using Package Managers\nDESCRIPTION: This snippet shows how to create a new Turborepo with Next.js applications using different package managers (pnpm, yarn, npm, and bun).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nextjs.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Overriding Git Comparison Base and Head for --affected\nDESCRIPTION: Using system environment variables to override the default Git comparison base and head when using the `--affected` flag to customize which changes are considered.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Override Git comparison base\nTURBO_SCM_BASE=development turbo run build --affected\n\n# Override Git comparison head\nTURBO_SCM_HEAD=your-branch turbo run build --affected\n```\n\n----------------------------------------\n\nTITLE: Configuring Task-Specific Inputs in turbo.json\nDESCRIPTION: This configuration adds the turbo-cache-key.json file to the inputs array of a specific task called 'build-for-platforms'. This ensures that Turborepo considers the file when calculating the hash for this task.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/handling-platforms.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build-for-platforms\": {\n      \"dependsOn\": [\"^build\"],\n      \"inputs\": [\"$TURBO_DEFAULT$\", \"turbo-cache-key.json\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Output Format for turbo ls Command\nDESCRIPTION: Shows how to specify the output format for the command results using the experimental --output flag, with available options being 'json' or 'pretty'.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/ls.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nturbo ls --output=json\n```\n\n----------------------------------------\n\nTITLE: Configuring tsup Build Script in Package.json\nDESCRIPTION: Sets up the build script using tsup to bundle the package into CommonJS and ESM formats with TypeScript declarations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/publishing-libraries.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build\": \"tsup src/index.ts --format cjs,esm --dts\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Shared Playwright Utilities with peerDependencies (yarn)\nDESCRIPTION: Package.json configuration for a shared Playwright utilities package using yarn. Uses peerDependencies to access Playwright from consumers without installing it directly in the utility package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/playwright.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/playwright-utilities\",\n  \"peerDependencies\": {\n    \"playwright\": \"*\"\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Root package.json Configuration for Yarn\nDESCRIPTION: Example root package.json configuration for a Yarn-based Turborepo workspace, including common scripts and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/structuring-a-repository.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"private\": true,\n  \"scripts\": {\n    \"build\": \"turbo run build\",\n    \"dev\": \"turbo run dev\",\n    \"lint\": \"turbo run lint\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"latest\"\n  },\n  \"packageManager\": \"yarn@1.22.19\"\n}\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow with actions/cache for Turborepo\nDESCRIPTION: This GitHub Actions workflow configuration demonstrates how to use actions/cache to cache Turborepo build artifacts. It specifies cache paths, keys, and restore patterns for optimal caching.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/github-actions.mdx#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out code\n        uses: actions/checkout@v4\n\n      - name: Cache turbo build setup \n        uses: actions/cache@v4 \n        with: \n          path: .turbo \n          key: ${{ runner.os }}-turbo-${{ github.sha }} \n          restore-keys: | \n            ${{ runner.os }}-turbo-\n\n      - name: Setup Node.js environment\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm install\n\n      - name: Build\n        run: npm run build\n```\n\n----------------------------------------\n\nTITLE: Configuring Upload Timeout\nDESCRIPTION: Specifies the timeout duration specifically for remote cache upload operations in seconds. Accepts whole numbers only, with 0 indicating no timeout for uploads.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_32\n\nLANGUAGE: markdown\nCODE:\n```\nuploadTimeout\n\nDefault: `60`\n```\n\n----------------------------------------\n\nTITLE: Turborepo Configuration for Parallel Tasks\nDESCRIPTION: Turborepo configuration that enables parallel execution of linting, formatting, and type checking tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/single-package-workspaces.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"lint\": {},\n    \"format\": {},\n    \"check-types\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Root turbo.json for Co-located Stories\nDESCRIPTION: Configuration to exclude story files from regular build tasks and set up a dedicated Storybook build task in the root turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_27\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"inputs\": [\"$TURBO_DEFAULT$\", \"!**/*.stories.{tsx,jsx,mdx}\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n    },\n    \"build:storybook\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Cache Signature in Turborepo JSON\nDESCRIPTION: Shows how to enable signature verification for remote cache artifacts in Turborepo 1.2. This configuration improves security by ensuring the integrity and authenticity of cached outputs.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-2-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"remoteCache\": {\n    // Indicates if signature verification is enabled.\n    \"signature\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Package.json Script Configuration for Development Workflow\nDESCRIPTION: Example package.json file showing script definitions for Next.js development, database setup, and type checking that can be orchestrated by Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/single-package-workspaces.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@acme/my-app\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\",\n    \"check-types\": \"tsc --noEmit\",\n    \"db:up\": \"docker-compose up -d\",\n    \"db:push\": \"your-orm-tool schema-push\",\n    \"db:seed\": \"node ./db-seed.js\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Vercel Remote Caching with Turborepo\nDESCRIPTION: Commands to authenticate and link Turborepo with Vercel for remote caching functionality, which allows sharing build caches across machines and team members.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Root Configuration with Specialized Task Dependencies\nDESCRIPTION: Example of a root turbo.json that defines a build task dependent on a compile task, requiring an empty compile task definition.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/package-configurations.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"compile\"]\n    },\n    \"compile\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Remote Cache\nDESCRIPTION: Command to link your local Turborepo to your Remote Cache after authentication.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nturbo link\n```\n\n----------------------------------------\n\nTITLE: Using Environment Variable Negation in Turborepo\nDESCRIPTION: Configuration example showing how to exclude specific environment variables from being included in the task hash using the negation pattern.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"env\": [\"!MY_API_URL\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with Package Managers\nDESCRIPTION: Commands for installing Turborepo globally and in the repository using npm, yarn, or pnpm.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/add-to-existing-repository.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Global install\nnpm install turbo --global\n# Install in repository\nnpm install turbo --save-dev\n```\n\n----------------------------------------\n\nTITLE: Creating a Turbo Cache Key Script in Node.js\nDESCRIPTION: This Node.js script identifies the platform and architecture of the system and writes those details to a file called 'turbo-cache-key.json'. This file will be used to ensure proper cache invalidation when the environment changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/handling-platforms.mdx#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n#!/usr/bin/env node\n\nconst { writeFileSync } = require('fs');\nconst { join } = require('path');\n\nconst { platform, arch } = process;\nconst file = 'turbo-cache-key.json';\nconst str = JSON.stringify({ platform, arch });\nconsole.log(`Generating cache key: ${str}`);\nwriteFileSync(file, str);\n```\n\n----------------------------------------\n\nTITLE: Configuring Root Scripts in turbo.json\nDESCRIPTION: Demonstrates how to configure root scripts in turbo.json, including opting the root into the test script execution and defining a custom check-examples script with specific inputs.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-3-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"]\n    },\n    \"test\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": []\n    },\n    \"//#test\": {\n      \"dependsOn\": [],\n      \"outputs\": []\n    },\n    \"//#check-examples\": {\n      \"dependsOn\": [],\n      \"outputs\": [],\n      \"inputs\": [\n        \"examples/**/*.ts\",\n        \"examples/**/*.tsx\",\n        \"examples/**/*.json\",\n        \"examples/**/*.js\",\n        \"examples/**/*.yaml\",\n        \"cli/**/*.ts\",\n        \"./scripts/run-example.sh\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Workspace Dependencies for Playwright Tests in package.json\nDESCRIPTION: Configuration for a Playwright test package that establishes dependencies on the application being tested. This ensures changes to the application invalidate the Playwright test cache.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/playwright.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/playwright-web\",\n  \"dependencies\": {\n    \"web\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Travis CI with PNPM for Turborepo\nDESCRIPTION: Travis CI configuration for a Turborepo project using PNPM as the package manager, including cache settings and build/test scripts.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/travis-ci.mdx#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nlanguage: node_js\nnode_js:\n  - lts/*\ncache:\n  npm: false\n  directories:\n    - \"~/.pnpm-store\"\nbefore_install:\n  - curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@6.32.2\n  - pnpm config set store-dir ~/.pnpm-store\ninstall:\n  - pnpm install\nscript:\n  - pnpm build\nscript:\n  - pnpm test\n```\n\n----------------------------------------\n\nTITLE: Filtering packages with turbo ls in Turborepo\nDESCRIPTION: The turbo ls command with filters allows you to narrow down the list of packages. This example shows filtering packages related to UI components.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/understanding-your-repository.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> turbo ls --filter ...ui\n3 packages (pnpm9)\n\n  @repo/ui packages/ui\n  docs apps/docs\n  web apps/web\n```\n\n----------------------------------------\n\nTITLE: Running Watch Mode in Turborepo 2.0\nDESCRIPTION: Example of using the new turbo watch command to run tasks (dev, lint, test) in watch mode. When files change, Turborepo will automatically re-run tasks based on the dependency graph.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo watch dev lint test\n```\n\n----------------------------------------\n\nTITLE: Configuring Schema Reference in turbo.json\nDESCRIPTION: JSON configuration that references the schema.json file from node_modules for editor autocompletion and validation of turbo.json configuration files.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-4.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"./node_modules/turbo/schema.json\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New Workspace\nDESCRIPTION: Command to create a new workspace in your Turborepo repository with various configuration options.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/generate.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo gen workspace [options]\n```\n\n----------------------------------------\n\nTITLE: Advanced Flat Config Integration with Rule Customization\nDESCRIPTION: Example of customizing the turbo ESLint rules in a flat config setup. This configuration demonstrates how to adjust the environment variable checking rules with a custom allowList pattern.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-config-turbo.mdx#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport turboConfig from 'eslint-config-turbo/flat';\n\nexport default [\n  ...turboConfig,\n  // Other configuration\n  {\n    rules: {\n      'turbo/no-undeclared-env-vars': [\n        'error',\n        {\n          allowList: ['^ENV_[A-Z]+$'],\n        },\n      ],\n    },\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo test tasks\nDESCRIPTION: Demonstrates how to run test tasks using global Turborepo installation or package.json scripts.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nturbo run test\n\nturbo run test:watch\n```\n\n----------------------------------------\n\nTITLE: Querying Package Dependencies with GraphQL\nDESCRIPTION: GraphQL query to fetch a specific package ('cli') and its direct dependencies. This demonstrates how to retrieve relationship data between packages in the repository.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-2-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: graphql\nCODE:\n```\nquery {\n  package(name: \"cli\") {\n    directDependencies {\n      name\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo Tasks for Watch Mode\nDESCRIPTION: Shows the configuration of turbo.json for persistent dev tasks and lint tasks with dependencies, used in the context of explaining Turborepo's watch mode.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/developing-applications.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"dev\": {\n      \"persistent\": true,\n      \"cache\": false\n    },\n    \"lint\": {\n      \"dependsOn\": [\"^lint\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating turbo.json for Build Artifacts\nDESCRIPTION: Updates the turbo.json configuration to include dist/** in the build task outputs, ensuring that build artifacts from the math package are properly cached.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\", \"dist/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Vercel for Remote Caching\nDESCRIPTION: Command to authenticate the Turborepo CLI with your Vercel account. This enables remote caching functionality to share build caches across machines and team members.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-rollup/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Running turbo-ignore Command in Bash\nDESCRIPTION: This command uses turbo to determine if a package or its dependencies have changes. It can be used to quickly skip tasks in CI. The command accepts a workspace argument and optional flags.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-ignore.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo-ignore [workspace] [flags...]\n```\n\n----------------------------------------\n\nTITLE: Correct Task Configuration in Workspace-Level turbo.json\nDESCRIPTION: This snippet shows the correct way to configure tasks in a workspace-level turbo.json file by removing the package prefix. In workspace-specific configuration files, only the task name should be specified.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/unnecessary-package-task-syntax.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"lint\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Remote Caching with Docker Build Args\nDESCRIPTION: Example command for building a Docker image with Turborepo remote caching enabled by passing team name and token as build arguments.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-docker/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndocker build -f apps/web/Dockerfile . --build-arg TURBO_TEAM=\"your-team-name\" --build-arg TURBO_TOKEN=\"your-token\" --no-cache\n```\n\n----------------------------------------\n\nTITLE: Updating turbo.json for Storybook Build Outputs\nDESCRIPTION: Diff showing how to update the turbo.json configuration to include Storybook's static output directory for proper caching.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_19\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\n        \".next/**\",\n        \"!.next/cache/**\"\n+       \"storybook-static/**\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with pnpm and example flag\nDESCRIPTION: Command to initialize a new Turborepo with a specific example using pnpm package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest --example [example-name]\n```\n\n----------------------------------------\n\nTITLE: Using Package Names in Boundary Rules in Turborepo JSON\nDESCRIPTION: This configuration demonstrates how to use specific package names instead of tags in the allow and deny lists for boundary rules in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/boundaries.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"boundaries\": {\n    \"tags\": {\n      \"private\": {\n        \"dependents\": {\n          \"deny\": [\"@repo/my-pkg\"]\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Extending Root Configuration with Package-specific turbo.json\nDESCRIPTION: Example of creating a package-specific turbo.json that extends the root configuration, allowing for custom task configuration and package-specific tasks within a monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/package-configurations.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"extends\": [\"//\"],\n  \"tasks\": {\n    \"build\": {\n      // Custom configuration for the build task in this package\n    },\n    \"special-task\": {} // New task specific to this package\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Artifact Integrity Verification in Turbo Config\nDESCRIPTION: JSON configuration to enable signature verification for Remote Cache artifacts in turbo.json, requiring the TURBO_REMOTE_CACHE_SIGNATURE_KEY environment variable.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"remoteCache\": {\n    \"signature\": true // [!code highlight]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Dev Task in Turborepo\nDESCRIPTION: Executes the dev task to start development scripts in parallel using Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/developing-applications.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo dev\n```\n\n----------------------------------------\n\nTITLE: Using Turbo Prune Command in Bash\nDESCRIPTION: Basic syntax for the `turbo prune` command which generates a partial monorepo for a target package. The command extracts the target package along with all its internal dependencies and creates a pruned lockfile.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/prune.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo prune [package]\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Remote Cache using Yarn\nDESCRIPTION: Command to authenticate Turborepo using Yarn package manager for developers without global Turbo installation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx turbo login\n```\n\n----------------------------------------\n\nTITLE: Running Turbo Watch Command Without Tasks\nDESCRIPTION: When executed without specifying tasks, `turbo watch` will display all available tasks for the packages in the repository.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/watch.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo watch\n```\n\n----------------------------------------\n\nTITLE: Configuring turbo.json for Task Definition\nDESCRIPTION: Configuration of turbo.json defining build and test tasks with their dependencies and output specifications for optimal pipeline execution.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/travis-ci.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\".svelte-kit/**\"],\n      \"dependsOn\": [\"^build\"]\n    },\n    \"test\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Experimental Caching with Turbo Watch\nDESCRIPTION: Running tasks with Watch Mode while enabling experimental caching functionality using the `--experimental-write-cache` flag.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/watch.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo watch your-tasks --experimental-write-cache\n```\n\n----------------------------------------\n\nTITLE: Running Turbo-Ignore for Docs Package Test\nDESCRIPTION: This command checks for changes in the 'docs' package and its dependencies for the 'test' task, using Automatic Package Scoping and the --task flag.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/constructing-ci.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd apps/docs\nnpx turbo-ignore --task=test\n```\n\n----------------------------------------\n\nTITLE: Listing packages with turbo ls in Turborepo\nDESCRIPTION: The turbo ls command displays all packages in your repository along with their locations. It shows a simple list of package names and paths.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/understanding-your-repository.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n> turbo ls\n\n  @repo/eslint-config packages/eslint-config\n  @repo/typescript-config packages/typescript-config\n  @repo/ui packages/ui\n  docs apps/docs\n  web apps/web\n```\n\n----------------------------------------\n\nTITLE: Setting Up Remote Cache Configuration\nDESCRIPTION: Initializes an empty remote cache configuration object for controlling how Turborepo interacts with remote caching services.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_30\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"remoteCache\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Performance Profiles with Turborepo CLI\nDESCRIPTION: Generates a trace of the run in Chrome Tracing format to analyze performance. A verbosity flag is required with the --profile option to produce a trace. The resulting profile can be viewed in tools like Perfetto.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --profile=profile.json -vvv\n```\n\n----------------------------------------\n\nTITLE: Creating a Button Component Story in React\nDESCRIPTION: Example of a Storybook story file for a Button component from @repo/ui/button, including metadata, component reference, and story configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_17\n\nLANGUAGE: tsx\nCODE:\n```\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { Button } from '@repo/ui/button';\n\nconst meta = {\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n} satisfies Meta<typeof Button>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Primary: Story = {\n  args: {\n    appName: 'Button',\n    children: 'I am a primary button.',\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Using Automatic Package Scoping in Turborepo\nDESCRIPTION: Demonstrates how to use global turbo with automatic package scoping, where commands are scoped to the package graph for the current directory without needing explicit filters.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncd apps/docs\nturbo build\n```\n\n----------------------------------------\n\nTITLE: Installing eslint-config-turbo with yarn\nDESCRIPTION: Command to install eslint-config-turbo package as a dev dependency using yarn workspace command.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-config-turbo.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn workspace @acme/eslint-config add eslint-config-turbo --dev\n```\n\n----------------------------------------\n\nTITLE: Listing All Packages in a Turborepo\nDESCRIPTION: Command to list all packages in the repository, which outputs package manager, package count, and all package names and directories.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/ls.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# List all packages in the repository\nturbo ls\n```\n\n----------------------------------------\n\nTITLE: Adding a Nuxt Application to a Monorepo with NPM\nDESCRIPTION: Initializes a new Nuxt application in an existing Turborepo monorepo using Nuxi CLI via NPM.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpx nuxi@latest init apps/my-app\n```\n\n----------------------------------------\n\nTITLE: Custom Rules Flat Config Setup\nDESCRIPTION: Configuration with custom rules for eslint-plugin-turbo using flat config format.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-plugin-turbo.mdx#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport turbo from 'eslint-plugin-turbo';\n\nexport default [\n  {\n    plugins: {\n      turbo,\n    },\n    rules: {\n      'turbo/no-undeclared-env-vars': 'error',\n    },\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Vitest in package.json\nDESCRIPTION: Sets up a test script using Vitest in a package's package.json file, including the necessary devDependency.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"test\": \"vitest run\"\n  },\n  \"devDependencies\": {\n    \"vitest\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Specific Packages in a Turborepo\nDESCRIPTION: Command to list only specified packages, which outputs package name, directory, internal dependencies, and all tasks for each package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/ls.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# List only two packages\nturbo ls web @repo/ui [package(s)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Dependencies in Turbo.json\nDESCRIPTION: Sets up task dependencies to ensure packages are built before applications.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/publishing-libraries.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Package Listing Commands in Turborepo\nDESCRIPTION: Demonstrates different ways to list and inspect packages using the turbo ls command with various flags.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-1-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# List all packages in the repository\nturbo ls\n\n# List dependencies and tasks for the `web` package\nturbo ls web\n\n## List affected packages\nturbo ls --affected\n```\n\n----------------------------------------\n\nTITLE: Enabling Remote Caching in Turborepo\nDESCRIPTION: Commands to enable remote caching in Turborepo by logging in and linking to the Vercel Remote Cache.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nturbo login\nturbo link\n```\n\n----------------------------------------\n\nTITLE: Creating New Turborepo Project\nDESCRIPTION: Command to create a new Turborepo project using the official starter template.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/basic/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Defining TURBO_CONCURRENCY Environment Variable for Turborepo\nDESCRIPTION: Environment variable that controls concurrency settings in Turborepo's run or watch mode. This variable allows users to specify how many tasks can run simultaneously.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/system-environment-variables.mdx#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nTURBO_CONCURRENCY\n```\n\n----------------------------------------\n\nTITLE: Matching Paths with Pattern Globs in Rust\nDESCRIPTION: Demonstrates matching a file path against a glob pattern that uses wildcards and alternatives. This example matches source files with specific extensions in any subdirectory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::Glob;\n\nlet glob = Glob::new(\"**/*.{go,rs}\").unwrap();\nassert!(glob.is_match(\"src/lib.rs\"));\n```\n\n----------------------------------------\n\nTITLE: Defining Topological Dependencies in turbo.json\nDESCRIPTION: Shows how to configure task dependencies in turbo.json using the dependsOn property\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/missing-root-task-in-turbo-json.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Usage in TypeScript Application\nDESCRIPTION: Example of using environment variables in a TypeScript application to fetch data from an API. The environment variable MY_API_URL needs to be properly accounted for in task hashing to prevent incorrect cache hits.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/using-environment-variables.mdx#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst data = fetch(`${process.env.MY_API_URL}/resource/1`);\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Strict Mode\nDESCRIPTION: JSON configuration for environment variables in turbo.json showing global and task-specific variable definitions for strict mode.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-9-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"globalPassThroughEnv\": [\"GLOBAL_VAR_1\"],\n  \"globalEnv\": [\"GLOBAL_VAR_2\"],\n  \"pipeline\": {\n    \"build\": {\n      \"passThroughEnv\": [\"VAR_1\"],\n      \"env\": [\"VAR_2\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Just-in-Time Package Imports in TypeScript React Component\nDESCRIPTION: Example of using Just-in-Time package imports in a React component with TypeScript, importing from source files with .ts extension.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nimport { MY_STRING } from \"#utils.ts\" // Uses .ts extension\n\nexport const Button = () => {\n  return (\n    <button>{MY_STRING}</button>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Artifact Caching for Rust in turbo.json\nDESCRIPTION: Configures Turborepo to cache build artifacts from a Rust project by specifying the output directory in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/multi-language.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\"target/release/**\"] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Task Declaration in Single-Package Workspace (JSON)\nDESCRIPTION: This snippet demonstrates the correct way to declare a task in the turbo.json file for a single-package workspace. The package name is removed from the task declaration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/package-task-in-single-package-workspace.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"cache\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Package.json Example for GitHub Actions Cache\nDESCRIPTION: A simplified package.json configuration that demonstrates how to set up a Turborepo project with build scripts for use with GitHub Actions caching.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/github-actions.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-turborepo\",\n  \"scripts\": {\n    \"build\": \"turbo run build\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"1.2.5\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Renaming Output Mode (Turborepo 2.0.0)\nDESCRIPTION: Codemod to rename the outputMode key to outputLogs in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_6\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n-     \"outputMode\": \"errors-only\"\n+     \"outputLogs\": \"errors-only\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring task dependencies in Turborepo\nDESCRIPTION: Example of configuring task dependencies in turbo.json, showing build as a dependency for lint and test tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"outputs\": [\"dist/**\"]\n    },\n    \"lint\": {\n      \"dependsOn\": [\"build\"]\n    },\n    \"test\": {\n      \"dependsOn\": [\"build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding ESLint Config as Dependency with NPM\nDESCRIPTION: Example package.json showing how to add the shared ESLint configuration as a workspace dependency using NPM. This is required before the shared config can be used by a package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"devDependencies\": {\n    \"@repo/eslint-config\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo as a Dev Dependency\nDESCRIPTION: Commands for installing Turborepo as a development dependency using different package managers, showing the various flags needed for each package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npnpm install turbo --save-dev --workspace-root\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add turbo --save-dev --ignore-workspace-root-check\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install turbo --save-dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun install turbo --dev\n```\n\n----------------------------------------\n\nTITLE: Advanced Filtering Examples in Turborepo\nDESCRIPTION: Demonstrates various advanced filtering patterns to refine task execution targets, including directory-based filters, Git-based filters, and package-specific filters.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n# Any packages in `apps` subdirectories that have changed since the last commit\nturbo run build --filter={.apps/*}[HEAD^1]\n\n# Any packages in `apps` subdirectories except ./apps/admin\nturbo run build --filter=./apps/* --filter=!./apps/admin\n\n# Run the build task for the docs and web packages\nturbo run build --filter=docs --filter=web\n\n# Build everything that depends on changes in branch 'my-feature'\nturbo run build --filter=...[origin/my-feature]\n\n# Build everything that depends on changes between two Git SHAs\nturbo run build --filter=[a1b2c3d...e4f5g6h]\n\n# Build '@acme/ui' if:\n# - It or any of its dependencies have changed since the previous commit\nturbo run build --filter=@acme/ui...[HEAD^1]\n\n# Test each package that is:\n# - In the '@acme' scope\n# - Or, in the 'packages' directory\n# - Or, changed since the previous commit\nturbo run test --filter=@acme/*{./packages/*}[HEAD^1]\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo 1.10 using codemod\nDESCRIPTION: Command to update to Turborepo 1.10 using the migrate codemod utility.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-10-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx @turbo/codemod migrate\n```\n\n----------------------------------------\n\nTITLE: Manual Login to Self-hosted Remote Cache\nDESCRIPTION: Command to manually authenticate with a self-hosted Remote Cache by providing API URL, team, and token information.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nturbo login --manual\n```\n\n----------------------------------------\n\nTITLE: Getting the Turbo Binary Path with `turbo bin` Command\nDESCRIPTION: The `turbo bin` command returns the file path to the turbo binary. This command helps users locate where turbo is installed, showing either a global path or a local path (typically in node_modules) depending on installation type.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/bin.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo bin\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo tasks for testing\nDESCRIPTION: Defines Turborepo tasks for running tests, including dependencies and transit tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"test\": {\n      \"dependsOn\": [\"transit\"]\n    },\n    \"transit\": {\n      \"dependsOn\": [\"^transit\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: React Button Component Implementation\nDESCRIPTION: Example implementation of a Button component in the UI library, showing TypeScript props interface and React component structure.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/design-system/README.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as React from 'react';\n\nexport interface ButtonProps {\n  children: React.ReactNode;\n}\n\nexport function Button(props: ButtonProps) {\n  return <button>{props.children}</button>;\n}\n\nButton.displayName = 'Button';\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo for test and watch tasks\nDESCRIPTION: Defines Turborepo tasks for running tests and watch mode, with appropriate caching and persistence settings.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"test\": {\n      \"dependsOn\": [\"^test\"]\n    },\n    \"test:watch\": {\n      \"cache\": false,\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding an Empty Package with Turborepo CLI\nDESCRIPTION: Command to add a new, empty app or package to your monorepo using Turborepo's built-in generator.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/generating-code.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo gen workspace\n```\n\n----------------------------------------\n\nTITLE: Configuring Storybook Scripts in package.json\nDESCRIPTION: Script configuration for Storybook in the package.json file, setting up development and build commands.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"dev\": \"storybook dev -p 6006\",\n    \"build\": \"storybook build\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Compiled Package Imports in TypeScript React Component\nDESCRIPTION: Example of using compiled package imports in a React component with TypeScript, importing from dist files with .js extension.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nimport { MY_STRING } from '#utils.js'; // Uses .js extension\n\nexport const Button = () => {\n  return <button>{MY_STRING}</button>;\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Application Package.json for Turborepo\nDESCRIPTION: Application-specific package.json file for a Next.js app in Turborepo, defining standard scripts for Next.js development and building.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"starter\",\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Task with Test Dependencies\nDESCRIPTION: Configuration example showing how to set up a build task that depends on parent test tasks using the ^test syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/package-and-task-graph.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"^test\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Remote Caching Environment Variables for CI\nDESCRIPTION: A table showing the required environment variables for enabling Turborepo Remote Caching in CI environments. The variables include TURBO_TOKEN for authentication and TURBO_TEAM for the account name associated with your repository.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/index.mdx#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Variable | Description |\n| ----------- | ----------- |\n| `TURBO_TOKEN` | The Bearer token to access the Remote Cache |\n| `TURBO_TEAM` | The account name associated with your repository. When using{' '} <a href=\"https://vercel.com/docs/monorepos/remote-caching#vercel-remote-cache\" rel=\"noreferrer noopener\" target=\"_blank\" >Vercel Remote Cache</a>, this is [your team's slug](https://vercel.com/d?to=%2F%5Bteam%5D%2F%7E%2Fsettings&title=Get+team+slug). |\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variable Mode\nDESCRIPTION: Setting the environment variable mode using the `--env-mode` flag to control which environment variables are available to tasks during runtime.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --env-mode=loose\n```\n\n----------------------------------------\n\nTITLE: Disabling Package Manager Check in Turborepo\nDESCRIPTION: Shows how to disable the package manager check, which can be useful for incremental migration or situations where the packageManager field can't be used.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"dangerouslyDisablePackageManagerCheck\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Unlinking Repository from Turborepo Remote Cache\nDESCRIPTION: Command to disconnect the current repository from Turborepo's Remote Cache functionality. This removes the remote caching configuration and returns the repository to local-only caching.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/unlink.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo unlink\n```\n\n----------------------------------------\n\nTITLE: Docker Build Command with Remote Cache Credentials\nDESCRIPTION: A command to build a Docker image while providing Turborepo Remote Cache credentials as build arguments. The --no-cache flag is used to verify if Turborepo's remote caching is working correctly.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/docker.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -f apps/web/Dockerfile . --build-arg TURBO_TEAM=\"your-team-name\" --build-arg TURBO_TOKEN=\"your-token\" --no-cache\n```\n\n----------------------------------------\n\nTITLE: Using turbo prune Command for Bun Repositories\nDESCRIPTION: This command demonstrates how to use the turbo prune feature, now available for Bun repositories, to create a partial monorepo containing only the specified package and its dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-5.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nturbo prune web\n```\n\n----------------------------------------\n\nTITLE: Specifying Global Dependencies in Turborepo\nDESCRIPTION: Shows how to specify global filesystem dependencies to be hashed, which is useful for tracking .env files and root-level configuration files.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --global-deps=\".env\"\nturbo run build --global-deps=\".env.*\" --global-deps=\".eslintrc\" --global-deps=\"jest.config.ts\"\n```\n\n----------------------------------------\n\nTITLE: Checking Turborepo Location with Verbose Output\nDESCRIPTION: Command showing how to check which version of Turborepo is being used with verbose output flags. This helps identify whether the local or global installation is running.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-7-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n```bash title=\"Terminal\"\nturbo --version --verbosity=2\n2023-01-11T10:49:04.042-0500 [DEBUG] turborepo_lib::shim: No local turbo binary found at: /Users/knickman/Developer/vercel/my-awesome-monorepo/node_modules/.bin/turbo\n2023-01-11T10:49:04.042-0500 [DEBUG] turborepo_lib::shim: Running command as global turbo\n1.7.0\n```\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with NPM\nDESCRIPTION: This command installs Turborepo using NPM package manager. It creates a new Turbo project using the latest version.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Advanced Legacy Configuration with Custom Rules\nDESCRIPTION: Example of customizing turbo-specific ESLint rules with the legacy .eslintrc format, including the turbo plugin and configuring the no-undeclared-env-vars rule.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-config-turbo/README.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"plugins\": [\"turbo\"],\n  \"rules\": {\n    \"turbo/no-undeclared-env-vars\": [\n      \"error\",\n      {\n        \"allowList\": [\"^ENV_[A-Z]+$\"]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with pnpm\nDESCRIPTION: Installs the turbo package globally using pnpm package manager to enable running turbo commands from anywhere in the repository.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/index.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install turbo --global\n```\n\n----------------------------------------\n\nTITLE: Moving Specialized Tasks to Package Configuration\nDESCRIPTION: Example of moving a specialized compile task to a package-specific turbo.json, allowing the package to take ownership of its build dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/package-configurations.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"extends\": [\"//\"],\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"compile\"]\n    },\n    \"compile\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Boundary Tags to Package Configuration\nDESCRIPTION: Example diff showing how to add tags to a package configuration for use with Boundaries, a feature that allows defining rules for package dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/package-configurations.mdx#2025-04-22_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n{\n+ \"tags\": [\"my-tag\"],\n  \"extends\": [\"//\"],\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\"compile\"]\n    },\n    \"compile\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Rust CLI Dependency to Web Application with Yarn/NPM\nDESCRIPTION: Shows how to create a dependency relationship between a web application and a Rust CLI project using Yarn or NPM workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/multi-language.mdx#2025-04-22_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"devDependencies\": {\n+   \"@repo/rust-cli\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up CircleCI Configuration for Yarn\nDESCRIPTION: This YAML snippet configures CircleCI for a Turborepo project using Yarn as the package manager. It includes steps for installing dependencies, building, and testing the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/circleci.mdx#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: 2.1\norbs:\n  node: circleci/node@5.0.2\nworkflows:\n  test:\n    jobs:\n      - test\njobs:\n  test:\n    docker:\n      - image: cimg/node:lts\n    steps:\n      - checkout\n      - node/install-packages:\n        pkg-manager: yarn\n      - run:\n        command: yarn build\n        environment:\n          TURBO_UI: \"false\"\n      - run:\n        command: yarn test\n        environment:\n          TURBO_UI: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Referencing Files Outside Package Directory with $TURBO_ROOT$\nDESCRIPTION: Configuration showing how to reference files outside the package directory by using the $TURBO_ROOT$ prefix to make paths relative to the repository root.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_21\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"check-types\": {\n      // Consider all Typescript files in `src/` and the root tsconfig.json as inputs\n      \"inputs\": [\"$TURBO_ROOT$/tsconfig.json\", \"src/**/*.ts\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Tasks with Yarn\nDESCRIPTION: Shows how to execute Turborepo tasks using the Yarn package manager by calling the scripts defined in package.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running Specific Tasks with --only Flag in Turborepo\nDESCRIPTION: Shows how to restrict execution to only the specified tasks using the --only flag, which will not run task dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nturbo run test --only\n```\n\n----------------------------------------\n\nTITLE: ESLint Configuration Package Definition\nDESCRIPTION: The package.json for a shared ESLint configuration package that centralizes ESLint dependencies and settings. This approach reduces duplication by maintaining all ESLint dependencies in one place.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/eslint-config\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"eslint\": \"^8\",\n    \"eslint-config-turbo\": \"latest\",\n    \"eslint-config-next\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Rust CLI Dependency to Web Application with pnpm/Bun\nDESCRIPTION: Shows how to create a dependency relationship between a web application and a Rust CLI project using pnpm or Bun workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/multi-language.mdx#2025-04-22_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"devDependencies\": {\n+   \"@repo/rust-cli\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Lint Script in Package\nDESCRIPTION: Example package.json script configuration that adds an ESLint lint command to a package. This script can be used to run ESLint on the package's files.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"lint\": \"eslint .\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turbo-Ignore for Current Package Build\nDESCRIPTION: This command checks for changes in the current package (assumed to be 'web') and its dependencies for the 'build' task, using Automatic Package Scoping.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/constructing-ci.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd apps/web\nnpx turbo-ignore\n```\n\n----------------------------------------\n\nTITLE: Creating a new Turborepo project with React Native Web template\nDESCRIPTION: Command to initialize a new Turborepo project using the React Native Web template. This creates a monorepo setup with React Native and Next.js applications sharing code.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-react-native-web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-react-native-web\n```\n\n----------------------------------------\n\nTITLE: Workspace-Specific Turbo-Ignore\nDESCRIPTION: Command showing how to run turbo-ignore for a specific workspace using the default build task.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/skipping-tasks.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo-ignore web\n```\n\n----------------------------------------\n\nTITLE: Executing Direct GraphQL Query with turbo query\nDESCRIPTION: Illustrates how to run a specific GraphQL query directly from the command line, returning package names in this example.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/query.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo query \"query { packages { items { name } } }\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo for Vitest Workspace\nDESCRIPTION: Sets up Turborepo root tasks for running tests using Vitest's Workspace feature.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"//#test\": {\n      \"outputs\": [\"coverage/**\"]\n    },\n    \"//#test:watch\": {\n      \"cache\": false,\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Extending Shared TypeScript Config\nDESCRIPTION: Example of a tsconfig.json file extending the shared configuration for a Next.js application.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"extends\": \"@repo/typescript-config/nextjs.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"dist\"\n  },\n  \"include\": [\"src\"],\n  \"exclude\": [\"node_modules\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Running Experimental Boundaries in Turborepo\nDESCRIPTION: Command to execute the experimental Boundaries feature that detects monorepo mistakes like importing files outside package directories or undeclared dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-4.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo boundaries\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Boundary Constraints with Tags\nDESCRIPTION: Demonstrates how to configure custom boundary tags with allowDependencyOn and denyDependencyFrom rules in a workspace-specific turbo.json file.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-3.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"extends\": [\"//\"],\n  \"boundaries\": {\n    \"tags\": [\"library\", \"ui\", \"frontend\", \"beta\"],\n    \"allowDependencyOn\": [\"library\", \"frontend\"],\n    \"denyDependencyFrom\": [\"backend\", \"stable\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Turbo Link Command Usage\nDESCRIPTION: Basic command to link a repository to a Remote Cache provider for sharing cache artifacts.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/link.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo link\n```\n\n----------------------------------------\n\nTITLE: Setting Up CircleCI Configuration for pnpm\nDESCRIPTION: This YAML snippet configures CircleCI for a Turborepo project using pnpm as the package manager. It includes steps for installing dependencies, building, and testing the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/circleci.mdx#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: 2.1\norbs:\n  node: circleci/node@5.0.2\nworkflows:\n  test:\n    jobs:\n      - test\njobs:\n  test:\n    docker:\n      - image: cimg/node:lts\n    steps:\n      - checkout\n      - node/install-packages\n      - run:\n        command: npm i -g pnpm\n        environment:\n          TURBO_UI: \"false\"\n      - run:\n        command: pnpm build\n        environment:\n          TURBO_UI: \"false\"\n      - run:\n        command: pnpm test\n        environment:\n          TURBO_UI: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Turbo Link with Auto-confirmation\nDESCRIPTION: Links repository with automatic confirmation for all prompts using the --yes flag.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/link.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo link --yes\n```\n\n----------------------------------------\n\nTITLE: GitLab CI Configuration with PNPM\nDESCRIPTION: GitLab CI configuration using PNPM as package manager with caching setup.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/gitlab-ci.mdx#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nimage: node:latest\nstages:\n  - build\nbuild:\n  stage: build\n  before_script:\n    - curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@6.32.2\n    - pnpm config set store-dir .pnpm-store\n  script:\n    - pnpm install\n    - pnpm build\n    - pnpm test\n  cache:\n    key:\n      files:\n        - pnpm-lock.yaml\n    paths:\n      - .pnpm-store\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Generator Configuration\nDESCRIPTION: Example of creating a custom generator configuration file using Plop. This defines the generator's prompts and actions for code generation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/generating-code.mdx#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { PlopTypes } from \"@turbo/gen\";\n\nexport default function generator(plop: PlopTypes.NodePlopAPI): void {\n  // create a generator\n  plop.setGenerator(\"Generator name\", {\n    description: \"Generator description\",\n    // gather information from the user\n    prompts: [\n      ...\n    ],\n    // perform actions based on the prompts\n    actions: [\n      ...\n    ],\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Turbo Test Scripts to Root package.json\nDESCRIPTION: Add 'test' and 'test:watch' scripts to the root package.json file to run Turbo commands for testing across the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/jest.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"test\": \"turbo run test\",\n    \"test:watch\": \"turbo run test:watch\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a new Turborepo project with NestJS template\nDESCRIPTION: Command to initialize a new Turborepo project using the NestJS template. This creates the monorepo structure with preconfigured NestJS and Next.js applications.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e with-nestjs\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Commands to run database migrations using different package managers (npm, yarn, pnpm, bun).\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Using npm\nnpm run db:migrate:dev\n\n# Using yarn\nyarn run db:migrate:dev\n\n# Using pnpm\npnpm run db:migrate:dev\n\n# Using bun\nbun run db:migrate:dev\n```\n\n----------------------------------------\n\nTITLE: Basic Turbo Login Command\nDESCRIPTION: Basic command to log in to the Remote Cache provider, defaulting to Vercel.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/login.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo login\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Boundaries Command in Bash\nDESCRIPTION: This command executes the Turborepo boundaries check, which notifies for package manager Workspace violations such as importing files outside of the package's directory or importing undeclared dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/boundaries.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo boundaries\n```\n\n----------------------------------------\n\nTITLE: Creating a Nuxt-powered Turborepo with NPM\nDESCRIPTION: Creates a new Turborepo project using the 'with-vue-nuxt' example template via NPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e with-vue-nuxt\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions CI Workflow for Bun and Turborepo\nDESCRIPTION: GitHub Actions workflow configuration for Bun-based Turborepo projects. This workflow sets up Bun and Node.js environments, installs dependencies, and runs build and test tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/github-actions.mdx#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nname: CI\n\non:\n  push:\n    branches: [\"main\"]\n  pull_request:\n    types: [opened, synchronize]\n\njobs:\n  build:\n    name: Build and Test\n    timeout-minutes: 15\n    runs-on: ubuntu-latest\n    # To use Remote Caching, uncomment the next lines and follow the steps below.\n    # env:\n    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}\n    #  TURBO_TEAM: ${{ vars.TURBO_TEAM }}\n\n    steps:\n      - name: Check out code\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 2\n\n      - uses: oven-sh/setup-bun@v2\n\n      - name: Setup Node.js environment\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n\n      - name: Install dependencies\n        run: bun install\n\n      - name: Build\n        run: bun run build\n\n      - name: Test\n        run: bun run test\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependencies in package.json with PNPM\nDESCRIPTION: Example of how to define external and internal dependencies in a package.json file using PNPM workspace protocol.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dependencies\": {\n    \"next\": \"latest\", // External dependency\n    \"@repo/ui\": \"workspace:*\" // Internal dependency\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Package.json for TypeScript Config Package\nDESCRIPTION: Configuration for the shared TypeScript configuration package, naming it for workspace reference.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/typescript-config\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Tags to Packages in Turborepo JSON Configuration\nDESCRIPTION: This configuration adds an 'internal' tag to a UI package in Turborepo. Tags can be used to create rules for the boundaries feature to check dependencies and imports.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/boundaries.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tags\": [\"internal\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Task Outputs in Turbo.json\nDESCRIPTION: Defines the dist directory as an output for the build task to enable Turborepo caching.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/publishing-libraries.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\"dist/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring package.json for Turborepo test tasks\nDESCRIPTION: Sets up scripts in the root package.json to run Turborepo test tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"test\": \"turbo run test\",\n    \"test:watch\": \"turbo run test:watch\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo Project with Prisma\nDESCRIPTION: Command to create a new Turborepo project using the Prisma template. It prompts for package manager and project name.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-prisma\n```\n\n----------------------------------------\n\nTITLE: Sending Telemetry Events in TypeScript\nDESCRIPTION: Demonstrates how to send custom events through the telemetry client with event-specific properties.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-telemetry/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntelemetry.myCustomEventName({\n  // event properties\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Remote Cache Timeout in Turborepo\nDESCRIPTION: Sets the timeout for Remote Cache operations in seconds. The default timeout is 30 seconds.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --remote-cache-timeout=60\n```\n\n----------------------------------------\n\nTITLE: Configuring Yarn/NPM/Bun Workspaces\nDESCRIPTION: JSON configuration in package.json for yarn, npm, and bun workspaces, specifying which directories to include as packages in the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/structuring-a-repository.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"workspaces\": [\n    \"apps/*\",\n    \"packages/*\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: ESLint Shared Configuration for Next.js (v8 Legacy)\nDESCRIPTION: Example of a shared ESLint configuration file specifically for Next.js applications using the v8 legacy format. This configuration extends recommended configurations and can be used across multiple Next.js applications in the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n/* Custom ESLint configuration for use with Next.js apps. */\nmodule.exports = {\n  extends: [\n    'eslint-config-turbo',\n    'eslint-config-next',\n    // ...your other ESLint configurations\n  ].map(require.resolve),\n  // ...your other configuration\n};\n```\n\n----------------------------------------\n\nTITLE: Executing Turborepo Query Command\nDESCRIPTION: Demonstrates how to use the new 'turbo query' command to run GraphQL queries against the repository data. It shows examples of passing queries as strings or file paths.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-2-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo query \"query { package(name: \\\"web\\\") { name } }\"\nturbo query query.gql\n```\n\n----------------------------------------\n\nTITLE: Filtering Tasks to Include Dependents in Turborepo\nDESCRIPTION: Shows how to run tasks for a package and all its dependents using the ... microsyntax, which is useful when making changes to a package and need to ensure they don't break dependent packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nturbo build --filter=...ui\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Link Component with Next.js Integration\nDESCRIPTION: This React component demonstrates how to create a wrapper around Next.js's Link component. It leverages the peer dependency on Next.js to import the Link component and applies default styling while preserving all original props.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/framework-bindings.mdx#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport Link from 'next/link';\nimport type { ComponentProps } from 'react';\n\ntype CustomLinkProps = ComponentProps<typeof Link>;\n\nexport function CustomLink({ children, ...props }: CustomLinkProps) {\n  return (\n    <Link className=\"text-underline hover:text-green-400\" {...props}>\n      {children}\n    </Link>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Experimental UI in Turborepo Configuration (JSON)\nDESCRIPTION: This code snippet shows how to enable the new experimental terminal UI by adding the 'experimentalUI' flag to the turbo.json configuration file.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-13-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"experimentalUI\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Optimized Dockerfile Using Turbo Prune\nDESCRIPTION: An improved Dockerfile that uses the new `turbo prune` command to generate a sparse/partial monorepo with a pruned lockfile. This approach only includes dependencies needed for the target package, resulting in better Docker layer caching and faster builds.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-0-4-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: docker\nCODE:\n```\nFROM node:alpine AS base\nRUN apk update && apk add git\n\n## Globally install `turbo`\nRUN npm i -g turbo\n\n# Prune the workspace for the `frontend` app\nFROM base as pruner\nWORKDIR /app\nCOPY . .\nRUN turbo prune frontend --docker\n\n# Add pruned lockfile and package.json's of the pruned subworkspace\nFROM base AS installer\nWORKDIR /app\nCOPY --from=pruner /app/out/json/ .\nCOPY --from=pruner /app/out/yarn.lock ./yarn.lock\n# Install only the deps needed to build the target\nRUN yarn install\n\n# Copy source code of pruned subworkspace and build\nFROM base AS builder\nWORKDIR /app\nCOPY --from=pruner /app/.git ./.git\nCOPY --from=pruner /app/out/full/ .\nCOPY --from=installer /app/ .\nRUN turbo run build frontend\n\n# Start the app\nFROM builder as runner\nEXPOSE 3000\nRUN ['yarn', '--cwd', 'packages/frontend', 'start']\n```\n\n----------------------------------------\n\nTITLE: Demonstrating VT100 Parser Usage in Rust\nDESCRIPTION: This code snippet demonstrates how to use the vt100 parser to process terminal byte streams, manipulate terminal colors, and retrieve formatted content. It shows initializing a parser, processing text with ANSI color codes, and checking the cell properties and content differences.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-vt100/README.md#2025-04-22_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nlet mut parser = vt100::Parser::new(24, 80, 0);\n\nlet screen = parser.screen().clone();\nparser.process(b\"this text is \\x1b[31mRED\\x1b[m\");\nassert_eq!(\n    parser.screen().cell(0, 13).unwrap().fgcolor(),\n    vt100::Color::Idx(1),\n);\n\nlet screen = parser.screen().clone();\nparser.process(b\"\\x1b[3D\\x1b[32mGREEN\");\nassert_eq!(\n    parser.screen().contents_formatted(),\n    &b\"\\x1b[?25h\\x1b[m\\x1b[H\\x1b[Jthis text is \\x1b[32mGREEN\"[..],\n);\nassert_eq!(\n    parser.screen().contents_diff(&screen),\n    &b\"\\x1b[1;14H\\x1b[32mGREEN\"[..],\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in Multiple Packages with Bun\nDESCRIPTION: Command to install a dependency in multiple packages simultaneously using Bun's filter option (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbun install jest --filter=web --filter=@repo/ui --dev\n```\n\n----------------------------------------\n\nTITLE: Adding Root Task to turbo.json Configuration\nDESCRIPTION: Demonstrates the correct way to add a root task to turbo.json when the task doesn't call turbo\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/missing-root-task-in-turbo-json.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"//#build\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Login URL Endpoint\nDESCRIPTION: Configures the authentication endpoint used during the turbo login process. Default points to Vercel's main domain.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_34\n\nLANGUAGE: markdown\nCODE:\n```\nloginUrl\n\nDefault: `\"https://vercel.com\"`\n```\n\n----------------------------------------\n\nTITLE: Using the New Cache Flag for Granular Cache Control\nDESCRIPTION: Demonstrates using the new --cache flag to specify read/write behavior for both local and remote caches.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-3.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --cache=local:rw,remote:r\n```\n\n----------------------------------------\n\nTITLE: Adding a Nuxt Application to a Monorepo with PNPM\nDESCRIPTION: Initializes a new Nuxt application in an existing Turborepo monorepo using Nuxi CLI via PNPM.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx nuxi@latest init apps/my-app\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Wildcards Configuration\nDESCRIPTION: Example of using wildcards in Turborepo configuration to include multiple environment variables that match a pattern (ACME_*) in the build task's hash.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-10-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"pipeline\": {\n    \"build\": {\n      \"env\": [\"ACME_*\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring GitHub Actions Workflow with Remote Caching\nDESCRIPTION: This GitHub Actions workflow configuration shows how to set up environment variables for Turborepo remote caching. It uses secrets and variables to store the authentication token and team identifier.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/github-actions.mdx#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# ...\n\njobs:\n  build:\n    name: Build and Test\n    timeout-minutes: 15\n    runs-on: ubuntu-latest\n    # To use Turborepo Remote Caching, set the following environment variables for the job.\n    env: \n      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }} \n      TURBO_TEAM: ${{ vars.TURBO_TEAM }} \n\n    steps:\n      - name: Check out code\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 2\n    # ...\n```\n\n----------------------------------------\n\nTITLE: Enabling Boundaries with Simple Configuration in Turbo\nDESCRIPTION: Shows how to enable the Boundaries feature proposed in the RFC with a single line of code in turbo.json configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-3.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"boundaries\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Base TypeScript Configuration\nDESCRIPTION: A base tsconfig.json file that can be extended by other configurations in the workspace, setting common compiler options.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"target\": \"es2022\",\n    \"allowJs\": true,\n    \"resolveJsonModule\": true,\n    \"moduleDetection\": \"force\",\n    \"isolatedModules\": true,\n    \"strict\": true,\n    \"noUncheckedIndexedAccess\": true,\n    \"module\": \"NodeNext\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Internal Packages in Next.js Application's package.json\nDESCRIPTION: This snippet shows how to add internal packages as dependencies in a Next.js application's package.json file for different package managers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nextjs.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"workspace:*\"\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"*\"\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"*\"\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Design System Monorepo with Turborepo (Bun)\nDESCRIPTION: Command to create a new Turborepo project using the design-system template with Bun package manager (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest -e design-system\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Flag Syntax Options in Turborepo CLI\nDESCRIPTION: This snippet shows various ways to pass options with values in Turborepo's command-line interface. It demonstrates using equals signs, quotes for values with spaces, and space-separated syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/index.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--opt=value\n--opt=\"value with a space\"\n--opt value\n--opt \"value with a space\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js-specific Workspace in Turborepo\nDESCRIPTION: Workspace-specific turbo.json configuration for a Next.js app that extends from the root configuration and customizes the build outputs to include Next.js-specific directories.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-8-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"extends\": [\"//\"],\n  \"pipeline\": {\n    \"build\": {\n      // dependsOn is inherited from root\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Cache Timeout\nDESCRIPTION: Sets the timeout duration for general remote cache operations in seconds. Accepts whole numbers only, with 0 indicating no timeout.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_31\n\nLANGUAGE: markdown\nCODE:\n```\ntimeout\n\nDefault: `30`\n```\n\n----------------------------------------\n\nTITLE: Configuring SvelteKit-specific Workspace in Turborepo\nDESCRIPTION: Workspace-specific turbo.json configuration for a SvelteKit app that extends from the root configuration and customizes the build outputs to include SvelteKit-specific directories.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-8-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"extends\": [\"//\"],\n  \"pipeline\": {\n    \"build\": {\n      // dependsOn is inherited from root\n      \"outputs\": [\".svelte-kit/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Root-Level Turborepo Tasks in jsonc\nDESCRIPTION: Example of a root turbo.json configuration that defines a build task depending on codegen task without specifying outputs at the root level.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-8-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^codegen\"]\n      // no need to define outputs here!\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Restricting Package Dependents in Turborepo JSON\nDESCRIPTION: This configuration in turbo.json prevents 'public' packages from depending on 'private' packages, showing how to use the 'deny' rule for dependents.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/boundaries.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"boundaries\": {\n    \"tags\": {\n      \"private\": {\n        \"dependents\": {\n          \"deny\": [\"public\"]\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Build with Yarn in Turborepo\nDESCRIPTION: Command to run the build script defined in package.json using Yarn package manager in a Turborepo project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/caching.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: create-turbo Command Line Options\nDESCRIPTION: List of available command-line options for the create-turbo CLI tool, including package manager selection, installation control, version specification, and example usage.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_12\n\nLANGUAGE: txt\nCODE:\n```\n-m, --package-manager to use (choices: \"npm\", \"yarn\", \"pnpm\", \"bun\")\n\n--skip-install: Do not run a package manager install after creating the project (Default: false)\n\n--skip-transforms: Do not run any code transformation after creating the project (Default: false)\n\n--turbo-version <version>: Use a specific version of turbo (default: latest)\n\n-e, --example [name]|[github-url]: An example to bootstrap the app with. You can use an example name from the official Turborepo repo or a GitHub URL. The URL can use any branch and/or subdirectory\n\n-p, --example-path <path-to-example>: In a rare case, your GitHub URL might contain a branch name with a slash (e.g. bug/fix-1) and the path to the example (e.g. foo/bar). In this case, you must specify the path to the example separately: --example-path foo/bar\n\n-v, --version:  Output the current version\n\n-h, --help: Display help for command\n```\n\n----------------------------------------\n\nTITLE: Installing Jest in Turborepo Workspaces (pnpm)\nDESCRIPTION: Install Jest as a dev dependency in specific workspaces using pnpm. This command adds Jest to the 'web' and '@repo/ui' packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/jest.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install jest --save-dev --filter=@repo/ui --filter=web\n```\n\n----------------------------------------\n\nTITLE: Enabling Watch Mode Caching in Turborepo\nDESCRIPTION: Command to activate experimental caching in Watch Mode, which allows for faster development by caching task outputs during watch operations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-4.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo watch dev --experimental-write-cache\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Tasks with Bun\nDESCRIPTION: Shows how to execute Turborepo tasks using the Bun package manager (Beta) by calling the scripts defined in package.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbun run dev\n```\n\n----------------------------------------\n\nTITLE: Basic Turbo Pipeline Configuration\nDESCRIPTION: Standard turbo.json pipeline configuration showing build dependencies between workspace projects.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-4-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Stabilizing Env Mode (Turborepo 1.10.0)\nDESCRIPTION: Codemod to migrate experimentalGlobalPassThroughEnv to globalPassThroughEnv and experimentalPassThroughEnv to passThroughEnv in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_9\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n- \"experimentalGlobalPassThroughEnv\": [\"CC\"],\n+ \"globalPassThroughEnv\": [\"CC\"],\n  \"pipeline\": {\n    \"build\": {\n-     \"experimentalPassThroughEnv\": [\"GOROOT\"],\n+     \"passThroughEnv\": [\"GOROOT\"],\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Vite Application with Yarn\nDESCRIPTION: Command to add a new Vite application to an existing repository using Yarn package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn create vite@latest apps/my-app\n```\n\n----------------------------------------\n\nTITLE: Running Turbo Generators from Terminal\nDESCRIPTION: This snippet shows how to run a specific Turbo generator directly, bypassing the selection prompt. It demonstrates the basic command syntax for executing a named generator.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/generating-code.mdx#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nturbo gen [generator-name]\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Remote Cache using PNPM\nDESCRIPTION: Command to authenticate Turborepo using PNPM package manager for developers without global Turbo installation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx turbo login\n```\n\n----------------------------------------\n\nTITLE: Migrating Env Var Dependencies (Turborepo 1.5.0)\nDESCRIPTION: Codemod to migrate environment variable dependencies from dependsOn and globalDependencies to env and globalEnv respectively in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_12\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n- \"globalDependencies\": [\".env\", \"$CI_ENV\"],\n+ \"globalDependencies\": [\".env\"],\n+ \"globalEnv\": [\"CI_ENV\"],\n  \"pipeline\": {\n    \"build\": {\n-     \"dependsOn\": [\"^build\", \"$API_BASE\"],\n+     \"dependsOn\": [\"^build\"],\n+     \"env\": [\"API_BASE\"],\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"],\n    },\n    \"lint\": {},\n    \"dev\": {\n      \"cache\": false,\n      \"persistent\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Environment Variable Declaration in Turborepo\nDESCRIPTION: This snippet demonstrates the proper way to declare environment variables in turbo.json without using the $ prefix, which is the recommended approach since Turborepo 1.5.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/invalid-env-prefix.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"globalEnv\": [\"MY_ENV_VAR\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo for Next.js\nDESCRIPTION: Sample turbo.json configuration for a Next.js project, defining build and lint tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n    },\n    \"lint\": {\n      \"outputs\": []\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Pre-execution Script in package.json\nDESCRIPTION: This package.json snippet shows how to ensure the cache key generation script runs before executing turbo commands. It adds a script that first generates the cache key file and then runs the build command.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/handling-platforms.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build-for-platforms\": \"node ./scripts/create-turbo-cache-key.js && turbo run build\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with bun (Beta) and GitHub URL\nDESCRIPTION: Command to initialize a new Turborepo with a custom example from GitHub using bun package manager, which is currently in beta.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest --example [github-url]\n```\n\n----------------------------------------\n\nTITLE: Fixed turbo script configuration in package.json\nDESCRIPTION: This code snippet demonstrates the solution to the recursive script problem by renaming the script to break the cycle. The 'build' script is renamed to 'build:app', which prevents the recursive loop when 'turbo run build' is executed.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/recursive-turbo-invocations.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build:app\": \"turbo run build\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing a new Turborepo project using npx\nDESCRIPTION: This command uses npx to create a new Turborepo project. It runs the latest version of create-turbo and prompts the user for project setup details.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/create-turbo/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Repository Installation of Turborepo with Yarn\nDESCRIPTION: This command installs Turborepo as a dev dependency in the root of your repository using Yarn. It helps pin the version for consistent usage across all developers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nyarn add turbo --dev --ignore-workspace-root-check\n```\n\n----------------------------------------\n\nTITLE: Dockerfile Example for Monorepo Without Pruning\nDESCRIPTION: An example Dockerfile that demonstrates the traditional method of building a Next.js app in a monorepo, showing the inefficiencies of copying the entire workspace and lockfile. This approach leads to poor Docker layer caching when the lockfile changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-0-4-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: docker\nCODE:\n```\nFROM node:alpine AS base\nRUN apk update\nWORKDIR /app\n\n# Add lockfile and package.jsons\nFROM base AS builder\nCOPY *.json yarn.lock ./\nCOPY packages/ui/*.json ./packages/ui/\nCOPY packages/frontend/*.json ./packages/frontend/\nRUN yarn install\n\n# Copy source files\nCOPY packages/ui/ ./packages/ui/\nCOPY packages/frontend/ ./packages/frontend/\n\n# Build\nRUN yarn --cwd=packages/ui/ build\nRUN yarn --cwd=packages/frontend/ build\n\n# Start the Frontend Next.js application\nEXPOSE 3000\nRUN ['yarn', '--cwd', 'packages/frontend', 'start']\n```\n\n----------------------------------------\n\nTITLE: Incorrect Task Configuration in Workspace-Level turbo.json\nDESCRIPTION: This snippet shows an incorrect configuration where a package name prefix is unnecessarily added to a task in a workspace-level turbo.json file. When a turbo.json is placed in a package directory, the package prefix should be omitted.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/unnecessary-package-task-syntax.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"web#build\": {\n      \"dependsOn\": [\"lint\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Affected Packages with GraphQL\nDESCRIPTION: GraphQL query to retrieve the name and path of affected packages that have a 'test' task. This query uses the 'affectedPackages' field with filters for base and head commits.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-2-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  affectedPackages(\n    base: \"main\"\n    head: \"HEAD\"\n    filter: { has: { field: TASK_NAME, value: \"test\" } }\n  ) {\n    items {\n      name\n      path\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Storybook in a Monorepo (PNPM)\nDESCRIPTION: Command to initialize a new Storybook application in the apps/storybook directory using PNPM.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Advanced Configuration Example with Flat Config Format\nDESCRIPTION: Example configuration with rule options in flat config format, demonstrating how to configure the no-undeclared-env-vars rule with a custom allowList.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/README.md#2025-04-22_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nimport turbo from \"eslint-plugin-turbo\";\n\nexport default [\n  {\n    plugins: {\n      turbo,\n    },\n    rules: {\n      \"turbo/no-undeclared-env-vars\": [\n        \"error\",\n        {\n          allowList: [\"^ENV_[A-Z]+$\"],\n        },\n      ],\n    },\n  },\n];\n\n```\n\n----------------------------------------\n\nTITLE: Simplified Turbo CLI Command Syntax\nDESCRIPTION: Demonstrates the new simplified CLI syntax where 'run' command is optional, allowing direct task execution with 'turbo <task>'.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-5-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n- turbo run build\n+ turbo build\n\n\n- turbo run lint build test\n+ turbo lint build test\n```\n\n----------------------------------------\n\nTITLE: Basic Flat Config Setup\nDESCRIPTION: Minimal configuration for eslint-plugin-turbo using ESLint v9 flat config format.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-plugin-turbo.mdx#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport turbo from 'eslint-plugin-turbo';\n\nexport default [turbo.configs['flat/recommended']];\n```\n\n----------------------------------------\n\nTITLE: Creating a Nuxt-powered Turborepo with Yarn\nDESCRIPTION: Creates a new Turborepo project using the 'with-vue-nuxt' example template via Yarn package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest -e with-vue-nuxt\n```\n\n----------------------------------------\n\nTITLE: Configuring Setup Tasks for Dev in Turborepo\nDESCRIPTION: Sets up a dev task with a dependency on a setup task, demonstrating how to run scripts that set up the development environment before the main dev task.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/developing-applications.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"dev\": {\n      \"cache\": false,\n      \"persistent\": true,\n      \"dependsOn\": [\"//#dev:setup\"]\n    },\n    \"//#dev:setup\": {\n      \"outputs\": [\".codegen/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Lint Task in Turborepo Configuration\nDESCRIPTION: Example turbo.json configuration that defines a 'lint' task. This allows running the lint task across all packages in the monorepo that have a lint script.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"lint\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Tags to Packages in Turborepo\nDESCRIPTION: Shows how to add tags to a package for use with Boundaries. This configuration is only valid in Package Configurations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_10\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tags\": [\"utils\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo Project with Two Next.js Applications\nDESCRIPTION: Command to initialize a new Turborepo project with two Next.js applications using the default template. This is part of the updated examples section.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-11-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Building UI Components with tsup\nDESCRIPTION: The tsup command used to compile TypeScript React components into both ES Modules and CommonJS formats with TypeScript type definitions.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/design-system/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntsup src/*.tsx --format esm,cjs --dts --external react\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using GlobWatcher in Rust\nDESCRIPTION: This example demonstrates how to create a GlobWatcher instance, configure it to watch specific directories, and process events asynchronously with cancellation support.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-globwatch/readme.md#2025-04-22_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nlet (watcher, mut config) = GlobWatcher::new(\"./flush\").unwrap();\nlet stop = StopSource::new();\nlet mut stream = watcher.into_stream(stop.token());\nconfig.include(Path::new(\"/app/css\").into());\nconfig.include(Path::new(\"/app/html\").into());\nwhile let Some(Ok(e)) = stream.next().await {\n    debug!(\"received event: {:?}\", e);\n\n    // use the cancellation token to stop the watcher\n    drop(stop);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Travis CI with Bun for Turborepo\nDESCRIPTION: Travis CI configuration for a Turborepo project using Bun as the package manager (Beta), including installation of Bun and cache settings.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/travis-ci.mdx#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nlanguage: node_js\nnode_js:\n  - lts/*\ncache:\n  npm: false\n  directories:\n    - \"~/.pnpm-store\"\nbefore_install:\n  - curl -fsSL https://bun.sh/install | bash\ninstall:\n  - bun install\nscript:\n  - bun run build\nscript:\n  - bun run test\n```\n\n----------------------------------------\n\nTITLE: Enhanced Cache Control Configuration\nDESCRIPTION: Example of improved cache control in Turborepo, demonstrating how to configure caching behavior on a per-task basis. The configuration specifies which output directories to cache for different commands and allows disabling caching for specific tasks like development servers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-0-4-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"turbo\": {\n    \"pipeline\": {\n      \"build\": {\n        // Cache anything in dist or .next directories emitted by a `build` command\n        \"outputs\": [\"dist/**\", \".next/**\", \"!.next/cache/**\"]\n        \"dependsOn\": [\"^build\"]\n      },\n      \"test\": {\n        // Cache the test coverage report\n        \"outputs\": [\"coverage/**\"],\n        \"dependsOn\": [\"lint\", \"build\"]\n      },\n      \"dev\": {\n        // Never cache the `dev` command\n        \"cache\": false\n      },\n      \"lint\": {},\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing shadcn/ui in a Monorepo with yarn/npm\nDESCRIPTION: Command to initialize shadcn/ui in a new monorepo using yarn or npm package managers. Uses the canary version which supports monorepo setups.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/shadcn-ui.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@canary init\n```\n\n----------------------------------------\n\nTITLE: Using turbo run in CI pipelines\nDESCRIPTION: When working in CI environments, it's recommended to use the explicit 'turbo run' command rather than the aliased 'turbo' to avoid potential naming conflicts with future subcommands.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/constructing-ci.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nturbo run deploy\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with pnpm\nDESCRIPTION: Command to initialize a new Turborepo using pnpm package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Global Installation of Turborepo with NPM\nDESCRIPTION: This command globally installs Turborepo using NPM package manager. It allows for flexible and fast workflows across all projects.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm install turbo --global\n```\n\n----------------------------------------\n\nTITLE: Repository Exploration Commands in Turborepo\nDESCRIPTION: Shows various ways to explore and list tasks and packages in a Turborepo repository using turbo run and turbo ls commands.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-1-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# List all tasks in the repository\nturbo run\n\n# List tasks in a specific package\nturbo run --filter=@repo/ui\n\n# Using Automatic Package Scoping\ncd packages/ui && turbo run\n```\n\n----------------------------------------\n\nTITLE: Configuring Root Package Scripts in package.json\nDESCRIPTION: Demonstrates how to define root-level scripts in package.json that call turbo commands\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/missing-root-task-in-turbo-json.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build\": \"turbo run build\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Packages with GraphQL\nDESCRIPTION: GraphQL query to find all packages with more than 10 immediate dependents. This showcases the use of filters in Turborepo's GraphQL API to analyze package relationships.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-2-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: graphql\nCODE:\n```\nquery {\n  packages(\n    filter: { greaterThan: { field: DIRECT_DEPENDENT_COUNT, value: 10 } }\n  ) {\n    name\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up CircleCI Configuration for Bun (Beta)\nDESCRIPTION: This YAML snippet configures CircleCI for a Turborepo project using Bun as the package manager. It includes steps for installing Bun, installing dependencies, building, and testing the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/circleci.mdx#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nversion: 2.1\norbs:\n  node: circleci/node@5.0.2\nworkflows:\n  test:\n    jobs:\n      - test\njobs:\n  test:\n    docker:\n      - image: cimg/node:lts\n    steps:\n      - checkout\n      - node/install-packages\n      - run:\n        command: npm i -g bun\n        environment:\n          TURBO_UI: \"false\"\n      - run:\n        command: bun run build\n        environment:\n          TURBO_UI: \"false\"\n      - run:\n        command: bun run test\n        environment:\n          TURBO_UI: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Creating New Project from Turborepo Example\nDESCRIPTION: Command to initialize a new project using Turborepo's kitchen-sink example template with the create-turbo command.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-9-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e kitchen-sink\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS Content Paths\nDESCRIPTION: Example of how to update the Tailwind CSS configuration to include package locations when consuming UI components directly from source.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-tailwind/README.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n  content: [\n    // app content\n    `src/**/*.{js,ts,jsx,tsx}`,\n    // include packages if not transpiling\n    \"../../packages/ui/*.{js,ts,jsx,tsx}\",\n  ],\n```\n\n----------------------------------------\n\nTITLE: Adding Package Manager (Turborepo 1.1.0)\nDESCRIPTION: Codemod to add the packageManager key with the detected package manager and version to the root package.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_13\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"name\": \"turborepo-basic\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n+  \"packageManager\": \"yarn@1.22.17\",\n  \"workspaces\": [\n    \"apps/*\",\n    \"packages/*\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tasks with No Dependencies\nDESCRIPTION: Define a task with no dependencies by providing an empty array, allowing the task to run independently of other tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"spell-check\": {\n      \"dependsOn\": [] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Elements\nDESCRIPTION: Command to generate various Angular elements using the CLI. This can be used to scaffold components, directives, pipes, services, classes, guards, interfaces, enums, or modules.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/web/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Creating a Vite-based Turborepo with Bun\nDESCRIPTION: Command to quickly scaffold a new Turborepo project with Vite using the 'with-vite' example template via Bun package manager (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest -e with-vite\n```\n\n----------------------------------------\n\nTITLE: Running Multiple Tasks Together with 'with' Configuration\nDESCRIPTION: Specifies tasks that should run alongside the current task, ensuring multiple services or processes start together for development.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_25\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"dev\": {\n      \"with\": [\"api#dev\"],\n      \"persistent\": true,\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding ESLint Config as Dependency with Bun\nDESCRIPTION: Example package.json showing how to add the shared ESLint configuration as a workspace dependency using Bun. This is required before the shared config can be used by a package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"devDependencies\": {\n    \"@repo/eslint-config\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using turbo prune Command for Docker\nDESCRIPTION: A command to create a pruned version of the monorepo that only includes the 'api' workspace and its dependencies. The --docker flag organizes files to optimize Docker layer caching.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/docker.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo prune api --docker\n```\n\n----------------------------------------\n\nTITLE: Configuring Peer Dependencies for Framework Bindings in package.json\nDESCRIPTION: This snippet shows how to set up peer dependencies in a UI library to integrate with Next.js. The configuration allows the library to use Next.js APIs without directly installing the framework in the package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/framework-bindings.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/ui\",\n  \"peerDependencies\": {\n    \"next\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Nuxt Application to a Monorepo with Bun\nDESCRIPTION: Initializes a new Nuxt application in an existing Turborepo monorepo using Nuxi CLI via Bun (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbunx nuxi@latest init apps/my-app\n```\n\n----------------------------------------\n\nTITLE: GitLab CI Configuration with NPM\nDESCRIPTION: Simple GitLab CI configuration using NPM as package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/gitlab-ci.mdx#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nimage: node:latest\nstages:\n  - build\nbuild:\n  stage: build\n  script:\n    - npm install\n    - npm run build\n    - npm run test\n```\n\n----------------------------------------\n\nTITLE: Using Authentication Token with Turborepo Remote Cache\nDESCRIPTION: Provides a bearer token for Remote Caching, useful for non-interactive shells in combination with the --team flag. This can also be set via the TURBO_TOKEN environment variable.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --team=my-team --token=xxxxxxxxxxxxxxxxx\n```\n\n----------------------------------------\n\nTITLE: Initializing shadcn/ui in a Monorepo with pnpm\nDESCRIPTION: Command to initialize shadcn/ui in a new monorepo using pnpm package manager. Uses the canary version which supports monorepo setups.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/shadcn-ui.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx shadcn@canary init\n```\n\n----------------------------------------\n\nTITLE: Reconfiguring Storybook Sources for Co-located Stories\nDESCRIPTION: Diff showing how to update the Storybook configuration to look for stories in the UI package instead of the Storybook app.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_21\n\nLANGUAGE: diff\nCODE:\n```\nconst config = {\n  stories: [\n-   \"../src/**/*.mdx\",\n-   \"../src/**/*.stories.@(js|jsx|mjs|ts|tsx)\"],\n+   \"../../../packages/ui/src/**/*.stories.@(js|jsx|mjs|ts|tsx)\",\n};\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Example with Yarn\nDESCRIPTION: Commands to bootstrap a Turborepo project using Yarn package manager. Supports both official examples and community GitHub repositories.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/examples.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Use an example listed below\nyarn dlx create-turbo@latest --example [example-name]\n\n# Use a GitHub repository from the community\nyarn dlx create-turbo@latest --example [github-url]\n```\n\n----------------------------------------\n\nTITLE: Global Installation of Turborepo with Yarn\nDESCRIPTION: This command globally installs Turborepo using Yarn package manager. It allows for flexible and fast workflows across all projects.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn global add turbo\n```\n\n----------------------------------------\n\nTITLE: Basic Syntax for turbo ls Command\nDESCRIPTION: Shows the basic syntax for the `turbo ls` command which allows listing packages in a monorepo with optional package filtering and flags.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/ls.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo ls [package(s)] [flags]\n```\n\n----------------------------------------\n\nTITLE: Defining Turborepo Project Structure in package.json\nDESCRIPTION: This JSON snippet defines the basic structure of a Turborepo project, including build and test scripts, and the Turbo dependency.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/circleci.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-turborepo\",\n  \"scripts\": {\n    \"build\": \"turbo run build\",\n    \"test\": \"turbo run test\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies Across All Packages with Yarn\nDESCRIPTION: Commands to update dependencies across all packages using Yarn 1's interactive mode and Yarn 2+'s upgrade command.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nyarn upgrade-interactive --latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn upgrade typescript@latest --upgrade\n```\n\n----------------------------------------\n\nTITLE: Building all apps and packages in Turborepo\nDESCRIPTION: Commands to navigate to the project directory and build all applications and packages in the monorepo using Yarn.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-berry/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with bun (Beta)\nDESCRIPTION: Command to initialize a new Turborepo using bun package manager, which is currently in beta.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Adding a Vite Application with Bun\nDESCRIPTION: Command to add a new Vite application to an existing repository using Bun package manager (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbun create vite@latest apps/my-app\n```\n\n----------------------------------------\n\nTITLE: Running turbo query Command in Bash\nDESCRIPTION: Demonstrates the basic usage of the `turbo query` command. When run without arguments, it opens a GraphiQL playground for interactive querying.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/query.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo query [query] [flags]\n```\n\n----------------------------------------\n\nTITLE: Enabling Preflight Requests for Remote Caching in Turborepo\nDESCRIPTION: Shows how to enable sending a preflight request before cache artifact and analytics requests when Remote Caching is configured.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --preflight\n```\n\n----------------------------------------\n\nTITLE: Developing Turborepo Projects\nDESCRIPTION: Commands to navigate to the project directory and start development mode for all apps and packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-yarn/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running multiple CI tasks with Turborepo\nDESCRIPTION: Example of running multiple CI tasks in parallel using Turborepo for optimal performance.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nturbo run lint unit:test e2e:test integration:test\n```\n\n----------------------------------------\n\nTITLE: Turbo Configuration for Type Checking\nDESCRIPTION: Turbo configuration for running type checking tasks in parallel across the workspace.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"topo\": {\n      \"dependsOn\": [\"^topo\"]\n    },\n    \"check-types\": {\n      \"dependsOn\": [\"topo\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Turbo Generate Command\nDESCRIPTION: The basic command to initiate the generate functionality in Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/generate.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo generate\n```\n\n----------------------------------------\n\nTITLE: Configuring pnpm Workspace\nDESCRIPTION: YAML configuration for pnpm workspaces, specifying the directories to include as packages in the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/structuring-a-repository.mdx#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npackages:\n    - \"apps/*\"\n    - \"packages/*\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Travis CI with Yarn for Turborepo\nDESCRIPTION: Travis CI configuration for a Turborepo project using Yarn as the package manager. Travis automatically detects Yarn by the presence of yarn.lock file.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/travis-ci.mdx#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nlanguage: node_js\nnode_js:\n  - lts/*\ninstall:\n  - yarn\nscript:\n  - yarn build\nscript:\n  - yarn test\n```\n\n----------------------------------------\n\nTITLE: SSO Team Login Command\nDESCRIPTION: Login command for SSO-enabled teams using team slug identification.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/login.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nturbo login --sso-team=slug-for-team\n```\n\n----------------------------------------\n\nTITLE: Setting Up Shared Playwright Utilities with peerDependencies (pnpm)\nDESCRIPTION: Package.json configuration for a shared Playwright utilities package using pnpm. Uses peerDependencies to access Playwright from consumers without installing it directly in the utility package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/playwright.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/playwright-utilities\",\n  \"peerDependencies\": {\n    \"playwright\": \"workspace:*\"\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Empty Boundaries Configuration\nDESCRIPTION: Initializes an empty boundaries configuration object for defining dependency rules between packages using the 'boundaries' command.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_26\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"boundaries\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Copying a Remote Package to Your Monorepo\nDESCRIPTION: Command to create a new workspace by copying from a remote package specified via GitHub URL.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/generating-code.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo gen workspace --copy https://github.com/vercel/turborepo/tree/main/examples/with-tailwind/packages/tailwind-config\n```\n\n----------------------------------------\n\nTITLE: Removing Manual Environment Variables from Turbo Config\nDESCRIPTION: Example showing how to remove manually declared environment variables from turbo.json as they are now automatically inferred by the framework.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-4-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\n        \"^build\"\n-       // Include build time public inlined environment variables that\n-       // are different in development and production, so that\n-       // Turborepo does not use the same cached build\n-       // across environments\n-       \"$NEXT_PUBLIC_EXAMPLE_ENV_VAR\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Turborepo Project with Yarn\nDESCRIPTION: Command to create a new Turborepo project using the yarn-based template.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-yarn/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-yarn\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Cache Authentication\nDESCRIPTION: Commands to authenticate Turborepo CLI with Vercel account for remote caching setup.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/basic/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Basic .dockerignore Configuration\nDESCRIPTION: A .dockerignore file that prevents node_modules and debug logs from being copied into the Docker image, which helps reduce image size and build time.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/docker.mdx#2025-04-22_snippet_1\n\nLANGUAGE: txt\nCODE:\n```\nnode_modules\nnpm-debug.log\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Cache Directory\nDESCRIPTION: Setting a custom filesystem cache directory using the `--cache-dir` flag instead of the default `.turbo/cache` location.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --cache-dir=\"./my-cache\"\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies Across All Packages with NPM\nDESCRIPTION: Command to update a dependency to the latest version across all workspaces using NPM's workspaces option.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnpm install typescript@latest --workspaces\n```\n\n----------------------------------------\n\nTITLE: Seeding the Database\nDESCRIPTION: Commands to run the database seeding script using different package managers (npm, yarn, pnpm, bun).\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Using npm\nnpm run db:seed\n\n# Using yarn\nyarn run db:seed\n\n# Using pnpm\npnpm run db:seed\n\n# Using bun\nbun run db:seed\n```\n\n----------------------------------------\n\nTITLE: Creating a New Turborepo Monorepo (PNPM)\nDESCRIPTION: Command to create a new basic Turborepo monorepo using PNPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Global Installation of Turborepo with PNPM\nDESCRIPTION: This command globally installs Turborepo using PNPM package manager. It allows for flexible and fast workflows across all projects.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm install turbo --global\n```\n\n----------------------------------------\n\nTITLE: Turbo Link with Custom API URL\nDESCRIPTION: Links repository to a specific Remote Cache provider by specifying a custom API URL.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/link.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo link --api=https://example.com\n```\n\n----------------------------------------\n\nTITLE: Enabling Telemetry in Turborepo using Bash\nDESCRIPTION: This command enables telemetry for Turborepo on the current machine. It allows Turborepo to collect usage data for improving the tool.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/telemetry.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo telemetry enable\n```\n\n----------------------------------------\n\nTITLE: Setting Up Shared Playwright Utilities with peerDependencies (npm)\nDESCRIPTION: Package.json configuration for a shared Playwright utilities package using npm. Uses peerDependencies to access Playwright from consumers without installing it directly in the utility package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/playwright.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n \"name\": \"@repo/playwright-utilities\",\n \"peerDependencies\": {\n   \"playwright\": \"*\"\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Storybook in a Monorepo (Bun)\nDESCRIPTION: Command to initialize a new Storybook application in the apps/storybook directory using Bun (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nbun create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Finding packages with specific tasks using turbo query in Turborepo\nDESCRIPTION: This GraphQL query with turbo query finds all packages that have a 'build' task defined. It demonstrates how to query repository structure programmatically.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/understanding-your-repository.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n> turbo query \"query { packages(filter: { has: { field: TASK_NAME, value: \\\"build\\\"}}) { items { name } } }\"\n{\n  \"data\": {\n    \"packages\": {\n      \"items\": [\n        {\n          \"name\": \"//\"\n        },\n        {\n          \"name\": \"docs\"\n        },\n        {\n          \"name\": \"web\"\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Math Package as Dependency in Bun\nDESCRIPTION: Updates the web application's package.json to include the math package as a dependency using Bun workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_10\n\nLANGUAGE: diff\nCODE:\n```\n  \"dependencies\": {\n+   \"@repo/math\": \"workspace:*\",\n    \"next\": \"latest\",\n    \"react\": \"latest\",\n    \"react-dom\": \"latest\"\n  },\n```\n\n----------------------------------------\n\nTITLE: Global Installation of Turborepo with Bun (Beta)\nDESCRIPTION: This command globally installs Turborepo using Bun package manager (in Beta). It allows for flexible and fast workflows across all projects.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/installation.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbun install turbo --global\n```\n\n----------------------------------------\n\nTITLE: Restoring Default Inputs with $TURBO_DEFAULT$ in Turborepo JSON\nDESCRIPTION: This snippet demonstrates how to use the $TURBO_DEFAULT$ microsyntax to fine-tune the default inputs behavior for a build task, ignoring changes to the README.md file.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"inputs\": [\"$TURBO_DEFAULT$\", \"!README.md\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating package.json for Rust CLI Project\nDESCRIPTION: Defines a minimal package.json file for a Rust CLI project that allows it to be included in Turborepo's task execution system.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/multi-language.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/rust-cli\",\n  \"scripts\": {\n    \"build\": \"cargo build --release\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Turbo Link with Team Scope\nDESCRIPTION: Links repository to a specific team scope, such as a Vercel team slug.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/link.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nturbo link --scope=your-team\n```\n\n----------------------------------------\n\nTITLE: Installing eslint-plugin-turbo with Package Managers\nDESCRIPTION: Commands for installing eslint-config-turbo using different package managers (pnpm, yarn, npm, and bun).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-plugin-turbo.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add eslint-config-turbo --filter=@repo/eslint-config\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn workspace @acme/eslint-config add eslint-config-turbo --dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i --save-dev eslint-config-turbo -w @acme/eslint-config\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun install --dev eslint-config-turbo --filter=@acme/eslint-config\n```\n\n----------------------------------------\n\nTITLE: Example Output of Turborepo Info Command\nDESCRIPTION: Sample output from running `turbo info`, showing CLI details, platform information, and environment variables. This includes version, daemon status, system architecture, memory, and terminal configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/info.mdx#2025-04-22_snippet_1\n\nLANGUAGE: txt\nCODE:\n```\nCLI:\n   Version: 2.3.0\n   Path to executable: /path/to/turbo\n   Daemon status: Running\n   Package manager: pnpm\n\nPlatform:\n   Architecture: aarch64\n   Operating system: macos\n   Available memory (MB): 12810\n   Available CPU cores: 10\n\nEnvironment:\n   CI: None\n   Terminal (TERM): xterm-256color\n   Terminal program (TERM_PROGRAM): tmux\n   Terminal program version (TERM_PROGRAM_VERSION): 3.4\n   Shell (SHELL): /bin/zsh\n   stdin: false\n```\n\n----------------------------------------\n\nTITLE: Adding Internal Package Dependencies with PNPM\nDESCRIPTION: Package.json diff showing how to add an internal package dependency to a Vite application using PNPM workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Task Run Summary in Turborepo\nDESCRIPTION: Command to generate a JSON summary of task runs using the --summarize flag, which creates a detailed report in the .turbo/runs/ directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-9-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo build --summarize\n```\n\n----------------------------------------\n\nTITLE: Creating a Vite-based Turborepo with PNPM\nDESCRIPTION: Command to quickly scaffold a new Turborepo project with Vite using the 'with-vite' example template via PNPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest -e with-vite\n```\n\n----------------------------------------\n\nTITLE: Linking Remote Cache\nDESCRIPTION: Command to link the Turborepo project to the remote cache service.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/basic/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Adding Internal Package Dependencies with Yarn\nDESCRIPTION: Package.json diff showing how to add an internal package dependency to a Vite application using Yarn workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_9\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Working Directory\nDESCRIPTION: Changing the working directory for the Turborepo command using the `--cwd` flag instead of using the directory containing the root turbo.json file.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --cwd=./somewhere/else/in/your/repo\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies Across All Packages with PNPM\nDESCRIPTION: Command to update a dependency to the latest version across all packages using PNPM's recursive option.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm up --recursive typescript@latest\n```\n\n----------------------------------------\n\nTITLE: Checking Turborepo Telemetry Status\nDESCRIPTION: Command to check the current status of telemetry collection in Turborepo. This allows users to verify whether telemetry is enabled or disabled.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/telemetry.mdx#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nturbo telemetry status\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server with PNPM\nDESCRIPTION: This command starts the Next.js development server using PNPM package manager. It enables hot-reloading and allows you to see changes in real-time at http://localhost:3000.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-rollup/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: GitLab CI Configuration with Yarn\nDESCRIPTION: GitLab CI configuration using Yarn as package manager with node_modules caching.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/gitlab-ci.mdx#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nimage: node:latest\nstages:\n  - build\nbuild:\n  stage: build\n  script:\n    - yarn install\n    - yarn build\n    - yarn test\n  cache:\n    paths:\n      - node_modules/\n      - .yarn\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with yarn and example flag\nDESCRIPTION: Command to initialize a new Turborepo with a specific example using yarn package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest --example [example-name]\n```\n\n----------------------------------------\n\nTITLE: Building Angular UI Library\nDESCRIPTION: Command to build the UI library project using Angular CLI. The build artifacts will be stored in the 'dist/' directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/projects/ui/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nng build ui\n```\n\n----------------------------------------\n\nTITLE: Transforming Env Literals to Wildcards (Turborepo 1.10.0)\nDESCRIPTION: Codemod to update environment variable fields with ambiguous contents to use the new wildcard syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_10\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n- \"globalEnv\": [\"THIS_*_IS_LITERAL\"],\n- \"globalPassThroughEnv\": [\"!LITERAL_LEADING_EXCLAMATION\"],\n+  \"globalEnv\": [\"THIS_\\\\*_IS_LITERAL\"],\n+  \"globalPassThroughEnv\": [\"\\\\!LITERAL_LEADING_EXCLAMATION\"],\n  \"pipeline\": {\n    \"build\": {\n-     \"env\": [\"50_PERCENT_OFF*_HAS_SMALL_PRINT\"],\n-     \"passThroughEnv\": [\"**BOLDED**\"],\n+     \"env\": [\"50_PERCENT_OFF\\\\*_HAS_SMALL_PRINT\"],\n+     \"passThroughEnv\": [\"\\\\*\\\\*BOLDED\\\\*\\\\*\"],\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Command to start the Next.js development server using Yarn package manager. This will launch the application in development mode with hot-reload enabled.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-docker/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Remote Cache\nDESCRIPTION: Command to link the Turborepo project to the Remote Cache on Vercel. This should be run from the project root directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-gatsby/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\npnpm dlx turbo link\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Vercel Remote Cache\nDESCRIPTION: Command to link your Turborepo project to Vercel's Remote Cache. This establishes the connection needed to store and retrieve cached build artifacts from the remote cache.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-rollup/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Remote Cache\nDESCRIPTION: Command to link your local Turborepo to your Vercel remote cache. This should be run from the root directory of your Turborepo project after authentication.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vitest/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Running Turbo-Ignore for Web Package Build\nDESCRIPTION: This command checks for changes in the 'web' package and its dependencies for the 'build' task. It's used to potentially skip unnecessary work in CI pipelines.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/constructing-ci.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo-ignore web\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Remote Cache\nDESCRIPTION: Command to link the Turborepo project to Vercel's remote cache.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vue-nuxt/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Building and Running Docker Containers for Turborepo\nDESCRIPTION: Series of commands to set up Docker environment for a Turborepo project, including installing dependencies, creating a network, building images, and running containers in detached mode.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-docker/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# Install dependencies\nyarn install\n\n# Create a network, which allows containers to communicate\n# with each other, by using their container name as a hostname\ndocker network create app_network\n\n# Build prod using new BuildKit engine\nCOMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose -f docker-compose.yml build\n\n# Start prod in detached mode\ndocker-compose -f docker-compose.yml up -d\n```\n\n----------------------------------------\n\nTITLE: Running a Custom Generator\nDESCRIPTION: Command to run a custom generator from anywhere in your monorepo, which will prompt to select an existing generator or create a new one.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/generating-code.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nturbo gen\n```\n\n----------------------------------------\n\nTITLE: Adding ESLint Config as Dependency with Yarn\nDESCRIPTION: Example package.json showing how to add the shared ESLint configuration as a workspace dependency using Yarn. This is required before the shared config can be used by a package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"devDependencies\": {\n    \"@repo/eslint-config\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring package.json for test and watch modes\nDESCRIPTION: Sets up separate scripts for running tests and running tests in watch mode using Vitest.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"test\": \"vitest run\",\n    \"test:watch\": \"vitest --watch\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Telemetry Status in Turborepo using Bash\nDESCRIPTION: This command retrieves the current state of telemetry for Turborepo on the machine. It provides information about whether telemetry is enabled or disabled.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/telemetry.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo telemetry status\n```\n\n----------------------------------------\n\nTITLE: Integrating Internal Packages with Nuxt App using PNPM\nDESCRIPTION: Updates the package.json of a Nuxt application to include an internal package as a dependency using PNPM workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in Multiple Packages with PNPM\nDESCRIPTION: Command to install a dependency in multiple packages simultaneously using PNPM's filter option.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm install jest --save-dev --recursive --filter=web --filter=@repo/ui --filter=@repo/web\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo project with Vite using npx\nDESCRIPTION: This command uses npx to create a new Turborepo project with the Vite starter template. It initializes the project structure and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vite/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-vite\n```\n\n----------------------------------------\n\nTITLE: Implementing ESLint Configuration Package for Next.js (v9 Flat Config)\nDESCRIPTION: Example of an ESLint v9 flat configuration file for Next.js applications that imports shared configuration from a central package. This demonstrates how to use and extend shared ESLint configurations in a Next.js application.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { nextJsConfig } from '@repo/eslint-config/next-js';\n\n/** @type {import(\"eslint\").Linter.Config} */\nexport default nextJsConfig;\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo Project with npm\nDESCRIPTION: This command creates a new Turborepo project using the 'with-npm' example template. It initializes the project structure and installs necessary dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-npm/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-npm\n```\n\n----------------------------------------\n\nTITLE: Controlling Log Prefixes in Turborepo\nDESCRIPTION: Shows how to control the <package>:<task>: prefix for log lines using the --log-prefix flag, which can be set to prefix, none, or auto.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nturbo run dev --log-prefix=none\n```\n\n----------------------------------------\n\nTITLE: Using the dependencies-successful Option with --continue in CLI\nDESCRIPTION: This command shows how to use the new --continue=dependencies-successful flag with turbo to ensure tasks only run when their dependencies have succeeded, providing a middle ground between stopping on failure and continuing regardless.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-5.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo run test --continue=dependencies-successful\n```\n\n----------------------------------------\n\nTITLE: Creating New Svelte Project with NPM\nDESCRIPTION: Commands to create a new Svelte project either in the current directory or in a specified directory using create-svelte\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-svelte/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# create a new project in the current directory\nnpm create svelte@latest\n\n# create a new project in my-app\nnpm create svelte@latest my-app\n```\n\n----------------------------------------\n\nTITLE: Adding shadcn/ui Components with pnpm\nDESCRIPTION: Command to add a specific shadcn/ui component to your monorepo using pnpm. Replace [COMPONENT] with the name of the component you want to add.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/shadcn-ui.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx shadcn@canary add [COMPONENT]\n```\n\n----------------------------------------\n\nTITLE: Advanced Flat Configuration with Custom Rules\nDESCRIPTION: Example of customizing turbo-specific ESLint rules with the modern flat config format, showing how to configure the no-undeclared-env-vars rule with an allowList pattern.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-config-turbo/README.md#2025-04-22_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nimport turboConfig from \"eslint-config-turbo/flat\";\n\nexport default [\n  ...turboConfig,\n  // Other configuration\n  {\n    rules: {\n      \"turbo/no-undeclared-env-vars\": [\n        \"error\",\n        {\n          allowList: [\"^ENV_[A-Z]+$\"],\n        },\n      ],\n    },\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Adding Package Manager Field to Root Package.json\nDESCRIPTION: Package.json configuration showing the packageManager field for various package managers, which helps Turborepo optimize based on the lockfile and ensures consistent package manager usage.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"packageManager\": \"pnpm@9.0.0\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"packageManager\": \"yarn@1.22.19\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"packageManager\": \"npm@10.0.0\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"packageManager\": \"bun@1.2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Any Combinator for Multiple Glob Patterns in Rust\nDESCRIPTION: Demonstrates how to use the 'any' combinator to combine multiple glob patterns into a single matcher that matches any of the input patterns. This allows for efficient matching against multiple patterns with different trees.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::{Glob, Program};\n\nlet any = wax::any([\"**/*.txt\", \"src/**/*.rs\"]).unwrap();\nassert!(any.is_match(\"src/lib.rs\"));\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Cache Authentication\nDESCRIPTION: Commands to authenticate with Vercel and enable remote caching for Turborepo builds.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncd with-solid\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Dry Run Command Example\nDESCRIPTION: Example of the internal command that turbo-ignore builds and executes to determine if a task can be skipped, using filter and dry run flags.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/skipping-tasks.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo run build --filter=@example/web...3c8387ffd98b751305fe3f0284befdd00cbd4610 --dry=json\n```\n\n----------------------------------------\n\nTITLE: Problematic recursive turbo script configuration in package.json\nDESCRIPTION: This code snippet shows a problematic configuration where a script in package.json calls a Turborepo task with the same name, causing an infinite recursive loop. In this example, the 'build' script calls 'turbo run build', which then calls the 'build' script again.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/recursive-turbo-invocations.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build\": \"turbo run build\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Mode in Turborepo\nDESCRIPTION: Illustrates how to control which environment variables are available to a task at runtime, choosing between 'strict' and 'loose' modes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_9\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"envMode\": \"strict\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Errors-Only Output Mode\nDESCRIPTION: Command demonstrating how to use the new errors-only output mode that reduces noise by only showing errors during task execution, improving signal-to-noise ratio during debugging.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-7-0.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n```bash title=\"Terminal\"\nturbo build --output-logs=errors-only\n```\n```\n\n----------------------------------------\n\nTITLE: Adding Package Names (Turborepo 2.0.0)\nDESCRIPTION: Codemod to add a name to package.json in packages that don't have one.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n{\n+ \"name\": \"@repo/ui\",\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Watch Mode Test Script (web)\nDESCRIPTION: Add a 'test:watch' script to the package.json file of the 'web' workspace to run Jest tests in watch mode.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/jest.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"web\"\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"test:watch\": \"jest --watch\"\n  }\n  \"devDependencies\": {\n    \"jest\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Compiling Turborepo with Custom Site URL\nDESCRIPTION: Command to build Turborepo with a custom base URL for error message links using the TURBO_SITE environment variable.\nSOURCE: https://github.com/vercel/turborepo/blob/main/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nTURBO_SITE=\"http://localhost:3000\" cargo build\n```\n\n----------------------------------------\n\nTITLE: Integrating Internal Packages with Nuxt App using Yarn\nDESCRIPTION: Updates the package.json of a Nuxt application to include an internal package as a dependency using Yarn workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_9\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Local Cache on Windows\nDESCRIPTION: Command to delete the local Turborepo cache on Windows systems for testing Remote Cache functionality.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nrd /s /q \"./.turbo/cache\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Design System Monorepo with Turborepo (PNPM)\nDESCRIPTION: Command to create a new Turborepo project using the design-system template with PNPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest -e design-system\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint with eslint-plugin-turbo in Flat Config\nDESCRIPTION: TypeScript configuration for using eslint-plugin-turbo with ESLint v9's flat configuration format to enforce Turborepo-specific rules.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-4.mdx#2025-04-22_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nimport turbo from 'eslint-plugin-turbo';\n\nexport default [\n  {\n    plugins: {\n      turbo,\n    },\n    rules: {\n      'turbo/no-undeclared-env-vars': 'error',\n    },\n  },\n  // Other configuration\n];\n```\n\n----------------------------------------\n\nTITLE: Initializing Telemetry Client in TypeScript\nDESCRIPTION: Sets up the telemetry client by providing package name and version from package.json. Returns a telemetry instance for sending events.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-telemetry/README.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initTelemetry } from \"@turbo/telemetry\";\nimport pkgJson from \"../package.json\";\n\nconst { telemetry } = await initTelemetry({\n  name: pkgJson.name,\n  version: pkgJson.version,\n});\n```\n\n----------------------------------------\n\nTITLE: Listing TURBO_IS_TUI Environment Variable for Turborepo Tasks\nDESCRIPTION: Environment variable that indicates when the Turborepo TUI (Terminal User Interface) is being used. This variable is set to 'true' when the TUI is active.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/system-environment-variables.mdx#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nTURBO_IS_TUI\n```\n\n----------------------------------------\n\nTITLE: Using the Continue Flag for Error Handling\nDESCRIPTION: Using the `--continue` flag to specify how Turborepo should handle current and pending tasks when an error occurs during execution.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --continue\n```\n\n----------------------------------------\n\nTITLE: Starting the Next.js Development Server with pnpm\nDESCRIPTION: Command to start the Next.js development server using pnpm package manager. This will launch the application in development mode with hot-reloading enabled.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-berry/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Installing Turbo with Package Managers\nDESCRIPTION: Commands to install Turbo using different package managers like pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Usage Example in JavaScript\nDESCRIPTION: Example showing how an environment variable might be used in a JavaScript application with an API client.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/docs/rules/no-undeclared-env-vars.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst client = MyAPI({ token: process.env.MY_API_TOKEN });\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Elements\nDESCRIPTION: Command to scaffold new components and other Angular elements using the Angular CLI. Supports generation of components, directives, pipes, services, classes, guards, interfaces, enums, and modules.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Renaming Storybook Build Script for Co-located Stories\nDESCRIPTION: Updated script configuration in package.json to match the specialized build task for Storybook with co-located stories.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_29\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"dev\": \"storybook dev -p 6006\",\n    \"build:storybook\": \"storybook build\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeORM DataSource in TypeScript\nDESCRIPTION: This code snippet shows how to configure a TypeORM DataSource for database connection, including settings for database type, credentials, and entity management.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-typeorm/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DataSource } from \"typeorm\";\n\nexport const AppDataSource = new DataSource({\n    type: \"mysql\", // or your database type\n    host: \"localhost\",\n    port: 3306,\n    username: \"your_username\",\n    password: \"your_password\",\n    database: \"your_database_name\",\n    synchronize: true,\n    logging: false,\n    entities: [...],\n    migrations: [...],\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo Generator Configuration\nDESCRIPTION: Example of how to create a generator configuration file using the PlopTypes from @turbo/gen. The code demonstrates the basic structure for defining a generator with prompts and actions.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-gen/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { PlopTypes } from \"@turbo/gen\";\n\nexport default function generator(plop: PlopTypes.NodePlopAPI): void {\n  // create a generator\n  plop.setGenerator(\"Generator name\", {\n    description: \"Generator description\",\n    // gather information from the user\n    prompts: [\n      ...\n    ],\n    // perform actions based on the prompts\n    actions: [\n      ...\n    ],\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Development Mode for Turborepo\nDESCRIPTION: Command to run development mode for all applications and packages simultaneously.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vue-nuxt/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Building All Packages and Apps in the Turborepo\nDESCRIPTION: Command to build all applications and packages in the monorepo. This executes the build script defined in each project's package.json file.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-rollup/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Dockerfile for Node.js App in Monorepo\nDESCRIPTION: A basic Dockerfile for deploying a Node.js app from a monorepo. It copies package files from the root and the app directory, installs dependencies, and runs the server. This approach causes inefficiencies when the global lockfile changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/docker.mdx#2025-04-22_snippet_0\n\nLANGUAGE: docker\nCODE:\n```\nFROM node:16\n\nWORKDIR /usr/src/app\n\n# Copy root package.json and lockfile\nCOPY package.json ./\nCOPY package-lock.json ./\n\n# Copy the api package.json\nCOPY apps/api/package.json ./apps/api/package.json\n\nRUN npm install\n\n# Copy app source\nCOPY . .\n\nEXPOSE 8080\n\nCMD [ \"node\", \"apps/api/server.js\" ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Changesets Commit Settings\nDESCRIPTION: Configures Changesets to automatically commit version changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/publishing-libraries.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"commit\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turbo Generator\nDESCRIPTION: Command to start the Turborepo code generator, which allows users to create or copy workspaces and add code in a structured way.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-10-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo gen\n```\n\n----------------------------------------\n\nTITLE: Adding Watch Mode Test Script (@repo/ui)\nDESCRIPTION: Add a 'test:watch' script to the package.json file of the '@repo/ui' workspace to run Jest tests in watch mode.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/jest.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/ui\"\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"test:watch\": \"jest --watch\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests in Rust for Turborepo\nDESCRIPTION: Commands to run unit tests for the entire Turborepo project or specific modules using Cargo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncargo test\n```\n\nLANGUAGE: bash\nCODE:\n```\ncargo test -p <module>\n```\n\n----------------------------------------\n\nTITLE: Integrating Internal Packages with Nuxt App using Bun\nDESCRIPTION: Updates the package.json of a Nuxt application to include an internal package as a dependency using Bun workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_11\n\nLANGUAGE: diff\nCODE:\n```\n{\n \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GitLab CI Configuration with Bun\nDESCRIPTION: GitLab CI configuration using Bun runtime with module caching (Beta version).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/gitlab-ci.mdx#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ndefault:\n  image: oven/bun:1.2\n  cache:\n    key:\n      files:\n        - bun.lock\n    paths:\n      - node_modules/\n  before_script:\n      - bun install\n\nbuild:\nscript: - bun run build\n\ntest:\nscript: - bun run test\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Globally\nDESCRIPTION: Commands for installing Turborepo globally using different package managers to provide convenient access to Turborepo CLI commands.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\npnpm install turbo --global\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn global add turbo\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install turbo --global\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun install turbo --global\n```\n\n----------------------------------------\n\nTITLE: Installing TypeScript Config in a Package\nDESCRIPTION: Example of installing the shared TypeScript configuration package as a dev dependency in a project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"devDependencies\": {\n     \"@repo/typescript-config\": \"workspace:*\",\n     \"typescript\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Copying an Existing Package within Monorepo\nDESCRIPTION: Command to create a new package by copying from an existing package in your monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/generating-code.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo gen workspace --copy\n```\n\n----------------------------------------\n\nTITLE: Creating Nx Workspace with Next.js Template\nDESCRIPTION: Command to create a new Nx workspace with a Next.js template, used as the starting point for migration to Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-nx-workspace --preset=next --ci=skip --e2eTestRunner=none --style=tailwind --nextAppDir=true --nextSrcDir=false --packageManager=pnpm --appName=starter\n```\n\n----------------------------------------\n\nTITLE: Configuring Persistent Tasks in Turborepo\nDESCRIPTION: Set 'persistent: true' for long-running tasks like dev servers that won't exit on their own. This prevents other tasks from depending on these non-terminating processes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-7-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n```diff title=\"turbo.json\"\n{\n\t\"pipeline\": {\n\t\t\"dev\": {\n+\t\t\t\"persistent\": true\n\t\t}\n\t}\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Creating Subtract Function in TypeScript\nDESCRIPTION: Implements a simple subtraction function in TypeScript that takes two number parameters and returns their difference.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport const subtract = (a: number, b: number) => a - b;\n```\n\n----------------------------------------\n\nTITLE: Manual Rule Configuration with Flat Config Format\nDESCRIPTION: Custom configuration for eslint-plugin-turbo in the flat config format, specifying individual rules to use.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/README.md#2025-04-22_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nimport turbo from \"eslint-plugin-turbo\";\n\nexport default [\n  {\n    plugins: {\n      turbo,\n    },\n    rules: {\n      \"turbo/no-undeclared-env-vars\": \"error\",\n    },\n  },\n];\n\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests for Turborepo\nDESCRIPTION: Commands to run integration tests for Turborepo using pnpm, including filtering for specific tests.\nSOURCE: https://github.com/vercel/turborepo/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm test -- --filter=turborepo-tests-integration\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm -- turbo run build --filter=cli\npnpm test -F turborepo-tests-integration -- \"run-summary\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --filter=cli\npnpm --filter turborepo-tests-integration test:interactive\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm --filter turborepo-tests-integration test:interactive tests/turbo-help.t\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Dependencies in UI Package (PNPM)\nDESCRIPTION: Command to install Storybook dependencies in the UI package for co-located stories using PNPM.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\npnpm install @storybook/react --filter=@repo/ui --save-dev\n```\n\n----------------------------------------\n\nTITLE: Implementing API Routes with Injected TodoService in Next.js\nDESCRIPTION: This snippet demonstrates how to use the injected TodoService in Next.js API routes to handle GET and POST requests for todo items.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-typeorm/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { inject, type Todo, TodoService } from \"@repo/typeorm-service\";\n\nconst todoService = inject(TodoService);\n\nexport async function GET() {\n  const list = await todoService.findAll();\n\n  return Response.json(list);\n}\n\nexport async function POST(req: Request) {\n  const res: Pick<Todo, \"content\"> = await req.json();\n\n  const entity = await todoService.add(res.content);\n\n  return Response.json(entity);\n}\n```\n\n----------------------------------------\n\nTITLE: Upgrading Turborepo Versions\nDESCRIPTION: Command to run all necessary codemods for upgrading Turborepo versions automatically.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx @turbo/codemod\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Build Commands\nDESCRIPTION: Command sequence for running Turborepo build and lint tasks to verify caching functionality. These commands are executed twice to ensure proper caching behavior is observed.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo build lint\n```\n\n----------------------------------------\n\nTITLE: Enabling Turborepo Telemetry Collection\nDESCRIPTION: Command to re-enable telemetry data collection in Turborepo if previously disabled. This allows users to rejoin the telemetry program.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/telemetry.mdx#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nturbo telemetry enable\n```\n\n----------------------------------------\n\nTITLE: Configuring Turborepo for Vite\nDESCRIPTION: Sample turbo.json configuration for a Vite project, defining build and lint tasks.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"outputs\": [\"dist/**\"]\n    },\n    \"lint\": {\n      \"outputs\": []\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Just-in-Time Package Configuration\nDESCRIPTION: Configuration for a Just-in-Time package that allows direct TypeScript file usage without compilation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/internal-packages.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/ui\",\n  \"exports\": {\n    \"./button\": \"./src/button.tsx\",\n    \"./card\": \"./src/card.tsx\"\n  },\n  \"scripts\": {\n    \"lint\": \"eslint . --max-warnings 0\",\n    \"check-types\": \"tsc --noEmit\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Configuration with Flat Config Format\nDESCRIPTION: Minimal configuration using the recommended preset in ESLint v9's flat config format (eslint.config.js).\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/README.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport turbo from \"eslint-plugin-turbo\";\n\nexport default [turbo.configs[\"flat/recommended\"]];\n\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Dependencies in UI Package (NPM)\nDESCRIPTION: Command to install Storybook dependencies in the UI package for co-located stories using NPM.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @storybook/react --workspace=@repo/ui --save-dev\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo Project with Vue and Nuxt\nDESCRIPTION: Command to initialize a Turborepo project with Vue and Nuxt applications using a specific example template.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-11-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e with-vue-nuxt\n```\n\n----------------------------------------\n\nTITLE: Setting Up Shared Playwright Utilities with peerDependencies (bun)\nDESCRIPTION: Package.json configuration for a shared Playwright utilities package using bun. Uses peerDependencies to access Playwright from consumers without installing it directly in the utility package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/playwright.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/playwright-utilities\",\n  \"peerDependencies\": {\n    \"playwright\": \"workspace:*\"\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Custom API URL Login Command\nDESCRIPTION: Login command with custom API URL specification for alternate Remote Cache providers.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/login.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo login --api=https://acme.com/api\n```\n\n----------------------------------------\n\nTITLE: Stabilizing UI (Turborepo 2.0.0)\nDESCRIPTION: Codemod to rename the experimentalUI key to ui in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n{\n- \"experimentalUI\": true\n+ \"ui\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Installing eslint-config-turbo Package\nDESCRIPTION: Command to install the eslint-config-turbo package as a development dependency.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-config-turbo/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install eslint-config-turbo --save-dev\n```\n\n----------------------------------------\n\nTITLE: Enabling Remote Caching Authentication\nDESCRIPTION: Command to authenticate Turborepo CLI with Vercel account for remote caching\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/fixtures/turbo_trace/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd my-turborepo\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Configuring package.json for hybrid approach\nDESCRIPTION: Sets up scripts in the root package.json for running tests using both Turborepo and Vitest Workspace approaches.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"test:workspace\": \"turbo run test\",\n    \"test:workspace:watch\": \"vitest --watch\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Tasks by Directory in Turborepo\nDESCRIPTION: Shows how to use directory-based filtering to run tasks only for packages in a specific directory or matching a glob pattern.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nturbo lint --filter=\"./packages/utilities/*\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Compiled Package Imports in package.json\nDESCRIPTION: Configuration for compiled packages where imports target the built outputs in the dist directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"imports\": {\n    \"#*\": \"./dist/*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a new Turborepo project with Svelte template\nDESCRIPTION: Command to initialize a new Turborepo project using the Svelte starter template. This creates a project structure with pre-configured Svelte applications and shared packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-svelte/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-svelte\n```\n\n----------------------------------------\n\nTITLE: Testing Turborepo Examples with create-turbo\nDESCRIPTION: Command to test a custom Turborepo example using create-turbo CLI with the --example flag pointed to the example's source code URL.\nSOURCE: https://github.com/vercel/turborepo/blob/main/CONTRIBUTING.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest --example https://github.com/your-org/your-repo/tree/your-branch/...\n```\n\n----------------------------------------\n\nTITLE: Updating Component Imports in Co-located Stories\nDESCRIPTION: Diff showing how to update component imports in story files when co-locating them with the actual components.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_22\n\nLANGUAGE: diff\nCODE:\n```\n- import { Button } from \"@repo/ui/button\";\n+ import { Button } from \"./button\";\n```\n\n----------------------------------------\n\nTITLE: Adding Rust Project to Yarn/NPM/Bun Workspace\nDESCRIPTION: Shows how to configure package.json workspaces property to include a Rust project directory for Yarn, NPM, or Bun.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/multi-language.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"workspaces\": [\n    \"apps/*\"\n    \"packages/*\",\n    \"cli\" // [!code highlight]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Vitest Workspace\nDESCRIPTION: Creates a Vitest workspace configuration file to include all packages in the workspace.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/vitest.mdx#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineWorkspace } from 'vitest/config';\n\nexport default defineWorkspace(['packages/*']);\n```\n\n----------------------------------------\n\nTITLE: Installing UI Package in Storybook (PNPM)\nDESCRIPTION: Command to install the monorepo's UI package into the Storybook application using PNPM.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\npnpm install @repo/ui --filter=storybook\n```\n\n----------------------------------------\n\nTITLE: Adding a Nuxt Application to a Monorepo with Yarn\nDESCRIPTION: Initializes a new Nuxt application in an existing Turborepo monorepo using Nuxi CLI via Yarn.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx nuxi@latest init apps/my-app\n```\n\n----------------------------------------\n\nTITLE: Adding packageManager Field for Yarn\nDESCRIPTION: JSON diff showing how to add the packageManager field to package.json for Yarn.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/upgrading.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n+ \"packageManager\": \"yarn@1.22.19\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ESLint Configuration Package for Turborepo\nDESCRIPTION: This snippet introduces the '@turbo/eslint-config' package, which is a collection of internal ESLint configurations used in the Turborepo project. It serves as a centralized set of linting rules and configurations to maintain code quality and consistency across the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-yarn/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# `@turbo/eslint-config`\n\nCollection of internal eslint configurations.\n```\n\n----------------------------------------\n\nTITLE: Installing UI Package in Storybook (Bun)\nDESCRIPTION: Command to install the monorepo's UI package into the Storybook application using Bun (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nbun install @repo/ui --filter=storybook\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo Project with Next.js and Remix\nDESCRIPTION: Command to create a Turborepo project using the 'kitchen-sink' example, which includes both Next.js and Remix applications.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-11-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e kitchen-sink\n```\n\n----------------------------------------\n\nTITLE: Configuring Biome Scripts in Package.json\nDESCRIPTION: Defines npm scripts for running Biome checks across the project, including a fix option that automatically writes changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/biome.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"format-and-lint\": \"biome check .\",\n    \"format-and-lint:fix\": \"biome check . --write\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server in Turborepo\nDESCRIPTION: Command to start the Next.js development server using Yarn. This will run the development environment for your Next.js application within the Turborepo monorepo setup.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-typeorm/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Vercel Remote Cache using Turbo CLI\nDESCRIPTION: Command to authenticate the Turborepo CLI with your Vercel account to enable Remote Caching for local development.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo login\n```\n\n----------------------------------------\n\nTITLE: Authenticating Turborepo CLI with Vercel\nDESCRIPTION: Command to authenticate the Turborepo CLI with a Vercel account for Remote Caching setup.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-gatsby/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\npnpm dlx turbo login\n```\n\n----------------------------------------\n\nTITLE: Installing UI Package in Storybook (Yarn)\nDESCRIPTION: Command to install the monorepo's UI package into the Storybook application using Yarn workspaces.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nyarn workspace storybook add @repo/ui\n```\n\n----------------------------------------\n\nTITLE: Adding ESLint Config as Dependency with PNPM\nDESCRIPTION: Example package.json showing how to add the shared ESLint configuration as a workspace dependency using PNPM. This is required before the shared config can be used by a package.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"devDependencies\": {\n    \"@repo/eslint-config\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Tasks with NPM\nDESCRIPTION: Shows how to execute Turborepo tasks using the NPM package manager by calling the scripts defined in package.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Displaying Package Manager Support Table in Markdown\nDESCRIPTION: A markdown table showing supported package managers for Turborepo, including pnpm, npm, yarn, and bun with their respective version requirements.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/support-policy.mdx#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Package manager | Supported                       |\n| --------------- | ------------------------------- |\n| pnpm 8+         | Yes                             |\n| npm 8+          | Yes                             |\n| yarn 1+         | Yes (Includes Yarn Plug'n'Play) |\n| bun 1.2+        | Beta                            |\n```\n\n----------------------------------------\n\nTITLE: Excluding Existing Errors with Boundaries Flag\nDESCRIPTION: Shows how to use the boundaries command with the --exclude-errors flag to enforce boundaries for new code while allowing existing issues.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-3.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo boundaries --exclude-errors\n```\n\n----------------------------------------\n\nTITLE: Describing Turborepo CLI Structure in Markdown\nDESCRIPTION: This markdown snippet explains that the Turborepo CLI is a thin wrapper around the turborepo-lib package, which contains the main logic for Turborepo. It provides context for the project structure and the relationship between the CLI and the core library.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# turbo cli\n\nA thin wrapper around `turborepo-lib`, which actually contains the main logic for Turborepo.\n```\n\n----------------------------------------\n\nTITLE: Developing Turborepo Applications\nDESCRIPTION: Commands to navigate to the project directory and start development mode for all apps and packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/basic/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Defining parallel development scripts\nDESCRIPTION: Example of package.json scripts for running Next.js and Tailwind CSS in parallel during development.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"dev\": \"next\",\n    \"dev:css\": \"tailwindcss -i ./src/input.css -o ./dist/output.css --watch\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Flat Configuration Setup in eslint.config.js\nDESCRIPTION: Example of importing and using turbo configuration with the modern flat config format in eslint.config.js.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-config-turbo/README.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport turboConfig from \"eslint-config-turbo/flat\";\n\nexport default [\n  ...turboConfig,\n  // Other configuration\n];\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: This command starts the Next.js development server using Yarn. It allows you to run and test your Next.js application locally.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-yarn/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Just-in-Time Package Imports in package.json\nDESCRIPTION: Configuration for Just-in-Time packages where imports target source code directly in the src directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"imports\": {\n    \"#*\": \"./src/*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Package.json Workspaces for Yarn/NPM/Bun\nDESCRIPTION: Package.json configuration for defining workspaces in Yarn, NPM, or Bun, specifying that packages are located in the apps directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"workspaces\": [\"apps/*\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Build with Yarn\nDESCRIPTION: Executes the Turborepo build command using Yarn as the package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx turbo build\n```\n\n----------------------------------------\n\nTITLE: Adding Math Package as Dependency in pnpm\nDESCRIPTION: Updates the web application's package.json to include the math package as a dependency using pnpm workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\n  \"dependencies\": {\n+   \"@repo/math\": \"workspace:*\",\n    \"next\": \"latest\",\n    \"react\": \"latest\",\n    \"react-dom\": \"latest\"\n  },\n```\n\n----------------------------------------\n\nTITLE: Using Turborepo Codemod CLI for Automatic Migrations\nDESCRIPTION: Command for running Turborepo codemods to automatically update codebases when features are deprecated. Includes options for dry runs and printing changed output for comparison.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-1-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx @turbo/codemod <transform> <path>\n```\n\n----------------------------------------\n\nTITLE: Adding ESLint Config with Bun (Legacy)\nDESCRIPTION: Example package.json showing how to add the shared ESLint configuration as a dependency using Bun with v8 legacy config. Note that it's in dependencies rather than devDependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_12\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"dependencies\": {\n    \"@repo/eslint-config\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a new Turborepo with Vite and React\nDESCRIPTION: Command to initialize a new Turborepo project using the Vite React template. This creates a monorepo structure with all the necessary configurations and packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vite-react/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-vite-react\n```\n\n----------------------------------------\n\nTITLE: Enabling Remote Caching Authentication\nDESCRIPTION: Command to authenticate Turborepo CLI with Vercel account for remote caching.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-yarn/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Running tests across the monorepo\nDESCRIPTION: Commands to run test suites for all applications and packages in the monorepo, including options for unit tests and end-to-end tests using Jest and Playwright.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Will launch a test suites for all the app & packages with the supported `test` script.\npnpm run test\n\n# You can launch e2e testes with `test:e2e`\npnpm run test:e2e\n\n# See `@repo/jest-config` to customize the behavior.\n```\n\n----------------------------------------\n\nTITLE: Adding shadcn/ui Components with yarn/npm\nDESCRIPTION: Command to add a specific shadcn/ui component to your monorepo using yarn or npm. Replace [COMPONENT] with the name of the component you want to add.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/shadcn-ui.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@canary add [COMPONENT]\n```\n\n----------------------------------------\n\nTITLE: Simple turbo-ignore Example\nDESCRIPTION: Example showing the basic usage of turbo-ignore to check for changes in the current workspace and its dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-ignore/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo-ignore\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Tasks with PNPM\nDESCRIPTION: Shows how to execute Turborepo tasks using the PNPM package manager by calling the scripts defined in package.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/running-tasks.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Defining Package Name in Markdown\nDESCRIPTION: Package name definition for internal ESLint configurations collection using markdown formatting.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-docker/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Adding ESLint Config with PNPM (Legacy)\nDESCRIPTION: Example package.json showing how to add the shared ESLint configuration as a dependency using PNPM with v8 legacy config. Note that it's in dependencies rather than devDependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_9\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"dependencies\": {\n    \"@repo/eslint-config\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server\nDESCRIPTION: Commands to start the Next.js development server using different package managers. The server will typically run on localhost:3000 and supports hot reloading for instant feedback during development.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vitest/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\n----------------------------------------\n\nTITLE: Package Name Reference in Markdown\nDESCRIPTION: A markdown code snippet displaying the package name using backtick formatting. This is used in the README header to clearly identify the package being documented.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-changesets/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Specifying Team for Turborepo Remote Cache\nDESCRIPTION: Sets the slug of the Remote Cache team, useful for non-interactive shells. Can be used alone or in combination with the --token flag. This value can also be set using the TURBO_TEAM environment variable.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --team=my-team\nturbo run build --team=my-team --token=xxxxxxxxxxxxxxxxx\n```\n\n----------------------------------------\n\nTITLE: Using the Transform Command in Turborepo Codemods\nDESCRIPTION: The `transform` command (which is the default and can be omitted) runs a single codemod transformation on your codebase. It offers options for bypassing Git safety checks, listing available transformers, and performing dry runs without making file changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-codemod/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUsage: @turbo/codemod transform [options] [transform] [path]\n       @turbo/codemod [options] [transform] [path]\n\nApply a single code transformation to a project\n\nArguments:\n  transform   The transformer to run\n  path        Directory where the transforms should be applied\n\nOptions:\n  --force     Bypass Git safety checks and forcibly run codemods (default: false)\n  --list      List all available transforms (default: false)\n  --dry       Dry run (no changes are made to files) (default: false)\n  --print     Print transformed files to your terminal (default: false)\n  -h, --help  display help for command\n```\n\n----------------------------------------\n\nTITLE: Dockerfile Configuration for Remote Caching\nDESCRIPTION: Docker configuration snippet that passes Turborepo Remote Cache credentials as build arguments to enable cache sharing during Docker builds. This allows Docker builds to leverage the Turborepo remote cache.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/docker.mdx#2025-04-22_snippet_4\n\nLANGUAGE: docker\nCODE:\n```\nARG TURBO_TEAM\nENV TURBO_TEAM=$TURBO_TEAM\n\nARG TURBO_TOKEN\nENV TURBO_TOKEN=$TURBO_TOKEN\n\nRUN yarn turbo run build\n```\n\n----------------------------------------\n\nTITLE: Linting Turborepo Source Code\nDESCRIPTION: Command to run linting checks on the project source code.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/non-monorepo/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npnpm turbo lint\n```\n\n----------------------------------------\n\nTITLE: Extending ESLint Configuration with App-Specific Rules (v9)\nDESCRIPTION: Example showing how to extend the shared ESLint configuration with additional app-specific rules using ESLint v9 flat config format. This allows for custom linting rules while maintaining the base shared configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { nextJsConfig } from '@repo/eslint-config/next-js';\n\n/** @type {import(\"eslint\").Linter.Config} */\nexport default [\n  ...nextJsConfig,\n  // Other configurations\n];\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with yarn\nDESCRIPTION: Command to initialize a new Turborepo using yarn package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Remix Project Dependencies\nDESCRIPTION: Command to install the local dependencies for the Remix project before development.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/kitchen-sink/apps/blog/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Basic turbo-ignore Usage\nDESCRIPTION: The basic command to use turbo-ignore as an Ignored Build Step in Vercel to automatically determine if an app needs deploying.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-ignore/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ npx turbo-ignore\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Angular UI Library\nDESCRIPTION: Command to execute unit tests for the UI library project using Karma test runner via Angular CLI.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/projects/ui/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nng test ui\n```\n\n----------------------------------------\n\nTITLE: Adding ESLint Config with NPM (Legacy)\nDESCRIPTION: Example package.json showing how to add the shared ESLint configuration as a dependency using NPM with v8 legacy config. Note that it's in dependencies rather than devDependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_11\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"dependencies\": {\n    \"@repo/eslint-config\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Example with PNPM\nDESCRIPTION: Commands to bootstrap a Turborepo project using PNPM package manager. Supports both official examples and community GitHub repositories.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/examples.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Use an example listed below\npnpm dlx create-turbo@latest --example [example-name]\n\n# Use a GitHub repository from the community\npnpm dlx create-turbo@latest --example [github-url]\n```\n\n----------------------------------------\n\nTITLE: Authenticating Turborepo CLI with Vercel\nDESCRIPTION: This command authenticates the Turborepo CLI with your Vercel account, enabling remote caching functionality. It should be run from the root directory of the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-npm/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Adding ESLint Config with Yarn (Legacy)\nDESCRIPTION: Example package.json showing how to add the shared ESLint configuration as a dependency using Yarn with v8 legacy config. Note that it's in dependencies rather than devDependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_10\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"dependencies\": {\n    \"@repo/eslint-config\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Supported Turborepo Binaries in Markdown\nDESCRIPTION: A markdown list of supported Turborepo binaries for different platforms and architectures, including macOS, Linux, and Windows on x86_64 and ARM 64.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/support-policy.mdx#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `turbo-darwin-64` (macOS with Intel chips)\n- `turbo-darwin-arm64` (macOS with Apple Silicon)\n- `turbo-linux-64`\n- `turbo-linux-arm64`\n- `turbo-windows-64`\\*\n- `turbo-windows-arm64`\\*\n```\n\n----------------------------------------\n\nTITLE: Using Fallback with Parent Commit\nDESCRIPTION: Example showing how to use the --fallback flag to compare against just the parent commit when no last deployment exists.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-ignore/README.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo-ignore --fallback=HEAD^\n```\n\n----------------------------------------\n\nTITLE: Extended Turborepo Configuration Options\nDESCRIPTION: Shows the new configuration options available in turbo.json for customizing environment mode, daemon behavior, and cache directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-1-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"envMode\": \"loose\",\n  \"daemon\": false,\n  \"cacheDir\": \"./my-custom-directory/\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Comment in Turborepo Project\nDESCRIPTION: A comment line indicating a reminder to modify something to miss the cache in a Turborepo project. This could be used for testing or debugging purposes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-shell-commands/packages/pkg-b/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Plain Text\nCODE:\n```\nChange me to miss cache!\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Development Server\nDESCRIPTION: Command to start the Turborepo development server. After running this command, you can access your application at http://localhost:3000.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-gatsby/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo dev\n```\n\n----------------------------------------\n\nTITLE: Basic Turbo-Ignore Usage for Testing\nDESCRIPTION: Command to check if tests for the web workspace have changed since the parent commit. This helps determine if test execution can be skipped.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/skipping-tasks.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo-ignore web --task=test\n```\n\n----------------------------------------\n\nTITLE: Defining TypeORM Repository and Service with Dependency Injection in TypeScript\nDESCRIPTION: This snippet demonstrates how to define a TodoRepository using TypeORM's @Repository decorator and a TodoService using a custom @InjectAble decorator for dependency injection.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-typeorm/README.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n@Repository\nexport class TodoRepository {...}\n\n@InjectAble\nexport class TodoService {\n    constructor(private todoRepo: TodoRepository) {}\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Lint Script to Root Package\nDESCRIPTION: Example root package.json that adds a 'lint' script that uses Turborepo to run the lint task across all packages. This provides a convenient way to lint all code in the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/eslint.mdx#2025-04-22_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"lint\": \"turbo run lint\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests via Karma test runner.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Creating a Package.json for Math Package in npm\nDESCRIPTION: Defines the package.json file for a math utilities package in an npm workspace. It includes package name, type, scripts for development and building, exports configuration for multiple entry points, and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/math\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"tsc --watch\",\n    \"build\": \"tsc\"\n  },\n  \"exports\": {\n    \"./add\": {\n      \"types\": \"./src/add.ts\",\n      \"default\": \"./dist/add.js\"\n    },\n    \"./subtract\": {\n      \"types\": \"./src/subtract.ts\",\n      \"default\": \"./dist/subtract.js\"\n    }\n  },\n  \"devDependencies\": {\n    \"@repo/typescript-config\": \"*\",\n    \"typescript\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Build with PNPM in Turborepo\nDESCRIPTION: Command to run the build script defined in package.json using PNPM package manager in a Turborepo project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/caching.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Updating GitIgnore for Turborepo\nDESCRIPTION: Adding Turborepo-specific entries to .gitignore file.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/add-to-existing-repository.mdx#2025-04-22_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\n+ .turbo\n```\n\n----------------------------------------\n\nTITLE: Using Fallback with Multiple Commits\nDESCRIPTION: Example showing how to use the --fallback flag to compare against multiple previous commits (10 in this case) when no last deployment exists.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-ignore/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo-ignore --fallback=HEAD~10\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components for UI Library\nDESCRIPTION: Command to generate a new component for the UI library project using Angular CLI. It specifies the project name to ensure the component is added to the correct project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/projects/ui/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nng generate component component-name --project ui\n```\n\n----------------------------------------\n\nTITLE: Initializing Storybook in a Monorepo (NPM)\nDESCRIPTION: Command to initialize a new Storybook application in the apps/storybook directory using NPM.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo Project with Prisma Integration\nDESCRIPTION: This command initializes a new Turborepo project with Prisma integration using a community-supported example. It provides a quick start for developers looking to use Prisma in their Turborepo setup.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/prisma.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e with-prisma\n```\n\n----------------------------------------\n\nTITLE: Authentication for Turborepo Remote Cache on Local Machine\nDESCRIPTION: Commands to authenticate and link your local Turborepo to Vercel Remote Cache. This allows developers to benefit from distributed caching during local development.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/free-vercel-remote-cache.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo login\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Without Task Parameters\nDESCRIPTION: When running the `turbo run` command without specifying any tasks, Turborepo will display available tasks for the packages in the repository.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo run\n```\n\n----------------------------------------\n\nTITLE: Starting a Svelte Development Server\nDESCRIPTION: Commands to start a development server for a Svelte project. Includes an option to automatically open the app in a new browser tab.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-svelte/apps/web/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n\n# or start the server and open the app in a new browser tab\nnpm run dev -- --open\n```\n\n----------------------------------------\n\nTITLE: Testing 'basic' example changes in Turborepo\nDESCRIPTION: This command is used for testing end-to-end workflow changes in the 'basic' example of Turborepo. It requires pushing code updates to a GitHub branch first.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/create-turbo/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./dist/cli.js -e [GITHUB_BRANCH]/examples/basic\n```\n\n----------------------------------------\n\nTITLE: Using @turbo/workspaces Node API\nDESCRIPTION: Example of using the Node API to detect the current package manager and convert to pnpm if necessary. It demonstrates the usage of getWorkspaceDetails and convert functions.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-workspaces/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { convert, getWorkspaceDetails } from \"@turbo/workspaces\";\n\n// detect the package manager\nconst project = getWorkspaceDetails({\n  root: process.cwd(),\n});\n\n// if the package manager is not pnpm, convert to pnpm\nif (project.packageManager !== \"pnpm\") {\n  await convert({\n    root: process.cwd(),\n    to: \"pnpm\",\n    options: {\n      dry: false,\n      install: true,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Local Cache on Unix-like Systems\nDESCRIPTION: Command to delete the local Turborepo cache on Unix-like systems for testing Remote Cache functionality.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/remote-caching.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nrm -rf ./.turbo/cache\n```\n\n----------------------------------------\n\nTITLE: Installing UI Package in Storybook (NPM)\nDESCRIPTION: Command to install the monorepo's UI package into the Storybook application using NPM workspaces.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @repo/ui --workspace=storybook\n```\n\n----------------------------------------\n\nTITLE: Adding Turbo Cache Key File to .gitignore\nDESCRIPTION: This diff shows how to add the generated turbo-cache-key.json file to .gitignore since it's environment-dependent and shouldn't be committed to source control.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/handling-platforms.mdx#2025-04-22_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n+ turbo-cache-key.json\n```\n\n----------------------------------------\n\nTITLE: Nx Configuration Files\nDESCRIPTION: Nx configuration files (nx.json and project.json) showing the more complex configuration required for Nx. These files demonstrate the plugin-based approach and additional configuration that Nx requires compared to Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"./node_modules/nx/schemas/nx-schema.json\",\n  \"namedInputs\": {\n    \"default\": [\"{projectRoot}/**/*\", \"sharedGlobals\"],\n    \"production\": [\n      \"default\",\n      \"!{projectRoot}/.eslintrc.json\",\n      \"!{projectRoot}/eslint.config.cjs\",\n      \"!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)\",\n      \"!{projectRoot}/tsconfig.spec.json\",\n      \"!{projectRoot}/jest.config.[jt]s\",\n      \"!{projectRoot}/src/test-setup.[jt]s\",\n      \"!{projectRoot}/test-setup.[jt]s\"\n    ],\n    \"sharedGlobals\": [\"{workspaceRoot}/.github/workflows/ci.yml\"]\n  },\n  \"nxCloudId\": \"6789ec521d90a2165398f39a\",\n  \"plugins\": [\n    {\n      \"plugin\": \"@nx/next/plugin\",\n      \"options\": {\n        \"startTargetName\": \"start\",\n        \"buildTargetName\": \"build\",\n        \"devTargetName\": \"dev\",\n        \"serveStaticTargetName\": \"serve-static\"\n      }\n    },\n    {\n      \"plugin\": \"@nx/playwright/plugin\",\n      \"options\": {\n        \"targetName\": \"e2e\"\n      }\n    },\n    {\n      \"plugin\": \"@nx/eslint/plugin\",\n      \"options\": {\n        \"targetName\": \"lint\"\n      }\n    },\n    {\n      \"plugin\": \"@nx/jest/plugin\",\n      \"options\": {\n        \"targetName\": \"test\"\n      }\n    }\n  ],\n  \"targetDefaults\": {\n    \"e2e-ci--**/*\": {\n      \"dependsOn\": [\"^build\"]\n    }\n  },\n  \"generators\": {\n    \"@nx/next\": {\n      \"application\": {\n        \"style\": \"tailwind\",\n        \"linter\": \"eslint\"\n      }\n    }\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"starter\",\n  \"$schema\": \"../../node_modules/nx/schemas/project-schema.json\",\n  \"sourceRoot\": \"apps/starter\",\n  \"projectType\": \"application\",\n  \"tags\": [],\n  \"// targets\": \"to see all targets run: nx show project starter --web\",\n  \"targets\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Package.json for Math Package in yarn\nDESCRIPTION: Defines the package.json file for a math utilities package in a yarn workspace. It includes package name, type, scripts for development and building, exports configuration for multiple entry points, and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/math\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"tsc --watch\",\n    \"build\": \"tsc\"\n  },\n  \"exports\": {\n    \"./add\": {\n      \"types\": \"./src/add.ts\",\n      \"default\": \"./dist/add.js\"\n    },\n    \"./subtract\": {\n      \"types\": \"./src/subtract.ts\",\n      \"default\": \"./dist/subtract.js\"\n    }\n  },\n  \"devDependencies\": {\n    \"@repo/typescript-config\": \"workspace:*\",\n    \"typescript\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Vercel for Remote Caching in Turborepo\nDESCRIPTION: Commands to authenticate the Turborepo CLI with your Vercel account, enabling remote caching capabilities. This requires navigating to your Turborepo directory and executing the login command.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vitest/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd my-turborepo\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Globally\nDESCRIPTION: Commands to install Turborepo globally using different package managers. This allows running turbo from anywhere in your project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-7-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n```bash title=\"Terminal\"\nnpm install turbo --global\n```\n```\n\nLANGUAGE: bash\nCODE:\n```\n```bash title=\"Terminal\"\nyarn global add turbo\n```\n```\n\nLANGUAGE: bash\nCODE:\n```\n```bash title=\"Terminal\"\npnpm install turbo --global\n```\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to execute end-to-end tests using a chosen testing platform. Requires first installing a package that implements e2e testing capabilities.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/docs/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Dependencies in UI Package (Yarn)\nDESCRIPTION: Command to install Storybook dependencies in the UI package for co-located stories using Yarn.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nyarn workspace @repo/ui add @storybook/react --dev\n```\n\n----------------------------------------\n\nTITLE: Building Turborepo Applications\nDESCRIPTION: Commands to navigate to the project directory and build all apps and packages in the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/basic/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Developing all apps and packages in Turborepo\nDESCRIPTION: Commands to navigate to the project directory and run development servers for all applications and packages in the monorepo using Yarn.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-berry/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Setting up a Turborepo Angular project using npx\nDESCRIPTION: Command to initialize a new Turborepo project with the Angular template. This creates a full monorepo setup with all the packages and configurations described in the documentation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-angular\n```\n\n----------------------------------------\n\nTITLE: Simplifying Next.js Configuration\nDESCRIPTION: Simplified Next.js configuration file after removing Nx plugins, showing a basic Next.js configuration without Nx-specific code.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_6\n\nLANGUAGE: js\nCODE:\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {};\n\nmodule.exports = nextConfig;\n```\n\n----------------------------------------\n\nTITLE: Running bump-version.sh Script for @turbo/repository Version Updates\nDESCRIPTION: A reference to the bump-version.sh script used to update package versions before releasing the @turbo/repository library. This script must be run and its changes merged to main before triggering the library release workflow.\nSOURCE: https://github.com/vercel/turborepo/blob/main/release.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nbump-version.sh\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo tasks\nDESCRIPTION: Command to run build and lint tasks using Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nturbo build lint\n```\n\n----------------------------------------\n\nTITLE: Creating a new Turborepo project with Berry\nDESCRIPTION: Command to initialize a new Turborepo project using the Berry (Yarn v2+) template via the create-turbo CLI.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-berry/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-berry\n```\n\n----------------------------------------\n\nTITLE: Creating a New Turborepo Monorepo (Yarn)\nDESCRIPTION: Command to create a new basic Turborepo monorepo using Yarn package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Initializing Storybook in a Monorepo (Yarn)\nDESCRIPTION: Command to initialize a new Storybook application in the apps/storybook directory using Yarn.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nyarn create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Creating a Design System Monorepo with Turborepo (NPM)\nDESCRIPTION: Command to create a new Turborepo project using the design-system template with NPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e design-system\n```\n\n----------------------------------------\n\nTITLE: Pipeline Configuration with Task Dependencies\nDESCRIPTION: Example of the new `pipeline` configuration for Turborepo that defines task dependencies. This configuration specifies how npm scripts in the monorepo relate to each other, with topological relationships indicated by the `^` symbol for optimal task scheduling.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-0-4-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"turbo\": {\n    \"pipeline\": {\n      \"build\": {\n        // This `^` tells `turbo` that this pipeline target relies on a topological target being completed.\n        // In english, this reads as: \"this package's `build` command depends on its dependencies' or\n        // devDependencies' `build` command being completed\"\n        \"dependsOn\": [\"^build\"]\n      },\n      \"test\": {\n        //  `dependsOn` without `^` can be used to express the relationships between tasks at the package level.\n        // In English, this reads as: \"this package's `test` command depends on its `lint` and `build` command first being completed\"\n        \"dependsOn\": [\"lint\", \"build\"]\n      },\n      \"lint\": {},\n      \"dev\": {}\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Internal Packages with Nuxt App using NPM\nDESCRIPTION: Updates the package.json of a Nuxt application to include an internal package as a dependency using NPM workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_10\n\nLANGUAGE: diff\nCODE:\n```\n{\n \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Example with Bun\nDESCRIPTION: Commands to bootstrap a Turborepo project using Bun package manager (Beta). Supports both official examples and community GitHub repositories.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/examples.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Use an example listed below\nbunx create-turbo@latest --example [example-name]\n\n# Use a GitHub repository from the community\nbunx create-turbo@latest --example [github-url]\n```\n\n----------------------------------------\n\nTITLE: Running the Set-Default-Outputs Codemod\nDESCRIPTION: Command to run the codemod that automatically adds the appropriate output declarations to existing Turborepo configurations, helping with migration to version 1.7.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-7-0.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n```bash title=\"Terminal\"\nnpx @turbo/codemod set-default-outputs\n```\n```\n\n----------------------------------------\n\nTITLE: Getting Help with Angular CLI\nDESCRIPTION: Command to access the built-in help system of the Angular CLI which provides information about available commands and options.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/docs/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Installing @turbo/gen Package with pnpm\nDESCRIPTION: Command to install the @turbo/gen package as a development dependency using pnpm package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-gen/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @turbo/gen --save-dev\n```\n\n----------------------------------------\n\nTITLE: Building Turborepo Projects\nDESCRIPTION: Commands to navigate to the project directory and build all apps and packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-yarn/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Developing Turborepo Apps and Packages\nDESCRIPTION: This command starts the development environment for all apps and packages in the Turborepo project. It should be run from the root directory of the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-npm/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Creating a Nuxt-powered Turborepo with PNPM\nDESCRIPTION: Creates a new Turborepo project using the 'with-vue-nuxt' example template via PNPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/nuxt.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest -e with-vue-nuxt\n```\n\n----------------------------------------\n\nTITLE: Updating .gitignore for Turborepo\nDESCRIPTION: Adding the .turbo directory to the .gitignore file to exclude Turborepo's local cache and repository information from version control.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_2\n\nLANGUAGE: txt\nCODE:\n```\n.turbo\n```\n\n----------------------------------------\n\nTITLE: Developing All Packages and Apps in the Turborepo\nDESCRIPTION: Command to start the development servers for all applications and packages in the monorepo. This runs the dev script in each project concurrently.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-rollup/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Exports Field in package.json for a Math Package\nDESCRIPTION: Example of configuring the exports field in package.json to specify multiple entrypoints for a math package. This approach avoids barrel files and enables IDE autocompletion by exposing specific modules.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/structuring-a-repository.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"exports\": {\n    \".\": \"./src/constants.ts\",\n    \"./add\": \"./src/add.ts\",\n    \"./subtract\": \"./src/subtract.ts\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Turborepo Docker Project\nDESCRIPTION: Command for bootstrapping a new Turborepo project with Docker configuration using the create-turbo CLI tool.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-docker/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-docker\n```\n\n----------------------------------------\n\nTITLE: Enhanced Circular Dependency Detection Output\nDESCRIPTION: Terminal output comparing the improved circular dependency detection in Turborepo 2.4, which now includes specific recommendations for breaking dependency cycles.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-4.mdx#2025-04-22_snippet_3\n\nLANGUAGE: txt\nCODE:\n```\n  × Invalid package dependency graph:\n  ╰─▶ Cyclic dependency detected:\n  │     @repo/logger, blog, storefront, @repo/ui\n  │     The cycle can be broken by removing any of these sets of dependencies:\n  │     { @repo/ui -> @repo/logger, @repo/ui -> storefront }\n  │     { @repo/logger -> @repo/ui, @repo/ui -> storefront }\n  │\n  ╰─▶   api, admin\n        The cycle can be broken by removing any of these sets of dependencies:\n        { admin -> api }\n        { api -> admin }\n```\n\n----------------------------------------\n\nTITLE: Adding Rust Project to pnpm Workspace\nDESCRIPTION: Demonstrates how to configure a pnpm workspace to include a Rust project directory alongside JavaScript packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/multi-language.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\npackages:\n    - \"apps/*\"\n    - \"packages/*\"\n    - \"cli\" // [!code highlight]\n```\n\n----------------------------------------\n\nTITLE: Transformer Type Definition in TypeScript\nDESCRIPTION: The required interface for all transformer modules. Each transformer must export a default object matching this structure, which includes metadata and the transformation function.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-codemod/src/transforms/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport type Transformer = {\n  name: string;\n  description: string;\n  introducedIn: string;\n  transformer: (args: TransformerArgs) => TransformerResults;\n};\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with yarn and GitHub URL\nDESCRIPTION: Command to initialize a new Turborepo with a custom example from GitHub using yarn package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest --example [github-url]\n```\n\n----------------------------------------\n\nTITLE: Building the Application\nDESCRIPTION: Commands to build all apps and packages in the monorepo using different package managers (npm, yarn, pnpm, bun).\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# Using npm\nnpm run build\n\n# Using yarn\nyarn run build\n\n# Using pnpm\npnpm run build\n\n# Using bun\nbun run build\n```\n\n----------------------------------------\n\nTITLE: Installing eslint-plugin-turbo\nDESCRIPTION: Command to install the eslint-plugin-turbo package as a development dependency after installing ESLint.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install eslint-plugin-turbo --save-dev\n```\n\n----------------------------------------\n\nTITLE: Starting a SolidStart Development Server\nDESCRIPTION: Commands for starting a SolidStart development server after installing dependencies. Includes an option to automatically open the app in a new browser tab.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/apps/docs/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n\n# or start the server and open the app in a new browser tab\nnpm run dev -- --open\n```\n\n----------------------------------------\n\nTITLE: Updating Turborepo to Version 1.11\nDESCRIPTION: Command to update Turborepo to the latest version using npx. This ensures users have access to the new Rust-based foundation and other improvements.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-11-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx @turbo/codemod migrate\n```\n\n----------------------------------------\n\nTITLE: Building Turborepo Application\nDESCRIPTION: Command to build the Next.js application using Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/non-monorepo/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npnpm turbo build\n```\n\n----------------------------------------\n\nTITLE: Setting Up Alias for Manual Testing of Turborepo\nDESCRIPTION: Bash commands to set up an alias for the locally built Turborepo binary and use it for testing.\nSOURCE: https://github.com/vercel/turborepo/blob/main/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nalias devturbo='~/projects/turbo/target/debug/turbo'\ndevturbo run build --skip-infer\n```\n\n----------------------------------------\n\nTITLE: Building Turborepo Project\nDESCRIPTION: Command to build all apps and packages in the Turborepo project. This should be run from the project root directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-gatsby/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with pnpm\nDESCRIPTION: Command to install Turborepo as a dev dependency using pnpm.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install turbo --save-dev\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Remote Cache\nDESCRIPTION: This command links your Turborepo project to the remote cache on Vercel. It should be run from the root directory of the project after authentication.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-npm/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Importing from Package Entrypoints Using Exports Field\nDESCRIPTION: Demonstrates how to import functions and constants from a package that uses the exports field to define multiple entrypoints. Shows imports from both the default and named subpaths.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/structuring-a-repository.mdx#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { GRAVITATIONAL_CONSTANT, SPEED_OF_LIGHT } from '@repo/math';\nimport { add } from '@repo/math/add';\nimport { subtract } from '@repo/math/subtract';\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Design System Starter\nDESCRIPTION: Command to create a new Turborepo project using the with-changesets template. This sets up a design system monorepo with Changesets integration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-changesets/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-changesets\n```\n\n----------------------------------------\n\nTITLE: Using Remote-Only Cache Mode in Turborepo\nDESCRIPTION: Ignores the local filesystem cache for all tasks, using Remote Cache for reading and caching task outputs. This flag is deprecated and will be replaced by the --cache flag in a future release.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --remote-only\n```\n\n----------------------------------------\n\nTITLE: Starting the Application\nDESCRIPTION: Commands to start the application in development mode using different package managers (yarn, pnpm, bun).\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# Using yarn\nyarn run dev\n\n# Using pnpm\npnpm run dev\n\n# Using bun\nbun run dev\n```\n\n----------------------------------------\n\nTITLE: Incorrect Turborepo Configuration Without Environment Variables\nDESCRIPTION: Example of incorrect turbo.json configuration where environment variables are used but not declared in either globalEnv or pipeline env settings.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/docs/rules/no-undeclared-env-vars.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\"dist/**\", \".next/**\", \"!.next/cache/**\"]\n    },\n    \"lint\": {},\n    \"dev\": {\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing shadcn/ui in a Monorepo with Bun\nDESCRIPTION: Command to initialize shadcn/ui in a new monorepo using Bun package manager (beta). Uses the canary version which supports monorepo setups.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/shadcn-ui.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbunx shadcn@canary init\n```\n\n----------------------------------------\n\nTITLE: Creating a Vite-based Turborepo with NPM\nDESCRIPTION: Command to quickly scaffold a new Turborepo project with Vite using the 'with-vite' example template via NPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e with-vite\n```\n\n----------------------------------------\n\nTITLE: Advanced Legacy ESLint Configuration with Rule Customization\nDESCRIPTION: Advanced ESLint configuration using the legacy .eslintrc format with custom rule settings. This shows how to explicitly include the plugin and configure the environment variable checking rules.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-config-turbo.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"plugins\": [\"turbo\"],\n  \"rules\": {\n    \"turbo/no-undeclared-env-vars\": [\n      \"error\",\n      {\n        \"allowList\": [\"^ENV_[A-Z]+$\"]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting the Turborepo Development Server\nDESCRIPTION: Command to start the Turborepo development server. This launches the application in development mode and makes it available at http://localhost:8000.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-gatsby/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo dev\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with yarn\nDESCRIPTION: Installs the turbo package globally using yarn package manager to enable running turbo commands from anywhere in the repository.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/index.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn global add turbo\n```\n\n----------------------------------------\n\nTITLE: Creating a New Turborepo Monorepo (NPM)\nDESCRIPTION: Command to create a new basic Turborepo monorepo using NPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Debugging Turborepo Terminal UI\nDESCRIPTION: Command to run Turborepo with Terminal UI and output debug logs to a file for easier debugging.\nSOURCE: https://github.com/vercel/turborepo/blob/main/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndevturbo run build --ui=tui --skip-infer 2&> ~/tmp/logs.txt\n```\n\n----------------------------------------\n\nTITLE: Running Example Tests Command\nDESCRIPTION: Command to run tests for specific example packages using Turborepo's filtering capability. This command targets all packages within the turborepo-examples-tests namespace.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo test --filter=\"@turborepo-examples-tests/*\"\n```\n\n----------------------------------------\n\nTITLE: Creating a New Turborepo Project with Rollup Template\nDESCRIPTION: Command to generate a new Turborepo project using the Rollup template. This creates the initial project structure with all required configurations and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-rollup/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-rollup\n```\n\n----------------------------------------\n\nTITLE: Running development servers for all applications\nDESCRIPTION: Command to start development servers for all applications and packages in the monorepo that support the 'dev' script.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Will run the development server for all the app & packages with the supported `dev` script.\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Listing TURBO_HASH Environment Variable for Turborepo Tasks\nDESCRIPTION: Environment variable that provides the hash of the currently running task. This variable is made available to tasks during execution.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/system-environment-variables.mdx#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nTURBO_HASH\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Remote Cache\nDESCRIPTION: Command to link the Turborepo project to Vercel's Remote Cache service.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-yarn/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Component Export Configuration in package.json\nDESCRIPTION: Updated package.json configuration showing how to add new component exports to the UI library.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/design-system/README.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@acme/ui\",\n  \"version\": \"0.0.0\",\n  \"sideEffects\": false,\n  \"exports\":{\n    \"./button\": {\n      \"types\": \"./src/button.tsx\",\n      \"import\": \"./dist/button.mjs\",\n      \"require\": \"./dist/button.js\"\n    }\n    // Add new component exports here\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring turbo.json with Web-Sourced JSON Schema\nDESCRIPTION: Sets up the turbo.json file to use the JSON Schema from the Turborepo website. This provides editor auto-completion and validation without requiring node_modules installation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/editor-integration.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding shadcn/ui Components with Bun\nDESCRIPTION: Command to add a specific shadcn/ui component to your monorepo using Bun (beta). Replace [COMPONENT] with the name of the component you want to add.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/shadcn-ui.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbunx shadcn@canary add [COMPONENT]\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Remote Cache\nDESCRIPTION: Command to link the Turborepo project to Vercel's Remote Cache service for sharing build artifacts across machines.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-berry/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Running Custom Generator\nDESCRIPTION: Command to run custom generators defined in your repository with optional generator name parameter.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/generate.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nturbo gen run [generator-name]\n```\n\n----------------------------------------\n\nTITLE: Building all applications and packages in Turborepo\nDESCRIPTION: Command to build all applications and packages in the monorepo that support the 'build' script. Note that packages should be built before individual apps.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Will build all the app & packages with the supported `build` script.\npnpm run build\n\n# ℹ️ If you plan to only build apps individually,\n# Please make sure you've built the packages first.\n```\n\n----------------------------------------\n\nTITLE: Linking Remote Cache\nDESCRIPTION: Command to link Turborepo project to Remote Cache for shared build artifacts\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/fixtures/turbo_trace/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Migration Codemod with Bun\nDESCRIPTION: Command to run the Turborepo codemod migration tool using Bun package manager (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/upgrading.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbunx @turbo/codemod migrate\n```\n\n----------------------------------------\n\nTITLE: Configuring Jest Test Script in package.json (@repo/ui)\nDESCRIPTION: Add a 'test' script to the package.json file of the '@repo/ui' workspace to run Jest tests.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/jest.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@repo/ui\"\n  \"scripts\": {\n    \"test\": \"jest\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding packageManager Field for PNPM\nDESCRIPTION: JSON diff showing how to add the packageManager field to package.json for PNPM.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/upgrading.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n+ \"packageManager\": \"pnpm@9.2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Kitchen Sink Template\nDESCRIPTION: Command to create a new Turborepo project using the kitchen-sink template. This installs a complete monorepo setup with multiple apps and shared packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/kitchen-sink/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e kitchen-sink\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Remote Cache\nDESCRIPTION: Command to link the local Turborepo to your Vercel Remote Cache after authentication, enabling shared build caches across your team.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Updating Schema JSON URL (Turborepo 2.0.0)\nDESCRIPTION: Codemod to update the versioned schema.json URL to v2 in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n{\n- \"$schema\": \"https://turbo.build/schema.v1.json\",\n+ \"$schema\": \"https://turbo.build/schema.v2.json\",\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Turborepo Gatsby.js Project\nDESCRIPTION: Command to create a new Turborepo project with Gatsby.js using the community-maintained example.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-gatsby/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-gatsby\n```\n\n----------------------------------------\n\nTITLE: Installing ESLint\nDESCRIPTION: Command to install ESLint as a development dependency, which is a prerequisite for using eslint-plugin-turbo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install eslint --save-dev\n```\n\n----------------------------------------\n\nTITLE: Root package.json Configuration for Bun\nDESCRIPTION: Example root package.json configuration for a Bun-based Turborepo workspace, including common scripts and dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/structuring-a-repository.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"private\": true,\n  \"scripts\": {\n    \"build\": \"turbo run build\",\n    \"dev\": \"turbo run dev\",\n    \"lint\": \"turbo run lint\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"latest\"\n  },\n  \"packageManager\": \"bun@1.2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Tool Navigation Cards in JSX\nDESCRIPTION: React component implementation displaying a grid of navigation cards linking to different tool-specific documentation pages within the Turborepo documentation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/index.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Cards, Card } from '#/components/card';\n\n<Cards>\n  <Card title=\"Biome\" href=\"/docs/guides/tools/biome\" />\n  <Card title=\"Docker\" href=\"/docs/guides/tools/docker\" />\n  <Card title=\"ESLint\" href=\"/docs/guides/tools/eslint\" />\n  <Card title=\"Jest\" href=\"/docs/guides/tools/jest\" />\n  <Card title=\"Prisma\" href=\"/docs/guides/tools/prisma\" />\n  <Card title=\"shadcn/ui\" href=\"/docs/guides/tools/shadcn-ui\" />\n  <Card title=\"Storybook\" href=\"/docs/guides/tools/storybook\" />\n  <Card title=\"TypeScript\" href=\"/docs/guides/tools/typescript\" />\n  <Card title=\"Vitest\" href=\"/docs/guides/tools/vitest\" />\n</Cards>\n```\n\n----------------------------------------\n\nTITLE: Setting up PNPM Workspace Configuration\nDESCRIPTION: PNPM workspace configuration file that defines the workspace structure for a Turborepo project, specifying that packages are located in the apps directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_3\n\nLANGUAGE: yml\nCODE:\n```\npackages:\n  - apps/*\n```\n\n----------------------------------------\n\nTITLE: Creating a New Turborepo Monorepo (Bun)\nDESCRIPTION: Command to create a new basic Turborepo monorepo using Bun package manager (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Build with PNPM\nDESCRIPTION: Executes the Turborepo build command using PNPM as the package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\npnpm exec turbo build\n```\n\n----------------------------------------\n\nTITLE: Type Checking Turborepo Source Code\nDESCRIPTION: Command to perform type checking on the project source code.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/non-monorepo/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\npnpm turbo check-types\n```\n\n----------------------------------------\n\nTITLE: Installing Packages with Package Managers\nDESCRIPTION: Commands for installing dependencies with different package managers during the migration to Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun install\n```\n\n----------------------------------------\n\nTITLE: Developing Turborepo Projects\nDESCRIPTION: Commands to navigate to the project directory and start development mode for all apps and packages\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/fixtures/turbo_trace/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd my-turborepo\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Jest Test Script in package.json (web)\nDESCRIPTION: Add a 'test' script to the package.json file of the 'web' workspace to run Jest tests.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/jest.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"web\"\n  \"scripts\": {\n    \"test\": \"jest\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Turborepo Projects\nDESCRIPTION: Command to build all applications and packages in the monorepo from the project root directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd with-solid\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Linting code across the monorepo\nDESCRIPTION: Command to lint all applications and packages in the monorepo that support the 'lint' script, using the shared ESLint configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Will lint all the app & packages with the supported `lint` script.\n# See `@repo/eslint-config` to customize the behavior.\npnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory\nDESCRIPTION: Command to change into the newly created project directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd ./my-turborepo\n```\n\n----------------------------------------\n\nTITLE: Migrating to turbo.json Configuration with Codemod\nDESCRIPTION: Command for automatically migrating Turborepo configuration from package.json to the new turbo.json file format introduced in v1.1.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-1-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx @turbo/codemod create-turbo-config .\n```\n\n----------------------------------------\n\nTITLE: Building Turborepo Apps and Packages\nDESCRIPTION: This command builds all apps and packages in the Turborepo project. It should be run from the root directory of the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-npm/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Running the Turborepo Info Command\nDESCRIPTION: Executes the `turbo info` command to print debugging information about your Turborepo setup.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/info.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo info\n```\n\n----------------------------------------\n\nTITLE: Configuring Output Log Verbosity in Turborepo\nDESCRIPTION: Sets the verbosity level for task output logs, controlling which information is displayed during task execution.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_22\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputLogs\": \"new-only\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Internal Package Dependencies with NPM\nDESCRIPTION: Package.json diff showing how to add an internal package dependency to a Vite application using NPM workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_10\n\nLANGUAGE: diff\nCODE:\n```\n{\n \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Native Library and TypeScript Wrapper for @turbo/repository\nDESCRIPTION: These commands build the native library and TypeScript wrapper for the @turbo/repository package. It uses pnpm for the build process and cargo for building the Rust components.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-repository/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npnpm build\ncargo build\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Tailwind CSS Starter\nDESCRIPTION: Command to create a new Turborepo project with Tailwind CSS integration using npx.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-tailwind/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-tailwind\n```\n\n----------------------------------------\n\nTITLE: Creating New Turborepo Non-Monorepo Project\nDESCRIPTION: Command to initialize a new Turborepo project using the non-monorepo template.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/non-monorepo/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e non-monorepo\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Migration Codemod with NPM\nDESCRIPTION: Command to run the Turborepo codemod migration tool using NPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/upgrading.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx @turbo/codemod migrate\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with npm and example flag\nDESCRIPTION: Command to initialize a new Turborepo with a specific example using npm package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest --example [example-name]\n```\n\n----------------------------------------\n\nTITLE: Installing eslint-config-turbo with npm\nDESCRIPTION: Command to install eslint-config-turbo package as a dev dependency using npm with workspace flag.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-config-turbo.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev eslint-config-turbo -w @acme/eslint-config\n```\n\n----------------------------------------\n\nTITLE: Adding Watch Mode Dev Script\nDESCRIPTION: Adds a dev script with watch mode for development workflow.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/publishing-libraries.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build\": \"tsup src/index.ts --format cjs,esm --dts\",\n    \"dev\": \"tsup src/index.ts --format cjs,esm --dts --watch\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running parallel tasks with Turborepo\nDESCRIPTION: Command to run multiple development tasks in parallel using Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nturbo run dev dev:css\n```\n\n----------------------------------------\n\nTITLE: Copying Environment Variables\nDESCRIPTION: Commands to copy the example environment file to the required locations for database and web app configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example ./packages/database/.env\ncp .env.example ./apps/web/.env\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server in Turborepo\nDESCRIPTION: Command to start the Next.js development server using Yarn. This launches the application in development mode with hot-reloading enabled.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Formatting code across the monorepo\nDESCRIPTION: Command to format all supported file types in the monorepo using Prettier, based on the shared configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Will format all the supported `.ts,.js,json,.tsx,.jsx` files.\n# See `@repo/eslint-config/prettier-base.js` to customize the behavior.\npnpm format\n```\n\n----------------------------------------\n\nTITLE: TypeScript Checking Script\nDESCRIPTION: Script for checking TypeScript types without emitting files.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"check-types\": \"tsc --noEmit\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying Root Configuration to Remove Framework-Specific Outputs\nDESCRIPTION: Example diff showing how to remove SvelteKit-specific outputs from the root turbo.json after moving them to a package-specific configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/package-configurations.mdx#2025-04-22_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n-      \"outputs\": [\".next/**\", \"!.next/cache/**\", \".svelte-kit/**\"]\n+      \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing @turbo/test-utils Package in Markdown\nDESCRIPTION: Markdown code that displays the name of the internal package @turbo/test-utils, which contains generic testing utilities shared between packages in the turborepo project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-test-utils/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@turbo/test-utils`\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with yarn\nDESCRIPTION: Command to install Turborepo as a dev dependency using yarn.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add turbo --dev\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo with npm\nDESCRIPTION: Command to install Turborepo as a dev dependency using npm.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install turbo --save-dev\n```\n\n----------------------------------------\n\nTITLE: Running Common Turborepo Commands\nDESCRIPTION: Examples of common Turborepo commands for building, linting, and type checking across the monorepo. Includes commands for full builds, filtered builds, and parallel linting operations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-shell-commands/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nturbo build lint check-types\n```\n\nLANGUAGE: sh\nCODE:\n```\nturbo build\n```\n\nLANGUAGE: sh\nCODE:\n```\nturbo build --filter=app-a\n```\n\nLANGUAGE: sh\nCODE:\n```\nturbo lint\n```\n\n----------------------------------------\n\nTITLE: Shutting Down Docker Containers for Turborepo\nDESCRIPTION: Command to stop all running containers that were started with docker-compose.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-docker/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# Stop running containers started by docker-compse\n docker-compose -f docker-compose.yml down\n```\n\n----------------------------------------\n\nTITLE: Developing Turborepo Project\nDESCRIPTION: Command to develop all apps and packages in the Turborepo project. This should be run from the project root directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-gatsby/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Build with Bun (Beta)\nDESCRIPTION: Executes the Turborepo build command using Bun as the package manager (Beta version).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nbunx turbo run build\n```\n\n----------------------------------------\n\nTITLE: Disabling Turborepo Telemetry Collection\nDESCRIPTION: Command to disable telemetry data collection in Turborepo. This prevents anonymous usage data from being sent to Vercel.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/telemetry.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo telemetry disable\n```\n\n----------------------------------------\n\nTITLE: Configuring Base TypeScript Settings in Turborepo\nDESCRIPTION: Documentation header explaining the purpose of shared tsconfig.json files that act as base configurations for TypeScript projects in Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-docker/packages/typescript-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `tsconfig`\n\nThese are base shared `tsconfig.json`s from which all other `tsconfig.json`'s inherit from.\n```\n\n----------------------------------------\n\nTITLE: Running dependent tasks with Turborepo\nDESCRIPTION: Command to run lint and test tasks, which will automatically run the build task first due to dependencies.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-6-0.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nturbo run lint test\n```\n\n----------------------------------------\n\nTITLE: Development Mode for Turborepo\nDESCRIPTION: Command to run development servers for all applications and packages in the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd with-solid\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting the Next.js Development Server with Yarn\nDESCRIPTION: Command to run the development server for a Next.js application in a Turborepo environment. This launches the local development environment that enables auto-refreshing on code changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-yarn/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with pnpm and GitHub URL\nDESCRIPTION: Command to initialize a new Turborepo with a custom example from GitHub using pnpm package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx create-turbo@latest --example [github-url]\n```\n\n----------------------------------------\n\nTITLE: Package Exports Configuration\nDESCRIPTION: Configuration for package exports, specifying types and compiled code locations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/typescript.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"exports\": {\n    \"./*\": {\n      \"types\": \"./src/*.ts\",\n      \"default\": \"./dist/*.js\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting the Next.js development server in Turborepo\nDESCRIPTION: Command to run the development server for a Next.js application within Turborepo. This will start the server and allow you to view the application at localhost:3000.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-tailwind/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Development Server\nDESCRIPTION: Command to start the development server for the NestJS web application. This allows developers to run the application locally for testing and development purposes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running the Nuxt.js Development Server with pnpm\nDESCRIPTION: Command to start the Nuxt.js development server using pnpm package manager. This will launch the application locally for development purposes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vue-nuxt/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Building Turborepo Projects\nDESCRIPTION: Command to build all applications and packages in the Turborepo monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vue-nuxt/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Creating a New Turborepo Project with npx\nDESCRIPTION: Command to create a new Turborepo project using npx. This is the first step to experiencing Turborepo's caching functionality.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/caching.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Initializing Turborepo Project with Create-Turbo\nDESCRIPTION: Command to bootstrap a new Turborepo project using the starter template.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Build with NPM\nDESCRIPTION: Executes the Turborepo build command using NPM as the package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/migrating-from-nx.mdx#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo run build\n```\n\n----------------------------------------\n\nTITLE: Disabling Telemetry in Turborepo using Bash\nDESCRIPTION: This command disables telemetry for Turborepo on the current machine. It stops Turborepo from collecting usage data.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/telemetry.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nturbo telemetry disable\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Development Server\nDESCRIPTION: Command to start the development server for the Next.js application.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/non-monorepo/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\npnpm turbo dev\n```\n\n----------------------------------------\n\nTITLE: Adding packageManager Field for NPM\nDESCRIPTION: JSON diff showing how to add the packageManager field to package.json for NPM.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/upgrading.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n+ \"packageManager\": \"npm@10.8.1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server with Various Package Managers\nDESCRIPTION: Commands to start the Next.js development server using npm, yarn, pnpm, or bun. After running any of these commands, the application will be accessible at http://localhost:3000.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/basic/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Development Server in Turborepo\nDESCRIPTION: Command to start the NestJS API development server. This will run the server at http://localhost:3000 by default, where you can test your APIs using tools like Insomnia or Postman.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/apps/api/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Setting Package Manager Field with Codemod\nDESCRIPTION: Command for automatically setting the packageManager field in package.json to enable faster package manager detection in Turborepo v1.1.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-1-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx @turbo/codemod add-package-manager .\n```\n\n----------------------------------------\n\nTITLE: Creating New Turborepo Project with Vue/Nuxt Template\nDESCRIPTION: Command to create a new Turborepo project using the Vue/Nuxt template starter.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vue-nuxt/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-vue-nuxt\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server\nDESCRIPTION: Commands to start the Next.js development server using various package managers. This allows developers to run the project locally for development and testing.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/basic/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\n----------------------------------------\n\nTITLE: Creating a SolidStart Project using npm\nDESCRIPTION: Commands to initialize a new SolidStart project either in the current directory or in a specified directory. Uses the npm init command with the solid@latest template.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# create a new project in the current directory\nnpm init solid@latest\n\n# create a new project in my-app\nnpm init solid@latest my-app\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server with Various Package Managers\nDESCRIPTION: Commands to start the Next.js development server using npm, yarn, pnpm, or bun. After running any of these commands, the application can be accessed at http://localhost:3000.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vitest/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\n----------------------------------------\n\nTITLE: Creating a Vite-based Turborepo with Yarn\nDESCRIPTION: Command to quickly scaffold a new Turborepo project with Vite using the 'with-vite' example template via Yarn package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest -e with-vite\n```\n\n----------------------------------------\n\nTITLE: Using create-turbo with bun (Beta) and example flag\nDESCRIPTION: Command to initialize a new Turborepo with a specific example using bun package manager, which is currently in beta.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/create-turbo.mdx#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbunx create-turbo@latest --example [example-name]\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Command to start the Next.js development server using Yarn package manager. This will launch the application in development mode with hot-reloading enabled.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-berry/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Linking Turborepo to Remote Cache\nDESCRIPTION: Command to connect the local Turborepo installation with Vercel's remote cache service.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo link\n```\n\n----------------------------------------\n\nTITLE: Configuring Root package.json for Turborepo\nDESCRIPTION: Basic configuration of the root package.json file for a Turborepo project with build and test scripts that leverage Turbo for task running.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/travis-ci.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-turborepo\",\n  \"scripts\": {\n    \"build\": \"turbo run build\",\n    \"test\": \"turbo run test\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Svelte Project for Production\nDESCRIPTION: Command to create a production build of the Svelte application\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-svelte/apps/docs/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Command to start the Next.js development server. This will launch the application locally for development purposes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-npm/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Runs the development server for a Next.js application. This command starts the local development environment, allowing you to view and test your application at http://localhost:3001.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-npm/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Custom Login URL Command\nDESCRIPTION: Login command with custom login URL for dynamic token generation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/login.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nturbo login --login=https://acme.com\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Design System Starter\nDESCRIPTION: Command to create a new project using the Turborepo design system starter template.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/design-system/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo@latest -e design-system\n```\n\n----------------------------------------\n\nTITLE: Running the Vue.js Development Server with pnpm\nDESCRIPTION: Command to start the development server for a Vue.js application using pnpm package manager. This allows you to run the application locally for development purposes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vue-nuxt/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Starting MySQL Database with Docker Compose\nDESCRIPTION: Command to start a local MySQL database using Docker Compose in detached mode.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Advanced Flat Config Example\nDESCRIPTION: Advanced configuration example with allowList pattern for environment variables using flat config format.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-plugin-turbo.mdx#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport turbo from 'eslint-plugin-turbo';\n\nexport default [\n  {\n    plugins: {\n      turbo,\n    },\n    rules: {\n      'turbo/no-undeclared-env-vars': [\n        'error',\n        {\n          allowList: ['^ENV_[A-Z]+$'],\n        },\n      ],\n    },\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Advanced Legacy Config Example\nDESCRIPTION: Advanced configuration example with allowList pattern for environment variables using legacy eslintrc format.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-plugin-turbo.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"plugins\": [\"turbo\"],\n  \"rules\": {\n    \"turbo/no-undeclared-env-vars\": [\n      \"error\",\n      {\n        \"allowList\": [\"^ENV_[A-Z]+$\"]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Turborepo Shell Commands Template\nDESCRIPTION: Command to create a new Turborepo project using the shell commands template via npx. This sets up a minimal reproduction environment for testing and debugging Turborepo functionality.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-shell-commands/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-turbo@latest -e with-shell-commands\n```\n\n----------------------------------------\n\nTITLE: Migrating Dot Env (Turborepo 2.0.0)\nDESCRIPTION: Codemod to move .env files from the removed dotEnv key to inputs in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n-       \"dotEnv\": [\".env\"],\n      \"inputs\": [\n        \"dist/**\",\n+         \".env\"\n      ],\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Svelte Project with NPM\nDESCRIPTION: Commands to create a new Svelte project either in the current directory or in a specified folder. Uses the create-svelte package to generate a new Svelte project structure.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-svelte/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# create a new project in the current directory\nnpm create svelte@latest\n\n# create a new project in my-app\nnpm create svelte@latest my-app\n```\n\n----------------------------------------\n\nTITLE: Running Build with Bun in Turborepo (Beta)\nDESCRIPTION: Command to run the build script defined in package.json using Bun package manager (Beta) in a Turborepo project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/caching.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbun run build\n```\n\n----------------------------------------\n\nTITLE: Adding Internal Package Dependencies with Bun\nDESCRIPTION: Package.json diff showing how to add an internal package dependency to a Vite application using Bun workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_11\n\nLANGUAGE: diff\nCODE:\n```\n{\n \"name\": \"my-app\",\n  \"dependencies\": {\n+   \"@repo/ui\": \"workspace:*\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Turborepo Remote Cache Authentication\nDESCRIPTION: Commands to authenticate and enable remote caching with Vercel for Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vue-nuxt/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Starting Svelte Development Server\nDESCRIPTION: Commands to start the Svelte development server, with an option to automatically open in a browser tab\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-svelte/apps/docs/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n\n# or start the server and open the app in a new browser tab\nnpm run dev -- --open\n```\n\n----------------------------------------\n\nTITLE: Executing Turbo Logout Command in Bash\nDESCRIPTION: This command logs out the user from their Remote Cache provider account in Turborepo. It terminates the current authenticated session, removing access to remote caching features.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/logout.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo logout\n```\n\n----------------------------------------\n\nTITLE: Package.json Configuration for UI Component Library\nDESCRIPTION: Configuration in package.json that defines the component exports with different module formats (ESM, CommonJS) and TypeScript types.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/design-system/README.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@acme/ui\",\n  \"version\": \"0.0.0\",\n  \"sideEffects\": false,\n  \"exports\":{\n    \"./button\": {\n      \"types\": \"./src/button.tsx\",\n      \"import\": \"./dist/button.mjs\",\n      \"require\": \"./dist/button.js\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Sysroot using rsync for Cross-Compilation\nDESCRIPTION: A command using the sysroot-rsync.sh script to create a sysroot for a Raspberry Pi 4 running Debian Buster. The script copies necessary files from the target system to a local destination for cross-compilation purposes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/buildcontainer/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./sysroot-rsync.sh pi@<ipaddress> <local destination>\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Dependencies in UI Package (Bun)\nDESCRIPTION: Command to install Storybook dependencies in the UI package for co-located stories using Bun (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nbun install @storybook/react --filter=@repo/ui --save-dev\n```\n\n----------------------------------------\n\nTITLE: Installing eslint-config-turbo with pnpm\nDESCRIPTION: Command to install eslint-config-turbo package using pnpm package manager with filter to target a specific workspace.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-config-turbo.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add eslint-config-turbo --filter=@repo/eslint-config\n```\n\n----------------------------------------\n\nTITLE: Starting the development server for Turborepo project\nDESCRIPTION: Command to start the local development server for a Turborepo project. Running this command will initialize the development environment and make the application accessible on localhost:3001.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-typeorm/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Adding a Vite Application with NPM\nDESCRIPTION: Command to add a new Vite application to an existing repository using NPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/vite.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm create vite@latest apps/my-app\n```\n\n----------------------------------------\n\nTITLE: Starting SolidStart Development Server\nDESCRIPTION: Commands to start a development server for a SolidStart project after dependencies have been installed. Includes an option to automatically open the app in a new browser tab.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/apps/web/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n\n# or start the server and open the app in a new browser tab\nnpm run dev -- --open\n```\n\n----------------------------------------\n\nTITLE: Advanced Example with Legacy ESLint Format\nDESCRIPTION: Full example configuration in legacy .eslintrc format with rule options, demonstrating both plugin inclusion and rule configuration with allowList.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/README.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"plugins\": [\"turbo\"],\n  \"rules\": {\n    \"turbo/no-undeclared-env-vars\": [\n      \"error\",\n      {\n        \"allowList\": [\"^ENV_[A-Z]+$\"]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Math Package as Dependency in yarn\nDESCRIPTION: Updates the web application's package.json to include the math package as a dependency using yarn workspace syntax.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n  \"dependencies\": {\n+   \"@repo/math\": \"*\",\n    \"next\": \"latest\",\n    \"react\": \"latest\",\n    \"react-dom\": \"latest\"\n  },\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Symlink Resolution in Node.js\nDESCRIPTION: This code snippet shows the expected symlink resolution path for a nested symlink structure. It illustrates how Node.js correctly resolves the symlinks, in contrast to the OXC bug.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/fixtures/oxc_repro/README.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\napps/web/nm/@repo/typescript-config/index.js\n-> tooling/typescript-config/index.js\n-> tooling/typescript-config/../../nm/index.js\n-> nm/index.js\n```\n\n----------------------------------------\n\nTITLE: Closing Telemetry Client in TypeScript\nDESCRIPTION: Shows how to properly close the telemetry client before application exit to ensure all data is sent.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-telemetry/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nawait telemetry.close();\n```\n\n----------------------------------------\n\nTITLE: Creating a New Remix Project with Vercel Template\nDESCRIPTION: Command to initialize a new Remix project using Vercel's template via the Remix CLI.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/kitchen-sink/apps/blog/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx create-remix@latest --template vercel/vercel/examples/remix\n```\n\n----------------------------------------\n\nTITLE: Basic Legacy Configuration in .eslintrc\nDESCRIPTION: Example of using turbo configuration with the legacy .eslintrc format, demonstrating how to extend the turbo configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-config-turbo/README.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"extends\": [\"turbo\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Legacy ESLint Config\nDESCRIPTION: Basic plugin configuration using legacy eslintrc format.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-plugin-turbo.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"plugins\": [\"turbo\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular application. The compiled output will be stored in the 'dist/' directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/web/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Configuring Root Scripts in package.json\nDESCRIPTION: Shows how to define scripts in the root package.json file of a monorepo, including a test script and a custom check-examples script.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-3-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-turborepo\",\n  \"private\": true,\n  \"scripts\": {\n    \"test\": \"echo 'test!'\",\n    \"check-examples\": \"./check-examples.sh\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Passing Arguments to Turbo Generator Prompts\nDESCRIPTION: This snippet demonstrates how to pass arguments directly to generator prompts using the --args flag. This allows for bypassing interactive prompts when running Turbo generators from the command line.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/generating-code.mdx#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nturbo gen [generator-name] --args answer1 answer2 ...\n```\n\n----------------------------------------\n\nTITLE: Running the Next.js Development Server in Turborepo\nDESCRIPTION: Command to start the Next.js development server in a Turborepo project. Running this command will initiate the local development environment on port 3000.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-react-native-web/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Using @turbo/workspaces CLI\nDESCRIPTION: CLI usage for @turbo/workspaces, showing available commands and options for converting projects between workspace managers and displaying project summaries.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-workspaces/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nUsage: @turbo/workspaces [options] [command]\n\nTools for working with package manager workspaces\n\nOptions:\n  -v, --version                               output the current version\n  -h, --help                                  display help for command\n\nCommands:\n  convert [options] [path] [package-manager]  Convert project between workspace managers\n  summary [path]                              Display a summary of the specified project\n  help [command]                              display help for command\n```\n\n----------------------------------------\n\nTITLE: Referencing the Turbo ESLint Config Package\nDESCRIPTION: Package name reference for the internal collection of ESLint configurations used by the Turborepo project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/kitchen-sink/packages/config-eslint/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Getting Help with Angular CLI\nDESCRIPTION: Command to access the Angular CLI help documentation directly from the command line.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Starting Remix Development Server\nDESCRIPTION: Command to start the Remix development server locally for testing and development.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/kitchen-sink/apps/blog/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Artifacts\nDESCRIPTION: Command to scaffold Angular components, services, and other artifacts using the Angular CLI generator.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/docs/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.15.1 Release in Markdown\nDESCRIPTION: Documents changes for version 0.15.1, noting removal of test data from the packaged crate.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-vt100/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.15.1] - 2021-12-21\n\n### Changed\n\n- Removed a lot of unnecessary test data from the packaged crate, making\n  downloads faster\n```\n\n----------------------------------------\n\nTITLE: Detecting Semantic Literals in Globs\nDESCRIPTION: Shows how to check if a glob pattern contains literal components that have special semantics on the target platform, such as parent directory references, which might require special handling.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::Glob;\n\nlet glob = Glob::new(\"../**/src/**/main.rs\").unwrap();\nassert!(glob.has_semantic_literals());\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js to transpile internal packages\nDESCRIPTION: This Next.js configuration shows how to set up automatic transpilation for dependencies from local packages or node_modules. The transpilePackages option simplifies working with internal packages in Next.js 13 and later.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/you-might-not-need-typescript-project-references.mdx#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  transpilePackages: ['@acme/ui', 'lodash-es'],\n};\n\nmodule.exports = nextConfig;\n```\n\n----------------------------------------\n\nTITLE: Rule Configuration with Legacy ESLint Format\nDESCRIPTION: Basic rule configuration in legacy .eslintrc format, showing how to enable the no-undeclared-env-vars rule.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/README.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rules\": {\n    \"turbo/no-undeclared-env-vars\": \"error\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Legacy ESLint Configuration\nDESCRIPTION: Basic ESLint configuration using the legacy .eslintrc format. This demonstrates how to extend the turbo configuration in JSON format.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-config-turbo.mdx#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"extends\": [\"turbo\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Framework Integration Cards in JSX\nDESCRIPTION: This code snippet renders a set of cards using a custom Cards and Card component. Each card represents a different framework that can be integrated with Turborepo, providing links to specific integration guides.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/frameworks/index.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Cards>\n<Card\n  title=\"Next.js\"\n  href=\"/docs/guides/frameworks/nextjs\"\n/>\n\n<Card title=\"SvelteKit\" href=\"/docs/guides/frameworks/sveltekit\" />\n\n<Card title=\"Vite\" href=\"/docs/guides/frameworks/vite\" />\n\n<Card title=\"Nuxt\" href=\"/docs/guides/frameworks/nuxt\" />\n\n</Cards>\n```\n\n----------------------------------------\n\nTITLE: Custom ESLint Plugin Configuration\nDESCRIPTION: Advanced ESLint configuration showing how to manually configure the turbo plugin with specific rules.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-4-0.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"extends\": [\"next/core-web-vitals\"],\n  \"plugins\": [\"turbo\"],\n  \"rules\": {\n    // Automatically flag env vars missing from turbo.json\n    \"turbo/no-undeclared-env-vars\": \"error\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Renaming Pipeline (Turborepo 2.0.0)\nDESCRIPTION: Codemod to rename the pipeline key to tasks in turbo.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\n{\n- \"pipeline\": {\n+ \"tasks\": {\n    \"build\": {\n      ...\n    },\n    \"dev\": {\n      ...\n    },\n    \"lint\": {\n      ...\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server. This launches the application at http://localhost:4200/ with automatic reloading of changes to source files.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Fixture for Integration Test in Bash\nDESCRIPTION: This code shows how to specify a custom fixture for the integration test. It uses the 'single_package' fixture instead of the default 'basic_monorepo'.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  $ . ${TESTDIR}/../../helpers/setup_integration_test.sh single_package\n```\n\n----------------------------------------\n\nTITLE: Capturing Matched Text from Glob Patterns in Rust\nDESCRIPTION: Shows how to extract captured text from matched paths using the Glob API. This example matches files with specific extensions in any directory and captures the filename.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::{CandidatePath, Glob, Program};\n\nlet glob = Glob::new(\"**/{*.{go,rs}}\").unwrap();\n\nlet path = CandidatePath::from(\"src/main.go\");\nlet matched = glob.matched(&path).unwrap();\n\nassert_eq!(\"main.go\", matched.get(2).unwrap());\n```\n\n----------------------------------------\n\nTITLE: Setting up Integration Test Environment in Bash\nDESCRIPTION: This snippet demonstrates how to set up the integration test environment using a helper script. It sets the TURBO environment variable to point to the locally built binary.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  $ . ${TESTDIR}/../../helpers/setup_integration_test.sh\n```\n\n----------------------------------------\n\nTITLE: Referencing Turborepo Packages Directory in Markdown\nDESCRIPTION: A markdown link that references the Turborepo packages directory on GitHub, showing where the shared utilities are used.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-utils/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[turborepo/packages/](https://github.com/vercel/turborepo/tree/main/packages)\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to execute end-to-end tests using a selected testing platform. Requires a testing package to be installed first.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Command Line Configuration in Turborepo\nDESCRIPTION: Shows how to configure Turborepo options via command line flags, which can now be set in turbo.json instead.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-1-0.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nturbo run build --env-mode=loose --no-daemon --cache-dir=./my-custom-directory\n```\n\n----------------------------------------\n\nTITLE: Creating Add Function in TypeScript\nDESCRIPTION: Implements a simple addition function in TypeScript that takes two number parameters and returns their sum.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nexport const add = (a: number, b: number) => a + b;\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint with eslint-config-turbo Flat Config\nDESCRIPTION: TypeScript configuration for ESLint v9 using the flat configuration format with eslint-config-turbo, providing backward compatibility with ESLint v8.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-4.mdx#2025-04-22_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nimport turboConfig from 'eslint-config-turbo/flat';\n\nexport default [\n  ...turboConfig,\n  // Other configuration\n];\n```\n\n----------------------------------------\n\nTITLE: Setting API URL Endpoint\nDESCRIPTION: Configures the base API endpoint for remote cache operations. Default points to Vercel's main domain.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_33\n\nLANGUAGE: markdown\nCODE:\n```\napiUrl\n\nDefault: `\"https://vercel.com\"`\n```\n\n----------------------------------------\n\nTITLE: Defining ESLint Configuration Package in Markdown\nDESCRIPTION: This snippet defines the package name '@repo/eslint-config' and briefly describes its contents as a collection of internal ESLint configurations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-berry/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# `@repo/eslint-config`\n\nCollection of internal eslint configurations.\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Dependent Rules\nDESCRIPTION: Sets up rules for packages that can import (depend on) packages with specific tags, controlling the direction of dependencies in the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_29\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"boundaries\": {\n    \"utils\": {\n      \"dependents\": {\n        // only packages with the `web` tag can import packages with the `utils` tag\n        \"allow\": [\"web\"]\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Vercel for Remote Caching\nDESCRIPTION: Commands to navigate to the Turborepo project and log into Vercel to enable remote caching functionality.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-berry/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncd my-turborepo\nnpx turbo login\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests using Karma test runner, which is the default testing framework for Angular applications.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/docs/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Creating a Design System Monorepo with Turborepo (Yarn)\nDESCRIPTION: Command to create a new Turborepo project using the design-system template with Yarn package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dlx create-turbo@latest -e design-system\n```\n\n----------------------------------------\n\nTITLE: Matching Paths Against Simple Glob Patterns in Rust\nDESCRIPTION: Demonstrates how to create a Glob object and match a path against it. This basic pattern checks if a file path matches a specific extension pattern.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::{Glob, Program};\n\nlet glob = Glob::new(\"*.png\").unwrap();\nassert!(glob.is_match(\"logo.png\"));\n```\n\n----------------------------------------\n\nTITLE: Plugin Configuration with Legacy ESLint Format\nDESCRIPTION: Configuration for adding the turbo plugin in legacy .eslintrc format, showing how to include the plugin without configuration.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/README.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"plugins\": [\"turbo\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Publishing Angular UI Library\nDESCRIPTION: Commands to navigate to the built library directory and publish it to npm registry. This should be done after building the library.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/projects/ui/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncd dist/ui\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Running SolidStart Tests with npm\nDESCRIPTION: Command for running tests in a SolidStart project. Tests use vitest, @solidjs/testing-library, and @testing-library/jest-dom.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/apps/docs/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Setting Global Passthrough Environment Variables in Turborepo\nDESCRIPTION: Demonstrates how to specify environment variables that should be made available to tasks without impacting caching.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/configuration.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"globalPassThroughEnv\": [\"AWS_SECRET_KEY\", \"GITHUB_TOKEN\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Using Math Package in a Next.js Page\nDESCRIPTION: Demonstrates importing and using the add function from the math package in a Next.js page component.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/creating-an-internal-package.mdx#2025-04-22_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nimport { add } from '@repo/math/add';\n\nfunction Page() {\n  return <div>{add(1, 2)}</div>;\n}\n\nexport default Page;\n```\n\n----------------------------------------\n\nTITLE: Setting Up Custom turbo.json Configuration for Integration Test in Bash\nDESCRIPTION: This code demonstrates how to set up a custom turbo.json configuration for an integration test. It uses helper scripts to set up the test environment and replace the default turbo.json with a custom one.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nSetup\n  $ . ${TESTDIR}/../../helpers/setup_integration_test.sh single_package\n\nCustom config\n  $ . ${TESTDIR}/../../helpers/replace_turbo_json.sh $(pwd) \"my-custom-config.json\"\n\nWrite your tests\n...\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Documentation Development Server\nDESCRIPTION: Command to start the Turborepo documentation development server using pnpm.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npnpm run docs:dev\n```\n\n----------------------------------------\n\nTITLE: Referencing the Turborepo ESLint Configuration Package\nDESCRIPTION: The package name @turbo/eslint-config is shown as a code-formatted reference, indicating it's an npm package containing ESLint configurations that can be imported and used in Turborepo projects.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-typeorm/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Specifying Workspace in turbo-ignore\nDESCRIPTION: Example showing how to specify a particular workspace ('docs') to check for changes instead of using the current working directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-ignore/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpx turbo-ignore docs\n```\n\n----------------------------------------\n\nTITLE: Executing Turborepo Telemetry Command in Bash\nDESCRIPTION: This command is used to manage telemetry for Turborepo on the current machine. It requires an argument to specify the desired action.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/telemetry.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nturbo telemetry [argument]\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to execute end-to-end tests via the configured testing platform. Requires a package that implements end-to-end testing capabilities to be installed first.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/web/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Importing Card Components in Turborepo Documentation\nDESCRIPTION: Imports the Cards and Card components from the components library to create a navigation interface for the guides section.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/index.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Cards, Card } from '#/components/card';\n```\n\n----------------------------------------\n\nTITLE: Walking Directory Trees with Negation Patterns in Rust\nDESCRIPTION: Shows how to use the walk API with negation patterns to exclude certain paths. This example walks a directory tree while following symbolic links but excluding paths that match a specific pattern.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::walk::{FileIterator, LinkBehavior};\nuse wax::Glob;\n\nlet glob = Glob::new(\"**/*.{md,txt}\").unwrap();\nfor entry in glob\n    .walk_with_behavior(\"doc\", LinkBehavior::ReadTarget)\n    .not([\"**/secret/**\"])\n    .unwrap()\n{\n    let entry = entry.unwrap();\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Package Name Definition in Markdown\nDESCRIPTION: Defines the package name @turbo/eslint-config in markdown format with backtick formatting.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vitest/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Building a Svelte Project for Production\nDESCRIPTION: Command to create a production-ready build of a Svelte application. This creates optimized assets that can be deployed to a production environment.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-svelte/apps/web/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Command to start the Next.js development server using Yarn package manager. This will launch the application on localhost:3001 with hot-reload capabilities.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-tailwind/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: turbo-ignore Help Command\nDESCRIPTION: Shows all available options and usage instructions for the turbo-ignore command, including workspace specification, fallback options, and special commit message flags.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-ignore/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nturbo-ignore\n\nAutomatically ignore builds that have no changes\n\nUsage:\n  $ npx turbo-ignore [<workspace>] [flags...]\n\nIf <workspace> is not provided, it will be inferred from the \"name\"\nfield of the \"package.json\" located at the current working directory.\n\nFlags:\n  --fallback=<ref>    On Vercel, if no previously deployed SHA is available to compare against,\n                      fallback to comparing against the provided ref [default: None]. When not on Vercel,\n                      compare against the provided fallback\n  --help, -h          Show this help message\n  --version, -v       Show the version of this script\n\n---\n\nturbo-ignore will also check for special commit messages to indicate if a build should be skipped or not.\n\nSkip turbo-ignore check and automatically ignore:\n  - [skip ci]\n  - [ci skip]\n  - [no ci]\n  - [skip vercel]\n  - [vercel skip]\n  - [vercel skip <workspace>]\n\nSkip turbo-ignore check and automatically deploy:\n  - [vercel deploy]\n  - [vercel build]\n  - [vercel deploy <workspace>]\n  - [vercel build <workspace>]\n\nSkip turbo-ignore check and automatically deploy specific workspace and ignore others:\n  - [vercel only <workspace>]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in Multiple Packages with NPM\nDESCRIPTION: Command to install a dependency in multiple packages simultaneously using NPM's workspace option.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm install jest --workspace=web --workspace=@repo/ui --save-dev\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular project for deployment. The build output will be stored in the dist/ directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/packages/ui/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Deploying Remix Application with Vercel CLI\nDESCRIPTION: Commands to install the Vercel CLI globally and deploy the Remix application.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/kitchen-sink/apps/blog/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm i -g vercel\nvercel\n```\n\n----------------------------------------\n\nTITLE: Internal ESLint Config Package Reference\nDESCRIPTION: Reference to the internal ESLint configuration package used across TurboRepo packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Package Installation Command\nDESCRIPTION: Command to install package dependencies and update the workspace after adding a new example.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Determining affected packages and reasons with turbo query in Turborepo\nDESCRIPTION: This GraphQL query finds all packages affected by recent changes and the reasons for their invalidation. It helps understand the impact of changes when using the --affected flag.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/understanding-your-repository.mdx#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n> turbo query \"query { affectedPackages(base: \\\"HEAD^\\\", head: \\\"HEAD\\\") { items { reason {  __typename } } } }\"\n{\n  \"data\": {\n    \"affectedPackages\": {\n      \"items\": [\n        {\n          \"name\": \"utils\",\n          \"reason\": {\n            \"__typename\": \"FileChanged\"\n          }\n        },\n        {\n          \"name\": \"web\",\n          \"reason\": {\n            \"__typename\": \"DependencyChanged\"\n          }\n        },\n        {\n          \"name\": \"docs\",\n          \"reason\": {\n            \"__typename\": \"DependencyChanged\"\n          }\n        },\n        {\n          \"name\": \"cli\",\n          \"reason\": {\n            \"__typename\": \"DependencyChanged\"\n          }\n        },\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Cards Component with Core Concepts in JSX\nDESCRIPTION: This snippet uses React components to display a navigation menu of Turborepo core concepts. It implements a Cards container with individual Card components for each concept, each containing a title, description, and link to detailed documentation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/core-concepts/index.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Cards>\n<Card\ntitle=\"Remote Caching\"\nhref=\"/docs/core-concepts/remote-caching\"\ndescription=\"Save time by never doing the same work twice\"\n/>\n\n<Card\n  title=\"Package types\"\n  href=\"/docs/core-concepts/package-types\"\n  description=\"Application and Library Packages\"\n/>\n\n<Card\n  title=\"Internal Packages\"\n  href=\"/docs/core-concepts/internal-packages\"\n  description=\"Easily share code inside your repository\"\n/>\n\n<Card\n  title=\"Package and Task Graphs\"\n  href=\"/docs/core-concepts/package-and-task-graph\"\n  description=\"How Turborepo relates your tasks to each other\"\n/>\n\n</Cards>\n```\n\n----------------------------------------\n\nTITLE: Getting Angular CLI Help\nDESCRIPTION: Command to access Angular CLI help documentation. Provides information about available commands and their usage.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/web/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for Environment Variables\nDESCRIPTION: HTML table markup defining the structure for displaying Turborepo system environment variables and their descriptions. The table includes variable names and detailed explanations of their purposes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/system-environment-variables.mdx#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<table id=\"system-environment-variables-table\">\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr id=\"force_color\">\n      <td>\n        <code>FORCE_COLOR</code>\n      </td>\n      <td>Forces color to be shown in terminal logs</td>\n    </tr>\n    <!-- Additional rows omitted for brevity -->\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.15.2 Release in Markdown\nDESCRIPTION: Documents changes for version 0.15.2, noting dependency updates.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-vt100/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.15.2] - 2023-02-05\n\n### Changed\n\n- Bumped dependencies\n```\n\n----------------------------------------\n\nTITLE: Displaying Turborepo Logo and Title in HTML\nDESCRIPTION: This HTML snippet creates a centered display of the Turborepo logo with dark mode support and a title. It uses the <picture> element for responsive image selection based on color scheme preferences.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo/README.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://turbo.build/repo\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://user-images.githubusercontent.com/4060187/196936123-f6e1db90-784d-4174-b774-92502b718836.png\">\n      <img src=\"https://user-images.githubusercontent.com/4060187/196936104-5797972c-ab10-4834-bd61-0d1e5f442c9c.png\" height=\"128\">\n    </picture>\n    <h1 align=\"center\">Turborepo</h1>\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Previous Circular Dependency Detection Output\nDESCRIPTION: Terminal output showing the previous, less helpful circular dependency detection in Turborepo before version 2.4.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-4.mdx#2025-04-22_snippet_4\n\nLANGUAGE: txt\nCODE:\n```\n  × Invalid package dependency graph: Cyclic dependency detected:\n  │     @repo/logger, storefront, @repo/ui, blog\n  │     api, admin\n  ╰─▶ Cyclic dependency detected:\n        @repo/logger, storefront, @repo/ui, blog\n        api, admin\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependencies in package.json with Bun\nDESCRIPTION: Example of how to define external and internal dependencies in a package.json file using Bun workspace protocol (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/managing-dependencies.mdx#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dependencies\": {\n    \"next\": \"latest\", // External dependency\n    \"@repo/ui\": \"workspace:*\" // Internal dependency\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Illustrating Incorrect Symlink Resolution in OXC\nDESCRIPTION: This code snippet demonstrates how OXC incorrectly resolves the nested symlink structure. It shows the erroneous path resolution that leads to the bug.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/fixtures/oxc_repro/README.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\napps/web/nm/@repo/typescript-config/index.js\n-> apps/web/nm/@repo/typescript-config/../../nm/index.js\n-> apps/web/nm/nm/index.js\n```\n\n----------------------------------------\n\nTITLE: Creating Project from Custom Repository\nDESCRIPTION: Command to create a new Turborepo project using a custom repository as the starter template.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-9-0.mdx#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-turbo -e https://github.com/your-org/turbo-starter\n```\n\n----------------------------------------\n\nTITLE: Incorrect Task Declaration in Single-Package Workspace (JSON)\nDESCRIPTION: This snippet shows an incorrect way of declaring a task in the turbo.json file for a single-package workspace. It specifies a package name, which is not allowed in single-package mode.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/package-task-in-single-package-workspace.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"app#build\": {\n      \"cache\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing the @turbo/eslint-config package\nDESCRIPTION: The markdown heading shows the package name that contains internal eslint configurations for the turborepo project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/design-system/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Badges in HTML\nDESCRIPTION: This HTML snippet creates a set of badges for the Turborepo project, including links to Vercel, NPM package, license, and community discussions. It uses inline styling and external badge services.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo/README.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a aria-label=\"Vercel logo\" href=\"https://vercel.com/\">\n    <img src=\"https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&logo=Vercel&labelColor=000\">\n  </a>\n  <a aria-label=\"NPM version\" href=\"https://www.npmjs.com/package/turbo\">\n    <img alt=\"\" src=\"https://img.shields.io/npm/v/turbo.svg?style=for-the-badge&labelColor=000000\">\n  </a>\n  <a aria-label=\"License\" href=\"https://github.com/vercel/turborepo/blob/main/LICENSE\">\n    <img alt=\"\" src=\"https://img.shields.io/npm/l/turbo.svg?style=for-the-badge&labelColor=000000&color=\">\n  </a>\n  <a aria-label=\"Join the community on GitHub\" href=\"https://github.com/vercel/turborepo/discussions\">\n    <img alt=\"\" src=\"https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&logo=turborepo&labelColor=000000&logoWidth=20&logoColor=white\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server. This will serve the application at http://localhost:4200/ with automatic reload on file changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Incorrect Environment Variable Declaration with $ Prefix in Turborepo\nDESCRIPTION: This snippet shows the incorrect way of declaring environment variables in turbo.json by using the deprecated $ prefix, which causes an error since Turborepo 1.5.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/messages/invalid-env-prefix.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"globalEnv\": [\"$MY_ENV_VAR\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Cache in Turborepo\nDESCRIPTION: Shows how to run tasks without caching results using the deprecated --no-cache flag.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/run.mdx#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nturbo run dev --no-cache\n```\n\n----------------------------------------\n\nTITLE: Creating a New SolidStart Project with npm\nDESCRIPTION: Commands for creating a new SolidStart project either in the current directory or in a specified directory. Uses the solid-start template system.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-solid/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# create a new project in the current directory\nnpm init solid@latest\n\n# create a new project in my-app\nnpm init solid@latest my-app\n```\n\n----------------------------------------\n\nTITLE: Path Partitioning for Semantic Literals in Rust\nDESCRIPTION: Demonstrates how to use Glob::partition to handle semantic path components like parent directories that precede patterns. This code shows path canonicalization and matching against a partitioned glob.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\nuse dunce; // Avoids UNC paths on Windows.\nuse std::path::Path;\nuse wax::{Glob, Program};\n\nlet path: &Path = /* ... */ // Candidate path.\n\nlet directory = Path::new(\".\"); // Working directory.\nlet (prefix, glob) = Glob::new(\"../../src/**\").unwrap().partition();\nlet prefix = dunce::canonicalize(directory.join(&prefix)).unwrap();\nif dunce::canonicalize(path)\n    .unwrap()\n    .strip_prefix(&prefix)\n    .map(|path| glob.is_match(path))\n    .unwrap_or(false)\n{\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Example Monorepo Structure in Bash\nDESCRIPTION: Shows the directory structure of an example monorepo with a docs site, web site, and packages.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-3-0.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n.\n├── docs/\n│   ├── api-reference.md\n│   ├── getting-started.md\n│   └── intro.md\n├── apps/\n│   ├── docs-site/\n│   │   ├── components/\n│   │   ├── pages/\n│   │   │   └── [slug].js\n│   │   ├── README.md\n│   │   └── package.json\n│   └── web-site/\n│       ├── pages/\n│       ├── README.md\n│       └── package.json\n├── packages/\n│   ├── configs/\n│   └── ui/\n├── package.json\n└── turbo.json\n```\n\n----------------------------------------\n\nTITLE: Adding a New Transformer with plopjs\nDESCRIPTION: Command to create a new transformer using the plopjs template system, which automatically scaffolds the required files.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-codemod/src/transforms/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add-transformer\n```\n\n----------------------------------------\n\nTITLE: Running Tests for @turbo/repository\nDESCRIPTION: This command runs the test suite for the @turbo/repository package using pnpm.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-repository/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npnpm test\n```\n\n----------------------------------------\n\nTITLE: Using the pidlock Rust Library for PID File Management\nDESCRIPTION: A basic example showing how to use the pidlock library to create, acquire, and release a lock on a PID file. The lock is created with a file path, then acquired before use and released after operations are complete.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-pidlock/README.md#2025-04-22_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nextern crate pidlock;\n\nfn main() {\n    let mut lock = pidlock::Pidlock::new(\"/path/to/pidfile.pid\".into());\n    lock.acquire().unwrap();\n\n    ...\n\n    lock.release().unwrap();\n}\n```\n\n----------------------------------------\n\nTITLE: Package Identifier Documentation in Markdown\nDESCRIPTION: Documentation header identifying the ESLint configuration package name for Turborepo\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/basic/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server which will serve the application at http://localhost:4200/ with automatic reloading enabled.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Installing ESLint for Turborepo Configuration\nDESCRIPTION: Command to install ESLint as a prerequisite for using eslint-config-turbo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-config-turbo/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install eslint --save-dev\n```\n\n----------------------------------------\n\nTITLE: Defining the @turbo/top-issues package purpose in Markdown\nDESCRIPTION: Documentation explaining the purpose of the @turbo/top-issues internal package, which is used to extract top issues from the vercel/turbo repository and prepare them for posting to Slack via GitHub Actions.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/top-issues/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@turbo/top-issues`\n\nThis is an internal package that is used by a GitHub Actions Workflow to post\ntop issues in `vercel/turbo` to Slack.\n\nThe code here gets the top issues and writes them to a file. The GitHub Action\nworkflow will then take that file and post it to Slack with a marketplace\naction.\n```\n\n----------------------------------------\n\nTITLE: Walking Directory Trees with Glob Patterns in Rust\nDESCRIPTION: Demonstrates how to recursively walk a directory tree and find files matching a glob pattern. This example finds all markdown and text files in a directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::Glob;\n\nlet glob = Glob::new(\"**/*.{md,txt}\").unwrap();\nfor entry in glob.walk(\"doc\") {\n    let entry = entry.unwrap();\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using Injected TodoService in Next.js Page Component\nDESCRIPTION: This example shows how to inject and use the TodoService within a Next.js page component to fetch and display a list of todos.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-typeorm/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { inject, TodoService } from \"@repo/typeorm-service\";\n\nexport default async function Page(): Promise<JSX.Element> {\n  const todoService = inject(TodoService);\n\n  const todoList = await todoService.findAll();\n\n  return ...\n}\n```\n\n----------------------------------------\n\nTITLE: Building Turborepo Projects\nDESCRIPTION: Commands to navigate to the project directory and build all apps and packages using pnpm\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/fixtures/turbo_trace/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd my-turborepo\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Using Relative Paths in Turborepo Configuration\nDESCRIPTION: This configuration example shows the traditional approach of using relative paths to reference files outside of package boundaries, which can lead to inconsistencies if packages are moved.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-2-5.mdx#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"inputs\": [\"../../important-file.txt\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests using Karma test runner. This will run all unit tests defined in the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/web/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Documenting Unreleased Changes in Markdown\nDESCRIPTION: Lists upcoming changes for the next release, including new features, removals, and API changes.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-vt100/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [Unreleased]\n\n### Added\n\n- `Parser::process_cb`, which works the same as `Parser::process` except that\n  it calls callbacks during parsing when it finds a terminal escape which is\n  potentially useful but not something that affects the screen itself.\n- Support for xterm window resize request escape codes, via the new callback\n  mechanism.\n\n### Removed\n\n- `Screen::bells_diff`, `Screen::audible_bell_count`,\n  `Screen::visual_bell_count`, and `Screen::errors` have been removed in favor\n  of the new callback api described above.\n- `Cell` no longer implements `Default`.\n- `Screen` no longer implements `vte::Perform`.\n\n### Changed\n\n- `Parser::set_size` and `Parser::set_scrollback` have been moved to methods\n  on `Screen`, and `Parser::screen_mut` was added to get a mutable reference\n  to the screen.\n```\n\n----------------------------------------\n\nTITLE: Adding Storybook Build Output to .gitignore\nDESCRIPTION: Diff showing how to update .gitignore to exclude Storybook build outputs from source control.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_20\n\nLANGUAGE: diff\nCODE:\n```\n+ storybook-static\n```\n\n----------------------------------------\n\nTITLE: Displaying Turborepo LTS Policy Table in Markdown\nDESCRIPTION: A markdown table showing the LTS (Long Term Support) policy for Turborepo major versions, including release dates and end-of-life dates.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/support-policy.mdx#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Major version | Release date | End-of-life date |\n| ------------- | ------------ | ---------------- |\n| 2.x           | Jun. 4, 2024 |                  |\n| 1.x           | Dec. 9, 2021 | Jun. 4, 2026     |\n```\n\n----------------------------------------\n\nTITLE: Correct Turborepo Configuration with Global Environment Variables\nDESCRIPTION: Example of correct turbo.json configuration using globalEnv to declare environment variables at the root level.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/eslint-plugin-turbo/docs/rules/no-undeclared-env-vars.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"globalEnv\": [\"MY_API_TOKEN\"],\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\"dist/**\", \".next/**\", \"!.next/cache/**\"]\n    },\n    \"lint\": {},\n    \"dev\": {\n      \"cache\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Matching Paths Against Multiple Glob Patterns in Rust\nDESCRIPTION: Demonstrates how to create and use a combined matcher from multiple glob patterns. This allows checking if a path matches any of several glob patterns.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::{Glob, Program};\n\nlet any = wax::any([\n    \"src/**/*.rs\",\n    \"tests/**/*.rs\",\n    \"doc/**/*.md\",\n    \"pkg/**/PKGBUILD\",\n]).unwrap();\nassert!(any.is_match(\"src/token/mod.rs\"));\n```\n\n----------------------------------------\n\nTITLE: Removing Public npm Publishing Configuration\nDESCRIPTION: Diff showing what to remove from package.json files to switch from public npm publishing to a private npm organization scope.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-changesets/README.md#2025-04-22_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n- \"publishConfig\": {\n-  \"access\": \"public\"\n- },\n```\n\n----------------------------------------\n\nTITLE: Installing eslint-config-turbo with Bun\nDESCRIPTION: Command to install eslint-config-turbo package as a dev dependency using Bun (Beta) with filter parameter.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-config-turbo.mdx#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbun install --dev eslint-config-turbo --filter=@acme/eslint-config\n```\n\n----------------------------------------\n\nTITLE: Adding packageManager Field for Bun\nDESCRIPTION: JSON diff showing how to add the packageManager field to package.json for Bun (Beta).\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/upgrading.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n+ \"packageManager\": \"bun@1.2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Package Name Declaration in Markdown\nDESCRIPTION: Declares the package name @turbo/eslint-config using markdown heading syntax, followed by a brief description of its purpose.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-prisma/packages/config-eslint/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@turbo/eslint-config`\n\nCollection of internal eslint configurations.\n```\n\n----------------------------------------\n\nTITLE: Constructing a Glob Object in Rust\nDESCRIPTION: Shows how to create a new Glob object from a glob expression string. This is the foundation for all glob matching operations in the Wax library.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::Glob;\n\nlet glob = Glob::new(\"site/img/logo.svg\").unwrap();\n```\n\n----------------------------------------\n\nTITLE: Custom Rules Legacy Config\nDESCRIPTION: Configuration with custom rules using legacy eslintrc format.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/eslint-plugin-turbo.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rules\": {\n    \"turbo/no-undeclared-env-vars\": \"error\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Card Components in JSX\nDESCRIPTION: This code snippet demonstrates the use of custom Card and Cards components to create a structured layout for navigation links. Each Card represents a step in the process of creating a monorepo with Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/index.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Cards>\n    <Card\n        href=\"/docs/crafting-your-repository/structuring-a-repository\"\n        title=\"1. Structuring a repository\"\n        description=\"Design the directory structure of your monorepo.\"\n    />\n\n    <Card\n        href=\"/docs/crafting-your-repository/managing-dependencies\"\n        title=\"2. Managing dependencies\"\n        description=\"Using dependencies for sharing code\"\n    />\n\n    <Card\n        href=\"/docs/crafting-your-repository/creating-an-internal-package\"\n        title=\"3. Creating an internal package\"\n        description=\"Make a package in your repository\"\n    />\n\n    <Card\n        href=\"/docs/crafting-your-repository/configuring-tasks\"\n        title=\"4. Configuring tasks\"\n        description=\"Design your task patterns\"\n    />\n\n    <Card\n        href=\"/docs/crafting-your-repository/running-tasks\"\n        title=\"5. Running tasks\"\n        description=\"Run tasks as fast as possible\"\n    />\n\n    <Card\n        href=\"/docs/crafting-your-repository/caching\"\n        title=\"6. Caching\"\n        description=\"Never do the same work twice\"\n    />\n\n    <Card\n        href=\"/docs/crafting-your-repository/developing-applications\"\n        title=\"7. Developing apps\"\n        description=\"Run many apps in parallel\"\n    />\n\n    <Card\n        href=\"/docs/crafting-your-repository/using-environment-variables\"\n        title=\"8. Using environment variables\"\n        description=\"Account for variables in your environment\"\n    />\n\n    <Card\n        href=\"/docs/crafting-your-repository/constructing-ci\"\n        title=\"9. Constructing CI\"\n        description=\"Ship your applications\"\n    />\n\n    <Card\n        href=\"/docs/crafting-your-repository/upgrading\"\n        title=\"10. Upgrading\"\n        description=\"Upgrading your Turborepo version\"\n    />\n    <Card\n        href=\"/docs/crafting-your-repository/understanding-your-repository\"\n        title=\"11. Understanding your repository\"\n        description=\"Understanding your codebase with Turborepo\"\n    />\n\n</Cards>\n```\n\n----------------------------------------\n\nTITLE: Creating Card-Based Navigation for Turborepo Guides\nDESCRIPTION: Creates a card-based navigation interface for various Turborepo guides, including frameworks, CI integration, tools, single-package workspaces, code generation, task skipping, package publishing, platform handling, and multi-language support.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/index.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Cards>\n<Card\n  title=\"Frameworks\"\n  description=\"Integrate frameworks into your Turborepo\"\n  href=\"/docs/guides/frameworks\"\n/>\n<Card\n  title=\"Continuous Integration\"\n  description=\"Use Turborepo with your CI\"\n  href=\"/docs/guides/ci-vendors\"\n/>\n\n<Card\n  title=\"Tools\"\n  description=\"Bring your favorite tooling\"\n  href=\"/docs/guides/tools\"\n/>\n\n<Card\n  title=\"Single-package workspaces\"\n  description=\"Integrate with a standalone application\"\n  href=\"/docs/guides/single-package-workspaces\"\n/>\n\n<Card\n  title=\"Generating code\"\n  description=\"Create new code fast\"\n  href=\"/docs/guides/generating-code\"\n/>\n\n<Card\n  title=\"Skipping tasks\"\n  description=\"Go fast by doing nothing\"\n  href=\"/docs/guides/skipping-tasks\"\n/>\n\n<Card\n  title=\"Publishing packages\"\n  description=\"Use your packages outside of your Turborepo\"\n  href=\"/docs/guides/publishing-libraries\"\n/>\n\n<Card\n  title=\"Handling platforms\"\n  description=\"OS, Node.js version, and other factors\"\n  href=\"/docs/guides/handling-platforms\"\n/>\n\n<Card\n  title=\"Multi-language support\"\n  description=\"Many languages, one repository\"\n  href=\"/docs/guides/multi-language\"\n/>\n</Cards>\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.15.0 Release in Markdown\nDESCRIPTION: Documents changes for version 0.15.0, including new features, bug fixes, and internal refactoring.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-vt100/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.15.0] - 2021-12-15\n\n### Added\n\n- `Screen::errors` to track the number of parsing errors seen so far\n\n### Fixed\n\n- No longer generate spurious diffs in some cases where the cursor is past the\n  end of a row\n- Fix restoring the cursor position when scrolled back\n\n### Changed\n\n- Various internal refactorings\n```\n\n----------------------------------------\n\nTITLE: Specifying Turborepo Dry JSON Mode Flag\nDESCRIPTION: Shows the command-line flag for running Turborepo in JSON dry run mode, which outputs execution information in JSON format instead of actually running the tasks. This output is consumed by turbo-ignore for determining if tasks need to be run.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/tests/dry-json/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n--dry=json\n```\n\n----------------------------------------\n\nTITLE: Describing TSConfig Base Files in Turborepo\nDESCRIPTION: This markdown snippet explains the purpose of the tsconfig directory in a Turborepo project. It specifies that the directory contains base tsconfig.json files that are used as a foundation for all other TypeScript configurations in the project.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-gatsby/packages/typescript-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# `tsconfig`\n\nThese are base shared `tsconfig.json`s from which all other `tsconfig.json`'s inherit from.\n```\n\n----------------------------------------\n\nTITLE: Building and Packaging Turborepo LSP and VSCode Extension\nDESCRIPTION: Steps to build the Turborepo LSP binary, move it to the correct location, and package the VSCode extension. This process involves working with Rust crates and Node.js packaging.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-vsc/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Contributing\n\n## Build Instructions\n\n- build the `./crates/turborepo-lsp` binary\n- move it into `./packages/turbo-vsc/out`, with a name such as `turborepo-lsp-darwin-arm64`\n- bundle the app using `pnpm package`\n```\n\n----------------------------------------\n\nTITLE: Defining ESLint Configuration Package for Turborepo\nDESCRIPTION: This code snippet defines the name of the ESLint configuration package used in Turborepo. It specifies that the package contains a collection of internal ESLint configurations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-gatsby/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# `@turbo/eslint-config`\n\nCollection of internal eslint configurations.\n```\n\n----------------------------------------\n\nTITLE: Customizing Package Manager for Integration Test Fixture in Bash\nDESCRIPTION: This snippet illustrates how to customize the package manager for a fixture in the integration test. It specifies both the fixture name and the desired package manager version.\nSOURCE: https://github.com/vercel/turborepo/blob/main/turborepo-tests/integration/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n  $ . ${TESTDIR}/../../helpers/setup_integration_test.sh basic_monorepo \"yarn@1.22.17\"\n```\n\n----------------------------------------\n\nTITLE: Building and Running Turborepo Benchmarks\nDESCRIPTION: Two-step process for building Turborepo in release mode and running benchmarks. First builds the turbo package using Cargo with release profile, then executes benchmarks using pnpm.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-benchmark/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncargo build --package turbo --profile release-turborepo\n```\n\nLANGUAGE: shell\nCODE:\n```\npnpm run benchmark\n```\n\n----------------------------------------\n\nTITLE: Markdown Formatted Legal Terms Document\nDESCRIPTION: Legal terms document formatted in Markdown, containing sections for governing law, binding contract terms, arbitration procedures, dispute resolution, and related legal provisions for Vercel's service agreement.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/extra/terms.mdx#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Governing Law; Disputes; Arbitration.\n\n**Law.** These Terms shall be governed by the laws of the State of California without regard to its conflict of laws provisions and the parties agree to the exclusive jurisdiction of the state and federal courts in San Francisco county.\n\n**Binding Contract.** You acknowledge that these Terms are a contract between you and Vercel, even though it is electronic and is not physically signed by you and Vercel, and it governs your use of the Site.\n\n**Arbitration.** Certain portions of this Section are deemed to be a \"written agreement to arbitrate\" pursuant to the Federal Arbitration Act (\"FAA\")...\n```\n\n----------------------------------------\n\nTITLE: Storybook MDX Configuration for Button Component\nDESCRIPTION: MDX file that configures the Storybook documentation and interactive examples for the Button component.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/design-system/README.md#2025-04-22_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nimport { Button } from '@acme/ui/button';\nimport { Meta, Story, Preview, Props } from '@storybook/addon-docs/blocks';\n\n<Meta title=\"Components/Button\" component={Button} />\n\n# Button\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Donec euismod, nisl eget consectetur tempor, nisl nunc egestas nisi, euismod aliquam nisl nunc euismod.\n\n## Props\n\n<Props of={Box} />\n\n## Examples\n\n<Preview>\n  <Story name=\"Default\">\n    <Button>Hello</Button>\n  </Story>\n</Preview>\n```\n\n----------------------------------------\n\nTITLE: Installing JavaScript Dependencies for @turbo/repository\nDESCRIPTION: This command installs the necessary JavaScript dependencies for the @turbo/repository package using pnpm.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-repository/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Identifying frequently imported packages with turbo query in Turborepo\nDESCRIPTION: This GraphQL query finds packages that are directly imported more than 10 times in the monorepo. It helps identify packages that could cause cache invalidation when changed.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/understanding-your-repository.mdx#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n> turbo query \"query { packages(filter: { greaterThan: { field: DIRECT_DEPENDENT_COUNT, value: 10 } }) { items { name } } }\"\n{\n  \"data\": {\n    \"packages\": {\n      \"items\": [\n        {\n          \"name\": \"utils\"\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updated Environment Variable Configuration in turbo.json\nDESCRIPTION: Shows the new syntax for declaring environment variables in turbo.json using 'env' and 'globalEnv' properties instead of '$' prefix notation.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/blog/turbo-1-5-0.mdx#2025-04-22_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"globalDependencies\": [\n-   \"$DATABASE_URL\"\n  ],\n+ \"globalEnv\": [\n+   \"DATABASE_URL\"\n+ ],\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\n-       \"$BUILD_ENV\"\n      ],\n+     \"env\": [\n+       \"BUILD_ENV\"\n+     ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Turbo Config (Turborepo 1.1.0)\nDESCRIPTION: Codemod to create a turbo.json file at the root of the project based on the 'turbo' key in package.json, which is then deleted from package.json.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_14\n\nLANGUAGE: diff\nCODE:\n```\n// After, package.json\n{\n  \"name\": \"@acme/workspace\",\n  \"private\": true,\n- \"turbo\": {\n-   \"pipeline\": {\n-     ...\n-   }\n- },\n}\n```\n\nLANGUAGE: diff\nCODE:\n```\n+ {\n+   \"$schema\": \"https://turbo.build/schema.json\",\n+   \"pipeline\": {\n+     ...\n+   }\n+ }\n```\n\n----------------------------------------\n\nTITLE: Configuring turbo.json with Version-Specific Web-Sourced JSON Schema\nDESCRIPTION: Sets up the turbo.json file to use a specific major version of the JSON Schema from the Turborepo website. This ensures compatibility with a specific version of Turborepo's schema.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/getting-started/editor-integration.mdx#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://turbo.build/schema.v1.json\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Package Name for TypeScript Types in Markdown\nDESCRIPTION: This code snippet defines the package name '@turbo/types' which contains TypeScript types for turbo.json. It's presented as a markdown heading.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-types/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# `@turbo/types`\n```\n\n----------------------------------------\n\nTITLE: Cleaning Globs (Turborepo 2.0.0)\nDESCRIPTION: Codemod to fix invalid glob patterns due to changes in glob processing in turbo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/reference/turbo-codemod.mdx#2025-04-22_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\n        // Collapse back-to-back doublestars\n-         \"**/**.ext\",\n+         \"**.ext\"\n        // Ensure a file extension does not have a double-star\n-         \"**.ext\",\n+         \"**/*.ext\"\n        // Proper expansion of directory names\n-         \"prefix**/\",\n+         \"prefix*/**\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Runtime Environment Variable Setting in package.json\nDESCRIPTION: This example demonstrates an incorrect way of setting environment variables at runtime in a package.json file. Turborepo cannot detect or hash inline variables set this way.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/using-environment-variables.mdx#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"dev\": \"export MY_VARIABLE=123 && next dev\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying GitHub Repository Path in Markdown\nDESCRIPTION: Markdown code that shows the link to the packages directory in the turborepo GitHub repository where the test-utils package is used.\nSOURCE: https://github.com/vercel/turborepo/blob/main/packages/turbo-test-utils/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[turborepo/packages/](https://github.com/vercel/turborepo/tree/main/packages)\n```\n\n----------------------------------------\n\nTITLE: Configuring Root Package.json for Turborepo\nDESCRIPTION: Basic package.json configuration for a Turborepo project with build and test scripts.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/ci-vendors/gitlab-ci.mdx#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-turborepo\",\n  \"scripts\": {\n    \"build\": \"turbo run build\",\n    \"test\": \"turbo run test\"\n  },\n  \"devDependencies\": {\n    \"turbo\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Cache Outputs for Vite Build\nDESCRIPTION: Configure a Vite build task with appropriate cache outputs to store the dist directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/configuring-tasks.mdx#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tasks\": {\n    \"build\": {\n      \"outputs\": [\"dist/**\"] // [!code highlight]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Turborepo Migration Codemod with PNPM\nDESCRIPTION: Command to run the Turborepo codemod migration tool using PNPM package manager.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/crafting-your-repository/upgrading.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx @turbo/codemod migrate\n```\n\n----------------------------------------\n\nTITLE: Creating a Directory for Storybook App\nDESCRIPTION: Command to create a directory structure for the Storybook application within the monorepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/docs/site/content/docs/guides/tools/storybook.mdx#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmkdir apps/storybook\ncd apps/storybook\n```\n\n----------------------------------------\n\nTITLE: Defining ESLint Config Package Name\nDESCRIPTION: Package name declaration for the internal ESLint configuration collection used in Turborepo.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-vue-nuxt/packages/eslint-config-custom/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n@turbo/eslint-config\n```\n\n----------------------------------------\n\nTITLE: Building Angular Application\nDESCRIPTION: Command to build the Angular application for production. The build output will be placed in the dist/ directory.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-angular/apps/docs/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Referencing Turbo ESLint Configuration Package in Markdown\nDESCRIPTION: This code block defines the name of the ESLint configuration package used internally by Turborepo. It introduces '@turbo/eslint-config' as a collection of internal ESLint configurations.\nSOURCE: https://github.com/vercel/turborepo/blob/main/examples/with-nestjs/packages/eslint-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Inspecting Glob Metadata in Rust\nDESCRIPTION: Shows how to use Wax's inspection APIs to query glob metadata, specifically counting the number of captures in a glob pattern. This example demonstrates checking a video file matching pattern.\nSOURCE: https://github.com/vercel/turborepo/blob/main/crates/turborepo-wax/README.md#2025-04-22_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\nuse wax::Glob;\n\nlet glob = Glob::new(\"videos/**/{*.{mp4,webm}}\").unwrap();\nassert_eq!(2, glob.captures().count());\n```"
  }
]
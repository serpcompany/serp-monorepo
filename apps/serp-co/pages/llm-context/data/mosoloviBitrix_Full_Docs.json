[
  {
    "owner": "mosolovi",
    "repo": "bitrix_full_docs",
    "content": "TITLE: Implementing AJAX Functionality in Bitrix Framework\nDESCRIPTION: This code snippet demonstrates how to implement AJAX functionality in a Bitrix Framework project. It includes server-side PHP handling of AJAX requests and client-side JavaScript for making AJAX calls and handling responses.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/AJAX_rasshirenie.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire($_SERVER[\"DOCUMENT_ROOT\"].\"/bitrix/header.php\");\n$APPLICATION->SetTitle(\"AJAX\");\nCJSCore::Init(array('ajax'));\n$sidAjax = 'testAjax';\nif(isset($_REQUEST['ajax_form']) && $_REQUEST['ajax_form'] == $sidAjax){\n\t$GLOBALS['APPLICATION']->RestartBuffer();\n\techo CUtil::PhpToJSObject(array(\n\t\t'RESULT' => 'HELLO',\n\t\t'ERROR' => ''\n\t));\n\tdie();\n}\n?>\n<div class=\"group\">\n\t<div id=\"block\"></div >\n\t<div id=\"process\">wait ... </div >\n</div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<script>\n\twindow.BXDEBUG = true;\nfunction DEMOLoad(){\n\tBX.hide(BX(\"block\"));\n\tBX.show(BX(\"process\"));\n\tBX.ajax.loadJSON(\n\t\t'<?=$APPLICATION->GetCurPage()?>?ajax_form=<?=$sidAjax?>',\n\t\tDEMOResponse\n\t);\n}\nfunction DEMOResponse (data){\n\tBX.debug('AJAX-DEMOResponse ', data);\n\tBX(\"block\").innerHTML = data.RESULT;\n\tBX.show(BX(\"block\"));\n\tBX.hide(BX(\"process\"));\n\tBX.onCustomEvent(\n\t\tBX(BX(\"block\")),\n\t\t'DEMOUpdate'\n\t);\n}\nBX.ready(function(){\n\t/*\n\tBX.addCustomEvent(BX(\"block\"), 'DEMOUpdate', function(){\n\t\twindow.location.href = window.location.href;\n\t});\n\t*/\n\tBX.hide(BX(\"block\"));\n\tBX.hide(BX(\"process\"));\n   \n\tBX.bindDelegate(\n\t\tdocument.body, 'click', {className: 'css_ajax' },\n\t\tfunction(e){\n\t\t\tif(!e)\n\t\t\t\te = window.event;\n         \n\t\tDEMOLoad();\n\t\treturn BX.PreventDefault(e);\n\t\t}\n\t);\n   \n});\n</script>\n<div class=\"css_ajax\">click Me</div>\n<?php require($_SERVER[\"DOCUMENT_ROOT\"].\"/bitrix/footer.php\");?>\n```\n\n----------------------------------------\n\nTITLE: Binding Anchors to Side Panel in Bitrix\nDESCRIPTION: This JavaScript code snippet demonstrates how to use `BX.SidePanel.Instance.bindAnchors` to define rules for handling link clicks. It configures the side panel to open specific pages in an iframe based on URL patterns. The rules define conditions using regular expressions and specify loaders for different types of content.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/Obrabotka_nazhatij_ssylok.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.SidePanel.Instance.bindAnchors({\n\trules:\n\t[\n\t\t{\n\t\t\tcondition: [\n\t\t\t\t\"/company/personal/user/(\\\\d+)/tasks/task/view/(\\\\d+)/\",\n\t\t\t\t\"/workgroups/group/(\\\\d+)/tasks/task/view/(\\\\d+)/\",\n\t\t\t\t\"/extranet/contacts/personal/user/(\\\\d+)/tasks/task/view/(\\\\d+)/\"\n\t\t\t],\n\t\t\tloader: \"tasks:view-loader\",\n\t\t\t//Игнорировать ссылки, содержащие следующие параметры в Query String\n\t\t\tstopParameters: [\n\t\t\t\t\"PAGEN_(\\\\d+)\",\n\t\t\t\t\"MID\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tcondition: [\n\t\t\t\t\"/company/personal/user/(\\\\d+)/tasks/task/edit/0/\",\n\t\t\t\t\"/workgroups/group/(\\\\d+)/tasks/task/edit/0/\",\n\t\t\t\t\"/extranet/contacts/personal/user/(\\\\d+)/tasks/task/edit/0/\"\n\t\t\t],\n\t\t\tloader: \"tasks:new-loader\"\n\t\t},\n\t\t{\n\t\t\tcondition: [\n\t\t\t\tnew RegExp(\"/crm/lead/details/[0-9]+/\", \"i\")\n\t\t\t],\n        \t\tloader: \"crm:entity-details-loader\"\n\t\t},\n\t\t{\n\t\t\tcondition: [\n\t\t\t\t\"/company/personal/user/(\\\\d+)/groups/create/\"\n\t\t\t],\n\t\t\tloader: \"intranet:group-create-loader\",\n\t\t\t\n\t\t\t//Опции, с которыми откроется слайдер \n\t\t\toptions: {\n\t\t\t\twidth: 1200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tcondition: [\n\t\t\t\t/\\\\/online\\\\/\\\\?(IM_DIALOG|IM_HISTORY)=([a-zA-Z0-9_|]+)/i\n\t\t\t],\n\t\t\t//Собственный обработчик нажатия на ссылку.\n\t\t\t//Вместо слайдера откроется мессенджер\n\t\t\thandler: function(event, link)\n\t\t\t{\n\t\t\t\tif (!window.BXIM)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar type = link.matches[1];\n\t\t\t\tvar id = link.matches[2];\n\t\n\t\t\t\tif (type === \"IM_HISTORY\")\n\t\t\t\t{\n\t\t\t\t\tBXIM.openHistory(id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tBXIM.openMessenger(id);\n\t\t\t\t}\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t]\n});\n```\n\n----------------------------------------\n\nTITLE: Добавление лида в Bitrix CRM (PHP)\nDESCRIPTION: Пример добавления нового лида в CRM Bitrix. Требуется подключение модуля 'crm'. Создается объект CCrmLead и вызывается метод add() с массивом полей.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Osnovnye_metody_raboty.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nif (\\Bitrix\\Main\\Loader::includeModule('crm')) \n{ \n\t$entity = new CCrmLead; \n\t$fields = array( \n\t\t'TITLE' => 'Test' \n\t); \n\techo $entity->add($fields); \n}\n```\n\n----------------------------------------\n\nTITLE: Sending Special Notifications using \\CIMNotify::Add\nDESCRIPTION: This example shows how to send special notifications using the `\\CIMNotify::Add` method. This requires the `im` module to be included and specifies various parameters such as `TO_USER_ID`, `FROM_USER_ID`, `NOTIFY_TYPE`, `NOTIFY_MODULE`, `NOTIFY_EVENT`, `NOTIFY_MESSAGE`, `PUSH_MESSAGE`, and `PUSH_IMPORTANT`. These notifications can include both messages and push notifications.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/CPullStack/AddByUsers.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nif (CModule::IncludeModule('im'))\n{\n\t\\CIMNotify::Add([\n\t\t\"TO_USER_ID\" => $USER->GetId(),\n\t\t\"FROM_USER_ID\" => 0, \n\t\t\"NOTIFY_TYPE\" => IM_NOTIFY_SYSTEM, \n\t\t\"NOTIFY_MODULE\" => \"intranet\", \n\t\t\"NOTIFY_EVENT\" => \"security_otp\",\n\t\t\"NOTIFY_MESSAGE\" => \"Совершена попытка входа в Ваш аккаунт через Мобильное устройство iPhone с IP 95.55.202.217 (Россия).[br][br]Код подтверждения входа: [b]722665[/b].[br][br] Используйте этот код для входа в ваш Битрикс24. Никому не передавайте его и не вводите на других сайтах![br][br]Если Вы не запрашивали код, срочно смените пароль в настройках.\",\n\t\t\"PUSH_MESSAGE\" => \"Код подтверждения входа: 722665. Если Вы не запрашивали код, срочно смените пароль в настройках.\",\n\t\t\"PUSH_IMPORTANT\" => \"N\",\n\t]);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Opening Side Panel with URL and Options - JavaScript\nDESCRIPTION: This snippet demonstrates how to open a side panel with a specified URL and optional parameters. It returns true if the panel opens successfully, otherwise returns false. It also specifies various options to customize the side panel's behavior.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.open(\n\turl[, options]\n);\n```\n\n----------------------------------------\n\nTITLE: Get Web Form List using CForm::GetList\nDESCRIPTION: This code retrieves a list of web forms based on specified filters. It sets up an array of filters, calls the `CForm::GetList` method to retrieve the forms, and iterates through the result to display the form data. The example demonstrates filtering by ID, name, SID, description and assigned sites.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n// сформируем массив фильтра\n$arFilter = Array(\n\t\"ID\"                      => \"1 | 2\",          // ID=1 либо ID=2\n\t\"ID_EXACT_MATCH\"          => \"Y\",              // точное совпадение по ID\n\t\"NAME\"                    => \"Анкета\",         // в заголовке веб-формы есть слово \"Анкета\"\n\t\"NAME_EXACT_MATCH\"        => \"N\",              // не точное совпадение по NAME\n\t\"SID\"                     => \"ANKETA\",         // символьный идентификатор равен ANEKTA\n\t\"SID_EXACT_MATCH\"         => \"Y\",              // точное совпадение по SID\n\t\"DESCRIPTION\"             => \"заполните\",      // в описании есть слово \"заполните\"\n\t\"DESCRIPTION_EXACT_MATCH\" => \"N\",              // не точное совпадение по DESCRIPTION\n\t\"SITE\"                    => array(\"r1\", \"e2\") // веб-форма приписана и к сайтам r1, e2\n);\n// получим список всех форм, для которых у текущего пользователя есть право на заполнение\n$rsForms = CForm::GetList($by=\"s_id\", $order=\"desc\", $arFilter, $is_filtered);\nwhile ($arForm = $rsForms->Fetch())\n{\n\techo \"<pre>\"; print_r($arForm); echo \"</pre>\";\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: CFormResult::Add Usage Example in PHP\nDESCRIPTION: Complete example showing how to use CFormResult::Add to create a new form result with various field types including text, date, textarea, radio buttons, checkboxes, dropdown, multiselect, and image upload.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// ID веб-формы\n$FORM_ID = 4;\n// массив описывающий загруженную на сервер фотографию\n$arImage = CFile::MakeFileArray($_SERVER[\"DOCUMENT_ROOT\"].\"/images/photo.gif\");\n// массив значений ответов\n$arValues = array (\n\t\"form_text_586\"                 => \"Иванов Иван\",    // \"Фамилия, имя, отчество\"\n\t\"form_date_587\"                 => \"01.06.1904\",     // \"Дата рождения\"\n\t\"form_textarea_588\"             => \"г. Москва\",      // \"Адрес\"\n\t\"form_radio_VS_MARRIED\"         => 590,              // \"Женаты/замужем?\"\n\t\"form_checkbox_VS_INTEREST\"     => array(612, 613),  // \"Увлечения\"\n\t\"form_dropdown_VS_AGE\"          => 601,              // \"Возраст\"\n\t\"form_multiselect_VS_EDUCATION\" => array(602, 603),  // \"Образование\"\n\t\"form_text_606\"                 => 300,              // \"Доход\"\n\t\"form_image_607\"                => $arImage          // \"Фотография\"\n);\n// создадим новый результат\nif ($RESULT_ID = CFormResult::Add($FORM_ID, $arValues))\n{\n\techo \"Результат #\".$RESULT_ID.\" успешно создан\";\n}\nelse\n{\n\tglobal $strError;\n\techo $strError;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Binding Anchors to Side Panel - JavaScript\nDESCRIPTION: This snippet registers click handlers for specified anchor links to open a side panel instead of navigating away from the page. It allows for customization of the opening options and includes validation and custom handlers.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.bindAnchors(\n\tanchors\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Web Form Template Using CFormOutput in PHP\nDESCRIPTION: Example template for a web form using the CFormOutput class. This template demonstrates how to display form description, validation errors, form fields, CAPTCHA (if used), and form buttons. The $FORM variable is an instance of CFormOutput that is automatically created and initialized outside the template.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n <!-- Выведем описание формы -->\n<table width=\"100%\" cellpadding=\"2\" cellspacing=\"0\" border=\"0\">\n\t<tr>\n\t\t<td align=\"center\"><?=$FORM->ShowFormDescription()?></td>\n\t</tr>\n</table>\n<!-- Если есть ошибки валидатора - выведем их -->\n<?if($FORM->isFormErrors()):?>\n<table width=\"100%\" cellpadding=\"2\" cellspacing=\"0\" border=\"0\">\n\t<tr>\n\t\t<td><?=$FORM->ShowFormErrors()?></td>\n\t</tr>\n</table>\n<?endif?>\n<!-- Выведем поля формы -->\n<table width=\"100%\" cellpadding=\"2\" cellspacing=\"0\" border=\"0\">\n\t<tr>\n\t\t<td width=\"40%\" valign=\"top\" align=\"right\"><?=$FORM->ShowInputCaption('test_q')?>: </td>\n\t\t<td width=\"60%\" valign=\"top\"><?=$FORM->ShowInput('test_q')?></td>\n\t</tr>\n\t<tr>\n\t\t<td valign=\"top\" align=\"right\"><?=$FORM->ShowInputCaption('test_q_text')?>: </td>\n\t\t<td valign=\"top\"><?=$FORM->ShowInput('test_q_text')?></td>\n\t</tr>\n\t<tr>\n\t\t<td valign=\"top\" align=\"right\"><?=$FORM->ShowInputCaption('test_q_textarea')?>: </td>\n\t\t<td valign=\"top\"><?=$FORM->ShowInput('test_q_textarea')?></td>\n\t</tr>\n</table>\n<!-- Если используется CAPTCHA - выведем картинку и поле для ввода -->\n<?if($FORM->isUseCaptcha()):?>\n<table width=\"100%\" cellpadding=\"2\" cellspacing=\"0\" border=\"0\">\n\t<tr>\n\t\t<td colspan=\"2\" height=\"8\"></td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"40%\" valign=\"top\" align=\"right\" class=\"text\">Защита от автоматической регистрации: </td>\n\t\t<td width=\"60%\" valign=\"top\"><?=$FORM->ShowCaptchaImage()?></td>\n\t</tr>\n\t<tr>\n\t\t<td valign=\"top\" align=\"right\" class=\"text\">Введите слово с картинки<?=$FORM->ShowRequired()?>: </td>\n\t\t<td valign=\"top\"><?=$FORM->ShowCaptchaField()?></td>\n\t</tr>\n</table>\n<?endif?>\n<!-- Выведем кнопки формы -->\n<table width=\"100%\" cellpadding=\"2\" cellspacing=\"0\" border=\"0\">\n\t<tr>\n\t\t<td width=\"40%\">&nbsp;</td>\n\t\t<td width=\"60%\">\n\t\t\t<?=$FORM->ShowSubmitButton()?>&nbsp;\n\t\t\t<?=$FORM->ShowApplyButton()?>&nbsp;\n\t\t\t<?=$FORM->ShowResetButton()?>\n\t\t</td>\n\t</tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Web Form Results Using CFormResult::GetList in PHP\nDESCRIPTION: This method returns a list of web form results as a CDBResult object. It allows filtering by various criteria including dates, user IDs, session IDs, and form field values. Note that the returned list contains only result fields, not the actual form field values which need to be retrieved separately.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCFormResult::GetList(\n\tint form_id,\n\tstring &by = \"s_timestamp\",\n\tstring &order = \"desc\",\n\tarray filter = array(),\n\tbool &is_filtered,\n\tstring check_rights = \"Y\",\n\tmixed limit = false\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Event Handling in a Button Class with Event.EventEmitter\nDESCRIPTION: This snippet demonstrates how to create a Button class that extends Event.EventEmitter to implement custom event handling. It shows how to emit events at different stages of the button's lifecycle.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\n// Отправка событий в классе наследнике \nclass Button extends Event.EventEmitter\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\t// Отправка события BX.MyModule.MyClass:ready\n\t\tthis.emit('BX.UI.Button:ready');\n\t}\n\t\n\trender()\n\t{\n\t\t// Отправка события BX.MyModule.MyClass:beforeRender\n\t\tthis.emit('BX.UI.Button:beforeRender');\n\t\t// ... \n\t\t// Отправка события BX.MyModule.MyClass:render\n\t\tthis.emit('BX.UI.Button:render');\n\t}\n\t\n\tonClick()\n\t{\n\t\tconst event = new Event.BaseEvent({data: {...}});\n\t\t// Отправка события BX.MyModule.MyClass:render\n\t\tthis.emit('BX.UI.Button:click', event);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Public Link for File in Bitrix Disk\nDESCRIPTION: Demonstrates how to create a public link for a file and obtain its short URL.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif ($file) \n{ \n\t$urlManager = \\Bitrix\\Disk\\Driver::getInstance()->getUrlManager(); \n\t$extLink = $file->addExternalLink( \n\t\tarray( \n\t\t\t'CREATED_BY' => 1, \n\t\t\t'TYPE' => \\Bitrix\\Disk\\Internals\\ExternalLinkTable::TYPE_MANUAL, \n\t\t) \n\t); \n\t$extLinkUrl = $urlManager->getShortUrlExternalLink( \n\t\tarray( \n\t\t\t'hash' => $extLink->getHash(), \n\t\t\t'action' => 'default', \n\t\t), \n\t\ttrue \n\t); \n\techo $extLink->getHash().'<br>'; \n\techo $extLinkUrl; \n}\n```\n\n----------------------------------------\n\nTITLE: Adding Push Notification to Queue with CPushManager in PHP\nDESCRIPTION: This snippet demonstrates how to add a push notification to the queue using the CPushManager class in Bitrix. It creates an instance of CPushManager and uses the `AddQueue()` method to add a notification to the queue with specified parameters like USER_ID, MESSAGE, TAG, and SUB_TAG. This ensures that the push notification will be sent to the user either immediately if they are offline or after a short delay if they are online.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/CPushManager.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$CPushManager = new CPushManager();\n$CPushManager->AddQueue(Array(\n\t'USER_ID' => 1,\n\t'MESSAGE' => 'Тестовое сообщение',\n\t'TAG' => 'IM_MESS_1',\n\t'SUB_TAG' => 'IM_MESS'\n));Копировать\n```\n\n----------------------------------------\n\nTITLE: Modifying Filter Settings with BX Library in Bitrix\nDESCRIPTION: Example showing how to change filter settings on a page using the Bitrix JavaScript BX library. The code obtains a filter by ID, gets its API interface, sets field values, and applies the changes.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Biblioteka_interfejsov.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar filter = BX.Main.filterManager.getById('my_filter_id');\nif (filter) {\n\tvar filterApi = filter.getApi();\n\tfilterApi.setFields({'NAME': 'main 17.0.7'});\n\tfilterApi.apply();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing onAfterResultStatusChange Event Handler in Bitrix\nDESCRIPTION: Example of implementing an event handler for the onAfterResultStatusChange event. This handler specifically targets a form with ID=6, and when the status changes to ID=2 (accepted), it records the current user's ID in a hidden field named 'status_user'.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Sobytija/onAfterResultStatusChange.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\npublic static function my_onAfterResultStatusChange($WEB_FORM_ID, $RESULT_ID, $NEW_STATUS_ID, $CHECK_RIGHTS)\n{\n\tglobal $USER;\n  \n\t// действие обработчика распространяется только на форму с ID=6\n\tif ($WEB_FORM_ID == 6) \n\t{\n\t\t// 1 - статус \"в проверке\" (по умолчанию), 2 - статус \"принято\"\n\t\t// запишем в скрытое поле 'status_user' идентификатор пользователя, \n\t\t// совершившего изменение статуса.\n\t\tif ($NEW_STATUS_ID == 2)\n\t\t\tCFormResult::SetField($RESULT_ID, 'status_user', $USER->ID);\n\t}\n}\n// зарегистрируем функцию как обработчик события\nAddEventHandler('form', 'onAfterResultStatusChange', 'my_onAfterResultStatusChange');\n```\n\n----------------------------------------\n\nTITLE: Using BX.type Functions for Data Type Checking in JavaScript\nDESCRIPTION: This snippet demonstrates the usage of various BX.type functions to check data types in the Bitrix JavaScript library. These functions are used to determine if a variable is a specific type such as string, number, boolean, function, DOM node, array, or date.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Jadro_biblioteki/Tipy_dannyh.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nBX.type.isString(variable);\nBX.type.isNotEmptyString(variable);\nBX.type.isBoolean(variable);\nBX.type.isNumber(variable);\nBX.type.isFunction(variable);\nBX.type.isDomNode(variable);\nBX.type.isElementNode(variable);\nBX.type.isArray(variable);\nBX.type.isDate(variable);\n```\n\n----------------------------------------\n\nTITLE: Example of Side Panel with Custom Content - JavaScript\nDESCRIPTION: This snippet shows how to use the side panel to display custom content by passing parameters and a contentCallback function. It illustrates the asynchronous handling of data within the side panel.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.open(\"crm:activity-view\", {\n\t//Пробрасываем свои данные в слайдер\n\tdata: {\n\t\tminRepeats: 30,\n\t\tmaxRepeats: 100,\n\t\trepeatString: \"==========\"\n\t},\n\tcontentCallback: function(slider) {\n\t\tvar promise = new BX.Promise();\n\t\t//Эмуляция асинхронной операции (как правило, это ajax)\n\t\tsetTimeout(function() {\n\t\t\t//Читаем свои данные\n\t\t\tvar minRepeats = slider.getData().get(\"minRepeats\");\n\t\t\tvar maxRepeats = slider.getData().get(\"maxRepeats\");\n\t\t\tvar repeatString = slider.getData().get(\"repeatString\");\n\t\t\tvar repeats = Math.floor(Math.random() * (maxRepeats - minRepeats) + minRepeats);\n\t\t\tslider.getData().set(\"repeats\", repeats); //Записываем новые данные\n\t\t\tvar result =\n\t\t\t\t\"minRepeats: \" + minRepeats + \"<br>\" +\n\t\t\t\t\"maxRepeats: \" + maxRepeats + \"<br>\" +\n\t\t\t\t\"repeats: \" + repeats + \"<br><br>\" +\n\t\t\t\t(repeatString + \"<br>\").repeat(repeats)\n\t\t\t;\n\t\t\tpromise.fulfill(result);\n\t\t}, 1000);\n\t\treturn promise;\n\t},\n\tanimationDuration: 100,\n\twidth: 600,\n\tevents: {\n\t\tonLoad: function(event) {\n\t\t\tvar slider = event.getSlider();\n\t\t\tconsole.log(slider.getData().get(\"repeats\")); //Читаем записанные данные\n\t\t}\n\t}\n});\n```\n\n----------------------------------------\n\nTITLE: Usage Example of CFormResult::GetDataByIDForHTML in PHP\nDESCRIPTION: A practical example demonstrating how to retrieve form result data, display a text answer, show an uploaded image, and display a calculated form field value.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetDataByIDForHTML.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?\n$RESULT_ID = 189; // ID результата\n// получим данные результата\n$arValues = CFormResult::GetDataByIDForHTML($RESULT_ID, \"Y\");\n// выведем ответ на вопрос \"Фамилия, имя, отчество\"\necho $arValues[\"form_text_586\"]; // \"Иванов Василий\"\n// выведем фотографию загруженную в качестве ответа на вопрос \"Фотография\"\nCFile::ShowImage($arValues[\"form_image_607\"], 200, 200, \"border=0\", \"\", true);\n// выведем значение поля веб-формы \"Рассчитанная стоимость\"\necho $arValues[\"form_textarea_ADDITIONAL_149\"]; // 134 руб.\n?>\n```\n\n----------------------------------------\n\nTITLE: Example of Creating a New Status with CFormStatus::Set in Bitrix\nDESCRIPTION: A complete example of adding a new status to a web form with specific permissions. The example sets various properties like title, description, sorting order, and permissions for different user groups.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormStatus/Set.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$FORM_ID = 4; // ID веб-формы\n$arFields = array(\n\t\"FORM_ID\"             => $FORM_ID,               // ID веб-формы\n\t\"C_SORT\"              => 100,                    // порядок сортировки\n\t\"ACTIVE\"              => \"Y\",                    // статус активен\n\t\"TITLE\"               => \"Опубликовано\",         // заголовок статуса\n\t\"DESCRIPTION\"         => \"Окончательный статус\", // описание статуса\n\t\"CSS\"                 => \"statusgreen\",          // CSS класс\n\t\"HANDLER_OUT\"         => \"\",                     // обработчик\n\t\"HANDLER_IN\"          => \"\",                     // обработчик\n\t\"DEFAULT_VALUE\"       => \"N\",                    // не по умолчанию\n\t\"arPERMISSION_VIEW\"   => array(2),               // право просмотра для всех\n\t\"arPERMISSION_MOVE\"   => array(),                // право перевода только админам\n\t\"arPERMISSION_EDIT\"   => array(),                // право редактирование для админам\n\t\"arPERMISSION_DELETE\" => array(),                // право удаления только админам\n);\n$NEW_ID = CFormStatus::Set($arFields);\nif ($NEW_ID>0) echo \"Успешно добавлен ID=\".$NEW_ID;\nelse // ошибка\n{\n\t// выводим текст ошибки\n\tglobal $strError;\n\techo $strError;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Event Binding with JavaScript\nDESCRIPTION: This snippet demonstrates the Event.bind function used to attach a click event listener to a button element. The listener executes when the button is clicked.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.bind.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\nconst button = document.querySelector('.ui-btn');\nEvent.bind(button, 'click', (event) => {\n\t// ...\n});\n```\n\n----------------------------------------\n\nTITLE: Specific Module Event Listener (JavaScript)\nDESCRIPTION: This JavaScript code sets up an event listener for a specific module ('main'). It checks for a specific command ('check') and executes code accordingly.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull.md#2025-04-20_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.addCustomEvent(\"onPullEvent-main\", function(module_id,command,params) {\n\tif (command == 'check')\n\t{\n\t\tconsole.log('Command from module MAIN - its work!');\n\t}\n});\n```\n\n----------------------------------------\n\nTITLE: Handling CRM Quote Events in PHP\nDESCRIPTION: Events related to CRM quotes, including adding, updating, deleting quotes, and managing quote products and numbers.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\nOnBeforeCrmQuoteAdd\nOnAfterCrmQuoteAdd\nOnBeforeCrmQuoteUpdate\nOnAfterCrmQuoteUpdate\nOnBeforeCrmQuoteDelete\nOnAfterCrmQuoteDelete\nOnBeforeCrmQuoteNumberSet\nOnAfterCrmQuoteProductRowsSave\n```\n\n----------------------------------------\n\nTITLE: Step-by-Step Reindexing PHP Implementation Example\nDESCRIPTION: Demonstrates a typical implementation of progressive reindexing using CSearch::ReIndexAll with a 60-second execution time limit and progress tracking.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Poisk/Klassy/CSearch/ReIndexAll.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$NS = false;\n$NS = CSearch::ReIndexAll(false, 60, $NS);\nwhile(is_array($NS))\n\t$NS = CSearch::ReIndexAll(false, 60, $NS);\necho $NS;\n?>\n```\n\n----------------------------------------\n\nTITLE: Opening Sidepanel with Custom Content using contentCallback\nDESCRIPTION: This JavaScript code demonstrates how to open a Bitrix sidepanel and populate it with custom content using the `contentCallback` parameter. The callback function returns a promise that resolves with the content to be displayed in the sidepanel. The example uses a timeout to simulate an asynchronous operation.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/Sidepanel_s_proizvol'nym_soderzhimym.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.SidePanel.Instance.open(\"crm:activity-view\", { \n\tcontentCallback: function(slider) {\n\t\n\t\t//Callback должен вернуть промис или HTML (строка или DOM-элемент)\n\t\treturn new Promise(function(resolve, reject) {\n\t\n\t\t\t//Эмуляция асинхронной операции. Здесь может быть ajax-запрос\n\t\t\tsetTimeout(function() {\n\t\n\t\t\t\t//Разрешаем промис передав ему содержимое слайдера (строка или DOM-элемент)\n\t\t\t\tresolve(\"content<br>\".repeat(100));\n\t\n\t\t\t}, 1000);\n\t\t});\n\t}\n});\n```\n\n----------------------------------------\n\nTITLE: Filtering Blog Posts by Title in PHP\nDESCRIPTION: Example of using the LIKE operator to filter blog posts that have the word 'фильм' (film) in their title. The tilde (~) prefix indicates that the value should be treated as a pattern for LIKE comparison.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/GetList.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// выборка всех сообщений блога с заголовком, включающим слово \"фильм\"\n$arFilter =  Array ( \"~TITLE\" => \"%фильм%\" );\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CFormStatus::GetList in PHP\nDESCRIPTION: Demonstrates how to use the CFormStatus::GetList method to retrieve form statuses that match specific criteria. The example applies complex filtering on ID, activity status, title, and description fields.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormStatus/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$FORM_ID = 4; // ID веб-формы\n// сформируем массив фильтра\n$arFilter = Array(\n\t\"ID\"                       => \"1 | 4\",       // ID статуса равен 1 или 4\n\t\"ID_EXACT_MATCH\"           => \"Y\",           // точное совпадение для ID\n\t\"ACTIVE\"                   => \"Y\",           // флаг активности\n\t\"TITLE\"                    => \"опубликован\", // заголовок\n\t\"TITLE_EXACT_MATCH\"        => \"N\",           // точное совпадение для TITLE\n\t\"DESCRIPTION\"              => \"конечный\",    // описание\n\t\"DESCRIPTION_EXACT_MATCH\"  => \"N\",           // точное совпадение для DESCRIPTION\n);\n// получим список всех статусов формы, соответствующих фильтру\n$rsStatuses = CFormStatus::GetList(\n\t$FORM_ID, \n\t$by=\"s_id\", \n\t$order=\"desc\", \n\t$arFilter, \n\t$is_filtered\n);\nwhile ($arStatus = $rsStatuses->Fetch())\n{\n\techo \"<pre>\"; print_r($arStatus); echo \"</pre>\";\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Setting Folder Permissions in Bitrix Disk\nDESCRIPTION: Shows how to set permissions for a folder, including different access levels like read, edit, add, and full access.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php \n\tif ($folder) \n\t{ \n\t\t$rightsManager = \\Bitrix\\Disk\\Driver::getInstance()->getRightsManager(); \n\t\t$accessTaskId = $rightsManager->getTaskIdByName($rightsManager::TASK_READ);//чтение \n\t\t//$accessTaskId = $rightsManager->getTaskIdByName($rightsManager::TASK_EDIT);//изменение \n\t\t//$accessTaskId = $rightsManager->getTaskIdByName($rightsManager::TASK_ADD);//добавление \n\t\t//$accessTaskId = $rightsManager->getTaskIdByName($rightsManager::TASK_FULL);//полные права \n             \n\t\t$newFolder = $folder->addSubFolder( \n\t\t\tarray( 'NAME' => 'New folder',  'CREATED_BY' => 1), \n\t\t\tarray( \n\t\t\t\tarray( \n\t\t\t\t\t'ACCESS_CODE' => 'U10', // для пользователя с ID=10 выдадутся выбранные права\n\t\t\t\t\t'TASK_ID' => $accessTaskId, \n\t\t\t\t), \n\t\t\t) \n\t\t); \n\t}\n```\n\n----------------------------------------\n\nTITLE: Implementing Anti-Spam Protection with OnBeforeMessageNotifyAdd in Bitrix\nDESCRIPTION: This code snippet demonstrates how to use the OnBeforeMessageNotifyAdd event handler to implement anti-spam protection by limiting non-admin users to 10 private messages per day. When the limit is exceeded, the message is blocked and a custom error message is displayed to the user.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-messendzher/Sobytija/OnBeforeMessageNotifyAdd.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nAddEventHandler(\"im\", \"OnBeforeMessageNotifyAdd\", \"___OnBeforeMessageNotifyAdd\");\npublic static function ___OnBeforeMessageNotifyAdd($arFields)\n{\n\tglobal $USER;\n\tif(!$USER->IsAdmin() && $arFields['MESSAGE_TYPE'] == 'P')\n\t{\n\t\t$imMaxMessagePerDay = 10;\n\t\t$date = date('Ymd');\n\t\t$_SESSION['IM_ANTI_SPAM'][$date]++;\n\t\tif ($_SESSION['IM_ANTI_SPAM'][$date] > $imMaxMessagePerDay)\n\t\t{\n\t\t\treturn Array(\n\t\t\t\t'reason' => 'Вы не можете отправлять более 10 сообщений в день',\n\t\t\t\t'result' => false,\n\t\t\t);\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Closing Current Side Panel Slider in Bitrix\nDESCRIPTION: Closes the currently open side panel slider. Offers an optional parameter to close immediately without animation.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.close([immediately=false])\n```\n\n----------------------------------------\n\nTITLE: Using CSubscription::GetByID in Bitrix\nDESCRIPTION: This code snippet shows a complete example of how to use the `CSubscription::GetByID` method to check if a subscription exists based on either an ID or an email address. If the ID is greater than 0, it attempts to retrieve the subscription by ID; otherwise, it attempts to retrieve it by email. It then extracts the fields from the subscription object.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscriptionGeneral/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n//new or existing subscription?\n//ID==0 indicates new subscription\nif(strlen($sf_EMAIL) > 0 || $ID > 0)\n{\n\tif($ID > 0)\n\t\t$subscription = CSubscription::GetByID($ID);\n\telse\n\t\t$subscription = CSubscription::GetByEmail($sf_EMAIL);\n\tif($subscription->ExtractFields(\"str_\"))\n\t\t$ID = (integer)$str_ID;\n\telse\n\t\t$ID=0;\n}\nelse\n\t$ID = 0;Копировать\n```\n\n----------------------------------------\n\nTITLE: Creating a High Priority Task (PHP)\nDESCRIPTION: Illustrates creating a task with a high priority using CTasks::Add. It defines the task fields including the PRIORITY field set to 2, which corresponds to high priority. The code then creates a CTasks object and calls the Add method with the defined fields.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTasks/Add.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n\"//Создание задачи с высоким приоритетом\n{\n\t$arFields = Array(\"TITLE\" => \"High priority task\",\n\t\t\"DESCRIPTION\" => \"Task description\",\n\t\t\"RESPONSIBLE_ID\" => 3,\n\t\t\"CREATED_BY\" => 1,\n\t\t\"PRIORITY\" => 2 // 2 соответствует высокому приоритету\n\t);\n\t$obTask = new CTasks;\n\t$obTask->Add($arFields);\n}\"\n```\n\n----------------------------------------\n\nTITLE: Web form multiselect example\nDESCRIPTION: This code snippet demonstrates how to use CForm::GetMultiSelectValue to retrieve and display values for a multiselect field in a web form. It shows how to handle both existing data and default values. It uses the methods CFormResult::GetDataByIDForHTML and CForm::GetMultiSelectField to make the form interactive.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetMultiSelectValue.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n/******************************************/\n       Редактирование результата\n******************************************/\n$RESULT_ID = 12; // ID результата\n// если была нажата кнопка \"Сохранить\" то\nif (strlen($_REQUEST[\"save\"])>0)\n{\n\t// используем данные пришедшие с формы\n\t$arrVALUES = $_REQUEST; \n}\nelse\n{\n\t// сформируем этот массив из данных по результату\n\t$arrVALUES = CFormResult::GetDataByIDForHTML($RESULT_ID); \n}\n?>\n<form action=\"\" method=\"POST\">\n<table>\n\t<tr>\n\t\t<td>Ваше образование:</td>\n\t\t<td><?\n\t\t\t// символьный идентификатор вопроса\n\t\t\t$QUESTION_SID = \"EDUCATION\"; \n\t\t\t// массив описывающий элементы списка множественного выбора\n\t\t\t$arMultiSelect = array (\n\t\t\t\t\"reference\" => array (\n\t\t\t\t\t\"начальное\",\n\t\t\t\t\t\"средне-специальное\",\n\t\t\t\t\t\"высшее\",\n\t\t\t\t),\n\t\t\t\t\"reference_id\" => array (\n\t\t\t\t\t602,\n\t\t\t\t\t603,\n\t\t\t\t\t604,\n\t\t\t\t),\n\t\t\t\t\"param\" => array (\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"checked\", // значение по умолчанию\n\t\t\t\t)\n\t\t\t);\n\t\t\t// получим текущее значение выпадающего списка\n\t\t\t$arValues = CForm::GetMultiSelectValue($QUESTION_SID, $arMultiSelect, $arrVALUES);\n\t\t\t// выведем список множественного выбора\n\t\t\techo CForm::GetMultiSelectField(\n\t\t\t\t$QUESTION_SID,           // символьный идентификатор вопроса\n\t\t\t\t$arMultiSelect,          // массив описывающий элементы списка\n\t\t\t\t$arValues,               // значения выбранных элементов списка\n\t\t\t\t10,                      // высота списка\n\t\t\t\t\"class=\\\"inputselect\\\"\"  // стиль списка\n\t\t\t);\n\t\t?></td>\n\t</tr>\n</table>\n<input type=\"submit\" name=\"save\" value=\"Сохранить\">\n</form>Копировать\n```\n\n----------------------------------------\n\nTITLE: Handling CRM Deal Events in PHP\nDESCRIPTION: Events related to CRM deals, including adding, updating, deleting deals, and managing deal products.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\nOnAfterCrmDealAdd\nOnAfterCrmDealUpdate\nOnBeforeCrmDealDelete\nOnBeforeCrmDealAdd\nOnBeforeCrmDealUpdate\nOnAfterCrmDealDelete\nOnAfterExternalCrmDealAdd\nOnAfterCrmDealProductRowsSave\nOnBeforeCrmDealProductRowsSave\n```\n\n----------------------------------------\n\nTITLE: Retrieving Event List with CStatEvent::GetList in Bitrix\nDESCRIPTION: This code snippet demonstrates how to use the `CStatEvent::GetList` method to retrieve a list of events, filtered by a specific guest ID. It initializes a filter array with the guest ID, calls the method with sorting and filter parameters, and then iterates through the result set to display event details.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEvent/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n// выберем все неудаленные события посетителя #1025\n$arFilter = array(\n\t\"GUEST_ID\" => \"1025\"\n);\n// получим список записей\n$rs = CStatEvent::GetList(\n\t($by = \"s_id\"), \n\t($order = \"desc\"), \n\t$arFilter, \n\t$is_filtered\n);\n// выведем все записи\nwhile ($ar = $rs->Fetch())\n{\n\techo \"<pre>\"; print_r($ar); echo \"</pre>\";    \n}\n?>\n```\n\n----------------------------------------\n\nTITLE: CSubscription::GetList Usage Example\nDESCRIPTION: This snippet shows an example of using the `CSubscription::GetList` method to retrieve a list of active and confirmed subscriptions for specific rubrics. It constructs a filter based on rubric IDs, confirmation status, active status, format, and email filter, then iterates through the results.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscriptionGeneral/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"//в какие рубрики отправлять\n$aPostRub = array();\n$post_rub = CPosting::GetRubricList($post_arr[\\\"ID\\\"]);\nwhile($post_rub_arr = $post_rub->Fetch())\n\t$aPostRub[] = $post_rub_arr[\\\"ID\\\"];\n//активные и подтвержденные адреса, подписанные на рубрики\n$subscr = CSubscription::GetList(\n\tarray(\\\"ID\\\"=>\\\"ASC\\\"),\n\tarray(\\\"RUBRIC\\\"=>$aPostRub, \\\"CONFIRMED\\\"=>\\\"Y\\\", \\\"ACTIVE\\\"=>\\\"Y\\\",\n\t\t\\\"FORMAT\\\"=>$post_arr[\\\"SUBSCR_FORMAT\\\"], \\\"EMAIL\\\"=>$post_arr[\\\"EMAIL_FILTER\\\"])\n);\nwhile(($subscr_arr = $subscr->Fetch()))\n\t$aEmail[] = $subscr_arr[\\\"EMAIL\\\"];\"\n```\n\n----------------------------------------\n\nTITLE: Sending a Message to a User with CPullStack\nDESCRIPTION: This code snippet demonstrates the usage of the CPullStack::AddByUser method, which sends messages to a specified user. It requires the recipient's user ID and message parameters defined in an associative array. The output is the initiation of a message send operation that targets the given user with the specified command and parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/CPullStack/AddByUser.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCPullStack::AddByUser(\n\t$recipientId, Array(\n\t\t'module_id' => 'test',\n\t\t'command' => 'check',\n\t\t'params' => Array(),\n\t)\n);\n```\n\n----------------------------------------\n\nTITLE: Querying Order Properties with CSaleOrderProps::GetList in PHP\nDESCRIPTION: This method returns a result set of order properties based on the specified parameters. It allows filtering, sorting, and grouping of order properties. The method is non-static and returns a CDBResult object.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/Klassy/CSaleOrderProps/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCSaleOrderProps::GetList(\n\tarray arOrder = array(),\n\tarray arFilter = array(),\n\tarray arGroupBy = false,\n\tarray arNavStartParams = false,\n\tarray arSelectFields = array()\n);\n```\n\n----------------------------------------\n\nTITLE: Subscribing to an Event with Event.EventEmitter\nDESCRIPTION: This snippet demonstrates how to subscribe to an event using the Event.EventEmitter.subscribe method. It shows creating a Button class that extends EventEmitter and subscribing to its event.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\nclass Button extends Event.EventEmitter {}\nconst emitter = new Button();\nemitter.subscribe('BX.UI.Button:click', (event) => {\n\t// ...\n});\n```\n\n----------------------------------------\n\nTITLE: Opening Side Panel with POST Method - JavaScript\nDESCRIPTION: This snippet demonstrates how to open a side panel using the HTTP POST method with parameters for the request. This allows for sending larger amounts of data that could exceed URL limits.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.open(\"/mypage.php\", {\n\trequestMethod: \"post\",\n\trequestParams: { // post-параметры\n\t\taction: \"load\",\n\t\tids: [1, 2, 3],\n\t\tdictionary: {\n\t\t\tone: 1,\n\t\t\ttwo: 2\n\t\t}\n\t}\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Country Data by ID in PHP using CSaleLocation::GetCountryByID\nDESCRIPTION: This method returns an array of language-independent parameters for a country with the specified ID. It's a non-static method of the CSaleLocation class. The method takes an integer ID as a parameter and returns an associative array with keys 'ID', 'NAME', and 'SHORT_NAME'.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/Klassy/CSaleLocation/GetCountryByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCSaleLocation::GetCountryByID(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Изменение и удаление лида в Bitrix CRM (PHP)\nDESCRIPTION: Демонстрация обновления и удаления существующего лида в CRM Bitrix. Создается объект CCrmLead с проверкой прав доступа, затем вызываются методы update() и delete().\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Osnovnye_metody_raboty.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('crm')) \n{ \n\t$entity = new CCrmLead(true);//true - проверять права на доступ\n\t$fields = array( \n\t\t'TITLE' => 'Test' \n\t); \n\t$entity->update(1, $fields); \n\t$entity->delete(1); \n}\n```\n\n----------------------------------------\n\nTITLE: Using BX.ajax.insertToNode Function in JavaScript\nDESCRIPTION: This function sends an XMLHttpRequest to a specified URL and inserts the response into a DOM node. It takes two parameters: the URL to request and the target node to insert the response into.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/AJAX_rasshirenie/BX.ajax.insertToNode.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nXMLHttpRequest \nBX.ajax.insertToNode(\n\tstring url,\n\tstring|DOMNode node\n);\n```\n\n----------------------------------------\n\nTITLE: Closing All Side Panel Sliders in Bitrix\nDESCRIPTION: Closes all open side panel sliders on the page. Provides an option to close sliders instantly without animation.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.closeAll([immediately=false])\n```\n\n----------------------------------------\n\nTITLE: Выборка данных лидов в Bitrix CRM (PHP)\nDESCRIPTION: Пример использования метода GetListEx для выборки данных лидов в CRM Bitrix. Метод аналогичен выборке в инфоблоках. По умолчанию проверяются права доступа.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Osnovnye_metody_raboty.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('crm')) \n{ \n\tCCrmLead::GetListEx( \n\t\t$arOrder = array(),  \n\t\t$arFilter = array(),  \n\t\t$arGroupBy = false,  \n\t\t$arNavStartParams = false,  \n\t\t$arSelectFields = array()); \n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Task with CTasks (PHP)\nDESCRIPTION: Demonstrates how to add a new task using the CTasks::Add method in Bitrix. It includes checking if the 'tasks' module is included, defining task fields such as title, description, responsible person, and group, then creating a CTasks object and calling the Add method. It also includes basic error handling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTasks/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\nif (CModule::IncludeModule(\"tasks\"))\n{\n\t$arFields = Array(\n\t\t\"TITLE\" => \"Task title\",\n\t\t\"DESCRIPTION\" => \"Task description\",\n\t\t\"RESPONSIBLE_ID\" => 2,\n\t\t\"GROUP_ID\" => 3\n\t);\n\t$obTask = new CTasks;\n\t$ID = $obTask->Add($arFields);\n\t$success = ($ID>0);\n\tif($success)\n\t{\n\t\techo \"Ok!\";\n\t}\n\telse\n\t{\n\t\tif($e = $APPLICATION->GetException())\n\t\t\techo \"Error: \".$e->GetString();  \n\t}\n}?>\"\n```\n\n----------------------------------------\n\nTITLE: Managing CRM Lead Events in PHP\nDESCRIPTION: Events for CRM lead operations, including adding, updating, deleting leads, and managing lead products.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\nOnAfterCrmLeadAdd\nOnAfterCrmLeadUpdate\nOnBeforeCrmLeadDelete\nOnBeforeCrmLeadAdd\nOnBeforeCrmLeadUpdate\nOnAfterCrmLeadDelete\nOnAfterExternalCrmLeadAdd\nOnAfterCrmLeadProductRowsSave\n```\n\n----------------------------------------\n\nTITLE: Get Currency List\nDESCRIPTION: Retrieves a list of currencies from the database, sorted by the specified field (`by`) and order (`order`). Language-dependent parameters are retrieved for the specified language (`lang`). Returns a `CDBResult` object containing the currency data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Valjuty/Klassy/CCurrency/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"CDBResult\nCCurrency::GetList(\n\tstring &by, \n\tstring &order, \n\tstring lang = LANGUAGE_ID\n);Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Bitrix Vote: Showing Vote Form with User Rights\nDESCRIPTION: This code snippet shows how to use the `GetVoteDataByID` function to display a vote form based on user permissions. It retrieves vote data using `GetVoteDataByID` and then checks user group permissions to determine whether to display the vote form. It also handles template selection for rendering the form.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Oprosy,_golosovanija/Funktsii/GetVoteDataByID.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\n// возвращает форму заданного опроса с учётом прав пользователя\nfunction ShowVote($VOTE_ID, $template1=\\\"\")\n{\n\tglobal $MESS, $VOTING_LAMP, $VOTING_OK, $USER_ALREADY_VOTE, $USER_GROUP_PERMISSION, $VOTE_USER_ID, $VOTE_PERMISSION;\n\t$VOTE_ID = GetVoteDataByID($VOTE_ID, $arChannel, $arVote, $arQuestions, $arAnswers, $arDropDown, $arMultiSelect, $arGroupAnswers, \\\"N\\\");\n\tif (intval($VOTE_ID)>0)\n\t{\n\t\t$perm = CVoteChannel::GetGroupPermission($arChannel[\\\"ID\\\"]);\n\t\tif (intval($perm)>=2)\n\t\t{\n\t\t\t$template = (strlen($arVote[\\\"TEMPLATE\\\"])<=0) ? \\\"default.php\\\" : $arVote[\\\"TEMPLATE\\\"];\n\t\t\t$VOTE_PERMISSION = CVote::UserGroupPermission($arChannel[\\\"ID\\\"]);\n\t\t\trequire_once ($_SERVER[\\\"DOCUMENT_ROOT\\\"] . \\\"/bitrix/modules/vote/include.php\\\");\n\t\t\t@include_once (GetLangFileName($_SERVER[\\\"DOCUMENT_ROOT\\\"] . \\\"/bitrix/php_interface/lang/\\\", \\\"/\\\".$template));\n\t\t\t$path = COption::GetOptionString(\\\"vote\\\", \\\"VOTE_TEMPLATE_PATH\\\", \\\"/bitrix/php_interface/include/vote/show/\\\");\n\t\t\tif (strlen($template1)>0) $template = $template1;\n\t\t\t@include($_SERVER[\\\"DOCUMENT_ROOT\\\"] . $path . $template);\n\t\t}\n\t}\n}\n?>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Adding a Subscription using CSubscription::Add\nDESCRIPTION: This code demonstrates how to add a subscription in Bitrix using the CSubscription::Add method. It includes setting up the necessary fields such as USER_ID, FORMAT, EMAIL, ACTIVE, and RUB_ID and then calls the Add method. Error handling is included.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscriptionGeneral/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"//there must be at least one newsletter category\nif(!is_array($RUB_ID) || count($RUB_ID) == 0)\n\t$strWarning .= \\\"There must be at least one category.\\\".\\\"<br>\\\";\nif($strWarning == \\\"\\\")\n{\n\t$arFields = Array(\n\t\t\\\"USER_ID\\\" => ($USER->IsAuthorized()? $USER->GetID():false),\n\t\t\\\"FORMAT\\\" => ($FORMAT <> \\\"html\\\"? \\\"text\\\":\\\"html\\\"),\n\t\t\\\"EMAIL\\\" => $EMAIL,\n\t\t\\\"ACTIVE\\\" => \\\"Y\\\",\n\t\t\\\"RUB_ID\\\" => $RUB_ID\n\t);\n\t$subscr = new CSubscription;\n\t//can add without authorization\n\t$ID = $subscr->Add($arFields);\n\tif($ID>0)\n\t\tCSubscription::Authorize($ID);\n\telse\n\t\t$strWarning .= \\\"Error adding subscription: \\\".$subscr->LAST_ERROR.\\\"<br>\\\";\n}\"\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CBlogPost::GetByID in Bitrix\nDESCRIPTION: This example demonstrates how to retrieve blog post data by ID. It calls the CBlogPost::GetByID method with a post ID of 1, then checks if the result is an array (successful retrieval) before displaying the data or an error message.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$ID = 1;\n$arPost = CBlogPost::GetByID($ID);\nif(is_array($arPost))\n\tprint_r($arPost);\nelse\n\techo \"Сообщение не найдено\";\n?>\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CAdv::GetDynamicList\nDESCRIPTION: Demonstrates how to use the `CAdv::GetDynamicList` method to retrieve and display advertising campaign data for a specific date range.  It initializes a filter, calls the method, and then prints the maximum/minimum dates and the retrieved data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CAdv/GetDynamicList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n$adv_id = 1;\n// установим фильтр на декабрь 2005 года\n$arFilter = array(\n\t\"DATE1\" => \"01.12.2005\",\n\t\"DATE2\" => \"31.12.2005\"\n);\n// получим набор записей\n$rs = CAdv::GetDynamicList(\n\t$adv_id, \n\t($by=\"s_date\"), \n\t($order=\"desc\"), \n\t$arMaxMin, \n\t$arFilter, \n\t$is_filtered\n);\n// выведем массив с максимальной и минимальной датами\necho \"<pre>\"; print_r($arMaxMin); echo \"</pre>\";    \n// выведем все записи\nwhile ($ar = $rs->Fetch())\n{\n\techo \"<pre>\"; print_r($ar); echo \"</pre>\";    \n}\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Registering a Recyclebin Manager with Event Handler\nDESCRIPTION: Code that registers the custom recyclebin manager with the Bitrix event system to handle recyclebin module events.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Korzina_udalennyh_suschnostej.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$eventManager = \\Bitrix\\Main\\EventManager::getInstance();\n//Recyclebin\n$eventManager->registerEventHandler(\n\t'recyclebin',\n\t'OnModuleSurvey',\n\t'tasks',\n\t'\\Bitrix\\Tasks\\Integration\\Recyclebin\\Manager',\n\t'OnModuleSurvey'\n);\n```\n\n----------------------------------------\n\nTITLE: Formatting Price with BX.Currency.currencyFormat in JavaScript\nDESCRIPTION: This JavaScript function formats a given price based on the specified currency code and a boolean flag indicating whether to use a predefined template for the formatting. It leverages the Bitrix framework's currency formatting capabilities. The function returns a formatted price string.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Valjuty/BX.Currency.currencyFormat.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"BX.Currency.currencyFormat(\n\tprice, currency, useTemplate\n);\"\n```\n\n----------------------------------------\n\nTITLE: Global Subscription to Button Events\nDESCRIPTION: This snippet demonstrates how to globally subscribe to events for all Button instances using Event.EventEmitter. It shows subscribing to multiple events at once.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nEvent.EventEmitter\n\t.subscribe('BX.UI.Button:ready', (event) => {\n\t\tconsole.log('Button is ready', event);\n\t})\n\t.subscribe('BX.UI.Button:render', (event) => {\n\t\tconsole.log('Button is rendered', event);\n\t})\n\t.subscribe('BX.UI.Button:click', (event) => {\n\t\tconsole.log('Button is clicked', event);\n\t});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Published Blog Posts with Filtering in PHP\nDESCRIPTION: Example of retrieving all published blog posts from April 2007 that have more than two comments. The results are sorted by publication date in descending order and then by name in ascending order.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// выберем все опубликованные сообщения всех блогов за апрель 2007 года\n// у которых больше двух комментариев\n$SORT = Array(\"DATE_PUBLISH\" => \"DESC\", \"NAME\" => \"ASC\");\n$arFilter = Array(\n\t\"PUBLISH_STATUS\" => BLOG_PUBLISH_STATUS_PUBLISH,\n\t\"DATE_PUBLISH_MONTH\" => '04',\n\t\"DATE_PUBLISH_YEAR\" => '2007',\n\t\">NUM_COMMENTS\" => 2\n);\t\n$dbPosts = CBlogPost::GetList(\n\t$SORT,\n\t$arFilter\n);\nwhile ($arPost = $dbPosts->Fetch())\n{\n\tprint_r($arPost);\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Creating and Running Animation with BX.easing in JavaScript\nDESCRIPTION: This example demonstrates how to create and run an animation using the BX.easing class. It animates a banner's height and opacity, then hides it after the animation completes.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Animatsija.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar banner = BX(\"my-banner\");\nvar easing = new BX.easing({\n\tduration : 500,\n\tstart : { height : 0, opacity : 0 },\n\tfinish : { height : 100, opacity: 100 },\n\ttransition : BX.easing.transitions.quart,\n\tstep : function(state){\n\t\tbanner.style.height = state.height + \"px\";\n\t\tbanner.style.opacity = state.opacity/100;\n\t},\n\tcomplete : function() {\n\t\tbanner.style.display = \"none\";\n\t}\n});\neasing.animate();\n```\n\n----------------------------------------\n\nTITLE: Handling CRM Activity Events in PHP\nDESCRIPTION: Events related to CRM activities, including adding, updating, and deleting activities.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nOnActivityAdd\nOnActivityDelete\nOnActivityUpdate\nOnBeforeActivityDelete\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CCrmActivity::Add Method\nDESCRIPTION: This example demonstrates how to use the CCrmActivity::Add method to create a new Activity and save its communications. It includes setting options for social network event registration.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Klassy/CCRMActivity/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$ID = CCrmActivity::Add($arFields, false, true, array('REGISTER_SONET_EVENT' => true));\nif($ID > 0)\n{\n\tCCrmActivity::SaveCommunications($ID, $arComms, $arFields, true, false);\n}\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CFormStatus::GetList in PHP\nDESCRIPTION: Defines the signature of the GetList method of the CFormStatus class which returns a list of form statuses as a CDBResult object. The method accepts form ID, sorting parameters, filter array, and filtered status flag reference.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormStatus/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCFormStatus::GetList(\n\tint form_id,\n\tstring &by = \"s_sort\",\n\tstring &order = \"asc\",\n\tarray filter = array(),\n\tbool &is_filtered\n)\n```\n\n----------------------------------------\n\nTITLE: Get Stop List Records\nDESCRIPTION: Retrieves a list of stop-list records based on specified criteria, such as IP address, and displays the results. It utilizes the CStopList::GetList method with filtering and pagination to fetch and display the records.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStopList/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n// выберем записи стоп-листа с IP адресами 192.168.0.xxx\n$arFilter = array(\n\t\"IP_1\" => 192,\n\t\"IP_2\" => 168,\n\t\"IP_3\" => 0\n);\n// получим список записей\n$rs = CStopList::GetList(\n\t($by = \"s_id\"), \n\t($order = \"desc\"), \n\t$arFilter, \n\t$is_filtered\n);\n// выведем все записи\nwhile ($ar = $rs->Fetch())\n{\n\techo \"<pre>\"; print_r($ar); echo \"</pre>\";    \n}\n?>\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Form Result Data with CForm::GetResultAnswerArray in PHP\nDESCRIPTION: Example demonstrating how to use the CForm::GetResultAnswerArray method to retrieve data for a specific form result (ID=145). The method returns structured form data in three arrays - columns, answers, and answer variables - which are then displayed using print_r.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetResultAnswerArray.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// получим данные по результату ID=145\nCForm::GetResultAnswerArray(\n\t$FORM_ID, \n\t$arrColumns, \n\t$arrAnswers, \n\t$arrAnswersVarname, \n\tarray(\"RESULT_ID\" => \"145\")\n);\necho \"<pre>\";\necho \"arrColumns:\";\nprint_r($arrColumns);\necho \"arrAnswers:\";\nprint_r($arrAnswers);\necho \"arrAnswersVarname:\";\nprint_r($arrAnswersVarname);\necho \"</pre>\";\n```\n\n----------------------------------------\n\nTITLE: Sending messages to users with CPullStack::AddByUsers\nDESCRIPTION: This code snippet demonstrates how to use the `CPullStack::AddByUsers` method to send messages to a group of users. It requires the `module_id`, `command`, and `params` to be defined. This method sends messages to the specified user IDs.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/CPullStack/AddByUsers.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCPullStack::AddByUsers(\n\t$arrayUserId, Array(\n\t\t'module_id' => 'im',\n\t\t'command' => 'ping',\n\t\t'params' => Array(\n\t\t\t'message' => 'test'\n\t\t),\n\t)\n);\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Report List using CReport::GetList in PHP\nDESCRIPTION: This code snippet demonstrates how to use the CReport::GetList method to retrieve a list of reports associated with a specific owner ('crm'). It iterates through the result set and displays the title of each report. The code assumes that the CReport class is available and properly initialized.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Konstruktor_otchetov/Klassy/CReport/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n$obRep = CReport::GetList('crm');\necho '<p>Список отчётов по сделкам:</p><ul>';\nwhile($arRep = $obRep->fetch())\n\techo '<li>'.$arRep['TITLE'];\necho '</ul>';\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Добавление товара в каталог CRM Bitrix (PHP)\nDESCRIPTION: Пример добавления товара в каталог CRM Bitrix и его привязки к сделке. Сначала товар добавляется в каталог с помощью CCrmProduct::add(), затем привязывается к сделке через CCrmProductRow::SaveRows().\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Osnovnye_metody_raboty.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('crm')) \n{ \n\t$pid = CCrmProduct::add(array( \n\t\t'NAME' => 'Товар в базе', \n\t\t'QUANTITY' => 1, \n\t\t'PRICE' => 100, \n\t\t'MEASURE_CODE' => 796, \n\t\t'CURRENCY_ID' => 'RUB', \n\t)); \n\tif ($pid) \n\t{ \n\t\t$rows = array(); \n\t\t$rows[] = array( \n\t\t\t'PRODUCT_ID' => $pid, \n\t\t\t'QUANTITY' => 1, \n\t\t); \n\t\tCCrmProductRow::SaveRows('D', 10, $rows); \n\t} \n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Price using BX.Currency.currencyFormat\nDESCRIPTION: This snippet illustrates how to format a price using the `BX.Currency.currencyFormat` function. It demonstrates formatting with and without the currency symbol and template. The parameters include the price, currency code, and a boolean indicating whether to use the template.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Valjuty.md#2025-04-20_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script type=\"text/javascript\">\nvar price = 141.56,\n\tcurrency = 'USD';\nitem.innerHTML = BX.Currency.currencyFormat(price, currency, true); // вставка отформатированной цены с применением шаблона вывода\nitem2.innerHTML = BX.Currency.currencyFormat(price, currency, false); // вставка отформатированной величины цены без использования шаблона\n</script>Копировать\n```\n\n----------------------------------------\n\nTITLE: Creating BaseEvent in JavaScript\nDESCRIPTION: Initializes a new BaseEvent object with custom data and demonstrates event emission using the Bitrix event system\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.BaseEvent.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\nconst event = new Event.BaseEvent({\n\tdata: {\n\t\titem1: '...',\n\t\titem2: '...',\n\t},\n});\nthis.emit('BX.UI.Button:click', event);\n```\n\n----------------------------------------\n\nTITLE: Добавление дела в CRM Bitrix (PHP)\nDESCRIPTION: Пример добавления нового дела (активности) в CRM Bitrix. Демонстрирует использование различных констант для указания типа дела, типа владельца, приоритета и направления. Также показывает, как привязать дело к нескольким сущностям.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Osnovnye_metody_raboty.md#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('crm'))  { \n\t$fields = array( \n\t\t'TYPE_ID' => CCrmActivityType::Call, //тип самого дела, может быть: Meeting, Call, Task, Email (константы класса)\n\t\t'OWNER_TYPE_ID' => CCrmOwnerType::Deal, //тип основной сущности, к которой привязывается дело, \n                                                //может быть Deal, Lead, Contact, Company (константы класса)\n\t\t'OWNER_ID' => 10, //ID основной сущности\n\t\t'SUBJECT' => 'Телефонный разговор исходящий', \n\t\t'START_TIME' => $date, \n\t\t'END_TIME' => $date, \n\t\t'COMPLETED' => 'Y', //флаг завершенности дела\n\t\t'RESPONSIBLE_ID' => 1, //ответственный\n\t\t'PRIORITY' => CCrmActivityPriority::Medium, //приоритет, может быть None, Low, Medium, High (константы класса)\n\t\t'DESCRIPTION' => 'Описание', \n\t\t'DIRECTION' => CCrmActivityDirection::Outgoing, //актуально для типов дел, где может быть направление \n\t\t\t//(входящий или исходящий - телефон или email), \n\t\t\t//может быть Outgoing, Incoming (константы класса)\n\t\t'BINDINGS' => array( \n\t\t\tarray( \n\t\t\t\t'OWNER_TYPE_ID' => CCrmOwnerType::Deal, \n\t\t\t\t'OWNER_ID' => 666 \n\t\t\t) \n\t\t), //массив дополнительных связей - например, звонок привязан к сделке (основная привязка),\n\t\t// но еще относится к контакту - с КЕМ звонок.\n\t\t'ORIGIN_ID' => 'XYZ_1' //некий внешний идентификатор, опционально\n\t); \n     \n\tCCrmActivity::Add($fields, true); \n} \n```\n\n----------------------------------------\n\nTITLE: Course Import Example in PHP\nDESCRIPTION: Demonstrates how to use CCourseImport to import a course package, with module inclusion, admin permission check, and error handling. Sets unlimited time limit and attempts package import.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourseImport/CCourseImport.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\nif (CModule::IncludeModule(\"learning\"))\n{\n\tif ($USER->IsAdmin())\n\t{\n\t\t@set_time_limit(0);\n\t\t$package = new CCourseImport($PACKAGE_DIR = \"/upload/mypackage/\", Array(\"ru\", \"en\"));\n\t\tif (strlen($package->LAST_ERROR) > 0)\n\t\t{\n\t\t\techo \"Error: \".$package->LAST_ERROR;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$success = $package->ImportPackage();\n\t\t\tif (!$success)\n\t\t\t\techo \"Error: \".$package->LAST_ERROR;\n\t\t\telse\n\t\t\t\techo \"Ok!\";\n\t\t}\n\t}\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Including Open Channels Module with PHP\nDESCRIPTION: This code snippet demonstrates how to include the 'imopenlines' module in a PHP script.  It checks if the module is installed and then allows access to its functions and classes. The CModule::IncludeModule function is used to include the module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Otkrytye_linii.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\nif(CModule::IncludeModule(\"imopenlines\"))\n{\n\t//здесь можно использовать функции и классы модуля\n} \n?>\n```\n\n----------------------------------------\n\nTITLE: Adding a New Lesson in Bitrix Learning Module\nDESCRIPTION: Complete example of adding a lesson by including the learning module, preparing lesson fields, and handling success/error scenarios\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLesson/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\\nif (CModule::IncludeModule(\"learning\"))\\n{\\n\\t$COURSE_ID = 97;\\n\\t$arFields = Array(\\n\\t\\t\"ACTIVE\" => \"Y\",\\n\\t\\t\"COURSE_ID\" => $COURSE_ID,\\n\\t\\t\"NAME\" => \"Lesson 1\",\\n\\t\\t\"SORT\" => \"1\",\\n\\t\\t\"DETAIL_TEXT\" => \"It my first lesson ...\",\\n\\t);\\n\\t$lesson = new CLesson;\\n\\t$ID = $lesson->Add($arFields);\\n\\t$success = ($ID>0);\\n\\t if($success)\\n\\t {\\n\\t\\t echo \"Ok!\";\\n\\t }\\n\\t else\\n\\t {\\n\\t\\tif($e = $APPLICATION->GetException())\\n\\t\\t\\techo \"Error: \".$e->GetString();\\n\\t }\\n}\\n?>\n```\n\n----------------------------------------\n\nTITLE: Including the Push and Pull Module in Bitrix D7\nDESCRIPTION: This code snippet demonstrates how to check if the Push and Pull module is installed and include it in your Bitrix project. This is a required step before using any functionality from the module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Push_and_Pull.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule('pull');\n```\n\n----------------------------------------\n\nTITLE: Adding a New Course\nDESCRIPTION: This snippet demonstrates how to use the CCourse::Add method to create a new course. It initializes the course details in an associative array and then calls the Add method. The example also includes error handling in case the addition fails.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$arFields = Array(\n\t\t\"ACTIVE\" => \"Y\",\n\t\t\"NAME\" => \"My First Course\",\n\t\t\"SITE_ID\" => Array(\"ru\", \"en\"), //Sites\n\t\t\"GROUP_ID\" => Array(\"2\" => \"R\"), //Permissions: Everyone can read my course\n\t\t\"SORT\" => \"100\",\n\t\t\"DESCRIPTION\" => \"It's my first e-Learning course\",\n\t\t\"DESCRIPTION_TYPE\" => \"text\",\n\t);\n\t$course = new CCourse;\n\t$ID = $course->Add($arFields);\n\t$success = ($ID>0);\n\tif($success)\n\t{\n\t\techo \"Ok!\";\n\t}\n\telse\n\t{\n\t\tif($e = $APPLICATION->GetException())\n\t\t\techo \"Error: \".$e->GetString();\n\t\t\n\t}\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Get Currency Parameters by ID in PHP\nDESCRIPTION: This code snippet demonstrates how to use the `CCurrency::GetByID` method to retrieve currency parameters by its code. It checks if the currency with the specified code exists and, if found, prints the currency parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Valjuty/Klassy/CCurrency/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\nif (!($ar_usd_cur = CCurrency::GetByID(\"USD\")))\n{\n\techo \"Валюта USD не найдена\";\n}\nelse\n{\n\techo \"Валюта USD имеет параметры:<pre>\";\n\tprint_r($ar_usd_cur);\n\techo \"</pre>\";\n}\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Global Mobile Event Listener (JavaScript)\nDESCRIPTION: This JavaScript code sets up a global event listener for mobile versions to capture all events. It logs the module ID, command, and parameters from the data object.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull.md#2025-04-20_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.addCustomEvent(\"onPull\", BX.delegate(function(data){\n\tconsole.log(data.module_id, data.command, data.params);\n}, this));\n```\n\n----------------------------------------\n\nTITLE: Using GetList Method - PHP\nDESCRIPTION: Example usage of the CPosting::GetList method to retrieve email releases based on various filter criteria. The example demonstrates how to create an instance of CPosting, define a filter, and handle the result set, including error handling and pagination.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPosting/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$cPosting = new CPosting;\n$arFilter = Array(\n\t\"ID\" => $find_id,\n\t\"TIMESTAMP_1\" => $find_timestamp_1,\n\t\"TIMESTAMP_2\" => $find_timestamp_2,\n\t\"DATE_SENT_1\" => $find_date_sent_1,\n\t\"DATE_SENT_2\" => $find_date_sent_2,\n\t\"STATUS\" => $find_status,\n\t\"STATUS_ID\" => $find_status_id,\n\t\"SUBJECT\" => $find_subject,\n\t\"FROM\" => $find_from,\n\t\"TO\" => $find_to,\n\t\"BODY\" => $find_body,\n\t\"BODY_TYPE\" => $find_body_type\n);\n$rsPosting = $cPosting->GetList(array($by=>$order), $arFilter);\n$strError .= $cPosting->LAST_ERROR;\n$rsPosting->NavStart(50);\necho $rsPosting->NavPrint(\"Issues\");\nwhile($rsPosting->NavNext(true, \"f_\"))\n{\n\t//...\n}\n```\n\n----------------------------------------\n\nTITLE: Bitrix OnBeforeSendMailToAuthor Event Handler Example PHP\nDESCRIPTION: An example of handling the `OnBeforeSendMailToAuthor` event in Bitrix to duplicate the email as a social network message.  It includes necessary modules, formats the message, and uses the `CSocNetMessages::Add` function to add the message to the social network. This code snippet shows how to add an event handler and implement the handler function within a class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Tehpodderzhka/Sobytija/OnBeforeSendMailToAuthor.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"//Дублируем письмо сообщением в соц. сеть\n//Обработчик в файле /bitrix/php_interface/init.php\nAddEventHandler(\"support\", \"OnBeforeSendMailToAuthor\", array(\"MyClass\", \"OnBeforeSendMailToAuthorHandler\"));\nclass MyClass\n{\n\tpublic static function OnBeforeSendMailToAuthorHandler($arFields, $is_new)\n\t{\n\t\tif (CModule::IncludeModule(\"socialnetwork\"))\n\t\t{\n\t\t\t$servername = \\\"site.ru\\\";\n\t\t\t$message = \\\"\\\";\n\t\t\t$message .= \\\"Тема: \\\".$arFields[\\\"TITLE\\\"].\\\"[\\\".$arFields[\\\"ID\\\"].\\\"] (Изменения в обращении)\\\\r\\\\n\\\";\n\t\t\t$message .= $arFields[\\\"WHAT_CHANGE\\\"].\\\"\\\\r\\\\n\\\";\n\t\t\t$message .= \\\"От кого: \\\".$arFields[\\\"MESSAGE_SOURCE\\\"].\\\" \\\".$arFields[\\\"MESSAGE_AUTHOR_SID\\\"].\\\" \\\".$arFields[\\\"MESSAGE_AUTHOR_TEXT\\\"].\\\"\\\\r\\\\n\\\";\n\t\t\t$message .= $arFields[\\\"MESSAGE_HEADER\\\"];\n\t\t\t$message .= $arFields[\\\"MESSAGE_BODY\\\"];\n\t\t\t$message .= $arFields[\\\"MESSAGE_FOOTER\\\"].\\\"\\\\r\\\\n\\\";\n\t\t\t$message .= \\\"Для просмотра и редактирования обращения воспользуйтесь ссылкой:\\\\r\\\\n\\\";\n\t\t\t$message .= \\\"http://\\\".$servername.$arFields[\\\"ADMIN_EDIT_URL\\\"].\\\"?ID=\\\".$arFields[\\\"ID\\\"].\\\"\\\\r\\\\n\\\";\n\t\t\t\n\t\t\t$arPamams = array( \n\t\t\t\t\\\"FROM_USER_ID\\\" => 1, \n\t\t\t\t\\\"TO_USER_ID\\\" => 1, \n\t\t\t\t\\\"MESSAGE\\\" => $message, \n\t\t\t\t\\\"=DATE_CREATE\\\" => $GLOBALS[\\\"DB\\\"]->CurrentTimeFunction(), \n\t\t\t\t\\\"MESSAGE_TYPE\\\" => \\\"P\\\", \n\t\t\t); \n\t\t\tCSocNetMessages::Add($arPamams);\n\t\t}\n\t}\n}Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Loading Currency Format Asynchronously using BX.Currency.loadCurrencyFormat\nDESCRIPTION: This JavaScript code demonstrates asynchronous loading of currency formats using `BX.Currency.loadCurrencyFormat`. The code loads the format for the 'USD' currency and then formats a price using the loaded format. It ensures that the formatting occurs only after the currency format has been successfully loaded.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Valjuty.md#2025-04-20_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script type=\"text/javascript\">\nBX.Currency.loadCurrencyFormat('USD').then(function() \n{\n\titem.innerHTML = BX.Currency.currencyFormat(123, 'USD', true);\n});\n</script>Копировать\n```\n\n----------------------------------------\n\nTITLE: CFormResult::Update Method Signature in PHP\nDESCRIPTION: The signature for the Update method of the CFormResult class, which updates all values of answers and fields in a web form result. Returns boolean true on success, false otherwise.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCFormResult::Update(\n\tint result_id,\n\tarray values = false,\n\tstring update_fields = \"N\",\n\tstring check_rights = \"Y\"\n)\n```\n\n----------------------------------------\n\nTITLE: Using CRubric::GetByID\nDESCRIPTION: This snippet demonstrates how to use the CRubric::GetByID method to retrieve a rubric and extract its fields. It first checks if the ID is greater than 0, retrieves the rubric, and then extracts the fields to access rubric properties.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CRubric/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nif($ID>0)\n{\n\t$rubric = CRubric::GetByID($ID);\n\tif($rubric->ExtractFields(\"str_\"))\n\t\techo $str_NAME;\n}Копировать\n```\n\n----------------------------------------\n\nTITLE: Including Pull Module (PHP)\nDESCRIPTION: This code snippet demonstrates how to include the Push and Pull module in a PHP script. It checks if the module is already included to prevent errors.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nif (!CModule::IncludeModule('pull'))\n\treturn false;\n```\n\n----------------------------------------\n\nTITLE: Implementing OnBeforeSessionTransfer Event Handler\nDESCRIPTION: Example of a session transfer event handler that logs parameters and returns a modified operator queue configuration\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Otkrytye_linii/Sobytija/OnBeforeSessionTransfer.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\npublic static function onBeforeSessionTransfer(\\Bitrix\\Main\\Event $event)\n{\n\t$eventParams = $event->getParameters();\n\tdefine(\"LOG_FILENAME\", $_SERVER[\"DOCUMENT_ROOT\"].\"/log.txt\");\n\tAddMessage2Log(var_export($eventParams,1), 'onBeforeSessionTransfer');\n\t$eventParams['newOperatorQueue'] = [\n\t\t'RESULT' => true,\n\t\t'OPERATOR_ID' => 1,\n\t\t'OPERATOR_LIST' => [],\n\t\t'DATE_QUEUE' => false,\n\t\t'QUEUE_HISTORY' => [1 => true],\n\t];\n\treturn new \\Bitrix\\Main\\EventResult(\n\t\t\\Bitrix\\Main\\EventResult::SUCCESS,\n\t\t$eventParams\n\t);\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Activity in Bitrix CRM using CCrmActivity::Add\nDESCRIPTION: This method adds a new Activity to the CRM. It takes an array of activity fields, permission check flag, event registration flag, and additional options. Returns the ID of the newly created Activity.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Klassy/CCRMActivity/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ninteger\nCCrmActivity::Add(\n\tarray arFields,\n\tbool checkPerms = true, \n\tbool regEvent = true, \n\tarray options\n);\n```\n\n----------------------------------------\n\nTITLE: Get Email Statuses in CPosting\nDESCRIPTION: This PHP code snippet demonstrates how to retrieve the email statuses of a posting using the `CPosting::GetEmailStatuses` method. It takes the posting ID as input and returns an array containing the count of subscribers for each status (success, error, pending). The example checks if there are any emails still pending.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/GetEmailStatuses.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n$arStatuses = CPosting::GetEmailStatuses($ID);\nif(!isset($arStatuses[\"Y\"]))\n\techo \"Выпуск отправлен.\";\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Defining Cache SID\nDESCRIPTION: This PHP code shows how to define the BX_CACHE_SID constant, which is used to differentiate caches when multiple Bitrix instances are running on the same server. It prevents cache collisions between different instances.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Monitor_proizvoditel'nosti/Instruktsija_po_nastrojke_keshirovanija.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n\"define(\\\"BX_CACHE_SID\\\", $_SERVER[\\\"DOCUMENT_ROOT\\\"].\\\"#01\\\");Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Get Date Value using CForm::GetDateValue in PHP\nDESCRIPTION: This code snippet demonstrates how to use the CForm::GetDateValue method to retrieve the value of a date field in a Bitrix web form. It checks if the form is being edited or created and retrieves the appropriate value (either from the submitted data or the default value). The value is then used to display the date field using CForm::GetDateField.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetDateValue.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n/*******************************************\n       Редактирование результата\n*******************************************/\n$RESULT_ID = 12; // ID результата\n// если была нажата кнопка \"Сохранить\" то\nif (strlen($_REQUEST[\"save\"])>0)\n{\n\t// используем данные пришедшие с формы\n\t$arrVALUES = $_REQUEST; \n}\nelse\n{\n\t// сформируем этот массив из данных по результату\n\t$arrVALUES = CFormResult::GetDataByIDForHTML($RESULT_ID); \n}\n?>\n<form name=\"ANKETA\" action=\"\" method=\"POST\">\n<table>\n\t<tr>\n\t\t<td>Дата рождения:</td>\n\t\t<td><?\n\t\t\t// массив описывающий поле для ввода даты\n\t\t\t// содержит минимально-необходимые поля\n\t\t\t$arAnswer = array(\n\t\t\t\t\"ID\"            => 587,   // ID поля для ответа на вопрос \"Дата рождения?\"\n\t\t\t\t\"VALUE\"         => \"\",    // параметр ANSWER_VALUE (значение по умолчанию)\n\t\t\t\t\"FIELD_WIDTH\"   => 10,    // ширина поля\n\t\t\t\t\"FIELD_PARAM\"   => \"\"     // параметры поля\n\t\t\t);\n            \n\t\t\t// получим текущее значение\n\t\t\t$value = CForm::GetDateValue($arAnswer[\"ID\"], $arAnswer, $arrVALUES);\n\t\t\t// выведем поле\n\t\t\techo CForm::GetDateField(\n\t\t\t\t$arAnswer[\"ID\"],\n\t\t\t\t\"ANKETA\",\n\t\t\t\t$value,\n\t\t\t\t$arAnswer[\"FIELD_WIDTH\"],\n\t\t\t\t$arAnswer[\"FIELD_PARAM\"]\n\t\t\t);\n\t\t?></td>\n\t</tr>\n</table>\n<input type=\"submit\" name=\"save\" value=\"Сохранить\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Sending Push Notifications using \\Bitrix\\Pull\\Push::add\nDESCRIPTION: This snippet illustrates how to send push notifications using the `\\Bitrix\\Pull\\Push::add` method. It defines the `module_id` and the `push` array, including the `message`, `expiry`, and `send_immediately` parameters. This is for sending notifications directly to mobile devices.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/CPullStack/AddByUsers.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$users = [1,2,3];\n\\Bitrix\\Pull\\Push::add($users, Array(\n\t'module_id' => 'some',\n\t'push' => Array(\n\t\t'message' => $pushText,\n\t\t'expiry' => 0,\n\t\t'send_immediately' => 'Y' // если не нужно чтобы проходил фильтр, надо Y\n\t)\n));\n\n```\n\n----------------------------------------\n\nTITLE: Creating a New Blog User Profile in PHP\nDESCRIPTION: Example of how to create a blog user profile for the current site user. It demonstrates setting up the required fields including user ID, permissions, alias, description, and interests.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n//создадим профайл пользователя блога для текущего пользователя\n$arFields = array(\n\t\"USER_ID\" => $USER->GetID(),\n\t\"=LAST_VISIT\" => $DB->GetNowFunction(),\n\t\"=DATE_REG\" => $DB->GetNowFunction(),\n\t\"ALLOW_POST\" => \"Y\",\n\t\"ALIAS\" => \"Псевдоним пользователя\",\n\t\"DESCRIPTION\" => \"Обычный пользователь сайта с блогом\",\n\t\"INTERESTS\" => \"программирование, PHP, MySQL, Bitrix, Битрикс\"\n);\n$newID = CBlogUser::Add($arFields);\nif(IntVal($newID)>0)\n{\n\techo \"Новый пользователь блога [\".$newID.\"] добавлен.\";\n}\nelse\n{\n\tif ($ex = $APPLICATION->GetException())\n\t\techo $ex->GetString();\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Adding Non-Blocking Event Handler in JavaScript\nDESCRIPTION: This code demonstrates how to add a non-blocking event handler using the `passive: true` option. This prevents the handler from blocking default actions such as page scrolling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.bind.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\nEvent.bind(window, 'scroll', scrollHandler, {passive: true});\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Currency Formats in Bitrix\nDESCRIPTION: Configures currency formats by accepting an array of currency objects with currency codes and format specifications. Allows optional replacement of existing currency formats.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Valjuty/BX.Currency.setCurrencies.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nBX.Currency.setCurrencies(\n\tcurrencies, replace\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing OnBeforeUserSimpleRegister Event Handler in PHP\nDESCRIPTION: This example demonstrates how to implement an OnBeforeUserSimpleRegister event handler. It registers the handler in init.php and defines a class with the handler method in a separate file.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnBeforeUserSimpleRegister.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// файл /bitrix/php_interface/init.php\nAddEventHandler(\n\t\"main\", \n\t\"OnBeforeUserSimpleRegister\", \n\tArray(\"MyClass\", \"OnBeforeUserSimpleRegisterHandler\"), \n\t100,\n\t$_SERVER[\"DOCUMENT_ROOT\"].\"/bitrix/php_interface/scripts/onbeforeusersimplereg.php\"\n);\n?>\n<?php\n// файл /bitrix/php_interface/scripts/onbeforeusersimplereg.php\nclass MyClass\n{\n\t// создаем обработчик события \"OnBeforeUserSimpleRegister\"\n\tpublic static function OnBeforeUserSimpleRegisterHandler(&$arFields)\n\t{\n\t\tif (strpos($arFields[\"EMAIL\"], \"@mysite.com\")===false)\n\t\t{\n\t\t\tglobal $APPLICATION;\n\t\t\t$APPLICATION->ThrowException(\"Регистрация возможно только для EMail адресов домена mysite.com\");\n\t\t\treturn false;\n\t\t}\n\t}\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining GetList Method Parameters - PHP\nDESCRIPTION: Defines the CPosting::GetList method and its parameters for retrieving published email releases based on sorting, filtering, and selection criteria. The method is non-static and returns a CDBResult containing publication data filtered by specified parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPosting/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCPosting::GetList(\n\t$aSort = Array(),\n\t$arFilter = Array(),\n\t$arSelect = Array(),\n\t$arNavStartParams = false\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing the Validation Method in PHP for Bitrix Form Fields\nDESCRIPTION: This core validation method checks if the input values fall within the specified number range. It returns true for valid values and throws an exception with an error message for invalid values.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Sozdanie_sobstvennyh_validatorov_polej_veb-form.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nfunction DoValidate($arParams, $arQuestion, $arAnswers, $arValues)\n{\n\tglobal $APPLICATION;\n  \n\tforeach ($arValues as $value)\n\t{\n\t\t// пустые значения пропускаем\n\t\tif (strlen($value) <= 0) continue;\n    \n\t\t// приведем значение к числу\n\t\t$value = $arParams[\"NUMBER_FLOAT\"] == \"Y\" ? floatval($value) : intval($value);\n    \n\t\t// проверим нижний порог числа\n\t\tif (strlen($arParams[\"NUMBER_FROM\"]) > 0 && $value < intval($arParams[\"NUMBER_FROM\"]))\n\t\t{\n\t\t\t// вернем ошибку\n\t\t\t$APPLICATION->ThrowException(\"#FIELD_NAME#: слишком маленькое значение\");\n\t\t\treturn false;\n\t\t}\n    \n\t\t// проверим верхний порог числа\n\t\tif (strlen($arParams[\"NUMBER_TO\"]) > 0 && $value > intval($arParams[\"NUMBER_TO\"]))\n\t\t{\n\t\t\t// вернем ошибку\n\t\t\t$APPLICATION->ThrowException(\"#FIELD_NAME#: слишком большое значение\");\n\t\t\treturn false;\n\t\t}\n\t}\n  \n\t// все значения прошли валидацию, вернем true\n\treturn true;\n}\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Event Emission with Event.EventEmitter\nDESCRIPTION: This snippet demonstrates how to use Event.EventEmitter.emitAsync to emit an event asynchronously and handle the results of multiple event handlers, including both synchronous and asynchronous handlers.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\nclass Button extends Event.EventEmitter {}\nconst button = new Button();\nbutton.subscribe('click', () => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve('value 1');\n\t\t}, 1000);  \n\t});\n});\nbutton.subscribe('click', () => {\n\treturn 'value 2';\n});\nbutton\n\t.emitAsync('click')\n\t.then((results) => {\n\t\tconsole.log(result[0]); // => 'value 1'\n\t\tconsole.log(result[1]); // => 'value 2'\n\t});\n```\n\n----------------------------------------\n\nTITLE: Example of Adding a User to Blog Groups in PHP\nDESCRIPTION: This example demonstrates how to add the current user to user groups with IDs 1, 2, and 3 in a blog with ID 1. The code handles both success and error cases with appropriate messaging.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/AddToUserGroup.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// добавим текущего пользователя в группы с ID = 1, 2, 3 пользователей блога с ID = 1\n$ID = $USER->GetID();\nif(!CBlogUser::AddToUserGroup($ID, 1, array(1,2,3), \"\", BLOG_BY_USER_ID, BLOG_ADD))\n{\n\tif ($ex = $APPLICATION->GetException())\n\t\techo $ex->GetString();\n}\nelse\n{\n\techo 'Пользователь ['.$ID.'] добавлен в группы пользователей блога';\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: CTaskTemplates Add Method Usage Example\nDESCRIPTION: This code snippet demonstrates how to use the CTaskTemplates::Add method to add a new task template. It initializes an array of fields with template data, creates a CTaskTemplates object, calls the Add method, and checks for success or failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/Ustarevshee/CTaskTemplates/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\\nif (CModule::IncludeModule(\\\"tasks\\\"))\\n{\\n\\t$arFields = Array(\\n\\t\\t\\\"TITLE\\\" => \\\"Task title\\\",\\n\\t\\t\\\"DESCRIPTION\\\" => \\\"Task description\\\",\\n\\t\\t\\\"RESPONSIBLE_ID\\\" => 2,\\n\\t\\t\\\"GROUP_ID\\\" => 3\\n\\t);\\n\\t$obTemplate = new CTaskTemplates;\\n\\t$ID = $obTemplate->Add($arFields);\\n\\t$success = ($ID>0);\\n\\tif($success)\\n\\t{\\n\\t\\techo \\\"Ok!\\\";\\n\\t}\\n\\telse\\n\\t{\\n\\t\\tif($e = $APPLICATION->GetException())\\n\\t\\t\\techo \\\"Error: \\\".$e->GetString();  \\n\\t}\\n}?>\"\n```\n\n----------------------------------------\n\nTITLE: Including the Bitrix Social Network Module in PHP\nDESCRIPTION: Code snippet demonstrating how to check if the social network module is installed and include it before using its functionality. This is a required step before accessing any social network features.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Sotsial'naja_set'.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule('socialnetwork');\n```\n\n----------------------------------------\n\nTITLE: Parsing Wiki Page Content with CWikiParser in PHP\nDESCRIPTION: This code snippet demonstrates how to use the CWikiParser::Parse method to process the content of a Wiki page. It retrieves the content of a page named 'Тестовая страница' from an infoblock with ID 2, then parses it using CWikiParser, and finally outputs the processed content.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWikiParser/Parse.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"<?\n// Обработаем содержимое страницы \\\"Тестовая страница\\\" инфоблока с идентификатором 2\n$IBLOCK_ID = 2;\n$NAME = 'Тестовая страница';\narFilter = array(\n\t'ACTIVE' => 'Y',\n\t'CHECK_PERMISSIONS' => 'N',\n\t'IBLOCK_ID' => $IBLOCK_ID\n);\narElement = CWiki::GetElementByName($NAME, $arFilter);\n$CWikiParser = new CWikiParser();\necho $CWikiParser->Parse($arElement['~DETAIL_TEXT'], $arElement['DETAIL_TEXT_TYPE'], $arElement['IMAGES']);\n?>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: CTasks::Add Method Signature (PHP)\nDESCRIPTION: Defines the signature of the CTasks::Add method, which is used to add a new task. It takes an array of fields (arFields) and an optional array of parameters (arParams). It returns the ID of the added task on success, or false on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTasks/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"int\nCTasks::Add(\n\tarray arFields,\n\tarray arParams = array()\n);\"\n```\n\n----------------------------------------\n\nTITLE: Unbinding Event Listener in JavaScript\nDESCRIPTION: Removes a specific event handler from a target DOM element. Requires passing the same parameters used when the event listener was originally added.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.unbind.md#2025-04-20_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nEvent.unbind(target: Element, event: string, handler: (event: Event) => void, options?: listenerOptions)\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\nconst button = document.querySelector('.ui-btn');\nEvent.unbind(button, 'click', eventHandler);\n```\n\n----------------------------------------\n\nTITLE: Implementing CBlog::Update for Blog Modification\nDESCRIPTION: Example of using CBlog::Update to modify an existing blog with ID 1. The example shows how to update various blog properties including name, description, group ID, and other settings. It also demonstrates error handling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/Update.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$ID = 1;\n$arFields = array(\n\t\"NAME\" => 'Блог администратора сайта',\n\t\"DESCRIPTION\" => 'В блоге описаны все изменения, происходящие на сайте',\n\t\"=DATE_UPDATE\" => $DB->CurrentTimeFunction(),\n\t\"GROUP_ID\" => '1',\n\t\"ENABLE_IMG_VERIF\" => 'N',\n\t\"EMAIL_NOTIFY\" => 'Y',\n\t\"ENABLE_RSS\" => \"N\",\n\t\"URL\" => \"admin-blog\",\n\t\"ACTIVE\" => \"Y\",\n\t\"OWNER_ID\" => $USER->GetID()\n);\n$updateID = CBlog::Update($ID, $arFields);\nif(IntVal($updateID)>0)\n{\n\techo \"Блог [\".$updateID.\"] изменен.\";\n}\nelse\n{\n\tif ($ex = $APPLICATION->GetException())\n\t\techo $ex->GetString();\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Implementing OnAfterUserLogout Event Handler in PHP\nDESCRIPTION: This example demonstrates how to create a class with a static method to handle the OnAfterUserLogout event. The handler is typically placed in the include.php file of a custom module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnAfterUserLogout.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// файл /bitrix/modules/my_module_id/include.php\nclass MyClass\n{\n\t// создаем обработчик события \"OnAfterUserLogout\"\n\tpublic static function OnAfterUserLogoutHandler($arParams)\n\t{\n\t\t// здесь выполняем все что касается завершения авторизации\n\t\t...\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: SetPostPerms Method Signature in PHP\nDESCRIPTION: The method signature for SetPostPerms which sets access levels to blog posts and comments. It accepts the post ID, permissions array, and permission type parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/SetPostPerms.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nvoid\nCBlogPost::SetPostPerms(\n\tint    ID,\n\tarray  arPerms,\n\tstring permsType = BLOG_PERMS_POST\n);\n```\n\n----------------------------------------\n\nTITLE: Get User Subscription Details in PHP\nDESCRIPTION: This code snippet demonstrates how to retrieve a user's subscription details using the `CSubscription::GetUserSubscription()` method in Bitrix. It returns an array of subscription fields if the user has a subscription, otherwise, it returns an array with \"ID\"=>0 and \"EMAIL\"=>\"\" if the subscription is not found.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscriptionGeneral/GetUserSubscription.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\narray\nCSubscription::GetUserSubscription();Копировать\n```\n\n----------------------------------------\n\nTITLE: Using CIBlockXMLFile to Process XML Files in PHP\nDESCRIPTION: This code snippet demonstrates how to use the CIBlockXMLFile class to process an XML file. It includes steps for dropping temporary tables, creating new ones, reading the XML file into the database, and indexing the loaded data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Informatsionnye_bloki/Klassy/CIBlockXMLFile.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$obXMLFile = new CIBlockXMLFile;\n// Удаляем результат предыдущей загрузки\n$obXMLFile->DropTemporaryTables();\n// Подготавливаем БД\nif(!$obXMLFile->CreateTemporaryTables())\n\treturn \"Ошибка создания БД.\";\nif($fp = fopen($FILE_NAME, \"rb\"))\n{\n\t// Чтение содержимого файла за один шаг\n\t$obXMLFile->ReadXMLToDatabase($fp, $NS, 0);\n\tfclose($fp);\n}\nelse\n{\n\t// Файл открыть не удалось\n\treturn \"Ошибка открытия файла\";\n}\n// Индексируем загруженные данные для ускорения доступа\nif(!CIBlockXMLFile::IndexTemporaryTables())\n\treturn \"Ошибка создания индексов БД.\";\n?>\n```\n\n----------------------------------------\n\nTITLE: Example of Using CBlogImage::Add in PHP\nDESCRIPTION: A practical example of adding an image to a blog post. It gets a file array, prepares the necessary fields, and calls the CBlogImage::Add method with the required parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogImage/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$fileID = 2268;\n\t$file = CFile::GetFileArray($fileID);\n\t$res = CBlogImage::Add(\n\t\tarray(\n\t\t\t\"TITLE\" => \"image title\",\n\t\t\t\"FILE_ID\" => $fileID,\n\t\t\t\"BLOG_ID\" => 1,\n\t\t\t\"POST_ID\" => 2,\n\t\t\t\"USER_ID\" => $USER->GetID(),\n\t\t\t\"IMAGE_SIZE\" => $file[\"FILE_SIZE\"],\n\t\t\t\"TIMESTAMP_X\" => $DB->GetNowFunction(),\n\t\t)\n\t);\n\tif($res)\n\t\techo 'Success';\n```\n\n----------------------------------------\n\nTITLE: Including the Bitrix Location Module in PHP\nDESCRIPTION: Code snippet demonstrating how to check if the location module is installed and include it before use. This is a required step before using any functionality from the Location module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Adresa_i_mestopolozhenija.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule('location');\n```\n\n----------------------------------------\n\nTITLE: Using GetSimpleList Method with Filters in PHP\nDESCRIPTION: Demonstrates how to call the GetSimpleList method with a filter to retrieve only advertising campaigns where the referer1 contains 'google'.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CAdv/GetSimpleList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// выберем только те рекламные кампании у которых в referer1 входит \"google\"\n$arFilter = array(\n\t\"REFERER1\" => \"google\"\n);\n// получим список записей\n$rs = CAdv::GetSimpleList(\n\t($by=\"s_referer1\"), \n\t($order=\"desc\"), \n\t$arFilter, \n\t$is_filtered\n);\n// выведем все записи\nwhile ($ar = $rs->Fetch())\n{\n\techo \"<pre>\"; print_r($ar); echo \"</pre>\";\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Complete Web Service Implementation Example with CCheckAuthWS\nDESCRIPTION: Full example of implementing a web service using CWebServiceDesc in Bitrix. This example shows how to define an authentication web service with methods for checking credentials and retrieving user information.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-servisy/Klassy/CWebServiceDesc.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nclass CCheckAuthWS extends IWebService\n{\n\t...\n\tfunction GetWebServiceDesc() \n\t{\n\t\t$wsdesc = new CWebServiceDesc();\n\t\t$wsdesc->wsname = \"bitrix.webservice.checkauth\";\n\t\t$wsdesc->wsclassname = \"CCheckAuthWS\";\n\t\t$wsdesc->wsdlauto = true;\n\t\t$wsdesc->wsendpoint = CWebService::GetDefaultEndpoint();\n\t\t$wsdesc->wstargetns = CWebService::GetDefaultTargetNS();\n        \n\t\t$wsdesc->classTypes = array();\n\t\t$wsdesc->structTypes[\"CUser\"] =\n\t\tarray(\n\t\t\t\"ID\" => array(\"varType\" => \"integer\"),\n\t\t\t\"NAME\" => array(\"varType\" => \"string\"),\n\t\t\t\"TIMESTAMP_X\" => array(\"varType\" => \"string\"),\n\t\t\t\"LOGIN\" => array(\"varType\" => \"string\"),\n\t\t\t\"PASSWORD\" => array(\"varType\" => \"string\"),\n\t\t\t\"CHECKWORD\" => array(\"varType\" => \"string\"),\n\t\t\t\"ACTIVE\" => array(\"varType\" => \"string\"),\n\t\t\t\"LAST_NAME\" => array(\"varType\" => \"string\"),\n\t\t\t\"EMAIL\" => array(\"varType\" => \"string\")        \n\t\t);\n        \n\t\t$wsdesc->classes = array(\n\t\t\t\"CCheckAuthWS\" => array(\n\t\t\t\t\"CheckAuthorization\" => array(\n\t\t\t\t\t\"type\"        => \"public\",\n\t\t\t\t\t\"name\"        => \"CheckAuthorization\",\n\t\t\t\t\t\"input\"        => array(\n\t\t\t\t\t\t\"user\" =>array(\"varType\" => \"string\"),\n\t\t\t\t\t\t\"password\" =>array(\"varType\" => \"string\")\n\t\t\t\t\t),\n\t\t\t\t\t\"output\"    => array(\n\t\t\t\t\t\t\"user\" => array(\"varType\" => \"CUser\")\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t\"GetHTTPUserInfo\" => array(\n\t\t\t\t\t\"type\"        => \"public\",\n\t\t\t\t\t\"name\"        => \"GetHTTPUserInfo\",\n\t\t\t\t\t\"input\"        => array(),\n\t\t\t\t\t\"output\"    => array(\n\t\t\t\t\t\t\"user\" => array(\"varType\" => \"CUser\")\n\t\t\t\t\t),\n\t\t\t\t\t\"httpauth\" => \"Y\"\n\t\t\t\t)\n\t\t\t)\n\t\t);\n        \n\t\treturn $wsdesc;\n\t}\n    \n\t...\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing OnBeforeChangeFile Event Handler in PHP\nDESCRIPTION: Demonstrates how to implement an OnBeforeChangeFile event handler. This example checks if the content contains the word 'Вася' and prevents saving if found. It also shows how to register the event handler.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnBeforeChangeFile.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// файл /bitrix/php_interface/init.php\nAddEventHandler(\"main\", \"OnBeforeChangeFile\", \"MyBeforeChangeFile\");\npublic static function MyBeforeChangeFile($abs_path, $content)\n{\n\tif(strpos($content, \"Вася\") !== false)\n\t{\n\t\t$GLOBALS['APPLICATION']->ThrowException(\"Вы не можете сохранять слово 'Вася' в документе! (\".$abs_path.\")\");\n\t\treturn false;\n\t}\n\treturn true;\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Course Content with CCourse::GetCourseContent\nDESCRIPTION: This code snippet demonstrates how to use the `CCourse::GetCourseContent` method to retrieve and display the content (chapters and lessons) of a course in Bitrix. It requires the 'learning' module to be included. The output displays the course structure with indentation representing the depth level.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/GetCourseContent.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$res = CCourse::GetCourseContent($COURSE_ID = 105, Array());\n\twhile ($arContent = $res->GetNext())\n\t{\n\t\techo str_repeat(\"&nbsp;&nbsp;&nbsp;&nbsp;\", $arContent[\"DEPTH_LEVEL\"]);\n\t\techo ($arContent[\"TYPE\"]==\"CH\" ? \"+\": \"-\").$arContent[\"NAME\"].\"<br>\";\n\t}\n\t/*\n\tThe above example will output something similar to:\n\t+Chapter 1\n\t\t+Chapter 1.1\n\t\t\t-Lesson 1.1.1\n\t\t+Chapter 1.2\n\t+Chapter 2\n\t\t-Lesson 2\n\t+Chapter 3\n\t\t+Chapter 3.1\n\t\t\t-Lesson 3.1.1\n\t\t\t-Lesson 3.1.2\n\t\t\t+Chapter 3.1.1\n\t*/\n}\n?>Copyровать\n```\n\n----------------------------------------\n\nTITLE: Preventing Default Event Action\nDESCRIPTION: Stops the default behavior of an event using the preventDefault() method\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.BaseEvent.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nEvent.BaseEvent.preventDefault()\n```\n\n----------------------------------------\n\nTITLE: Managing CRM Invoice Events in PHP\nDESCRIPTION: Events for CRM invoice operations, including adding, updating, deleting invoices, and managing invoice statuses.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\nOnBeforeCrmInvoiceUpdate\nOnBeforeCrmInvoiceAdd\nOnBeforeCrmInvoiceDelete\nOnAfterCrmInvoiceDelete\nOnBeforeCrmInvoiceSetStatus\nOnAfterCrmInvoiceSetStatus\n```\n\n----------------------------------------\n\nTITLE: Implementing a Recyclebin Manager for Task Entities\nDESCRIPTION: A complete class implementation for a Recyclebin manager that registers task entities with the recyclebin system. The manager provides entity names and handler classes.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Korzina_udalennyh_suschnostej.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nclass Manager\n{\n\tconst TASKS_RECYCLEBIN_ENTITY = 'tasks_task';\n\tconst TASKS_TEMPLATE_RECYCLEBIN_ENTITY = 'tasks_template';\n\tconst MODULE_ID = 'tasks';\n\tpublic static function OnModuleSurvey()\n\t{\n\t\t$data = [];\n\t\t$data[self::TASKS_RECYCLEBIN_ENTITY] = array(\n\t\t\t'NAME'    => Loc::getMessage('TASKS_RECYCLEBIN_ENTITY_NAME'), // Название сущности\n\t\t\t'HANDLER' => \\Bitrix\\Tasks\\Integration\\Recyclebin\\Task::class // Класс обработчик сущности\n\t\t);\n\t\t$data[self::TASKS_TEMPLATE_RECYCLEBIN_ENTITY] = array(\n\t\t\t'NAME'    => Loc::getMessage('TASKS_TEMPLATE_RECYCLEBIN_ENTITY_NAME'),\n\t\t\t'HANDLER' => \\Bitrix\\Tasks\\Integration\\Recyclebin\\Template::class\n\t\t);\n\t\treturn new EventResult(\n\t\t\tEventResult::SUCCESS, [\n\t\t\t'NAME' => Loc::getMessage('TASKS_RECYCLEBIN_MODULE_NAME'),\n\t\t\t'LIST' => $data\n\t\t\t], self::MODULE_ID\n\t\t);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Example of arANSWER array structure\nDESCRIPTION: Shows the structure of the arANSWER array.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormField/Set.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"Array\n(\n\t[0] => Array\n\t(\n\t\t[ID] => ID\n\t\t[DELETE] => флаг необходимости удаления [Y|N]\n\t\t[MESSAGE] => параметр ANSWER_TEXT\n\t\t[VALUE] => параметр ANSWER_VALUE\n\t\t[C_SORT] => порядок сортировки\n\t\t[ACTIVE] => флаг активности [Y|N]\n\t\t[FIELD_TYPE] => тип, допустимы следующие значения:\n\t\t\ttext - однострочное текстовое поле\n\t\t\ttextarea - многострочное текстовое поле\n\t\t\tradio* - переключатель одиночного выбора (radio-кнопка)\n\t\t\tcheckbox* - флаг множественного выбора (checkbox)\n\t\t\tdropdown* - элемент выпадающего списка одиночного выбора\n\t\t\tmultiselect* - элемент списка множественного выбора\n\t\t\tdate - поле для ввода даты\n\t\t\timage - поле для загрузки изображения\n\t\t\tfile - поле для загрузки произвольного файла\n\t\t\tpassword - поле для ввода пароля\n\t\t[FIELD_WIDTH] => ширина поля ввода\n\t\t[FIELD_HEIGHT] => высота поля ввода\n\t\t[FIELD_PARAM] => дополнительные параметры;\n\t\t\tдопустимо использование любого HTML кода;\n\t\t\tдля типов помеченных символом * допустимо использование\n\t\t\tследующих зарезервированных строк:\n\t\t\tchecked - ответ будет выбран (отмечен)\n                             по умолчанию (синоним - selected)\n\t\t\tnot_answer - выбор данного ответа не означает,\n                             что был дан ответ на вопрос\n                             (как правило это первый элемент выпадающего списка и\n                             важно при REQUIRED=\\\"Y\\\")\n\t)\n\t[1] => массив описывающий следующий ответ\n\t...\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Example of Using CBlogGroup::Update in PHP\nDESCRIPTION: Example showing how to update an existing blog group's parameters. The code updates a group with ID 1, changing its site ID to 'ru' and name to 'Веселые блоги'. It also includes error handling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogGroup/Update.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$ID = 1;\n$arFields = array(\n\t\"SITE_ID\" => \"ru\",\n\t\"NAME\" => \"Веселые блоги\"\n);\n$updateID = CBlogGroup::Update($ID, $arFields);\nif(IntVal($updateID)>0)\n{\n\techo \"Группа [\".$updateID.\"] изменена.\";\n}\nelse\n{\n\tif ($ex = $APPLICATION->GetException())\n\t\techo $ex->GetString();\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Binding a Comment as Official Response\nDESCRIPTION: This code snippet shows an example of how to use the Bind method to mark an idea comment with ID 1 as an official response. It uses CIdeaManagment::getInstance()->IdeaComment()->SetID(1)->Bind() to perform the action.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Menedzher_idej/Klassy/CIdeaManagmentIdeaComment/Bind.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"if(CIdeaManagment::getInstance()->IdeaComment()->SetID(1)->Bind())\n\techo 'Комментарий идеи с ID=1 помечен как официальный ответ';Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CWiki::GetElementByName in PHP\nDESCRIPTION: Example code showing how to retrieve a Wiki page named \"Тестовая страница\" from an infoblock with ID 2. The example demonstrates setting up the filter array and handling the case when the page is not found.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/GetElementByName.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Получим Wiki-страницу с названием \"Тестовая страница\" инфоблока с идентификатором 2\n$NAME = 'Тестовая страница';\n$arFilter = array(\n\t'ACTIVE' => 'Y',\n\t'CHECK_PERMISSIONS' => 'N',\n\t'IBLOCK_ID' => 2\n);\n$arElement = CWiki::GetElementByName($NAME, $arFilter);\nif ($arElement == false)\n\techo 'Страница не найдена.';\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining GetSimpleList Method in PHP\nDESCRIPTION: Defines the GetSimpleList method within the CAdv class, which retrieves a simple list of advertising campaigns based on provided filters and sorting options.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CAdv/GetSimpleList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCAdv::GetSimpleList(\n\tstring &by = \"s_referer1\",\n\tstring &order = \"desc\",\n\tarray filter = array(),\n\tbool &is_filtered\n)\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CSOAPRequest::addParameter in PHP\nDESCRIPTION: This example demonstrates creating a request to call a web service defined in webservice.wsdl.phpt file. It shows how to initialize a CSOAPRequest object and add both simple and complex parameters using the addParameter method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-servisy/Klassy/CSOAPRequest/addParameter.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// Пример создания запроса для вызова веб-сервиса из файла webservice.wsdl.phpt\n$request = new CSOAPRequest( \"wsTestStart4\", \"http://bitrix.soap/\" );\n$request->addParameter(\"str1\", \"qwe\");\n$request->addParameter(\"str2\", array(\n\t\"1:ArrayOfsGenTestXEl\" => array(\n\t\t\"id\" => \"123\",\n\t\t\"name\" => \"qwe\",\n\t\t\"testa\" => array(\n\t\t\t\"1:ArrayOfsGenLiteEl\" => array(\"id\" => \"56\", \"name\" => \"asd\"),\n\t\t\t\"2:ArrayOfsGenLiteEl\" => array(\"id\" => \"13\", \"name\" => \"fjhg\")\n\t\t)\n\t),\n\t\"2:ArrayOfsGenTestXEl\" => array(\n\t\t\"id\" => \"7653\",\n\t\t\"name\" => \"dfgsdf DASD\",\n\t\t\"testa\" => array(\n\t\t\t\"1:ArrayOfsGenLiteEl\" => array(\"id\" => \"78\", \"name\" => \"ty\"),\n\t\t\t\"2:ArrayOfsGenLiteEl\" => array(\"id\" => \"99\", \"name\" => \"3425rte\")\n\t\t)\n\t)\n));\n```\n\n----------------------------------------\n\nTITLE: Example of Using CBlogComment::Delete with Transaction Handling in PHP\nDESCRIPTION: Example showing how to delete a blog comment within a database transaction. The code demonstrates proper error handling by rolling back the transaction if deletion fails, or committing it on success.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogComment/Delete.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$DB->StartTransaction();\nif(!CBlogComment::Delete($ID))\n{\n\techo 'Ошибка удаления комментария '.$ID;\n\t$DB->Rollback();\n}\nelse\n\t$DB->Commit();\n?>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Question Data Using GetDataByID in PHP\nDESCRIPTION: Example code showing how to retrieve data for a specific question from a form result using the GetDataByID method. This example retrieves data for the 'VS_INTEREST' question and displays the result fields and answer data in different formats.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetDataByID.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?\n$RESULT_ID = 189; // ID результата\n$arAnswer = CFormResult::GetDataByID(\n\t$RESULT_ID, \n\tarray(\"VS_INTEREST\"),  // вопрос \"Какие области знаний вас интересуют?\" \n\t$arResult, \n\t$arAnswer2);\n// выведем поля результата\necho \"<pre>\"; print_r($arResult); echo \"</pre>\";\n// выведем значения ответов\necho \"<pre>\"; print_r($arAnswer); echo \"</pre>\";\n// выведем значения ответов в несколько ином формате\necho \"<pre>\"; print_r($arAnswer2); echo \"</pre>\";\n?>\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CBlogPost::PreparePath Method in PHP\nDESCRIPTION: A simple example showing how to create a link to a blog post using the PreparePath method. The example generates a link to the first post in the blog 'Блог администратора'.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/PreparePath.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\necho '<a href=\"'.CBlogPost::PreparePath(\"admin-blog\", 1).'\">Первое сообщение в блоге \"Блог администратора\"</a>';\n?>\n```\n\n----------------------------------------\n\nTITLE: Get Custom Node Parameters in JavaScript\nDESCRIPTION: This JavaScript code demonstrates how to use `oBXEditorUtils.getCustomNodeParams` to retrieve custom node parameters within a custom taskbar. The `ShowProperties` and `UnParseElement` functions both utilize the method to get an array of properties for a given element or node, which are then used within the taskbar's logic. The method is essential for extracting properties from visually represented elements.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/getCustomNodeParams.md#2025-04-20_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"<script>\nfunction CustomTaskbar()\n{\n\tvar oTaskbar = this;\n\t\n\tCustomTaskbar.prototype.OnTaskbarCreate = function ()\n\t{\n\t\t//...\n\t}\n\t\n\tCustomTaskbar.prototype.ShowProperties = function(_bNew, _pTaskbar, _pElement)\n\t{\n\t\t//...\n\t\tvar arParams = oBXEditorUtils.getCustomNodeParams(_pElement);//Возвращает массив свойств\n\t\t//...\n\t}\n\t\n\tCustomTaskbar.prototype.UnParseElement = function(node)\n\t{\n\t\t//...\n\t\tvar arParams = oBXEditorUtils.getCustomNodeParams(node);//Возвращает массив свойств\n\t\t//...\n\t\treturn false;\n\t}\n}\n</script>\"\n```\n\n----------------------------------------\n\nTITLE: Добавление простых товаров к сущностям CRM в Bitrix (PHP)\nDESCRIPTION: Пример добавления простых товаров к различным сущностям CRM (сделка, лид, предложение, счет). Товары не сохраняются отдельно в базе, а привязываются напрямую к сущностям.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Osnovnye_metody_raboty.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('crm')) \n{ \n\t$rows = array(); \n\t$rows[] = array( \n\t\t'PRODUCT_NAME' => 'Страховка', 'QUANTITY' => 2,   'PRICE' => 300, \n\t\t'MEASURE_CODE' => 796 \n\t); \n\t$rows[] = array( \n\t\t'PRODUCT_NAME' => 'Выезд менеджера', 'QUANTITY' => 1,  'PRICE' => 100, \n\t\t'MEASURE_CODE' => 796 \n\t); \n\tCCrmProductRow::SaveRows('D', 10, $rows);//привязываем к сделке \n\tCCrmProductRow::SaveRows('L', 8, $rows);//к лиду \n\tCCrmProductRow::SaveRows('Q', 1, $rows);//к предложению \n\t//для счетов несколько иначе - при обновлении или добавлении  указываем отдельным полем \n\tCCrmInvoice::add(array( \n\t\t'ORDER_TOPIC' => 'Новый счет', \n\t\t'PRODUCT_ROWS' => $rows \n\t)); \n}\n```\n\n----------------------------------------\n\nTITLE: Method Signature of CFormStatus::Set in Bitrix\nDESCRIPTION: The method signature for CFormStatus::Set which adds or updates a status in a web form. It returns the ID of the updated or added status on success, or false on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormStatus/Set.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nmixed\nCFormStatus::Set(\n\tarray fields,\n\tmixed status_id = false,\n\tstring check_rights = \"Y\"\n)\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CBlogUser::Update Method in PHP\nDESCRIPTION: This example demonstrates how to use the CBlogUser::Update method to modify the profile of the current user's blog. It updates the alias, description, and interests fields.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/Update.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n//изменим профайл пользователя блога для текущего пользователя\n$arUser = CBlogUser::GetByID($USER->GetID(), BLOG_BY_USER_ID)\n$arFields = array(\n\t\"ALIAS\" => \"Псевдоним текущего пользователя\",\n\t\"DESCRIPTION\" => \"Обычный пользователь сайта с блогом\",\n\t\"INTERESTS\" => \"программирование, PHP, MySQL, Bitrix, Битрикс, Microsoft\"\n);\n$updateID = CBlogUser::Update($arUser[\"ID\"], $arFields);\nif(IntVal($updateID)>0)\n{\n\techo \"Информация о пользователе блогов [\".$updateID.\"] изменена.\";\n}\nelse\n{\n\tif ($ex = $APPLICATION->GetException())\n\t\techo $ex->GetString();\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Get Elapsed Time for Task\nDESCRIPTION: This code snippet demonstrates how to use CTaskElapsedTime::GetList to calculate the total elapsed time for a specific task. It fetches elapsed time entries for a task with ID 2 and sums the 'MINUTES' field to compute the total elapsed time in hours and minutes. Requires the 'tasks' module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskElapsedTime/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\n// Посчитаем затраченное время для задачи с ID = 2\nif (CModule::IncludeModule(\"tasks\"))\n{\n\t$res = CTaskElapsedTime::GetList(\n\t\tArray(), \n\t\tArray(\"TASK_ID\" => \"2\")\n\t);\n\t$elapsedTime = 0;\n\twhile ($arElapsed = $res->Fetch())\n\t{\n\t\t$elapsedTime += $arElapsed[\"MINUTES\"];\n\t}\n\techo \"Затраченное время: \".floor($elapsedTime / 60).\"ч. \".($elapsedTime % 60).\"м.\";\n}\n?>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Example of AutoSend for Cron Job (PHP)\nDESCRIPTION: This code snippet shows how to call the AutoSend method within a PHP script intended to be executed by cron. It sets up the server's document root and includes necessary Bitrix files before invoking the AutoSend method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/AutoSend.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n#!/usr/bin/php\n<?php\n//Здесь необходимо указать ваш DOCUMENT_ROOT!\n$_SERVER[\"DOCUMENT_ROOT\"] = \"/opt/www/html\";\n$DOCUMENT_ROOT = $_SERVER[\"DOCUMENT_ROOT\"];\ndefine(\"NO_KEEP_STATISTIC\", true);\ndefine(\"NOT_CHECK_PERMISSIONS\", true);\nset_time_limit(0);\nrequire($_SERVER[\"DOCUMENT_ROOT\"].\"/bitrix/modules/main/include/prolog_before.php\");\nif (CModule::IncludeModule(\"subscribe\"))\n{\n\t$cPosting = new CPosting;\n\t$cPosting->AutoSend();\n}\nrequire($_SERVER[\"DOCUMENT_ROOT\"].\"/bitrix/modules/main/include/epilog_after.php\");\n?>\n```\n\n----------------------------------------\n\nTITLE: Setting Blog Comment Permissions in PHP\nDESCRIPTION: Example of using SetBlogPerms to set comment permissions for a blog. It sets read and write permissions for two user groups.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/SetBlogPerms.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$ID = 1;\n$arPerms = Array(\n\t\"1\" => BLOG_PERMS_READ,\n\t\"2\" => BLOG_PERMS_WRITE\n);\nCBlog::SetBlogPerms($ID, $arPerms, BLOG_PERMS_COMMENT);\n?>\n```\n\n----------------------------------------\n\nTITLE: Structure of Returned Event Record\nDESCRIPTION: This code snippet shows the structure of the array returned by the `CStatEvent::GetList` method when fetching an event record. It contains information about the event, such as ID, event parameters, related IDs (session, guest, hit), and other relevant data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEvent/GetList.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nArray\n(\n\t[ID] => ID события\n\t[EVENT3] => дополнительный параметр event3 события\n\t[TYPE_ID] => ID типа события\n\t[DATE_ENTER] => время создания события\n\t[EVENT1] => идентификатор event1 типа события\n\t[EVENT2] => идентификатор event2 типа события\n\t[NAME] => название типа события\n\t[EVENT] => event1 / event2, либо название типа события (если оно задано)\n\t[DESCRIPTION] => описание типа события\n    \n\t[ADV_ID] => ID рекламной кампании\n\t[ADV_BACK] => флаг прямого захода (N) или возврата (Y) по рекламной кампании\n\t[COUNTRY_ID] => ID страны посетителя\n\t[COUNTRY_NAME] => название страны посетителя\n\t[SESSION_ID] => ID сессии\n\t[GUEST_ID] => ID посетителя\n\t[HIT_ID] => ID хита\n\t[REFERER_URL] => ссылающаяся страница\n\t[REFERER_SITE_ID] => ID сайта для ссылающейся страницы\n\t[URL] => страница на которой было зафиксировано событие\n\t[SITE_ID] => ID сайта для страницы, на которой было зафиксировано событие\n\t[REDIRECT_URL] => страница, на которую был перенаправлен посетитель после фиксации события\n\t[MONEY] => денежная сумма\n\t[CHARGEBACK] => Y - отрицательная денежная сумма; N - положительная денежная сумма\n\t[CURRENCY] => трехсимвольный идентификатор валюты для денежной суммы\n)\n```\n\n----------------------------------------\n\nTITLE: Displaying Form Result Response Outside Main Template in PHP\nDESCRIPTION: This snippet demonstrates how to display a form response message bypassing the main template. This is useful when you don't need to use form result editing pages or viewing result lists.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n <!-- Если есть ответ формы - выведем его в обход шаблона -->\n<?if($FORM->isFormNote()):?>\n<?=$FORM->ShowFormNote()?>\n<?else:?>\n<!-- здесь остальной шаблон веб-формы -->\n<?endif?>\n```\n\n----------------------------------------\n\nTITLE: Display Currency List\nDESCRIPTION: This code snippet retrieves a list of currencies, sorted by name, and then iterates through the results to display the currency code, full name, and formatted value (11.95) for each currency.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Valjuty/Klassy/CCurrency/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\n// Выведем список валют на текущем языке, отсортированный по названию\n// Кроме того выведем сумму 11.95 в формате этой валюты на текущем языке\n$lcur = CCurrency::GetList(($by=\\\"name\\\"), ($order=\\\"asc\\\"), LANGUAGE_ID);\nwhile($lcur_res = $lcur->Fetch())\n{\n\techo \\\"[\\\".$lcur_res[\\\"CURRENCY\\\"].\\\"] \\\".$lcur_res[\\\"FULL_NAME\\\"] .\\\": \\\";\n\techo CurrencyFormat(11.95, $lcur_res[\\\"CURRENCY\\\"]).\\\"<br>\\\";\n}\n?>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Task Data as an Array\nDESCRIPTION: This snippet demonstrates how to access task data by treating the task object as an array. This approach automatically handles the necessary data retrieval.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskItem/getData.md#2025-04-20_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n`$task['TITLE']` - это само выполнит все необходимые запросы\n```\n\n----------------------------------------\n\nTITLE: Deleting Push Notification by SubTag with CPushManager in PHP\nDESCRIPTION: This snippet demonstrates how to delete a push notification from the queue using the CPushManager class, specifically using the sub tag to identify the notification. The `DeleteFromQueueBySubTag()` method is called with the user ID and the subTag to remove the notification from the queue, preventing it from being sent to the user.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/CPushManager.md#2025-04-20_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nCPushManager:: DeleteFromQueueBySubTag($userId, $subTag);Копировать\n```\n\n----------------------------------------\n\nTITLE: Example of Creating/Updating CAdvContract\nDESCRIPTION: This code snippet demonstrates how to use the `CAdvContract::Set` method to create a new advertising contract or update an existing one. It constructs an array of fields with contract parameters and then calls the `Set` method to save the contract. After saving, it redirects the user to either the contract list or the edit page based on the button clicked.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Reklama,_bannery/Klassy/CAdvContract/Set.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?\nif ((strlen($save)>0 || strlen($apply)>0) && $REQUEST_METHOD==\"POST\")\n{\n\t$arrWEEKDAY = array(\n\t\t\"SUNDAY\"\t=> $arrSUNDAY,\n\t\t\"MONDAY\"\t=> $arrMONDAY,\n\t\t\"TUESDAY\"\t=> $arrTUESDAY,\n\t\t\"WEDNESDAY\"\t=> $arrWEDNESDAY,\n\t\t\"THURSDAY\"\t=> $arrTHURSDAY,\n\t\t\"FRIDAY\"\t=> $arrFRIDAY,\n\t\t\"SATURDAY\"\t=> $arrSATURDAY\n\t);\n\t$arFields = array(\n\t\t\"ACTIVE\"\t\t\t\t=> $ACTIVE,\n\t\t\"NAME\"\t\t\t\t  => $NAME,\n\t\t\"DESCRIPTION\"\t\t   => $DESCRIPTION,\n\t\t\"ADMIN_COMMENTS\"\t\t=> $ADMIN_COMMENTS,\n\t\t\"WEIGHT\"\t\t\t\t=> $WEIGHT,\n\t\t\"SORT\"\t\t\t\t  => $SORT,\n\t\t\"MAX_SHOW_COUNT\"\t\t=> $MAX_SHOW_COUNT,\n\t\t\"MAX_CLICK_COUNT\"\t   => $MAX_CLICK_COUNT,\n\t\t\"DATE_SHOW_FROM\"\t\t=> $DATE_SHOW_FROM,\n\t\t\"DATE_SHOW_TO\"\t\t  => $DATE_SHOW_TO,\n\t\t\"DEFAULT_STATUS_SID\"\t=> $DEFAULT_STATUS_SID,\n\t\t\"arrSHOW_PAGE\"\t\t  => split(\"[\\n\\r]\",$SHOW_PAGE),\n\t\t\"arrNOT_SHOW_PAGE\"\t  => split(\"[\\n\\r]\",$NOT_SHOW_PAGE),\n\t\t\"arrTYPE\"\t\t\t   => $arrTYPE,\n\t\t\"arrWEEKDAY\"\t\t\t=> $arrWEEKDAY,\n\t\t\"arrUSER_VIEW\"\t\t  => $arrUSER_VIEW,\n\t\t\"arrUSER_ADD\"\t\t   => $arrUSER_ADD,\n\t\t\"arrUSER_EDIT\"\t\t  => $arrUSER_EDIT\n\t);\n\tif ($ID = CAdvContract::Set($arFields, $ID))\n\t{\n\t\tif (strlen($strError)<=0)\n\t\t{\n\t\t\tif (strlen($save) > 0)\n\t\t\t\tLocalRedirect(\"adv_contract_list.php?lang=\".LANG);\n\t\t\telse\n\t\t\t\tLocalRedirect(\"adv_contract_edit.php?ID=\".$ID.\"&lang=\".LANG);\n\t\t}\n\t}\n\t$DB->PrepareFields(\"b_adv_contract\");\n}\n?>\n\n```\n\n----------------------------------------\n\nTITLE: Defining Memcached Host and Port\nDESCRIPTION: This PHP code defines constants for the Memcached host and port within Bitrix. These constants are used to configure the connection to the Memcached server when using it as a caching backend.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Monitor_proizvoditel'nosti/Instruktsija_po_nastrojke_keshirovanija.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n\"define(\\\"BX_MEMCACHE_HOST\\\", \\\"unix:///path/to/memcached.sock\\\"); \\ndefine(\\\"BX_MEMCACHE_PORT\\\", \\\"0\\\");\\nКопировать\"\n```\n\n----------------------------------------\n\nTITLE: CChapter Add Method Signature in PHP\nDESCRIPTION: Defines the method signature for adding a new chapter with an array of fields as the primary parameter. Returns an integer representing the new chapter's ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CChapter/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCChapter::Add(\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Using GetUserFriends to Retrieve User's Friends' Blogs - PHP\nDESCRIPTION: Example usage of the GetUserFriends method. It retrieves all blogs of friends for the current user and displays links to these blogs.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/GetUserFriends.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// выберем все блоги друзей пользователя\n$dbFriends = CBlogUser::GetUserFriends($USER->GetID(), True);\nwhile ($arFriends = $dbFriends->Fetch())\n{\n\t?><a href=\"<?= CBlog::PreparePath($arFriends[\"URL\"], false, $is404) ?>\"><?= htmlspecialchars($arFriends[\"NAME\"]) ?></a><?php\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Adding a Gradebook Entry in Bitrix\nDESCRIPTION: Complete example of adding a gradebook entry for a specific test and student, including module initialization, field preparation, and error handling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CGradeBook/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$TEST_ID = 32;\n\t$STUDENT_ID = 3;\n\t$arFields = Array(\n\t\t\"TEST_ID\" => $TEST_ID,\n\t\t\"STUDENT_ID\" => $STUDENT_ID,\n\t\t\"RESULT\" => 300,\n\t\t\"MAX_RESULT\" => 300\n\t);\n\t$gradebook = new CGradeBook;\n\t$ID = $gradebook->Add($arFields);\n\t$success = ($ID>0);\n\t if($success)\n\t {\n\t\t echo \"Ok!\";\n\t }\n\t else\n\t {\n\t\t if($e = $APPLICATION->GetException())\n\t\t\t echo \"Error: \".$e->GetString();\n\t }\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Result Parameter Structure in GetDataByID Method\nDESCRIPTION: The structure of the 'result' parameter that gets populated by the GetDataByID method, containing information about form result fields, form fields, and status fields.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetDataByID.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nArray\n(\n\t[ID] => ID результата\n\t[TIMESTAMP_X] => время изменения результата\n\t[DATE_CREATE] => дата создания результата\n\t[FORM_ID] => ID веб-формы\n\t[USER_ID] => ID пользователя создавшего результат (автор)\n\t[USER_AUTH] => флаг авторизованности автора при создании результата [Y|N]\n\t[STAT_GUEST_ID] => ID посетителя создавшего результат\n\t[STAT_SESSION_ID] => ID сессии в которой был создан результат\n\t[STATUS_ID] => ID статуса в котором находится результат\n\t[STATUS_TITLE] => заголовок статуса в котором находится результат\n\t[STATUS_DESCRIPTION] => описание статуса в котором находится результат\n\t[STATUS_CSS] => имя CSS класса в котором находится результат\n\t[SID] => символьный идентификатор веб-формы\n\t[NAME] => заголовок веб-формы\n\t[IMAGE_ID] => ID изображения веб-формы\n\t[DESCRIPTION] => описание веб-формы\n\t[DESCRIPTION_TYPE] => тип описания веб-формы [text|html]\n)\n```\n\n----------------------------------------\n\nTITLE: Using CWiki::Recover Method in PHP\nDESCRIPTION: Example of using the Recover method to restore a Wiki page with ID 13 from infoblock with ID 2 using history record 26. The method returns a boolean indicating success or failure of the restoration process.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/Recover.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Восстановим страницу с идентификатором 13 из инфоблока с идентификатором 2 по записи в истории 26\n$HISTORY_ID = 26;\n$ID = 13;\n$IBLOCK_ID = 2;\n$CWiki = new CWiki();\nif (!$CWiki->Recover($HISTORY_ID, $ID, $IBLOCK_ID))\n\techo 'Ошибка. Страница не восстановлена.';\n?>\n```\n\n----------------------------------------\n\nTITLE: Example of Retrieving a Wiki Page in PHP\nDESCRIPTION: Example code demonstrating how to use the CWiki::GetElementById method to retrieve a Wiki page with ID 13 from an infoblock with ID 2. The example includes filter settings and basic error handling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/GetElementById.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Получим Wiki-страницу с идентификатором 13 инфоблока с идентификатором 2\n$ID = 13;\n$arFilter = array(\n\t'ACTIVE' => 'Y',\n\t'CHECK_PERMISSIONS' => 'N',\n\t'IBLOCK_ID' => 2\n);\n$arElement = CWiki::GetElementById($ID, $arFilter);\nif ($arElement == false)\n\techo 'Страница не найдена.';\n?>\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CWiki::AddImage Method\nDESCRIPTION: This example demonstrates how to attach an image to a Wiki page with ID 13 in information block 2. It first checks if the uploaded file is an image using CFile::IsImage, then creates a CWiki instance and calls the AddImage method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/AddImage.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// привяжем изображение к странице с идентификатором 13 из инфоблока с идентификатором 2\n$ID = 13;\n$IBLOCK_ID = 2;\nif (CFile::IsImage($_FILES['FILE_ID']['name']))\n{\n\t$CWiki = new CWiki();\n\t$CWiki->AddImage($ID, $IBLOCK_ID, $_FILES['FILE_ID']);\n}?>\n```\n\n----------------------------------------\n\nTITLE: Example of Using CBlogUser::Delete Method in PHP\nDESCRIPTION: Example code demonstrating how to delete a blog user profile. It gets the current user ID, attempts to delete the profile, and handles any exceptions that might occur during the deletion process.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/Delete.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$ID = $USER->GetID();\nif(!CBlogUser::Delete($ID))\n{\n\tif ($ex = $APPLICATION->GetException())\n\t\techo $ex->GetString();\n}\nelse\n{\n\techo 'Профайл блога пользователя ['.$ID.'] удален';\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Subscribing to New Forum Messages in PHP\nDESCRIPTION: This function subscribes the current visitor to new messages in a forum or specific topic. It takes forum ID, topic ID (optional), and reference parameters for error and success messages. Returns a boolean indicating success.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Forum/Funktsii/ForumSubscribeNewMessages.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nForumSubscribeNewMessages(\n\tint FID,\n\tint TID,\n\t&string strErrorMessage,\n\t&string strOKMessage\n);\n```\n\n----------------------------------------\n\nTITLE: AddToStack example\nDESCRIPTION: The `CPullWatch::AddToStack` method sends data to subscribed users. The method is static. Parameters include tag, module_id, command, and params. The params array will be processed in Javascript.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/CPullWatch/AddToStack.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n```\nCPullWatch::AddToStack(\n\t$tag, Array(\n\t\t'module_id' => 'test',\n\t\t'command' => 'check',\n\t\t'params' => Array(),\n\t)\n);\n```\n```\n\n----------------------------------------\n\nTITLE: OnReIndex Event Handler Example\nDESCRIPTION: Demonstrates how to register a module's reindexing event handler and implement the OnReIndex method to provide searchable content from a custom table.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Poisk/Klassy/CSearch/ReindexModule.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// Register OnReindex handler\nRegisterModuleDependences(\"search\", \"OnReindex\", \"my_module\", \"CMyModule\", \"OnReindex\");\n\n// Implement OnReindex method\nfunction OnReindex()\n{\n\tglobal $DB;\n\t$arResult = array();\n\t$strSql = \"SELECT FT.ID, FT.TITLE, FT.MESSAGE, \"\n\t\t. \"  DATE_FORMAT(FT.POST_DATE, '%d.%m.%Y %H:%i:%s') as POST_DATE, FT.LID \"\n\t\t. \"FROM b_my_table FT \";\n\t$db_res = $DB->Query($strSql);\n\twhile ($res = $db_res->Fetch())\n\t{\n\t\t$arResult[] = array(\n\t\t\t\"ID\" => $res[\"ID\"],\n\t\t\t\"LID\" => $res[\"LID\"],\n\t\t\t\"DATE_CHANGE\" => $res[\"POST_DATE\"],\n\t\t\t\"URL\" => \"/my_module/index.php?ID=\".$res[\"ID\"],\n\t\t\t\"PERMISSIONS\" => array(2),\n\t\t\t\"TITLE\" => $res[\"TITLE\"],\n\t\t\t\"BODY\" => $res[\"POST_MESSAGE\"]\n\t\t);\n\t}\n\treturn $arResult;\n}\n\n// Trigger module reindexing\nCSearch::ReIndexModule(\"my_module\");\n```\n\n----------------------------------------\n\nTITLE: CPosting Update Method Signature\nDESCRIPTION: This code snippet shows the signature of the CPosting::Update method in PHP. It takes the ID of the posting and an array of fields as input and returns a boolean value indicating success or failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nbool\nCPosting::Update(\n\tint ID,\n\tarray arFields\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: Deleting Push Notification by Tag with CPushManager in PHP\nDESCRIPTION: This snippet demonstrates how to delete a push notification from the queue using the CPushManager class, specifically using the main tag to identify the notification. The `DeleteFromQueueByTag()` method is called with the user ID and the tag to remove the notification from the queue, preventing it from being sent to the user.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/CPushManager.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nCPushManager:: DeleteFromQueueByTag($userId, $tag);Копировать\n```\n\n----------------------------------------\n\nTITLE: Example of Using GetByID to Retrieve Course Name\nDESCRIPTION: Demonstrates how to use GetByID method to fetch and display a course name after checking module inclusion\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$course = CCourse::GetByID($COURSE_ID);\n\tif ($arCourse = $course->GetNext())\n\t{\n\t\techo $arCourse[\"NAME\"];\n\t}\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CBlog::Delete in PHP\nDESCRIPTION: This example demonstrates how to use the CBlog::Delete method within a database transaction. It attempts to delete a blog and either commits the transaction on success or rolls back on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/Delete.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$DB->StartTransaction();\nif(!CBlog::Delete($ID))\n{\n\techo 'Ошибка удаления блога '.$ID;\n\t$DB->Rollback();\n}\nelse\n\t$DB->Commit();\n?>\n```\n\n----------------------------------------\n\nTITLE: CForm::GetMultiSelectValue signature\nDESCRIPTION: This snippet shows the method signature for CForm::GetMultiSelectValue. It accepts the question SID, an array of answers, and an optional array of form values. It returns an array of selected answer IDs.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetMultiSelectValue.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\narray\nCForm::GetMultiSelectValue(\n\tstring question_sid,\n\tarray answer_list,\n\tmixed form_values = false\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Radio Button Example\nDESCRIPTION: This PHP code snippet demonstrates how to use the `CForm::GetRadioField` and `CForm::GetRadioValue` methods within a Bitrix environment to generate radio buttons for a web form. It retrieves existing result data, generates HTML for \"yes\" and \"no\" radio buttons based on the question \"Do you smoke?\", and pre-selects the appropriate radio button based on user input or stored data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetRadioField.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\\n/*******************************************\\n       Редактирование результата\\n*******************************************/\\n$RESULT_ID = 12; // ID результата\\n// если была нажата кнопка \\\"Сохранить\\\" то\\nif (strlen($_REQUEST[\\\"save\\\"])>0)\\n{\\n\\t// используем данные пришедшие с формы\\n\\t$arrVALUES = $_REQUEST; \\n}\\nelse\\n{\\n\\t// сформируем этот массив из данных по результату\\n\\t$arrVALUES = CFormResult::GetDataByIDForHTML($RESULT_ID); \\n}\\n?>\\n<form action=\\\"\\\" method=\\\"POST\\\">\\n<table>\\n\\t<tr>\\n\\t\\t<td>Вы курите?</td>\\n\\t\\t<td><?\\n            \\n\\t\\t\\t/**********************************************************\\n\\t\\t\\t\\tвыводим две radio-кнопки (да/нет) \\n\\t\\t\\t\\tкак варианты ответа на вопрос \\\"Вы курите?\\\"\\n\\t\\t\\t**********************************************************/\\n\\t\\t\\t$QUESTION_SID = \\\"SMOKE\\\"; // символьный идентификатор вопроса\\n\\t\\t\\t/***********************\\n\\t\\t\\t\\tradio-кнопка \\\"да\\\"\\n\\t\\t\\t***********************/\\n\\t\\t\\t// массив описывающий одну radio-кнопку\\n\\t\\t\\t// содержит минимально-необходимые поля\\n\\t\\t\\t$arAnswer = array(\\n\\t\\t\\t\\t\\\"ID\\\"            => 589,    // ID radio-кнопки\\n\\t\\t\\t\\t\\\"FIELD_PARAM\\\"   => \\\"checked class=\\\\\\\"inputradio\\\\\\\"\\\"   // параметр ответа\\n\\t\\t\\t);\\n            \\n\\t\\t\\t// получим текущее значение\\n\\t\\t\\t$value = CForm::GetRadioValue($QUESTION_SID, $arAnswer, $arrVALUES);\\n\\t\\t\\t// выведем radio-кнопку\\n\\t\\t\\techo CForm::GetRadioField(\\n\\t\\t\\t\\t$QUESTION_SID,\\n\\t\\t\\t\\t$arAnswer[\\\"ID\\\"],\\n\\t\\t\\t\\t$value,\\n\\t\\t\\t\\t$arAnswer[\\\"FIELD_PARAM\\\"]\\n\\t\\t\\t);            \\n\\t\\t\\techo \\\"да <br>\\\";\\n\\t\\t\\t/***********************\\n\\t\\t\\t\\tradio-кнопка \\\"нет\\\"\\n\\t\\t\\t***********************/\\n\\t\\t\\t// массив описывающий одну radio-кнопку\\n\\t\\t\\t// содержит минимально-необходимые поля\\n\\t\\t\\t$arAnswer = array(\\n\\t\\t\\t\\t\\\"ID\\\"            => 590,    // ID radio-кнопки\\n\\t\\t\\t\\t\\\"FIELD_PARAM\\\"   => \\\"\\\"      // параметр ответа\\n\\t\\t\\t);\\n            \\n\\t\\t\\t// получим текущее значение\\n\\t\\t\\t$value = CForm::GetRadioValue($QUESTION_SID, $arAnswer, $arrVALUES);\\n\\t\\t\\t// выведем radio-кнопку\\n\\t\\t\\techo CForm::GetRadioField(\\n\\t\\t\\t\\t$QUESTION_SID,\\n\\t\\t\\t\\t$arAnswer[\\\"ID\\\"],\\n\\t\\t\\t\\t$value,\\n\\t\\t\\t\\t$arAnswer[\\\"FIELD_PARAM\\\"]\\n\\t\\t\\t);            \\n\\t\\t\\techo \\\"нет\\\";\\n\\t\\t?></td>\\n\\t</tr>\\n</table>\\n<input type=\\\"submit\\\" name=\\\"save\\\" value=\\\"Сохранить\\\">\\n</form>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Setting Moderated Comment Permissions in PHP\nDESCRIPTION: Example of using SetBlogPerms to allow both unauthorized and authorized users to leave comments with pre-moderation for a specific blog.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/SetBlogPerms.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nCBlog::SetBlogPerms(\n\t$blogID,\n\tarray(\n\t\t\"1\" => \"K\",\n\t\t\"2\" => \"K\"   \n\t),\n\tBLOG_PERMS_COMMENT\n);\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CBlogImage::Update in PHP\nDESCRIPTION: This example demonstrates how to use the CBlogImage::Update method to change the title of an image with ID 14. It updates the TITLE field and checks if the operation was successful.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogImage/Update.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$res = CBlogImage::Update(\n\t14,\n\tarray(\"TITLE\" => \"new image title\")\n);\nif($res)\n\techo 'Success';\n```\n\n----------------------------------------\n\nTITLE: Bitrix D7 Mail Module Class Overview\nDESCRIPTION: Provides reference documentation for core mail-related classes in Bitrix D7, including IMAP, Message, and User interaction classes\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Pochta/Pochta_v_jadre_D7.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// Mail Module Classes\n\\Bitrix\\Mail\\Imap\n\\Bitrix\\Mail\\Message\n\\Bitrix\\Mail\\User\n```\n\n----------------------------------------\n\nTITLE: Reloading Current Side Panel Slider in Bitrix\nDESCRIPTION: Refreshes the currently open side panel slider, reloading its content.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.reload()\n```\n\n----------------------------------------\n\nTITLE: Checking Push Notification Status with CPullOptions in PHP\nDESCRIPTION: This snippet shows how to check if push notifications are enabled in the settings using the CPullOptions class. It uses the `GetPushStatus()` method to determine the current status, allowing developers to conditionally send push notifications based on the system configuration.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/CPushManager.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCPullOptions::GetPushStatus()Копировать\n```\n\n----------------------------------------\n\nTITLE: Updating User Account Balance in Bitrix (PHP)\nDESCRIPTION: This method modifies the balance of a user account with the given userID. It can increase or decrease the balance based on the sum parameter. The method is static and returns the user account code or false on error.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/Klassy/CSaleUserAccount/UpdateAccount.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCSaleUserAccount::UpdateAccount(\n\tint userID, \n\tdouble sum, \n\tstring currency[, \n\tstring description = \"\"[,\n\tint orderID = 0[,\n\tstring notes = \"\"]]]\n```\n\n----------------------------------------\n\nTITLE: Using GetDropdownList with SelectBox\nDESCRIPTION: Demonstrates how to use the GetDropdownList method with the SelectBox function to create a single-selection dropdown list. It initializes the dropdown list with event types and sets the selected value based on the provided SEARCHER_ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEventType/GetDropdownList.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<php\n// выпадающий список с одиночным выбором\necho SelectBox(\n\t\"SEARCHER_ID\", \n\tCStatEventType::GetDropdownList(), \n\t\"\", \n\tintval($SEARCHER_ID)\n);\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Side Panel Close Event Prevention\nDESCRIPTION: Example of preventing side panel closure using event handling in Bitrix JavaScript library. Demonstrates conditional closure cancellation based on slider URL.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/Sobytija/Spisok_sobytij.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.addCustomEvent(\"SidePanel.Slider:onClose\", function(event) { \n\tif (event.getSlider().getUrl() === \"calendar:settings\") //для глобальных обработчиков проверяем свой слайдер \n\t{ \n\t\tevent.denyAction(); \n\t} });\n```\n\n----------------------------------------\n\nTITLE: Setting Currency Formats using BX.Currency.setCurrencies\nDESCRIPTION: This snippet shows how to retrieve currency formats from the Bitrix database and pass them to the JavaScript library using `BX.Currency.setCurrencies`.  It fetches currency data using PHP, converts it to a JavaScript object, and then sets the currency formats in the browser. This is a synchronous approach for loading currency formats.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Valjuty.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n$currencies = []; // загружаем все валюты, какие есть\n$currencyIterator = \\Bitrix\\Currency\\CurrencyTable::getList([\n\t'select' => ['CURRENCY']\n]);\nwhile ($currency = $currencyIterator->fetch())\n{\n\t$currencyFormat = \\CCurrencyLang::GetFormatDescription($currency['CURRENCY']);\n\t$currencies[] = [\n\t\t'CURRENCY' => $currency['CURRENCY'],\n\t\t'FORMAT' => [\n\t\t\t'FORMAT_STRING' => $currencyFormat['FORMAT_STRING'],\n\t\t\t'DEC_POINT' => $currencyFormat['DEC_POINT'],\n\t\t\t'THOUSANDS_SEP' => $currencyFormat['THOUSANDS_SEP'],\n\t\t\t'DECIMALS' => $currencyFormat['DECIMALS'],\n\t\t\t'THOUSANDS_VARIANT' => $currencyFormat['THOUSANDS_VARIANT'],\n\t\t\t'HIDE_ZERO' => $currencyFormat['HIDE_ZERO']\n\t\t]\n\t];\n}\n?>\n<script type=\"text/javascript\">\nBX.Currency.setCurrencies(<?=CUtil::PhpToJSObject($currencies, false, true, true);?>);\n</script>Копировать\n```\n\n----------------------------------------\n\nTITLE: Retrieving Slider by URL in Bitrix\nDESCRIPTION: Fetches a specific slider instance using its URL or identifier.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.getSlider(url)\n```\n\n----------------------------------------\n\nTITLE: Get Searcher by ID - PHP\nDESCRIPTION: Retrieves data for a specified search engine using its ID. The method returns a CDBResult object which can be fetched to get an associative array containing the search engine's details, such as its name, activity status, and indexing statistics. The searcher_id parameter specifies the ID of the search engine to retrieve.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CSearcher/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\n$searcher_id = 1;\nif ($rs = CSearcher::GetByID($searcher_id))\n{\n\t$ar = $rs->Fetch();\n\t// выведем параметры поисковой системы\n\techo \"<pre>\"; print_r($ar); echo \"</pre>\";\n}\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Defining GetUserFriends Method in CBlogUser Class - PHP\nDESCRIPTION: Method signature for GetUserFriends. It takes a user ID and an optional flag parameter. Returns a CDBResult object containing either a list of blogs where the user is a friend or a list of the user's friends' blogs.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/GetUserFriends.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCBlogUser::GetUserFriends(\n\tint  ID,\n\tbool bFlag = true\n);\n```\n\n----------------------------------------\n\nTITLE: Fetching Domain List Example in PHP\nDESCRIPTION: This snippet demonstrates how to utilize the CSearcher::GetDomainList method to retrieve a list of domains filtered by a specific search engine ID. It initializes an array filter, calls the method, and prints the resulting records.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CSearcher/GetDomainList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// выберем домены поисковой системы #20\n$arFilter = array(\n\t\"SEARCHER_ID\" => 20\n);\n// получим список записей\n$rs = CSearcher::GetDomainList(\n\t($by = \"s_id\"), \n\t($order = \"desc\"), \n\t$arFilter, \n\t$is_filtered\n);\n// выведем все записи\nwhile ($ar = $rs->Fetch())\n{\n\techo \"<pre>\"; print_r($ar); echo \"</pre>\";    \n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CForumMessage::GetByID in PHP\nDESCRIPTION: This example demonstrates how to use the GetByID method to retrieve message details and extract the topic and forum IDs from the returned array.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Forum/Klassy/CForumMessage/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$arMessage = CForumMessage::GetByID($MID);\nif ($arMessage)\n{\n\t$TID = IntVal($arMessage[\"TOPIC_ID\"]);\n\t$FID = IntVal($arMessage[\"FORUM_ID\"]);\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Binding Anchors with Event Handlers for SidePanel in JavaScript\nDESCRIPTION: Demonstrates how to bind anchors with specific conditions and options, including event handlers. This example sets up rules for CRM button edit URLs with an 'onLoad' event handler.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/Sobytija.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.bindAnchors({\n\trules: [\n\t\t{\n\t\t\tcondition: [\n\t\t\t\t\"/crm/button/edit/(\\d+)/\"\n\t\t\t],\n\t\t\toptions: {\n\t\t\t\tcacheable: false,\n\t\t\t\twidth: 900,\n\t\t\t\tevents: {\n\t\t\t\t\tonLoad: function(event) {\n\t\t\t\t\t\tconsole.log(\"onLoad\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n});\n```\n\n----------------------------------------\n\nTITLE: Example of Updating a Wiki Page with CWiki::Update in PHP\nDESCRIPTION: Demonstrates how to update a Wiki page with ID 13 in information block 2. The example shows setting the detail text in HTML format with new content. The method returns a boolean value indicating success.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/Update.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Обновим Wiki-страницу с идентификатором 13 в инфоблоке с идентификатором 2\n$ID = 13;\n$arFields = array(\n\t'IBLOCK_ID' => 2,\n\t'DETAIL_TEXT_TYPE' => 'html',\n\t'DETAIL_TEXT' => '<br/><h2>Измененная тестовая страница</h2><br/>'\t\n);\n$CWiki = new CWiki();\nif (!$CWiki->Update($ID, $arFields))\n\techo 'Ошибка. Страница не изменена.';\n?>\n```\n\n----------------------------------------\n\nTITLE: Using CanUserEditPost Method to Check Edit Permissions (PHP)\nDESCRIPTION: This example demonstrates how to use the CanUserEditPost method to check if the current user can edit a specific blog post. It uses the global $USER object to get the current user's ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/CanUserEditPost.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\nif(CBlogPost::CanUserEditPost(1, $USER->GetID()))\n\techo \"Вы можете изменить сообщение.\";\nelse\n\techo \"Вы не можете изменить сообщение.\";\n?>\n```\n\n----------------------------------------\n\nTITLE: GetTextFilter Usage Example in HTML/PHP\nDESCRIPTION: Illustrates how to use the `CForm::GetTextFilter` method within an HTML form.  It demonstrates passing parameters for the filter ID, size, and CSS classes for the text input and checkbox.  The generated HTML is then echoed within the table cell.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetTextFilter.md#2025-04-20_snippet_1\n\nLANGUAGE: HTML/PHP\nCODE:\n```\n\"<form action=\\\"\\\" method=\\\"POST\\\">\n<table>\n\t<tr>\n\t\t<td>Фамилия:</td>\n\t\t<td><?\n\t\t\techo CForm::GetTextFilter(\n\t\t\t\t\\\"ANKETA_USER_NAME_USER_text\\\", \n\t\t\t\t45, \n\t\t\t\t\\\"class=\\\\\\\"inputtext\\\\\\\"\\\", \n\t\t\t\t\\\"class=\\\\\\\"inputcheckbox\\\\\\\"\\\"\n\t\t\t);\n\t\t?></td>\n\t</tr>\n</table>\n<input type=\\\"submit\\\" value=\\\"Фильтр\\\">\n</form>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Groups in Bitrix Blog Module (PHP)\nDESCRIPTION: This method returns an array of user groups for a specified blog and user. It accepts parameters for user ID, blog ID, join status, and selection type. The method uses built-in caching for efficient multiple calls.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/GetUserGroups.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCBlogUser::GetUserGroups(\n\tint    ID,\n\tint    blogID,\n\tstring joinStatus = \"\",\n\tint    selectType = BLOG_BY_BLOG_USER_ID\n);\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Questions Data Using GetDataByID in PHP\nDESCRIPTION: Example code showing how to retrieve data for all questions from a form result using the GetDataByID method by passing an empty array as the field parameter. This retrieves all available question data from the result.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetDataByID.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?\n$RESULT_ID = 189; // ID результата\n// получим данные по всем вопросам\n$arAnswer = CFormResult::GetDataByID(\n\t$RESULT_ID, \n\tarray(), \n\t$arResult, \n\t$arAnswer2);\n// выведем поля результата\necho \"<pre>\"; print_r($arResult); echo \"</pre>\";\n// выведем значения ответов\necho \"<pre>\"; print_r($arAnswer); echo \"</pre>\";\n// выведем значения ответов в несколько ином формате\necho \"<pre>\"; print_r($arAnswer2); echo \"</pre>\";\n?>\n```\n\n----------------------------------------\n\nTITLE: CPosting::GetEmails Usage Example\nDESCRIPTION: This code snippet demonstrates how to use the CPosting::GetEmails method.  It retrieves an issue by its ID, fetches the issue data into an array, and then calls GetEmails to retrieve the email addresses for that issue.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/GetEmails.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$post = CPosting::GetByID($ID);\nif(($post_arr = $post->Fetch()))\n\t$aEmail = CPosting::GetEmails($post_arr);\n\n```\n\n----------------------------------------\n\nTITLE: Example Usage of DeleteCountry Method in PHP\nDESCRIPTION: This snippet demonstrates how to use the DeleteCountry method to delete a country with ID 12. It checks the return value and displays an error message if the deletion fails.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/Klassy/CSaleLocation/DeleteCountry.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\nif (!CSaleLocation::DeleteCountry(12))\n\techo \"Ошибка удаления страны\";\n?>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Blog Post Parameters in Bitrix with CBlogPost::GetByID Method\nDESCRIPTION: Method signature for retrieving blog post parameters by post ID. The method is static and returns an array containing the blog post fields. It uses built-in caching to optimize database queries.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCBlogPost::GetByID(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Example of Using CFormStatus::Copy\nDESCRIPTION: Example demonstrating how to copy a status with ID 1 to create a new status. The code handles success by displaying the new status ID, or shows an error message if the operation fails.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormStatus/Copy.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$status_id = 1; // ID статуса\n// скопируем статус\nif ($NEW_STATUS_ID = CFormStatus::Copy($status_id))\n{\n\techo \"Статус #1 успешно скопирован в новый статус #\".$NEW_STATUS_ID;\n}\nelse\n{\n\t// выведем текст ошибки\n\tglobal $strError;\n\techo $strError;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CBlog::GetByOwnerID in PHP\nDESCRIPTION: Example code demonstrating how to use the GetByOwnerID method. It retrieves a blog by owner ID and checks if the result is an array before printing it or showing an error message.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/GetByOwnerID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$arBlog = CBlog::GetByOwnerID($ID);\nif(is_array($arBlog))\n\tprint_r($arBlog);\nelse\n\techo \"Блог не найден\";\n?>\n```\n\n----------------------------------------\n\nTITLE: CCourse::Add Method Documentation\nDESCRIPTION: The CCourse::Add method accepts an array of fields that define the properties of the course to be added. It requires specific fields to be populated and checks for permissions based on group access. The method returns the ID of the new course or false on failure, with exceptions for error contexts.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nint\nCCourse::Add(\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Destroying a Side Panel Slider in Bitrix\nDESCRIPTION: Removes a specific side panel slider from the page using its URL or identifier.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.destroy(url)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Status Dropdown Data with CFormStatus::GetDropDown in PHP\nDESCRIPTION: This method returns a list of statuses for a specified web form as a CDBResult object in a format suitable for creating a dropdown list with single selection. The resulting list will include only statuses for which the current user has at least one of the specified permissions.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormStatus/GetDropDown.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCFormStatus::GetDropDown(\n\tint form_id,\n\tarray permission = array(\"MOVE\"), \n\tint owner_user_id = 0\n)\n```\n\n----------------------------------------\n\nTITLE: Updating Newsletter Rubric Example\nDESCRIPTION: Demonstrates how to update a newsletter rubric by creating a CRubric instance, preparing fields, and calling the Update method with error handling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CRubric/Update.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$rubric = new CRubric;\n$arFields = Array(\n\t\"ACTIVE\" => ($ACTIVE <> \"Y\"? \"N\":\"Y\"),\n\t\"NAME\" => $NAME,\n\t\"SORT\" => $SORT,\n\t\"DESCRIPTION\" => $DESCRIPTION,\n\t\"LID\" => $LID\n);\nif($ID>0)\n{\n\tif(!$rubric->Update($ID, $arFields))\n\t\techo $rubric->LAST_ERROR;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing OnBeforeGroupUpdate Event Handler in PHP\nDESCRIPTION: This example demonstrates how to add an event handler for OnBeforeGroupUpdate. It modifies the description of the group with ID 1.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnBeforeGroupUpdate.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\nAddEventHandler(\"main\", \"OnBeforeGroupUpdate\", \"MyOnBeforeGroupUpdate\");\npublic static function MyOnBeforeGroupUpdate($ID, &$arFields)\n{\n\tif($ID == 1)\n\t\t$arFields[\"DESCRIPTION\"] = \"Главная группа админов.\";\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Listing Open Sliders in Bitrix\nDESCRIPTION: Returns an array of all currently open slider instances of the BX.SidePanel.Slider class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.getOpenSliders()\n```\n\n----------------------------------------\n\nTITLE: Bitrix Web Form Multi-Select Example\nDESCRIPTION: This PHP code snippet shows an example of using `CForm::GetMultiSelectField` within a Bitrix web form to create a multi-select dropdown for selecting education levels. It defines the question ID, answer options, retrieves selected values, and then renders the multi-select list using the method.  It also wraps the form and input elements in HTML.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetMultiSelectField.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n/*******************************************/\n       //Редактирование результата\n/*******************************************/\n$RESULT_ID = 12; // ID результата\n// если была нажата кнопка \"Сохранить\" то\nif (strlen($_REQUEST[\"save\"])>0)\n{\n\t// используем данные пришедшие с формы\n\t$arrVALUES = $_REQUEST; \n}\nelse\n{\n\t// сформируем этот массив из данных по результату\n\t$arrVALUES = CFormResult::GetDataByIDForHTML($RESULT_ID); \n}\n?>\n<form action=\"\" method=\"POST\">\n<table>\n\t<tr>\n\t\t<td>Ваше образование:</td>\n\t\t<td><?\n\t\t\t// символьный идентификатор вопроса\n\t\t\t$QUESTION_SID = \"EDUCATION\"; \n\t\t\t// массив описывающий элементы списка множественного выбора\n\t\t\t$arMultiSelect = array (\n\t\t\t\t\"reference\" => array (\n\t\t\t\t\t\"начальное\",\n\t\t\t\t\t\"средне-специальное\",\n\t\t\t\t\t\"высшее\",\n\t\t\t\t),\n\t\t\t\t\"reference_id\" => array (\n\t\t\t\t\t602,\n\t\t\t\t\t603,\n\t\t\t\t\t604,\n\t\t\t\t),\n\t\t\t\t\"param\" => array (\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"checked\", // значение по умолчанию\n\t\t\t\t)\n\t\t\t);\n\t\t\t// получим текущее значение выпадающего списка\n\t\t\t$arValues = CForm::GetMultiSelectValue($QUESTION_SID, $arMultiSelect, $arrVALUES);\n\t\t\t// выведем список множественного выбора\n\t\t\techo CForm::GetMultiSelectField(\n\t\t\t\t$QUESTION_SID,           // символьный идентификатор вопроса\n\t\t\t\t$arMultiSelect,          // массив описывающий элементы списка\n\t\t\t\t$arValues,               // значения выбранных элементов списка\n\t\t\t\t10,                      // высота списка\n\t\t\t\t\"class=\\\"inputselect\\\"\"  // стиль списка\n\t\t\t);      \n\t\t\t?></td>\n\t</tr>\n</table>\n<input type=\"submit\" name=\"save\" value=\"Сохранить\">\n</form>Копировать\n\n```\n\n----------------------------------------\n\nTITLE: CWikiSecurity::clear Usage Example\nDESCRIPTION: This example demonstrates how to use the `CWikiSecurity::clear` method to process the content of a Wiki page. It retrieves a Wiki element, then cleans its DETAIL_TEXT using `CWikiSecurity::clear`.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWikiSecurity/clear.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"<?\n$IBLOCK_ID = 2;\n$NAME = 'Тестовая страница';\n$arFilter = array(\n\t'ACTIVE' => 'Y',\n\t'CHECK_PERMISSIONS' => 'N',\n\t'IBLOCK_ID' => $IBLOCK_ID\n);\n$arElement = CWiki::GetElementByName($NAME, $arFilter);\n$CWikiSecurity = new CWikiSecurity ();\n$CWikiSecurity->clear($arElement['~DETAIL_TEXT']);\necho $arElement['~DETAIL_TEXT'];\n?>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Subfolder in Bitrix Disk\nDESCRIPTION: Demonstrates how to create a subfolder within an existing folder in a user's storage.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('disk'))  { \n\t$storage = \\Bitrix\\Disk\\Driver::getInstance()->getStorageByUserId(1); \n\tif ($storage)  { \n\t\t$folder = $storage->getRootObject();  \n\t\t$folder = $folder->getChild( \n\t\t\tarray( \n\t\t\t\t'=NAME' => 'New folder',  \n\t\t\t\t'TYPE' => \\Bitrix\\Disk\\Internals\\FolderTable::TYPE_FOLDER \n\t\t\t) \n\t\t); \n\t\tif ($folder) { \n\t\t\t$folder->addSubFolder(    array( \n\t\t\t\t'NAME' => 'New folder 2', \n\t\t\t\t'CREATED_BY' => 1 \n\t\t\t)); \n\t\t} \n\t} \n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of GetUserGroups Method in Bitrix (PHP)\nDESCRIPTION: This example demonstrates how to use the GetUserGroups method to retrieve the groups of the current user for a blog with ID=1. It uses BLOG_BY_USER_ID as the selection type and prints the result if successful.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/GetUserGroups.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// получим группы пользователей блога с ID=1, к которым привязан текущий пользователь\n$ID = $USER->GetID();\n$arUserGroups = CBlogUser::GetUserGroups($ID, 1, \"\", BLOG_BY_USER_ID);\nif(is_array($arUserGroups))\n\tprint_r($arUserGroups);\n?>\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CWiki::Rename Method in PHP\nDESCRIPTION: Example showing how to rename a Wiki page with ID 13 in an infoblock with ID 2. Creates a new CWiki instance and calls the Rename method with the necessary parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/Rename.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Переименуем Wiki-страницу с идентификатором 13 в инфоблоке с идентификатором 2\n$ID = 13;\n$arFields = array(\n\t'IBLOCK_ID' => 2,\n\t'NAME' => 'Измененная тестовая страница'\t\n);\n$CWiki = new CWiki();\nif (!$CWiki->Rename($ID, $arFields))\n\techo 'Ошибка. Страница не переименована.';\n?>\n```\n\n----------------------------------------\n\nTITLE: Setting a Default Wiki Page Example (PHP)\nDESCRIPTION: Example of how to use the SetDefaultPage method to set a page named 'Test Page' as the default page for InfoBlock with ID 2. The code includes error handling for when the default page cannot be set.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/SetDefaultPage.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Установим страницу \"Тестовая страница\" страницей по умолчанию инфоблока с идентификатором 2\n$IBLOCK_ID = 2;\n$NAME = 'Тестовая страница';\nif (!CWiki::SetDefaultPage($IBLOCK_ID, $NAME))\n\techo 'Ошибка. Страница по умолчанию не установлена.';\n?>\n```\n\n----------------------------------------\n\nTITLE: Editing Form Submission with Date Input in PHP\nDESCRIPTION: This snippet demonstrates a simple form submission setup that utilizes the CForm::GetDateField method to include a date input field in the form. It handles both display and editing of the field based on form submission.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetDateField.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n/*******************************************\n       Редактирование результата\n*******************************************/\n$RESULT_ID = 12; // ID результата\n// если была нажата кнопка \"Сохранить\" то\nif (strlen($_REQUEST[\"save\"])>0)\n{\n\t// используем данные пришедшие с формы\n\t$arrVALUES = $_REQUEST; \n}\nelse\n{\n\t// сформируем этот массив из данных по результату\n\t$arrVALUES = CFormResult::GetDataByIDForHTML($RESULT_ID); \n}\n?>\n<form name=\"ANKETA\" action=\"\" method=\"POST\">\n<table>\n\t<tr>\n\t\t<td>Дата рождения:</td>\n\t\t<td><?\n\t\t// массив описывающий поле для ввода даты\n\t\t// содержит минимально-необходимые поля\n\t\t$arAnswer = array(\n\t\t\t\"ID\"            => 587,   // ID поля для ответа на вопрос \"Дата рождения?\"\n\t\t\t\"VALUE\"         => \"\",    // параметр ANSWER_VALUE (значение по умолчанию)\n\t\t\t\"FIELD_WIDTH\"   => 10,    // ширина поля\n\t\t\t\"FIELD_PARAM\"   => \"\"     // параметры поля\n\t\t);\n        \n\t\t// получим текущее значение\n\t\t$value = CForm::GetDateValue($arAnswer[\"ID\"], $arAnswer, $arrVALUES);\n\t\t// выведем поле\n\t\techo CForm::GetDateField(\n\t\t\t$arAnswer[\"ID\"],\n\t\t\t\"ANKETA\",\n\t\t\t$value,\n\t\t\t$arAnswer[\"FIELD_WIDTH\"],\n\t\t\t$arAnswer[\"FIELD_PARAM\"]\n\t\t);\n\t\t?></td>\n\t</tr>\n</table>\n<input type=\"submit\" name=\"save\" value=\"Сохранить\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Example of Using CFormResult::SetEvent in PHP\nDESCRIPTION: This example demonstrates how to create an event in the Statistics module using the SetEvent method with a specific result ID. It includes error handling to display any errors that might occur during event creation.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/SetEvent.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$RESULT_ID = 189; // ID результата\n// создадим событие в модуле \"Статистика\"\nif (CFormResult::SetEvent($RESULT_ID))\n{\n\techo \"Событие успешно создано.\";\n}\nelse // ошибка\n{\n\tglobal $strError;\n\techo $strError;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Usage Example of GetBlogUserCommentPerms Method (PHP)\nDESCRIPTION: A practical example of using the GetBlogUserCommentPerms method to check the current user's permission level for commenting on blog post with ID 1. The code retrieves the permission and displays it to the user.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/GetBlogUserCommentPerms.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$perms = CBlogPost::GetBlogUserCommentPerms(1, $USER->GetID());\necho \"Вы имеете следующее право на комментарии к сообщению: \".$perms;\n?>\n```\n\n----------------------------------------\n\nTITLE: Implementing OnAdminContextMenuShow Event Handler in PHP\nDESCRIPTION: This example shows how to add a custom button to the index page toolbar using the OnAdminContextMenuShow event. It checks the current page and adds a new button for module settings if on the index page.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnAdminContextMenuShow.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\nAddEventHandler(\"main\", \"OnAdminContextMenuShow\", \"MyOnAdminContextMenuShow\");\npublic static function MyOnAdminContextMenuShow(&$items)\n{\n\t//add custom button to the index page toolbar\n\tif($GLOBALS[\"APPLICATION\"]->GetCurPage(true) == \"/bitrix/admin/index.php\")\n\t\t$items[] = array(\"TEXT\"=>\"Настройки модулей\", \"ICON\"=>\"\", \"TITLE\"=>\"Страница настроек модулей\", \"LINK\"=>\"settings.php?lang=\".LANGUAGE_ID);\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Uploading a File to a Folder in Bitrix Disk\nDESCRIPTION: Shows how to upload a file to a specific folder in a user's storage.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('disk')) \n{ \n\t$storage = \\Bitrix\\Disk\\Driver::getInstance()->getStorageByUserId(1); \n\tif ($storage) \n\t{ \n\t\t$folder = $storage->getChild( \n\t\t\tarray( \n\t\t\t\t'=NAME' => 'New folder',  \n\t\t\t\t'TYPE' => \\Bitrix\\Disk\\Internals\\FolderTable::TYPE_FOLDER \n\t\t\t) \n\t\t); \n\tif ($folder) \n\t{ \n\t\t$fileArray = \\CFile::MakeFileArray($_SERVER['DOCUMENT_ROOT'].'/test.jpg'); \n\t\t$file = $folder->uploadFile($fileArray, array( \n\t\t\t'CREATED_BY' => 1 \n\t\t)); \n\t} \n\t} \n}\n```\n\n----------------------------------------\n\nTITLE: Example Values Array for CFormResult::Update\nDESCRIPTION: A more detailed example of the values array structure showing various field types including text, date, textarea, radio buttons, checkboxes, dropdowns, and multiselect fields.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/Update.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nArray (\n\t[form_text_586] => Иванов Иван Иванович\n\t[form_date_587] => 10.03.1992\n\t[form_textarea_588] => г. Мурманск\n\t[form_radio_VS_MARRIED] => 589\n\t[form_checkbox_VS_INTEREST] => Array\n\t(\n\t\t[0] => 592\n\t\t[1] => 593\n\t\t[2] => 594\n\t)\n\t[form_dropdown_VS_AGE] => 597\n\t[form_multiselect_VS_EDUCATION] => Array\n\t(\n\t\t[0] => 603\n\t\t[1] => 604\n\t)\n\t[form_text_606] => 2345\n\t[form_image_607] => 1045\n\t[form_textarea_ADDITIONAL_149] => 155\n)\n```\n\n----------------------------------------\n\nTITLE: Validating Report Filter Comparison Operation in Bitrix\nDESCRIPTION: Static method that checks the applicability of a comparison operation to a report filter field. Determines whether a specific comparison variation is valid for a given field type and definition.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Konstruktor_otchetov/Klassy/CReport/isValidFilterCompareVariation.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nisValidFilterCompareVariation($fDefinition, $fType, $variation, $variations);\n```\n\n----------------------------------------\n\nTITLE: File Operations in Bitrix Disk\nDESCRIPTION: Demonstrates uploading a new version of a file and moving a file to a different folder.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n<?php \n//загрузка новой версии файла \nif ($file) \n{ \n\t$fileArray = \\CFile::MakeFileArray($_SERVER['DOCUMENT_ROOT'].'/test.jpg'); \n\t$newVersion = $file->uploadVersion($fileArray, 1);//файл, ID пользователя \n// если при загрузке от одного пользователя двух версий файла с одним именем происходит менее 300 секунд - файлы сливаются.\n} \n//перемещение файла в другую папку \nif ($file) \n{ \n\t$file->moveTo($folder, $movedBy);//объект папки, пользователь \n}\n```\n\n----------------------------------------\n\nTITLE: CSearch Constructor Usage Example\nDESCRIPTION: This code snippet demonstrates how to use the deprecated CSearch constructor and its recommended replacement, CSearch::Search. It includes error handling and iterates through the search results to display them.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Poisk/Klassy/CSearch/Konstruktor_CSearch.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n$q = \\\"жареная рыба или селедка\\\";\n$module_id = \\\"forum\\\";\n//Эту строку заменяем\n//$obSearch = new CSearch($q, LANG, $module_id);\n// на следующую:\n$obSearch = new CSearch;\n$obSearch->Search(array(\n\t\\\"QUERY\\\" => $q,\n\t\\\"SITE_ID\\\" => LANG,\n\t\\\"MODULE_ID\\\" => $module_id,\n));\nif ($obSearch->errorno!=0):\n\t?>\n\t<font class=\\\"text\\\">В поисковой фразе обнаружена ошибка:</font>\n\t<?echo ShowError($obSearch->error);?>\n\t<font class=\\\"text\\\">Исправьте поисковую фразу и повторите поиск.</font>\n\t<?\nelse:\n\twhile($arResult = $obSearch->GetNext())\n\t{\n\t?>\n\t\t<a href=\\\"<?echo $arResult[\\\"URL\\\"]?>\\\"> <?echo $arResult[\\\"TITLE_FORMATED\\\"]?></a>\n\t\t<?echo $arResult[\\\"BODY_FORMATED\\\"]?>\n\t\t<hr size=\\\"1\\\" color=\\\"#DFDFDF\\\">\n\t<?\n\t}\nendif;\n?>\n\n```\n\n----------------------------------------\n\nTITLE: BX.translit Function Signature in JavaScript\nDESCRIPTION: Function signature for BX.translit that performs string transliteration. Takes a string input and optional parameters object for customizing transliteration behavior. Parameters include max_len, change_case, replace_space, replace_other, delete_repeat_replace, and use_google flags.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Avtoperevod_i_transliteratsija/BX.translit.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvoid|string\nBX.translit(\n\tString str,\n\tObject params\n)\n```\n\n----------------------------------------\n\nTITLE: Update Currency Parameters in Bitrix\nDESCRIPTION: The CCurrency::Update method modifies the parameters of a currency specified by its code. It requires the currency code and an array of fields to update. It returns the currency code on success, or false on failure and resets cache related to currency list and base currency.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Valjuty/Klassy/CCurrency/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n```\nbool CCurrency::Update(\n\tstring currency, \n\tarray arFields\n);Копировать\n```\n```\n\n----------------------------------------\n\nTITLE: Using GetPasswordField in a Web Form\nDESCRIPTION: This example demonstrates how to use the `CForm::GetPasswordField` method within a web form to create a password input field. It fetches existing data, sets up the field attributes, and then renders the password field using the method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetPasswordField.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\n/******************************************\n       Редактирование результата\n*******************************************/\n$RESULT_ID = 12; // ID результата\n// если была нажата кнопка \\\"Сохранить\\\" то\nif (strlen($_REQUEST[\\\"save\\\"])>0)\n{\n\t// используем данные пришедшие с формы\n\t$arrVALUES = $_REQUEST; \n}\nelse\n{\n\t// сформируем этот массив из данных по результату\n\t$arrVALUES = CFormResult::GetDataByIDForHTML($RESULT_ID); \n}\n?>\n<form action=\\\"\\\" method=\\\"POST\\\">\n<table>\n\t<tr>\n\t\t<td>Пароль:</td>\n\t\t<td><?\n\t\t\t// массив описывающий поле для ввода пароля\n\t\t\t// содержит минимально-необходимые поля\n\t\t\t$arAnswer = array(\n\t\t\t\t\\\"ID\\\"            => 609,   // ID поля для ответа на вопрос \\\"Пароль\\\"\n\t\t\t\t\\\"FIELD_WIDTH\\\"   => 10,    // ширина поля\n\t\t\t\t\\\"FIELD_PARAM\\\"   => \\\"\\\"     // параметры поля\n\t\t\t);\n\t\t\t// получим текущее значение\n\t\t\t$value = CForm::GetPasswordValue($arAnswer[\\\"ID\\\"], $arAnswer, $arrVALUES);\n\t\t\t// выведем поле\n\t\t\techo CForm::GetPasswordField(\n\t\t\t\t$arAnswer[\\\"ID\\\"],\n\t\t\t\t$value,\n\t\t\t\t$arAnswer[\\\"FIELD_WIDTH\\\"],\n\t\t\t\t$arAnswer[\\\"FIELD_PARAM\\\"],\n\t\t\t);\n\t\t?></td>\n\t</tr>\n</table>\n<input type=\\\"submit\\\" name=\\\"save\\\" value=\\\"Сохранить\\\">\n</form>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Form Field Using CFormField::Delete\nDESCRIPTION: This code snippet demonstrates how to delete a form field (question/field) using the `CFormField::Delete` method.  It checks if the deletion was successful and displays a success message or an error message if it fails. It requires the field ID to be deleted.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormField/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n$FIELD_ID = 140;\n// удалим вопрос #140\nif (CFormField::Delete($FIELD_ID))\n{\n\techo \"Вопрос #140 удален.\";\n}\nelse\n{\n\t// выведем текст ошибки\n\tglobal $strError;\n\techo $strError;\n}\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: CRubric::GetByID Method Signature\nDESCRIPTION: This snippet shows the method signature for retrieving a rubric by its ID. It is a static method that takes an integer ID as input and returns a CDBResult object.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CRubric/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCRubric::GetByID(\n\tint ID\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: Handling CRM Email Template Events in PHP\nDESCRIPTION: Events related to CRM email templates, including adding, updating, and deleting templates.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nOnBeforeMailTemplateDelete\nOnMailTemplateAdd\nOnMailTemplateDelete\nOnMailTemplateUpdate\n```\n\n----------------------------------------\n\nTITLE: Emitting an Event with Event.EventEmitter\nDESCRIPTION: This snippet shows how to emit an event using the Event.EventEmitter.emit method within a class that extends EventEmitter.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\n// Отправка событий в классе наследнике \nclass Button extends Event.EventEmitter\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\t// Отправка события BX.MyModule.MyClass:ready\n\t\tthis.emit('BX.UI.Button:ready');\n\t}\n\t\n\t// ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using CXMLCreator::createTagAttributed in PHP\nDESCRIPTION: Examples demonstrating how to use the createTagAttributed method with namespace attributes and how to use it with encodeValueLight method to create multiple tags with the same name but different indices.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-servisy/Klassy/CXMLCreator/createTagAttributed.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nCXMLCreator::createTagAttributed( \"LicenseInfo xmlns=\\\"http://ws.strikeiron.com\\\"\");\n// Или\nCXMLCreator::encodeValueLight( \"LicenseInfo xmlns=\\\"http://ws.strikeiron.com\\\"\",\n\tarray(\n\t\t\"1:ArrayOfStringEl\" => \"Строка1\", \n\t\t\"2:ArrayOfStringEl\" => \"Строка2\"\n\t)\n);\n```\n\n----------------------------------------\n\nTITLE: Error Handling in Bitrix Disk Operations\nDESCRIPTION: Demonstrates how to check for successful operations and handle errors when working with Disk objects.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif ($folder) \n{ \n\t$folder->rename('Reports.backup'); \n} \nelse \n{ \n\tvar_dump($folder->getErrors()); \n}\n```\n\n----------------------------------------\n\nTITLE: Return Structure of CBlogGroup::GetByID Method in Bitrix\nDESCRIPTION: Shows the structure of the array returned by the GetByID method containing the blog group details such as ID, SITE_ID, and NAME. Returns false if the group is not found.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogGroup/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nArray(\n\t\"ID\" => \"ID группы\",\n\t\"SITE_ID\" => \"ID сайта\",\n\t\"NAME\" => \"Название группы\"\n)\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CChapter::GetTreeList in PHP\nDESCRIPTION: Demonstrates including the learning module, retrieving chapter list for a specific course, and iterating through chapters with indentation based on depth level.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CChapter/GetTreeList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$res = CChapter::GetTreeList($COURSE_ID = 105);\n\twhile ($arChapter = $res->GetNext())\n\t{\n\t\techo str_repeat(\"&nbsp;&nbsp;&nbsp;&nbsp;\", $arChapter[\"DEPTH_LEVEL\"]);\n\t\techo \"+\".$arChapter[\"NAME\"].\"<br>\";\n\t}\n\t/*\n\tThe above example will output something similar to:\n\t+Chapter 1\n\t\t+Chapter 1.1\n\t\t+Chapter 1.2\n\t+Chapter 2\n\t+Chapter 3\n\t\t+Chapter 3.1\n\t\t\t+Chapter 3.1.1\n\t*/\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Editing Form Result with Generated Checkbox - PHP\nDESCRIPTION: This snippet exemplifies how to use the GetCheckBoxField method to generate checkboxes for the categories of knowledge in a form. Variables contain IDs and parameters necessary for displaying input fields based on previously saved form data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetCheckBoxField.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n/*******************************************\n       Редактирование результата\n*******************************************/\n$RESULT_ID = 12; // ID результата\n// если была нажата кнопку \"Сохранить\" то\nif (strlen($_REQUEST[\"save\"])>0)\n{\n\t// используем данные, пришедшие с формы\n\t$arrVALUES = $_REQUEST; \n}\nelse\n{\n\t// сформируем этот массив из данных по результату\n\t$arrVALUES = CFormResult::GetDataByIDForHTML($RESULT_ID); \n}\n?>\n<form action=\"\" method=\"POST\">\n<table>\n\t<tr>\n\t\t<td>Какие области знаний вас интересуют ?</td>\n\t\t<td><?\n\t\t\t/**********************************************************\n\t\t\t\tвыводим два checkbox'а (математика/физика) \n\t\t\t\tкак варианты ответа на вопрос \n\t\t\t\t\"Какие области знаний вас интересуют ?\"\n\t\t\t**********************************************************/\n\t\t\t$QUESTION_SID = \"INTEREST\"; // символьный идентификатор вопроса\n\t\t\t/***********************\n\t\t\tcheckbox \"математика\"\n\t\t\t***********************/\n\t\t\t// массив описывающий один checkbox\n\t\t\t// содержит минимально-необходимые поля\n\t\t\t$arAnswer = array(\n\t\t\t\t\"ID\"            => 591,            // ID checkbox'а\n\t\t\t\t\"FIELD_PARAM\"   => \"checked class=\\\"inputcheckbox\\\"\"   // параметр ответа\n\t\t\t);\n\t\t\t// получим текущее значение\n\t\t\t$value = CForm::GetCheckBoxValue($QUESTION_SID, $arAnswer, $arrVALUES);\n\t\t\t// выведем checkbox\n\t\t\techo CForm::GetCheckBoxField(\n\t\t\t\t$QUESTION_SID,\n\t\t\t\t$arAnswer[\"ID\"],\n\t\t\t\t$value,\n\t\t\t\t$arAnswer[\"FIELD_PARAM\"]\n\t\t\t);            \n\t\t\techo \"математика<br>\";\n\t\t\t/***********************\n\t\t\t\tcheckbox \"физика\"\n\t\t\t***********************/\n\t\t\t$arAnswer = array(\n\t\t\t\t\"ID\"            => 593,       // ID checkbox'а\n\t\t\t\t\"FIELD_PARAM\"   => \"\"         // параметр ответа\n\t\t\t);\n\t\t\t$value = CForm::GetCheckBoxValue($QUESTION_SID, $arAnswer, $arrVALUES);\n\t\t\techo CForm::GetCheckBoxField(\n\t\t\t\t$QUESTION_SID,\n\t\t\t\t$arAnswer[\"ID\"],\n\t\t\t\t$value,\n\t\t\t\t$arAnswer[\"FIELD_PARAM\"]\n\t\t\t);            \n\t\t\techo \"физика\";\n\t\t?></td>\n\t</tr>\n</table>\n<input type=\"submit\" name=\"save\" value=\"Сохранить\">\n</form>Копировать\n```\n\n----------------------------------------\n\nTITLE: Defining Pull Schema Class (PHP)\nDESCRIPTION: This code demonstrates how to define a class that returns module dependencies. The `OnGetDependentModule` function is called to get an array of modules that depend on the Push and Pull module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nclass CYourModulePullSchema\n{\n\tpublic static function OnGetDependentModule()\n\t{\n\t\treturn Array(\n\t\t\t'MODULE_ID' => \"your_module\",\n\t\t\t'USE' => Array(\"PUBLIC_SECTION\")\n\t\t);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: CSubscription::GetByEmail Method Signature\nDESCRIPTION: This code snippet shows the signature of the `CSubscription::GetByEmail` method in Bitrix.  It is a static method that takes an email string as input and returns a CDBResult object.  The CDBResult object can then be used to retrieve subscription data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscription/GetByEmail.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCSubscription::GetByEmail(\n\tstring email\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Test Using CTest Method\nDESCRIPTION: Method for removing a specific test from the learning module by its ID. Requires module inclusion and appropriate permissions.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CTest/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCTest::Delete(\n\tint ID\n);\n```\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$TEST_ID = 99;\n\t$COURSE_ID = 97;\n\tif (CCourse::GetPermission($COURSE_ID) >= 'W')\n\t{\n\t\t@set_time_limit(0);\n\t\t$DB->StartTransaction();\n\t\tif (!CTest::Delete($TEST_ID))\n\t\t{\n\t\t\techo \"Error!\";\n\t\t\t$DB->Rollback();\n\t\t}\n\t\telse\n\t\t\t$DB->Commit();\n\t}\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining CFormResult::Reset Method Signature in PHP\nDESCRIPTION: Method signature for CFormResult::Reset which deletes answer values for web form questions and field values for a specified result. The method returns true if no errors occur during execution.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/Reset.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCFormResult::Reset(\n\tint result_id,\n\tbool del_files = true,\n\tstring del_fields = \"N\",\n\tarray exception = array()\n)\n```\n\n----------------------------------------\n\nTITLE: Copying a Field Example - PHP\nDESCRIPTION: Example usage of the Copy method from the CFormField class. It demonstrates how to copy a field with a specified field ID and handle potential errors. The example checks if the copy operation was successful and echoes the new field ID or an error message.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormField/Copy.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$FIELD_ID = 140; // ID вопроса\n// скопируем вопрос\nif ($NEW_FIELD_ID=CFormField::Copy($FIELD_ID))\n{\n\techo \"Вопрос #140 успешно скопирован в новый вопрос #\".$NEW_FIELD_ID;\n}\nelse\n{\n\t// выведем текст ошибки\n\tglobal $strError;\n\techo $strError;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Adding Task Dependency Example\nDESCRIPTION: This code snippet demonstrates how to add a task dependency using the `CTaskDependence::Add` method in Bitrix. It includes the tasks module, creates an array of fields specifying the task and its dependency, and then calls the `Add` method to create the dependency, handling potential errors.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/Ustarevshee/CTaskDependence/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\nif (CModule::IncludeModule(\"tasks\"))\n{\n\t$arFields = Array(\n\t\t\"TASK_ID\" => 4,\n\t\t\"DEPENDS_ON_ID\" => 15\n\t);\n\t$obTaskDependence = new CTaskDependence;\n\t$ID = $obTaskDependence->Add($arFields);\n\t$success = ($ID>0);\n\tif($success)\n\t{\n\t\techo \"Ok!\";\n\t}\n\telse\n\t{\n\t\tif($e = $APPLICATION->GetException())\n\t\t\techo \"Error: \".$e->GetString();  \n\t}\n}?>\n```\n\n----------------------------------------\n\nTITLE: Example of Using CFormResult::Reset Method in PHP\nDESCRIPTION: Example demonstrating how to reset all answer values and field values for a specific result ID (189). This example deletes all files and includes an exception for questions with IDs 140 and 141.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/Reset.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$RESULT_ID = 189; // ID результата\n// удалим все значения ответов на вопросы и полей веб-формы\n// вместе с файлами\n// исключение составят вопросы с ID = 140 и ID = 141\nCFormResult::Reset($RESULT_ID, true, \"Y\", array(140, 141));\n?>\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CPosting::DeleteFile in Bitrix\nDESCRIPTION: This PHP code snippet demonstrates how to delete multiple files from a Bitrix posting using the CPosting::DeleteFile method.  It iterates through an array of file IDs and calls the method for each file.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/DeleteFile.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nif(is_array($FILE_ID))\n\tforeach($FILE_ID as $file_id)\n\t\tCPosting::DeleteFile($ID, $file_id);\n```\n\n----------------------------------------\n\nTITLE: Adding a CLAnswer Method Implementation\nDESCRIPTION: Demonstrates how to use the CLAnswer::Add method to create a new answer for a specific question. Requires the learning module to be included and handles success and error scenarios.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLAnswer/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$QUESTION_ID = 289;\n\t$arFields = Array(\n\t\t\"ANSWER\" => \"Another answer\",\n\t\t\"QUESTION_ID\" => $QUESTION_ID,\n\t);\n\t$answer = new CLAnswer;\n\t$ID = $answer->Add($arFields);\n\t$success = ($ID>0);\n\tif($success)\n\t{\n\t\techo \"Ok!\";\n\t}\n\telse\n\t{\n\t\tif($e = $APPLICATION->GetException())\n\t\t\techo \"Error: \".$e->GetString();\n\t}\n}?>\n```\n\n----------------------------------------\n\nTITLE: Manual Statistics Collection Example\nDESCRIPTION: This PHP snippet demonstrates how to disable automatic statistics collection by defining the `STOP_STATISTICS` constant and then manually triggering statistics collection using `CStatistics::Keep(true)`.  The `require` statement includes the Bitrix header file.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatistics/Keep.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n// отключим автоматический сбор статистики в прологе\ndefine(\"STOP_STATISTICS\", true);\nrequire($_SERVER[\"DOCUMENT_ROOT\"].\"/bitrix/header.php\");\n// вручную запустим сбор статистики\nCStatistics::Keep(true);\n...\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CForumUserPoints::Add in PHP\nDESCRIPTION: This example demonstrates how to use the Add method to give 10 votes from the current user to a user with ID $UID. It creates an array with the necessary fields and calls the Add method, then displays a success or error message.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Forum/Klassy/CForumUserPoints/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Текущий пользователь отдает пользователю с кодом $UID 10 голосов\n$arFields = array(\n\t\"POINTS\" => 10,\n\t\"FROM_USER_ID\" => $USER->GetID(),\n\t\"TO_USER_ID\" => $UID\n);\nif (CForumUserPoints::Add($arFields))\n\techo \"Голоса успешно отданы\";\nelse\n\techo \"Ошибка голосования\";\n?>\n```\n\n----------------------------------------\n\nTITLE: Setting Currency Format and Formatting Price with JavaScript and PHP in Bitrix\nDESCRIPTION: This PHP and JavaScript code snippet initializes the currency module, retrieves the format description for 'RUB' using `CCurrencyLang::GetFormatDescription`, and sets the currency format in JavaScript using `BX.Currency.setCurrencyFormat`. Subsequently, it formats a price using `BX.Currency.currencyFormat` with the currency code 'RUB' and displays the formatted price in an alert box.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Valjuty/BX.Currency.currencyFormat.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"<? \nCJSCore::Init(array('currency')); \n\n$currencyFormat = CCurrencyLang::GetFormatDescription('RUB'); \n?> \"\n```\n\nLANGUAGE: javascript\nCODE:\n```\n\"<script type=\\\"text/javascript\\\"> \nBX.Currency.setCurrencyFormat('RUB', <? echo CUtil::PhpToJSObject($currencyFormat, false, true); ?>);  \nvar formatRub = BX.Currency.currencyFormat(121.50, 'RUB', true);  \nalert(formatRub); \n</script>\"\n```\n\n----------------------------------------\n\nTITLE: Implementing an onBeforeResultUpdate Event Handler in Bitrix\nDESCRIPTION: A complete example of a handler function for the onBeforeResultUpdate event. The handler performs validation on form field data, specifically checking that a numeric field contains a value greater than or equal to 5, and throws an exception if validation fails.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Sobytija/onBeforeResultUpdate.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\npublic static function my_onBeforeResultUpdate($WEB_FORM_ID, $RESULT_ID, $arFields, $arrVALUES)\n{\n\tglobal $APPLICATION;\n  \n\t// действие обработчика распространяется только на форму с ID=6\n\tif ($WEB_FORM_ID == 6) \n\t{\n\t\t// в текстовый вопрос с ID=135 должен содержать целое число, большее 5ти.\n\t\t$arrVALUES['form_text_135'] = intval($arrVALUES['form_text_135']);\n\t\tif ($arrVALUES['form_text_135'] < 5)\n\t\t{\n\t\t\t// если значение не подходит - отправим ошибку.\n\t\t\t$APPLICATION->ThrowException('Значение должно быть больше или равно 5!');\n\t\t}\n\t}\n}\nAddEventHandler('form', 'onBeforeResultUpdate', 'my_onBeforeResultUpdate');\n```\n\n----------------------------------------\n\nTITLE: CStatEvent::Add Method Signature\nDESCRIPTION: Defines the signature of the CStatEvent::Add method in PHP. This method adds a statistic event with the specified type ID, event3, date, GID (special parameter), money, currency, and chargeback flag. It returns the ID of the added event on success, or 0 on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEvent/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"int\nCStatEvent::Add(\n\tint type_id,\n\tstring event3,\n\tstring date,\n\tstring gid,\n\tmixed money = \\\"\\\",\n\tstring currency = \\\"\\\",\n\tstring chargeback = \\\"N\\\"\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Instantiating CTaskItem\nDESCRIPTION: This code snippet demonstrates how to instantiate the CTaskItem class using the getInstance() method. It takes the task ID and user ID as parameters to create a task object in the context of the specified user.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskItem.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\\n$taskId = 7;\\n$userId = $USER->getId();\\n$oTask = CTaskItem::getInstance($taskId, $userId);\\n?>\"\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Attachment Size\nDESCRIPTION: This code calculates the total size of all attachments for a specific mailing list issue. It retrieves the file list using `CPosting::GetFileList`, iterates through the results, and sums the `FILE_SIZE` of each attachment.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/GetFileList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"//размер всех вложений\n$attach_size = 0;\n$rsFile = CPosting::GetFileList($ID);\nwhile($arFile = $rsFile->Fetch())\n\t$attach_size += $arFile[\\\"FILE_SIZE\\\"];\"\n```\n\n----------------------------------------\n\nTITLE: Accessing and Manipulating UI Field API in Bitrix\nDESCRIPTION: Example demonstrating how to get access to a field API in Bitrix. The code shows how to obtain a reference to a field DOM element, get its instance from BX.Main.ui.Factory, and then use various methods to set or remove values.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Biblioteka_interfejsov.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Получаем ссылку на DOM-элемент поля\nvar element = document.querySelector(\"[data-name=\\\"sEmployeeGroup\\\"]\");\n// Получаем запись из BX.Main.ui.Factory\nvar field = BX.Main.ui.Factory.get(element);\nif (field)\n{\n\t// Получаем ссылку на экземпляр класса поля\n\tvar fieldInstance = field.instance;\n    \n\t// Далее можно использовать API:\n\t// Установка значения для поля типа main-ui-select\n\tfieldInstance.updateValue(fieldInstance.getItems()[0]);\n\tfieldInstance.updateDataValue(fieldInstance.getItems()[0]);\n\t// Установка значения для поля типа main-ui-multi-select\n\tfieldInstance.selectItem(fieldInstance.getItems()[0]);\n\t// Удаление значения для поля типа main-ui-multi-select\n\tfieldInstance.unselectItem(fieldInstance.getItems()[0]);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DeleteFromUserGroup Method in CBlogUser Class (PHP)\nDESCRIPTION: This snippet defines the DeleteFromUserGroup method in the CBlogUser class. It removes a user from all user groups of a specified blog. The method is static and takes user ID, blog ID, and an optional select type parameter.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/DeleteFromUserGroup.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCBlogUser::DeleteFromUserGroup(\n\tint ID,\n\tint blogID,\n\tint selectType = BLOG_BY_BLOG_USER_ID,\n);\n```\n\n----------------------------------------\n\nTITLE: Defining CSearch::ReIndexAll Method Signature in PHP\nDESCRIPTION: Method signature for search reindexing with optional parameters for full reindex, execution time limit, namespace tracking, and suggestion clearing.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Poisk/Klassy/CSearch/ReIndexAll.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nmixed\nCSearch::ReIndexAll(\n\tbool bFull = false,\n\tint max_execution_time = 0,\n\tarray NS = Array(),\n\tbool clear_suggest = false\n);\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CBlogPost::GetList in PHP\nDESCRIPTION: The method signature for retrieving blog posts, which accepts parameters for ordering, filtering, grouping, pagination, and field selection. Returns a CDBResult object containing the filtered blog posts.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCBlogPost::GetList(\n\tarray arOrder = Array(\"ID\"=>\"DESC\"),\n\tarray arFilter = Array(),\n\tbool  arGroupBy = false,\n\tbool  arNavStartParams = false,\n\tarray arSelectFields = Array()\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Max Listeners for Event.EventEmitter\nDESCRIPTION: This snippet shows how to set the maximum number of listeners for each event using Event.EventEmitter.setMaxListeners. It also demonstrates the warning message when the limit is exceeded.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\nclass Button extends Event.EventEmitter {}\nconst emitter = new Button();\nemitter.setMaxListeners(2);\nemitter\n\t.subscribe('BX.UI.Button:click', () => {})\n\t.subscribe('BX.UI.Button:click', () => {})\n\t.subscribe('BX.UI.Button:click', () => {});\n// => Possible BX.Event.EventEmitter memory leak detected. 3 BX.UI.Button:click listeners added. Use emitter.setMaxListeners() to increase limit\n```\n\n----------------------------------------\n\nTITLE: CFormResult::GetDataByID Method Signature in PHP\nDESCRIPTION: The method signature for CFormResult::GetDataByID which returns an array describing the values of answers to questions or field values for a specified web form result. It also populates arrays containing result fields and answer data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetDataByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCFormResult::GetDataByID(\n\tint result_id,\n\tarray field,\n\tarray &result,\n\tarray &answer\n)\n```\n\n----------------------------------------\n\nTITLE: Retrieve and Display User Subscription Information in PHP\nDESCRIPTION: This snippet retrieves the current user's subscription from cookies, then retrieves the user's newsletter categories using `CSubscription::GetRubricArray`. The snippet assumes `$aSubscr` contains the subscription details and uses it to fetch related rubrics and display the subscription form.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscriptionGeneral/GetUserSubscription.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n//get current user subscription from cookies\n$aSubscr = CSubscription::GetUserSubscription();\n//get user's newsletter categories\n$aSubscrRub = CSubscription::GetRubricArray(intval($aSubscr[\"ID\"]));\n//show subscription form\n//.....\nКопировать\n```\n\n----------------------------------------\n\nTITLE: CPosting::SendMessage Method Definition\nDESCRIPTION: This snippet defines the SendMessage method of the CPosting class, specifying its parameters and types. It explains its functionality to send a publication to a mailing list and manage sending statuses.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/SendMessage.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nmixed\nCPosting::SendMessage(\n\tint ID,\n\tint timeout = 0,\n\tint maxcount = 0,\n\tbool check_charset = false,\n);\n```\n\n----------------------------------------\n\nTITLE: Registering Module Dependency (PHP)\nDESCRIPTION: This snippet shows how to register a dependency on the Push and Pull module. It is required to set up communication between your module and the Push and Pull module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nRegisterModuleDependences(\"pull\", \"OnGetDependentModule\", \"your_module\", \"CYourModulePullSchema\", \"OnGetDependentModule\" );\n```\n\n----------------------------------------\n\nTITLE: Using CWikiParser::parseBeforeSave\nDESCRIPTION: This code demonstrates how to use the `parseBeforeSave` method of the `CWikiParser` class. It retrieves a Wiki page element by name, creates an instance of `CWikiParser`, and then calls `parseBeforeSave` with the detail text of the element and an empty array to store the extracted categories. The result is then echoed to the output.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWikiParser/parseBeforeSave.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$IBLOCK_ID = 2;\n$NAME = '\\u0422\\u0435\\u0441\\u0442\\u043e\\u0432\\u0430\\u044f \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u0430';\n$arFilter = array(\n\t'ACTIVE' => 'Y',\n\t'CHECK_PERMISSIONS' => 'N',\n\t'IBLOCK_ID' => $IBLOCK_ID\n);\n$arElement = CWiki::GetElementByName($NAME, $arFilter);\n$arCat = array();\n$CWikiParser = new CWikiParser();\necho $CWikiParser->parseBeforeSave($arElement['~DETAIL_TEXT'], $arCat);\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Defining Copy Method in CFormField - PHP\nDESCRIPTION: Defines the Copy method of the CFormField class which allows copying a question or field in a web form. It returns the ID of the newly created question/field on success, or false on failure. Required dependencies include the CFormField class context.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormField/Copy.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nmixed\nCFormField::Copy(\n\tint field_id,\n\tstring check_rights = \"Y\",\n\tmixed form_id = false\n)\n```\n\n----------------------------------------\n\nTITLE: Finding Root Folder and Subfolder in Bitrix Disk\nDESCRIPTION: Shows how to locate the root folder of a storage and then find a specific subfolder within it.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('disk'))\n{\n    $storage = \\Bitrix\\Disk\\Driver::getInstance()->getStorageByUserId(1);\n    if ($storage)\n    {\n        // Получаем корневую папку хранилища\n        $parentFolder = $storage->getRootObject();\n \n        if ($parentFolder)\n        {\n            // Ищем подпапку внутри $parentFolder\n            $subFolder = $parentFolder->getChild([\n                '=NAME' => 'SubFolder', \n                'TYPE' => \\Bitrix\\Disk\\Internals\\FolderTable::TYPE_FOLDER\n            ]);\n \n            if ($subFolder)\n            {\n                // Работаем с найденной подпапкой\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Answer Parameter Structure in GetDataByID Method\nDESCRIPTION: The structure of the 'answer' parameter that gets populated by the GetDataByID method, providing detailed information about answers in a different format organized by question identifiers and answer IDs.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetDataByID.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nArray\n(\n\t[символьный идентификатор вопроса 1] => массив описывающий ответы на вопрос 1\n\t\tArray\n\t\t(\n\t\t\t[ID ответа 1] => массив описывающий ответ 1\n\t\t\t\tArray\n\t\t\t\t(\n\t\t\t\t\t[RESULT_ID]           => ID результата\n\t\t\t\t\t[FIELD_ID]            => ID вопроса\n\t\t\t\t\t[SID]                 => символьный идентификатор вопроса\n\t\t\t\t\t[TITLE]               => текст вопроса\n\t\t\t\t\t[TITLE_TYPE]          => тип текста вопроса [text|html]\n\t\t\t\t\t[FILTER_TITLE]        => заголовок поля фильтра\n\t\t\t\t\t[RESULTS_TABLE_TITLE] => заголовок столбца таблицы результатов\n\t\t\t\t\t[ANSWER_ID]           => ID ответа\n\t\t\t\t\t[ANSWER_TEXT]         => параметр ответа ANSWER_TEXT\n\t\t\t\t\t[ANSWER_VALUE]        => параметр ответа ANSWER_VALUE\n\t\t\t\t\t[USER_TEXT]           => текст введенный с клавиатуры\n\t\t\t\t\t[USER_DATE]           => введенная дата (если FIELD_TYPE=date)\n\t\t\t\t\t[USER_FILE_ID]        => ID файла (FIELD_TYPE=[file|image])\n\t\t\t\t\t[USER_FILE_NAME]      => имя файла\n\t\t\t\t\t[USER_FILE_IS_IMAGE]  => \"Y\" - FIELD_TYPE=image; \"N\" - FIELD_TYPE=file \n\t\t\t\t\t[USER_FILE_HASH]      => хэш файла (если FIELD_TYPE=file)\n\t\t\t\t\t[USER_FILE_SUFFIX]    => суффикс к расширению файла (FIELD_TYPE=file)\n\t\t\t\t\t[USER_FILE_SIZE]      => размер файла (если FIELD_TYPE=[file|image])\n\t\t\t\t\t[FIELD_TYPE]          => тип ответа\n\t\t\t\t\t[FIELD_WIDTH]         => ширина поля ответа\n\t\t\t\t\t[FIELD_HEIGHT]        => высота поля ответа\n\t\t\t\t\t[FIELD_PARAM]         => параметр поля ответа\n\t\t\t\t)\n\t\t\t[ID ответа 2] => массив описывающий ответ 2\n\t\t\t[ID ответа 3] => массив описывающий ответ 3\n\t\t\t...\n\t\t\t[ID ответа N] => массив описывающий ответ N\n\t\t)\n\t[символьный идентификатор вопроса 2] => массив описывающий ответы на вопрос 2\n\t[символьный идентификатор вопроса 3] => массив описывающий ответы на вопрос 3\n\t...\n\t[символьный идентификатор вопроса N] => массив описывающий ответы на вопрос N\n)\n```\n\n----------------------------------------\n\nTITLE: CLesson Method Signature in PHP\nDESCRIPTION: Defines the method signature for adding a new lesson with an array of fields as the parameter\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLesson/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint CLesson::Add(array arFields);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Search Custom Ranking Rule by ID in Bitrix PHP\nDESCRIPTION: Static method CSearchCustomRank::GetByID retrieves a specific search custom ranking rule using its unique identifier. Returns a CDBResult object containing the ranking rule details.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Poisk/Klassy/CSearchCustomRank/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCSearchCustomRank::GetByID(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Blog Image Using CBlogImage::Update in PHP\nDESCRIPTION: This method updates an image in a blog. It takes an image ID and an array of fields to update. The method returns the ID of the updated image on success, or false on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogImage/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCBlogImage::Update(\n\tint   ID\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: CStatEventType::GetByEvents Usage Example\nDESCRIPTION: Illustrates how to use the CStatEventType::GetByEvents method to check if an event type exists and then add a new event if it doesn't. This example demonstrates retrieving an event type by its identifiers, checking for existing events of that type for the current user within a specific timeframe, and adding a new event if none are found.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEventType/GetByEvents.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\n// зафиксируем событие типа \\\"Скачивание файла manual.chm\\\" (download/manual)\n// если такого типа не существует, он будет автоматически создан\n// событие будет фиксироваться по параметрам текущего посетителя сайта\n// сначала проверим не скачивал ли уже текущий посетитель этот файл\n// в течение последнего часа\n// получим ID типа события\n$rs = CStatEventType::GetByEvents($event1, $event2);\nif ($ar = $rs->Fetch())\n{\n\t// теперь получим все события данного типа для текущего посетителя сайта\n\t// произошедшие за последний час (3600 секунд)\n\t$rs = CStatEvent::GetListByGuest(\n\t\t$_SESSION[\\\"SESS_GUEST_ID\\\"], \n\t\t$ar[\\\"TYPE_ID\\\"], \\\"\\\", 3600\n\t);\n    \n\t// если таких событий не было...\n\tif (!($ar = $rs->Fetch()))\n\t{\n\t\t// ...добавляем данное событие\n\t\tCStatEvent::AddCurrent(\\\"download\\\", \\\"manual\\\");\n\t}\n}\n?>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Example of Adding a Blog Comment in Bitrix\nDESCRIPTION: Example showing how to add a new blog comment using the CBlogComment::Add method. It creates an array of required fields like title, text, blog ID, post ID, parent ID, author details, and IP address information before calling the Add method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogComment/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$UserIP = CBlogUser::GetUserIP();\n$arFields = array(\n\t\"TITLE\" => 'Мое первое сообщение в блоге',\n\t\"POST_TEXT\" => 'Текст моего первого сообщения в блоге',\n\t\"BLOG_ID\" => 1,\n\t\"POST_ID\" => 2,\n\t\"PARENT_ID\" => 0, //комментарий привязан к сообщению\n\t\"AUTHOR_ID\" => $USER->GetID(), //добавляем неанонимный комментарий, \n\t//в противном случае необходимо задать AUTHOR_NAME, AUTHOR_EMAIL\n\t\"DATE_CREATE\" => ConvertTimeStamp(false, \"FULL\"), \n\t\"AUTHOR_IP\" => $UserIP[0],\n\t\"AUTHOR_IP1\" => $UserIP[1]\n);\n$newID = CBlogComment::Add($arFields);\nif(IntVal($newID)>0)\n{\n\techo \"Новый комментарий [\".$newID.\"] добавлен.\";\n}\nelse\n{\n\tif ($ex = $APPLICATION->GetException())\n\t\techo $ex->GetString();\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: LDAP Events Table in Markdown\nDESCRIPTION: A markdown table that lists LDAP integration events, when they are called, their parameters, corresponding methods, and the version they were introduced in. The table includes OnBeforeUserLogin, OnLdapBeforeSync, and OnLdapUserFields events.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/ADLDAP_integratsija/Sobytija.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Событие | Вызывается | Параметры | Метод | С версии |\n| --- | --- | --- | --- | --- |\n| OnBeforeUserLogin | перед логином пользователя. |  | CLDAP::OnUserLogin | 7.0.0 |\n| OnLdapBeforeSync | перед синхронизацией с сервером LDAP, позволяет добавлять свою логику синхронизации. | |  |  | | --- | --- | | `$oLdapServer` | Массив, содержащий экземпляр объекта сервера LDAP (\\CLdapServer), с которым происходит синхронизация. | | CLdapServer::Sync | 9.5.1 |\n| OnLdapUserFields | при конвертации полей пользователя полученных из каталога LDAP в соответствующие поля пользователя сайта. | |  |  | | --- | --- | | `&$arFields` | Конвертированные поля. | | `$arLdapUser` | Поля LDAP. | | CLDAP::GetUserFields | 9.5.1 |\n```\n\n----------------------------------------\n\nTITLE: CForm::GetDropDownFilter Usage Example\nDESCRIPTION: Illustrates how to use the `CForm::GetDropDownFilter` method within an HTML form to create a dropdown list for filtering web form results. It specifies the field ID, parameter type, filter SID, and CSS class for the dropdown.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetDropDownFilter.md#2025-04-20_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n\"<form name=\\\"form1\\\" action=\\\"\\\" method=\\\"POST\\\">\n<table>\n\t<tr>\n\t\t<td>Образование:</td>\n\t\t<td><?\n\t\t\t$FIELD_ID = 15; // ID вопроса \\\"Ваше образование?\\\" \n\t\t\techo CForm::GetDropDownFilter(\n\t\t\t\t$FIELD_ID, \n\t\t\t\t\\\"ANSWER_TEXT\\\", \n\t\t\t\t\\\"ANKETA_EDUCATION_ANSWER_TEXT_dropdown\\\", \n\t\t\t\t\\\"class=\\\\\\\"inputselect\\\\\\\"\\\"\n\t\t\t);\n\t\t?></td>\n\t</tr>\n</table>\n<input type=\\\"submit\\\" value=\\\"Фильтр\\\">\n</form>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Initializing CCourseImport PHP Class\nDESCRIPTION: Constructor for CCourseImport that sets up course import with specified package directory and site IDs. Allows importing course packages into multiple sites with error handling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourseImport/CCourseImport.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCCourseImport::CCourseImport(\n\tstring PACKAGE_DIR,\n\tarray arSITE_ID\n);\n```\n\n----------------------------------------\n\nTITLE: CReport Static Column Title Enhancement Method\nDESCRIPTION: Augments report column titles with suffixes reflecting column configuration, such as adding '(Sum)' for calculated columns. This static method provides enhanced human-readable column labels.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Konstruktor_otchetov/Klassy/CReport/getFullColumnTitle.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ngetFullColumnTitle($view, $viewColumns, $fullHumanTitles);\n```\n\n----------------------------------------\n\nTITLE: Example of Updating a CLAnswer Instance\nDESCRIPTION: Demonstrates how to update an existing answer by including the learning module, creating a CLAnswer object, and calling the Update method with specific field modifications.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLAnswer/Update.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$ANSWER_ID = 1553;\n\t$arFields = Array(\n\t\t\"ANSWER\" => \"New answer name\",\n\t\t\"SORT\" => \"1\",\n\t);\n\t$answer = new CLAnswer;\n\t$success = $answer->Update($ANSWER_ID, $arFields);\n\tif($success)\n\t{\n\t\techo \"Ok!\";\n\t}\n\telse\n\t{\n\t\tif($e = $APPLICATION->GetException())\n\t\t\techo \"Error: \".$e->GetString();\n\t}\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Example Usage: Showing Previous Vote Results - PHP\nDESCRIPTION: A custom function demonstrating how to retrieve and display results of a previous vote using GetPrevVote\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Oprosy,_golosovanija/Funktsii/GetPrevVote.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// returns diagram of results for previous vote\nfunction ShowPrevVoteResults($GROUP_SYMBOLIC_NAME, $level=1, $lid=LANG)\n{\n\t$PREV_VOTE_ID = GetPrevVote($GROUP_SYMBOLIC_NAME, $level, $lid);\n\tif (intval($PREV_VOTE_ID)>0) ShowVoteResults($PREV_VOTE_ID);\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: CAdvBanner::GetKeywords Method Signature\nDESCRIPTION: This code snippet shows the signature of the GetKeywords method in the CAdvBanner class. It returns an array and accepts three optional string parameters: TYPE_SID, LOGIC, and EXACT_MATCH. These parameters allow filtering keywords based on advertisement type, logical matching requirements, and exact matching criteria.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Reklama,_bannery/Klassy/CAdvBanner/GetKeywords.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\narray\nCAdvBanner::GetKeywords(\n\tvarchar(255) TYPE_SID=\"\",\n\tvarchar(255) LOGIC=\"\",\n\tchar(1) EXACT_MATCH=\"\"\n);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Form Validators List in Bitrix Framework (PHP)\nDESCRIPTION: Method for retrieving a list of validators assigned to form fields as a CDBResult object. This non-static method allows filtering by field ID, validator activity status, and validator name, with customizable sorting options.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormValidator/GetListForm.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCFormValidator::GetListForm(\n\tint FORM_ID,\n\tmixed arFilter = array(),\n\tstring &by = \"s_sort\",\n\tstring &order = \"asc\",\n)\n```\n\n----------------------------------------\n\nTITLE: Generating Highload Block Table Name in PHP using CIBlockPropertyDirectory\nDESCRIPTION: The createHighloadTableName method generates a table name based on the entity name and the TABLE_PREFIX constant. It takes a string parameter 'name' representing the entity (highload block) name and returns the generated table name as a string.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Highload-bloki/Klassy/CIBlockPropertyDirectory/createHighloadTableName.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring CIBlockPropertyDirectory::createHighloadTableName(\n\tstring name\n);\n```\n\n----------------------------------------\n\nTITLE: OnBeforeChangeFile Event Handler Function Signature in PHP\nDESCRIPTION: Defines the function signature for the OnBeforeChangeFile event handler. It takes two parameters: the absolute file path and the file content (passed by reference). The function should return a boolean value.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnBeforeChangeFile.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool функция-обработчик(\n\tstring abs_path,\n\tstring &strContent\n);\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CBlogComment::GetByID in PHP\nDESCRIPTION: Example demonstrating how to retrieve a blog comment by its ID using the CBlogComment::GetByID method. The code retrieves the comment with ID 1 and either displays its data or shows an error message if the comment is not found.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogComment/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$ID = 1;\n$arComment = CBlogComment::GetByID($ID);\nif(is_array($arComment))\n\tprint_r($arComment);\nelse\n\techo \"Комментарий не найден.\";\n?>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Blog Example in PHP Bitrix\nDESCRIPTION: Example demonstrating how to create a new blog using the CBlog::Add method. It defines blog properties such as name, description, and permissions, then handles the response after creation.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$arFields = array(\n\t\"NAME\" => 'Блог администратора сайта',\n\t\"DESCRIPTION\" => 'В блоге описаны все изменения, происходящие на сайте',\n\t\"GROUP_ID\" => '1',\n\t\"ENABLE_IMG_VERIF\" => 'Y',\n\t\"EMAIL_NOTIFY\" => 'Y',\n\t\"ENABLE_RSS\" => \"Y\",\n\t\"URL\" => \"admin-blog\",\n\t\"ACTIVE\" => \"Y\",\n\t\"OWNER_ID\" => $USER->GetID()\n);\n$newID = CBlog::Add($arFields);\nif(IntVal($newID)>0)\n{\n\techo \"Новый блог [\".$newID.\"] создан.\";\n}\nelse\n{\n\tif ($ex = $APPLICATION->GetException())\n\t\techo $ex->GetString();\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: CStatEvent::GetList Method Signature\nDESCRIPTION: This code snippet shows the function signature of the `CStatEvent::GetList` method in Bitrix.  It takes sorting parameters, a filter array, and a flag for filtering as input, and returns a CDBResult object containing the list of events.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEvent/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCStatEvent::GetList(\n\tstring &by = \"s_id\",\n\tstring &order = \"desc\",\n\tarray filter = array(),\n\tbool &is_filtered\n)\n```\n\n----------------------------------------\n\nTITLE: Sending a Message with CPosting::SendMessage in PHP\nDESCRIPTION: This code snippet demonstrates how to invoke the SendMessage method to send a message using the CPosting class. It checks if the action is 'send' and the release ID is greater than 0, then attempts to send the message while handling potential partial sends and displaying JavaScript for redirecting if needed.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/SendMessage.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\nif($action==\"send\" && $ID>0):\n\tif(($res = $cPosting->SendMessage($ID, COption::GetOptionString(\"subscribe\", \"posting_interval\"))) !== false):\n\t\tif($res === \"CONTINUE\"):\n?>\n<script language=\"JavaScript\" type=\"text/javascript\">\n<!--\nfunction DoNext(){window.location=\"<?echo $APPLICATION->GetCurPage().\"?ID=\".$ID.\"&action=send&lang=\".LANG.\"&rnd=\".rand();?>\";} \nsetTimeout('DoNext()', 2500);\n//-->\n</script>\n<?\n\t\telse:\n\t\t\t$strOk = \"Sent successfully.\";\n\t\tendif; //$res === \"CONTINUE\"\n\tendif; //$cPosting->SendMessage\n\t$strError .= $cPosting->LAST_ERROR;\nendif; //$action==\"send\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Guest Data by ID with CGuest::GetByID in PHP\nDESCRIPTION: This snippet demonstrates how to use the CGuest::GetByID method to retrieve visitor data based on the provided guest ID. It retrieves the data, fetches it into an associative array, and then prints the array's contents for inspection. The guest ID is passed as an integer.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CGuest/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\n$guest_id = 1;\nif ($rs = CGuest::GetByID($guest_id))\n{\n\t$ar = $rs->Fetch();\n\t// выведем параметры посетителя\n\techo \"<pre>\"; print_r($ar); echo \"</pre>\";\n}\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: CStopList::GetList Method Signature\nDESCRIPTION: This code snippet represents the signature of the GetList method within the CStopList class in Bitrix. It shows the parameters the method accepts, including sorting fields, order, filters, and a flag indicating if the result is filtered. The method returns a CDBResult object which can be used to iterate over the results.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStopList/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCStopList::GetList(\n\tstring &by = \"s_id\",\n\tstring &order = \"desc\",\n\tarray filter = array(),\n\tbool &is_filtered\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Registering Event Handlers for Open Lines Session Transfer\nDESCRIPTION: Demonstrates how to register event handlers for session transfer and error events using Bitrix event management system\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Otkrytye_linii/Sobytija/OnBeforeSessionTransfer.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$eventManager = \\Bitrix\\Main\\EventManager::getInstance();\n$eventManager->addEventHandler('imopenlines', 'OnBeforeSessionTransfer', 'onBeforeSessionTransfer');\n$eventManager->addEventHandler('imopenlines', 'OnErrorEventBeforeSessionTransfer', 'onErrorEventBeforeSessionTransfer');\n```\n\n----------------------------------------\n\nTITLE: Implementing SOAP Request Processing with CXMLCreator in Bitrix\nDESCRIPTION: This example demonstrates how to use the CXMLCreator class to build XML responses in a SOAP server implementation. The code shows a ProcessRequestBody method that handles 'Registration' requests by constructing an XML response with provider information and services.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-servisy/Klassy/CXMLCreator.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nclass CMSSOAPResearch extends CSOAPServerResponser\n{\n\t...\n\tfunction ProcessRequestBody(&$cserver, $body) \n\t{\n\t\t$functionName = $body->name();\n\t\t$namespaceURI = $body->namespaceURI();\n\t\t$requestNode = $body;\n        \n\t\tif ($functionName == \"Registration\")\n\t\t{\n\t\t\t$root = new CXMLCreator(\"RegistrationResponse\");\n\t\t\t$root->setAttribute(\"xmlns\", \"urn:Microsoft.Search\");\n            \n\t\t\t$regres = new CXMLCreator(\"RegistrationResult\");\n\t\t\t$root->addChild($regres);\n                        \n\t\t\t$prup = new CXMLCreator(\"ProviderUpdate\");\n\t\t\t$prup->setAttribute(\"xmlns\", \"urn:Microsoft.Search.Registration.Response\");\n\t\t\t$prup->setAttribute(\"revision\", \"1\");             \n\t\t\t$prup->setAttribute(\"build\", \"1\");\n\t\t\t$regres->addChild($prup);\n            \n\t\t\t$stat = new CXMLCreator(\"Status\");\n\t\t\t$stat->setData(\"SUCCESS\");\n\t\t\t$prup->addChild($stat);\n                        \n\t\t\t$providers = array(\n                \n\t\t\t\t\"Provider\" => array (\n\t\t\t\t\t\"Message\" => \"Тестовая служба.\",\n\t\t\t\t\t\"Id\" => \"{$this->provider_id}\",\n\t\t\t\t\t\"Name\" => \"Тестовая служба. {$this->add_tittle}\",\n\t\t\t\t\t\"QueryPath\" => $this->query_path,\n\t\t\t\t\t\"RegistrationPath\" => $this->registration_path,\n\t\t\t\t\t\"AboutPath\" => \"http://www.bitrix.ru/\",\n\t\t\t\t\t\"Type\" => \"SOAP\",\n\t\t\t\t\t\"Revision\" => \"1\",\n\t\t\t\t\t\"Services\" => array(\n\t\t\t\t\t\t\"Service\" => array(\n\t\t\t\t\t\t\t\"Id\" => \"{$this->service_id}\",\n\t\t\t\t\t\t\t\"Name\" => \"Тестовая служба. {$this->add_tittle}\",\n\t\t\t\t\t\t\t\"Description\" => \"Тестовая служба для тестирования soap сервера.\",\n\t\t\t\t\t\t\t\"Copyright\" => \"(c) Bitrix.\",\n\t\t\t\t\t\t\t\"Display\" => \"On\",\n\t\t\t\t\t\t\t\"Category\" => \"ECOMMERCE_GENERAL\",\n\t\t\t\t\t\t\t\"Parental\" => \"Unsupported\",\n\t\t\t\t\t\t)\n\t\t\t\t\t)                        \n\t\t\t\t)                    \n            \n\t\t\t);\n\t\t\t$providersEncoded = CSOAPRequest::encodeValueLight(\"Providers\", $providers);\n\t\t\t$prup->addChild($providersEncoded);        \n            \n\t\t\t...\n            \n\t\t\treturn true;\n\t\t}\n        \n\treturn false;\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: DeleteImage Method Signature in CWiki Class\nDESCRIPTION: The method signature for DeleteImage in the CWiki class. This non-static method deletes an image from a Wiki page by specifying the image ID, element ID, and infoblock ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/DeleteImage.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nvoid\nCWiki::DeleteImage(\n\tint IMAGE_ID,\n\tint ID,\n\tint IBLOCK_ID\n);\n```\n\n----------------------------------------\n\nTITLE: Defining PreparePath Method in CBlogUser Class (PHP)\nDESCRIPTION: This snippet shows the method signature for PreparePath. It takes a user ID, site ID, and a boolean flag for 404 error handling. The method returns a string representing the path to the user's profile relative to the site root.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/PreparePath.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCBlogUser::PreparePath(\n\tint    userID,\n\tstring siteID = false,\n\tbool   is404 = true,\n);\n```\n\n----------------------------------------\n\nTITLE: Defining GetList Method in CFormAnswer Class\nDESCRIPTION: This snippet defines the GetList method of the CFormAnswer class, which retrieves a list of responses based on various filtering criteria. It uses multiple parameters, allowing sorting and filtering of results.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormAnswer/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult CFormAnswer::GetList(\n\tint question_id,\n\tstring &by = \"s_sort\",\n\tstring &order = \"asc\",\n\tarray filter = array(),\n\tbool &is_filtered\n)\n```\n\n----------------------------------------\n\nTITLE: Using ShowFormNoteText Method in Template\nDESCRIPTION: Example of how to use the ShowFormNoteText method in a template file. This code outputs unformatted informational messages from the form.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowFormNoteText.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?=$FORM->ShowFormNoteText()?>\n```\n\n----------------------------------------\n\nTITLE: Using CWiki::GetCategory to Retrieve Wiki Page Categories in PHP\nDESCRIPTION: Example of how to use the GetCategory method to retrieve categories for a Wiki page named 'Тестовая страница' in infoblock with ID 2.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/GetCategory.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Получим категории для страницы \"Тестовая страница\" инфоблока с идентификатором 2\n$NAME = 'Тестовая страница';\n$IBLOCK_ID = 2;\n$arCategory = CWiki::GetCategory($NAME, $IBLOCK_ID);\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining GetDomainList Method in PHP\nDESCRIPTION: This PHP code snippet defines the CSearcher::GetDomainList method, which retrieves a list of search engine domains based on given sort parameters and filters. It's essential to provide the filtering criteria to refine the results adequately.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CSearcher/GetDomainList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCSearcher::GetDomainList(\n\tstring &by = \"s_id\",\n\tstring &order = \"desc\",\n\tarray filter = array(),\n\tbool &is_filtered\n)\n```\n\n----------------------------------------\n\nTITLE: Attaching Multiple Validators to a Form Field in Bitrix\nDESCRIPTION: The SetBatch method attaches a group of validators with specified settings to a form field. It is similar to calling CFormValidator::Set for each validator in the group. This is a non-static method introduced in version 6.0.0.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormValidator/SetBatch.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCFormValidator::SetBatch(\n\tint WEB_FORM_ID,\n\tint FIELD_ID,\n\tarray arValidators = array(),\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Vote Answer Validation Logic\nDESCRIPTION: Custom event handler method that implements validation rules for vote answers, specifically checking for image presence in a specific channel and throwing an exception if requirements are not met\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Oprosy,_golosovanija/Sobytija/onBeforeVoteAnswerAdd.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nclass MyClassForVote\n{\n\tpublic static function onBeforeVoteAnswerAddHandler(&$fields)\n\t{\n\t\t$channel = getChannelByQuestionId($fields[\"QUESTION_ID\"]);\n\t\tif (\n\t\t\t$channel[\"ID\"] == 6 \n\t\t\t&&\n\t\t\tempty($fields[\"IMAGE_ID\"])\n\t\t)\n\t\t{\n\t\t\tglobal $APPLICATION;\n\t\t\t$APPLICATION->throwException(\"Ай-ай-ай! Нехорошо писать ответы в этой группе без картинки. \");\n\t\t\treturn false;\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: CIdeaManagment::getInstance()->Idea Usage Example\nDESCRIPTION: This code snippet demonstrates how to use the `CIdeaManagment::getInstance()->Idea()` method to retrieve an idea object with ID 1.  The `getInstance()` method likely retrieves a singleton instance of the `CIdeaManagment` class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Menedzher_idej/Klassy/CIdeaManagment/Idea.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$Idea = CIdeaManagment::getInstance()->Idea(1);Копировать\n```\n\n----------------------------------------\n\nTITLE: Deleting a Banner with CAdvBanner::Delete\nDESCRIPTION: This snippet shows how to delete a banner using the `CAdvBanner::Delete` method in Bitrix. It takes the banner ID (`BANNER_ID`) as a required parameter and an optional parameter (`CHECK_RIGHTS`) to determine whether to check user permissions before deletion. The method returns a boolean value indicating success or failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Reklama,_bannery/Klassy/CAdvBanner/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nboolean\nCAdvBanner::Delete(\n\tint BANNER_ID,\n\tchar(1) CHECK_RIGHTS=\"Y\"\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from an Event with Event.EventEmitter\nDESCRIPTION: This snippet demonstrates how to unsubscribe from an event using the Event.EventEmitter.unsubscribe method. It shows subscribing to an event and then unsubscribing from it.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\nclass Button extends Event.EventEmitter {}\nconst emitter = new Button();\nemitter.subscribeOnce('BX.UI.Button:click', clickHandler);\n```\n\n----------------------------------------\n\nTITLE: Getting Last Closed Slider in Bitrix\nDESCRIPTION: Retrieves the most recently closed slider as an instance of the BX.SidePanel.Slider class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.getLastOpenSlider()\n```\n\n----------------------------------------\n\nTITLE: Using trimPHPTags in JavaScript\nDESCRIPTION: This JavaScript code demonstrates how to use the `trimPHPTags` method of the `oBXEditorUtils.PHPParser` object to remove PHP tags from a string. The input is a string containing PHP code, and the output is the same string with the PHP tags removed.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/oBXEditorUtilsPHPParser/trimPHPTags.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"<script>\nvar sCode = '<?php MyPHPFunction(); ?>';\nsCode = oBXEditorUtils.PHPParser.trimPHPTags(sCode);//sCode = ' MyPHPFunction(); ';\n</script>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Удаление курса в Bitrix с проверкой условий\nDESCRIPTION: Метод Delete класса CCourse служит для удаления курса по его идентификатору. Требует предварительной проверки прав администратора и подключения модуля обучения. Метод возвращает булево значение в зависимости от успешности операции.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\\nif (CModule::IncludeModule(\"learning\"))\\n{\\n\\t$ID = 109;\\/\\/Course ID\\n\\tif($USER->IsAdmin())\\n\\t{\\n\\t\\t@set_time_limit(0);\\n\\t\\t$DB->StartTransaction();\\n\\t\\tif(!CCourse::Delete($ID))\\n\\t\\t\\t$DB->Rollback();\\n\\t\\telse\\n\\t\\t\\t$DB->Commit();\\n\\t}\\n}\\n?>\n```\n\nLANGUAGE: php\nCODE:\n```\nbool CCourse::Delete(int ID);\n```\n\n----------------------------------------\n\nTITLE: Custom Taskbar and Property Handling in JavaScript\nDESCRIPTION: Illustrates how to create a custom taskbar and register a property bar handler for a specific custom tag ('_customtag'). The `ShowProperties` function demonstrates reading, manipulating, and saving element properties using `oBXEditorUtils.getCustomNodeParams` and `oBXEditorUtils.setCustomNodeParams`.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/addPropertyBarHandler.md#2025-04-20_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"<script>\nfunction CustomTaskbar()\n{\n\tvar oTaskbar = this;\n\t\n\tCustomTaskbar.prototype.OnTaskbarCreate = function ()\n\t{\n\t\t//...\n\t\t//Добавление обработчика панели свойств для элемента \\\"_customtag\\\"\n\t\toBXEditorUtils.addPropertyBarHandler('_customtag',this.ShowProperties);\n\t\t//...\n\t}\n\t\n\t//...\n\t\n\tCustomTaskbar.prototype.ShowProperties = function(_bNew, _pTaskbar, _pElement)\n\t{\n\t\t// _pTaskbar.pCellProps - прокручиваемая область панели свойств\t\t\n\t\t//Считывание свойств элемента\n\t\tvar arParams = oBXEditorUtils.getCustomNodeParams(_pElement);\n\t\t//...\n\t\t// операции над свойствами, отображение, изменение\n\t\t//...\n\t\t//Сохранение свойств элемента\n\t\toBXEditorUtils.setCustomNodeParams(_pElement,arParams);\n\t}\n}\n</script>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Using AddImageResizeHandler in PHP with Bitrix\nDESCRIPTION: This example demonstrates how to use the AddImageResizeHandler method to register an image resize handler with specific width and height parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogImage/AddImageResizeHandler.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nCBlogImage::AddImageResizeHandler(array(\"width\" => 400, \"height\" => 400));\n```\n\n----------------------------------------\n\nTITLE: Return Array Structure\nDESCRIPTION: Describes the structure of the array returned by the CSearcher::GetByID method after fetching the CDBResult.  This array contains information about the search engine, such as its ID, cleanup date, total hits, activity status, name, and other relevant statistics. The data is organized in key-value pairs, where the keys represent different attributes of the search engine.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CSearcher/GetByID.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nArray\n(\n\t[ID] => ID поисковый системы\n\t[DATE_CLEANUP] => дата очистки устаревших данных по индексации страниц, в разрезе по дням\n\t[TOTAL_HITS] => суммарное количество проиндексированных страниц\n\t[SAVE_STATISTIC] => [Y|N] флаг \"сохранять ли информацию о проиндексированных страницах\"\n\t[ACTIVE] => [Y|N] флаг активности\n\t[NAME] => название поисковой системы\n\t[USER_AGENT] => UserAgent поисковой системы\n\t[DIAGRAM_DEFAULT] => [Y|N] флаг \"включать в диаграмму и график по умолчанию\"\n\t[HIT_KEEP_DAYS] => сколько дней хранить хиты поисковой системы\n\t[DYNAMIC_KEEP_DAYS] => сколько дней хранить данные по индексации сайта в разрезе по дням\n\t[PHRASES] => количество заходов на сайт по поисковой фразе с данной поисковой системы\n\t[PHRASES_HITS] => суммарное количество хитов, производимое посетителями, заходящими с данной поисковой системы по той или иной поисковой фразе\n\t[CHECK_ACTIVITY] => [Y|N] флаг \"проверять ли лимит активности для данной поисковой системы в моменты индексации сайта\"\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Removing all child nodes from a DOM element using BXRemoveAllChild\nDESCRIPTION: This snippet demonstrates how to use the `BXRemoveAllChild` method from the `oBXEditorUtils` object to remove all child nodes from a specified DOM element. The `document.getElementById` method is used to obtain a reference to the table element, and then `oBXEditorUtils.BXRemoveAllChild` is called to remove all child nodes from that table.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/BXRemoveAllChild.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"<script>\\nvar oTable = document.getElementById('tableId');\\noBXEditorUtils.BXRemoveAllChild(oTable); //Удаляет дочерние узлы таблицы с id='tableId'\\n</script>\"\n```\n\n----------------------------------------\n\nTITLE: Specific Slider Event Subscription in JavaScript\nDESCRIPTION: Shows how to subscribe to events for a specific slider when opening it. This example sets up an 'onLoad' event handler that logs to the console.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/Sobytija.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.open(\"/crm/button/edit/10/\", {\n\tevents: {\n\t\tonLoad: function(event) {\n\t\t\tconsole.log(\"onLoad\");\n\t\t}\n\t}\n});\n```\n\n----------------------------------------\n\nTITLE: Get Event Type Dropdown List\nDESCRIPTION: Retrieves a list of event types for use in dropdown lists or multi-select boxes. The method allows for custom sorting of the event type list using an SQL ORDER BY clause. The returned data is an array suitable for use with SelectBox and SelectBoxM functions.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEventType/GetDropdownList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCStatEventType::GetDropdownList(\n\tstring order = \"ORDER BY EVENT1, EVENT2\"\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Using GetGID in a Redirect URL in PHP\nDESCRIPTION: This code snippet shows how to utilize the GetGID method within a redirect URL after capturing an event. It demonstrates how to replace a placeholder with the actual GID and then redirect the user accordingly.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEvent/GetGID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// страница, на которую посетитель будет перенаправлен\n// после фиксации события.\n// например: платежная система или регистратор\n$goto = \"http://www.softkey.ru/catalog/basket.php?prodid=902&\"\n\t\"quantity=1&referer1=ritlabs_site&referer2=#EVENT_GID#\";\n// фиксируем событие\n$goto = eregi_replace(\"#EVENT_GID#\",\n\turlencode(CStatEvent::GetGID()), \n\t$goto\n);\nCStatEvent::AddCurrent(\"softkey\", \"out\", \"\", \"\", \"\", $goto);\n// перенаправляем посетителя\nLocalRedirect($goto);\n?>\n```\n\n----------------------------------------\n\nTITLE: PHP Parser Function Definition\nDESCRIPTION: This code block defines the structure of the `parseFunction` method within the `oBXEditorUtils.PHPParser` object. It accepts a string representing a PHP function call and returns an object containing the function name and parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/oBXEditorUtilsPHPParser/parseFunction.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nobject\noBXEditorUtils.PHPParser.parseFunction(\n\tstring sCode\n);\n\n```\n\n----------------------------------------\n\nTITLE: ShowFormNote Method Signature in Bitrix CFormOutput Class\nDESCRIPTION: The ShowFormNote method signature from the CFormOutput class. This non-static method is used to output formatted information messages from a form. It returns the formatted messages (e.g., \"Your application has been accepted\") or an empty string if there are no messages.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowFormNote.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCFormOutput::ShowFormNote(\n);\n```\n\n----------------------------------------\n\nTITLE: Defining Structure Types in CWebServiceDesc\nDESCRIPTION: Example of defining structure types (represented as associative arrays in PHP) for a web service. These structures can be used as parameter types in web service methods.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-servisy/Klassy/CWebServiceDesc.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$wsdesc->structTypes[\"ИмяСтруктуры\"] = \n\tarray(\n\t\t\"ИмяПоля\" => array(\"varType\" => \"ТипДанных\"),\n\t\t...\n\t);\n```\n\n----------------------------------------\n\nTITLE: Implementing Validator Settings Method in PHP for Bitrix Forms\nDESCRIPTION: This function defines the settings available for configuring the validator. It returns an array specifying the parameters, their types, default values, and titles for the number range validator.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Sozdanie_sobstvennyh_validatorov_polej_veb-form.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nfunction GetSettings()\n{\n\treturn array(\n\t\t\"NUMBER_FROM\" => array(\n\t\t\t\"TITLE\"   => \"Нижний порог числа\",\n\t\t\t\"TYPE\"    => \"TEXT\",\n\t\t\t\"DEFAULT\" => \"0\",\n\t\t),\n    \n\t\t\"NUMBER_TO\" => array(\n\t\t\t\"TITLE\"   => \"Верхний порог числа\",\n\t\t\t\"TYPE\"    => \"TEXT\",\n\t\t\t\"DEFAULT\" => \"100\",\n\t\t),\n    \n\t\t\"NUMBER_FLOAT\" => array(\n\t\t\t\"TITLE\"   => \"Не только целое\",\n\t\t\t\"TYPE\"    => \"CHECKBOX\",\n\t\t\t\"DEFAULT\" => \"Y\",\n\t\t),\n\t);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OnAdminContextMenuShow Event Handler in PHP\nDESCRIPTION: This code snippet demonstrates the function signature for handling the OnAdminContextMenuShow event. It takes a reference to an array of items which represent the buttons on the admin panel toolbar.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnAdminContextMenuShow.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nvoid\nHandler(\n\tarray &items\n);\n```\n\n----------------------------------------\n\nTITLE: CTaskFiles::Delete signature\nDESCRIPTION: Shows the signature of the CTaskFiles::Delete method.  This method deletes the relation between the task and file.  It requires the task and file id as parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskFiles/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nbool\nCTaskFiles::Delete(\n\tTASK_ID,\n\tFILE_ID\n);\n\n```\n\n----------------------------------------\n\nTITLE: Example of Using CFormStatus::GetDropDown in PHP\nDESCRIPTION: This example demonstrates how to get a list of available statuses for a web form where the current user has VIEW permission, and how to display them in a dropdown selection box.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormStatus/GetDropDown.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$FORM_ID = 4; // ID веб-формы\n// получим список всех доступных статусов\n// для которых есть право просмотра у текущего пользователя\n$rsStatuses = CFormStatus::GetDropdown($FORM_ID, array(\"VIEW\"));\n// выведем выпадающий список\necho SelectBox(\"STATUS_ID\", $rsStatuses, \"(выберете статус)\", htmlspecialchars($STATUS_ID));\n?>\n```\n\n----------------------------------------\n\nTITLE: Adding a Question using CLQuestion::Add in PHP\nDESCRIPTION: This code snippet demonstrates how to add a new question using the `CLQuestion::Add` method in Bitrix. It requires the learning module to be included and creates an array of fields for the new question. The snippet also handles potential errors during the question creation process.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLQuestion/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$LESSON_ID = 431;\n\t$arFields = Array(\n\t\t\"ACTIVE\" => \"Y\",\n\t\t\"LESSON_ID\" => $LESSON_ID,\n        \n\t\t\"SORT\" => \"1\",\n\t\t\"NAME\" => \"Let us assume that there are several sites in the system. \n\t\t\tIs it possible to assign users permissions on access to viewing statistics individually for each site?\"\n\t);\n\t$question = new CLQuestion;\n\t$ID = $question->Add($arFields);\n\t$success = ($ID>0);\n\tif($success)\n\t{\n\t\techo \"Ok!\";\n\t}\n\telse\n\t{\n\t\tif($e = $APPLICATION->GetException())\n\t\t\techo \"Error: \".$e->GetString();\n\t}\n}\n?>Copyровать\n```\n\n----------------------------------------\n\nTITLE: Adding a Chapter Example in Bitrix Learning Module\nDESCRIPTION: Demonstrates how to add a new chapter to a course using the CChapter::Add method, including module inclusion, field preparation, and error handling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CChapter/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$COURSE_ID = 97;\n\t$arFields = Array(\n\t\t\"COURSE_ID\" => $COURSE_ID,\n\t\t\"ACTIVE\" => \"Y\",\n\t\t\"NAME\" => \"Chapter 1\",\n\t\t\"SORT\" => \"100\",\n\t\t\"DETAIL_TEXT\" => \"In this chapter ...\",\n\t);\n\t$chapter = new CChapter;\n\t$ID = $chapter->Add($arFields);\n\t$success = ($ID>0);\n\t if($success)\n\t {\n\t\t echo \"Ok!\";\n\t }\n\t else\n\t {\n\t\tif($e = $APPLICATION->GetException())\n\t\t\techo \"Error: \".$e->GetString();\n\t }\n}\n```\n\n----------------------------------------\n\nTITLE: Desktop Event Listener (JavaScript)\nDESCRIPTION: This JavaScript code sets up an event listener for desktop versions to capture events from a specific module. Replace 'moduleName' with the actual module name.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull.md#2025-04-20_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.addCustomEvent(\"onPullEvent-moduleName\", BX.delegate(function(command,params){\n\tconsole.log('Events of moduleName', command, params);\n}, this));\n```\n\n----------------------------------------\n\nTITLE: CStatEvent::Add Event Example 2\nDESCRIPTION: Presents another example of using CStatEvent::Add to add an event. In this example, the GID (special parameter) is encoded.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEvent/Add.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\n// добавим событие по типу события #2\n// данный тип должен быть заранее создан\n// специальный параметр события в закодированном виде\n$gid = \\\"BITRIX_SM.OTk1LjgyLk4wLjI1Lk4ucnU%3D\\\";\n// дата должна быть заданы в формате текущего сайта или языка\n$date = \\\"01.06.2005\\\";\nCStatEvent::Add(2, \\\"\\\", $date, $gid, \\\"199\\\", \\\"EUR\\\");\n?>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Getting GID from CStatEvent in PHP\nDESCRIPTION: This method retrieves a special parameter used for creating events in the CStatEvent class. The generated GID is based on various data from the current visitor, including session ID and campaign ID. Depending on settings, the output can be plain or base64-encoded.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEvent/GetGID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCStatEvent::GetGID(\n\tmixed site_id = false\n)\n```\n\n----------------------------------------\n\nTITLE: Accessing Slider Object in Event Handler for SidePanel in JavaScript\nDESCRIPTION: Shows how to access the slider object within an event handler. This example subscribes to the 'onCloseComplete' event and logs the slider object to the console.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/Sobytija.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nBX.addCustomEvent(\"SidePanel.Slider:onCloseComplete\", function(event) {\n\tconsole.log(event.getSlider()); //получить объект слайдера\n});\n```\n\n----------------------------------------\n\nTITLE: PHP Definition of oBXEditorUtils.PHPParser.getParams\nDESCRIPTION: This code defines the signature of the `getParams` method within the `oBXEditorUtils.PHPParser` class. It takes a string as input (`sCode`) and returns an array of strings.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/oBXEditorUtilsPHPParser/getParams.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\noBXEditorUtils.PHPParser.getParams(\n\tstring sCode\n);\n\n```\n\n----------------------------------------\n\nTITLE: Define Event Handler Function Signature PHP\nDESCRIPTION: Defines the signature of the event handler function for the `OnBeforeSendMailToAuthor` event.  The handler receives an array of fields `$arFields` containing event parameters, and a boolean `$is_new` indicating if the message is the first one in the ticket. It does not return any value.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Tehpodderzhka/Sobytija/OnBeforeSendMailToAuthor.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"функция-обработчик(\n\tarray $arFields,\n\tbool $is_new\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CCourse::GetGroupPermissions\nDESCRIPTION: Retrieves access permissions for a course by course ID. Returns an array of group permissions where each entry indicates the access level for a specific user group.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/GetGroupPermissions.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCCourse::GetGroupPermissions(\n\tint COURSE_ID\n);\n```\n\n----------------------------------------\n\nTITLE: CBlogGroup::GetByID Method Signature in Bitrix Blogs API\nDESCRIPTION: Method signature that returns parameters of a blog group with the specified ID. This is a non-static method that accepts a group ID parameter.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogGroup/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCBlogGroup::GetByID(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Usage Example of CFormOutput::ShowFormNote\nDESCRIPTION: A simple usage example of the ShowFormNote method. This shows how to print the formatted information message from a form object using the $FORM instance of CFormOutput class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowFormNote.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?=$FORM->ShowFormNote()?>\n```\n\n----------------------------------------\n\nTITLE: CHit::GetByID Method Signature - PHP\nDESCRIPTION: This snippet displays the method signature for the CHit::GetByID function, which is used to retrieve data for a specific hit using its ID. It returns a CDBResult object, and the required parameter is the hit's ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CHit/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCHit::GetByID(\n\tint hit_id\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Adding a Wiki Page Example in Bitrix\nDESCRIPTION: Example of how to add a new Wiki page to an information block with ID 2. The example creates an active HTML page with a title and content, then calls the CWiki::Add method to insert it.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Добавим Wiki-страницу в инфо.блок с идентификатором 2\n$arFields = array(\n\t'ACTIVE' => 'Y',\n\t'IBLOCK_ID' => 2,\n\t'DETAIL_TEXT_TYPE' => 'html',\n\t'DETAIL_TEXT' => '<br/><h2>Тестовая страница</h2><br/>',\n\t'NAME' => 'Тестовая страница'\n);\n$CWiki = new CWiki();\nif (!($ID = $CWiki->Add($arFields)))\n\techo 'Ошибка. Страница не создана.';\n?>\n```\n\n----------------------------------------\n\nTITLE: Mobile Event Listener (JavaScript)\nDESCRIPTION: This JavaScript code sets up an event listener for mobile versions to capture events from a specific module. Replace 'moduleName' with the actual module name.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull.md#2025-04-20_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.addCustomEvent(\"onPull-moduleName\", BX.delegate(function(data){\n\tconsole.log('Events of moduleName', data.command, data.params);\n}, this));\n```\n\n----------------------------------------\n\nTITLE: CTaskElapsedItem Update Method Usage Example\nDESCRIPTION: Provides a practical example of how to use the `update` method. It shows the process of obtaining a task item, creating a `CTaskElapsedItem` instance, and then calling methods such as delete. There appears to be a comment denoting update as well.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskElapsedItem/update.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"$taskId = ...;\n$itemId = ...;\n$oTask = CTaskItem::getInstance($taskId, $USER->getId());\n$oElapsedItem = new CTaskElapsedItem($oTask, $itemId);\n$oElapsedItem->delete(); // $oElapsedItem->update($arFields); / $oElapsedItem->isActionAllowed($actionId);Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Example Usage of GetGroupPermissions in PHP\nDESCRIPTION: Demonstrates how to retrieve and print course group permissions by including the learning module and calling the GetGroupPermissions method with a specific course ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/GetGroupPermissions.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$arPerm = CCourse::GetGroupPermissions($COURSE = 8);\n\tprint_r($arPerm);\n\t/*\n\tThe above example will output something similar to:\n\tArray\n\t(\n\t\t[2] => R\n\t\t[22] => W\n\t)\n\t*/\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining OnBeforeGroupUpdate Event Handler in PHP\nDESCRIPTION: This snippet shows the function signature for the OnBeforeGroupUpdate event handler. It includes the event parameters and return type.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnBeforeGroupUpdate.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nEventHandler(\n\tint ID,\n\tarray &arFields\n);\n```\n\n----------------------------------------\n\nTITLE: JavaScript: Modifying the HTML Editor Toolbar\nDESCRIPTION: This JavaScript code snippet modifies the standard toolbar of the Bitrix HTML editor.  It redefines the 'standart' toolbar, removing the 'Настройки', 'Выделить все', and 'Проверка орфографии' buttons.  This allows for customization of the editor's interface by removing or adding specific toolbar buttons.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Sobytija/OnBeforeHTMLEditorScriptsGet.md#2025-04-20_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n<?\n// файл /bitrix/admin/htmleditor2/my_scripts.js\n// Переопределяем стандартную панель инструментов, удаляя из нее кнопки \"Настройки\", \"Выделить все\" и \"Проверка орфографии\"\narToolbars['standart'] = [\n\tBX_MESS.TBSStandart,\n\t\t[\n\t\tarButtons['Fullscreen'], 'separator',\n\t\tarButtons['Cut'], arButtons['Copy'], arButtons['Paste'], arButtons['pasteword'], arButtons['pastetext'], 'separator',\n\t\tarButtons['Undo'], arButtons['Redo'], arButtons['separator'],\n\t\tarButtons['borders'], 'separator',\n\t\tarButtons['table'], arButtons['anchor'], arButtons['CreateLink'], arButtons['deletelink'], arButtons['image'], 'separator',\n\t\tarButtons['SpecialChar'], arButtons['spellcheck']\n\t\t]\n\t];\n?>\n```\n\n----------------------------------------\n\nTITLE: Managing CRM Contact Events in PHP\nDESCRIPTION: Events for CRM contact operations, including adding, updating, and deleting contacts.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nOnAfterCrmContactAdd\nOnAfterCrmContactUpdate\nOnBeforeCrmContactDelete\nOnBeforeCrmContactAdd\nOnBeforeCrmContactUpdate\nOnAfterExternalCrmContactAdd\nOnAfterCrmContactDelete\n```\n\n----------------------------------------\n\nTITLE: CLAnswer::Add Method Signature\nDESCRIPTION: Defines the method signature for adding a new answer, accepting an array of fields and returning an integer representing the new answer's ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLAnswer/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nint CLAnswer::Add(array arFields);\n```\n\n----------------------------------------\n\nTITLE: Handling CRM Company Events in PHP\nDESCRIPTION: Events related to CRM companies, including adding, updating, and deleting companies.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nOnAfterCrmCompanyAdd\nOnAfterCrmCompanyUpdate\nOnBeforeCrmCompanyDelete\nOnBeforeCrmCompanyAdd\nOnBeforeCrmCompanyUpdate\nOnAfterCrmCompanyDelete\nOnAfterExternalCrmCompanyAdd\n```\n\n----------------------------------------\n\nTITLE: Defining Cache Type\nDESCRIPTION: This PHP code shows an example of defining the BX_CACHE_TYPE constant, which specifies the caching mechanism to be used by Bitrix. In this example, 'memcache' is selected as the caching type.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Monitor_proizvoditel'nosti/Instruktsija_po_nastrojke_keshirovanija.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n\"define(\\\"BX_CACHE_TYPE\\\", \\\"memcache\\\");Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CWiki::GetElementById in PHP\nDESCRIPTION: Definition of the CWiki::GetElementById static method which retrieves a Wiki page by its ID and additional filter parameters. The method accepts an ID and a filter array as parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/GetElementById.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCWiki::GetElementById(\n\tint ID,\n\tarray arFilter\n);\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CBlogImage::Add in PHP\nDESCRIPTION: The method signature for adding a new image to a blog post. It accepts an array of fields as a parameter and returns an integer ID of the newly created image or false on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogImage/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCBlogImage::Add(\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: CFormResult::Add Method Signature in PHP\nDESCRIPTION: Method signature for CFormResult::Add which creates a new web form result. It accepts form ID, values array, rights checking flag, and user ID parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nmixed\nCFormResult::Add(\n\tint form_id,\n\tarray values = false,\n\tstring check_rights = \"Y\",\n\tint user_id = false\n)\n```\n\n----------------------------------------\n\nTITLE: Statistics Collection Method Definition\nDESCRIPTION: This code block shows the method signature for `CStatistics::Keep`. It takes a boolean parameter `handle_call` that determines whether to ignore the `STOP_STATISTICS` constant and proceed with statistics collection.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatistics/Keep.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCStatistics::Keep(\n\tbool handle_call = false\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: CWikiParser::parseBeforeSave Method Signature\nDESCRIPTION: This code snippet shows the method signature of `CWikiParser::parseBeforeSave`. It accepts a string `text` representing the Wiki page content and an array `arCat` passed by reference, which will be populated with categories found in the text. It returns a string, which is the processed content of the Wiki page.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWikiParser/parseBeforeSave.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCWikiParser::parseBeforeSave(\n\tstring text,\n\tarray &arCat\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Course Permission Check\nDESCRIPTION: Demonstrates checking user's course access and displaying a conditional message based on permission level\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/IsHaveCourse.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CCourse::IsHaveCourse($MIN_PERMISSION = \"W\"))\n{\n\techo \"You are a teacher!\";\n}\nelse\n{\n\techo \"Access denied!\";\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: CPosting::GetEmails Method Definition\nDESCRIPTION: This code snippet shows the method signature for the CPosting::GetEmails method, which accepts an array of issue fields and returns an array of email addresses.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/GetEmails.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\narray\nCPosting::GetEmails(\n\tarray post_arr\n);\n\n```\n\n----------------------------------------\n\nTITLE: Example of GetKeywords Return Array\nDESCRIPTION: This code illustrates the structure of the array returned by the GetKeywords method. The array is multi-dimensional, organizing keywords by advertising type (e.g., LEFT, TOP), logical requirement (REQUIRED, DESIRED), and matching type (Y for exact, N for partial). This structure defines the criteria for matching keywords with banners.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Reklama,_bannery/Klassy/CAdvBanner/GetKeywords.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nArray\n(\n\t[LEFT] => Array\n\t(\n\t\t[REQUIRED] => Array\n\t\t(\n\t\t\t[Y] => Array\n\t\t\t(\n\t\t\t\t[0] => GeForce\n\t\t\t\t[1] => Radion\n\t\t\t\t[2] => AverTV\n\t\t\t\t[3] => Sony\n\t\t\t)\n\t\t)\n\t)\n\t[TOP] => Array\n\t(\n\t\t[DESIRED] => Array\n\t\t(\n\t\t\t[N] => Array\n\t\t\t(\n\t\t\t\t[0] => BMW\n\t\t\t\t[1] => top soft\n\t\t\t\t[2] => печать\n\t\t\t)\n\t\t)\n\t)\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Generating Checkbox Field in CForm - PHP\nDESCRIPTION: This method generates HTML code for a checkbox input, identified by the question_sid, allowing multiple selections for a form response. It can be used when creating or editing form responses.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetCheckBoxField.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCForm::GetCheckBoxField(\n\tstring question_sid,\n\tint answer_id,\n\tmixed value = \"\",\n\tstring add_to_checkbox = \"class=\\\"inputcheckbox\\\"\"\n)\n```\n\n----------------------------------------\n\nTITLE: Disabling Folder Permissions in Bitrix Disk\nDESCRIPTION: Demonstrates how to disable specific permissions for a folder, available from Disk module version 17.0.2.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php \n\tif ($folder) \n\t{ \n\t\t$rightsManager = \\Bitrix\\Disk\\Driver::getInstance()->getRightsManager(); \n\t\t$accessTaskId = $rightsManager->getTaskIdByName($rightsManager::TASK_READ);//чтение \n\t\t//$accessTaskId = $rightsManager->getTaskIdByName($rightsManager::TASK_EDIT);//изменение \n\t\t//$accessTaskId = $rightsManager->getTaskIdByName($rightsManager::TASK_ADD);//добавление \n\t\t//$accessTaskId = $rightsManager->getTaskIdByName($rightsManager::TASK_FULL);//полные права \n             \n\t\t$newFolder = $folder->addSubFolder( \n\t\t\tarray( 'NAME' => 'New folder',  'CREATED_BY' => 1), \n\t\t\tarray( \n\t\t\t\tarray( \n\t\t\t\t\t'NEGATIVE' => true, \n\t\t\t\t\t'ACCESS_CODE' => 'U10', \n\t\t\t\t\t'TASK_ID' => $accessTaskId, \n\t\t\t\t), \n\t\t\t) \n\t\t); \n\t}\n```\n\n----------------------------------------\n\nTITLE: GetNumberFilter Method Signature\nDESCRIPTION: Defines the syntax of the GetNumberFilter method. The method generates HTML input fields for filtering numeric values within a specified range.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetNumberFilter.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"string\\nCForm::GetNumberFilter(\\n\\tint filter_sid,\\n\\tint size = \\\"10\\\",\\n\\tstring add_to_text = \\\"class=\\\\\\\"inputtext\\\\\\\"\\\"\\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: CBlog::Add Method Signature in PHP\nDESCRIPTION: The method signature for adding a new blog in Bitrix Framework. It accepts an array of blog fields and returns the new blog's ID if successful or false on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCBlog::Add(\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Forum Message Details in PHP using CForumMessage::GetByID\nDESCRIPTION: This method retrieves an array of message parameters by its ID. It takes the message ID as a required parameter and an optional array of additional parameters. The method returns false if the message is not found.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Forum/Klassy/CForumMessage/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCForumMessage::GetByID(\n\tint ID,\n\tarray arAddParams = Array()\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Blog User Parameters with CBlogUser::Update in PHP\nDESCRIPTION: This method updates the parameters of a blog user with the given ID. It takes an ID and an array of fields as parameters, and returns the ID of the updated user or false on error.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCBlogUser::Update(\n\tint   ID\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Example of AutoSend Using Agent (PHP)\nDESCRIPTION: This snippet demonstrates how to schedule the AutoSend method using an agent in Bitrix. It includes the necessary parameters for ID and timing for execution.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/AutoSend.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?\n\tCAgent::AddAgent(\"CPosting::AutoSend(\".$ID.\",true);\", \"subscribe\", \"N\", 0, $post_arr[\"AUTO_SEND_TIME\"], \"Y\", $post_arr[\"AUTO_SEND_TIME\"]);\n?>\n<p class=\"notetext\">Для отправки выпуска был создан агент.</p>\n```\n\n----------------------------------------\n\nTITLE: Using CFormOutput::ShowInput in a Bitrix Template\nDESCRIPTION: A simple example showing how to use the ShowInput method to render a form field with identifier 'MYFIELD_5' in a Bitrix template.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowInput.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?=$FORM->ShowInput('MYFIELD_5')?>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Subscription by ID in Bitrix\nDESCRIPTION: This code snippet demonstrates how to retrieve a subscription object by its ID using the `CSubscription::GetByID` method.  The method returns a `CDBResult` object, from which the subscription fields can be extracted.  The ID parameter is the identifier of the subscription to retrieve.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscriptionGeneral/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCSubscription::GetByID(\n\tint ID\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: Checking test completion status with CTestAttempt::IsTestCompleted in PHP\nDESCRIPTION: This PHP code snippet demonstrates how to use the `CTestAttempt::IsTestCompleted` method to check if a test has been completed.  It includes the learning module, sets the attempt ID and required percentage, calls the method, and outputs a message based on the result. The code requires the `learning` module to be installed and the specified `$ATTEMPT_ID` to be a valid attempt ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CTestAttempt/IsTestCompleted.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$ATTEMPT_ID = 563;\n\t$PERCENT = 30;\n\t$complete = CTestAttempt::IsTestCompleted($ATTEMPT_ID, $PERCENT);\n\tif ($complete)\n\t\techo \"Test has been completed\";\n\telse\n\t\techo \"Try again\";\n}\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Including the Idea Manager Module in Bitrix D7\nDESCRIPTION: Code snippet showing how to check if the Idea Manager module is installed and include it in your project using the Loader class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Menedzher_idej.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule('idea');\n```\n\n----------------------------------------\n\nTITLE: Adding Property Bar Handler in JavaScript\nDESCRIPTION: Registers a handler function to be called when the property bar is displayed for an element with the specified tag name.  The handler is responsible for generating the UI elements for editing the properties of the selected element in the visual editor. It utilizes `oBXEditorUtils` methods for accessing and modifying element properties.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/addPropertyBarHandler.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"void\noBXEditorUtils.addPropertyBarHandler(\n\tstring tagname,\n\tfunction handler\n);Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Defining AutoSend Method in CPosting Class (PHP)\nDESCRIPTION: This snippet defines the AutoSend method for sending newsletter issues via cron or agents in Bitrix. The method is static and accepts parameters for ID, limit, and site_id, determining which issues to send based on specified criteria.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/AutoSend.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCPosting::AutoSend(\n\tint ID = false,\n\tbool limit = false,\n\tstring site_id = false\n);\n```\n\n----------------------------------------\n\nTITLE: GetFileList Method Signature\nDESCRIPTION: This code snippet shows the signature of the `CPosting::GetFileList` method. It takes the ID of the issue and an optional file ID as parameters and returns a `CDBResult` object.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/GetFileList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"CDBResult\nCPosting::GetFileList(\n\tint ID,\n\tint file_id = false\n);\"\n```\n\n----------------------------------------\n\nTITLE: Loading the Conversion Module in Bitrix D7\nDESCRIPTION: Code snippet for checking and including the Conversion module in a Bitrix project. This is a required step before using any functionality of the Conversion module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Konversija.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule(\n\t'conversion'\n);\n```\n\n----------------------------------------\n\nTITLE: SetDefaultPage Method Signature in CWiki Class (PHP)\nDESCRIPTION: Method signature for SetDefaultPage which establishes a default Wiki page. This is a non-static method that takes an InfoBlock ID and page name as parameters and returns a boolean value indicating success or failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/SetDefaultPage.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCWiki::SetDefaultPage(\n\tint IBLOCK_ID,\n\tstring NAME\n);\n```\n\n----------------------------------------\n\nTITLE: Method Signature for Adding Blog Comments in Bitrix\nDESCRIPTION: The method signature for CBlogComment::Add which adds a new comment to a blog post. It takes an array of field values as parameter and returns the ID of the newly created comment or false on error.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogComment/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCBlogComment::Add(\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CCourse GetByID\nDESCRIPTION: Retrieves course details by ID. Returns a CDBResult object with course fields. Requires learning module to be included.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCCourse::GetByID(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Forum Smile Parameters in PHP\nDESCRIPTION: This method updates the parameters of an existing smile with the given ID. It takes the smile ID and an array of new field values as parameters. Returns the ID of the updated smile or False on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Forum/Klassy/CForumSmile/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nUpdate(\n\tint ID,\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Example Usage of SetPostPerms Method in PHP\nDESCRIPTION: This example demonstrates how to use the SetPostPerms method to set read and write permissions for different user groups on comment access for a specific blog post.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/SetPostPerms.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$ID = 1;\n$arPerms = Array(\n\t\"1\" => BLOG_PERMS_READ,\n\t\"2\" => BLOG_PERMS_WRITE\n);\nCBlogPost::SetPostPerms($ID, $arPerms, BLOG_PERMS_COMMENT);\n?>\n```\n\n----------------------------------------\n\nTITLE: CFormField::Set Method Signature (PHP)\nDESCRIPTION: This snippet shows the signature of the CFormField::Set method, which is used to either add a new form question/field or update an existing one. It returns the ID of the updated/added question/field if successful, or 'false' otherwise.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormField/Set.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"mixed\nCFormField::Set(\n\tarray fields,\n\tmixed field_id = false,\n\tstring check_rights = \\\"Y\\\"\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Getting Top Slider in Bitrix\nDESCRIPTION: Returns the currently open slider as an instance of BX.SidePanel.Slider class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.getTopSlider()\n```\n\n----------------------------------------\n\nTITLE: CTestAttempt::IsTestCompleted Method Signature\nDESCRIPTION: This code snippet shows the method signature for `CTestAttempt::IsTestCompleted`. It takes the attempt ID and a percentage as input, and returns a boolean value indicating whether the test has been completed or not.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CTestAttempt/IsTestCompleted.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nbool\nCTestAttempt::IsTestCompleted(\n\tint ATTEMPT_ID\n\tint PERCENT\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: CForm::GetDropDownFilter Method Definition\nDESCRIPTION: Defines the signature and parameters of the `GetDropDownFilter` method within the `CForm` class. This method generates an HTML dropdown for filtering web form results based on answer values.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetDropDownFilter.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"string\nCForm::GetDropDownFilter(\n\tint field_id,\n\tstring parameter_type,\n\tstring filter_sid,\n\tstring add_to_dropdown = \\\"class=\\\\\\\"inputselect\\\\\\\"\\\"\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Currency Language Properties with CCurrencyLang::Delete\nDESCRIPTION: This code snippet represents the method CCurrencyLang::Delete that is used to delete language-dependent properties of a currency for a specific language. It takes the currency code and language code as input and returns a boolean value indicating the success of the deletion. Requires Bitrix environment for execution.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Valjuty/Klassy/CCurrencyLang/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nbool\nCCurrencyLang::Delete(\n\tstring currency, \n\tstring lang\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: Including the Bitrix Report Module in PHP\nDESCRIPTION: Code snippet that demonstrates how to properly connect the Report module before using it. This check ensures the module is available and loads it into the current execution context.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Konstruktor_otchetov.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule(\n\t'report'\n);\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CFormResult::GetDataByIDForHTML in PHP\nDESCRIPTION: The method signature for GetDataByIDForHTML which returns an array of values for answers to web form questions and optionally form field values for a specified result.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetDataByIDForHTML.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCFormResult::GetDataByIDForHTML(\n\tint result_id,\n\tstring get_fields = \"N\"\n)\n```\n\n----------------------------------------\n\nTITLE: CSearcher::GetByID Signature\nDESCRIPTION: Defines the signature for the CSearcher::GetByID method.  The method takes an integer searcher_id as input and returns a CDBResult object containing data about the search engine. This object must be fetched to get an associative array.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CSearcher/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCSearcher::GetByID(\n\tint searcher_id\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Using ShowFormFooter in Form Templates\nDESCRIPTION: Example of how to use the ShowFormFooter method in a form template. This code is automatically added to the end of templates created with the form editor.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowFormFooter.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?=$FORM->ShowFormFooter()?>\n```\n\n----------------------------------------\n\nTITLE: Usage Example of ShowInputCaptionImage in PHP\nDESCRIPTION: Example of how to use the ShowInputCaptionImage method to display an image attached to a form field with specified parameters for alignment, dimensions, and spacing.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowInputCaptionImage.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?=$FORM->ShowInputCaptionImage('MYFIELD_5', 'LEFT', 50, 50, \"N\", \"\", 5, 5)?>\n```\n\n----------------------------------------\n\nTITLE: Defining Class Types in CWebServiceDesc\nDESCRIPTION: Example of defining class types for a web service. The SOAP server deserializes these types into instances of the described classes at runtime.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-servisy/Klassy/CWebServiceDesc.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$wsdesc->classTypes[\"ИмяКласса\"] = \n\tarray(\n\t\t\"ИмяПоля\" => array(\"varType\" => \"ТипДанных\"),\n\t\t...\n\t);\n```\n\n----------------------------------------\n\nTITLE: Return Value Structure of GetDataByID Method\nDESCRIPTION: The structure of the array returned by the GetDataByID method, showing how question answers are organized by question identifiers with detailed information about each answer.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetDataByID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nArray\n(\n\t[символьный идентификатор вопроса 1] => массив описывающий ответы на вопрос 1\n\t\tArray\n\t\t(\n\t\t\t[0] => массив описывающий ответ 1\n\t\t\t\tArray\n\t\t\t\t(\n\t\t\t\t\t[RESULT_ID]           => ID результата\n\t\t\t\t\t[FIELD_ID]            => ID вопроса\n\t\t\t\t\t[SID]                 => символьный идентификатор вопроса\n\t\t\t\t\t[TITLE]               => текст вопроса\n\t\t\t\t\t[TITLE_TYPE]          => тип текста вопроса [text|html]\n\t\t\t\t\t[FILTER_TITLE]        => заголовок поля фильтра\n\t\t\t\t\t[RESULTS_TABLE_TITLE] => заголовок столбца таблицы результатов\n\t\t\t\t\t[ANSWER_ID]           => ID ответа\n\t\t\t\t\t[ANSWER_TEXT]         => параметр ответа ANSWER_TEXT\n\t\t\t\t\t[ANSWER_VALUE]        => параметр ответа ANSWER_VALUE\n\t\t\t\t\t[USER_TEXT]           => текст введенный с клавиатуры\n\t\t\t\t\t[USER_DATE]           => введенная дата (если FIELD_TYPE=date)\n\t\t\t\t\t[USER_FILE_ID]        => ID файла (если FIELD_TYPE=[file|image])\n\t\t\t\t\t[USER_FILE_NAME]      => имя файла\n\t\t\t\t\t[USER_FILE_IS_IMAGE]  => \"Y\" - FIELD_TYPE=image; \"N\" - FIELD_TYPE=file \n\t\t\t\t\t[USER_FILE_HASH]      => хэш файла (если FIELD_TYPE=file)\n\t\t\t\t\t[USER_FILE_SUFFIX]    => суффикс к расширению файла (если FIELD_TYPE=file)\n\t\t\t\t\t[USER_FILE_SIZE]      => размер файла (если FIELD_TYPE=[file|image])\n\t\t\t\t\t[FIELD_TYPE]          => тип ответа\n\t\t\t\t\t[FIELD_WIDTH]         => ширина поля ответа\n\t\t\t\t\t[FIELD_HEIGHT]        => высота поля ответа\n\t\t\t\t\t[FIELD_PARAM]         => параметр поля ответа\n\t\t\t\t)\n\t\t\t[1] => массив описывающий ответ 2\n\t\t\t[2] => массив описывающий ответ 3\n\t\t\t...\n\t\t\t[N-1] => массив описывающий ответ N\n\t\t)\n\t[символьный идентификатор вопроса 2] => массив описывающий ответы на вопрос 2\n\t[символьный идентификатор вопроса 3] => массив описывающий ответы на вопрос 3\n\t...\n\t[символьный идентификатор вопроса N] => массив описывающий ответы на вопрос N\n)\n```\n\n----------------------------------------\n\nTITLE: Generating Column Tree for Report Fields in PHP\nDESCRIPTION: Method to construct a tree of available report fields with their metadata, loaded names, and entity chain bindings. Used primarily in report constructors for field selection interfaces.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Konstruktor_otchetov/Klassy/CReport/generateColumnTree.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ngenerateColumnTree($chains, $initEntity, $helper_class, $level = 0);\n```\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// Get base entity name using helper class method\n$entityName = call_user_func(array($arParams['REPORT_HELPER_CLASS'], 'getEntityName'));\n\n// Get base entity field descriptions\n$entityFields = call_user_func(array($arParams['REPORT_HELPER_CLASS'], 'getColumnList'));\n\n// Generate chains of available report fields\n$chains = CReport::generateChains($entityFields, $entity, '');\n\n// Create field tree with metadata and bindings\n$fieldsTree = CReport::generateColumnTree($chains, $entity, $arParams['REPORT_HELPER_CLASS']);\n?>\n```\n\n----------------------------------------\n\nTITLE: Including the Recyclebin Module in Bitrix\nDESCRIPTION: Code snippet showing how to check if the recyclebin module is installed and include it in your Bitrix project using the Loader class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Korzina_udalennyh_suschnostej.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule('recyclebin');\n```\n\n----------------------------------------\n\nTITLE: Initializing Bitrix E-commerce Module in PHP\nDESCRIPTION: Code example showing how to check for and include the Bitrix e-commerce ('sale') module before using its functions. This is a required initialization step.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\nif (CModule::IncludeModule(\"sale\"))\n{\n\t//здесь можно использовать функции модуля\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Blog using CBlog::Delete in PHP\nDESCRIPTION: This method deletes a blog with the given ID and all associated objects. It takes an integer ID as a parameter and returns a boolean indicating success or failure. The method is non-static.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCBlog::Delete(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Bitrix Subscription Module\nDESCRIPTION: This code snippet checks if the 'subscribe' module is installed and includes it. If the module is successfully included, you can then use the module's functions and classes within the specified block.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\nif(CModule::IncludeModule(\"subscribe\"))\n{\n\t//здесь можно использовать функции и классы модуля\n} \n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: CBlog::Update Method Signature\nDESCRIPTION: Method signature for updating blog parameters. It takes a blog ID and an array of fields to update. This is a non-static method that modifies blog parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCBlog::Update(\n\tint   ID\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: CStatEventType::GetByEvents Definition\nDESCRIPTION: Defines the signature of the CStatEventType::GetByEvents method. This method retrieves a CDBResult object representing an event type based on two provided event identifiers (event1 and event2).\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEventType/GetByEvents.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"CDBResult\nCStatEventType::GetByEvents(\n\tstring event1,\n\tstring event2\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: CFormOutput::ShowInput Method Signature in PHP\nDESCRIPTION: The method signature for ShowInput which inserts answer fields into a form template. The method requires a field identifier and optionally accepts a CSS class parameter for styling the input label.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowInput.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCFormOutput::ShowInput(\n\tstring $FIELD_SID[, \n\tstring $CSSClass = \"\"]\n);\n```\n\n----------------------------------------\n\nTITLE: Global Desktop Event Listener (JavaScript)\nDESCRIPTION: This JavaScript code sets up a global event listener for desktop versions to capture all events. It logs the module ID, command, and parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull.md#2025-04-20_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.addCustomEvent(\"onPullEvent\", BX.delegate(function(module_id,command,params){\n\tconsole.log(module_id, command, params);\n}, this));\n```\n\n----------------------------------------\n\nTITLE: Retrieving Blog Comment Data with CBlogComment::GetByID in PHP\nDESCRIPTION: Method signature for retrieving blog comment data by ID. The method returns an array containing all comment fields for the specified comment ID. This method utilizes built-in caching to minimize database queries.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogComment/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCBlogComment::GetByID(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Defining Memcached Host\nDESCRIPTION: This PHP code demonstrates how to define the BX_MEMCACHE_HOST constant, which specifies the address of the Memcached server. This is necessary for Bitrix to connect to the Memcached instance.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Monitor_proizvoditel'nosti/Instruktsija_po_nastrojke_keshirovanija.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n\"define(\\\"BX_MEMCACHE_HOST\\\", \\\"192.168.0.43\\\"); \\nКопировать\"\n```\n\n----------------------------------------\n\nTITLE: Method Definition for GetBlogUserCommentPerms in CBlogPost Class (PHP)\nDESCRIPTION: The method signature for GetBlogUserCommentPerms which returns a string representing the permission level a user has for commenting on a specific blog post. It takes two parameters: the post ID and the user ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/GetBlogUserCommentPerms.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCBlogPost::GetBlogUserCommentPerms(\n\tint ID,\n\tint userID\n);\n```\n\n----------------------------------------\n\nTITLE: Example of Array Returned by GetDataByIDForHTML Method\nDESCRIPTION: An example of the array structure returned by the GetDataByIDForHTML method, showing field values with keys that correspond to HTML field naming rules.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/GetDataByIDForHTML.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nArray\n(\n\t[form_text_586] => Иванов Иван Иванович\n\t[form_date_587] => 10.03.1992\n\t[form_textarea_588] => г. Мурманск\n\t[form_radio_VS_MARRIED] => 589\n\t[form_checkbox_VS_INTEREST] => Array\n\t\t(\n\t\t\t[0] => 592\n\t\t\t[1] => 593\n\t\t\t[2] => 594\n\t\t)\n\t[form_dropdown_VS_AGE] => 597\n\t[form_multiselect_VS_EDUCATION] => Array\n\t\t(\n\t\t\t[0] => 603\n\t\t\t[1] => 604\n\t\t)\n\t[form_text_606] => 2345\n\t[form_image_607] => 1045\n)\n```\n\n----------------------------------------\n\nTITLE: Using GetNumberFilter in HTML Form\nDESCRIPTION: Demonstrates how to integrate the GetNumberFilter method within an HTML form to create numeric input fields for filtering data. The generated HTML includes two input fields to specify a numeric range for the filter.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetNumberFilter.md#2025-04-20_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n\"<form name=\\\"form1\\\" action=\\\"\\\" method=\\\"POST\\\">\\n<table>\\n\\t<tr>\\n\\t\\t<td>Возраст:</td>\\n\\t\\t<td><?\\n\\t\\t\\techo CForm::GetNumberFilter(\\n\\t\\t\\t\\t\\\"ANKETA_AGE_USER_integer\\\", \\n\\t\\t\\t\\t\\\"10\\\", \\n\\t\\t\\t\\t\\\"class=\\\\\\\"inputtext\\\\\\\"\\\"\\n\\t\\t\\t);\\n\\t\\t?></td>\\n\\t</tr>\\n</table>\\n<input type=\\\"submit\\\" value=\\\"Фильтр\\\">\\n</form>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: CBlogComment::Delete Method Signature for Removing Blog Comments in PHP\nDESCRIPTION: Method signature for deleting a blog comment with the specified ID. This is a non-static method that returns a boolean value indicating success or failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogComment/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCBlogComment::Delete(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: CWiki::Recover Method Signature in PHP\nDESCRIPTION: Method signature for the Recover method of the CWiki class. This non-static method restores a Wiki page from history based on the provided history record ID, Wiki page ID, and Infoblock ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/Recover.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCWiki::Recover(\n\tint HISTORY_ID,\n\tint ID,\n\tint IBLOCK_ID\n);\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CBlogPost::GetBlogUserPostPerms in PHP\nDESCRIPTION: This code shows the method signature for GetBlogUserPostPerms. The method takes a post ID and user ID as parameters and returns a string representing the user's permission level for the specified blog post.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/GetBlogUserPostPerms.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCBlogPost::GetBlogUserPostPerms(\n\tint ID,\n\tint userID\n);\n```\n\n----------------------------------------\n\nTITLE: Using DeleteFromUserGroup Method to Remove User from Blog Groups (PHP)\nDESCRIPTION: This example demonstrates how to use the DeleteFromUserGroup method to remove the current user from all user groups of a blog with ID 1. It uses BLOG_BY_USER_ID as the select type and handles potential exceptions.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/DeleteFromUserGroup.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// удалим текущего пользователя из всех групп пользователей блога с ID = 1\n$ID = $USER->GetID();\nif(!CBlogUser::DeleteFromUserGroup($ID, 1, BLOG_BY_USER_ID))\n{\n\tif ($ex = $APPLICATION->GetException())\n\t\techo $ex->GetString();\n}\nelse\n{\n\techo 'Пользователь ['.$ID.'] удален из групп пользователей блога';\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Banner Type with CAdvType::Delete in PHP\nDESCRIPTION: This code snippet shows the signature of the `CAdvType::Delete` method, which is used to delete a banner type and all associated banners in Bitrix. The method is non-static and requires the banner type's symbolic identifier. It also includes an optional parameter to check user rights.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Reklama,_bannery/Klassy/CAdvType/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"boolean\nCAdvType::Delete(\n\tvarchar(255) TYPE_SID,\n\tchar(1) CHECK_RIGHTS=\\\"Y\\\"\n);Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Method Signature for Course Permission Check\nDESCRIPTION: Static method to determine if a user has minimum access rights to any course. Checks permission level with default 'W' (write) access.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/IsHaveCourse.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool CCourse::IsHaveCourse(string MIN_PERMISSION = \"W\");\n```\n\n----------------------------------------\n\nTITLE: Getting Slider by Iframe Window in Bitrix\nDESCRIPTION: Retrieves a slider instance associated with a specific iframe window object.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.getSliderByWindow(window)\n```\n\n----------------------------------------\n\nTITLE: Generating HTML Date Input Field with CForm in PHP\nDESCRIPTION: This snippet defines the CForm::GetDateField method, which generates an HTML input field for date entry. It allows customization of field properties such as value, size, and additional HTML parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetDateField.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCForm::GetDateField(\n\tint answer_id,\n\tstring html_form_name,\n\tstring value = \"\",\n\tmixed size = \"\",\n\tstring add_to_text = \"class=\\\"inputtext\\\"\"\n)\n```\n\n----------------------------------------\n\nTITLE: Handling CRM Recycle Bin Events in PHP\nDESCRIPTION: Events related to CRM recycle bin operations, including moving to bin, recovering from bin, and erasing from bin.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\nOnAfterMoveToRecycleBin\nOnAfterRecoverFromRecycleBin\nOnAfterEraseFromRecycleBin\n```\n\n----------------------------------------\n\nTITLE: Executing Form Validator in Bitrix CFormValidator Class\nDESCRIPTION: This method executes a validator for the given answer values as applied to a question. It's a non-static method that validates form input according to the specified validator configuration.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormValidator/Execute.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCFormValidator::Execute(\n\tarray arValidator,\n\tarray arQuestion,\n\tarray arAnswers,\n\tarray arValues,\n)\n```\n\n----------------------------------------\n\nTITLE: Subquery Transformation in GetList\nDESCRIPTION: Shows how the SUBQUERY filter is transformed inside the GetList method of CIBlockElement class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Informatsionnye_bloki/Klassy/CIBlockElement/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nID => CIBlockElement::SubQuery($filter['SUBQUERY']['FIELD'], $filter['SUBQUERY']['FILTER'])\n```\n\n----------------------------------------\n\nTITLE: Using CBlogCandidate Class Methods in PHP\nDESCRIPTION: The CBlogCandidate class offers four main methods: Add for adding a user to the friend request list, Delete for removing a friend request, GetByID for retrieving information about a specific candidate, and GetList for obtaining a list of all candidates.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogCandidate.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCBlogCandidate::Add();\nCBlogCandidate::Delete();\nCBlogCandidate::GetByID();\nCBlogCandidate::GetList();\n```\n\n----------------------------------------\n\nTITLE: Using GetList Method to Fetch Responses\nDESCRIPTION: This example demonstrates how to call the GetList method to fetch responses for a specific question ID, applying various filters such as ID, active status, and message content. The fetched responses are then printed in a readable format.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormAnswer/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$QUESTION_ID = 143; // ID вопроса\n// сформируем массив фильтра\n$arFilter = Array(\n\t\"ID\"                      => \"589 | 590\", // ID ответа равен 589 или 590\n\t\"ID_EXACT_MATCH\"          => \"Y\",         // точное совпадение для ID\n\t\"ACTIVE\"                  => \"Y\",         // флаг активности\n\t\"MESSAGE\"                 => \"да | нет\",  // параметр ANSWER_TEXT равен \"да\" или \"нет\"\n\t\"MESSAGE_EXACT_MATCH\"     => \"Y\",         // точное совпадение для MESSAGE\n\t\"FIELD_TYPE\"              => \"radio\",     // тип поля ответа - radio-кнопка\n\t\"FIELD_TYPE_EXACT_MATCH\"  => \"Y\",         // точное совпадение для FIELD_TYPE\n\t\"FIELD_PARAM\"             => \"checked\",   // параметр включает в себя строку \"checked\"\n\t\"FIELD_PARAM_EXACT_MATCH\" => \"N\"          // вхождение для FIELD_PARAM\n);\n// получим список всех ответов вопроса #143\n$rsAnswers = CFormAnswer::GetList(\n\t$QUESTION_ID, \n\t$by=\"s_id\", \n\t$order=\"desc\", \n\t$arFilter, \n\t$is_filtered\n);\nwhile ($arAnswer = $rsAnswers->Fetch())\n{\n\techo \"<pre>\"; print_r($arAnswer); echo \"</pre>\";\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: ReindexModule Method Signature\nDESCRIPTION: A static method of CSearch class to trigger module reindexing. Requires the module to have a registered OnReIndex event handler. Cannot reindex the 'main' module directly.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Poisk/Klassy/CSearch/ReindexModule.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nvoid CSearch::ReindexModule(\n\tstring MODULE_ID,\n\tbool bFull = false\n);\n```\n\n----------------------------------------\n\nTITLE: Get Custom Node Parameters in PHP\nDESCRIPTION: The `getCustomNodeParams` method returns an array of parameters for a custom node in the visual editor. The structure and type of the array (associative/non-associative) depend on the properties defined for the element during creation or use. It is typically utilized when dealing with custom taskbar implementations in Bitrix.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/getCustomNodeParams.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"array\noBXEditorUtils.getCustomNodeParams(\n\tobject pNode\n);\"\n```\n\n----------------------------------------\n\nTITLE: Global Event Emission\nDESCRIPTION: This snippet shows how to globally emit an event using Event.EventEmitter. It will trigger all handlers subscribed to the specified event.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nEvent.EventEmitter\n\t.emit('BX.UI.Button:click');\n```\n\n----------------------------------------\n\nTITLE: GetPasswordField Method Definition\nDESCRIPTION: This code snippet shows the definition of the `GetPasswordField` method in the `CForm` class. It returns the HTML code for a single-line text field designated for password input. The method takes answer ID, default value, field size, and additional HTML attributes as parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetPasswordField.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"string\nCForm::GetPasswordField(\n\tint answer_id,\n\tstring value = \\\"\\\",\n\tmixed size = \\\"\\\",\n\tstring add_to_text = \\\"class=\\\\\\\"inputtext\\\\\\\"\\\"\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Validator Description Method in PHP for Bitrix Forms\nDESCRIPTION: This function returns an associative array that describes a custom validator for Bitrix forms. It provides the validator's identifier, name, applicable field types, and the names of methods that handle settings and validation.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Sozdanie_sobstvennyh_validatorov_polej_veb-form.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nfunction GetDescription()\n{\n\treturn array(\n\t\t\"NAME\"            => \"custom_number_ex\",                                   // идентификатор\n\t\t\"DESCRIPTION\"     => \"Число в промежутке\",                                 // наименование\n\t\t\"TYPES\"           => array(\"text\", \"textarea\"),                            // типы полей\n\t\t\"SETTINGS\"        => array(\"CFormCustomValidatorNumberEx\", \"GetSettings\"), // метод, возвращающий массив настроек\n\t\t\"CONVERT_TO_DB\"   => array(\"CFormCustomValidatorNumberEx\", \"ToDB\"),        // метод, конвертирующий массив настроек в строку\n\t\t\"CONVERT_FROM_DB\" => array(\"CFormCustomValidatorNumberEx\", \"FromDB\"),      // метод, конвертирующий строку настроек в массив\n\t\t\"HANDLER\"         => array(\"CFormCustomValidatorNumberEx\", \"DoValidate\")   // валидатор\n\t);\n}\n```\n\n----------------------------------------\n\nTITLE: CForm::GetList Method Signature\nDESCRIPTION: This is the method signature for `CForm::GetList`. It returns a CDBResult object, and accepts parameters for sorting, filtering and user permissions.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCForm::GetList(\n\tstring &by = \"s_sort\",\n\tstring &order = \"asc\",\n\tarray filter = array(),\n\tbool &is_filtered,\n\tint min_permission = 10\n)\n```\n\n----------------------------------------\n\nTITLE: CBlogUser::AddToUserGroup Method Signature in PHP\nDESCRIPTION: Method signature for AddToUserGroup which adds a user to specified blog user groups. The method accepts parameters for user ID, blog ID, array of groups, join status, selection type, and action type.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/AddToUserGroup.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCBlogUser::AddToUserGroup(\n\tint    ID,\n\tint    blogID,\n\tarray  arGroups = array(),\n\tstring joinStatus = \"Y\",\n\tint    selectType = BLOG_BY_BLOG_USER_ID,\n\tint    action = BLOG_CHANGE\n);\n```\n\n----------------------------------------\n\nTITLE: Checking Slider Open Status in Bitrix\nDESCRIPTION: Method to determine if a side panel slider is currently displayed on the screen. Returns a boolean indicating the slider's visibility state.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/BX.SidePanel.Instance.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nBX.SidePanel.Instance.isOpen()\n```\n\n----------------------------------------\n\nTITLE: Usage Example of CBlogPost::GetBlogUserPostPerms in PHP\nDESCRIPTION: This example demonstrates how to check a user's permission level for a blog post with ID 1. It retrieves the current user's ID from the $USER object and passes it to the GetBlogUserPostPerms method, then displays the permission level.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/GetBlogUserPostPerms.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n$perms = CBlogPost::GetBlogUserPostPerms(1, $USER->GetID());\necho \"Вы имеете следующее право на сообщение: \".$perms;\n?>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Country using CSaleLocation in PHP\nDESCRIPTION: This method deletes a country with the given ID. Locations associated with this country are not modified. It returns true on successful deletion and false otherwise. The method is non-static.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/Klassy/CSaleLocation/DeleteCountry.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCSaleLocation::DeleteCountry(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Defining ShowFormNoteText Method in CFormOutput Class\nDESCRIPTION: Method signature for the ShowFormNoteText function in the CFormOutput class. This non-static method outputs unformatted informational messages from a form, such as 'Your application has been accepted'.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowFormNoteText.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCFormOutput::ShowFormNoteText(\n);\n```\n\n----------------------------------------\n\nTITLE: Global Event Listener with Condition (JavaScript)\nDESCRIPTION: This JavaScript code sets up a global event listener and checks if the module ID is 'test' and the command is 'check'. If both conditions are met, it logs 'Work!'.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull.md#2025-04-20_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.addCustomEvent(\"onPullEvent\", function(module_id,command,params) {\n\tif (module_id == \"test\" && command == 'check')\n\t{\n\t\tconsole.log('Work!');\n\t}\n});\n```\n\n----------------------------------------\n\nTITLE: Checking Stop List Entries - PHP\nDESCRIPTION: The CStopList::Check method is designed to check if the current visitor matches any criteria defined in the stop list. It can be called with parameters to specify the conditions for the check, including test entries and additional visitor parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStopList/Check.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\n// зададим параметры посетителя для которых мы хотим проверить попадание в стоп-лист\n$arParams = array(\n\t\"IP\" => \"192.168.0.1\",\n\t\"USER_AGENT\" => \"Firefox\"\n);\n$record_id = CStopList::Check(\"N\", $arParams);\nif (intval($record_id)>0) \n\techo \"Попадание в стоп-лист под параметры записи #\".intval($record_id);\n?>\n```\n\n----------------------------------------\n\nTITLE: Preparing Report Field Selection in PHP\nDESCRIPTION: Method that generates an alias and expression for a report field, considering selected report configuration options. It processes field selection, handles aggregation, and prepares database query selection parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Konstruktor_otchetov/Klassy/CReport/prepareSelectViewElement.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nprepareSelectViewElement($elem, $select, $is_init_entity_aggregated, $fList, $fChainList, $helper_class, Entity\\Base $entity);\n```\n\n----------------------------------------\n\nTITLE: CTaskItem getData Method Signature\nDESCRIPTION: This snippet shows the function signature for the getData method in the CTaskItem class. It returns an array of task data and accepts an optional boolean parameter to specify whether the returned data should be escaped.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskItem/getData.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\narray\npublic function getData(\n\t$isReturnEscapedData = true\n);\n\n```\n\n----------------------------------------\n\nTITLE: Defining GetList Method in CSession\nDESCRIPTION: The GetList method returns a list of sessions based on specified parameters. It allows sorting by various fields and filtering results according to provided criteria. This method requires the inclusion of relevant session functionality and expected parameters for optimal use.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CSession/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCSession::GetList(\n\tstring &by = \"s_id\",\n\tstring &order = \"desc\",\n\tarray filter = array(),\n\tbool &is_filtered\n)\n```\n\n----------------------------------------\n\nTITLE: Deleting task file relation\nDESCRIPTION: This example demonstrates how to use the CTaskFiles::Delete method to delete the relation between a task and a file.  It checks if the tasks module is included and if the current user is an admin before calling the method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskFiles/Delete.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?\nif (CModule::IncludeModule(\"tasks\"))\n{\n\t$TASK_ID = 4;\n\t$FILE_ID = 15;\n\tif($USER->IsAdmin())\n\t{\n\t\tCTaskFiles::Delete($TASK_ID, $FILE_ID);\n\t}\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Creating Web Service Method Parameters Array in PHP\nDESCRIPTION: Example structure for defining web service methods with their input and output parameters. This snippet shows how to properly format the classes array which defines methods, their visibility, parameters, and authentication requirements.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-servisy/Klassy/CWebServiceDesc.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$wsdesc->classes = array(\n\t\"Имя класса содержащего метод веб-сервиса\" => array(\n\t\t\"Название метода веб-сервиса\" => array(\n\t\t\t// означает что метод публичный\n\t\t\t\"type\"        => \"public\",                         \n\t\t\t\"name\"        => \"Название метода веб-сервиса\",\n\t\t\t// описание принимаемых методом параметров\n\t\t\t// \"strict\" => \"no\" - значит, что параметр не обязательный.\n             //                    Его можно не передавать в soap запросе.\n\t\t\t\"input\"        => array(\n\t\t\t\t// \"ТипДанных\" - название сложного или простого типа данных\n\t\t\t\t\"ИмяПараметра\" =>array(\"varType\" => \"ТипДанных\"[, \"strict\" => \"no\"]),\n\t\t\t\t// Так описываются параметры - массивы\n\t\t\t\t// varType - название массива (как типа данных, для xsd схемы)\n\t\t\t\t// arrType - тип элементов массива\n\t\t\t\t\"ИмяПараметра\" =>array(\n\t\t\t\t\t\"varType\" => \"ArrayOf\".\"ТипДанных\",\n\t\t\t\t\t\"arrType\" => \"ТипДанных\"\n\t\t\t\t),\n\t\t\t\t// Пример передачи сложных типов данных.\n\t\t\t\t// Сложные типы должны быть описаны в structTypes, classTypes\n\t\t\t\t\"ИмяПараметра\" =>array(\"varType\" => \"sGenTest\"),\n\t\t\t\t// Пример передачи массива сложного типа (структуры)\n\t\t\t\t\"ИмяПараметра\" =>array(\n\t\t\t\t\t\"varType\" => \"ArrayOfSGenTest\",\n\t\t\t\t\t\"arrType\" => \"sGenTest\"\n\t\t\t\t)\n\t\t\t... \n\t\t\t// описание исходящих параметров\n\t\t\t\"output\"    => array(\n\t\t\t\t// Здесь может быть описан только один исходящий параметр\n\t\t\t\t\"user\" => array(\"varType\" => \"ТипДанных\")\n\t\t\t),\n\t\t\t// требуется ли для вызова метода пройти HTTP Basic авторизацию.\n\t\t\t\"httpauth\" => \"Y или N\"\n\t\t),\n\t\t...\n\t),\n\t...\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Forum User Points with CForumUserPoints::Add in PHP\nDESCRIPTION: This method adds a new vote record to the forum visitors' voting table. It takes an associative array of field values as a parameter and returns the ID of the added record or false on error.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Forum/Klassy/CForumUserPoints/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCForumUserPoints::Add(\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Getting Manifest Data\nDESCRIPTION: This code snippet shows the method `getManifest()` used to retrieve an array describing the class. Note that the format of this array can arbitrarily change and is not intended for automated processing.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskItem.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"array\\npublic function getManifest();\"\n```\n\n----------------------------------------\n\nTITLE: Global Event Subscription for SidePanel Slider in JavaScript\nDESCRIPTION: Demonstrates how to globally subscribe to a SidePanel Slider event. This example listens for the 'onOpen' event and logs the slider object to the console.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Side_Panel/Sobytija.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nBX.addCustomEvent(\"SidePanel.Slider:onOpen\", function(event) {\n\tconsole.log(event.getSlider()); //получить объект слайдера\n});\n```\n\n----------------------------------------\n\nTITLE: CPostingTemplate Class Core Methods\nDESCRIPTION: The class offers key methods for template retrieval, existence checking, and generation of newsletter issues based on predefined templates.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingTemplate.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- GetList(): Returns list of templates\n- GetByID(): Retrieves template by identifier\n- IsExists(): Checks template directory existence\n- Execute(): Selects template for newsletter generation\n- AddPosting(): Generates newsletter issue from template\n```\n\n----------------------------------------\n\nTITLE: CIdeaManagmentIdeaComment::Bind() Method\nDESCRIPTION: This code snippet describes the Bind method of the CIdeaManagmentIdeaComment class. It marks a comment as an official response. The method is non-static and takes no input. It returns a boolean value.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Menedzher_idej/Klassy/CIdeaManagmentIdeaComment/Bind.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"function\nCIdeaManagmentIdeaComment::Bind();Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters for Stop List Check - PHP\nDESCRIPTION: This snippet outlines the parameters used in the CStopList::Check method, which allow for customizable checks against the stop list based on visitor details such as IP address and User-Agent.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStopList/Check.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nmixed\nCStopList::Check(\n\tstring test = \"N\",\n\tmixed params = false\n)\n```\n\n----------------------------------------\n\nTITLE: Example of Deleting an Image from a Wiki Page\nDESCRIPTION: This example demonstrates how to delete an image with ID 5 from a Wiki page with ID 13 in an infoblock with ID 2. It shows the instantiation of the CWiki class and the calling of the DeleteImage method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/DeleteImage.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\n// Удалим изображение с идентификатором 5 из страницы с идентификатором 13 из инфоблока с идентификатором 2\n$IMAGE_ID = 5;\n$ID = 13;\n$IBLOCK_ID = 2;\n$CWiki = new CWiki();\n$CWiki->DeleteImage($IMAGE_ID, $ID, $IBLOCK_ID);\n?>\n```\n\n----------------------------------------\n\nTITLE: Complete Usage Example of CFormResult::Update in PHP\nDESCRIPTION: A practical example showing how to update a form result with various field types including text, date, textarea, radio, checkbox, dropdown, multiselect, and file upload fields. The example demonstrates error handling as well.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/Update.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?\n// ID результата\n$RESULT_ID = 186;\n// массив описывающий загруженную на сервер фотографию\n$arImage = CFile::MakeFileArray($_SERVER[\"DOCUMENT_ROOT\"].\"/images/photo.gif\");\n// массив значений ответов и полей веб-формы\n$arValues = array (\n\t\"form_text_586\"                 => \"Иванов Иван\",    // \"Фамилия, имя, отчество\"\n\t\"form_date_587\"                 => \"01.06.1904\",     // \"Дата рождения\"\n\t\"form_textarea_588\"             => \"г. Москва\",      // \"Адрес\"\n\t\"form_radio_VS_MARRIED\"         => 590,              // \"Женаты/замужем?\"\n\t\"form_checkbox_VS_INTEREST\"     => array(612, 613),  // \"Увлечения\"\n\t\"form_dropdown_VS_AGE\"          => 601,              // \"Возраст\"\n\t\"form_multiselect_VS_EDUCATION\" => array(602, 603),  // \"Образование\"\n\t\"form_text_606\"                 => 300,              // \"Доход\"\n\t\"form_image_607\"                => $arImage,         // \"Фотография\"\n\t\"form_textarea_ADDITIONAL_149\"  => \"155 рублей\"      // \"Рассчитанная сумма\"\n)\n//обновим результат\nif (CFormResult::Update($RESULT_ID, $arValues, \"Y\"))\n{\n\techo \"Результат #\".$RESULT_ID.\" успешно обновлен.\";\n}\nelse\n{\n\tglobal $strError;\n\techo $strError;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: CPosting Update Method Usage Example\nDESCRIPTION: This PHP code demonstrates how to use the CPosting::Update method. It initializes the CPosting object, sets up the fields to be updated in an array, and then calls the Update method. If the update fails, it retrieves the error message.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/Update.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$posting = new CPosting;\n$arFields = Array(\n\t\"FROM_FIELD\" => $FROM_FIELD,\n\t\"TO_FIELD\" => $TO_FIELD,\n\t\"BCC_FIELD\" => $BCC_FIELD,\n\t\"EMAIL_FILTER\" => $EMAIL_FILTER,\n\t\"SUBJECT\" => $SUBJECT,\n\t\"BODY_TYPE\" => ($BODY_TYPE <> \"html\"? \"text\":\"html\"),\n\t\"BODY\" => $BODY,\n\t\"DIRECT_SEND\" => ($DIRECT_SEND <> \"Y\"? \"N\":\"Y\"),\n\t\"CHARSET\" => $CHARSET,\n\t\"SUBSCR_FORMAT\" => ($SUBSCR_FORMAT<>\"html\" && $SUBSCR_FORMAT<>\"text\"? false:$SUBSCR_FORMAT),\n\t\"RUB_ID\" => $RUB_ID,\n\t\"GROUP_ID\" => $GROUP_ID\n);\nif($STATUS <> \"\")\n{\n\tif($STATUS<>\"S\" && $STATUS<>\"E\" && $STATUS<>\"P\")\n\t\t$STATUS = \"D\";\n\t$arFields[\"STATUS\"] = $STATUS;\n\tif($STATUS == \"D\")\n\t{\n\t\t$arFields[\"DATE_SENT\"] = false;\n\t\t$arFields[\"SENT_BCC\"] = \"\";\n\t\t$arFields[\"ERROR_EMAIL\"] = \"\";\n\t}\n}\nif(!$posting->Update($ID, $arFields))\n\t$strError = $posting->LAST_ERROR;Копировать\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CLAnswer::GetByID in Bitrix\nDESCRIPTION: Demonstrates how to retrieve and display an answer's details by its ID, including module inclusion and result processing using GetNext() method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLAnswer/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$ANSWER_ID = 573;\n    \n\t$res = CLAnswer::GetByID($ANSWER_ID);\n\tif ($arAnswer = $res->GetNext())\n\t{\n\t\techo \"Name: \".$arAnswer[\"ANSWER\"];\n\t}\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: CTaskDependence::Add Method Signature\nDESCRIPTION: This code snippet shows the signature of the `CTaskDependence::Add` method. It takes an array of fields as input and returns a boolean value indicating success or failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/Ustarevshee/CTaskDependence/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCTaskDependence::Add(\n\tarray arFields\n);\n\n```\n\n----------------------------------------\n\nTITLE: Including Currency Module and Initializing JavaScript Library\nDESCRIPTION: This code snippet demonstrates how to include the 'currency' module in Bitrix and initialize the corresponding JavaScript library (BX.Currency) for currency formatting.  It checks if the module is loaded successfully before initializing the JavaScript core.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Valjuty.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nif (\\Bitrix\\Main\\Loader::includeModule('currency'))\n{\n\tCJSCore::Init(['currency']);\n}Копировать\n```\n\n----------------------------------------\n\nTITLE: CFormField::Delete Method Signature\nDESCRIPTION: This snippet presents the method signature for `CFormField::Delete` in Bitrix. It details the input parameters, namely `field_id` (the ID of the field to delete) and `check_rights` (a flag indicating whether to check permissions), and the boolean return type indicating success or failure. Understanding this signature is essential for correctly invoking the function.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormField/Delete.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nbool\nCFormField::Delete(\n\tint field_id,\n\tstring check_rights = \"Y\"\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Event Handler Function Signature for onAfterResultStatusChange in Bitrix\nDESCRIPTION: Function signature for the event handler that processes the onAfterResultStatusChange event in Bitrix web forms. The event is triggered after a form result status has been changed and provides access to form ID, result ID, new status ID, and rights checking flag.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Sobytija/onAfterResultStatusChange.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nфункция-обработчик(\n\tint WEB_FORM_ID,\n\tint RESULT_ID,\n\tint NEW_STATUS_ID,\n\tstring(1) CHECK_RIGHTS\n);\n```\n\n----------------------------------------\n\nTITLE: Get Subscription by Email in Bitrix\nDESCRIPTION: This code snippet shows how to use the `CSubscription::GetByEmail` method to retrieve a subscription by email in Bitrix. It first checks if an email is provided. If so, it attempts to retrieve an existing subscription using `CSubscription::GetByEmail`. It then extracts the fields and sets the ID if the subscription exists.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscription/GetByEmail.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n//new or existing subscription?\n//ID==0 indicates new subscription\nif(strlen($sf_EMAIL) > 0 || $ID > 0)\n{\n\tif($ID > 0)\n\t\t$subscription = CSubscription::GetByID($ID);\n\telse\n\t\t$subscription = CSubscription::GetByEmail($sf_EMAIL);\n\tif($subscription->ExtractFields(\"str_\"))\n\t\t$ID = (integer)$str_ID;\n\telse\n\t\t$ID=0;\n}\nelse\n\t$ID = 0;\n```\n\n----------------------------------------\n\nTITLE: Example of Test Result Deletion with Transaction\nDESCRIPTION: Demonstrates how to delete a test result safely using database transaction and module inclusion check\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CTestResult/Delete.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif (CModule::IncludeModule(\"learning\"))\n{\n\t$TEST_RESULT_ID = 2967;\n\t@set_time_limit(0);\n\t$DB->StartTransaction();\n\tif (!CTestResult::Delete($TEST_RESULT_ID))\n\t{\n\t\techo \"Error!\";\n\t\t$DB->Rollback();\n\t}\n\telse\n\t\t$DB->Commit();\n}\n```\n\n----------------------------------------\n\nTITLE: CWiki::Update Method Signature in PHP\nDESCRIPTION: Defines the method signature for updating Wiki pages. The method changes a Wiki page, adds an entry to history, and manages category associations. Returns boolean indicating success or failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCWiki::Update(\n\tint ID,\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: CGuest::GetByID Method Signature\nDESCRIPTION: This code snippet displays the method signature for CGuest::GetByID. It shows that the method accepts an integer 'guest_id' as a parameter and returns a CDBResult object. The method is used to retrieve data for a specific visitor.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CGuest/GetByID.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCGuest::GetByID(\n\tint guest_id\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CBlogUser::Add in PHP\nDESCRIPTION: Defines the signature of the Add method of CBlogUser class. This static method accepts an array of user fields and returns an integer ID of the newly created blog user.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCBlogUser::Add(\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Registering OnReindex Event Handler in PHP\nDESCRIPTION: This snippet demonstrates how to register an event handler for the 'OnReindex' event in the search module using PHP. It sets up a callback method to perform custom operations during the reindexing process.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Poisk/Sobytija/OnReIndex.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\n// регистрируем обработчик события \"OnReindex\" модуля \"search\"\nRegisterModuleDependences(\"search\", \"OnReindex\", \"my_module\", \"CMyModule\", \"OnReindex\");\n// создаем в модуле my_module в классе CMyModule функцию-метод OnReindex\npublic static function OnReindex($NS, $oCallback, $callback_method)\n{\n\tglobal $DB;\n\t$NS[\"ID\"] = intval($NS[\"ID\"]);\n\tif($NS[\"MODULE\"]==\"my_module\" && $NS[\"ID\"] > 0)\n\t\t$strWhere = \"WHERE ID > \".$NS[\"ID\"];\n\telse\n\t\t$strWhere = \"\";\n\t$strSql =\n\t\t\"SELECT FT.ID, FT.TITLE, FT.MESSAGE, \".\n\t\t\"  DATE_FORMAT(FT.POST_DATE, '%d.%m.%Y %H:%i:%s') as POST_DATE, FT.LID \".\n\t\t\"FROM b_my_table FT \".$strWhere.\n\t\t\" ORDER BY FT.ID\";\n\t$db_res = $DB->Query($strSql);\n\twhile ($res = $db_res->Fetch())\n\t{\n\t\t$Result = array(\n\t\t\t\"ID\" => $res[\"ID\"],\n\t\t\t\"SITE_ID\" => array(\"s1\"),\n\t\t\t\"DATE_CHANGE\" => $res[\"POST_DATE\"],\n\t\t\t\"URL\" => \"/my_module/index.php?ID=\".$res[\"ID\"],\n\t\t\t\"PERMISSIONS\" => array(2),\n\t\t\t\"TITLE\" => $res[\"TITLE\"],\n\t\t\t\"BODY\" => $res[\"MESSAGE\"],\n\t\t);\n\t\t$index_res = call_user_func(array($oCallback, $callback_method), $Result);\n\t\tif(!$index_res)\n\t\t\treturn $Result[\"ID\"];\n\t}\n\treturn false;\n}\n// вызываем переиндексацию модуля\nCSearch::ReIndexModule(\"my_module\");\n?>\n```\n\n----------------------------------------\n\nTITLE: CIdeaManagment::Idea Function Definition\nDESCRIPTION: Defines the `CIdeaManagment::Idea` function. This non-static method returns an object for working with a specific idea based on the provided IdeaId. If no IdeaId is provided, the default value is false.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Menedzher_idej/Klassy/CIdeaManagment/Idea.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nfunction\nCIdeaManagment::Idea(\n\t(int)$IdeaId = false\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: Bitrix Vote: Get Vote Data By ID Function Definition\nDESCRIPTION: This code snippet defines the `GetVoteDataByID` function signature within the Bitrix environment. It outlines the parameters required for retrieving vote data. The function takes a vote ID and several arrays as input, populating these arrays with data related to the vote.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Oprosy,_golosovanija/Funktsii/GetVoteDataByID.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"GetVoteDataByID( \n\tint VOTE_ID, \n\tarray &arChannel, \n\tarray &arVote, \n\tarray &arQuestions, \n\tarray &arAnswers, \n\tarray &arDropDown, \n\tarray &arMultiSelect, \n\tarray &arGroupAnswers, \n\tstring getGroupAnswers\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Installing Memcached on Ubuntu\nDESCRIPTION: This code snippet shows the command to install Memcached on an Ubuntu system using the aptitude package manager. It is a prerequisite for using Memcached as a caching mechanism in Bitrix.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Monitor_proizvoditel'nosti/Instruktsija_po_nastrojke_keshirovanija.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n\"aptitude install memcachedКопировать\"\n```\n\n----------------------------------------\n\nTITLE: GetList Usage Example\nDESCRIPTION: This snippet demonstrates how to use the GetList method to select all observers and participants for a task with ID = 28. It includes the module include and iterates through the result to display user IDs.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/Ustarevshee/CTaskMembers/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n// Выбираем всех наблюдателей и соисполнителей для задачи с ID = 28\nif (CModule::IncludeModule(\"tasks\"))\n{\n\t$res = CTaskMembers::GetList( \n\t\tArray(\"TASK_ID\" => \"28\")\n\t);\n\twhile ($arMember = $res->GetNext())\n\t{\n\t\techo $arMember[\"USER_ID\"].\"<br>\";\n\t}\n}\n?>\n\n```\n\n----------------------------------------\n\nTITLE: GetPrevVote Function Signature - PHP\nDESCRIPTION: Function to retrieve the ID of a previous vote in a group with configurable parameters for vote level, site ID, and access level\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Oprosy,_golosovanija/Funktsii/GetPrevVote.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nGetPrevVote(\n\tGROUP_SYMBOLIC_NAME, \n\t[\n\t\tlevel, \n\t\t[\n\t\t\tlid\n\t\t]\n\t]\n);\n```\n\n----------------------------------------\n\nTITLE: Generating Multi-Select HTML with Bitrix CForm\nDESCRIPTION: This PHP code snippet demonstrates the usage of the `CForm::GetMultiSelectField` method to generate an HTML multi-select list in a Bitrix web form. It retrieves data from a form result or initializes it. The snippet constructs the HTML code for a multi-select list based on question ID, answer options, selected values, and styling parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetMultiSelectField.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\nstring\nCForm::GetMultiSelectField(\n\tstring question_sid,\n\tarray list,\n\tarray values = array(),\n\tmixed height = \"\",\n\tstring add_to_multiselect = \"class=\\\"inputselect\\\"\"\n)Копировать\n\n```\n\n----------------------------------------\n\nTITLE: Extending a Tag Subscription with BX.PULL.extendWatch in JavaScript\nDESCRIPTION: The BX.PULL.extendWatch method extends a tag subscription in Bitrix. After calling this method, it will automatically extend the given subscription as long as the user is on the page. The parameter 'tag' specifies the tag to extend. User must be subscribed to extend successfully.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Push_and_Pull/Klassy/BX.PULL.extendWatch.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nBX.PULL.extendWatch('tag');\n```\n\n----------------------------------------\n\nTITLE: CWiki::Add Method Signature for Adding Wiki Pages in Bitrix\nDESCRIPTION: Method signature for adding a new Wiki page. The method is non-static and returns an integer ID of the newly created page.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCWiki::Add(\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Registering Event Handler for Vote Answer Addition\nDESCRIPTION: Demonstrates how to register a custom event handler for the onBeforeVoteAnswerAdd event in Bitrix, which allows pre-validation of vote answer data before insertion\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Oprosy,_golosovanija/Sobytija/onBeforeVoteAnswerAdd.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nAddEventHandler(\"vote\", \"onBeforeVoteAnswerAdd\", [\"MyClassForVote\", \"onBeforeVoteAnswerAddHandler\"]);\n```\n\n----------------------------------------\n\nTITLE: CSubscription::GetList Definition\nDESCRIPTION: This snippet shows the signature of the `CSubscription::GetList` method.  It accepts sorting criteria, filter parameters, and pagination parameters as input.  It returns a `CDBResult` object which contains the result of the query.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscriptionGeneral/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"CDBResult\nCSubscription::GetList(\n\tarray aSort = Array(),\n\tarray arFilter = Array(),\n\tarray arNavStartParams = false\n);\"\n```\n\n----------------------------------------\n\nTITLE: Method Signature for AddImage in CWiki Class\nDESCRIPTION: The method signature for the CWiki::AddImage method which attaches an image to a Wiki page. It takes the Wiki page ID, information block ID, and an array of image properties as parameters and returns an integer.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/AddImage.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCWiki::AddImage(\n\tint ID,\n\tint IBLOCK_ID,\n\tarray arImage\n);\n```\n\n----------------------------------------\n\nTITLE: Starting Memcached Service\nDESCRIPTION: This command starts the Memcached daemon on a Linux system. It's an essential step after Memcached installation to ensure that the caching service is running and available for Bitrix to utilize.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Monitor_proizvoditel'nosti/Instruktsija_po_nastrojke_keshirovanija.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n\"/etc/init.d/memcached startКопировать\"\n```\n\n----------------------------------------\n\nTITLE: GetRadioField Signature\nDESCRIPTION: This code snippet shows the function signature of the CForm::GetRadioField method in Bitrix. It shows the parameters the methods takes, which are the question_sid (string), answer_id (int), value (mixed), and add_to_radio (string).\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetRadioField.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"string\\nCForm::GetRadioField(\\n\\tstring question_sid,\\n\\tint answer_id,\\n\\tmixed value = \\\"\\\",\\n\\tstring add_to_radio = \\\"class=\\\\\\\"inputradio\\\\\\\"\\\"\\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Button Events\nDESCRIPTION: This snippet shows how to subscribe to events emitted by a Button instance. It demonstrates subscribing to multiple events and handling them with callback functions.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst button = new Button();\nbutton\n\t.subscribe('BX.UI.Button:ready', (event) => {\n\t\tconsole.log('Button is ready', event);\n\t})\n\t.subscribe('BX.UI.Button:render', (event) => {\n\t\tconsole.log('Button is rendered', event);\n\t})\n\t.subscribe('BX.UI.Button:click', (event) => {\n\t\tconsole.log('Button is clicked', event);\n\t});\n```\n\n----------------------------------------\n\nTITLE: Bitrix Vote: Retrieving Vote Data for Processing\nDESCRIPTION: This code snippet illustrates how to retrieve vote data using the `GetVoteDataByID` function for further processing. It gets the vote data using the function and checks if the vote ID is valid and if the vote is active (LAMP is green). If both conditions are true, it proceeds with further logic.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Oprosy,_golosovanija/Funktsii/GetVoteDataByID.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\n// получаем данные по опросу\n$VOTE_ID = GetVoteDataByID($PUBLIC_VOTE_ID, $arChannel, $arVote, $arQuestions, $arAnswers, $arDropDown, $arMultiSelect, $arGroupAnswers, \\\"N\\\", $template, $res_template);\n$VOTE_ID = intval($VOTE_ID);\n// если поступивший ID опроса корректный то\nif ($VOTE_ID>0 && $arVote[\\\"LAMP\\\"]==\\\"green\\\")\n{\n\t...\n}\n?>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Return Structure for GetList Method\nDESCRIPTION: This section outlines the array structure returned by the GetList method when called. It provides detailed session data including session ID, user information, authentication status, and various metrics related to the session activities.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CSession/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nArray\n(\n\t[ID] => ID сессии\n\t[GUEST_ID] => ID посетителя\n\t[NEW_GUEST] => флаг \"новый посетитель\" (Y - новый; N - вернувшийся)\n\t[USER_ID] => ID пользователя под которым последний раз был авторизован посетитель\n\t[USER_AUTH] => флаг \"авторизован ли посетитель в данной сессии\" (Y - да; N - нет)\n\t[C_EVENTS] => количество событий произведенных в данной сессии\n\t[HITS] => количество хитов произведенных в данной сессии\n\t[FAVORITES] => флаг \"добавлял ли посетитель сайт в \"Избранное\" в данной сессии\n\t[STOP_LIST_ID] => ID записи стоп-листа, под которую попал посетитель (если это имело место быть)\n\t[COUNTRY_ID] => ID страны посетителя\n\t[USER_AGENT] => UserAgent посетителя\n\t[URL_FROM] => ссылающаяся страница для первого хита сессии\n\t[DATE_STAT] => дата первого хита сессии\n\t[DATE_FIRST] => время первого хита сессии\n\t[URL_TO] => страница первого хита сессии\n\t[URL_TO_404] => флаг 404 ошибки на первой странице сессии (Y - да; N - нет)\n\t[FIRST_HIT_ID] => ID первого хита\n\t[FIRST_SITE_ID] => ID сайта для первого хита сессии\n\t[IP_FIRST] => IP адрес посетителя на первом хите сессии (в виде: XXX.XXX.XXX.XXX)\n\t[IP_FIRST_NUMBER] => IP адрес посетителя на первом хите сессии (в числовом представлении)\n\t[DATE_LAST] => время последнего хита сессии\n\t[URL_LAST] => страница последнего хита сессии\n\t[URL_LAST_404] => флаг 404 ошибки на последней странице сессии (Y - да; N - нет)\n\t[LAST_HIT_ID] => ID последнего хита\n\t[LAST_SITE_ID] => ID сайта для последнего хита сессии\n\t[IP_LAST] => IP адрес посетителя на последнем хите сессии (в виде: XXX.XXX.XXX.XXX)\n\t[IP_LAST_NUMBER] => IP адрес посетителя на последнем хите сессии (в числовом представлении)\n\t[ADV_ID] => ID рекламной кампании\n\t[ADV_BACK] => флаг прямого захода (N) или возврата (Y) по рекламной кампании\n\t[REFERER1] => идентификатор referer1 рекламной кампании\n\t[REFERER2] => идентификатор referer2 рекламной кампании\n\t[REFERER3] => дополнительный параметр referer3 рекламной кампании\n\t[SESSION_TIME] => разница во времени между первым и последним хитом сессии (сек.)\n\t[PHPSESSID] => идентификатор сессии выданный PHP\n)\n```\n\n----------------------------------------\n\nTITLE: GetTextFilter Method Signature in PHP\nDESCRIPTION: Defines the signature of the `GetTextFilter` method within the `CForm` class.  It accepts parameters for filter ID, size, and additional HTML attributes for the text input and checkbox elements. It returns an HTML string.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CForm/GetTextFilter.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"string\nCForm::GetTextFilter(\n\tint filter_sid,\n\tint size = 45,\n\tstring add_to_text = \\\"class=\\\\\\\"inputtext\\\\\\\"\\\",\n\tstring add_to_checkbox = \\\"class=\\\\\\\"inputcheckbox\\\\\\\"\\\"\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: JavaScript Example of parseFunction\nDESCRIPTION: This JavaScript snippet demonstrates how to use the `oBXEditorUtils.PHPParser.parseFunction` method. It defines a PHP function call string, calls the method, and then logs the extracted function name and parameters as comments.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/oBXEditorUtilsPHPParser/parseFunction.md#2025-04-20_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script>\nvar sCode = 'MyPHPFunction(\"param\",$var)';\n\t   \nvar oFunc = oBXEditorUtils.PHPParser.parseFunction(sCode); \n//oFunc.name = 'MyPHPFunction';\n//oFunc.params = '\"param\",$var';\n</script>\n\n```\n\n----------------------------------------\n\nTITLE: CSubscription::Add Method Signature\nDESCRIPTION: This snippet shows the function signature of the `CSubscription::Add` method in Bitrix, which adds a subscription based on the provided fields and site ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscriptionGeneral/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"int\nCSubscription::Add(\n\tarray arFields,\n\tstring SITE_ID = SITE_ID\n);\"\n```\n\n----------------------------------------\n\nTITLE: Declaring CChapter GetTreeList Method in PHP\nDESCRIPTION: Method signature for retrieving a list of chapters sorted in a full expanded tree order. Accepts course ID and optional chapter ID as parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CChapter/GetTreeList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCChapter::GetTreeList(\n\tint COURSE_ID,\n\tint CHAPTER_ID = 0\n);\n```\n\n----------------------------------------\n\nTITLE: CFormStatus::Copy Method Signature\nDESCRIPTION: Method signature for copying a status in the Bitrix web form system. It returns the ID of the newly created status on success, or false on failure. The method requires a status ID and has optional parameters for rights checking and target form ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormStatus/Copy.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nmixed\nCFormStatus::Copy(\n\tint status_id,\n\tstring check_rights = \"Y\",\n\tmixed form_id = false\n)\n```\n\n----------------------------------------\n\nTITLE: Verifying Event Trust Status\nDESCRIPTION: Determines the origin of the event - whether it was sent by an Event.EventEmitter descendant or globally\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.BaseEvent.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nEvent.BaseEvent.isTrusted: boolean\n```\n\n----------------------------------------\n\nTITLE: Implementing OnErrorEventBeforeSessionTransfer Event Handler\nDESCRIPTION: Example of an error event handler for debugging session transfer events, logging error parameters\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Otkrytye_linii/Sobytija/OnBeforeSessionTransfer.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic static function onErrorEventBeforeSessionTransfer(\\Bitrix\\Main\\Event $event)\n{\n\t$eventParams = $event->getParameters();\n\tdefine(\"LOG_FILENAME\", $_SERVER[\"DOCUMENT_ROOT\"].\"/log.txt\");\n\tAddMessage2Log(var_export($eventParams,1), 'OnErrorEventBeforeSessionTransfer');\n}\n```\n\n----------------------------------------\n\nTITLE: Definition of BXRemoveAllChild method\nDESCRIPTION: This snippet shows the method signature of `BXRemoveAllChild` method. It's a method of `oBXEditorUtils` object, that accepts a single argument: the DOM node whose children will be removed. It doesn't return any value (void).\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/BXRemoveAllChild.md#2025-04-20_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"void\\noBXEditorUtils.BXRemoveAllChild(\\n\\tobject pNode\\n);\"\n```\n\n----------------------------------------\n\nTITLE: Initializing CRubric Subscription Management\nDESCRIPTION: The CRubric class allows developers to interact with subscription rubrics, providing methods for adding, updating, deleting, and querying mailing lists and their subscriptions.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CRubric.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nclass CRubric\n```\n\n----------------------------------------\n\nTITLE: Initializing Bitrix Disk Module in PHP\nDESCRIPTION: Checks if the Disk module is installed and includes it using the Loader class.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule('disk');\n```\n\n----------------------------------------\n\nTITLE: Defining CanUserEditPost Method in CBlogPost Class (PHP)\nDESCRIPTION: This snippet defines the CanUserEditPost method in the CBlogPost class. It takes two parameters: ID (post ID) and userID (user ID). The method checks if the specified user can edit the given post.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/CanUserEditPost.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCBlogPost::CanUserEditPost(\n\tint ID,\n\tint userID\n);\n```\n\n----------------------------------------\n\nTITLE: CFormResult::SetEvent Method Signature in PHP\nDESCRIPTION: The method signature for SetEvent which creates an event in the Statistics module. It accepts parameters for result_id, event identifiers, monetary values, and other optional settings. Returns true on success and false on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/SetEvent.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCFormResult::SetEvent(\n\tint result_id,\n\tstring event1 = false,\n\tstring event2 = false,\n\tstring event3 = false,\n\tmixed money = \"\",\n\tmixed currency = \"\",\n\tmixed goto = \"\",\n\tmixed chargeback = \"N\"\n)\n```\n\n----------------------------------------\n\nTITLE: JavaScript Example of oBXEditorUtils.PHPParser.getParams\nDESCRIPTION: This JavaScript code demonstrates the usage of the `oBXEditorUtils.PHPParser.getParams` method with two different input strings. The first string contains simple comma-separated values, while the second string contains array-like syntax. The code comments illustrate the expected output of the method for each input.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/oBXEditorUtilsPHPParser/getParams.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<script>\nvar sCode1 = '2,\"text text text\",5,\"N\"';\nvar sCode2 = 'array(\"LID\"=>\"en\",\"TEXT\"=>\"text text text\",\"PAYED\"=>\"N\",\"CANCELED\"=>\"N\")';\n\t   \narParams1 = oBXEditorUtils.PHPParser.getArray(sCode1); \n//arParams[0] = '2';\n//arParams[1] = '\"text text text\"';\n//arParams[2] = '5';\n//arParams[3] = '\"N\"';\narParams2 = oBXEditorUtils.PHPParser.getArray(sCode2); \n//arParams[0] = 'array(\"LID\"=>\"en\"';\n//arParams[1] = '\"TEXT\"=>\"text text text\"';\n//arParams[2] = '\"PAYED\"=>\"N\"';\n//arParams[3] = '\"CANCELED\"=>\"N\")';\n</script>\n\n```\n\n----------------------------------------\n\nTITLE: Querying Certifications without Permission Checks\nDESCRIPTION: Retrieves certification records with bypassed permission checks, sorted by summary and sorting index, with active certifications only\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCertification/GetList.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\\nif (CModule::IncludeModule(\"learning\"))\\n{\\n\\t$COURSE_ID = 100;\\n\\t$res = CCertification::GetList(\\n\\t\\tArray(\"SUMMARY\" => \"DESC\", \"SORT\"=>\"ASC\"), \\n\\t\\tArray(\"ACTIVE\" => \"Y\", \"CHECK_PERMISSIONS\" => \"N\")\\n\\t);\\n\\twhile ($arCertification = $res->GetNext())\\n\\t{\\n\\t\\techo \"User:\".$arCertification[\"USER_NAME\"].\\n\\t\\t\"; Course name: \".$arCertification[\"COURSE_NAME\"].\"<br>\";\\n\\t}\\n}\n```\n\n----------------------------------------\n\nTITLE: Registering OnAfterUserLogout Event Handler in PHP\nDESCRIPTION: This code snippet shows how to register the OnAfterUserLogout event handler using the RegisterModuleDependences function. It specifies the module, event, and the handler class and method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnAfterUserLogout.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// регистрируем обработчик события \"OnAfterUserLogout\"\nRegisterModuleDependences(\"main\", \"OnAfterUserLogout\", \n\"my_module_id\", \"MyClass\", \"OnAfterUserLogoutHandler\");\n```\n\n----------------------------------------\n\nTITLE: Using GetDropdownList with SelectBoxM\nDESCRIPTION: Illustrates how to integrate the GetDropdownList method with the SelectBoxM function for creating a multi-select list. It configures the multi-select list with event types and allows the selection of multiple values from the provided arSEARCHER_ID array, displaying up to 20 visible elements.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEventType/GetDropdownList.md#2025-04-20_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<php\n// список из 20 видимых элементов с возможностью множественного выбора\necho SelectBoxM(\n\t\"arSEARCHER_ID[]\", \n\tCStatEventType::GetDropdownList(), \n\t$arSEARCHER_ID, \n\t\"\", \n\tfalse, \n\t20\n);\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: CAdvContract::Set Method Definition\nDESCRIPTION: This snippet shows the signature of the `CAdvContract::Set` method, which is used to create or update a contract. It takes an array of fields, a contract ID (optional for updating), and a flag to check user rights. It returns the ID of the created or modified contract.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Reklama,_bannery/Klassy/CAdvContract/Set.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nint\nCAdvContract::Set(\n\tarray arFields,\n\tint CONTRACT_ID=\"\",\n\tchar(1) CHECK_RIGHTS=\"Y\"\n);\n\n```\n\n----------------------------------------\n\nTITLE: Getting File URL in Bitrix Disk\nDESCRIPTION: Shows how to obtain the URL of a file on the portal using the UrlManager.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif ($file) \n{ \n\t\t$urlManager = \\Bitrix\\Disk\\Driver::getInstance()->getUrlManager(); \n\t\techo $urlManager->getPathFileDetail($file); \n}\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CSOAPRequest::addParameter in PHP\nDESCRIPTION: The addParameter method signature showing the required parameters. This method adds data for transmission in a SOAP request, typically representing parameters for the web service method being called. It is a non-static method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-servisy/Klassy/CSOAPRequest/addParameter.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nvoid\nCSOAPRequest::addParameter( \n\tstring name, \n\tЛюбойТипДанных value\n)\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CBlog::GetByOwnerID in PHP\nDESCRIPTION: The method signature for GetByOwnerID that retrieves a blog by owner ID. It accepts a user ID and an optional array of blog group IDs. The method returns an array containing blog fields.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/GetByOwnerID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCBlog::GetByOwnerID(\n\tint userID,\n\t$arGroup = Array()\n);\n```\n\n----------------------------------------\n\nTITLE: Defining OnBeforeUserSimpleRegister Event Handler Function in PHP\nDESCRIPTION: This snippet shows the function signature for the OnBeforeUserSimpleRegister event handler. It takes an array of user fields as a reference parameter and returns a boolean value.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnBeforeUserSimpleRegister.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nфункция-обработчик(\n\tarray &arFields,\n);\n```\n\n----------------------------------------\n\nTITLE: CStatEvent::Add Event Example 1\nDESCRIPTION: Provides an example of using CStatEvent::Add to add an event. The GID (special parameter) is not encoded in this example, and the date is provided in the site's current format.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEvent/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?\n// добавим событие по типу события #1\n// данный тип должен быть заранее создан\n// специальный параметр события в незакодированном виде\n$gid = \\\"BITRIX_SM.995.82.N0.25.N.ru\\\"; \n// дата должна быть заданы в формате текущего сайта или языка\n$date = \\\"23.12.2005 18:15:10\\\";\nCStatEvent::Add(1, \\\"\\\", $date, $gid, 99, \\\"USD\\\");\n?>Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Hit Data by ID using CHit::GetByID - PHP\nDESCRIPTION: This code snippet demonstrates how to retrieve hit data by its ID using the CHit::GetByID method in PHP. The method takes the hit ID as input and returns a CDBResult object, which can be fetched to retrieve an array containing the hit's details. The example shows how to fetch the result and print the hit's parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CHit/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n$hit_id = 1;\nif ($rs = CHit::GetByID($hit_id))\n{\n\t$ar = $rs->Fetch();\n\t// выведем параметры хита\n\techo \"<pre>\"; print_r($ar); echo \"</pre>\";\n}\n?>Копировать\n```\n\n----------------------------------------\n\nTITLE: Checking Event Default Prevention Status\nDESCRIPTION: Checks if the default event action has been prevented using isDefaultPrevented() method\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.BaseEvent.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nEvent.BaseEvent.isDefaultPrevented(): boolean\n```\n\n----------------------------------------\n\nTITLE: Implementing Delivery Order Callback in Bitrix (PHP)\nDESCRIPTION: This example demonstrates a callback function that is called when the 'Delivery Allowed' flag of an order changes. It adds or removes 100 USD from the user's account based on the flag status.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/Klassy/CSaleUserAccount/UpdateAccount.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nfunction MyDeliveryOrderCallback($productID, $userID, $bPaid, $orderID)\n{\n\tglobal $DB;\n\t$productID = IntVal($productID);\n\t$userID = IntVal($userID);\n\t$bPaid = ($bPaid ? True : False);\n\t$orderID = IntVal($orderID);\n\tif ($userID <= 0)\n\t\treturn False;\n\tif ($orderID <= 0)\n\t\treturn False;\n\tif (!CSaleUserAccount::UpdateAccount(\n\t\t$userID,\n\t\t($bPaid ? 100 : -100),\n\t\t\"USD\",\n\t\t\"MANUAL\",\n\t\t$orderID\n\t))\n\treturn False;\n\treturn True;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Including the Highload Block Module in Bitrix\nDESCRIPTION: Code to include the Highload Block module in Bitrix D7 before using it. This is a required step before working with any Highload Block functionality.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Highload-bloki.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule('highloadblock');\n```\n\n----------------------------------------\n\nTITLE: CRubric Update Method Signature\nDESCRIPTION: Method signature for updating a newsletter rubric with an ID and fields array. Returns a boolean indicating success or failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CRubric/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCRubric::Update(\n\tint ID,\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: CWikiSecurity::clear Method Signature\nDESCRIPTION: This snippet shows the signature of the `CWikiSecurity::clear` method. It accepts a string by reference as input and returns a string.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWikiSecurity/clear.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"string\nCWikiSecurity::clear(\n\tstring &str\n);Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Product Attribute Mapping\nDESCRIPTION: XML representation of product attributes and requisite details including product type and full name\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/XML-fajly_dlja_obmena_dannymi/Fajl_import.xml.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n\\u003cЗначенияРеквизитов\\u003e\n\\u003cЗначениеРеквизита\\u003e\n\\u003cНаименование\\u003eВидНоменклатуры\\u003c/Наименование\\u003e\n\\u003cЗначение\\u003eПолуфабрикат\\u003c/Значение\\u003e\n\\u003c/ЗначениеРеквизита\\u003e\n\\u003c/ЗначенияРеквизитов\\u003e\n```\n\n----------------------------------------\n\nTITLE: Defining SetBlogPerms Method Signature in PHP\nDESCRIPTION: Method signature for SetBlogPerms, which sets access levels for blog posts and comments. It takes blog ID, permissions array, and permission type as parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlog/SetBlogPerms.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nvoid\nCBlog::SetBlogPerms(\n\tint    ID,\n\tarray  arPerms,\n\tstring permsType = BLOG_PERMS_POST\n);\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CBlogGroup::GetByID Method in Bitrix\nDESCRIPTION: Demonstrates how to use the GetByID method to retrieve blog group information by ID and handle the response appropriately. Prints the group array if found, otherwise displays an error message.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogGroup/GetByID.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?\n$ID = 1;\n$arGroup = CBlogGroup::GetByID($ID);\nif(is_array($arGroup))\n\tprint_r($arGroup);\nelse\n\techo \"Группа не найдена.\";\n?>\n```\n\n----------------------------------------\n\nTITLE: PHP Code Cleaning Method Definition\nDESCRIPTION: This is the definition for the `cleanCode` method within the `oBXEditorUtils.PHPParser` object. It accepts a string containing PHP code as input, removes comments, newlines, and insignificant spaces, and returns the cleaned PHP code as a string.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/oBXEditorUtilsPHPParser/cleanCode.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"string\\noBXEditorUtils.PHPParser.cleanCode(\\n\\tstring sCode\\n);\"\n```\n\n----------------------------------------\n\nTITLE: CSearch Constructor Definition\nDESCRIPTION: This code defines the CSearch constructor, outlining the parameters it accepts and the type of result it returns. It's a deprecated method, and the documentation suggests using CSearch::Search instead.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Poisk/Klassy/CSearch/Konstruktor_CSearch.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCSearch(\n\tstring strQuery,\n\tstring LID = false,\n\tstring MODULE_ID = false,\n\tstring ITEM_ID = false,\n\tstring PARAM1 = false,\n\tstring PARAM2 = false,\n\tarray aSort = array(),\n\tarray aParamsEx = array(),\n\tbool bTagsCloud = false\n);\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Task Deletion Event Handler for Recyclebin\nDESCRIPTION: Method that handles task deletion events, collecting and saving task data to the recyclebin for potential restoration.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Korzina_udalennyh_suschnostej.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nuse Bitrix\\Recyclebin\\Internals\\Entity;\npublic static function OnBeforeTaskDelete($taskId, array $task = [])\n{\n\t$recyclebin = new Entity($taskId, Manager::TASKS_RECYCLEBIN_ENTITY, Manager::MODULE_ID); // создаем объект корзины\n\t$recyclebin->setTitle($task['TITLE']); // задаем заголовок\n\t$additionalData = self::collectTaskAdditionalData($taskId); //каким либо образом собираем информацию, которую необходимо сохранить в корзине в формате действие-данные\n// например [MEMBERS=>[1,2,3,4,5]], затем по ключу MEMBERS мы будем знать, что восстанавливать\n\tif ($additionalData)\n\t{\n\t\tforeach ($additionalData as $action => $data)\n\t\t{\n\t\t\t$recyclebin->add($action, $data);  // добавляем в корзину\n\t\t}\n\t}\n\t$result = $recyclebin->save(); // сохраняем в корзине\n\t$resultData = $result->getData();\n\treturn $resultData['ID']; // получаем ID созданной корзины\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Core FX Extension in PHP\nDESCRIPTION: This snippet shows how to initialize the core_fx.js extension, which is required before using BX.easing methods.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Animatsija.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCJSCore::Init(array(\"fx\"));\n```\n\n----------------------------------------\n\nTITLE: CLQuestion::Add Method Signature in PHP\nDESCRIPTION: This snippet shows the method signature for the `CLQuestion::Add` method within the `CLQuestion` class. The method takes an array `$arFields` as input, which contains the data for the new question. It returns an integer representing the ID of the newly created question if successful, or false if an error occurred.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLQuestion/Add.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nint\nCLQuestion::Add(\n\tarray arFields\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: Event Type Array Structure\nDESCRIPTION: Describes the structure of the array returned by the GetDropdownList method. Each element in the array represents an event type and contains the ID of the event type and a string representing the event type's ID, event1, event2, and the name of the event type.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEventType/GetDropdownList.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nArray\n(\n\t[REFERENCE_ID] => ID типа событий\n\t[REFERENCE] => \"[ID] (event1 / event2) название типа события\"\n)Копировать\n```\n\n----------------------------------------\n\nTITLE: Using PreparePath Method to Generate User Profile Link (PHP)\nDESCRIPTION: This example demonstrates how to use the PreparePath method to generate a link to the current user's profile. It uses the GetID() method of the global $USER object to get the current user's ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/PreparePath.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?\necho '<a href=\"'.CBlogUser::PreparePath($USER->GetID()).'\">Ваш профайл</a>';\n?>\n```\n\n----------------------------------------\n\nTITLE: Querying Certifications with Course Filter and Sorting\nDESCRIPTION: Retrieves certification records for a specific course, sorted by summary and sorting index, with active certifications only\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCertification/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\\nif (CModule::IncludeModule(\"learning\"))\\n{\\n\\t$COURSE_ID = 100;\\n\\t$res = CCertification::GetList(\\n\\t\\tArray(\"SUMMARY\" => \"DESC\", \"SORT\"=>\"ASC\"), \\n\\t\\tArray(\"ACTIVE\" => \"Y\", \"COURSE_ID\" => $COURSE_ID)\\n\\t);\\n\\twhile ($arCertification = $res->GetNext())\\n\\t{\\n\\t\\techo \"User:\".$arCertification[\"USER_NAME\"].\\n\\t\\t\\t\"; Course name: \".$arCertification[\"COURSE_NAME\"].\"<br>\";\\n\\t}\\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OnAfterUserLogout Event Handler Function in PHP\nDESCRIPTION: This snippet shows the structure of the event handler function for OnAfterUserLogout. It receives an array of parameters including the user ID and the success status of the logout operation.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Glavnyj_modul'/Sobytija/OnAfterUserLogout.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nфункция-обработчик(\n\tarray &arParams\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting files using CPosting::DeleteFile in Bitrix\nDESCRIPTION: This snippet shows how to delete either a specific file or all files attached to a posting in Bitrix using the `CPosting::DeleteFile` method. The method accepts the posting ID and optionally the file ID. If no file ID is given, all files are deleted.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/DeleteFile.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCPosting::DeleteFile(\n\tint ID,\n\tint file_id = false\n);\n```\n\n----------------------------------------\n\nTITLE: Recyclebinable Interface Definition for Entity Handlers\nDESCRIPTION: Interface definition that must be implemented by entity handlers to work with the recyclebin system, including methods for restoration, deletion, and preview.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Korzina_udalennyh_suschnostej.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\ninterface Recyclebinable\n{\n\t/**\n\t* Метод восстановления из корзины\n\t* \n\t* @param Entity $entity\n\t*\n\t* @return boolean\n\t*/\n\tpublic static function moveFromRecyclebin(Entity $entity);\n\t/**\n\t* Метод удаления из корзины\n\t* \n\t* @param Entity $entity\n\t*\n\t* @return boolean\n\t*/\n\tpublic static function removeFromRecyclebin(Entity $entity);\n\t/**\n\t* Метод предпросмотра в корзине\n\t* \n\t* @param Entity $entity\n\t*\n\t* @return boolean\n\t*/\n\tpublic static function previewFromRecyclebin(Entity $entity);\n\t/**\n\t* Метод, который предоставляет переводы результатов действий. \n\t* NOTIFY - Задача успешно удалена/Восстановлена \n\t* CONFIRM - Вы уверены, что хотите восстановить/удалить задачу?\n\t* \n\t* @return array\n\t*\n\t* [\n\t*\t'NOTIFY'=> [\n\t*\t\t'RESTORE' => Loc::getMessage(''),\n\t*\t\t'REMOVE' => Loc::getMessage(''),\n\t*\t],\n\t*\t'CONFIRM' => [\n\t*\t\t'RESTORE' => Loc::getMessage(''),\n\t*\t\t'REMOVE' => Loc::getMessage('')\n\t*\t]\n\t*/\n\tpublic static function getNotifyMessages();\n}\n```\n\n----------------------------------------\n\nTITLE: CTaskElapsedTime::GetList Definition\nDESCRIPTION: Defines the method signature for CTaskElapsedTime::GetList, which is used to retrieve a list of elapsed time records. It accepts sorting, filtering, and parameter arrays.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskElapsedTime/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"CDBResult\nCTaskElapsedTime::GetList(\n\tarray arOrder = array(),\n\tarray arFilter = array(),\n\tarray arParams = array()\n);Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Structure of Returned Record from GetSimpleList Method in PHP\nDESCRIPTION: Describes the array structure returned by the GetSimpleList method, which includes the IDs and descriptions of the advertising campaigns.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CAdv/GetSimpleList.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nArray\n(\n\t[ID] => ID\n\t[REFERER1] => идентификатор referer1\n\t[REFERER2] => идентификатор referer2\n\t[DESCRIPTION] => описание\n)\n```\n\n----------------------------------------\n\nTITLE: Parsing Product Variations XML Schema\nDESCRIPTION: XML structure representing different product configurations with unique identifiers, versions, and color attributes for furniture items like computer tables, shelves, and side panels\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/XML-fajly_dlja_obmena_dannymi/Fajl_offers.xml.md#2025-04-20_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n\\u003cПредложение\\u003e\n  \\u003cИд\\u003e1f7b8f60-e371-11db-95d9-505054503030#1f7b8f66-e371-11db-95d9-505054503030\\u003c/Ид\\u003e\n  \\u003cНомерВерсии\\u003eaQAAAAEAAAA=\\u003c/НомерВерсии\\u003e\n  \\u003cПометкаУдаления\\u003efalse\\u003c/ПометкаУдаления\\u003e\n  \\u003cНаименование\\u003eСтол компьютерный СК-14 (Темно синий)\\u003c/Наименование\\u003e\n  \\u003cХарактеристикиТовара/\\u003e\n  \\u003cЗначенияСвойств\\u003e\n    \\u003cЗначенияСвойства\\u003e\n      \\u003cИд\\u003e13dab546-e271-11db-95d9-505054503030\\u003c/Ид\\u003e\n      \\u003cЗначение\\u003e13dab561-e271-11db-95d9-505054503030\\u003c/Значение\\u003e\n    \\u003c/ЗначенияСвойства\\u003e\n  \\u003c/ЗначенияСвойств\\u003e\n\\u003c/Предложение\\u003e\n```\n\n----------------------------------------\n\nTITLE: Including the Bitrix Business Processes Module in PHP\nDESCRIPTION: This code snippet demonstrates how to check if the Business Processes (bizproc) module is installed and include it in your PHP code. The module must be properly included before using any of its functions or classes.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Biznes-protsessy.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?    if(CModule::IncludeModule(\"bizproc\"))\n{  \n\t//здесь можно использовать функции и классы модуля\n} \n?>\n```\n\n----------------------------------------\n\nTITLE: Registering Image Resize Handler in PHP using CBlogImage\nDESCRIPTION: This method registers CBlogImage::ImageResizeHandler as an event handler for 'main.file.input.upload'. It's a static method that takes an array of parameters which will be passed to the event handler when called.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogImage/AddImageResizeHandler.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\\nCBlogImage::AddImageResizeHandler(\\n\\tarray arParams\\n);\n```\n\n----------------------------------------\n\nTITLE: Parsing Product Details in XML\nDESCRIPTION: XML schema for tracking product metadata including identifiers, tax information, and product classifications\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/XML-fajly_dlja_obmena_dannymi/Fajl_import.xml.md#2025-04-20_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n\\u003cТовар\\u003e\n\\u003cИд\\u003e7c783728-e432-11db-95d9-505054503030\\u003c/Ид\\u003e\n\\u003cНаименование\\u003eБ666.2779 Крышка прихожей Престиж\\u003c/Наименование\\u003e\n\\u003cБазоваяЕдиница\\u003e796\\u003c/БазоваяЕдиница\\u003e\n\\u003cГруппы\\u003e\n\\u003cИд\\u003e6d025a31-e27f-11db-95d9-505054503030\\u003c/Ид\\u003e\n\\u003c/Группы\\u003e\n```\n\n----------------------------------------\n\nTITLE: Function Signature for onBeforeResultUpdate Event Handler in Bitrix\nDESCRIPTION: The signature for the event handler function that runs before saving changes to an existing web form result. It provides access to form ID, result ID, fields array, values array, and a rights check flag.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Sobytija/onBeforeResultUpdate.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nфункция-обработчик(\n\tint WEB_FORM_ID,\n\tint RESULT_ID,\n\tarray &arFields,\n\tarray &arrVALUES,\n\tstring(1) CHECK_RIGHTS\n);\n```\n\n----------------------------------------\n\nTITLE: Searching for a File in Bitrix Disk\nDESCRIPTION: Demonstrates how to search for a file within a folder to perform operations on it.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('disk')) \n{ \n\t$storage = \\Bitrix\\Disk\\Driver::getInstance()->getStorageByUserId(1); \n\tif ($storage) \n\t{ \n\t\t$folder = $storage->getRootObject(); \n\t\t$file = $folder->getChild( \n\t\t\tarray( \n\t\t\t\t'=NAME' => 'test.jpg',  \n\t\t\t\t'TYPE' => \\Bitrix\\Disk\\Internals\\FileTable::TYPE_FILE \n\t\t\t) \n\t\t); \n\t\tif ($file) \n\t\t{ \n\t\t\t// \n\t\t} \n\t} \n} \n```\n\n----------------------------------------\n\nTITLE: Retrieving Search Custom Ranking Rules in Bitrix PHP\nDESCRIPTION: Static method for fetching search custom ranking rules with optional sorting and filtering. Returns a CDBResult object containing ranking rule details, available since version 5.1.1.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Poisk/Klassy/CSearchCustomRank/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCSearchCustomRank::GetList(\n\tarray aSort = array(),\n\tarray aFilter = array()\n);\n```\n\nLANGUAGE: php\nCODE:\n```\narray(\n\t\"SITE_ID\"=>\"ASC\",\n\t\"MODULE_ID\"=>\"ASC\",\n\t\"PARAM1\"=>\"DESC\",\n\t\"PARAM2\"=>\"DESC\",\n\t\"ITEM_ID\"=>\"DESC\"\n)\n```\n\n----------------------------------------\n\nTITLE: GetList Method Definition\nDESCRIPTION: This snippet shows the function definition of the GetList method of the CTaskMembers class. It takes an array as a filter and returns a CDBResult object.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/Ustarevshee/CTaskMembers/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCTaskMembers::GetList(\n\tarray arFilter = array()\n);\n\n```\n\n----------------------------------------\n\nTITLE: Function Definition for CBlogPost::PreparePath Method in PHP\nDESCRIPTION: The method signature for PreparePath which returns a path to a blog post or blog. It takes parameters for blog URL, post ID, site ID, and 404 handler flag. Added userID and groupID parameters in version 7.1.1.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogPost/PreparePath.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCBlogPost::PreparePath(\n\tstring blogUrl,\n\tint    postID = 0,\n\tstring siteID = false,\n\tbool   is404 = true,\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Task Restoration from Recyclebin\nDESCRIPTION: Method that handles restoring a task from the recyclebin, updating its status and restoring associated data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Korzina_udalennyh_suschnostej.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nuse Bitrix\\Recyclebin\\Internals\\Entity;\npublic static function moveFromRecyclebin(Entity $entity)\n{\n\t$result = new Result();\n\t$connection = Application::getConnection();\n\t\t$connection->queryExecute(\n\t\t\t'UPDATE '.TaskTable::getTableName().' SET ZOMBIE=\\'N\\' WHERE ID='.$entity->getEntityId()\n\t\t); // восстановил задачу (в данном случае пришлось в обход АПИ, потому что не поддерживается такой функционал\n\t\t$arLogFields = array(\n\t\t\t\"TASK_ID\" => $entity->getEntityId(),\n\t\t\t\"USER_ID\" => User::getId(),\n\t\t\t\"CREATED_DATE\" => new DateTime(),\n\t\t\t\"FIELD\" => 'RENEW'\n\t\t);\n\t$log = new \\CTaskLog();\n\t$log->Add($arLogFields); // добавил в лог задачи информацию об востановлении\n\t$dataEntity = $entity->getData(); // получил сохраненные данные из корзины\n\tif ($dataEntity)\n\t{\n\t\tforeach ($dataEntity as $value)\n\t\t{\n\t\t\t$data = unserialize($value['DATA']);\n\t\t\t$action = $value['ACTION'];\n\t\t\tself::restoreTaskAdditionalData($entity->getEntityId(), $action, $data); // на основе сохраненного массива восстанавливаем данные\n\t\t}\n\t}\n\t$task = \\CTaskItem::getInstance($entity->getEntityId(), 1);\n\t$task->update([], ['FORCE_RECOUNT_COUNTER'=>'Y']); // пересчитываем счетчики задач\n\treturn $result; // результат работы \n}\n```\n\n----------------------------------------\n\nTITLE: One-time Event Subscription with Event.EventEmitter\nDESCRIPTION: This snippet shows how to subscribe to an event that will only be triggered once using the Event.EventEmitter.subscribeOnce method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/JS_biblioteka/Sobytija/Event.EventEmitter.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Event} from 'main.core';\nclass Button extends Event.EventEmitter {}\nconst emitter = new Button();\nemitter.subscribeOnce('BX.UI.Button:click', (event) => {\n\t// ...\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Parameter Processing Methods in PHP for Bitrix Form Validators\nDESCRIPTION: These methods convert validator settings between array and string formats. They also perform parameter validation and normalization to ensure proper settings for the number range validator.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Sozdanie_sobstvennyh_validatorov_polej_veb-form.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nfunction ToDB($arParams)\n{\n\t// проверка переданных параметров\n\t$arParams[\"NUMBER_FLOAT\"] = $arParams[\"NUMBER_FLOAT\"] == \"Y\" ? \"Y\" : \"N\";\n\t$arParams[\"NUMBER_FROM\"]  = $arParams[\"NUMBER_FLOAT\"] == \"Y\" ? floatval($arParams[\"NUMBER_FROM\"]) : intval($arParams[\"NUMBER_FROM\"]);\n\t$arParams[\"NUMBER_TO\"]    = $arParams[\"NUMBER_FLOAT\"] == \"Y\" ? floatval($arParams[\"NUMBER_TO\"]) : intval($arParams[\"NUMBER_TO\"]);\n  \n\t// перестановка значений порогов, если требуется\n\tif ($arParams[\"NUMBER_FROM\"] > $arParams[\"NUMBER_TO\"])\n\t{\n\t\t$tmp                     = $arParams[\"NUMBER_FROM\"];\n\t\t$arParams[\"NUMBER_FROM\"] = $arParams[\"NUMBER_TO\"];\n\t\t$arParams[\"NUMBER_TO\"]   = $tmp;\n\t}\n  \n\t// возвращаем сериализованную строку\n\treturn serialize($arParams);\n}\nfunction FromDB($strParams)\n{\n\t// никаких преобразований не требуется, просто вернем десериализованный массив\n\treturn unserialize($strParams);\n}\n```\n\n----------------------------------------\n\nTITLE: CWikiParser::Parse Method Signature\nDESCRIPTION: This code snippet shows the signature of the CWikiParser::Parse method.  It takes the Wiki page content (text), content type, file array, and an array of parameters as inputs. It returns the processed Wiki page without Wiki markup.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWikiParser/Parse.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"string\nCWikiParser::Parse(\n\tstring text,\n\ttype = 'text',\n\tarFile = array(),\n\tarParams = array()\n);Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Initializing CPostingTemplate for Newsletter Management\nDESCRIPTION: The CPostingTemplate class is used for managing newsletter templates in the Bitrix framework. It provides core methods for template manipulation and generation.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingTemplate.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nclass CPostingTemplate\n```\n\n----------------------------------------\n\nTITLE: PHP Event Handler for OnBeforeHTMLEditorScriptsGet\nDESCRIPTION: This PHP code snippet demonstrates how to register an event handler for the 'OnBeforeHTMLEditorScriptsGet' event in Bitrix.  The handler checks if the editor being initialized is for static pages ('filesrc') and returns an array containing custom JavaScript ('my_scripts.js') and CSS ('my_styles.css') files to be included. This allows modification of the editor's functionality and appearance.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Sobytija/OnBeforeHTMLEditorScriptsGet.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?\n// файл /bitrix/php_interface/init.php\n// регистрируем обработчик\nAddEventHandler(\"fileman\", \"OnBeforeHTMLEditorScriptsGet\", \"addEditorScriptsHandler\");\npublic static function addEditorScriptsHandler($editorName,$arEditorParams)\n{\n\t// Проверяем, если подключается редактор для редактирования статических страниц\n\tif ($editor_name == 'filesrc')\n\t\treturn array(\n\t\t\t\"JS\" => array('my_scripts.js'),\n\t\t\t\"CSS\" => array('my_styles.css')\n\t\t);\n\t\t\n\treturn array();\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Initializing CLAnswer Method in Bitrix PHP\nDESCRIPTION: Method signature for retrieving an answer by its unique identifier. Requires learning module to be included and expects an integer ID parameter.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLAnswer/GetByID.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nCDBResult\nCLAnswer::GetByID(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Cleaning PHP Code with oBXEditorUtils.PHPParser.cleanCode (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to use the `oBXEditorUtils.PHPParser.cleanCode` method to remove comments and whitespace from a PHP code snippet.  The cleaned code is then assigned back to the `sCode` variable. This example shows the initial code and then the resulting cleaned code.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Vizual'nyj_redaktor/Ob'ekt_oBXEditorUtils/oBXEditorUtilsPHPParser/cleanCode.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"<script>\\nvar sCode = '$arFields   =   array('+\\n\\t'\\\"LID\\\" => \\\"en\\\", //язык'+\\n\\t'\\\"TEXT\\\" => \\\"text text text\\\", //текст'+\\n\\t'\\\"PAYED\\\" => \\\"N\\\",'+\\n\\t'\\\"CANCELED\\\" => \\\"N\\\"'+\\n\\t');'\\n\\t   \\nvar sCode = oBXEditorUtils.PHPParser.cleanCode(sCode); \\n//sCode = '$arFields=array(\\\"LID\\\"=>\\\"en\\\",\\\"TEXT\\\"=>\\\"text text text\\\",\\\"PAYED\\\"=>\\\"N\\\",\\\"CANCELED\\\"=>\\\"N\\\")';\\n</script>\"\n```\n\n----------------------------------------\n\nTITLE: Implementing GetPublicEditHTML Method in CIBlockPropertyDirectory Class (PHP)\nDESCRIPTION: This method returns HTML for displaying a control element to edit property values in the public part of the site. It is a static method that takes property metadata, property value, and control names as parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Highload-bloki/Klassy/CIBlockPropertyDirectory/GetPublicEditHTML.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring \nCIBlockPropertyDirectory::GetPublicEditHTML(\n\tarray property,\n\tarray value,\n\tarray control\n);\n```\n\n----------------------------------------\n\nTITLE: CWiki::Rename Method Signature in PHP\nDESCRIPTION: The method signature for CWiki::Rename which changes a Wiki page, adds an entry to the history and manages category linkages. It's a non-static method available since version 9.5.1.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/Rename.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCWiki::Rename(\n\tint ID,\n\tarray arFields,\n\tbUpdateSearch=true\n);\n```\n\n----------------------------------------\n\nTITLE: CBlogGroup::Update Method Signature in PHP\nDESCRIPTION: Method signature for updating blog group parameters. Takes the ID of the group to be modified and an array of new field values. Returns the ID of the updated group or false on error.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogGroup/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCBlogGroup::Update(\n\tint   ID\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: CFormOutput::ShowInputCaptionImage Method Signature in PHP\nDESCRIPTION: Method signature for ShowInputCaptionImage which outputs an image attached to a form question. The method returns HTML code for displaying the image or an empty string if no image exists. Parameters are similar to CFile::ShowImage.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowInputCaptionImage.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCFormOutput::ShowInputCaptionImage(\n\tstring $FIELD_SID[,\n\tstring $sAlign = \"\", \n\tint $iMaxW = 0\n\tint $iMaxH = 0\n\tstring $bPopup = \"N\", \n\tstring $strPopupTitle = \"\", \n\tstring $sHSpace = \"\", \n\tstring $sVSpace = \"\", \n\tstring $sBorder = \"\"\n]\n);\n```\n\n----------------------------------------\n\nTITLE: Updating CLAnswer Method Signature\nDESCRIPTION: Method signature for updating an answer with ID and fields array in the Bitrix learning module. Returns boolean indicating success or failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CLAnswer/Update.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCLAnswer::Update(\n\tint   ID,\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting Test Result Method Signature\nDESCRIPTION: Static method to delete a test result by its ID. Requires learning module to be included and supports transaction handling.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CTestResult/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCTestResult::Delete(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: Subquery Filter Example in PHP\nDESCRIPTION: Example of using SUBQUERY filter parameter to filter elements based on subqueries in Bitrix. The filter allows querying elements based on field values and additional filter conditions.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Informatsionnye_bloki/Klassy/CIBlockElement/GetList.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$filter = array(\"SUBQUERY\" => array(\n\t\"FIELD\" => \"имя поля\",\n\t\"FILTER\" => array(фильтр для отбора предложений)\n))\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CWiki::GetElementByName in PHP\nDESCRIPTION: The method signature for CWiki::GetElementByName, which returns a Wiki page based on a name and filter parameters. This is a static method that accepts the page name, a filter array, and optional component parameters.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/GetElementByName.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nresult_type\nCWiki::GetElementByName(\n\tstring NAME,\n\tarray arFilter,\n\tarComponentParams = array()\n);\n```\n\n----------------------------------------\n\nTITLE: Managing CRM Product Events in PHP\nDESCRIPTION: Events for CRM product operations, including deleting and updating products.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nOnBeforeCrmProductDelete\nOnCrmProductDelete\nOnAfterCrmProductUpdate\n```\n\n----------------------------------------\n\nTITLE: Proper Usage of Bitrix Disk Module\nDESCRIPTION: Illustrates the correct way to work with the Disk module using high-level methods instead of direct table operations.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_18\n\nLANGUAGE: php\nCODE:\n```\n<?php \n//нельзя \nFolderTable::update(); \n//следует \n$folder->rename('New folder 2');\n```\n\n----------------------------------------\n\nTITLE: Defining CBlogUser::Delete Method Signature in PHP\nDESCRIPTION: Method signature for deleting a blog user profile, taking an integer ID parameter and returning a boolean value. This static method removes a user's blog profile based on the provided user ID.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Blogi/Klassy/CBlogUser/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nbool\nCBlogUser::Delete(\n\tint ID\n);\n```\n\n----------------------------------------\n\nTITLE: CTaskTemplates Add Method Signature\nDESCRIPTION: This snippet shows the method signature for the CTaskTemplates::Add method, which takes an array of fields and an optional array of parameters.  It returns an integer representing the ID of the added template.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/Ustarevshee/CTaskTemplates/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"int\\nCTaskTemplates::Add(\\n\\tarray arFields,\\n\\tarray arParams = array()\\n);\"\n```\n\n----------------------------------------\n\nTITLE: Method Signature for CWiki::GetCategory in PHP\nDESCRIPTION: The method signature for GetCategory that returns an array of categories for a Wiki page. It requires the name of the Wiki page and the ID of the infoblock.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Wiki/Klassy/CWiki/GetCategory.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCWiki::GetCategory(\n\tstring NAME,\n\tint IBLOCK_ID\n);\n```\n\n----------------------------------------\n\nTITLE: Email Subscription Object Fields\nDESCRIPTION: Describes the database schema for email subscription management, including unique identifier, user associations, email details, and confirmation status\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CSubscriptionGeneral/Polja_CSubscriptionGeneral.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nclass CSubscriptionGeneral {\n    public $ID; // int, unique subscription identifier\n    public $DATE_INSERT; // datetime of record creation\n    public $DATE_UPDATE; // datetime of last modification\n    public $USER_ID; // int, associated user ID or null for anonymous\n    public $ACTIVE; // char(1), subscription active status\n    public $EMAIL; // string(255), unique email address\n    public $FORMAT; // string(4), preferred content format\n    public $CONFIRM_CODE; // string(8), subscription confirmation code\n    public $CONFIRMED; // char(1), confirmation status\n    public $DATE_CONFIRM; // datetime of confirmation code sending\n}\n```\n\n----------------------------------------\n\nTITLE: CSS: Overriding HTML Editor Background Color\nDESCRIPTION: This CSS code snippet overrides the background color of the Bitrix HTML editor's iframe element. It targets the '.bxedmainframe IFRAME' selector and sets the background color to '#CCCCCC'. This example is specifically targeted for Mozilla Firefox browsers.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Upravlenie_strukturoj/Sobytija/OnBeforeHTMLEditorScriptsGet.md#2025-04-20_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\n/* файл /bitrix/admin/htmleditor2/my_styles.css\nпереопределяем цвет фона редактора (только для Mozilla Firefox) */\n.bxedmainframe IFRAME{\n\tbackground-color: #CCCCCC;\n}Копировать\n```\n\n----------------------------------------\n\nTITLE: Creating a Task Instance\nDESCRIPTION: This snippet demonstrates how to create an instance of the Task class using the task ID.  The first example gets the task entity with a specific ID, while the second specifies both the ID and user.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskItem/getData.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$task = new \\Bitrix\\Tasks\\Item\\Task(100); // получение сущности с выбранным id\n$task = new \\Bitrix\\Tasks\\Item\\Task(100, 1); // получение сущности с выбранным id и пользователем 1\n```\n\n----------------------------------------\n\nTITLE: ShowFormFooter Method Signature in PHP\nDESCRIPTION: The method signature for the ShowFormFooter method which is used to finish rendering a form. This non-static method takes no parameters and returns a string containing the closing HTML code for the form.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormOutput/ShowFormFooter.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstring\nCFormOutput::ShowFormFooter(\n);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Task Data with getData\nDESCRIPTION: These snippets illustrate various ways to retrieve task data using the getData method, including retrieving all information, only core data, all database fields, and user-defined fields. It also showcases how to access specific fields by name.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskItem/getData.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$task->getData();` получить всю информацию о задаче.\n`$task->getData(array('~'));` получить только основные данные. в эту выборку попадут так же закешированные данные. например в одном случае мы запрашивали основные данные, во втором случае у этой же задаче запросили доп поле. то если в третий раз вызвать ~ то доп поле так же будет в выборке.\n`$task->getData(array('#'));` получить все поля, которые есть в базе\n`$task->getData(array('UF_#'));` получить все пользовательские поля\n\nПервый параметр не обязательно может быть массивом. можно и строкой:\n\n`$task->getData('FIELD_NAME');`\n```\n\n----------------------------------------\n\nTITLE: CCourse::GetCourseContent Method Signature\nDESCRIPTION: This shows the signature of the `CCourse::GetCourseContent` method in Bitrix. It takes the course ID and an array of additional fields to select as parameters. It returns a `CDBResult` object, which represents the result set of the query.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CCourse/GetCourseContent.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nCDBResult\nCCourse::GetCourseContent(\n\tint COURSE_ID,\n\tarray arAddSelectFileds = Array(\"DETAIL_TEXT\", \"DETAIL_TEXT_TYPE\", \"DETAIL_PICTURE\")\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: CXMLCreator::createTagAttributed Method Signature in PHP\nDESCRIPTION: Static method signature that creates a CXMLCreator tag from a heavyTag name in a special format. The method returns true if the heavyTag format is incorrect.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-servisy/Klassy/CXMLCreator/createTagAttributed.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nstatic\nCXMLCreator\nCXMLCreator::createTagAttributed(string heavyTag);\n```\n\n----------------------------------------\n\nTITLE: Get Dynamic List Method Signature\nDESCRIPTION: Defines the signature of the `CAdv::GetDynamicList` method. This method retrieves data on traffic for an advertising campaign, broken down by dates.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CAdv/GetDynamicList.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"CDBResult\nCAdv::GetDynamicList(\n\tint adv_id,\n\tstring &by = \\\"s_date\\\",\n\tstring &order = \\\"desc\\\",\n\tarray &max_min,\n\tarray filter = array()\n)Копировать\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Statistic Event Type\nDESCRIPTION: This PHP code snippet demonstrates how to delete a statistic event type using the `CStatEventType::Delete` method. It takes the event type ID as input and returns true if the deletion was successful.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-analitika/Klassy/CStatEventType/Delete.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?\n$type_id = 1;\nif (CStatEventType::Delete($type_id)) \n\techo \"Тип события #\".$type_id.\" успешно удалено.\";\n?>\n```\n\n----------------------------------------\n\nTITLE: CGradeBook Method Signature in PHP\nDESCRIPTION: Static method signature for adding a new gradebook entry with array of fields as parameter. Returns the ID of the inserted record or false on failure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CGradeBook/Add.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nint\nCGradeBook::Add(\n\tarray arFields\n);\n```\n\n----------------------------------------\n\nTITLE: Managing Other CRM Events in PHP\nDESCRIPTION: Miscellaneous CRM events, including entity types, event management, activity providers, and status management.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\nOnGetEntityTypes\nOnAfterCrmAddEvent\nOnGetActivityProviders\nOnBeforeCrmAddEvent\nOnBeforeCrmEventDelete\nOnBeforeCrmEventDeleteByElement\nOnCrmStatusGetList\n```\n\n----------------------------------------\n\nTITLE: Managing CRM Product Catalog Events in PHP\nDESCRIPTION: Events for CRM product catalog operations, specifically for deleting catalogs.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Sobytija.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nOnBeforeCrmCatalogDelete\nOnCrmCatalogDelete\n```\n\n----------------------------------------\n\nTITLE: CTaskElapsedItem Update Method Signature\nDESCRIPTION: Defines the signature of the `update` method within the `CTaskElapsedItem` class. It accepts an array (`arFields`) containing the updated time tracking data.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Zadachi/Klassy/CTaskElapsedItem/update.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"void\npublic function update(\n\tarray arFields,\n);Копировать\"\n```\n\n----------------------------------------\n\nTITLE: CPosting::GetEmailStatuses method signature\nDESCRIPTION: This is the method signature for CPosting::GetEmailStatuses. It shows that it accepts an integer ID as a parameter and returns an array. This method returns an array of statuses in the queue.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Podpiska,_rassylki/Klassy/CPostingGeneral/GetEmailStatuses.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\narray\nCPosting::GetEmailStatuses(\n\tint ID\n);Копировать\n```\n\n----------------------------------------\n\nTITLE: Deprecated Chapter Management Class in Bitrix\nDESCRIPTION: Class CChapter provides methods for working with learning chapters, deprecated since version 12.0.0 and replaced by CLearnLesson\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Obuchenie/Klassy/CChapter.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nclass CChapter {\n    // Methods for chapter management\n    public static function GetList() {}\n    public static function GetByID() {}\n    public static function Add() {}\n    public static function Update() {}\n    public static function Delete() {}\n    public static function GetCount() {}\n    public static function GetTreeList() {}\n    public static function GetNavChain() {}\n}\n```\n\n----------------------------------------\n\nTITLE: Получение данных измерений в CRM Bitrix (PHP)\nDESCRIPTION: Демонстрация получения списка измерений и измерения по умолчанию в CRM Bitrix. Используются методы getMeasures() и getDefaultMeasure() класса \\Bitrix\\Crm\\Measure.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/CRM/Osnovnye_metody_raboty.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('crm')) \n{ \n\t//получение списка измерений \n\t\\Bitrix\\Crm\\Measure::getMeasures(); \n\t//получение одного измерения по умолчанию \n\t\\Bitrix\\Crm\\Measure::getDefaultMeasure(); \n\t//вернется массив массивов вида: \n\t/* \n\t\t[ID] => 1 \n\t\t[CODE] => 6 \n\t\t[IS_DEFAULT] =>  \n\t\t[SYMBOL] => м \n\t*/ \n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Validator Settings from Database in PHP Bitrix API\nDESCRIPTION: This method returns validator settings by converting the string stored in the database. It works similarly to directly calling the validator's CONVERT_FROM_DB method. When calling CFormValidator::GetList and CFormValidator::GetListForm methods, it's invoked automatically. This is a non-static method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormValidator/GetSettingsArray.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray\nCFormValidator::GetSettingsArray(\n\tarray arValidator,\n\tstring strParams\n)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Storage Objects in Bitrix Disk\nDESCRIPTION: Demonstrates different methods to obtain storage objects for users, groups, or by specific identifiers.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('disk')) \n{ \n\t$driver = \\Bitrix\\Disk\\Driver::getInstance(); \n\t$storage = $driver->getStorageByUserId(1);//пользователя \n\t$storage = $driver->getStorageByGroupId(33);//группы \n\t$storage = $driver->getStorageByCommonId('shared_files_s1');//идентификатор \n\t$storage = \\Bitrix\\Disk\\Storage::loadById(66);//знаем идентификатор хранилища \n\tif ($storage) \n\t{ \n\t\t//можем работать с хранилищем \n\t} \n} \n```\n\n----------------------------------------\n\nTITLE: Searching for a Folder in Bitrix Disk Storage\nDESCRIPTION: Demonstrates how to find a folder in the root of a storage using the getChild method with specific criteria.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('disk'))\n{\n    $storage = \\Bitrix\\Disk\\Driver::getInstance()->getStorageByUserId(1);\n    if ($storage)\n    {\n        // Ищем папку в корне хранилища\n        $folder = $storage->getChild([\n            '=NAME' => 'New folder',\n            'TYPE' => \\Bitrix\\Disk\\Internals\\FolderTable::TYPE_FOLDER\n        ]);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing Bitrix Namespace in PHP\nDESCRIPTION: Shows how to reference Bitrix namespaces in PHP code, including full path and shortened form examples. The documentation illustrates proper syntax for accessing Bitrix namespace classes and functions.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\\Bitrix\\Main\\Class::Function()\n```\n\nLANGUAGE: PHP\nCODE:\n```\nMain\\Class::Function()\n```\n\n----------------------------------------\n\nTITLE: Structure of the Values Parameter for CFormResult::Update\nDESCRIPTION: Example array structure for the values parameter used in the Update method, showing the format for HTML field names and their corresponding values.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Veb-formy/Klassy/CFormResult/Update.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\narray(\n\t\"имя HTML поля 1\" => \"значение 1\",\n\t\"имя HTML поля 2\" => \"значение 2\",\n\t...\n\t\"имя HTML поля N\" => \"значение N\"\n)\n```\n\n----------------------------------------\n\nTITLE: Uploading a File to Root Folder in Bitrix Disk\nDESCRIPTION: Demonstrates how to upload a file directly to the root folder of a user's storage.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nif (\\Bitrix\\Main\\Loader::includeModule('disk')) \n{ \n\t$storage = \\Bitrix\\Disk\\Driver::getInstance()->getStorageByUserId(1); \n\tif ($storage) \n\t{ \n\t\t$folder = $storage->getRootObject(); \n\t\t$fileArray = \\CFile::MakeFileArray($_SERVER['DOCUMENT_ROOT'].'/test.jpg');  \n\t\t$file = $folder->uploadFile($fileArray, array(  \n\t\t\t'CREATED_BY' => 1  \n\t\t));  \n\t} \n}\n```\n\n----------------------------------------\n\nTITLE: Product Tax Rate Definition\nDESCRIPTION: XML structure for defining tax rates for different products, specifically showing VAT rate configuration\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_docs/Internet-magazin/XML-fajly_dlja_obmena_dannymi/Fajl_import.xml.md#2025-04-20_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n\\u003cСтавкиНалогов\\u003e\n\\u003cСтавкаНалога\\u003e\n\\u003cНаименование\\u003eНДС\\u003c/Наименование\\u003e\n\\u003cСтавка\\u003e12\\u003c/Ставка\\u003e\n\\u003c/СтавкаНалога\\u003e\n\\u003c/СтавкиНалогов\\u003e\n```\n\n----------------------------------------\n\nTITLE: Creating a Folder in Bitrix Disk Storage\nDESCRIPTION: Shows how to create a new folder in a user's storage using the addFolder method.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif (\\Bitrix\\Main\\Loader::includeModule('disk')) \n{ \n\t$storage = \\Bitrix\\Disk\\Driver::getInstance()->getStorageByUserId(1); \n\tif ($storage) \n\t{ \n\t\t$folder = $storage->addFolder( \n\t\t\tarray( \n\t\t\t\t'NAME' => 'New folder', \n\t\t\t\t'CREATED_BY' => 1 \n\t\t\t) \n\t\t); \n\t} \n}\n```\n\n----------------------------------------\n\nTITLE: Including the Bitrix Open Lines Module in PHP\nDESCRIPTION: This snippet demonstrates how to include the Bitrix Open Lines module before using it. It uses the Loader class from the Bitrix\\Main namespace to include the 'imopenlines' module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Otkrytye_linii.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule('imopenlines');\n```\n\n----------------------------------------\n\nTITLE: Accessing Physical File in Bitrix Disk\nDESCRIPTION: Shows how to get the physical file ID and use it, for example, to force a download.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif ($file) \n{ \n\t//получение айди физического файла \n\techo $file->getFileId(); \n\t//работаем с ним \n \t   CFile::ViewByUser($file->getFileId(), array('force_download' => true)); \n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Physical File for Download in Bitrix Disk\nDESCRIPTION: Shows how to get the physical file ID and use it to force a download of the file.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n<?php \nif ($file) \n{ \n\t//получение айди физического файла \n\techo $file->getFileId(); \n\t//работаем с ним \n\tCFile::ViewByUser($file->getFileId(), array('force_download' => true)); \n}\n```\n\n----------------------------------------\n\nTITLE: Including Bitrix Lists Module\nDESCRIPTION: Code snippet for checking and including the Lists module in a Bitrix project. This is required before using any functionality from the Lists module.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Universal'nye_spiski.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Bitrix\\Main\\Loader::includeModule('lists');\n```\n\n----------------------------------------\n\nTITLE: High-Level File Operations in Bitrix Disk\nDESCRIPTION: Shows high-level operations on file objects such as marking as deleted and deleting.\nSOURCE: https://github.com/mosolovi/bitrix_full_docs/blob/main/bitrix_D7/Prostranstvo_imen_Bitrix/Disk.md#2025-04-20_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n<?php \n$newFile->markDeleted($deletedBy); \n$newFile->delete($deletedBy);\n```"
  }
]
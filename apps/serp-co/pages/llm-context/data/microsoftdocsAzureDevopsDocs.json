[
  {
    "owner": "microsoftdocs",
    "repo": "azure-devops-docs",
    "content": "TITLE: Parallel Multicloud Kubernetes Deployments with Azure Pipelines YAML\nDESCRIPTION: This YAML snippet orchestrates parallel deployments to multiple Kubernetes clusters (AKS, GKE, EKS, OpenShift, DigitalOcean) using deployment jobs in an Azure Pipelines YAML. Each job targets a namespace mapped to a Kubernetes resource within a defined environment, and applies a manifest directory with the KubernetesManifest task. Each deployment block specifies the pool, environment, and uses the 'deploy' action via a supplied kubernetesServiceConnection. Prerequisites include pipeline environment and namespace setup, correct service connection credentialing, and manifests prepared in the appropriate directory for each cluster.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/kubernetes/deploy.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\njobs:\n- deployment:\n  displayName: Deploy to AKS\n  pool:\n    vmImage: ubuntu-latest\n  environment: contoso.aksnamespace\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - checkout: self\n        - task: KubernetesManifest@0\n          displayName: Deploy to Kubernetes cluster\n          inputs:\n            action: deploy\n            kubernetesServiceConnection: serviceConnection #replace with your service connection\n            namespace: aksnamespace\n            manifests: manifests/*\n- deployment:\n  displayName: Deploy to GKE\n  pool:\n    vmImage: ubuntu-latest\n  environment: contoso.gkenamespace\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - checkout: self\n        - task: KubernetesManifest@0\n          displayName: Deploy to Kubernetes cluster\n          inputs:\n            action: deploy\n            kubernetesServiceConnection: serviceConnection #replace with your service connection\n            namespace: gkenamespace\n            manifests: manifests/*\n- deployment:\n  displayName: Deploy to EKS\n  pool:\n    vmImage: ubuntu-latest\n  environment: contoso.eksnamespace\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - checkout: self\n        - task: KubernetesManifest@0\n          displayName: Deploy to Kubernetes cluster\n          inputs:\n            action: deploy\n            kubernetesServiceConnection: serviceConnection #replace with your service connection\n            namespace: eksnamespace\n            manifests: manifests/*\n- deployment:\n  displayName: Deploy to OpenShift\n  pool:\n    vmImage: ubuntu-latest\n  environment: contoso.openshiftnamespace\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - checkout: self\n        - task: KubernetesManifest@0\n          displayName: Deploy to Kubernetes cluster\n          inputs:\n            action: deploy\n            kubernetesServiceConnection: serviceConnection #replace with your service connection\n            namespace: openshiftnamespace\n            manifests: manifests/*\n- deployment:\n  displayName: Deploy to DigitalOcean\n  pool:\n    vmImage: ubuntu-latest\n  environment: contoso.digitaloceannamespace\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - checkout: self\n        - task: KubernetesManifest@0\n          displayName: Deploy to Kubernetes cluster\n          inputs:\n            action: deploy\n            kubernetesServiceConnection: serviceConnection #replace with your service connection\n            namespace: digitaloceannamespace\n            manifests: manifests/*\n```\n\n----------------------------------------\n\nTITLE: Using Secret Variables in YAML Pipeline with Environment Variable Mapping\nDESCRIPTION: This snippet demonstrates how to use secret variables defined in the UI within a YAML pipeline by mapping them to environment variables. It includes both PowerShell and Bash examples that show how to access and verify the secret values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-secret-variables.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- powershell: |\n      Write-Host \"My first secret variable is $env:FOO_ONE\"\n      $env:FOO_ONE -eq \"foo\"\n  env:\n    FOO_ONE: $(SecretOne)\n- bash: |\n    echo \"My second secret variable: $FOO_TWO\"\n    if [ \"$FOO_TWO\" = \"bar\" ]; then\n        echo \"Strings are equal.\"\n    else\n        echo \"Strings are not equal.\"\n    fi\n  env:\n    FOO_TWO: $(SecretTwo)\n```\n\n----------------------------------------\n\nTITLE: Empty Parameter Object Check\nDESCRIPTION: Shows how to check for empty object parameters using the length() expression function.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runtime-parameters.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: foo\n  type: object\n  default: []\n\nsteps:\n- checkout: none\n- ${{ if eq(length(parameters.foo), 0) }}:\n  - script: echo Foo is empty\n    displayName: Foo is empty\n```\n\n----------------------------------------\n\nTITLE: Basic Single Job Definition in Azure Pipelines\nDESCRIPTION: Simple YAML configuration for a single job running on an Ubuntu agent that outputs 'Hello world'\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-latest'\nsteps:\n- bash: echo \"Hello world\"\n```\n\n----------------------------------------\n\nTITLE: Complete Multi-Stage Azure DevOps YAML Pipeline with Build, Test, and Deployment Stages\nDESCRIPTION: Complete YAML pipeline definition for Azure DevOps that includes build, test, staging deployment, production deployment, alternate production, and rollback stages. The pipeline includes conditional logic, manual validations, and deployment safety mechanisms.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/run-stages.md#2025-04-22_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nstages:\n- stage: Build\n  displayName: 'Build Stage'\n  jobs:\n  - job: BuildJob\n    displayName: 'Build Job'\n    steps:\n    - script: |\n        echo \"Restoring project dependencies...\"\n      displayName: 'Restore dependencies'\n    - script: |\n        echo \"Running unit tests...\"\n      displayName: 'Run unit tests'\n\n- stage: Test\n  displayName: 'Test Stage'\n  dependsOn: Build\n  isSkippable: false\n  jobs:\n  - job: TestJob\n    displayName: 'Test Job'\n    steps:\n    - script: |\n        echo \"Running unit tests...\"\n      displayName: 'Run unit tests'\n\n\n- stage: DeployToStaging\n  displayName: 'Deploy to Staging'\n  dependsOn: Test\n  jobs:\n  - job: DeployStagingJob\n    displayName: 'Deploy to Staging Job'\n    pool:\n      vmImage: 'ubuntu-latest'\n    steps:\n    - script: |\n        echo \"Build staging job...\"\n      displayName: 'Build and deploy to staging'\n\n  - job: DeployStagingJobWithValidation\n    pool: server\n    timeoutInMinutes: 4320 # job times out in 3 days\n    displayName: 'Deploy to Staging Job'\n    steps:\n    - task: ManualValidation@1\n      timeoutInMinutes: 1440 # task times out in 1 day\n      inputs:\n        notifyUsers: user@example.com\n        instructions: 'Please validate the stage configuration and resume'\n        onTimeout: 'resume'\n\n- stage: DeployToProduction\n  displayName: 'Deploy to Production'\n  dependsOn: DeployToStaging\n  lockBehavior: sequential\n  condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/release'))\n  jobs:\n  - job: DeployProductionJob\n    displayName: 'Deploy to Production Job'\n    steps:\n    - script: |\n        echo \"Deploying to production...\"\n        # Add your deployment commands here\n      displayName: 'Run deployment commands'\n  - job: waitForValidation\n    displayName: Wait for external validation\n    pool: server\n    timeoutInMinutes: 4320 # job times out in 3 days\n    steps:\n    - task: ManualValidation@1\n      timeoutInMinutes: 1440 # task times out in 1 day\n      inputs:\n        notifyUsers: user@example.com\n        instructions: 'Please validate the build configuration and resume'\n        onTimeout: 'resume'\n\n- stage: DeployToAlternateProduction\n  displayName: 'Deploy to Alternate Production'\n  condition: succeeded()\n  trigger: manual\n  jobs:\n  - job: DeployAlternateProductionJob\n    displayName: 'Deploy to Alternate Production Job'\n    steps:\n    - script: |\n        echo \"Deploying to alternate production...\"\n        # Add your deployment commands here\n      displayName: 'Run deployment commands'\n\n- stage: Rollback\n  displayName: 'Rollback Stage'\n  trigger: manual\n  jobs:\n  - job: RollbackJob\n    displayName: 'Rollback Job'\n    steps:\n    - script: |\n        echo \"Rolling back the deployment...\"\n        # Add your rollback commands here\n      displayName: 'Run rollback commands'\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Docker Images with Azure Pipelines (YAML) - YAML\nDESCRIPTION: This YAML snippet defines an Azure DevOps pipeline that builds and pushes a Docker image to Azure Container Registry using the Docker@2 task. It specifies triggers, variables for registry and image repository configuration, and a single build stage that utilizes an Ubuntu agent VM. Required dependencies include an existing Azure subscription, an Azure Container Registry, and a registered Docker service connection. Key parameters include dockerRegistryServiceConnection (service connection GUID), imageRepository, containerRegistry, dockerfilePath (path to the Dockerfile), and tag (image tag to use). The pipeline expects a valid Dockerfile and pushes the image upon successful build; misconfiguration of the service connection or variables will prevent successful image building or deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/push-image.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Docker\n# Build and push an image to Azure Container Registry\n# https://docs.microsoft.com/azure/devops/pipelines/languages/docker\n\ntrigger:\n- main\n\nresources:\n- repo: self\n\nvariables:\n  # Container registry service connection established during pipeline creation\n  dockerRegistryServiceConnection: '7f9dc28e-5551-43ee-891f-33bf61a995de'\n  imageRepository: 'usernamepipelinesjavascriptdocker'\n  containerRegistry: 'repoistoryname.azurecr.io'\n  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'\n  tag: '$(Build.BuildId)'\n\n  # Agent VM image name\n  vmImageName: 'ubuntu-latest'\n\nstages:\n- stage: Build\n  displayName: Build and push stage\n  jobs:\n  - job: Build\n    displayName: Build\n    pool:\n      vmImage: $(vmImageName)\n    steps:\n    - task: Docker@2\n      displayName: Build and push an image to container registry\n      inputs:\n        command: buildAndPush\n        repository: $(imageRepository)\n        dockerfile: $(dockerfilePath)\n        containerRegistry: $(dockerRegistryServiceConnection)\n        tags: |\n          $(tag)\n\n```\n\n----------------------------------------\n\nTITLE: Checking Out a Branch in Git Command Line\nDESCRIPTION: Command to switch to a specific branch in Git. This allows you to start working in the branch you've created or collaborate on an existing branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/gitquickstart.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n> git checkout ReadMeFix\n```\n\n----------------------------------------\n\nTITLE: Implementing Multi-Stage CI/CD Pipeline in Azure DevOps with YAML\nDESCRIPTION: This YAML pipeline configures a multi-stage CI/CD workflow with Build and Dev stages. The Build stage compiles a .NET web application with npm and Sass assets, while the Dev stage deploys the build artifacts to an Azure App Service using an Azure Resource Manager service connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- '*'\n\nvariables:\n  buildConfiguration: 'Release'\n  releaseBranchName: 'release'\n\nstages:\n- stage: 'Build'\n  displayName: 'Build the web application'\n  jobs: \n  - job: 'Build'\n    displayName: 'Build job'\n    pool:\n      vmImage: 'ubuntu-20.04'\n      demands:\n      - npm\n\n    variables:\n      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'\n      dotnetSdkVersion: '6.x'\n\n    steps:\n    - task: UseDotNet@2\n      displayName: 'Use .NET SDK $(dotnetSdkVersion)'\n      inputs:\n        version: '$(dotnetSdkVersion)'\n\n    - task: Npm@1\n      displayName: 'Run npm install'\n      inputs:\n        verbose: false\n\n    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'\n      displayName: 'Compile Sass assets'\n\n    - task: gulp@1\n      displayName: 'Run gulp tasks'\n\n    - script: 'echo \"$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)\" > buildinfo.txt'\n      displayName: 'Write build info'\n      workingDirectory: $(wwwrootDir)\n\n    - task: DotNetCoreCLI@2\n      displayName: 'Restore project dependencies'\n      inputs:\n        command: 'restore'\n        projects: '**/*.csproj'\n\n    - task: DotNetCoreCLI@2\n      displayName: 'Build the project - $(buildConfiguration)'\n      inputs:\n        command: 'build'\n        arguments: '--no-restore --configuration $(buildConfiguration)'\n        projects: '**/*.csproj'\n\n    - task: DotNetCoreCLI@2\n      displayName: 'Publish the project - $(buildConfiguration)'\n      inputs:\n        command: 'publish'\n        projects: '**/*.csproj'\n        publishWebProjects: false\n        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'\n        zipAfterPublish: true\n\n    - publish: '$(Build.ArtifactStagingDirectory)'\n      artifact: drop\n\n- stage: 'Dev'\n  displayName: 'Deploy to the dev environment'\n  dependsOn: Build\n  condition:  succeeded()\n  jobs:\n  - deployment: Deploy\n    pool:\n      vmImage: 'ubuntu-20.04'\n    environment: dev\n    variables:\n    - group: Release\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - download: current\n            artifact: drop\n          - task: AzureWebApp@1\n            displayName: 'Azure App Service Deploy: dev website'\n            inputs:\n              azureSubscription: 'your-subscription'\n              appType: 'webAppLinux'\n              appName: '$(WebAppNameDev)'\n              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-Stage Pipeline with Manual Trigger in Azure DevOps YAML Pipeline\nDESCRIPTION: Demonstrates how to create a pipeline with both automatic and manually triggered stages. The development stage runs automatically, while the production stage requires manual approval before execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: development\n  displayName: Deploy to development\n  jobs:\n  - job: DeployJob\n    steps:\n    - script: echo 'hello, world'\n      displayName: 'Run script'\n- stage: production\n  displayName: Deploy to production\n  trigger: manual\n  jobs:\n  - job: DeployJob\n    steps:\n    - script: echo 'hello, world'\n      displayName: 'Run script'\n```\n\n----------------------------------------\n\nTITLE: Conditional Template Selection in Azure Pipelines\nDESCRIPTION: Shows how to conditionally select different templates at runtime based on a boolean parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-parameters.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n#azure-pipeline.yml\nparameters:\n- name: experimentalTemplate \n  displayName: 'Use experimental build process?'\n  type: boolean\n  default: false\n\nsteps:\n- ${{ if eq(parameters.experimentalTemplate, true) }}: # Check if 'experimentalTemplate' is true\n  - template: experimental.yml\n- ${{ if not(eq(parameters.experimentalTemplate, true)) }}:  # Check if 'experimentalTemplate' is not true\n  - template: stable.yml\n```\n\n----------------------------------------\n\nTITLE: Implementing the Rolling Deployment Strategy with Lifecycle Hooks in Azure Pipelines (YAML)\nDESCRIPTION: This snippet details the `rolling` deployment strategy for Azure Pipelines targeting Linux VMs. It defines `maxParallel: 2` to update two VMs concurrently per iteration. It includes various lifecycle hooks (`preDeploy`, `deploy`, `routeTraffic`, `postRouteTraffic`) with example steps like downloading artifacts, running a Java application deployment script using Bash, routing traffic, and performing health checks. It also shows how to define steps for `on: failure` and `on: success` scenarios. Placeholders `<environment name>` and `<VM tag>` specify the target pre-configured Azure DevOps environment and VMs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/deploy-linux-vm.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\njobs: \n- deployment: VMDeploy\n  displayName: web\n  environment:\n    name: <environment name>\n    resourceType: VirtualMachine\n    tags: <VM tag>\n  strategy:\n      rolling:\n        maxParallel: 2  #for percentages, mention as x%\n        preDeploy:\n          steps:\n          - download: current\n            artifact: drop\n          - script: echo initialize, cleanup, backup, install certs\n        deploy:\n          steps:\n          - task: Bash@3\n            inputs:\n              targetType: 'inline'\n              script: |\n                # Modify deployment script based on the app type\n                echo \"Starting deployment script run\"\n                sudo java -jar '$(Pipeline.Workspace)/drop/**/target/*.jar'\n        routeTraffic:\n          steps:\n          - script: echo routing traffic\n        postRouteTraffic:\n          steps:\n          - script: echo health check post-route traffic\n        on:\n          failure:\n            steps:\n            - script: echo Restore from backup! This is on failure\n          success:\n            steps:\n            - script: echo Notify! This is on success\n```\n\n----------------------------------------\n\nTITLE: Configuring settings.xml for Azure Artifacts Maven Authentication\nDESCRIPTION: This XML snippet demonstrates how to set up the settings.xml file for authenticating with an Azure Artifacts Maven feed. It includes a server configuration with placeholders for the organization name and Personal Access Token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/maven/pom-and-settings.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n  <servers>\n    <server>\n      <id>MavenDemo</id>\n      <username><ORGANIZATION_NAME></username>\n      <password>[PERSONAL_ACCESS_TOKEN]</password>\n    </server>\n  </servers>\n```\n\n----------------------------------------\n\nTITLE: Defining and Using Job Variables in Azure DevOps YAML Pipeline\nDESCRIPTION: Demonstrates how to define variables at the job level and reference them in tasks using the $(variableName) syntax. Shows variable access in different shell environments including handling variables with special characters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  mySimpleVar: simple var value\n  \"my.dotted.var\": dotted var value\n  \"my var with spaces\": var with spaces value\n\nsteps:\n- script: echo Input macro = $(mySimpleVar). Env var = %MYSIMPLEVAR%\n  condition: eq(variables['agent.os'], 'Windows_NT')\n- script: echo Input macro = $(mySimpleVar). Env var = $MYSIMPLEVAR\n  condition: in(variables['agent.os'], 'Darwin', 'Linux')\n- bash: echo Input macro = $(my.dotted.var). Env var = $MY_DOTTED_VAR\n- powershell: Write-Host \"Input macro = $(my var with spaces). Env var = $env:MY_VAR_WITH_SPACES\"\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image with Azure Pipelines (Hosted Agent)\nDESCRIPTION: Defines an Azure Pipelines YAML configuration to build a Docker image using the `Docker@2` task. It triggers on pushes to the main branch, specifies a Microsoft-hosted agent VM image (`ubuntu-latest` or `windows-latest`), defines an `imageName` variable, and executes the build command using the Dockerfile located at `app/Dockerfile`. This configuration is suitable for Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/build-image.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest' \n\nvariables:\n  imageName: 'pipelines-javascript-docker'\n\nsteps:\n- task: Docker@2\n  displayName: Build an image\n  inputs:\n    repository: $(imageName)\n    command: build\n    Dockerfile: app/Dockerfile\n```\n\n----------------------------------------\n\nTITLE: Publishing Python Package to Azure Artifacts Feed in YAML Pipeline\nDESCRIPTION: This YAML snippet shows the complete process of setting up Python, installing necessary tools, building the package, authenticating with the feed, and uploading the package to an Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pypi.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: UsePythonVersion@0\n  displayName: 'Use Python 3.x'\n\n- script: |\n    pip install build\n    pip install twine\n  displayName: 'Install build and twine'\n\n- script: |\n    python -m build -w\n  displayName: 'Python build'\n\n- task: TwineAuthenticate@1\n  inputs:\n    artifactFeed: <PROJECT_NAME/FEED_NAME>                ## For an organization-scoped feed, use: artifactFeed: <FEED_NAME>\n  displayName: 'Twine Authenticate'\n\n- script: |\n    python -m twine upload -r <FEED_NAME> --config-file $(PYPIRC_PATH) dist/*.whl\n  displayName: 'Upload to feed'\n```\n\n----------------------------------------\n\nTITLE: Basic Azure DevOps Connection with .NET Client Library\nDESCRIPTION: Demonstrates how to create an authenticated connection to Azure DevOps Services using VssConnection and retrieve Git repository data. Uses VssBasicCredential for authentication and GitHttpClient for API interactions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/dotnet-client-libraries.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing Microsoft.VisualStudio.Services.Common;\nusing Microsoft.VisualStudio.Services.Client;\nusing Microsoft.TeamFoundation.SourceControl.WebApi;\nusing Microsoft.VisualStudio.Services.WebApi;\n\nconst String c_collectionUri = \"https://dev.azure.com/fabrikam\";\nconst String c_projectName = \"MyGreatProject\";\nconst String c_repoName = \"MyRepo\";\n\nUri orgUrl = new Uri(c_collectionUri);\n\n// Connect to Azure DevOps Services\nVssConnection connection = new VssConnection(orgUrl, new VssBasicCredential(string.Empty, personalAccessToken));\n\n// Get a GitHttpClient to talk to the Git endpoints\nusing (GitHttpClient gitClient = connection.GetClient<GitHttpClient>())\n{\n    // Get data about a specific repository\n    var repo = gitClient.GetRepositoryAsync(c_projectName, c_repoName).Result;\n}\n```\n\n----------------------------------------\n\nTITLE: Switching Git Branches\nDESCRIPTION: Command to checkout and switch to a different existing branch\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_7\n\nLANGUAGE: git\nCODE:\n```\ngit checkout branchname\n```\n\n----------------------------------------\n\nTITLE: Using @self Reference in Template for Referencing the Original Repository\nDESCRIPTION: A template in a central repository that uses @self to refer back to the repository where the pipeline was originally defined. This pattern enables flexible template composition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\n# Repo: Contoso/Central\n# File: template.yml\njobs:\n- job: PreBuild\n  steps: []\n\n  # Template reference to the repo where this template was\n  # included from - consumers of the template are expected\n  # to provide a \"BuildJobs.yml\"\n- template: BuildJobs.yml@self\n\n- job: PostBuild\n  steps: []\n```\n\n----------------------------------------\n\nTITLE: Reusing Jobs Across Multiple Templates in Azure Pipelines (YAML)\nDESCRIPTION: This example shows how to create a template with predefined jobs that can be reused in a pipeline. The template defines jobs for different operating systems with their respective configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# File: templates/jobs.yml\njobs:\n- job: Ubuntu\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - bash: echo \"Hello Ubuntu\"\n\n- job: Windows\n  pool:\n    vmImage: 'windows-latest'\n  steps:\n  - bash: echo \"Hello Windows\"\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\n\njobs:\n- template: templates/jobs.yml  # Template reference\n```\n\n----------------------------------------\n\nTITLE: Deleting Pipeline Variables with Azure CLI\nDESCRIPTION: Command syntax for deleting variables from Azure DevOps pipelines with required and optional parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable delete --name\n                             [--org]\n                             [--pipeline-id]\n                             [--pipeline-name]\n                             [--project]\n                             [--yes]\n```\n\n----------------------------------------\n\nTITLE: Submitting iOS App for App Store Review Using AppStorePromote Task in YAML Pipeline\nDESCRIPTION: This snippet shows how to use the AppStorePromote task to submit a previously uploaded iOS app from iTunes Connect to the App Store for review. It requires an Apple App Store service connection, specifies the app identifier, and configures automatic release settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/xcode.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AppStorePromote@1\n  displayName: 'Submit to the App Store for review'\n  inputs:\n    serviceEndpoint: 'My Apple App Store service connection'\n    appIdentifier: com.yourorganization.testapplication.etc\n    shouldAutoRelease: false\n```\n\n----------------------------------------\n\nTITLE: Converting Azure VM Disk to Managed using Azure CLI\nDESCRIPTION: Converts the OS disk of a deallocated Azure Virtual Machine from an unmanaged disk to a managed disk. This is typically done after creating a VM from a VHD using `--use-unmanaged-disk` and deallocating the VM.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm convert --resource-group <myResourceGroup> --name <MyVM>\n```\n\n----------------------------------------\n\nTITLE: Using Secret Variable for Carthage Authentication in Azure Pipelines YAML\nDESCRIPTION: Executes the `carthage update` command for the iOS platform within a script task. It securely passes a GitHub access token, stored in the secret pipeline variable `myGitHubAccessToken`, to the `GITHUB_ACCESS_TOKEN` environment variable. This allows Carthage to authenticate and fetch dependencies from private GitHub repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/xcode.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- script: carthage update --platform iOS\n  env:\n    GITHUB_ACCESS_TOKEN: $(myGitHubAccessToken)\n```\n\n----------------------------------------\n\nTITLE: Expanding Parent Work Items with Specific Columns in OData\nDESCRIPTION: This query shows how to use the $expand clause with a nested $select to retrieve specific columns from both work items and their parents. It improves performance by limiting the properties returned from the expanded object.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_20\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $select=WorkItemId, Title, State\n  &$expand=Parent($select=WorkItemId, Title, State)\n```\n\n----------------------------------------\n\nTITLE: Reusing Stages Across Multiple Templates in Azure Pipelines (YAML)\nDESCRIPTION: This example shows how to create stage templates and include them in a pipeline. Each template defines a different stage of the build process that can be assembled in the main pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# File: templates/stages1.yml\nstages:\n- stage: Angular\n  jobs:\n  - job: angularinstall\n    steps:\n    - script: npm install angular\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: templates/stages2.yml\nstages:\n- stage: Build\n  jobs:\n  - job: build\n    steps:\n    - script: npm run build\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nstages:\n- stage: Install\n  jobs: \n  - job: npminstall\n    steps:\n    - task: Npm@1\n      inputs:\n        command: 'install'\n- template: templates/stages1.yml # Template reference\n- template: templates/stages2.yml # Template reference\n```\n\n----------------------------------------\n\nTITLE: Configuring Go 1.11+ Pipeline in YAML\nDESCRIPTION: Defines a complete Azure Pipeline for Go 1.11+ projects. It sets up the Go tool version, downloads dependencies using `go get`, builds the project using `go build`, copies build output, and publishes the artifacts. This approach leverages Go's built-in dependency management introduced in Go 1.11.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/go.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: \n - main\n\npool:\n   vmImage: 'ubuntu-latest'\n\nsteps: \n- task: GoTool@0\n  inputs:\n    version: '1.13.5'\n- task: Go@0\n  inputs:\n    command: 'get'\n    arguments: '-d'\n    workingDirectory: '$(System.DefaultWorkingDirectory)'\n- task: Go@0\n  inputs:\n    command: 'build'\n    workingDirectory: '$(System.DefaultWorkingDirectory)'\n- task: CopyFiles@2\n  inputs:\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n- task: PublishBuildArtifacts@1\n  inputs:\n     artifactName: drop\n```\n\n----------------------------------------\n\nTITLE: Creating a Pull Request using Azure DevOps CLI\nDESCRIPTION: This Azure CLI command creates a new pull request in an Azure Repos project. It has options to configure various PR settings like auto-complete, bypass policy, delete source branch, add description, reviewers, etc.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-requests.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr create [--auto-complete {false, true}]\n                   [--bypass-policy {false, true}]\n                   [--bypass-policy-reason]\n                   [--delete-source-branch {false, true}]\n                   [--description]\n                   [--detect {false, true}]\n                   [--draft {false, true}]\n                   [--merge-commit-message]\n                   [--open]\n                   [--org]\n                   [--project]\n                   [--repository]\n                   [--reviewers]\n                   [--source-branch]\n                   [--squash {false, true}]\n                   [--subscription]\n                   [--target-branch]\n                   [--title]\n                   [--transition-work-items {false, true}]\n                   [--work-items]\n```\n\n----------------------------------------\n\nTITLE: Setting Multi-Job Output Variables in YAML Pipeline\nDESCRIPTION: This YAML example demonstrates how to pass variables between jobs in the same stage. It sets a variable with isOutput=true in job A and maps it to a variable in job B using the $[] expression syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n# Set an output variable from job A\n- job: A\n  pool:\n    vmImage: 'windows-latest'\n  steps:\n  - powershell: echo \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the value\"\n    name: setvarStep\n  - script: echo $(setvarStep.myOutputVar)\n    name: echovar\n\n# Map the variable into job B\n- job: B\n  dependsOn: A\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    myVarFromJobA: $[ dependencies.A.outputs['setvarStep.myOutputVar'] ]  # map in the variable\n                                                                          # remember, expressions require single quotes\n  steps:\n  - script: echo $(myVarFromJobA)\n    name: echovar\n```\n\n----------------------------------------\n\nTITLE: Implementing Pivot Table Widget in Azure DevOps using JavaScript\nDESCRIPTION: This code initializes an Azure DevOps extension to create a Pivot Table widget. It uses the Charts Service to render a table chart with customizable data series, axes, and styling options. The widget displays data in a matrix format, allowing for easy comparison and analysis of complex information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-chart.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nVSS.init({\n        explicitNotifyLoaded: true,\n        usePlatformStyles: true \n    });\n\nVSS.require([\n        \"TFS/Dashboards/WidgetHelpers\", \n        \"Charts/Services\"\n        ],\n        function (WidgetHelpers, Services) {\n        WidgetHelpers.IncludeWidgetStyles();\n        VSS.register(\"PivotTable\", function () { \n             return {\n             load:function() {\n                return Services.ChartsService.getService().then(function(chartService){\n                    var $container = $('#Chart-Container');\n                    var chartOptions = { \n                        \"hostOptions\": { \n                            \"height\": \"290\", \n                            \"width\": \"300\"\n                        },\n                        \"chartType\": \"table\",\n                        \"xAxis\": {\n                            \"labelValues\": [\"Design\",\"In Progress\",\"Resolved\",\"Total\"]\n                        },\n                        \"yAxis\": {\n                            \"labelValues\": [\"P1\",\"P2\",\"P3\",\"Total\"]\n                        },\n                        \"series\": [\n                            {\n                                \"name\": \"Design\",\n                                \"data\": [\n                                    [0,0,1],\n                                    [0,1,2],\n                                    [0,2,3]\n                                ]\n                            },\n                            {\n                                \"name\": \"In Progress\",\n                                \"data\": [\n                                    [1,0,4],\n                                    [1,1,5],\n                                    [1,2,6]\n                                ]\n                            },\n                            {\n                                \"name\": \"Resolved\",\n                                \"data\": [\n                                    [2,0,7],\n                                    [2,1,8],\n                                    [2,2,9]\n                                ]\n                            },\n                            {\n                                \"name\": \"Total\",\n                                \"data\": [\n                                    [3,0,12],\n                                    [3,1,15],\n                                    [3,2,18],\n                                    [0,3,6],\n                                    [1,3,15],\n                                    [2,3,24],\n                                    [3,3,10]\n                                ],\n                                \"color\": \"rgba(255,255,255,0)\"\n                            }\n                        ]\n                    }\n\n                    chartService.createChart($container, chartOptions);\n                    return WidgetHelpers.WidgetStatusHelper.Success();\n                });\n                }\n             }\n            });\n    VSS.notifyLoadSucceeded();\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Pipeline with Multiple Repository Access\nDESCRIPTION: This YAML pipeline configuration demonstrates how to access repositories across multiple projects in Azure DevOps. It includes resource declarations for three repositories and checkout steps for each, including handling of submodules.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/secure-access-to-repos.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nresources:\n  repositories:\n    - repository: SpaceGameWebReact\n      name: SpaceGameWeb/SpaceGameWebReact\n      type: git\n    - repository: FabrikamFiber\n      name: FabrikamFiber/FabrikamFiber\n      type: git\n    - repository: FabrikamChat\n      name: FabrikamFiber/FabrikamChat\n      type: git\n\nsteps:\n  - script: echo \"Building SpaceGameWeb\"\n  - checkout: SpaceGameWebReact\n  - checkout: FabrikamChat\n    condition: always()  \n  - checkout: FabrikamFiber\n    submodules: true\n    condition: always()\n  - script: |\n      cd FabrikamFiber\n      git -c http.extraheader=\"AUTHORIZATION: bearer $(System.AccessToken)\" submodule update --recursive --remote\n  - script: cat $(Build.Repository.LocalPath)/FabrikamFiber/FabrikamFiberLib/README.md\n  - ...\n```\n\n----------------------------------------\n\nTITLE: Creating Web App Deployment Package\nDESCRIPTION: YAML configuration for creating a deployable web app package as a zip file using dotnet publish command. Prepares the application for deployment to Azure Web Apps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# ...\n# do this after you've built your app, near the end of your pipeline in most cases\n# for example, you do this before you deploy to an Azure web app on Windows\n- task: DotNetCoreCLI@2\n  inputs:\n    command: publish\n    publishWebProjects: True\n    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'\n    zipAfterPublish: True\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Python Apps with Azure Pipelines (YAML) - YAML\nDESCRIPTION: This YAML pipeline defines an Azure Pipeline to build, test, and publish Python application artifacts using Microsoft-hosted agents. It utilizes a matrix strategy to test multiple Python versions (3.10, 3.11, 3.12), installs dependencies from requirements.txt, archives build outputs, publishes the artifact, and runs tests via pytest. Dependencies include a GitHub repository with a requirements.txt, Azure Pipelines, and compatible hosted agents. The pipeline parameters allow easy extension to other Python versions; build artifacts are created as zip archives per build and Python version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nstrategy:\n  matrix:\n    Python310:\n      python.version: '3.10'\n    Python311:\n      python.version: '3.11'\n    Python312:\n      python.version: '3.12'\n\nsteps:\n  - task: UsePythonVersion@0\n    inputs:\n      versionSpec: '$(python.version)'\n    displayName: 'Use Python $(python.version)'\n  \n  - script: |\n      python -m pip install --upgrade pip\n      pip install -r requirements.txt\n    displayName: 'Install dependencies'\n  \n  - task: ArchiveFiles@2\n    displayName: 'Archive files'\n    inputs:\n      rootFolderOrFile: $(System.DefaultWorkingDirectory)\n      includeRootFolder: false\n      archiveType: zip\n      archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-$(python.version).zip\n      replaceExistingArchive: true\n  \n  - task: PublishBuildArtifacts@1\n    inputs:\n      PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n      ArtifactName: 'drop'\n      publishLocation: 'Container'\n\n  - script: |\n      pip install pytest pytest-azurepipelines\n      pytest\n    displayName: 'pytest'\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Python Apps on Self-Hosted Agents with Azure Pipelines (YAML) - YAML\nDESCRIPTION: This YAML pipeline demonstrates configuring Azure Pipelines for Python application CI/CD using a self-hosted agent. Users should update the pool name and Python version to match their self-hosted setup. The pipeline installs dependencies, archives artifacts, publishes them, and runs tests with pytest. Dependencies include self-hosted agent setup, appropriate Python installation, requirements.txt, and Azure Pipelines configuration permissions. All parameters and steps are tailored for more granular control, especially when using bespoke agent pools or varying agent environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n  trigger:\n  - main\n  \n  pool: \n    name: '<your-pool-name or default>'\n  \n  steps:\n  - task: UsePythonVersion@0\n    inputs:\n      versionSpec: '3.12'\n    displayName: 'Use Python 3.12'  \n  \n  - script: |\n      python -m pip install --upgrade pip\n      pip install -r requirements.txt\n    displayName: 'Install dependencies'\n  \n  \n  - task: ArchiveFiles@2\n    displayName: 'Archive files'\n    inputs:\n      rootFolderOrFile: $(System.DefaultWorkingDirectory)\n      includeRootFolder: false\n      archiveType: zip\n      archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n      replaceExistingArchive: true\n  \n  - task: PublishBuildArtifacts@1\n    inputs:\n      PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n      ArtifactName: 'drop'\n      publishLocation: 'Container'\n  \n  - script: |\n      pip install pytest pytest-azurepipelines\n      pytest\n    displayName: 'pytest'\n```\n\n----------------------------------------\n\nTITLE: Multi-Container Django Application with PostgreSQL and MySQL in Azure Pipelines\nDESCRIPTION: Complete YAML configuration for a multi-container setup with a Django Python web application connected to PostgreSQL and MySQL databases. The example includes volume and port configuration, environment variables, and test execution steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/service-containers.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n    - container: db\n      image: postgres\n      volumes:\n          - '/data/db:/var/lib/postgresql/data'\n      env:\n        POSTGRES_DB: postgres\n        POSTGRES_USER: postgres\n        POSTGRES_PASSWORD: postgres\n    - container: mysql\n      image: 'mysql:5.7'\n      ports:\n         - '3306:3306'\n      env:\n        MYSQL_DATABASE: users\n        MYSQL_USER: mysql\n        MYSQL_PASSWORD: mysql\n        MYSQL_ROOT_PASSWORD: mysql\n    - container: web\n      image: python\n      volumes:\n      - '/code'\n      ports:\n        - '8000:8000'\n\npool:\n  vmImage: 'ubuntu-latest'\n\ncontainer: web\nservices:\n  db: db\n  mysql: mysql\n\nsteps:\n    - script: |\n        pip install django\n        pip install psycopg2\n        pip install mysqlclient\n      displayName: set up django\n    - script: |\n          python /__w/1/s/manage.py test\n```\n\n----------------------------------------\n\nTITLE: Defining Read-only Variables in YAML Pipeline\nDESCRIPTION: YAML configuration showing how to declare read-only variables in an Azure Pipeline to prevent modification during execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/inputs.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: myReadOnlyVar\n  value: myValue\n  readonly: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipelines Agent Pool with Hosted Image (YAML)\nDESCRIPTION: Specifies the virtual machine image for Microsoft-hosted agents in Azure Pipelines by setting the 'vmImage' property under 'pool' in a YAML pipeline. Required for builds on hosted agents, the 'vmImage' can be set to 'ubuntu-latest', 'macOS-latest', or 'windows-latest' depending on the desired environment. No dependencies aside from Azure Pipelines; expected input is the agent specification, and the output is the assignment of build jobs to the selected environment. Limitations: Options depend on hosted image support.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-latest' # other options: 'macOS-latest', 'windows-latest'\n```\n\n----------------------------------------\n\nTITLE: Specifying .NET SDK Version in Azure Pipelines YAML\nDESCRIPTION: Demonstrates using the `UseDotNet@2` task within an Azure Pipelines YAML file to ensure a specific version of the .NET SDK (in this case, version 8.x) is installed or selected on the build agent. This is often necessary for self-hosted agents to manage SDK dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: UseDotNet@2\n  inputs:\n    version: '8.x'\n```\n\n----------------------------------------\n\nTITLE: Example Azure DevOps Extension Manifest in JSON\nDESCRIPTION: A complete example of an extension manifest that contributes an action to the completed builds context menu and a hub to the Build hub group. It demonstrates proper contribution targeting and referencing patterns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n[!code-json[](../_data/extension.json)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Pull Request Triggers for Validation in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to configure Pull Request (PR) validation triggers using the `pr:` keyword in Azure Pipelines YAML. The pipeline will automatically run when pull requests are opened or updated that target the `main` branch or any branch matching the `releases/*` wildcard pattern.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  - main\n  - releases/*\n```\n\n----------------------------------------\n\nTITLE: Baking and Deploying Kubernetes Manifests with Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to bake Kubernetes manifests from a Helm chart using the KubernetesManifest task, followed by deploying the generated manifests to a Kubernetes cluster. Prerequisites include installing Azure Pipelines agent with necessary access to the cluster and having Helm, as well as setting up the service connection named via kubernetesServiceConnection. The first step uses the 'bake' action to generate manifests, overriding image repository settings, while the second step deploys those manifests specifying the target namespace and container image tag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/kubernetes/deploy.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from Helm chart\n  inputs:\n    action: bake\n    helmChart: charts/sample\n    overrides: 'image.repository:nginx'\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n    manifests: $(bake.manifestsBundle)\n    containers: |\n      nginx: 1.7.9\n```\n\n----------------------------------------\n\nTITLE: Creating Selenium UI Tests in C# for Azure Pipelines\nDESCRIPTION: This code snippet demonstrates how to create a Selenium UI test class in C# that performs a simple search test on Bing.com. It includes setup and cleanup methods for initializing the WebDriver and closing the browser.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/continuous-test-selenium.md#2025-04-22_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\nusing System;\nusing System.Text;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\nusing OpenQA.Selenium;\t\t\t\nusing OpenQA.Selenium.Firefox;\t\nusing OpenQA.Selenium.Chrome;\t\nusing OpenQA.Selenium.IE;\n\nnamespace SeleniumBingTests\n{\n  /// <summary>\n  /// Summary description for MySeleniumTests\n  /// </summary>\n  [TestClass]\n  public class MySeleniumTests\n  {\n    private TestContext testContextInstance;\n    private IWebDriver driver;\n    private string appURL;\n\n    public MySeleniumTests()\n    {\n    }\n\n    [TestMethod]\n    [TestCategory(\"Chrome\")]\n    public void TheBingSearchTest()\n    {\n      driver.Navigate().GoToUrl(appURL + \"/\");\n      driver.FindElement(By.Id(\"sb_form_q\")).SendKeys(\"Azure Pipelines\");\n      driver.FindElement(By.Id(\"sb_form_go\")).Click();\n      driver.FindElement(By.XPath(\"//ol[@id='b_results']/li/h2/a/strong[3]\")).Click();\n      Assert.IsTrue(driver.Title.Contains(\"Azure Pipelines\"), \"Verified title of the page\");\n    }\n\n    /// <summary>\n    ///Gets or sets the test context which provides\n    ///information about and functionality for the current test run.\n    ///</summary>\n    public TestContext TestContext\n    {\n      get\n      {\n        return testContextInstance;\n      }\n      set\n      {\n        testContextInstance = value;\n      }\n    }\n\n    [TestInitialize()]\n    public void SetupTest()\n    {\n      appURL = \"http://www.bing.com/\";\n\n      string browser = \"Chrome\";\n      switch(browser)\n      {\n        case \"Chrome\":\n          driver = new ChromeDriver();\n          break;\n        case \"Firefox\":\n          driver = new FirefoxDriver();\n          break;\n        case \"IE\":\n          driver = new InternetExplorerDriver();\n          break;\n        default:\n          driver = new ChromeDriver();\n          break;\n      }\n      \n    }\n\n    [TestCleanup()]\n    public void MyTestCleanup()\n    {\n      driver.Quit();\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Basic Azure Pipeline in YAML\nDESCRIPTION: This snippet shows a basic Azure Pipelines YAML configuration triggered on the main branch, running on a Microsoft-hosted Ubuntu agent, and executing a single Maven task to package a Java project. It represents a typical starting point before applying customizations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: Maven@4\n  inputs:\n    mavenPomFile: 'pom.xml'\n    mavenOptions: '-Xmx3072m'\n    javaHomeOption: 'JDKVersion'\n    jdkVersionOption: '1.11'\n    jdkArchitectureOption: 'x64'\n    publishJUnitResults: false\n    testResultsFiles: '**/surefire-reports/TEST-*.xml'\n    goals: 'package'\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in YAML Pipeline Task\nDESCRIPTION: Demonstrates how to set environment variables for a task using the env property in a YAML pipeline. The example shows the Azure CLI task with custom environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureCLI@2\n  displayName: Azure CLI\n  inputs: # Specific to each task\n  env:\n    ENV_VARIABLE_NAME: value\n    ENV_VARIABLE_NAME2: value\n  ...\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Pipeline Build Stage for Docker Image using YAML\nDESCRIPTION: This YAML snippet defines the 'Build' stage in an Azure Pipeline generated by the Docker template. It includes a job that runs on a Microsoft-hosted agent (`$(vmImageName)`). The core logic uses the `Docker@2` task with the `buildAndPush` command to build a Docker image based on the specified Dockerfile (`$(dockerfilePath)`) and push it to the configured Azure Container Registry (`$(dockerRegistryServiceConnection)`) using the repository name `$(imageRepository)` and tag `$(tag)`. Dependencies include predefined pipeline variables and a Docker registry service connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/acr-template.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- stage: Build\n  displayName: Build and push stage\n  jobs:  \n  - job: Build\n    displayName: Build job\n    pool:\n      vmImage: $(vmImageName)\n    steps:\n    - task: Docker@2\n      displayName: Build and push an image to container registry\n      inputs:\n        command: buildAndPush\n        repository: $(imageRepository)\n        dockerfile: $(dockerfilePath)\n        containerRegistry: $(dockerRegistryServiceConnection)\n        tags: |\n          $(tag)\n```\n\n----------------------------------------\n\nTITLE: Pipeline Extending a Script-Blocking Template in Azure Pipelines\nDESCRIPTION: A pipeline that extends a template which blocks script execution. Script steps will be stripped out and not run, demonstrating how templates can enforce security policies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\n# azure-pipelines.yml\nextends:\n  template: template.yml\n  parameters:\n    usersteps:\n    - task: MyTask@1\n    - script: echo This step will be stripped out and not run!\n    - bash: echo This step will be stripped out and not run!\n    - powershell: echo \"This step will be stripped out and not run!\"\n    - pwsh: echo \"This step will be stripped out and not run!\"\n    - script: echo This step will be stripped out and not run!\n    - task: CmdLine@2\n      displayName: Test - Will be stripped out\n      inputs:\n        script: echo This step will be stripped out and not run!\n    - task: MyOtherTask@2\n```\n\n----------------------------------------\n\nTITLE: Testing Across Multiple Python Versions with Azure Pipelines YAML\nDESCRIPTION: Runs a test job against multiple Python versions by defining a matrix in Azure Pipelines YAML. Uses the UsePythonVersion task with matrix variables to enable multi-version compatibility testing. Takes advantage of job parallelization; requires Azure Pipelines with matrix strategy support. Outputs are parallel jobs, each using a specified version from the matrix.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\\n- job: 'Test'\\n  pool:\\n    vmImage: 'ubuntu-latest'\\n  strategy:\\n    matrix:\\n      Python38:\\n        python.version: '3.8'\\n      Python39:\\n        python.version: '3.9'\\n      Python310:\\n        python.version: '3.10'\\n\\n  steps:\\n  - task: UsePythonVersion@0\\n    inputs:\\n      versionSpec: '$(python.version)'\\n\n```\n\n----------------------------------------\n\nTITLE: Full Syntax for Defining Stages in Azure Pipelines YAML\nDESCRIPTION: Complete syntax reference for defining stages in a YAML pipeline, including name, display name, dependencies, conditions, pool, variables, and jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: string  # name of the stage, A-Z, a-z, 0-9, and underscore\n  displayName: string  # friendly name to display in the UI\n  dependsOn: string | [ string ]\n  condition: string\n  pool: string | pool\n  variables: { string: string } | [ variable | variableReference ] \n  jobs: [ job | templateReference]\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resources for Tomcat App Service using Azure CLI\nDESCRIPTION: Uses Azure CLI commands to set up the necessary Azure infrastructure for a Java web app on Linux using Tomcat. It first creates a resource group, then a Linux App Service Plan, and finally a Web App specifying the 'TOMCAT|8.5-jre8' runtime. Replace `myapp-rg`, `myapp-service-plan`, and `my-app-name` with desired values. Requires Azure CLI and an active Azure subscription login.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java-webapp.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a resource group\naz group create --location eastus2 --name myapp-rg\n\n# Create an app service plan of type Linux\naz appservice plan create -g myapp-rg -n myapp-service-plan --is-linux\n\n# Create an App Service from the plan with Tomcat and JRE 8 as the runtime\naz webapp create -g myapp-rg -p myapp-service-plan -n my-app-name --runtime \"TOMCAT|8.5-jre8\"\n```\n\n----------------------------------------\n\nTITLE: Web App Container Deployment Pipeline\nDESCRIPTION: Complete YAML pipeline for building Docker image and deploying to Azure Web App for Containers. Includes variable definitions, build stage, and deployment configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/deploy-docker-webapp.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\nresources:\n- repo: self\n\nvariables: \n  azureSubscription: <Name of the Azure subscription>\n  appName: <Name of the Web App>\n  containerRegistry: <Name of the Azure container registry>\n  dockerRegistryServiceConnection: '4fa4efbc-59af-4c0b-8637-1d5bf7f268fc'\n  imageRepository: <Name of image repository>\n  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'\n  tag: '$(Build.BuildId)'\n  vmImageName: 'ubuntu-latest'\n\nstages:\n- stage: Build\n  displayName: Build and push stage\n  jobs:\n  - job: Build\n    displayName: Build\n    pool:\n      vmImage: $(vmImageName)\n    steps:\n    - task: Docker@2\n      displayName: Build and push an image to container registry\n      inputs:\n        command: buildAndPush\n        repository: $(imageRepository)\n        dockerfile: $(dockerfilePath)\n        containerRegistry: $(dockerRegistryServiceConnection)\n        tags: |\n          $(tag)\n\n    - task: AzureWebAppContainer@1\n      displayName: 'Azure Web App on Container Deploy'\n      inputs:\n        azureSubscription: $(azureSubscription)\n        appName: $(appName)\n        containers: $(containerRegistry)/$(imageRepository):$(tag)\n```\n\n----------------------------------------\n\nTITLE: Deploying DACPAC to Azure SQL Database using YAML pipeline\nDESCRIPTION: This YAML snippet uses the Azure SQL Database deployment task to deploy a DACPAC file to an Azure SQL database. It requires an Azure service connection and database details as inputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: SqlAzureDacpacDeployment@1\n  displayName: Execute Azure SQL : DacpacTask\n  inputs:\n    azureSubscription: '<Azure service connection>'\n    ServerName: '<Database server name>'\n    DatabaseName: '<Database name>'\n    SqlUsername: '<SQL user name>'\n    SqlPassword: '<SQL user password>'\n    DacpacFile: '<Location of Dacpac file in $(Build.SourcesDirectory) after compilation>'\n```\n\n----------------------------------------\n\nTITLE: Updating Build Number in Azure DevOps Pipeline\nDESCRIPTION: This command allows you to set a custom build number in an Azure DevOps pipeline. It overrides the automatically generated build number with a user-specified value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_23\n\nLANGUAGE: plaintext\nCODE:\n```\n##vso[build.updatebuildnumber]my-new-build-number\n```\n\n----------------------------------------\n\nTITLE: Using Predefined Variables in Azure Pipeline Templates\nDESCRIPTION: Example of a pipeline that extends a template which uses predefined variables in conditions. This demonstrates how to access pipeline context inside templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\ntrigger:\n- main\n\nextends:\n  template: template.yml\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Manifests Using Kubectl Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet uses the Kubernetes@1 task (i.e., Kubectl task) to apply Kubernetes manifests by connecting to a Kubernetes cluster via a predefined Azure Pipelines service connection. It requires a service endpoint configuration with relevant credentials, and the cluster should be accessible from the agent. The key parameter 'kubernetesServiceEndpoint' must match the name of an existing service connection. The action performed here applies manifests in the cluster according to the specified pipeline context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/kubernetes/deploy.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Kubernetes@1\n  displayName: kubectl apply\n  inputs:\n    connectionType: Kubernetes Service Connection\n    kubernetesServiceEndpoint: Contoso\n```\n\n----------------------------------------\n\nTITLE: Testing with pytest and Collecting Coverage in Azure Pipelines YAML\nDESCRIPTION: Installs pytest and pytest-cov, runs doctest and regular tests, reporting JUnit and coverage XML output (Cobertura format). Supports Azure Pipelines integration with test result and code coverage publishing. Assumes the tests and codebase are Python-compatible. Inputs are the pip install and pytest options, output is test results and coverage files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- script: |\\n    pip install pytest pytest-azurepipelines\\n    pip install pytest-cov\\n    pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml\\n  displayName: 'pytest'\n```\n\n----------------------------------------\n\nTITLE: Multiple Repository Resource Definition and Checkout in Azure Pipeline\nDESCRIPTION: Example showing how to define multiple repository resources including GitHub, Bitbucket, and Azure Repos Git, and check them out in a pipeline. Demonstrates service connection usage and basic checkout syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/multi-repo-checkout.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  repositories:\n  - repository: MyGitHubRepo\n    type: github\n    endpoint: MyGitHubServiceConnection\n    name: MyGitHubOrgOrUser/MyGitHubRepo\n  - repository: MyBitbucketRepo\n    type: bitbucket\n    endpoint: MyBitbucketServiceConnection\n    name: MyBitbucketOrgOrUser/MyBitbucketRepo\n  - repository: MyAzureReposGitRepository\n    endpoint: MyAzureReposGitServiceConnection\n    type: git\n    name: OtherProject/MyAzureReposGitRepo\n\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- checkout: self\n- checkout: MyGitHubRepo\n- checkout: MyBitbucketRepo\n- checkout: MyAzureReposGitRepository\n\n- script: dir $(Build.SourcesDirectory)\n```\n\n----------------------------------------\n\nTITLE: Conditional Stage Execution\nDESCRIPTION: Shows how to conditionally include or exclude entire pipeline stages using boolean parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runtime-parameters.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: runPerfTests\n  type: boolean\n  default: false\n\ntrigger: none\n\nstages:\n- stage: Build\n  displayName: Build\n  jobs:\n  - job: Build\n    steps:\n    - script: echo running Build\n\n\n- stage: UnitTest\n  displayName: Unit Test\n  dependsOn: Build\n  jobs:\n  - job: UnitTest\n    steps:\n    - script: echo running UnitTest\n\n\n- ${{ if eq(parameters.runPerfTests, true) }}:\n  - stage: PerfTest\n    displayName: Performance Test\n    dependsOn: Build\n    jobs:\n    - job: PerfTest\n      steps:\n      - script: echo running PerfTest\n\n\n- stage: Deploy\n  displayName: Deploy\n  dependsOn: UnitTest\n  jobs:\n  - job: Deploy\n    steps:\n    - script: echo running UnitTest\n```\n\n----------------------------------------\n\nTITLE: Including a Template for Reusable Steps in Azure Pipelines (YAML)\nDESCRIPTION: This example shows how to create a reusable steps template and include it in multiple jobs running on different platforms. The template contains common NPM build steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# File: templates/include-npm-steps.yml\n\nsteps:\n- script: npm install\n- script: yarn install\n- script: npm run compile\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\n\njobs:\n- job: Linux\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - template: templates/include-npm-steps.yml  # Template reference\n- job: Windows\n  pool:\n    vmImage: 'windows-latest'\n  steps:\n  - template: templates/include-npm-steps.yml  # Template reference\n```\n\n----------------------------------------\n\nTITLE: Stage Conditional Execution Using Output Variables in Azure DevOps YAML Pipeline\nDESCRIPTION: Example demonstrating how a stage can use output variables from another stage to determine whether it should run. Stage A sets an output variable that Stage B checks in its condition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  jobs:\n  - job: A1\n    steps:\n     - bash: echo \"##vso[task.setvariable variable=shouldrun;isOutput=true]true\"\n     # or on Windows:\n     # - script: echo ##vso[task.setvariable variable=shouldrun;isOutput=true]true\n       name: printvar\n\n- stage: B\n  condition: and(succeeded(), eq(dependencies.A.outputs['A1.printvar.shouldrun'], 'true'))\n  dependsOn: A\n  jobs:\n  - job: B1\n    steps:\n    - script: echo hello from Stage B\n```\n\n----------------------------------------\n\nTITLE: Complete Job Syntax\nDESCRIPTION: Full YAML syntax reference for job configuration including all available properties and options\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- job: string\n  displayName: string\n  dependsOn: string | [ string ]\n  condition: string\n  strategy:\n    parallel:\n    matrix:\n    maxParallel: number\n  continueOnError: boolean\n  pool: pool\n  workspace:\n    clean: outputs | resources | all\n  container: containerReference\n  timeoutInMinutes: number\n  cancelTimeoutInMinutes: number\n  variables: { string: string } | [ variable | variableReference ]\n  steps: [ script | bash | pwsh | powershell | checkout | task | templateReference ]\n  services: { string: string | container }\n```\n\n----------------------------------------\n\nTITLE: Extending from a Template with Security Controls in Azure Pipelines (YAML)\nDESCRIPTION: This example demonstrates how to create a secure template (start.yml) that other pipelines can extend from. The template contains security controls that reject certain tasks (CmdLine@2) via YAML syntax validation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# File: start.yml\nparameters:\n- name: buildSteps # the name of the parameter is buildSteps\n  type: stepList # data type is StepList\n  default: [] # default value of buildSteps\nstages:\n- stage: secure_buildstage\n  pool:\n    vmImage: windows-latest\n  jobs:\n  - job: secure_buildjob\n    steps:\n    - script: echo This happens before code \n      displayName: 'Base: Pre-build'\n    - script: echo Building\n      displayName: 'Base: Build'\n\n    - ${{ each step in parameters.buildSteps }}:\n      - ${{ each pair in step }}:\n          ${{ if ne(pair.value, 'CmdLine@2') }}:\n            ${{ pair.key }}: ${{ pair.value }}       \n          ${{ if eq(pair.value, 'CmdLine@2') }}: \n            # Step is rejected by raising a YAML syntax error: Unexpected value 'CmdLine@2'\n            '${{ pair.value }}': error         \n\n    - script: echo This happens after code\n      displayName: 'Base: Signing'\n```\n\n----------------------------------------\n\nTITLE: Conditional Execution in Templates Using Predefined Variables\nDESCRIPTION: Template implementation that uses predefined variables like Build.SourceBranch and Build.Reason in conditional expressions. This shows how to create dynamic templates that adapt to pipeline context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\n# File: template.yml\nsteps:\n- script: echo Build.SourceBranch = $(Build.SourceBranch) # outputs refs/heads/main\n- script: echo Build.Reason = $(Build.Reason) # outputs IndividualCI\n- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}: \n  - script: echo I run only if Build.SourceBranch = refs/heads/main \n- ${{ if eq(variables['Build.Reason'], 'IndividualCI') }}: \n  - script: echo I run only if Build.Reason = IndividualCI \n- script: echo I run after the conditions\n```\n\n----------------------------------------\n\nTITLE: Using Variables in Inline PowerShell for Azure DevOps Pipelines\nDESCRIPTION: Shows how to use variables directly in an inline PowerShell script in YAML pipelines. The example demonstrates accessing both regular and secret variables using different syntax approaches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/set-variables-in-scripts.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- pwsh: |\n      Write-Host No problem reading $(sauce)\n      Write-Host But I cannot read $env:SECRET_SAUCE\n      Write-Host But I can read $(secret.Sauce) \"(but the log is redacted so I do not spoil the secret)\"\n```\n\n----------------------------------------\n\nTITLE: Implementing npm Package Versioning in Azure DevOps Pipeline\nDESCRIPTION: This YAML pipeline configuration demonstrates how to automatically version and publish npm packages as part of the build process. It handles authentication, packaging, versioning, publishing to npmjs, and pushing version changes back to a GitHub repository. It includes validation to ensure the package version on npmjs matches the version in package.json.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n    MAP_NPMTOKEN: $(NPMTOKEN) # Mapping secret var\n\ntrigger:\n- none\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps: # Checking out connected repo\n- checkout: self\n  persistCredentials: true\n  clean: true\n    \n- task: npmAuthenticate@0\n  inputs:\n    workingFile: .npmrc\n    customEndpoint: 'my-npm-connection'\n    \n- task: UseNode@1\n  inputs:\n    version: '16.x'\n  displayName: 'Install Node.js'\n\n- script: |\n    npm install\n  displayName: 'npm install'\n\n- script: |\n    npm pack\n  displayName: 'Package for release'\n\n- bash: | # Grab the package version\n    v=`node -p \"const p = require('./package.json'); p.version;\"`\n    echo \"##vso[task.setvariable variable=packageVersion]$v\"\n\n- task: CopyFiles@2\n  inputs:\n      contents: '*.tgz'\n      targetFolder: $(Build.ArtifactStagingDirectory)/npm\n  displayName: 'Copy archives to artifacts staging directory'\n\n- task: CopyFiles@2\n  inputs:\n    sourceFolder: '$(Build.SourcesDirectory)'\n    contents: 'package.json' \n    targetFolder: $(Build.ArtifactStagingDirectory)/npm\n  displayName: 'Copy package.json'\n\n- task: PublishBuildArtifacts@1 \n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)/npm'\n    artifactName: npm\n  displayName: 'Publish npm artifact'\n\n- script: |  # Config can be set in .npmrc\n    npm config set //registry.npmjs.org/:_authToken=$(MAP_NPMTOKEN) \n    npm config set scope \"@myscope\"\n    # npm config list\n    # npm --version\n    npm version patch --force\n    npm publish --access public\n\n- task: CmdLine@2 # Push changes to GitHub (substitute your repo)\n  inputs:\n    script: |\n      git config --global user.email \"username@contoso.com\"\n      git config --global user.name \"Azure Pipeline\"\n      git add package.json\n      git commit -a -m \"Test Commit from Azure DevOps\"\n      git push -u origin HEAD:main\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Web App for Node.js using Azure CLI\nDESCRIPTION: This Azure CLI command creates a new Azure App Service Web App instance named using '$webName', placing it in the resource group '$rgName' and associating it with the App Service Plan '$planName'. It configures the runtime for Node.js version 16-lts. Requires the resource group and app service plan to exist and the variables $webName, $rgName, and $planName to be set.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/nodejs-tutorial.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz webapp create \\\n  --name $webName \\\n  --resource-group $rgName \\\n  --plan $planName \\\n  --runtime \"node|16-lts\"\n```\n\n----------------------------------------\n\nTITLE: Using Templates with Unnamed Jobs to Avoid Conflicts in Azure Pipelines (YAML)\nDESCRIPTION: This example demonstrates how to define a template with unnamed jobs to avoid naming conflicts when the template is referenced multiple times in a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# File: templates/jobs.yml\njobs:\n- job: \n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - bash: echo \"Hello Ubuntu\"\n\n- job:\n  pool:\n    vmImage: 'windows-latest'\n  steps:\n  - bash: echo \"Hello Windows\"\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\n\njobs:\n- template: templates/jobs.yml  # Template reference\n- template: templates/jobs.yml  # Template reference\n- template: templates/jobs.yml  # Template reference\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Variable Evaluation Timing in Azure DevOps Pipelines\nDESCRIPTION: This YAML snippet illustrates how template expressions and macro syntax variables are evaluated at different times in a pipeline. Template expressions (${{ variables.one }}) evaluate at compile time, while macro syntax ($(one)) evaluates at runtime before each task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: one\n  value: initialValue \n\nsteps:\n  - script: |\n      echo ${{ variables.one }} # outputs initialValue\n      echo $(one)\n    displayName: First variable pass\n  - bash: echo \"##vso[task.setvariable variable=one]secondValue\"\n    displayName: Set new variable value\n  - script: |\n      echo ${{ variables.one }} # outputs initialValue\n      echo $(one) # outputs secondValue\n    displayName: Second variable pass\n```\n\n----------------------------------------\n\nTITLE: Building Java Apps with Gradle - Azure Pipelines YAML\nDESCRIPTION: Defines a build step using the Gradle task in Azure Pipelines to build a Java project using Gradle and optionally a Gradle wrapper. It specifies the working directory, the wrapper script, JVM and Gradle memory settings, JDK selection, enables JUnit test result publication, and lists Gradle tasks for execution (e.g., 'build'). Dependencies: Azure Pipelines agent with Java and Gradle (or Gradle wrapper in repo). Inputs: Directory paths, build scripts, memory config, tasks. Outputs: Gradle build artifacts and test results. Limitations: Assumes presence and proper configuration of 'gradlew' or fallback to system Gradle.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Gradle@2\n  inputs:\n    workingDirectory: ''\n    gradleWrapperFile: 'gradlew'\n    gradleOptions: '-Xmx3072m'\n    javaHomeOption: 'JDKVersion'\n    jdkVersionOption: 'default'\n    jdkArchitectureOption: 'x64'\n    publishJUnitResults: true\n    testResultsFiles: '**/TEST-*.xml'\n    tasks: 'build'\n```\n\n----------------------------------------\n\nTITLE: Copying Project Files and Publishing Artifacts with Azure Pipelines - YAML\nDESCRIPTION: This YAML snippet adds tasks to an Azure Pipeline to copy source and public folders and publish them as pipeline artifacts. It uses the CopyFiles@2 task to move contents from specified folders into the artifact staging directory, then uses PublishPipelineArtifact@1 to publish these files as an artifact named 'e2e-server'. Essential dependencies are Azure Pipelines built-in tasks, and variables such as $(Build.SourcesDirectory) and $(Build.ArtifactStagingDirectory) must be defined by the pipeline environment. The expected outcome is the creation of a downloadable artifact within the pipeline run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/javascript.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: CopyFiles@2\n  inputs:\n    sourceFolder: '$(Build.SourcesDirectory)'\n    contents: |\n       src/*\n       public/*\n    targetFolder: '$(Build.ArtifactStagingDirectory)'\n  displayName: 'Copy project files'\n\n- task: PublishPipelineArtifact@1\n  inputs:\n    artifactName: e2e-server\n    targetPath: '$(Build.ArtifactStagingDirectory)'\n    publishLocation: 'pipeline'\n  displayName: 'Publish npm artifact'\n\n```\n\n----------------------------------------\n\nTITLE: Using Split Function in Azure DevOps Pipelines YAML\nDESCRIPTION: Demonstrates how to use the split function to break a string into substrings based on a delimiter, then iterate through the results in a loop.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: environments\n  value: prod1,prod2\nsteps:\n  - ${{ each env in split(variables.environments, ',')}}:\n    - script: ./deploy.sh --environment ${{ env }}\n```\n\n----------------------------------------\n\nTITLE: Basic Template Usage with VM Image Parameters\nDESCRIPTION: Demonstrates using a template across different operating systems (Linux, macOS, Windows) with VM image parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- template: templates/npm-with-params.yml\n  parameters:\n    name: Linux\n    vmImage: 'ubuntu-latest'\n\n- template: templates/npm-with-params.yml\n  parameters:\n    name: macOS\n    vmImage: 'macOS-latest'\n\n- template: templates/npm-with-params.yml\n  parameters:\n    name: Windows\n    vmImage: 'windows-latest'\n```\n\n----------------------------------------\n\nTITLE: Cloning a Git Repository with Command Line\nDESCRIPTION: Command to clone an Azure DevOps Git repository to your local machine. Cloning creates a local copy of the repository with all history and content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit clone https://dev.azure.com/demo-fabrikam/Fabrikam/_git/Mapping-TFVC-actions-to-Git\n```\n\n----------------------------------------\n\nTITLE: Basic Parameter Definition in Azure Pipeline Template\nDESCRIPTION: Demonstrates basic parameter definition and usage in a template with a boolean parameter. Shows how to define a parameter with name, type and default value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-parameters.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# File: simple-param.yml\nparameters:\n- name: yesNo # name of the parameter; required\n  type: boolean # data type of the parameter; required\n  default: false\n\nsteps:\n- script: echo ${{ parameters.yesNo }}\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\ntrigger:\n- main\n\nextends:\n  template: simple-param.yml\n  parameters:\n      yesNo: false # set to a non-boolean value to have the build fail\n```\n\n----------------------------------------\n\nTITLE: Creating and Deploying Azure App Service using Azure CLI\nDESCRIPTION: Uses the Azure CLI command `az webapp up` to create an Azure App Service web app and deploy the application code from the current directory. It simplifies the creation of the resource group, App Service plan, and the web app itself, while also handling the initial deployment. The `<your-web-app-name>` placeholder must be replaced with a globally unique name for the web app.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz webapp up --name <your-web-app-name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch Triggers for CI in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to configure Continuous Integration (CI) triggers using the `trigger:` keyword in Azure Pipelines YAML. The pipeline will automatically run upon pushes to the `main` branch or any branch matching the `releases/*` wildcard pattern (e.g., `releases/v1.0`).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  - main\n  - releases/*\n```\n\n----------------------------------------\n\nTITLE: Running Multiple Jobs with Matrix Strategy for Different Ubuntu Versions\nDESCRIPTION: This example uses matrix strategy to run the same step in multiple Ubuntu Linux versions (16.04, 18.04, 20.04) by defining container images as variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/container-phases.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-latest'\n\nstrategy:\n  matrix:\n    ubuntu16:\n      containerImage: ubuntu:16.04\n    ubuntu18:\n      containerImage: ubuntu:18.04\n    ubuntu20:\n      containerImage: ubuntu:20.04\n\ncontainer: $[ variables['containerImage'] ]\n\nsteps:\n- script: printenv\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Node.js Application using Azure Pipelines Tasks - YAML\nDESCRIPTION: This YAML snippet defines a basic Azure Pipeline for building and testing a Node.js application. It specifies the trigger branch, uses an Ubuntu agent, and executes tasks to install Node.js (version 16.x), install npm dependencies, build the application, and run tests. Key dependencies include the UseNode task and the availability of npm scripts in the project. The pipeline expects a Node.js project with typical scripts (install, build, test) and outputs pipeline logs; no artifacts are published in this step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/javascript.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: UseNode@1\n  inputs:\n    version: '16.x'\n  displayName: 'Install Node.js'\n\n- script: |\n    npm install\n  displayName: 'npm install'\n\n- script: |\n    npm run build\n  displayName: 'npm build'\n\n- script: \n    npm test\n  displayname: 'npm test'\n\n```\n\n----------------------------------------\n\nTITLE: Running Tests with DotNetCoreCLI Task in YAML Pipeline\nDESCRIPTION: Demonstrates how to run .NET Core tests using the DotNetCoreCLI@2 task in a YAML pipeline. Test results are automatically published to Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# ...\n# do this after other tasks such as building\n- task: DotNetCoreCLI@2\n  inputs:\n    command: test\n    projects: '**/*Tests/*.csproj'\n    arguments: '--configuration $(buildConfiguration)'\n```\n\n----------------------------------------\n\nTITLE: Complex String Manipulation with Split and Replace in Azure DevOps Pipelines YAML\nDESCRIPTION: Shows a complex example using both split and replace functions to extract and transform parts of resource IDs, then combine them with environment names in nested loops.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: resourceIds\n  type: object\n  default:\n  - /subscriptions/mysubscription/resourceGroups/myResourceGroup/providers/Microsoft.Network/loadBalancers/kubernetes-internal\n  - /subscriptions/mysubscription02/resourceGroups/myResourceGroup02/providers/Microsoft.Network/loadBalancers/kubernetes\n- name: environments\n  type: object\n  default:\n  - prod1\n  - prod2\n\ntrigger:\n- main\n\nsteps:\n- ${{ each env in parameters.environments }}:\n  - ${{ each resourceId in parameters.resourceIds }}:\n      - script: echo ${{ replace(split(resourceId, '/')[8], '-', '_') }}_${{ env }}\n```\n\n----------------------------------------\n\nTITLE: Implementing a Pipeline that Extends from a Secure Template in Azure DevOps (YAML)\nDESCRIPTION: This example shows a pipeline that extends from a secure template. Some bash steps pass validation while attempts to use CmdLine@2 tasks are automatically rejected by the template's security controls.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\ntrigger:\n- main\n\nextends:\n  template: start.yml\n  parameters:\n    buildSteps:  \n      - bash: echo Test #Passes\n        displayName: succeed\n      - bash: echo \"Test\"\n        displayName: succeed\n      # Step is rejected by raising a YAML syntax error: Unexpected value 'CmdLine@2'\n      - task: CmdLine@2\n        inputs:\n          script: echo \"Script Test\"\n      # Step is rejected by raising a YAML syntax error: Unexpected value 'CmdLine@2'\n      - script: echo \"Script Test\"\n```\n\n----------------------------------------\n\nTITLE: Creating a PowerShell Hello World Script - ps\nDESCRIPTION: This PowerShell script outputs a simple 'Hello world' message to the PowerShell host. The script is intended as a basic demonstration for use in Azure pipeline CI/CD exercises. Dependencies: Requires PowerShell execution environment. Input: none; Output: string printed to the host. Suitable for testing pipeline scripting capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_12\n\nLANGUAGE: ps\nCODE:\n```\nWrite-Host \"Hello world\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Variables with Templates and Groups in YAML\nDESCRIPTION: This snippet demonstrates how to use the alternate syntax for specifying variables, including regular variables, variable groups, and variable templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n# a regular variable\n- name: myvariable\n  value: myvalue\n# a variable group\n- group: myvariablegroup\n# a reference to a variable template\n- template: myvariabletemplate.yml\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Artifact using YAML in Azure DevOps\nDESCRIPTION: This YAML snippet demonstrates how to publish a pipeline artifact named 'WebApp' from a specified directory. It uses the publish keyword, which is a shortcut for the Publish Pipeline Artifact task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- publish: $(System.DefaultWorkingDirectory)/bin/WebApp\n  artifact: WebApp\n```\n\n----------------------------------------\n\nTITLE: Context-Aware Counter in Azure DevOps Pipelines YAML\nDESCRIPTION: Demonstrates how to create a counter that maintains separate values for different pipeline contexts like Pull Requests versus CI runs by using build.reason as the counter prefix.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  patch: $[counter(variables['build.reason'], 0)]\n```\n\n----------------------------------------\n\nTITLE: Converting Complex Objects to JSON in Azure Pipelines\nDESCRIPTION: Example showing how to use the convertToJson function to convert a complex parameter object to a JSON string and pass it to a script as an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\nparameters:\n  - name: listOfValues\n    type: object\n    default:\n      this_is:\n        a_complex: object\n        with:\n          - one\n          - two\n \nsteps:\n- script: |\n    echo \"${MY_JSON}\"\n  env:\n    MY_JSON: ${{ convertToJson(parameters.listOfValues) }}\n```\n\n----------------------------------------\n\nTITLE: Making REST API Call in C# with Personal Access Token\nDESCRIPTION: Demonstrates how to make a REST API call to Azure DevOps using HttpClient with PAT authentication to retrieve a list of projects. The code handles authentication headers, makes the API request, and processes the response.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/rest/samples.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.Net.Http;\nusing System.Net.Http.Headers;\n\n...\n\n//encode your personal access token                   \nstring credentials = Convert.ToBase64String(System.Text.ASCIIEncoding.ASCII.GetBytes(string.Format(\"{0}:{1}\", \"\", personalAccessToken)));\n\nListOfProjectsResponse.Projects viewModel = null;\n\n//use the httpclient\nusing (var client = new HttpClient())\n{\n    client.BaseAddress = new Uri($\"https://dev.azure.com/{OrgName}/\");  //url of your organization\n    client.DefaultRequestHeaders.Accept.Clear();\n    client.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue(\"application/json\"));\n    client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", credentials); \n\n    //connect to the REST endpoint            \n    HttpResponseMessage response = client.GetAsync(\"_apis/projects?stateFilter=All&api-version=1.0\").Result;\n          \n    //check to see if we have a successful response\n    if (response.IsSuccessStatusCode)\n    {\n        //set the viewmodel from the content in the response\n        viewModel = response.Content.ReadAsAsync<ListOfProjectsResponse.Projects>().Result;\n                \n        //var value = response.Content.ReadAsStringAsync().Result;\n    }   \n}\n```\n\n----------------------------------------\n\nTITLE: Reusing Steps Across Multiple Jobs in Azure Pipelines (YAML)\nDESCRIPTION: This example demonstrates how to reuse steps across multiple jobs with different environments. Each job includes the common template steps and can add additional steps before or after the template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# File: templates/npm-steps.yml\nsteps:\n- script: npm install\n- script: npm test\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\n\njobs:\n- job: Linux\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - template: templates/npm-steps.yml  # Template reference\n\n- job: macOS\n  pool:\n    vmImage: 'macOS-latest'\n  steps:\n  - template: templates/npm-steps.yml  # Template reference\n\n- job: Windows\n  pool:\n    vmImage: 'windows-latest'\n  steps:\n  - script: echo This script runs before the template's steps, only on Windows.\n  - template: templates/npm-steps.yml  # Template reference\n  - script: echo This step runs after the template's steps.\n```\n\n----------------------------------------\n\nTITLE: Implementing Multi-Platform Builds with Matrix Strategy in Azure Pipelines YAML\nDESCRIPTION: This snippet replaces a single pool definition with a `strategy` matrix to build the project on Linux, macOS, and Windows platforms concurrently. It defines an `imageName` variable for each platform and uses this variable in the `pool.vmImage` definition. The `maxParallel` key limits the number of concurrent jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  matrix:\n    linux:\n      imageName: \"ubuntu-latest\"\n    mac:\n      imageName: \"macOS-latest\"\n    windows:\n      imageName: \"windows-latest\"\n  maxParallel: 3\n\npool:\n  vmImage: $(imageName)\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Stage Azure DevOps Pipeline\nDESCRIPTION: YAML configuration for an Azure DevOps pipeline that includes Build, Dev, and Staging stages. The pipeline builds a .NET web application, deploys to dev environment, and includes manual approval for staging deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- '*'\n\nvariables:\n  buildConfiguration: 'Release'\n  releaseBranchName: 'release'\n\nstages:\n- stage: 'Build'\n  displayName: 'Build the web application'\n  jobs: \n  - job: 'Build'\n    displayName: 'Build job'\n    pool:\n      vmImage: 'ubuntu-20.04'\n      demands:\n      - npm\n\n    variables:\n      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'\n      dotnetSdkVersion: '6.x'\n\n    steps:\n    - task: UseDotNet@2\n      displayName: 'Use .NET SDK $(dotnetSdkVersion)'\n      inputs:\n        version: '$(dotnetSdkVersion)'\n\n    - task: Npm@1\n      displayName: 'Run npm install'\n      inputs:\n        verbose: false\n\n    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'\n      displayName: 'Compile Sass assets'\n\n    - task: gulp@1\n      displayName: 'Run gulp tasks'\n\n    - script: 'echo \"$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)\" > buildinfo.txt'\n      displayName: 'Write build info'\n      workingDirectory: $(wwwrootDir)\n\n    - task: DotNetCoreCLI@2\n      displayName: 'Restore project dependencies'\n      inputs:\n        command: 'restore'\n        projects: '**/*.csproj'\n\n    - task: DotNetCoreCLI@2\n      displayName: 'Build the project - $(buildConfiguration)'\n      inputs:\n        command: 'build'\n        arguments: '--no-restore --configuration $(buildConfiguration)'\n        projects: '**/*.csproj'\n\n    - task: DotNetCoreCLI@2\n      displayName: 'Publish the project - $(buildConfiguration)'\n      inputs:\n        command: 'publish'\n        projects: '**/*.csproj'\n        publishWebProjects: false\n        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'\n        zipAfterPublish: true\n\n    - publish: '$(Build.ArtifactStagingDirectory)'\n      artifact: drop\n\n- stage: 'Dev'\n  displayName: 'Deploy to the dev environment'\n  dependsOn: Build\n  condition:  succeeded()\n  jobs:\n  - deployment: Deploy\n    pool:\n      vmImage: 'ubuntu-20.04'\n    environment: dev\n    variables:\n    - group: Release\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - download: current\n            artifact: drop\n          - task: AzureWebApp@1\n            displayName: 'Azure App Service Deploy: dev website'\n            inputs:\n              azureSubscription: 'your-subscription'\n              appType: 'webAppLinux'\n              appName: '$(WebAppNameDev)'\n              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'\n\n- stage: 'Staging'\n  displayName: 'Deploy to the staging environment'\n  dependsOn: Dev\n  jobs:\n  - deployment: Deploy\n    pool:\n      vmImage: 'ubuntu-20.04'\n    environment: staging\n    variables:\n    - group: 'Release'\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - download: current\n            artifact: drop\n          - task: AzureWebApp@1\n            displayName: 'Azure App Service Deploy: staging website'\n            inputs:\n              azureSubscription: 'your-subscription'\n              appType: 'webAppLinux'\n              appName: '$(WebAppNameStaging)'\n              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'\n```\n\n----------------------------------------\n\nTITLE: Combining Multi-Platform and Multi-Version Builds in Azure Pipelines YAML\nDESCRIPTION: This snippet presents a complete pipeline configuration using a `strategy` matrix to build a project across different combinations of operating systems (Ubuntu, Windows) and JDK versions (1.10, 1.11). It defines `imageName` and `jdkVersion` variables for each combination and uses them in the `pool` and Maven task steps respectively. `maxParallel` limits concurrent jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\nstrategy:\n  matrix:\n    jdk10_linux:\n      imageName: \"ubuntu-latest\"\n      jdkVersion: \"1.10\"\n    jdk11_windows:\n      imageName: \"windows-latest\"\n      jdkVersion: \"1.11\"\n  maxParallel: 2\n\npool:\n  vmImage: $(imageName)\n\nsteps:\n- task: Maven@4\n  inputs:\n    mavenPomFile: \"pom.xml\"\n    mavenOptions: \"-Xmx3072m\"\n    javaHomeOption: \"JDKVersion\"\n    jdkVersionOption: $(jdkVersion)\n    jdkArchitectureOption: \"x64\"\n    publishJUnitResults: true\n    testResultsFiles: \"**/TEST-*.xml\"\n    goals: \"package\"\n```\n\n----------------------------------------\n\nTITLE: Variable Templates with Parameters\nDESCRIPTION: Shows how to pass parameters to variable templates and use them in pipeline configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: DIRECTORY \n  type: string\n  default: \".\"\n\nvariables:\n- name: RELEASE_COMMAND\n  value: grep version ${{ parameters.DIRECTORY }}/package.json | awk -F \\\" '{print $4}'\n```\n\n----------------------------------------\n\nTITLE: Conditionally Setting Task Inputs in Azure DevOps Pipeline\nDESCRIPTION: Shows how to conditionally set an input parameter for a task based on a branch condition. This example sets different artifact names for the PublishPipelineArtifact task depending on whether the build is from the main branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: PublishPipelineArtifact@1\n  inputs:\n    targetPath: '$(Pipeline.Workspace)'\n    ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:\n      artifact: 'prod'\n    ${{ else }}:\n      artifact: 'dev'\n    publishLocation: 'pipeline'\n```\n\n----------------------------------------\n\nTITLE: Building and Deploying PHP App to Azure App Service using YAML Pipeline\nDESCRIPTION: Defines a multi-stage Azure Pipeline in YAML for a PHP application. The 'Build' stage selects PHP 8.3, installs dependencies using Composer, archives the application files into a zip package, and uploads it as an artifact named 'drop'. The 'Deploy' stage, dependent on a successful build, deploys the 'drop' artifact to a specified Azure Web App using the AzureWebApp task. Key variables like Azure subscription, web app name, VM image, environment name, and root folder need to be configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/php.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\nvariables:\n  # Azure Resource Manager connection created during pipeline creation\n  azureSubscription: 'subscription-id'\n  # Web app name\n  webAppName: 'web-app-name'\n  # Agent VM image name\n  vmImageName: 'ubuntu-20.04'\n  # Environment name\n  environmentName: 'environment-name'\n  # Root folder under which your composer.json file is available.\n  rootFolder: $(System.DefaultWorkingDirectory)\n\nstages:\n- stage: Build\n  displayName: Build stage\n  variables:\n    phpVersion: '8.3'\n  jobs:\n  - job: BuildJob\n    pool:\n      vmImage: $(vmImageName)\n    steps:\n    - script: |\n        sudo update-alternatives --set php /usr/bin/php$(phpVersion)\n        sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)\n        sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)\n        sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)\n        sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)\n        php -version\n      workingDirectory: $(rootFolder)\n      displayName: 'Use PHP version $(phpVersion)'\n\n    - script: composer install --no-interaction --prefer-dist\n      workingDirectory: $(rootFolder)\n      displayName: 'Composer install'\n\n    - task: ArchiveFiles@2\n      displayName: 'Archive files'\n      inputs:\n        rootFolderOrFile: '$(rootFolder)'\n        includeRootFolder: false\n        archiveType: zip\n        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n        replaceExistingArchive: true\n\n    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n      displayName: 'Upload package'\n      artifact: drop\n\n- stage: Deploy\n  displayName: 'Deploy Web App'\n  dependsOn: Build\n  condition: succeeded()\n  jobs:\n  - deployment: DeploymentJob\n    pool:\n      vmImage: $(vmImageName)\n    environment: $(environmentName)\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - task: AzureWebApp@1\n            displayName: 'Deploy Azure Web App'\n            inputs:\n              azureSubscription: $(azureSubscription)\n              appName: $(webAppName)\n              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip\n```\n\n----------------------------------------\n\nTITLE: Modified PowerShell Script with Parameter Handling for CI/CD Pipeline\nDESCRIPTION: A PowerShell script that accepts greeter and trigger parameters and displays them. The updated version includes a message about CI/CD automation capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_16\n\nLANGUAGE: PowerShell\nCODE:\n```\nParam(\n[string]$greeter,\n[string]$trigger\n)\nWrite-Host \"Hello world\" from $greeter\nWrite-Host Trigger: $trigger\nWrite-Host \"Now that you've got CI/CD, you can automatically deploy your app every time your team checks in code.\"\n```\n\n----------------------------------------\n\nTITLE: Copying and Publishing Specific Files as Artifacts in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to copy specific files to a staging directory and then publish them as build artifacts using the CopyFiles and PublishBuildArtifacts tasks in an Azure Pipelines YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_26\n\nLANGUAGE: YAML\nCODE:\n```\n- task: CopyFiles@2\n  inputs:\n    SourceFolder: '$(System.DefaultWorkingDirectory)'\n    Contents: |\n      **\\*.js\n      package.json\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n\n- task: PublishBuildArtifacts@1\n```\n\n----------------------------------------\n\nTITLE: Creating a Dockerfile for Alpine Linux with Node.js Support\nDESCRIPTION: This Dockerfile example creates an Alpine Linux-based container that satisfies the requirements for running in Azure Pipelines by adding Node.js, Bash, and other required utilities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/container-phases.md#2025-04-22_snippet_8\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM node:18-alpine\n\nRUN apk add --no-cache --virtual .pipeline-deps readline linux-pam \\\n  && apk add bash sudo shadow \\\n  && apk del .pipeline-deps\n\nLABEL \"com.azure.dev.pipelines.agent.handler.node.path\"=\"/usr/local/bin/node\"\n\nCMD [ \"node\" ]\n```\n\n----------------------------------------\n\nTITLE: Building .NET Core Projects with DotNetCoreCLI Task in YAML Pipeline\nDESCRIPTION: Demonstrates how to build .NET Core projects using the DotNetCoreCLI@2 task in a YAML pipeline. The task builds all .csproj files in the repository with the specified build configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DotNetCoreCLI@2\n  displayName: Build\n  inputs:\n    command: build\n    projects: '**/*.csproj'\n    arguments: '--configuration $(buildConfiguration)' # Update this to match your needs\n```\n\n----------------------------------------\n\nTITLE: Testing Go Project using Go Task in YAML\nDESCRIPTION: Uses the dedicated `Go@0` Azure Pipelines task to execute the `go test` command with verbose output (`-v`) for all subdirectories (`./...`). The `workingDirectory` is set to the default checkout directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/go.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Go@0\n  inputs:\n    command: 'test'\n    arguments: '-v'\n    workingDirectory: '$(System.DefaultWorkingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Variables for Python Web App Deployment in Azure DevOps\nDESCRIPTION: Defines essential variables for an Azure DevOps pipeline deploying a Python web application to Azure App Service. It configures service connection details, web app name, agent specifications, environment name, project location, and Python version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n# Azure Resource Manager connection created during pipeline creation\nazureServiceConnectionId: '<GUID>'\n\n# Web app name\nwebAppName: '<your-webapp-name>'\n\n# Agent VM image name\nvmImageName: 'ubuntu-latest'\n\n# Environment name\nenvironmentName: '<your-webapp-name>'\n\n# Project root folder.\nprojectRoot: $(System.DefaultWorkingDirectory)\n\n# Python version: 3.11. Change this to match the Python runtime version running on your web app.\npythonVersion: '3.11'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps YAML Pipeline for Python Web App Deployment\nDESCRIPTION: YAML pipeline definition for building and deploying a Python web application to Azure App Service. Includes stages for building the application (installing dependencies and packaging) and deploying to Azure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\nvariables:\n  # Azure Resource Manager connection created during pipeline creation\n  azureServiceConnectionId: '<your-service-connection-name>'\n\n  # Web app name\n  webAppName: '<your-web-app-name>'\n\n  # Environment name\n  environmentName: '<your-web-app-name>'\n\n  # Project root folder. \n  projectRoot: $(System.DefaultWorkingDirectory)\n\n  # Python version: \n  pythonVersion: '<your-python-version>'\n\nstages:\n- stage: Build\n  displayName: Build stage\n  jobs:\n  - job: BuildJob\n    pool:\n      name: '<your-pool-name>'\n      demands: python\n    steps:\n    - task: UsePythonVersion@0\n      inputs:\n        versionSpec: '$(pythonVersion)'\n      displayName: 'Use Python $(pythonVersion)'\n\n    - script: |\n        python -m venv antenv\n        source antenv/bin/activate\n        python -m pip install --upgrade pip\n        pip install -r requirements.txt\n      workingDirectory: $(projectRoot)\n      displayName: \"Install requirements\"\n\n    - task: ArchiveFiles@2\n      displayName: 'Archive files'\n      inputs:\n        rootFolderOrFile: '$(projectRoot)'\n        includeRootFolder: false\n        archiveType: zip\n        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n        replaceExistingArchive: true\n\n    - task: PublishBuildArtifacts@1\n      inputs:\n        PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n        ArtifactName: 'drop'\n        publishLocation: 'Container'\n\n- stage: Deploy\n  displayName: 'Deploy Web App'\n  dependsOn: Build\n  condition: succeeded()\n  jobs:\n  - deployment: DeploymentJob\n    pool:\n      name: '<your-pool-name'\n    environment: $(environmentName)\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n\n          - task: UsePythonVersion@0\n            inputs:\n              versionSpec: '$(pythonVersion)'\n            displayName: 'Use Python version'\n\n          - task: AzureWebApp@1\n            displayName: 'Deploy Azure Web App : <your-web-app-name>'\n            inputs:\n              azureSubscription: $(azureServiceConnectionId)\n              appName: $(webAppName)\n              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip\n              startUpCommand: 'startup.txt'\n```\n\n----------------------------------------\n\nTITLE: Checking Build Pipeline Authorization Scope - Azure DevOps 2020\nDESCRIPTION: Hierarchical instructions for checking job authorization scope in Azure DevOps 2020 through organization and project settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/access-tokens.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* Check the Pipeline settings under your Azure DevOps **Organization settings**:\n  * If **Limit job authorization scope to current project** is enabled, then the scope is **project**.\n  * If **Limit job authorization scope to current project** is not enabled, then check the Pipeline settings under your **Project settings** in Azure DevOps:\n    * If **Limit job authorization scope to current project** is enabled, then the scope is **project**.\n    * If **Limit job authorization scope to current project** is not enabled, open the editor for the pipeline, and navigate to the **Options** tab.\n      * If the **Build job authorization scope** is **Current project**, then scope is **project**.\n      * Otherwise, scope is **collection**.\n```\n\n----------------------------------------\n\nTITLE: Multi-Stage Pipeline with Jobs\nDESCRIPTION: YAML configuration showing multiple stages with multiple jobs in each stage\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  jobs:\n  - job: A1\n  - job: A2\n\n- stage: B\n  jobs:\n  - job: B1\n  - job: B2\n```\n\n----------------------------------------\n\nTITLE: Configuring a Single Non-Container Job with Service Containers in Azure Pipelines\nDESCRIPTION: YAML configuration for a non-container job that uses nginx and redis service containers. The example demonstrates port mapping and accessing dynamic port assignments through pipeline variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/service-containers.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: nginx\n    image: nginx\n    ports:\n    - 8080:80\n    env:\n      NGINX_PORT: 80\n  - container: redis\n    image: redis\n    ports:\n    - 6379\n\npool:\n  vmImage: 'ubuntu-latest'\n\nservices:\n  nginx: nginx\n  redis: redis\n\nsteps:\n- script: |\n    curl localhost:8080\n    echo $AGENT_SERVICES_REDIS_PORTS_6379\n```\n\n----------------------------------------\n\nTITLE: Using Microsoft-hosted agents in YAML pipeline\nDESCRIPTION: This YAML snippet demonstrates how to specify different virtual machine images for Linux, macOS, and Windows jobs in an Azure Pipelines YAML file. It uses the 'vmImage' property to select the latest versions of Ubuntu, macOS, and Windows.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/hosted.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Linux\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - script: echo hello from Linux\n- job: macOS\n  pool:\n    vmImage: 'macOS-latest'\n  steps:\n  - script: echo hello from macOS\n- job: Windows\n  pool:\n    vmImage: 'windows-latest'\n  steps:\n  - script: echo hello from Windows\n```\n\n----------------------------------------\n\nTITLE: Adding SourceLink for Azure DevOps Server Projects (XML)\nDESCRIPTION: XML snippet to add the Microsoft.SourceLink.AzureDevOpsServer.Git package reference to a project file for projects hosted on Azure DevOps Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/symbols.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<ItemGroup>\n  <PackageReference Include=\"Microsoft.SourceLink.AzureDevOpsServer.Git\" Version=\"1.1.1\" PrivateAssets=\"All\"/>\n</ItemGroup>\n```\n\n----------------------------------------\n\nTITLE: Distributing Android Apps to App Center Using YAML Pipeline Task\nDESCRIPTION: This snippet shows how to use the AppCenterDistribute@3 task to distribute an Android application to a group of testers or beta users. It requires a free App Center account and specifies app distribution details including release notes and target groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AppCenterDistribute@3\n  inputs:\n    serverEndpoint: 'AppCenter'\n    appSlug: '$(APP_CENTER_SLUG)'\n    appFile: '$(APP_FILE)' # Relative path from the repo root to the APK file you want to publish\n    symbolsOption: 'Android'\n    releaseNotesOption: 'input'\n    releaseNotesInput: 'Here are the release notes for this version.'\n    destinationType: 'groups'\n```\n\n----------------------------------------\n\nTITLE: Using the containsValue Function with Parameters in Azure Pipelines\nDESCRIPTION: Example demonstrating how to use the containsValue function to check if a branch name exists in a list of branches defined as a parameter, with conditional job execution based on the result.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\nparameters:\n- name: branchOptions\n  displayName: Source branch options\n  type: object\n  default:\n    - refs/heads/main\n    - refs/heads/test\n\njobs:\n  - job: A1 \n    steps:\n    - ${{ each value in parameters.branchOptions }}:\n      - script: echo ${{ value }}\n\n  - job: B1 \n    condition: ${{ containsValue(parameters.branchOptions, variables['Build.SourceBranch']) }}\n    steps:\n      - script: echo \"Matching branch found\"\n```\n\n----------------------------------------\n\nTITLE: Building and Publishing Docker Images to Azure Container Registry Pipeline\nDESCRIPTION: Azure DevOps pipeline configuration for building and pushing Docker images to Azure Container Registry. The pipeline uses a Docker task to build and push the image, with configurable parameters for the service connection, image repository, Dockerfile path, and tag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\nvariables:\n  dockerRegistryServiceConnection: '<SERVICE_CONNECTION_NAME>'\n  imageRepository: '<IMAGE_NAME>'\n  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'\n  tag: '$(Build.BuildId)'\n\nstages:\n- stage: Build\n  displayName: Build and publish stage\n  jobs:\n  - job: Build\n    displayName: Build job\n    pool:\n      name: '<YOUR_AGENT_POOL_NAME>'\n    steps:\n    - task: DockerInstaller@0\n      inputs:\n        dockerVersion: '17.09.0-ce'\n\n    - task: Docker@2\n      displayName: Build and publish image to Azure Container Registry\n      inputs:\n        command: buildAndPush\n        containerRegistry: $(dockerRegistryServiceConnection)\n        repository: $(imageRepository)\n        dockerfile: $(dockerfilePath)\n        tags: |\n          $(tag)\n```\n\n----------------------------------------\n\nTITLE: Pushing NuGet Packages with YAML in Azure Pipelines\nDESCRIPTION: Defines the necessary Azure Pipelines tasks in YAML format to install NuGet tools (minimum version 4.8.0.5385+), authenticate with an Azure Artifacts feed using a specified service connection, and then use the `nuget.exe push` command via a script task to upload package files (`*.nupkg`) from the build's artifact staging directory to the target feed. Requires placeholder replacement for `<SERVICE_CONNECTION_NAME>`, `<ORGANIZATION_NAME>`, `<PROJECT_NAME>`, and `<FEED_NAME>`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/nuget.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetToolInstaller@1                            # Minimum required NuGet version: 4.8.0.5385+.\n  displayName: 'NuGet Tool Installer'\n\n- task: NuGetAuthenticate@0\n  inputs:\n    nuGetServiceConnections: <SERVICE_CONNECTION_NAME>\n    \n- script: |\n    nuget.exe push -Source \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" -ApiKey az $(Build.ArtifactStagingDirectory)\\*.nupkg\n  displayName: Push\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure Key Vault Secrets in Azure Pipelines using Variable Groups\nDESCRIPTION: This YAML pipeline demonstrates how to access secrets from a private Azure Key Vault through a linked variable group. It retrieves a secret, writes it to a file, and publishes it as an artifact.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n-  group: mySecret-VG\n\nsteps:\n- task: CmdLine@2\n  inputs:\n    script: 'echo $(mySecret) > secret.txt'\n    \n- task: CopyFiles@2\n  inputs:\n    Contents: secret.txt\n    targetFolder: '$(Build.ArtifactStagingDirectory)'\n\n- task: PublishBuildArtifacts@1\n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n    ArtifactName: 'drop'\n    publishLocation: 'Container'\n```\n\n----------------------------------------\n\nTITLE: Adding Test Stage to YAML Pipeline in Azure DevOps\nDESCRIPTION: Defines a test stage that runs after the build stage, executing unit tests and preventing the stage from being skipped. This stage depends on the successful completion of the build stage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/run-stages.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n- stage: Test\n  displayName: 'Test Stage'\n  dependsOn: Build\n  isSkippable: false\n  jobs:\n  - job: TestJob\n    displayName: 'Test Job'\n    steps:\n    - script: |\n        echo \"Running unit tests...\"\n      displayName: 'Run unit tests'\n```\n\n----------------------------------------\n\nTITLE: JSON Structure for Job Dependencies in Azure DevOps Pipelines\nDESCRIPTION: The JSON structure that represents the dependencies object for job-to-job dependencies within a single stage, showing the format for accessing results and outputs from other jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n\"dependencies\": {\n  \"<JOB_NAME>\": {\n    \"result\": \"Succeeded|SucceededWithIssues|Skipped|Failed|Canceled\",\n    \"outputs\": {\n      \"stepName.variableName\": \"value1\"\n    }\n  },\n  \"...\": {\n    // another job\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing Secret Variables in Variable Groups with YAML Pipeline\nDESCRIPTION: This YAML pipeline example shows how to reference a variable group, define new variables, and use a secret variable from the group by mapping it to an environment variable. The pipeline makes a REST call to retrieve releases using PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nvariables: \n- group: 'my-var-group' # variable group\n- name: 'devopsAccount' # new variable defined in YAML\n  value: 'contoso'\n- name: 'projectName' # new variable defined in YAML\n  value: 'contosoads'\n\nsteps:\n- task: PowerShell@2\n  inputs:\n    targetType: 'inline'\n    script: |\n        # Encode the Personal Access Token (PAT)\n        # $env:USER is a normal variable in the variable group\n        # $env:MY_MAPPED_TOKEN is a mapped secret variable\n        $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes((\"{0}:{1}\" -f $env:USER,$env:MY_MAPPED_TOKEN)))\n        \n        # Get a list of releases\n        $uri = \"https://vsrm.dev.azure.com/$(devopsAccount)/$(projectName)/_apis/release/releases?api-version=5.1\"\n\n        # Invoke the REST call\n        $result = Invoke-RestMethod -Uri $uri -Method Get -ContentType \"application/json\" -Headers @{Authorization=(\"Basic {0}\" -f $base64AuthInfo)}\n        \n        # Output releases in JSON\n        Write-Host $result.value\n  env:\n    MY_MAPPED_TOKEN: $(token) # Maps the secret variable $(token) from my-var-group\n\n```\n\n----------------------------------------\n\nTITLE: JSON Structure for Cross-Stage Job Dependencies in Azure DevOps Pipelines\nDESCRIPTION: The JSON structure that represents the stageDependencies object for job-to-job dependencies across different stages, showing the format for accessing results and outputs from jobs in other stages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n\"stageDependencies\": {\n  \"<STAGE_NAME>\" : {\n    \"<JOB_NAME>\": {\n      \"result\": \"Succeeded|SucceededWithIssues|Skipped|Failed|Canceled\",\n      \"outputs\": {\n          \"stepName.variableName\": \"value\"\n      }\n    },\n    \"...\": {\n      // another job\n    }\n  },\n  \"...\": {\n    // another stage\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Revision History in OData\nDESCRIPTION: This query retrieves the revision history of a specific work item. It filters by work item ID and selects the work item ID, title, state, and iteration path for each revision. The example query includes additional filters for project name and revision number.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_11\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItemRevisions?\n  $filter=WorkItemId eq {Id}\n  &$select=WorkItemId, Title, State, Iteration Path\n```\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam Fiber/_odata/v1.0/WorkItemRevisions?$select=WorkItemId, Title, State&$expand=Iteration($select=IterationPath)&$filter=(Project/ProjectName eq 'Fabrikam Fiber' AND WorkItemId eq 1145 AND State ne '' AND Revision gt 1)\n```\n\n----------------------------------------\n\nTITLE: Example POST Request with JSON Body\nDESCRIPTION: Illustrates how to make a POST request to the Azure DevOps API with a JSON request body, including necessary headers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/how-to/call-rest-api.md#2025-04-22_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nPOST https://dev.azure.com/fabrikam-fiber-inc/_apis/build-release/requests\nContent-Type: application/json\n\n{\n   \"definition\": {\n      \"id\": 3\n   },\n   \"reason\": \"Manual\",\n   \"priority\": \"Normal\"\n}\n```\n\n----------------------------------------\n\nTITLE: Extending Templates from External Repository in Azure Pipelines\nDESCRIPTION: Configuration for extending a template from an external repository. This pattern allows for centralized template definition while customizing implementation in individual repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\n# Repo: Contoso/MyProduct\n# File: azure-pipelines.yml\nresources:\n  repositories:\n    - repository: templates\n      type: git\n      name: Contoso/Central\n\nextends:\n  template: template.yml@templates\n```\n\n----------------------------------------\n\nTITLE: Defining the Build Stage in Azure Pipelines YAML for a Kubernetes Canary Deployment\nDESCRIPTION: This YAML snippet configures the 'Build' stage for an Azure Pipeline. It triggers on commits to the 'main' branch, runs on an Ubuntu agent, and uses predefined variables for image naming and registry configuration. The core functionality involves using the Docker task to build a container image from 'app/Dockerfile' and push it to the specified Azure Container Registry using the 'azure-pipelines-canary-acr' service connection, tagging the image with the build ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/kubernetes/canary-demo.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nvariables:\n  imageName: azure-pipelines-canary-k8s # name of ACR image\n  dockerRegistryServiceConnection: azure-pipelines-canary-acr # name of ACR service connection\n  imageRepository: 'azure-pipelines-canary-k8s' # name of image repository\n  containerRegistry: example.azurecr.io # name of Azure container registry\n  tag: '$(Build.BuildId)'\n\nstages:\n- stage: Build\n  displayName: Build stage\n  jobs:  \n  - job: Build\n    displayName: Build\n    pool:\n      vmImage: ubuntu-latest\n    steps:\n    - task: Docker@2\n      displayName: Build and push image\n      inputs:\n        containerRegistry: $(dockerRegistryServiceConnection)\n        repository: $(imageName)\n        command: buildAndPush\n        Dockerfile: app/Dockerfile\n        tags: |\n          $(tag)\n```\n\n----------------------------------------\n\nTITLE: Complete YAML Pipeline for Windows\nDESCRIPTION: This YAML pipeline example for Windows demonstrates the full process of installing Rustup, configuring PATH, building the project, authenticating with CargoAuthenticate, and publishing to an Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/cargo-pipelines.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: windows-latest\n\nsteps:\n- powershell: |\n   Invoke-WebRequest -Uri https://sh.rustup.rs -OutFile rustup-init.sh\n   bash .\\rustup-init.sh -y\n   echo \"##vso[task.prependpath]$env:USERPROFILE\\.cargo\\bin\"\n  displayName: Install\n\n- task: CargoAuthenticate@0\n  displayName: 'cargo Authenticate'\n  inputs:\n    configFile: '.cargo/config.toml'\n\n- script: |\n   cargo build --all\n  displayName: Build\n\n- powershell: |\n   cargo publish --registry CargoInternalFeed\n  displayName: Publish\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Bundler in Azure Pipelines (YAML)\nDESCRIPTION: This script step in the pipeline installs Bundler (using 'gem install bundler'), then installs project dependencies with 'bundle install', using retries and parallel jobs for performance. Prerequisites: A valid Gemfile and optionally a Gemfile.lock, as well as network access to fetch gems. The 'CALL' prefix ensures compatibility with Windows agents—remove it for Linux/macOS. The 'displayName' clarifies log output.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/ruby.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- script: |\\n    CALL gem install bundler\\n    bundle install --retry=3 --jobs=4\\n  displayName: 'bundle install'\\n\n```\n\n----------------------------------------\n\nTITLE: Defining Scheduled Triggers in YAML for Azure Pipelines\nDESCRIPTION: YAML configuration for setting up scheduled triggers in Azure Pipelines. Includes options for cron syntax, display name, branch filtering, and always run setting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: string # cron syntax defining a schedule\n  displayName: string # friendly name given to a specific schedule\n  branches:\n    include: [ string ] # which branches the schedule applies to\n    exclude: [ string ] # which branches to exclude from the schedule\n  always: boolean # whether to always run the pipeline or only if there have been source code or pipeline settings changes since the last successful scheduled run. The default is false.\n```\n\n----------------------------------------\n\nTITLE: Specifying an ARM64 Base Image in Dockerfile - Docker - Dockerfile\nDESCRIPTION: This snippet demonstrates how to set a base image suitable for the ARM64 architecture in a Dockerfile. Using 'FROM arm64v8/alpine:latest' ensures that the built container image will be compatible with ARM64-based processors. No additional dependencies are required for this statement, but the build context should support cross-platform builds. There are no input parameters in this line; output is a Docker build context tailored for ARM64 containers. Ensure the build agent and subsequent build process can handle cross-architecture builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/build-image.md#2025-04-22_snippet_5\n\nLANGUAGE: Dockerfile\nCODE:\n```\nFROM arm64v8/alpine:latest\n```\n\n----------------------------------------\n\nTITLE: Passing Values to Dialog Content (JSON/JavaScript)\nDESCRIPTION: Demonstrates how to pass initial values to the dialog content when it is opened in the host dialog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/using-host-dialog.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"registration-form\",\n    \"type\": \"ms.vss-web.control\",\n    \"description\": \"The content displayed in the dialog\",\n    \"targets\": [],\n    \"properties\": {\n        \"uri\": \"registration-form.html?id={{myId}}\"\n    }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nvar dialogOptions = {\n    title: \"My Dialog Title\",\n    width: 800,\n    height: 600,\n    urlReplacementObject: { myId: new Date().getTime() }\n};\n```\n\n----------------------------------------\n\nTITLE: Gradle Caching in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to enable Gradle caching in Azure Pipelines. It sets the GRADLE_USER_HOME variable, configures caching, and includes steps to build with the cache and stop the Gradle daemon.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle\n\nsteps:\n- task: Cache@2\n  inputs:\n    key: 'gradle | \"$(Agent.OS)\" | **/build.gradle.kts' # Swap build.gradle.kts for build.gradle when using Groovy\n    restoreKeys: |\n      gradle | \"$(Agent.OS)\"\n      gradle\n    path: $(GRADLE_USER_HOME)\n  displayName: Configure gradle caching\n\n- task: Gradle@2\n  inputs:\n    gradleWrapperFile: 'gradlew'\n    tasks: 'build'\n    options: '--build-cache'\n  displayName: Build\n\n- script: |   \n    # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)\n    ./gradlew --stop    \n  displayName: Gradlew stop\n```\n\n----------------------------------------\n\nTITLE: Retrieving the Last Work Item Identifier using OData\nDESCRIPTION: This OData query uses the $apply extension with the aggregate function to find the maximum work item ID, effectively identifying the last work item created.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $apply=aggregate(WorkItemId with max as MaxWorkItemId)\n```\n\n----------------------------------------\n\nTITLE: Creating Bug Work Items using Azure DevOps .NET Client Libraries\nDESCRIPTION: C# implementation for creating bugs in Azure DevOps using the WorkItemTracking API. The code handles authentication with Personal Access Token (PAT), establishes connection to Azure DevOps, and creates a bug work item with specified fields using JSON-Patch operations. The implementation includes error handling and returns the created WorkItem object.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/quickstarts/create-bug-quickstart.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nusing Microsoft.TeamFoundation.WorkItemTracking.WebApi;\nusing Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models;\nusing Microsoft.VisualStudio.Services.Common;\nusing Microsoft.VisualStudio.Services.WebApi.Patch.Json;\nusing Microsoft.VisualStudio.Services.WebApi.Patch;\nusing Microsoft.VisualStudio.Services.WebApi;\nusing System.Net.Http.Headers;\nusing System.Net.Http;\nusing Newtonsoft.Json;\n\n \npublic class CreateBug \n{\n    readonly string _uri;\n    readonly string _personalAccessToken;\n    readonly string _project;\n\n    /// <summary>\n    /// Constructor. Manually set values to match your organization. \n    /// </summary>\n    public CreateBug()\n    {\n        _uri = \"https://dev.azure.com/{orgName}\";\n        _personalAccessToken = \"personal access token\";\n        _project = \"project name\";\n    }\n\n    /// <summary>\n    /// Create a bug using the .NET client library\n    /// </summary>\n    /// <returns>Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem</returns>    \n    public WorkItem CreateBugUsingClientLib()\n    {\n        Uri uri = new Uri(_uri);\n        string personalAccessToken = _personalAccessToken;\n        string project = _project;\n\n        VssBasicCredential credentials = new VssBasicCredential(\"\", _personalAccessToken);\n        JsonPatchDocument patchDocument = new JsonPatchDocument();\n\n        //add fields and their values to your patch document\n        patchDocument.Add(\n            new JsonPatchOperation()\n            {\n                Operation = Operation.Add,\n                Path = \"/fields/System.Title\",\n                Value = \"Authorization Errors\"\n            }\n        );\n\n        patchDocument.Add(\n            new JsonPatchOperation()\n            {\n                Operation = Operation.Add,\n                Path = \"/fields/Microsoft.VSTS.TCM.ReproSteps\",\n                Value = \"Our authorization logic needs to allow for users with Microsoft accounts (formerly Live Ids) - http:// msdn.microsoft.com/library/live/hh826547.aspx\"\n            }\n        );\n\n        patchDocument.Add(\n            new JsonPatchOperation()\n            {\n                Operation = Operation.Add,\n                Path = \"/fields/Microsoft.VSTS.Common.Priority\",\n                Value = \"1\"\n            }\n        );\n\n        patchDocument.Add(\n            new JsonPatchOperation()\n            {\n                Operation = Operation.Add,\n                Path = \"/fields/Microsoft.VSTS.Common.Severity\",\n                Value = \"2 - High\"\n            }\n        );\n        VssConnection connection = new VssConnection(uri, credentials);\n        WorkItemTrackingHttpClient workItemTrackingHttpClient = connection.GetClient<WorkItemTrackingHttpClient>();\n\n        try\n        {\n            WorkItem result = workItemTrackingHttpClient.CreateWorkItemAsync(patchDocument, project, \"Bug\").Result;\n\n            Console.WriteLine(\"Bug Successfully Created: Bug #{0}\", result.Id);\n\n            return result;\n        }\n        catch (AggregateException ex)\n        {\n            Console.WriteLine(\"Error creating bug: {0}\", ex.InnerException.Message);\n            return null;\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Azure Pipeline YAML for NuGet Caching\nDESCRIPTION: A full YAML pipeline configuration demonstrating NuGet package caching, including variable setup, caching task, conditional restore, and build steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/caching-nuget.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\npool:\n  vmImage: 'windows-latest'\n\nvariables:\n  solution: '**/*.sln'\n  buildPlatform: 'Any CPU'\n  buildConfiguration: 'Release'\n  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages\n\nsteps:\n- task: NuGetToolInstaller@1\n  displayName: 'NuGet tool installer'\n\n- task: Cache@2\n  displayName: 'NuGet Cache'\n  inputs:\n    key: 'nuget | \"$(Agent.OS)\" | **/packages.lock.json,!**/bin/**,!**/obj/**'\n    restoreKeys: |\n       nuget | \"$(Agent.OS)\"\n       nuget\n    path: '$(NUGET_PACKAGES)'\n    cacheHitVar: 'CACHE_RESTORED'\n\n- task: NuGetCommand@2\n  displayName: 'NuGet restore'\n  condition: ne(variables.CACHE_RESTORED, true)\n  inputs:\n    command: 'restore'\n    restoreSolution: '$(solution)'\n\n- task: VSBuild@1\n  displayName: 'Visual Studio Build'\n  inputs:\n    solution: '$(solution)'\n    platform: '$(buildPlatform)'\n    configuration: '$(buildConfiguration)'\n```\n\n----------------------------------------\n\nTITLE: Defining Multiple Stages in Azure Pipelines YAML\nDESCRIPTION: Example showing how to organize a pipeline into multiple stages, each containing multiple jobs. This pattern helps organize complex pipelines into logical sections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  jobs:\n  - job: A1\n  - job: A2\n\n- stage: B\n  jobs:\n  - job: B1\n  - job: B2\n```\n\n----------------------------------------\n\nTITLE: Installing pip, setuptools, and wheel Packages in Azure Pipelines YAML\nDESCRIPTION: Shows a step that upgrades pip and installs setuptools and wheel using python -m pip. Used to ensure tools are up-to-date before further install or build steps. Requires only Python and internet access. The 'displayName' metadata clarifies the step's purpose in logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- script: python -m pip install --upgrade pip setuptools wheel\\n  displayName: 'Install tools'\n```\n\n----------------------------------------\n\nTITLE: Configuring Repository Access in Azure DevOps YAML Pipeline\nDESCRIPTION: Example YAML configuration showing how to explicitly reference Azure Repos Git repositories using checkout steps and uses statements when repository access restrictions are enabled. Demonstrates both direct checkout and repository reference methods.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/azure-repos-git.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: git://FabrikamFiber/FabrikamTools # Azure Repos Git repository in the same organization\n- script: # Do something with that repo\n\n# Or you can reference it with a uses statement in the job\nuses:\n  repositories: # List of referenced repositories\n  - FabrikamTools # Repository reference to FabrikamTools\n\nsteps:\n- script: # Do something with that repo like clone it\n```\n\n----------------------------------------\n\nTITLE: Using Azure DevOps CLI with Linux Hosted Agents (Bash)\nDESCRIPTION: This YAML pipeline example shows a complete workflow using Azure DevOps CLI on a Linux hosted agent. It configures defaults, authenticates using System.AccessToken, and runs multiple CLI commands including Git aliases.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- bash: az --version\n  displayName: 'Show Azure CLI version'\n\n- bash: az devops configure --defaults organization='$(System.TeamFoundationCollectionUri)' project='$(System.TeamProject)' --use-git-aliases true\n  displayName: 'Set default Azure DevOps organization and project'\n\n- bash: |\n    az pipelines build list\n    git pr list\n  displayName: 'Show build list and PRs'\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Pipeline for Docker Build and Kubernetes Deployment\nDESCRIPTION: This YAML configuration defines an Azure DevOps pipeline for building a Docker image, pushing it to Azure Container Registry, and deploying it to Azure Kubernetes Service. It includes stages for building, production deployment, and handling pull requests with review apps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-kubernetes.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service\ntrigger:\n- main\n\nresources:\n- repo: self\n\nvariables:\n\n  # Container registry service connection established during pipeline creation\n  dockerRegistryServiceConnection: '12345' # Docker service connection identifier\n  envName: 'myEnv' # name of your environment\n  imageRepository: 'name-of-image-repository' # name of image repository\n  containerRegistry: 'mycontainer.azurecr.io' # path to container registry\n  dockerfilePath: '**/Dockerfile'\n  tag: '$(Build.BuildId)'\n  imagePullSecret: 'my-app-secret' # image pull secret\n\n  # Agent VM image name\n  vmImageName: 'ubuntu-latest'\n\n  # Name of the new namespace being created to deploy the PR changes.\n  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'\n\nstages:\n- stage: Build\n  displayName: Build stage\n  jobs:\n  - job: Build\n    displayName: Build\n    pool:\n      vmImage: $(vmImageName)\n    steps:\n    - task: Docker@2\n      displayName: Build and push an image to container registry\n      inputs:\n        command: buildAndPush\n        repository: $(imageRepository)\n        dockerfile: $(dockerfilePath)\n        containerRegistry: $(dockerRegistryServiceConnection)\n        tags: |\n          $(tag)\n\n    - upload: manifests\n      artifact: manifests\n\n- stage: Production\n  displayName: Deploy stage\n  dependsOn: Build\n\n  jobs:\n  - deployment: Production\n    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))\n    displayName: Production\n    pool:\n      vmImage: $(vmImageName)\n    environment: \n      name: $(envName).$(resourceName)\n      resourceType: Kubernetes \n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - task: KubernetesManifest@0\n            displayName: Create imagePullSecret\n            inputs:\n              action: createSecret\n              secretName: $(imagePullSecret)\n              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)\n\n          - task: KubernetesManifest@0\n            displayName: Deploy to Kubernetes cluster\n            inputs:\n              action: deploy\n              manifests: |\n                $(Pipeline.Workspace)/manifests/deployment.yml\n                $(Pipeline.Workspace)/manifests/service.yml\n              imagePullSecrets: |\n                $(imagePullSecret)\n              containers: |\n                $(containerRegistry)/$(imageRepository):$(tag)\n\n  - deployment: DeployPullRequest\n    displayName: Deploy Pull request\n    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))\n    pool:\n      vmImage: $(vmImageName)\n\n    environment: \n      name: $(envName).$(resourceName)\n      resourceType: Kubernetes\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - reviewApp: default\n\n          - task: Kubernetes@1\n            displayName: 'Create a new namespace for the pull request'\n            inputs:\n              command: apply\n              useConfigurationFile: true\n              inline: '{ \"kind\": \"Namespace\", \"apiVersion\": \"v1\", \"metadata\": { \"name\": \"$(k8sNamespaceForPR)\" }}'\n\n          - task: KubernetesManifest@0\n            displayName: Create imagePullSecret\n            inputs:\n              action: createSecret\n              secretName: $(imagePullSecret)\n              namespace: $(k8sNamespaceForPR)\n              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)\n\n          - task: KubernetesManifest@0\n            displayName: Deploy to the new namespace in the Kubernetes cluster\n            inputs:\n              action: deploy\n              namespace: $(k8sNamespaceForPR)\n              manifests: |\n                $(Pipeline.Workspace)/manifests/deployment.yml\n                $(Pipeline.Workspace)/manifests/service.yml\n              imagePullSecrets: |\n                $(imagePullSecret)\n              containers: |\n                $(containerRegistry)/$(imageRepository):$(tag)\n\n          - task: Kubernetes@1\n            name: get\n            displayName: 'Get services in the new namespace'\n            continueOnError: true\n            inputs:\n              command: get\n              namespace: $(k8sNamespaceForPR)\n              arguments: svc\n              outputFormat: jsonpath='http://{.items[0].status.loadBalancer.ingress[0].ip}:{.items[0].spec.ports[0].port}'\n\n          # Getting the IP of the deployed service and writing it to a variable for posting comment\n          - script: |\n              url=\"$(get.KubectlOutput)\"\n              message=\"Your review app has been deployed\"\n              if [ ! -z \"$url\" -a \"$url\" != \"http://:\" ]\n              then\n                message=\"${message} and is available at $url.<br><br>[Learn More](https://aka.ms/testwithreviewapps) about how to test and provide feedback for the app.\"\n              fi\n              echo \"##vso[task.setvariable variable=GITHUB_COMMENT]$message\"\n```\n\n----------------------------------------\n\nTITLE: Configuring nuget.config for Project-scoped Azure Artifacts Feed\nDESCRIPTION: XML configuration for connecting to a project-scoped Azure Artifacts feed. This file should be placed in the same folder as your .csproj or .sln file to establish the connection to your private package feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-setup.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<FEED_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Installing a Specific Version of .NET SDK Using UseDotNet Task - YAML\nDESCRIPTION: This snippet enables the installation of the .NET 5.x SDK using the UseDotNet@2 Azure DevOps pipeline task. Only the 'version' input is required, specifying the SDK major version (e.g., '5.x'). Dependencies: the UseDotNet@2 task should be provisioned in the pipeline environment, and an appropriate agent OS. The result is the specified version of the .NET SDK being available for later pipeline steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\\n- task: UseDotNet@2\\n  inputs:\\n    version: '5.x'\\n\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Virtual Machine Scale Set for Azure DevOps Agents\nDESCRIPTION: Azure CLI command to create a Virtual Machine Scale Set configured for use with Azure DevOps. It specifies Ubuntu 22.04 image, disables overprovisioning, sets manual upgrade policy, and other required settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz vmss create \\\n--name vmssagentspool \\\n--resource-group vmssagents \\\n--image Ubuntu2204 \\\n--vm-sku Standard_D2_v4 \\\n--storage-sku StandardSSD_LRS \\\n--authentication-type SSH \\\n--generate-ssh-keys \\\n--instance-count 2 \\\n--disable-overprovision \\\n--upgrade-policy-mode manual \\\n--single-placement-group false \\\n--platform-fault-domain-count 1 \\\n--load-balancer \"\" \\\n--orchestration-mode Uniform\n```\n\n----------------------------------------\n\nTITLE: Defining a Windows Container Job in YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to define a Windows container job using Windows Server Core LTSC 2019 that runs the 'set' command inside the container.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/container-phases.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'windows-2019'\n\ncontainer: mcr.microsoft.com/windows/servercore:ltsc2019\n\nsteps:\n- script: set\n```\n\n----------------------------------------\n\nTITLE: Maven Pipeline Configuration with Artifact Creation\nDESCRIPTION: Azure DevOps pipeline configuration for building a Java application with Maven and creating deployment artifacts. Includes Maven build configuration and file copying for deployment preparation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-virtual-scale-set-java.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger: none\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: Maven@4\n  inputs:\n    mavenPomFile: 'pom.xml'\n    mavenOptions: '-Xmx3072m'\n    javaHomeOption: 'JDKVersion'\n    jdkVersionOption: '1.8'\n    jdkArchitectureOption: 'x64'\n    publishJUnitResults: true\n    testResultsFiles: '**/surefire-reports/TEST-*.xml'\n    goals: 'package'\n\n- task: CopyFiles@2\n  displayName: 'Copy File to: $(TargetFolder)'\n  inputs:\n    SourceFolder: '$(Build.SourcesDirectory)'\n    Contents: |\n      **/*.sh \n      **/*.war\n      **/*jar-with-dependencies.jar\n    TargetFolder: '$(System.DefaultWorkingDirectory)/pipeline-artifacts/'\n    flattenFolders: true\n```\n\n----------------------------------------\n\nTITLE: Running Inline Python Code with PythonScript Task in Azure Pipelines YAML\nDESCRIPTION: Uses the PythonScript@0 task to run simple Python code provided inline. This allows for short, quick scripts without uploading extra files. Requires the built-in PythonScript task. Input is the inline script text; output is directly shown in pipeline logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PythonScript@0\\n  inputs:\\n    scriptSource: 'inline'\\n    script: |\\n      print('Hello world 1')\\n      print('Hello world 2')\n```\n\n----------------------------------------\n\nTITLE: Merging Branches Using Git Command Line\nDESCRIPTION: Commands to checkout a target branch and merge a source branch into it. The process involves first switching to the target branch and then performing the merge operation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/merging.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit checkout <target branch>\ngit merge <source branch>\n```\n\n----------------------------------------\n\nTITLE: Enabling BuildKit for Docker Builds in Azure Pipelines\nDESCRIPTION: Shows how to enable BuildKit for Docker builds in Azure Pipelines by setting the `DOCKER_BUILDKIT` pipeline variable to `1`. BuildKit offers performance improvements and enhanced features but is currently only supported on Linux hosts (hence `vmImage: 'ubuntu-latest'`). The pipeline uses the `Docker@2` task to perform the build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/build-image.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n   \npool:\n  vmImage: 'ubuntu-latest'\n   \n\nvariables:\n  imageName: 'pipelines-javascript-docker'\n  DOCKER_BUILDKIT: 1\n    \nsteps:\n- task: Docker@2\n  displayName: Build an image\n  inputs:\n    repository: $(imageName)\n    command: build\n    Dockerfile: app/Dockerfile\n```\n\n----------------------------------------\n\nTITLE: Publishing Build Artifacts in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to publish the entire working directory as build artifacts using the PublishBuildArtifacts task in an Azure Pipelines YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_25\n\nLANGUAGE: YAML\nCODE:\n```\n- task: PublishBuildArtifacts@1\n  inputs:\n    PathtoPublish: '$(System.DefaultWorkingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters Template in Azure DevOps Pipeline\nDESCRIPTION: A YAML template that defines parameters including a boolean and pool image selection with default values. The template includes steps to echo the parameter values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n# params.yml\nparameters:\n- name: yesNo \n  type: boolean\n  default: false\n- name: image\n  displayName: Pool Image\n  type: string\n  default: ubuntu-latest\n  values:\n  - windows-latest\n  - ubuntu-latest\n  - macOS-latest\n\nsteps:\n- script: echo ${{ parameters.yesNo }}\n- script: echo ${{ parameters.image }}\n```\n\n----------------------------------------\n\nTITLE: Publishing Symbols to File Share\nDESCRIPTION: YAML configuration for publishing debug symbols to a file share using the PublishSymbols task. Includes source indexing and symbol server configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishSymbols@2\n  inputs:\n    SymbolsFolder: '$(Build.SourcesDirectory)'\n    SearchPattern: '**/bin/**/*.pdb'\n    IndexSources: true\n    PublishSymbols: true\n    SymbolServerType: 'FileShare' \n    SymbolsPath: '\\\\server\\shareName'\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Package Caching in Azure Pipelines\nDESCRIPTION: YAML configuration for caching NuGet packages using the Cache@2 task. Sets up caching based on packages.lock.json and configures NUGET_PACKAGES environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages\n\nsteps:\n- task: Cache@2\n  inputs:\n    key: 'nuget | \"$(Agent.OS)\" | $(Build.SourcesDirectory)/**/packages.lock.json'\n    restoreKeys: |\n       nuget | \"$(Agent.OS)\"\n       nuget\n    path: $(NUGET_PACKAGES)\n  displayName: Cache NuGet packages\n```\n\n----------------------------------------\n\nTITLE: Example of Creating a Build Validation Policy\nDESCRIPTION: Practical example of creating a required build policy for pull requests in the 'main' branch. This policy blocks PRs that don't pass the build, requires manual build queuing, and uses a specific build definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy build create --blocking true --branch main --build-definition-id 1 --display-name build-policy --enabled true --manual-queue-only true --queue-on-source-update-only false --repository-id d28cd374-e7f0-4b1f-ad60-f349f155d47c --valid-duration 0 --output table\n```\n\n----------------------------------------\n\nTITLE: Downloading Keystore for Android App Signing in YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to use the DownloadSecureFile@1 task to download a keystore file stored as a secure file in the Azure Pipelines library. This is a prerequisite step for signing Android app bundles.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadSecureFile@1\n  name: keyStore\n  displayName: \"Download keystore from secure files\"\n  inputs:\n    secureFile: app.keystore\n```\n\n----------------------------------------\n\nTITLE: Using Build.BuildNumber Variable in Azure DevOps Pipelines\nDESCRIPTION: Represents the name (or run number) of the completed build, configurable via run number settings. Often used in label formats but may cause issues if it contains invalid characters. It's agent-scoped, usable as an environment variable or task parameter, but not in build numbers or version control tags. Not available in templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_3\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.BuildNumber\n```\n\n----------------------------------------\n\nTITLE: Retrieving Work Items for a Specific Sprint in Fabrikam Project\nDESCRIPTION: This example shows how to query work items for a specific project and iteration path. It returns work item details including ID, type, title, and state for all items in the specified sprint.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_4\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/_odata/v4.0-preview/WorkItems?$select=WorkItemId, WorkItemType, Title, State&$expand=Iteration($select=IterationPath)&$filter=(Project/ProjectName eq 'Fabrikam Fiber' AND WorkItemType ne '' AND Iteration/IterationPath eq 'Fabrikam Fiber\\Release 1\\Sprint 6')\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Pipeline Demands for Agent Selection\nDESCRIPTION: YAML syntax for adding demands to a pipeline to ensure it runs on an agent with specific capabilities. The example checks for the existence of 'SpecialSoftware' on the agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/agents.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  name: Default\n  demands: SpecialSoftware # exists check for SpecialSoftware\n```\n\n----------------------------------------\n\nTITLE: Creating Reusable Container Definitions with Resources Section\nDESCRIPTION: This example defines multiple containers in the resources section and references them by aliases using a matrix strategy to run the same job in different container environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/container-phases.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: u16\n    image: ubuntu:16.04\n\n  - container: u18\n    image: ubuntu:18.04\n\n  - container: u20\n    image: ubuntu:20.04\n\njobs:\n- job: RunInContainer\n  pool:\n    vmImage: 'ubuntu-latest'\n\n  strategy:\n    matrix:\n      ubuntu16:\n        containerResource: u16\n      ubuntu18:\n        containerResource: u18\n      ubuntu20:\n        containerResource: u20\n\n  container: $[ variables['containerResource'] ]\n\n  steps:\n  - script: printenv\n```\n\n----------------------------------------\n\nTITLE: Using Pipeline Artifacts Across Stages with Dependencies - Azure Pipelines - YAML\nDESCRIPTION: This example illustrates a multi-stage Azure Pipeline where an artifact ('scripts' folder) is published in a build stage and downloaded in a test stage using dependencies. The build stage builds a solution, copies scripts to the staging directory, and publishes them as a pipeline artifact. The test stage then downloads the 'drop' artifact and executes a PowerShell script from it. Key steps include referencing the artifact with the 'download' step and ensuring both stages use compatible working directories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\nstages:\n- stage: build\n  jobs:\n  - job: run_build\n    pool:\n      vmImage: 'windows-latest'\n    steps:\n    - task: VSBuild@1\n      inputs:\n        solution: '**/*.sln'\n        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation=\"$(build.artifactStagingDirectory)\\WebApp.zip\" /p:DeployIisAppPath=\"Default Web Site\"'\n        platform: 'Any CPU'\n        configuration: 'Release'\n\n    - task: CopyFiles@2\n      displayName: 'Copy scripts'\n      inputs:\n        contents: 'scripts/**'\n        targetFolder: '$(Build.ArtifactStagingDirectory)'\n\n    - publish: '$(Build.ArtifactStagingDirectory)/scripts'\n      displayName: 'Publish script'\n      artifact: drop\n\n- stage: test\n  dependsOn: build\n  jobs:\n  - job: run_test\n    pool:\n      vmImage: 'windows-latest'\n    steps:\n    - download: current\n      artifact: drop\n    - task: PowerShell@2\n      inputs:\n        filePath: '$(Pipeline.Workspace)\\drop\\test.ps1'\n\n```\n\n----------------------------------------\n\nTITLE: Configuring a Single Container Job with Service Container in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for a single container job that uses an nginx service container. The pipeline fetches buildpack-deps and nginx containers from Docker Hub, starts them, and demonstrates network connectivity between them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/service-containers.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: my_container\n    image: buildpack-deps:focal\n  - container: nginx\n    image: nginx\n\npool:\n  vmImage: 'ubuntu-latest'\n\ncontainer: my_container\nservices:\n  nginx: nginx\n\nsteps:\n- script: |\n    curl nginx\n  displayName: Show that nginx is running\n```\n\n----------------------------------------\n\nTITLE: Setting Output Variable in Bash\nDESCRIPTION: This snippet shows how to set an output variable named 'myStageVal' using a Bash script in an Azure DevOps pipeline task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n  - bash: echo \"##vso[task.setvariable variable=myStageVal;isOutput=true]this is a stage output variable\"\n    name: MyOutputVar\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Pull Rebase Behavior via Command Line\nDESCRIPTION: Sets the pull.rebase option to determine how Git handles pulling changes. This controls whether Git performs a merge or rebase operation when pulling changes from a remote branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_7\n\nLANGUAGE: console\nCODE:\n```\ngit config [--local|--global|--system] pull.rebase [true|false|interactive|preserve]\n```\n\n----------------------------------------\n\nTITLE: Configuring Complex PR Triggers with Branch Exclusions in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows a more complex pull request trigger configuration, including specific branches to include and exclude. It targets the 'main' branch and 'releases/*' branches, but excludes 'releases/old*' branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/bitbucket.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  branches:\n    include:\n    - main\n    - releases/*\n    exclude:\n    - releases/old*\n```\n\n----------------------------------------\n\nTITLE: Complete Azure DevOps YAML Pipeline Example for Python Web App\nDESCRIPTION: Comprehensive YAML pipeline definition showing all components needed for a Python web application deployment pipeline. Includes build and deploy stages, environment variables, and Azure App Service deployment configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\nvariables:\n  # Azure Resource Manager connection created during pipeline creation\n  azureServiceConnectionId: '<GUID>'\n\n  # Web app name\n  webAppName: '<your-webapp-name>'\n\n  # Agent VM image name\n  vmImageName: 'ubuntu-latest'\n\n  # Environment name\n  environmentName: '<your-webapp-name>'\n\n  # Project root folder. Point to the folder containing manage.py file.\n  projectRoot: $(System.DefaultWorkingDirectory)\n\n  pythonVersion: '3.11'\n\nstages:\n- stage: Build\n  displayName: Build stage\n  jobs:\n  - job: BuildJob\n    pool:\n      vmImage: $(vmImageName)\n    steps:\n    - task: UsePythonVersion@0\n      inputs:\n        versionSpec: '$(pythonVersion)'\n      displayName: 'Use Python $(pythonVersion)'\n\n    - script: |\n        python -m venv antenv\n        source antenv/bin/activate\n        python -m pip install --upgrade pip\n        pip install setuptools\n        pip install -r requirements.txt\n      workingDirectory: $(projectRoot)\n      displayName: \"Install requirements\"\n\n    - task: ArchiveFiles@2\n      displayName: 'Archive files'\n      inputs:\n        rootFolderOrFile: '$(projectRoot)'\n        includeRootFolder: false\n        archiveType: zip\n        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n        replaceExistingArchive: true\n\n    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n      displayName: 'Upload package'\n      artifact: drop\n\n- stage: Deploy\n  displayName: 'Deploy Web App'\n  dependsOn: Build\n  condition: succeeded()\n  jobs:\n  - deployment: DeploymentJob\n    pool:\n      vmImage: $(vmImageName)\n    environment: $(environmentName)\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n\n          - task: UsePythonVersion@0\n            inputs:\n              versionSpec: '$(pythonVersion)'\n            displayName: 'Use Python version'\n\n          - task: AzureWebApp@1\n            displayName: 'Deploy Azure Web App : $(webAppName)'\n            inputs:\n              azureSubscription: $(azureServiceConnectionId)\n              appName: $(webAppName)\n              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip\n```\n\n----------------------------------------\n\nTITLE: Implementing Optional Alternate Production and Rollback Stages in Azure DevOps YAML Pipeline\nDESCRIPTION: YAML configuration for adding optional alternate production and rollback stages to an Azure DevOps pipeline. These stages are manually triggered and provide backup deployment options and rollback capability for production environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/run-stages.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n- stage: DeployToAlternateProduction\n  displayName: 'Deploy to Alternate Production'\n  condition: succeeded()\n  trigger: manual\n  jobs:\n  - job: DeployAlternateProductionJob\n    displayName: 'Deploy to Alternate Production Job'\n    steps:\n    - script: |\n        echo \"Deploying to alternate production...\"\n        # Add your deployment commands here\n      displayName: 'Run deployment commands'\n\n- stage: Rollback\n  displayName: 'Rollback Stage'\n  trigger: manual\n  jobs:\n  - job: RollbackJob\n    displayName: 'Rollback Job'\n    steps:\n    - script: |\n        echo \"Rolling back the deployment...\"\n        # Add your rollback commands here\n      displayName: 'Run rollback commands'\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet Packages in Azure Pipelines (YAML)\nDESCRIPTION: YAML configuration for publishing NuGet packages using Azure Pipelines. This snippet is referenced but not explicitly shown in the document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/artifacts-overview.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Example YAML for publishing NuGet packages\n- task: NuGetCommand@2\n  inputs:\n    command: 'push'\n    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'\n    nuGetFeedType: 'internal'\n    publishVstsFeed: 'your-feed-name'\n```\n\n----------------------------------------\n\nTITLE: Steps Template with Conditional Parameters\nDESCRIPTION: Template defining steps with a boolean parameter to conditionally run extended tests.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: 'runExtendedTests'\n  type: boolean\n  default: false\n\nsteps:\n- script: npm test\n- ${{ if eq(parameters.runExtendedTests, true) }}:\n  - script: npm test --extended\n```\n\n----------------------------------------\n\nTITLE: Conditional Pipeline Steps with Parameters\nDESCRIPTION: Shows how to use boolean parameters to conditionally execute pipeline steps based on parameter values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runtime-parameters.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: image\n  displayName: Pool Image\n  values:\n  - windows-latest\n  - ubuntu-latest\n  - macOS-latest\n- name: test\n  displayName: Run Tests?\n  type: boolean\n  default: false\n\ntrigger: none\n\njobs:\n- job: build\n  displayName: Build and Test\n  pool: \n    vmImage: ${{ parameters.image }}\n  steps:\n  - script: echo building $(Build.BuildNumber)\n  - ${{ if eq(parameters.test, true) }}:\n    - script: echo \"Running all the tests\"\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Docker Images Using Docker@2 Task in Azure Pipelines (YAML) - YAML\nDESCRIPTION: This YAML pipeline snippet demonstrates building and pushing a Docker image using Azure Pipelines and the Docker@2 pipeline task. It sets up a pipeline triggered on the 'main' branch, uses the latest Ubuntu VM image, and defines variables for Docker repository and registry service connection. Users need to replace placeholders for the Docker registry service connection and target repository name. The pipeline builds a Docker image using any 'Dockerfile' found in the repo and pushes it to the specified container registry. Inputs involve service connection and repository details; outputs are published images in the registry. Requires Azure DevOps, Docker, and a configured registry service connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/push-image.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest' \n\nvariables:\n  repositoryName: '<target repository name>' \n\nsteps:\n- task: Docker@2\n  inputs:\n    containerRegistry: '<docker registry service connection>'\n    repository: $(repositoryName)\n    command: 'buildAndPush'\n    Dockerfile: '**/Dockerfile'\n\n```\n\n----------------------------------------\n\nTITLE: Specifying a Windows Agent Pool in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to configure the pipeline to run jobs on a Microsoft-hosted agent using the latest Windows image by setting the `pool.vmImage` property to `windows-latest`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: \"windows-latest\"\n```\n\n----------------------------------------\n\nTITLE: Complete Azure Pipeline with Canary Deployment\nDESCRIPTION: Full pipeline configuration including build and canary deployment stages with Kubernetes manifest deployment, secrets management, and deployment strategy configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/kubernetes/canary-demo.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nvariables:\n  imageName: azure-pipelines-canary-k8s\n  dockerRegistryServiceConnection: azure-pipelines-canary-acr\n  imageRepository: 'azure-pipelines-canary-k8s'\n  containerRegistry: yourcontainerregistry.azurecr.io #update with container registry\n  tag: '$(Build.BuildId)'\n\nstages:\n- stage: Build\n  displayName: Build stage\n  jobs:  \n  - job: Build\n    displayName: Build\n    pool:\n      vmImage: ubuntu-latest\n    steps:\n    - task: Docker@2\n      displayName: Build and push image\n      inputs:\n        containerRegistry: $(dockerRegistryServiceConnection)\n        repository: $(imageName)\n        command: buildAndPush\n        Dockerfile: app/Dockerfile\n        tags: |\n          $(tag)\n          \n    - publish: manifests\n      artifact: manifests\n\n    - publish: misc\n      artifact: misc\n\n- stage: DeployCanary\n  displayName: Deploy canary\n  dependsOn: Build\n  condition: succeeded()\n\n  jobs:\n  - deployment: Deploycanary\n    displayName: Deploy canary\n    pool:\n      vmImage: ubuntu-latest\n    environment: 'akscanary'\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - task: KubernetesManifest@1\n            displayName: Create Docker Registry Secret\n            inputs:\n              action: 'createSecret'\n              connectionType: 'azureResourceManager'\n              azureSubscriptionConnection: 'azure-pipelines-canary-sc'\n              azureResourceGroup: 'my-resource-group'\n              kubernetesCluster: 'my-aks-cluster'\n              secretType: 'dockerRegistry'\n              secretName: 'my-acr-secret'\n              dockerRegistryEndpoint: 'azure-pipelines-canary-acr'\n\n          - task: KubernetesManifest@1\n            displayName: Deploy to Kubernetes cluster\n            inputs:\n              action: 'deploy'\n              connectionType: 'azureResourceManager'\n              azureSubscriptionConnection: 'azure-pipelines-canary-sc'\n              azureResourceGroup: 'my-resource-group'\n              kubernetesCluster: 'my-aks-cluster'\n              strategy: 'canary'\n              percentage: '25'\n              manifests: |\n                $(Pipeline.Workspace)/manifests/deployment.yml\n                $(Pipeline.Workspace)/manifests/service.yml\n              containers: '$(containerRegistry)/$(imageRepository):$(tag)'\n              imagePullSecrets: 'my-acr-secret'\n\n          - task: KubernetesManifest@1\n            displayName: Deploy Forbio to Kubernetes cluster\n            inputs:\n              action: 'deploy'\n              connectionType: 'azureResourceManager'\n              azureSubscriptionConnection: 'azure-pipelines-canary-sc'\n              azureResourceGroup: 'my-resource-group'\n              kubernetesCluster: 'my-aks-cluster'\n              manifests: '$(Pipeline.Workspace)/misc/*'\n```\n\n----------------------------------------\n\nTITLE: Accessing Variable Group Values Using Runtime Expression in YAML Pipeline\nDESCRIPTION: This example shows how to reference a variable from a linked variable group using a runtime expression in a YAML pipeline. It demonstrates linking the variable group, assigning its value to a new variable, and then using that variable in a script step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- group: my-variable-group\n- name: my-passed-variable\n  value: $[variables.myhello]\n- script: echo $(my-passed-variable)\n```\n\n----------------------------------------\n\nTITLE: Boolean Comparison Using lt() Function in Azure DevOps YAML\nDESCRIPTION: Demonstrates type conversion between boolean values using the lt() function, where True and False are converted to 1 and 0 for comparison.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  firstEval: $[lt(False, True)] # 0 vs. 1, True\n  secondEval: $[lt(True, False)] # 1 vs. 0, False\n\nsteps:\n- script: echo $(firstEval)\n- script: echo $(secondEval)\n```\n\n----------------------------------------\n\nTITLE: Adding Build Tag in Azure DevOps Pipeline using YAML\nDESCRIPTION: This YAML snippet demonstrates how to add a custom build tag in an Azure DevOps pipeline. It uses a Bash task to create a tag with a timestamp and applies it to the current build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Bash@3\n    inputs:\n    targetType: 'inline'\n    script: |\n        last_scanned=\"last_scanned-$(currentDate)\"\n        echo \"##vso[build.addbuildtag]$last_scanned\"\n    displayName: 'Apply last scanned tag'\n```\n\n----------------------------------------\n\nTITLE: Conditional Insertion in Template Steps in YAML\nDESCRIPTION: This snippet shows how to conditionally insert steps into a template based on a parameter value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-expressions.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# File: steps/build.yml\n\nparameters:\n- name: 'toolset'\n  default: msbuild\n  type: string\n  values:\n  - msbuild\n  - dotnet\n\nsteps:\n# msbuild\n- ${{ if eq(parameters.toolset, 'msbuild') }}:\n  - task: msbuild@1\n  - task: vstest@2\n\n# dotnet\n- ${{ if eq(parameters.toolset, 'dotnet') }}:\n  - task: dotnet@1\n    inputs:\n      command: build\n  - task: dotnet@1\n    inputs:\n      command: test\n```\n\n----------------------------------------\n\nTITLE: Fan-Out Job Dependencies in Azure DevOps Pipelines\nDESCRIPTION: Example of fan-out pattern where multiple jobs (SubsequentA and SubsequentB) depend on a single initial job. This allows parallel execution after a common prerequisite job completes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: InitialJob\n  steps:\n  - script: echo hello from initial job\n- job: SubsequentA\n  dependsOn: InitialJob\n  steps:\n  - script: echo hello from subsequent A\n- job: SubsequentB\n  dependsOn: InitialJob\n  steps:\n  - script: echo hello from subsequent B\n```\n\n----------------------------------------\n\nTITLE: Accessing Variable Group Values Using Macro Syntax in YAML Pipeline\nDESCRIPTION: This snippet illustrates how to access a variable from a linked variable group using macro syntax in a YAML pipeline. It shows linking the variable group and directly referencing its variable in a script step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- group: my-variable-group\n\nsteps:\n- script: echo $(myhello)\n```\n\n----------------------------------------\n\nTITLE: Fan-In Job Dependencies in Azure DevOps Pipelines\nDESCRIPTION: Example of fan-in pattern where a single job (Subsequent) depends on multiple initial jobs. This ensures the final job only runs after all prerequisite jobs have completed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: InitialA\n  steps:\n  - script: echo hello from initial A\n- job: InitialB\n  steps:\n  - script: echo hello from initial B\n- job: Subsequent\n  dependsOn:\n  - InitialA\n  - InitialB\n  steps:\n  - script: echo hello from subsequent\n```\n\n----------------------------------------\n\nTITLE: Passing Variables from Deployment Jobs Between Stages\nDESCRIPTION: Example showing how to set and reference output variables from deployment jobs across stages. Demonstrates the stageDependencies syntax required for referencing variables from deployment jobs with resource definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: StageA\n  jobs:\n    - deployment: A1\n      environment: \n        name:  env1\n        resourceName: DevEnvironmentV\n        resourceType: virtualMachine\n      strategy:\n        runOnce:\n          deploy:\n            steps:\n              - script: echo \"##vso[task.setvariable variable=myVar;isOutput=true]true\"\n                name: setvarStep\n              - script: |\n                  echo \"Value of myVar in the same Job : $(setVarStep.myVar)\"\n                displayName: 'Verify variable in StageA'\n- stage: StageB\n  dependsOn: StageA\n\n  # Full Variables syntax for inter-stage jobs\n  variables:\n    myOutputVar: $[stageDependencies.StageA.A1.outputs['Deploy_DevEnvironmentV.setvarStep.myVar']]\n  jobs:\n  - deployment: B1\n    pool:\n      vmImage: 'ubuntu-latest'\n    environment: envB\n    strategy:                  \n      runOnce:\n        deploy:\n          steps:\n          - bash: echo $(myOutputVar)\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle Build Tasks in Azure Pipelines (YAML, Azure DevOps)\nDESCRIPTION: This YAML snippet adds a Gradle build task to an Azure Pipeline for Android applications. It uses the Gradle@3 task with customizable inputs such as working directory, wrapper file, memory configuration, and Gradle tasks (e.g., 'assembleDebug'). Set 'workingDirectory' and 'gradleWrapperFile' to the relevant locations for multi-module projects. The task will output build artifacts like APK files depending on specified tasks. Gradle must be available in the repository, typically via the gradlew script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Gradle@3\\n  inputs:\\n    workingDirectory: ''\\n    gradleWrapperFile: 'gradlew'\\n    gradleOptions: '-Xmx3072m'\\n    publishJUnitResults: false\\n    testResultsFiles: '**/TEST-*.xml'\\n    tasks: 'assembleDebug'\\n\n```\n\n----------------------------------------\n\nTITLE: Passing Variables Between Stages in YAML Pipeline\nDESCRIPTION: This YAML snippet shows how to pass variables between different stages using stageDependencies. A variable is set in stage A with isOutput=true and then accessed in stage B.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  jobs:\n  - job: A1\n    steps:\n     - bash: echo \"##vso[task.setvariable variable=myStageOutputVar;isOutput=true]this is a stage output var\"\n       name: printvar\n\n- stage: B\n  dependsOn: A\n  variables:\n    myVarfromStageA: $[ stageDependencies.A.A1.outputs['printvar.myStageOutputVar'] ]\n  jobs:\n  - job: B1\n    steps:\n    - script: echo $(myVarfromStageA)\n```\n\n----------------------------------------\n\nTITLE: Basic RunOnce Deployment Strategy Schema in YAML\nDESCRIPTION: Shows the schema for a runOnce deployment strategy with lifecycle hooks including preDeploy, deploy, routeTraffic, postRouteTraffic, and on failure/success. This is the simplest deployment strategy where all lifecycle hooks are executed once.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nstrategy: \n    runOnce:\n      preDeploy:        \n        pool: [ server | pool ] # See pool schema.        \n        steps:\n        - script: [ script | bash | pwsh | powershell | checkout | task | templateReference ]\n      deploy:          \n        pool: [ server | pool ] # See pool schema.        \n        steps:\n        ...\n      routeTraffic:         \n        pool: [ server | pool ]         \n        steps:\n        ...        \n      postRouteTraffic:          \n        pool: [ server | pool ]        \n        steps:\n        ...\n      on:\n        failure:         \n          pool: [ server | pool ]           \n          steps:\n          ...\n        success:          \n          pool: [ server | pool ]           \n          steps:\n          ...\n```\n\n----------------------------------------\n\nTITLE: Retrieving Work Items for a Date Range Within an Iteration\nDESCRIPTION: This query retrieves all work items for a specific iteration that were changed between the start and end dates of that iteration. It demonstrates how to filter using date fields from related entities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?\n  $filter=Iteration/IterationPath eq '{iteration path}' \n    and ChangedDate ge Iteration/StartDate \n    and ChangedDate le Iteration/EndDate\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Cloning SVN Repository with Standard Layout Using git-svn\nDESCRIPTION: Git command to clone a Subversion repository using the git-svn extension with standard trunk/branches/tags layout. This command uses the authors-transform.txt file to map SVN users to Git users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit svn clone [\"SVN repo URL\"] --prefix=svn/ --no-metadata --authors-file \"authors-transform.txt\" --stdlayout c:\\mytempdir\n```\n\n----------------------------------------\n\nTITLE: Defining Multi-Timezone Nightly Builds in YAML\nDESCRIPTION: This YAML snippet defines schedules for nightly builds in multiple time zones. It includes branch filters and uses cron syntax to specify different UTC-adjusted times for each schedule.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: '30 21 * * Sun-Thu'\n  displayName: M-F 3:00 AM (UTC + 5:30) India daily build\n  branches:\n    include:\n    - /features/india/*\n- cron: '0 8 * * Mon-Fri'\n  displayName: M-F 3:00 AM (UTC - 5) NC daily build\n  branches:\n    include:\n    - /features/nc/*\n```\n\n----------------------------------------\n\nTITLE: Configuring Workspace Repository in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to set up multiple checkout steps with different paths and designate one as the workspace repository. It includes an example of checking the working directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/multi-repo-checkout.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- checkout: git://project/first\n  path: repo/first-repo\n\n- checkout: git://project/second\n  path: repo/second-repo\n  workspaceRepo: true\n\n- pwsh: pwd\n# Expected output: $(Pipeline.Workspace)/repo/second-repo\n```\n\n----------------------------------------\n\nTITLE: Using Composer Install with a Custom Working Directory (Relative Path)\nDESCRIPTION: Shell command demonstrating how to execute `composer install` when the `composer.json` file resides in a subfolder (named `pkgs` in this example). The `--working-dir` argument directs Composer to operate within that specific subfolder relative to the current directory. The `--no-interaction` flag prevents interactive prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/php.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncomposer install --no-interaction --working-dir=pkgs\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkout Path in YAML Pipeline\nDESCRIPTION: Example showing how to specify a custom checkout path for a Git repository in an Azure DevOps YAML pipeline. The path is relative to $(Agent.BuildDirectory).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- checkout: self\n  lfs: true\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items with Specific Columns in OData\nDESCRIPTION: This query demonstrates how to specify columns in the $select clause to reduce the amount of data scanned and improve query performance. It selects only the WorkItemId, Title, and State columns for work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_19\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Restricting Step Execution to Containers in Azure Pipelines\nDESCRIPTION: A pipeline configuration that demonstrates running steps on both the agent host and inside a container. This enhances security by isolating certain steps from the agent host.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  containers:\n  - container: builder\n    image: mysecurebuildcontainer:latest\nsteps:\n- script: echo This step runs on the agent host, and it could use Docker commands to tear down or limit the container's network\n- script: echo This step runs inside the builder container\n  target: builder\n```\n\n----------------------------------------\n\nTITLE: Defining a Jenkins Build Resource in Azure DevOps\nDESCRIPTION: Shows how to define a builds resource that connects to a Jenkins server. This configuration enables triggering your pipeline when a Jenkins build completes and allows downloading artifacts from Jenkins builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  builds:\n  - build: Spaceworkz\n    type: Jenkins\n    connection: MyJenkinsServer \n    source: SpaceworkzProj   # name of the Jenkins source project\n    trigger: true\n```\n\n----------------------------------------\n\nTITLE: Specifying Container Startup Options in YAML Pipeline\nDESCRIPTION: This example demonstrates how to specify container options such as hostname and IP address to control container startup behavior.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/container-phases.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ncontainer:\n  image: ubuntu:18.04\n  options: --hostname container-test --ip 192.168.0.1\n\nsteps:\n- script: echo hello\n```\n\n----------------------------------------\n\nTITLE: Comprehensive PR Trigger Configuration in Azure Pipelines YAML\nDESCRIPTION: This example shows a complete PR trigger configuration with all available options including branch filters, path filters, auto-cancellation settings, and draft PR handling. It demonstrates the full schema for PR trigger configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  autoCancel: boolean # indicates whether additional pushes to a PR should cancel in-progress runs for the same PR. Defaults to true\n  branches:\n    include: [ string ] # branch names which will trigger a build\n    exclude: [ string ] # branch names which will not\n  paths:\n    include: [ string ] # file paths which must match to trigger a build\n    exclude: [ string ] # file paths which will not trigger a build\n  drafts: boolean # whether to build draft PRs, defaults to true\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Tests in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to set up a virtual environment, install dependencies, run tests, and clean up the environment as part of an Azure Pipelines build process. It includes steps for creating a virtual environment, activating it, installing requirements, running tests, and removing the environment before creating a zip file for deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\n- script: |\n    python -m venv .env\n    source .env/bin/activate\n    pip install setuptools\n    pip install -r requirements.txt\n\n  # The displayName shows in the pipeline UI when a build runs\n  displayName: 'Install dependencies on build agent'\n\n- script: |\n    # Put commands to run tests here\n    displayName: 'Run tests'\n\n- script: |\n    echo Deleting .env\n    deactivate\n    rm -rf .env\n  displayName: 'Remove .env before zip'\n```\n\n----------------------------------------\n\nTITLE: Removing Azure DevOps Pipeline Agent using Bash\nDESCRIPTION: Command to remove an Azure DevOps pipeline agent using the config.sh script. This should be executed after stopping and uninstalling the agent service. Requires user credentials for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/remove-and-reconfigure-unix.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./config.sh remove\n```\n\n----------------------------------------\n\nTITLE: Getting Access Token for REST API Calls in JavaScript\nDESCRIPTION: Code to initialize the SDK and retrieve an access token for making authenticated REST API calls to Azure DevOps services. Uses the azure-devops-extension-sdk package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/auth.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as SDK from \"azure-devops-extension-sdk\";\nimport { getAccessToken } from \"azure-devops-extension-sdk\";\n\nSDK.init();\n\ngetAccessToken().then((token) => {\n    // Format the auth header\n    const authHeader = `Bearer ${token}`;\n    \n    // Add token as an Authorization header to your request\n    console.log(authHeader);\n});\n```\n\n----------------------------------------\n\nTITLE: OData Query for User Stories Burndown by Area Path\nDESCRIPTION: OData query that returns historical data of User Stories filtered by area path and tag. Returns data grouped by date, state and area path with count and story point aggregations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\n        $apply=filter(WorkItemType eq 'User Story'\n            and StateCategory ne 'Completed'\n            and startswith(Area/AreaPath,'{areapath}')\n            and Tags/any(x:x/TagName eq '{tagname}')\n            and DateValue ge {startdate}\n            and DateValue le {enddate}\n        )\n        /groupby (\n            (DateValue,State,Area/AreaPath),\n            aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow for NuGet Package Deployment\nDESCRIPTION: GitHub workflow configuration that builds a .NET project, creates a NuGet package, and publishes it to Azure Artifacts. The workflow uses .NET Core SDK, runs on ubuntu-latest, and includes build, test, and publish steps. It requires Azure DevOps PAT for authentication and specific environment variables for configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/github-actions.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: Push a NuGet package to Azure Artifacts\n\non:\n  push:\n    branches:\n      - main\n\nenv:\n  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/myorg/nuget-artifact/_packaging/Fabrikam_Feed/nuget/v3/index.json    \n  BUILD_CONFIGURATION: 'Release'    # set this to the appropriate build configuration\n  DOTNET_VERSION: '6.x' \n \njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      # Checkout the repo\n      - uses: actions/checkout@v2\n      \n      # Setup .NET Core SDK\n      - name: Setup .NET Core\n        uses: actions/setup-dotnet@v1\n        with:\n          dotnet-version: ${{ env.DOTNET_VERSION }}\n          \n      # Run dotnet build and package\n      - name: dotnet build and test\n        run: |\n          dotnet restore\n          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'\n          dotnet test --configuration '${{ env.BUILD_CONFIGURATION }}'\n      \n  az-artifacts-build-and-deploy:\n    needs: build\n    runs-on: ubuntu-latest\n    steps:\n      # Checkout the repo\n      - uses: actions/checkout@v2\n      \n      # Setup .NET Core SDK\n      - name: Setup .NET Core\n        uses: actions/setup-dotnet@v1\n        with:\n          dotnet-version: ${{ env.DOTNET_VERSION }}\n          source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}\n        env:\n          NUGET_AUTH_TOKEN: ${{ secrets.AZURE_DEVOPS_TOKEN }} \n      \n      # Run dotnet build and package\n      - name: dotnet build and publish\n        run: |\n          dotnet restore\n          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'\n          dotnet pack -c '${{ env.BUILD_CONFIGURATION }}' --version-suffix $GITHUB_RUN_ID\n          \n      # Publish the package to Azure Artifacts\n      - name: 'dotnet publish'\n        run: dotnet nuget push --api-key AzureArtifacts bin/Release/*.nupkg\n```\n\n----------------------------------------\n\nTITLE: Stage Template with Multiple Parameters\nDESCRIPTION: Defines a reusable stage template with parameters for stage name, job name, VM image, and script path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n  - name: stageName\n    type: string\n  - name: jobName\n    type: string\n  - name: vmImage\n    type: string\n  - name: scriptPath\n    type: string\n\nstages:\n  - stage: ${{ parameters.stageName }}\n    jobs:\n      - job: ${{ parameters.jobName }}\n        pool:\n          vmImage: ${{ parameters.vmImage }}\n        steps:\n          - script: ./${{ parameters.scriptPath }}\n```\n\n----------------------------------------\n\nTITLE: Iterating Through Nested Objects in Azure DevOps Pipeline Parameters\nDESCRIPTION: Demonstrates nested iteration through complex objects using multiple 'each' keywords. This example processes a list of fruits with their colors, showing how to handle hierarchical data structures in pipeline parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: listOfFruits\n  type: object\n  default:\n  - fruitName: 'apple'\n    colors: ['red','green']\n  - fruitName: 'lemon'\n    colors: ['yellow']\nsteps:\n- ${{ each fruit in parameters.listOfFruits }} :\n  - ${{ each fruitColor in fruit.colors}} :\n    - script: echo ${{ fruit.fruitName}} ${{ fruitColor }}\n```\n\n----------------------------------------\n\nTITLE: Publishing iOS App to TestFlight Using AppStoreRelease Task in YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to use the AppStoreRelease task to publish an iOS app to the TestFlight track. It requires an Apple App Store service connection and specifies the app identifier and IPA path. The configuration skips waiting for processing and submission.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/xcode.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AppStoreRelease@1\n  displayName: 'Publish to the App Store TestFlight track'\n  inputs:\n    serviceEndpoint: 'My Apple App Store service connection' \n    appIdentifier: com.yourorganization.testapplication.etc\n    ipaPath: '$(build.artifactstagingdirectory)/**/*.ipa'\n    shouldSkipWaitingForProcessing: true\n    shouldSkipSubmission: true\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group using Azure CLI\nDESCRIPTION: Azure CLI command to create a new resource group named 'myapp-rg' in the 'eastus' location. This group is intended to contain the Azure Container Registry and other related resources for the tutorial.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group create --name myapp-rg --location eastus\n```\n\n----------------------------------------\n\nTITLE: Disabling CI Triggers in Azure DevOps YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to opt out of continuous integration triggers entirely by using the 'trigger: none' configuration in an Azure DevOps YAML pipeline. When this configuration is applied, changes pushed to the repository will not automatically trigger pipeline runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ci-triggers3.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# A pipeline with no CI trigger\ntrigger: none\n```\n\n----------------------------------------\n\nTITLE: Cross-Project Pipeline Resource Definition\nDESCRIPTION: Pipeline resource definition that references a pipeline from another project, including project name and branch specification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: SmartHotel\n    project: DevOpsProject\n    source: SmartHotel-CI\n    branch: releases/M142\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet Packages to NuGet.org using YAML Pipeline\nDESCRIPTION: YAML pipeline configuration for packing a .NET project and pushing the resulting NuGet package to NuGet.org. It uses the DotNetCoreCLI@2 task for packing and the NuGetCommand@2 task for pushing to an external feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/publish-public-registry.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DotNetCoreCLI@2\n  displayName: 'dotnet pack'\n  inputs:\n    command: pack\n- task: NuGetCommand@2\n  displayName: 'NuGet push'\n  inputs:\n    command: push\n    nuGetFeedType: external\n    publishFeedCredentials: <NAME_OF_YOUR_SERVICE_CONNECTION>\n```\n\n----------------------------------------\n\nTITLE: Setting Variables in Azure DevOps Pipelines with Bash\nDESCRIPTION: Sets task variables with different properties (standard, secret, and output) using Bash in Azure DevOps pipelines. Shows how to create variables that can be accessed in the current job or passed to future jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\n- bash: |\n    echo \"##vso[task.setvariable variable=sauce;]crushed tomatoes\"\n    echo \"##vso[task.setvariable variable=secretSauce;isSecret=true]crushed tomatoes with garlic\"\n    echo \"##vso[task.setvariable variable=outputSauce;isOutput=true]canned goods\"\n  name: SetVars\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory in Azure Cloud Shell using Bash\nDESCRIPTION: Changes the current working directory in the Azure Cloud Shell (Bash) to the specified project folder (`python-sample-vscode-flask-tutorial`). This step is required before running commands like `az webapp up` which often operate relative to the project root.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncd python-sample-vscode-flask-tutorial\n```\n\n----------------------------------------\n\nTITLE: Authenticating Cargo in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to use the CargoAuthenticate task in an Azure Pipeline to authenticate with a Cargo registry specified in the config.toml file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/cargo-pipelines.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n- task: CargoAuthenticate@0\n  displayName: 'Cargo Authenticate'\n  inputs:\n    configFile: '.cargo/config.toml'\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Deployment Pipeline Stages\nDESCRIPTION: YAML configuration for setting up deployment stages in a Kubernetes pipeline, including separate stages for PR and non-PR deployments, with Review App functionality for pull requests.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-kubernetes.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: Build\n  displayName: Build stage\n  jobs:  \n  - job: Build\n    displayName: Build\n    pool:\n      vmImage: $(vmImageName)\n    steps:\n    - task: Docker@2\n      displayName: Build and push an image to container registry\n      inputs:\n        command: buildAndPush\n        repository: $(imageRepository)\n        dockerfile: $(dockerfilePath)\n        containerRegistry: $(dockerRegistryServiceConnection)\n        tags: |\n          $(tag)\n          \n    - upload: manifests\n      artifact: manifests\n\n- stage: Deploy\n  displayName: Deploy stage\n  dependsOn: Build\n\n  jobs:\n  - deployment: Deploy\n    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))\n    displayName: Deploy\n    pool:\n      vmImage: $(vmImageName)\n    environment: 'dev.default'\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - task: KubernetesManifest@0\n            displayName: Create imagePullSecret\n            inputs:\n              action: createSecret\n              secretName: $(imagePullSecret)\n              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)\n              \n          - task: KubernetesManifest@0\n            displayName: Deploy to Kubernetes cluster\n            inputs:\n              action: deploy\n              manifests: |\n                $(Pipeline.Workspace)/manifests/deployment.yml\n                $(Pipeline.Workspace)/manifests/service.yml\n              imagePullSecrets: |\n                $(imagePullSecret)\n              containers: |\n                $(containerRegistry)/$(imageRepository):$(tag)\n\n  - deployment: DeployPR\n    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))\n    displayName: Deploy PR\n    pool:\n      vmImage: $(vmImageName)\n      \n    environment: 'dev.$(k8sNamespaceForPR)'\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - reviewApp: default\n\n          - task: Kubernetes@1\n            displayName: 'kubectl create namespace'\n            inputs:\n              command: apply\n              useConfigurationFile: true\n              inline: |\n                apiVersion: v1\n                kind: Namespace\n                metadata:\n                  name: $(k8sNamespaceForPR)\n              secretType: 'dockerRegistry'\n              containerRegistryType: 'Azure Container Registry'\n          \n          - task: KubernetesManifest@0\n            displayName: Create imagePullSecret\n            inputs:\n              action: createSecret\n              secretName: $(imagePullSecret)\n              namespace: $(k8sNamespaceForPR)\n              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)\n              \n          - task: KubernetesManifest@0\n            displayName: Deploy to the new namespace in the Kubernetes cluster\n            inputs:\n              action: deploy\n              namespace: $(k8sNamespaceForPR)\n              manifests: |\n                $(Pipeline.Workspace)/manifests/deployment.yml\n                $(Pipeline.Workspace)/manifests/service.yml\n              imagePullSecrets: |\n                $(imagePullSecret)\n              containers: |\n                $(containerRegistry)/$(imageRepository):$(tag)\n```\n\n----------------------------------------\n\nTITLE: Secret Variable Usage in YAML Pipeline\nDESCRIPTION: Example YAML configuration showing how to properly use secret variables in PowerShell and Bash scripts, demonstrating various variable access methods.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n GLOBAL_MYSECRET: $(mySecret) # this will not work because the secret variable needs to be mapped as env\n GLOBAL_MY_MAPPED_ENV_VAR: $(nonSecretVariable) # this works because it's not a secret.\n \nsteps:\n\n- powershell: |\n    Write-Host \"Using an input-macro works: $(mySecret)\"\n    Write-Host \"Using the env var directly does not work: $env:MYSECRET\"\n    Write-Host \"Using a global secret var mapped in the pipeline does not work either: $env:GLOBAL_MYSECRET\"\n    Write-Host \"Using a global non-secret var mapped in the pipeline works: $env:GLOBAL_MY_MAPPED_ENV_VAR\" \n    Write-Host \"Using the mapped env var for this task works and is recommended: $env:MY_MAPPED_ENV_VAR\"\n  env:\n    MY_MAPPED_ENV_VAR: $(mySecret) # the recommended way to map to an env variable\n\n- bash: |\n    echo \"Using an input-macro works: $(mySecret)\"\n    echo \"Using the env var directly does not work: $MYSECRET\"\n    echo \"Using a global secret var mapped in the pipeline does not work either: $GLOBAL_MYSECRET\"\n    echo \"Using a global non-secret var mapped in the pipeline works: $GLOBAL_MY_MAPPED_ENV_VAR\" \n    echo \"Using the mapped env var for this task works and is recommended: $MY_MAPPED_ENV_VAR\"\n  env:\n    MY_MAPPED_ENV_VAR: $(mySecret) # the recommended way to map to an env variable\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet Packages to External Feed\nDESCRIPTION: YAML configuration for creating and publishing NuGet packages to an external NuGet feed. Includes package versioning, authentication, and publishing steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# ...\n# do this near the end of your pipeline in most cases\n- script: dotnet pack /p:PackageVersion=$(version)  # define version variable elsewhere in your pipeline\n- task: NuGetAuthenticate@1\n  inputs:\n    nuGetServiceConnections: '<Name of the NuGet service connection>'\n- task: NuGetCommand@2\n  inputs:\n    command: push\n    nuGetFeedType: external\n    publishFeedCredentials: '<Name of the NuGet service connection>'\n    versioningScheme: byEnvVar\n    versionEnvVar: version\n```\n\n----------------------------------------\n\nTITLE: Setting Python Version with Azure Pipelines YAML\nDESCRIPTION: Demonstrates how to set a specific Python version (3.11) within an Azure Pipelines YAML build process using the UsePythonVersion@0 task. Useful when projects require a particular Python runtime. No extra dependencies are needed beyond Azure Pipelines and a hosted or self-hosted agent. Inputs include the desired version specification, and the output is an agent environment configured with that version for subsequent steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\\n- task: UsePythonVersion@0\\n  inputs:\\n    versionSpec: '3.11'\n```\n\n----------------------------------------\n\nTITLE: Using .NET Client Libraries with Azure DevOps\nDESCRIPTION: Shows how to use Azure DevOps .NET Client Libraries to authenticate and retrieve projects. This approach uses Microsoft.TeamFoundationServer.Client and Microsoft.Visual Studio.Services.Client packages for a more streamlined interaction with Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/rest/samples.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing Microsoft.TeamFoundation.Core.WebApi;\nusing Microsoft.VisualStudio.Services.Common;\n\n...\n\n//create uri and VssBasicCredential variables\nUri uri = new Uri(url);\nVssBasicCredential credentials = new VssBasicCredential(\"\", personalAccessToken);\n\nusing (ProjectHttpClient projectHttpClient = new ProjectHttpClient(uri, credentials))\n{\n    IEnumerable<TeamProjectReference> projects = projectHttpClient.GetProjects().Result;                    \n}\n```\n\n----------------------------------------\n\nTITLE: Publishing Portable PDBs to Azure Artifacts Symbol Server (YAML)\nDESCRIPTION: YAML snippet to configure the PublishSymbols task for publishing portable PDBs to Azure Artifacts symbol server with indexing disabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/symbols.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishSymbols@2\n  inputs:\n    SymbolsFolder: '$(Build.SourcesDirectory)'\n    SearchPattern: '**/bin/**/*.pdb'\n    IndexSources: false\n    PublishSymbols: true\n    SymbolServerType: 'TeamServices' \n    SymbolExpirationInDays: '36530'\n    IndexableFileFormats: 'Default'\n    DetailedLog: true\n    SymbolsArtifactName: 'Symbols_$(BuildConfiguration)'\n```\n\n----------------------------------------\n\nTITLE: Publishing Build Artifacts in YAML\nDESCRIPTION: This YAML snippet demonstrates how to publish build artifacts using a combination of PowerShell, CopyFiles, and PublishBuildArtifacts tasks. It copies files from the source directory to the artifact staging directory and then publishes them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/build-artifacts.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n- powershell: gci env:* | sort-object name | Format-Table -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt\n\n- task: CopyFiles@2\n  inputs:\n    sourceFolder: '$(Build.SourcesDirectory)'\n    contents: '**/$(BuildConfiguration)/**/?(*.exe|*.dll|*.pdb)'\n    targetFolder: '$(Build.ArtifactStagingDirectory)'\n- task: PublishBuildArtifacts@1\n  inputs:\n    pathToPublish: '$(Build.ArtifactStagingDirectory)'\n    artifactName: drop\n```\n\n----------------------------------------\n\nTITLE: Inspecting File Layout on Windows Agent in Azure DevOps\nDESCRIPTION: A YAML pipeline script for Windows that helps inspect the directory and file layout on an Azure DevOps hosted agent. This script searches for files in directories listed in the Path environment variable to help troubleshoot missing files during builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/troubleshooting.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# Script for Windows\npool: { vmImage: windows-2019 } # or whatever pool you use\nsteps:\n- checkout: none\n- powershell: |\n    $SEARCH_PATH=$Env:Path\n    Write-Host \"##[debug] Found directories\"\n    ForEach ($Dir in $SEARCH_PATH -split \";\") {\n      Write-Host \"$Dir\"\n    }\n    Write-Host \"\"\n    Write-Host \"\"\n    Write-Host \"##[debug] Found files\"\n    ForEach ($Dir in $SEARCH_PATH -split \";\") {\n      Get-ChildItem $Dir -File -ErrorAction Continue | ForEach-Object -Process {\n        Write-Host $_.FullName\n      }\n    }\n```\n\n----------------------------------------\n\nTITLE: Downloading Single Artifact with Patterns using YAML Task in Azure DevOps\nDESCRIPTION: This YAML snippet demonstrates how to use the DownloadPipelineArtifact@2 task to download specific files from an artifact. It downloads all .js files from the 'WebApp' artifact to a specified path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DownloadPipelineArtifact@2\n  inputs:\n    artifact: WebApp\n    patterns: '**/*.js'\n    path: $(Build.SourcesDirectory)/bin\n```\n\n----------------------------------------\n\nTITLE: Setting Output Variable in PowerShell\nDESCRIPTION: This snippet shows how to set an output variable named 'myStageVal' using a PowerShell script in an Azure DevOps pipeline task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n  - powershell: Write-Host \"##vso[task.setvariable variable=myStageVal;isOutput=true]this is a stage output variable\"\n    name: MyOutputVar\n```\n\n----------------------------------------\n\nTITLE: Filtering by Date and Time using ISO 8601 Format in WIQL\nDESCRIPTION: Shows how to filter work items using the locale-independent ISO 8601 DateTime format (YYYY-MM-DDTHH:mm:ss.sss). This format ensures consistency across different client locales. The example filters based on 'System.ChangedDate', 'Closed Date', and 'Resolved Date'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_2\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE \n   AND [System.ChangedDate] >= '2019-01-18T00:00:00.0000000'\n   AND ([Closed Date] < '2022-01-09T00:00:00.0000000'\n   OR [Resolved Date] >= '2019-01-18T00:00:00.0000000')  \n```\n\n----------------------------------------\n\nTITLE: Installing and Building Angular Applications in Azure Pipelines\nDESCRIPTION: Installs Angular CLI globally, installs project dependencies, and builds the Angular application with production settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_18\n\nLANGUAGE: YAML\nCODE:\n```\n- script: |\n    npm install -g @angular/cli\n    npm install\n    ng build --prod\n```\n\n----------------------------------------\n\nTITLE: Restoring NuGet Packages from External Organization Feed with YAML Pipeline\nDESCRIPTION: YAML pipeline configuration for authenticating and restoring NuGet packages from a feed in a different Azure DevOps organization. Uses a service connection to access the external feed and perform the restore operation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/packages/nuget-restore.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetToolInstaller@1\n  inputs:\n    versionSpec: '*'\n    checkLatest: true\n\n- task: NuGetAuthenticate@1\n  inputs:\n    nuGetServiceConnections: <SERVICE_CONNECTION_NAME>\n    \n- script: |\n      nuget.exe restore <SOLUTION_PATH>\n  displayName: Restore\n```\n\n----------------------------------------\n\nTITLE: Copying Work Item URL in Visual Studio\nDESCRIPTION: This snippet demonstrates how to copy the URL of a work item in Visual Studio by right-clicking the work item tab. The copied URL opens the work item in the web portal.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/email-work-items.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**From Visual Studio**, right-click the work item tab to copy the URL. The URL opens the work item in the web portal. \n\n![Screenshot that shows how to copy full path hyperlink for a work item from Visual Studio.](../backlogs/media/add-work-items-copy-url-for-a-work-item.png)  \n```\n\n----------------------------------------\n\nTITLE: Downloading Specific Files with DownloadPipelineArtifact - Azure Pipelines - YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the DownloadPipelineArtifact@2 task to download specific files from pipeline artifacts in Azure Pipelines. The 'patterns' input specifies file glob patterns (e.g., '**/*.zip') to control which files are downloaded. The task must be executed in a pipeline context, and the artifact must have been previously published. The output is the subset of files that match the pattern, placed in the default destination directory unless otherwise specified.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DownloadPipelineArtifact@2\n  inputs:\n    patterns: '**/*.zip'\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Extension Manifest for Chart Widget\nDESCRIPTION: JSON configuration for the extension manifest (vss-extension.json) that defines the extension properties, contributions, and file mappings for a chart widget in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-chart.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"manifestVersion\": 1,\n    \"id\": \"samples-charts\",\n    \"version\": \"1.0.0\",\n    \"name\": \"Interactive Charts in Azure DevOps Services\",\n    \"description\": \"Samples of interactive charts from the Chart SDK.\",\n    \"publisher\": \"Fabrikam\",\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services\"\n        }\n    ],\n    \"icons\": {\n        \"default\": \"img/logo.png\"\n    },\n    \"demands\": [\"contribution/ms.vss-dashboards-web.widget-sdk-version-2\", \"contribution/ms.vss-web.charts-service\"],\n    \"contributions\": [\n        {\n            \"id\": \"chart\",\n            \"type\": \"ms.vss-dashboards-web.widget\",\n            \"targets\": [\n                \"ms.vss-dashboards-web.widget-catalog\"\n            ],\n            \"properties\": {\n                \"name\": \"Sample Chart\",\n                \"description\": \"A simple chart widget with no configuration and hard-coded data.\",\n                \"catalogIconUrl\": \"img/CatalogIcon.png\",\n                \"uri\": \"chart.html\",\n                \"supportedSizes\": [\n                    {\n                        \"rowSpan\": 2,\n                        \"columnSpan\": 2\n                    }\n                ],\n                \"supportedScopes\": [\n                    \"project_team\"\n                ]\n            }\n        }\n    ],\n    \"files\": [\n        {\n            \"path\": \"chart.html\",\n            \"addressable\": true\n        },\n        {\n            \"path\": \"sdk/scripts/VSS.SDK.js\",\n            \"addressable\": true\n        },\n        {\n            \"path\": \"img\",\n            \"addressable\": true\n        },\n        {\n            \"path\": \"scripts\",\n            \"addressable\": true\n        }\n    ],\n    \"scopes\": [\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: RunOnce Deployment Strategy Configuration\nDESCRIPTION: Example showing a basic deployment job using the runOnce strategy to deploy a web app to the smarthotel-dev environment with simple echo command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\njobs:\n- deployment: DeployWeb\n  displayName: deploy Web App\n  pool:\n    vmImage: 'ubuntu-latest'\n  environment: 'smarthotel-dev'\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - checkout: self \n        - script: echo my first deployment\n```\n\n----------------------------------------\n\nTITLE: Basic VM Deployment Pipeline Configuration in YAML\nDESCRIPTION: YAML configuration for deploying to all VMs in an environment. Uses runOnce strategy to execute deployment steps on all registered VMs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-virtual-machines.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: \n- main\n\npool: \n   vmImage: ubuntu-latest\n\njobs:\n- deployment: VMDeploy\n  displayName: Deploy to VM\n  environment: \n   name: VMenv\n   resourceName: VMenv\n   resourceType: virtualMachine\n  strategy:\n     runOnce:\n        deploy:   \n          steps:\n            - script: echo \"Hello world\"\n```\n\n----------------------------------------\n\nTITLE: Referencing Secure Files in Xcode Build Task - YAML\nDESCRIPTION: This YAML snippet configures the Xcode@5 build task for manual signing using secure variables set by prior certificate and provisioning installation steps. It references $(APPLE_CERTIFICATE_SIGNING_IDENTITY) and $(APPLE_PROV_PROFILE_UUID), which are automatically populated when using Install Apple Certificate and Install Apple Provisioning Profile tasks. Input parameters must match the certificate and provisioning profile for successful signing and provisioning.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/mobile/app-signing.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Xcode@5\n  inputs:\n    signingOption: 'manual'\n    signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'\n    provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'\n```\n\n----------------------------------------\n\nTITLE: Automatically Including Steps with Templates in Azure Pipelines\nDESCRIPTION: A template that automatically includes steps for credential scanning and telemetry in every job. This enhances security by ensuring important security checks run consistently.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\nparameters:\n  jobs: []\n\njobs:\n- ${{ each job in parameters.jobs }}: \n  - ${{ each pair in job }}:  \n      ${{ if ne(pair.key, 'steps') }}:\n        ${{ pair.key }}: ${{ pair.value }}\n    steps:                            \n    - task: CredScan@1 \n    - ${{ job.steps }} \n    - task: PublishMyTelemetry@1 \n      condition: always()\n```\n\n----------------------------------------\n\nTITLE: Configure Microsoft-hosted Agent Pool in YAML Pipeline\nDESCRIPTION: YAML configuration to specify a Microsoft-hosted agent from the Azure Pipelines pool using vmImage parameter\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/pools-queues.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: ubuntu-latest # This is the default if you don't specify a pool or vmImage.\n```\n\n----------------------------------------\n\nTITLE: Amending the Last Git Commit via Command Line\nDESCRIPTION: This snippet shows how to amend the last Git commit using the command line interface. It uses the 'git commit' command with the '--amend' option and '-m' flag to specify a new commit message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/commits.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ngit commit --amend -m \"<new message>\"\n```\n\n----------------------------------------\n\nTITLE: Variable Expansion in YAML Pipeline Jobs\nDESCRIPTION: Demonstrates variable expansion timing in YAML pipelines. Variables are expanded once at the start of a job and again at the beginning of each step, showing how changes to variables during execution affect subsequent steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  variables:\n    a: 10\n  steps:\n  - bash: |\n      echo $(a)            # This will be 10\n      echo '##vso[task.setvariable variable=a]20'\n      echo $(a)            # This will also be 10, since the expansion of $(a) happens before the step\n  - bash: echo $(a)        # This will be 20, since the variables are expanded just before the step\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Signing Task in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to add the AndroidSigning@3 task to a pipeline for signing Android APK files. It includes setting up variables for keystore passwords and configuring the signing task with appropriate inputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/mobile/app-signing.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  keystore-password: <keystore file password>\n  key-alias: <key alias for the signing certificater>\n  key-password: <password for the key associated with the alias>\n\nsteps:\n- task: AndroidSigning@3\n  displayName: 'Signing and aligning APK file(s) **/*.apk'\n  inputs:\n    apkFiles: '**/*.apk'\n    apksign: true\n    apksignerKeystoreFile: <keystore-filename.keystore>\n    apksignerKeystorePassword: $(keystore-password)\n    apksignerKeystoreAlias: $(key-alias)\n    apksignerKeyPassword: $(key-password)\n```\n\n----------------------------------------\n\nTITLE: Pinning to a Specific Commit using SHA in Azure Pipelines\nDESCRIPTION: Demonstrates how to reference a template repository and pin it to a specific commit using the SHA value. This ensures consistency by using exactly the same template version across pipeline runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n    - repository: templates\n      type: git\n      name: Contoso/BuildTemplates\n      ref: 1234567890abcdef1234567890abcdef12345678\n```\n\n----------------------------------------\n\nTITLE: Configuring Production Deployment in YAML Pipeline for Azure DevOps\nDESCRIPTION: Sets up the production deployment stage, which runs only if the staging deployment succeeds and the source branch is either 'main' or 'release'. It includes a deployment job and a manual validation step for additional security.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/run-stages.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n- stage: DeployToProduction\n  displayName: 'Deploy to Production'\n  dependsOn: DeployToStaging\n  lockBehavior: sequential\n  condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/release'))\n  jobs:\n  - job: DeployProductionJob\n    displayName: 'Deploy to Production Job'\n    steps:\n    - script: |\n        echo \"Deploying to production...\"\n        # Add your deployment commands here\n      displayName: 'Run deployment commands'\n  - job: waitForValidation\n    displayName: Wait for external validation\n    pool: server\n    timeoutInMinutes: 4320 # job times out in 3 days\n    steps:\n    - task: ManualValidation@1\n      timeoutInMinutes: 1440 # task times out in 1 day\n      inputs:\n        notifyUsers: user@example.com\n        instructions: 'Please validate the build configuration and resume'\n        onTimeout: 'resume'\n```\n\n----------------------------------------\n\nTITLE: Running App Center Test Suite via Azure DevOps YAML Pipeline (YAML, App Center, Azure DevOps)\nDESCRIPTION: This YAML snippet integrates Visual Studio App Center Test runs within an Azure Pipeline using the AppCenterTest@1 task. It specifies the app binary to test, output directories, test framework (e.g., Appium), build directories, service endpoint, app identifier, and device list. An App Center account and a configured service endpoint are required. The output will contain test results from cloud-hosted Android devices; framework-specific files must be properly referenced.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_3\n\nLANGUAGE: yml\nCODE:\n```\n- task: AppCenterTest@1\\n  inputs:\\n    appFile: path/myapp.ipa\\n    artifactsDirectory: '$(Build.ArtifactStagingDirectory)/AppCenterTest'\\n    frameworkOption: 'appium'\\n    appiumBuildDirectory: test/upload\\n    serverEndpoint: 'My App Center service connection'\\n    appSlug: username/appIdentifier\\n    devices: 'devicelist'\\n\n```\n\n----------------------------------------\n\nTITLE: Downloading Pipeline Artifact using YAML in Azure DevOps\nDESCRIPTION: This YAML snippet shows how to download a pipeline artifact named 'WebApp' from the current pipeline run. It uses the download keyword, which is a shortcut for the Download Pipeline Artifact task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- download: current\n  artifact: WebApp\n```\n\n----------------------------------------\n\nTITLE: Installing Specific .NET SDK with UseDotNet Task in Azure DevOps Pipeline YAML - YAML\nDESCRIPTION: This snippet uses the UseDotNet@2 pipeline task to install a specific version of the .NET SDK, configuring task inputs such as 'version', enabling multi-level lookup, and including preview versions. Dependencies include the 'UseDotNet@2' task being available in your Azure DevOps environment, and the selected agent must support running the installation commands. Key parameters are the version of .NET SDK and booleans for additional behavior. The task will ensure that the specified SDK version is available for subsequent pipeline steps, including previews if requested.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\\n- task: UseDotNet@2\\n  displayName: 'Install .NET Core SDK'\\n  inputs:\\n    version: 8.x\\n    performMultiLevelLookup: true\\n    includePreviewVersions: true # Required for preview versions\\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Conditional Job Execution in Azure Pipelines\nDESCRIPTION: An example showing how to conditionally execute jobs based on branch name. This ensures sensitive code only builds in specific branches, enhancing security.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\njobs:\n- job: buildNormal\n  steps:\n  - script: echo Building the normal, unsensitive part\n- ${{ if eq(variables['Build.SourceBranchName'], 'refs/heads/main') }}:\n  - job: buildMainOnly\n    steps:\n    - script: echo Building the restricted part that only builds for main branch\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipelines for Docker Content Trust Signing - YAML\nDESCRIPTION: This YAML pipeline configures Azure Pipelines to sign Docker images using Docker Content Trust and subsequently push them to a container registry. It requires a secure file (the Docker trust private key) and sets up Docker login, key import, and Docker build/push steps with content trust enabled. Key dependencies include having a Notary-backed registry, a service connection with AcrImageSigner role, and properly configured secure files and secrets. Inputs and outputs are managed by variable references and secret variables (notably the repository passphrase for signing); the output is a signed image pushed to the registry. The pipeline assumes the Docker image repository and tag are specified by variables, and that the DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE is securely provided to avoid exposing sensitive information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/content-trust.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'Ubuntu 16.04'\n\nvariables:\n  system.debug: true\n  containerRegistryServiceConnection: serviceConnectionName\n  imageRepository: foobar/content-trust\n  tag: test\n \nsteps:\n- task: Docker@2\n  inputs:\n    command: login\n    containerRegistry: $(containerRegistryServiceConnection)\n \n- task: DownloadSecureFile@1\n  name: privateKey\n  inputs:\n    secureFile: cc8f3c6f998bee63fefaaabc5a2202eab06867b83f491813326481f56a95466f.key\n- script: |\n    mkdir -p $(DOCKER_CONFIG)/trust/private\n    cp $(privateKey.secureFilePath) $(DOCKER_CONFIG)/trust/private\n \n- task: Docker@2\n  inputs:\n    command: build\n    Dockerfile: '**/Dockerfile'\n    containerRegistry: $(containerRegistryServiceConnection)\n    repository: $(imageRepository)\n    tags: |\n      $(tag)\n    arguments: '--disable-content-trust=false'\n \n- task: Docker@2\n  inputs: \n    command: push\n    containerRegistry: $(containerRegistryServiceConnection)\n    repository: $(imageRepository)\n    tags: |\n      $(tag)\n    arguments: '--disable-content-trust=false'\n  env:\n    DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: $(DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE)\n```\n\n----------------------------------------\n\nTITLE: Publishing Local Git Repository to Azure Repos via Command Line\nDESCRIPTION: This snippet demonstrates how to publish an existing local Git repository to Azure Repos using Git commands. It involves adding a remote origin and pushing the main branch to the remote repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/creatingrepo.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n> git remote add origin <clone URL>\n> git status\n> git push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes to Remote Git Repository\nDESCRIPTION: This Git command pushes the committed changes from the local repository to the remote repository in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-new-repo.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit push\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Certificate in Azure DevOps Pipeline - YAML\nDESCRIPTION: This YAML snippet configures the InstallAppleCertificate@2 Azure DevOps pipeline task to securely install a certificate into the build agent's default keychain before running Xcode tasks. Required dependencies are an uploaded .p12 certificate, secure file and password variables, and the correct signing identity. It retains the certificate on the agent by setting deleteCert to false. All keychain-related variables must match the agent's environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/mobile/app-signing.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: InstallAppleCertificate@2\n  inputs:\n    certSecureFile: '<secure-file.p12>'\n    certPwd: '$(P12password)'\n    signingIdentity: <full-signing-identity>\n    keychain: default\n    keychainPassword: `$(KEYCHAIN_PWD)\n    deleteCert: false\n```\n\n----------------------------------------\n\nTITLE: Using Macro Syntax Variables with Different Script Tasks\nDESCRIPTION: This example shows how to use macro syntax variables $(projectName) consistently across different script types including Bash, PowerShell, and generic script tasks in Azure DevOps pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  - name: projectName\n    value: contoso\n\nsteps: \n- bash: echo $(projectName)\n- powershell: echo $(projectName)\n- script: echo $(projectName)\n```\n\n----------------------------------------\n\nTITLE: Collecting Code Coverage with DotNetCoreCLI Task in YAML Pipeline\nDESCRIPTION: Demonstrates how to collect code coverage metrics when running .NET Core tests in a YAML pipeline. The coverage data is automatically published to Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# ...\n# do this after other tasks such as building\n- task: DotNetCoreCLI@2\n  inputs:\n    command: test\n    projects: '**/*Tests/*.csproj'\n    arguments: '--configuration $(buildConfiguration) --collect \"Code Coverage\"'\n```\n\n----------------------------------------\n\nTITLE: Docker Buildx Caching in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to use Docker buildx with caching in Azure Pipelines. It sets up a Docker buildx builder and configures local caching for the build process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n  - task: Cache@2\n    displayName: Cache Docker\n    inputs:\n      key: 'docker | \"$(Agent.OS)\" | mydockerimage | ./Dockerfile'\n      path: $(Pipeline.Workspace)/docker_image_cache\n      restoreKeys: |\n        docker | \"$(Agent.OS)\" | mydockerimage\n\n  - script: |\n      docker buildx create --name builder --driver docker-container --use\n      docker buildx build \\\n        --cache-from=type=local,src=$(Pipeline.Workspace)/docker_image_cache \\\n        --cache-to=type=local,dest=$(Pipeline.Workspace)/docker_image_cache,mode=max \\\n        --file ./Dockerfile \\\n        --output=type=docker,name=mydockerimage \\\n        .\n    displayName: docker buildx\n    env:\n      DOCKER_BUILDKIT: 1\n```\n\n----------------------------------------\n\nTITLE: Running Pipeline Steps in an Activated Anaconda Environment (YAML)\nDESCRIPTION: Executes commands, specifically running 'pytest' tests and generating a JUnit XML report, within an activated Anaconda environment ('myEnvironment'). Because environment activation is process-specific, it must be done in each script task using platform-specific commands ('source activate' for Ubuntu/macOS, 'call activate' for Windows). Includes a subsequent 'PublishTestResults@2' task to publish the generated test results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/anaconda.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Ubuntu\n\n```yaml\n- bash: |\n    source activate myEnvironment\n    python -m pytest --junitxml=junit/unit-test.xml\n  displayName: pytest\n\n- task: PublishTestResults@2\n  inputs:\n    testResultsFiles: 'junit/*.xml'\n  condition: succeededOrFailed()\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# macOS\n\n```yaml\n- bash: |\n    source activate myEnvironment\n    pytest --junitxml=junit/unit-test.xml\n  displayName: pytest\n\n- task: PublishTestResults@2\n  inputs:\n    testResultsFiles: 'junit/*.xml'\n  condition: succeededOrFailed()\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# Windows\n\n```yaml\n- script: |\n    call activate myEnvironment\n    pytest --junitxml=junit/unit-test.xml\n  displayName: pytest\n\n- task: PublishTestResults@2\n  inputs:\n    testResultsFiles: 'junit/*.xml'\n  condition: succeededOrFailed()\n```\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Step Condition Example\nDESCRIPTION: This example shows how step-level conditions work. Step 2.3 will run if the source branch is 'main', even if the build is canceled during earlier steps, because its condition evaluates to true independently.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n  - script: echo step 2.1\n  - script: echo step 2.2; sleep 30\n  - script: echo step 2.3\n    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n```\n\n----------------------------------------\n\nTITLE: Accessing Output Variables in Same Job Using Bash\nDESCRIPTION: Sets and accesses two variables in Bash: a regular variable 'myJobVar' and an output variable 'myOutputJobVar'. Shows the different syntax required for each type of variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - bash: |\n     echo \"##vso[task.setvariable variable=myJobVar]this is the same job\"\n  - bash: |\n     echo \"##vso[task.setvariable variable=myOutputJobVar;isOutput=true]this is the same job too\"\n    name: setOutput\n  - bash: |\n     echo $(myJobVar) \n  - bash: |\n     echo $(setOutput.myOutputJobVar)\n```\n\n----------------------------------------\n\nTITLE: Copying and Publishing Build Artifacts in Azure Pipelines YAML\nDESCRIPTION: Uses the `CopyFiles@2` task to copy the generated IPA file (`**/*.ipa`) from the source directory to the standard artifact staging directory (`$(build.artifactStagingDirectory)`). Subsequently, the `PublishBuildArtifacts@1` task publishes the contents of this staging directory as a pipeline artifact named 'drop', making the IPA file accessible for download or use in later stages or pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/xcode.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: CopyFiles@2\n  inputs:\n    contents: '**/*.ipa'\n    targetFolder: '$(build.artifactStagingDirectory)'\n- task: PublishBuildArtifacts@1\n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n    ArtifactName: 'drop'\n    publishLocation: 'Container'\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Pipeline Using Azure CLI - azurecli-interactive\nDESCRIPTION: This Azure CLI command creates a new pipeline within Azure DevOps, setting the pipeline's name and linking it to an organization and project. Parameters <organization> and <project> must be replaced with the appropriate Azure DevOps organization and project names. The command auto-detects repository and branch information from the current directory's git configuration. Dependencies: Azure CLI and the azure-devops extension (installed automatically if missing).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz pipelines create --name \"First-Java.CI\" --org <organization> --project <project>\n```\n\n----------------------------------------\n\nTITLE: Restoring Dependencies in .NET Framework Projects Using NuGetCommand Task - YAML\nDESCRIPTION: This snippet shows how to restore NuGet package dependencies for .NET Framework projects within an Azure DevOps pipeline using the 'NuGetCommand@2' task. It targets all solution (.sln) files recursively and uses selected feeds for package resolution. Dependencies: NuGetCommand@2 task available in DevOps environment, and relevant NuGet service connection if authenticating to private feeds. Parameters: 'restoreSolution' (file glob), 'feedsToUse', and feed selection. Output: restored packages required by all discovered solutions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetCommand@2\\n  inputs:\\n    command: 'restore'\\n    restoreSolution: '**/*.sln'\\n    feedsToUse: 'select'\\n\n```\n\n----------------------------------------\n\nTITLE: PowerShell Script with Parameters for Azure DevOps Build Pipeline\nDESCRIPTION: A PowerShell script that accepts parameters for greeter and trigger, then outputs hello world messages. This script is designed to be used in an Azure DevOps build pipeline and demonstrates parameter usage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_14\n\nLANGUAGE: PowerShell\nCODE:\n```\nParam(\n[string]$greeter,\n[string]$trigger\n)\nWrite-Host \"Hello world\" from $greeter\nWrite-Host Trigger: $trigger\n```\n\n----------------------------------------\n\nTITLE: Customizing Service Startup Script for Azure DevOps Agent (bash)\nDESCRIPTION: This placeholder line in runsvc.sh is designed for administrators to insert custom setup commands for environment preparation as the service starts. No dependencies are required beyond the proper permissions to edit the runsvc.sh script. The main parameter is user-supplied shell instructions placed in this location; the line itself is a comment, producing no direct output. Its limitation is that it must be replaced to take effect.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# insert anything to setup env when running as a service\n```\n\n----------------------------------------\n\nTITLE: Installing Docker Desktop using PowerShell\nDESCRIPTION: PowerShell command using `Start-Process` to execute the downloaded Docker Desktop installer executable. The `-Wait` parameter ensures the script pauses until the installation completes, and the `install` argument likely triggers a non-interactive or default installation process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\nStart-Process 'Docker%20Desktop%20Installer.exe' -Wait install\n```\n\n----------------------------------------\n\nTITLE: Basic Pipeline Configuration for security-lib-ci in Azure DevOps\nDESCRIPTION: A simple YAML pipeline configuration for security-lib-ci that runs first in a pipeline trigger relationship.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/pipeline-triggers.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# security-lib-ci YAML pipeline\nsteps:\n- bash: echo \"The security-lib-ci pipeline runs first\"\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets with kubectl - Bash\nDESCRIPTION: This snippet uses kubectl to create a Kubernetes secret named 'azdevops' that stores the agent URL, token, and pool information as k/v pairs. It is intended for secure storage of sensitive information required by the Azure DevOps agent container in AKS. Prerequisites: Access to a configured AKS cluster, kubectl installed and configured. The command expects the user to replace the placeholder values for organization URL, personal access token (PAT), and pool name. The secret is later referenced by pod environment variables for agent configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic azdevops \\\n  --from-literal=AZP_URL=https://dev.azure.com/yourOrg \\\n  --from-literal=AZP_TOKEN=YourPAT \\\n  --from-literal=AZP_POOL=NameOfYourPool\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters in Template Files\nDESCRIPTION: Example of a template file that declares parameters with default values, which can be used in conditions to control job execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n# parameters.yml\nparameters:\n- name: doThing\n  default: true # value passed to the condition\n  type: boolean\n\njobs:\n  - job: B\n    steps:\n    - script: echo I did a thing\n    condition: ${{ eq(parameters.doThing, true) }}\n```\n\n----------------------------------------\n\nTITLE: Setting Variables with Expressions in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to set variables using expressions. The example shows a counter variable that starts at 100, increments by 1 for each run, and resets to 100 every day.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job:\n  variables:\n    a: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 100)]\n  steps:\n  - bash: echo $(a)\n```\n\n----------------------------------------\n\nTITLE: Setting Job-Scoped Variables in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to create a variable in a bash script and use it in subsequent steps. The variable is set using the task.setvariable logging command and accessed using the $(variable) syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# Create a variable\n- bash: |\n    echo \"##vso[task.setvariable variable=sauce]crushed tomatoes\" # remember to use double quotes\n\n# Use the variable\n# \"$(sauce)\" is replaced by the contents of the `sauce` variable by Azure Pipelines\n# before handing the body of the script to the shell.\n- bash: |\n    echo my pipeline variable is $(sauce)\n```\n\n----------------------------------------\n\nTITLE: Configuring Settable Variables for Steps in YAML\nDESCRIPTION: Example showing how to define settableVariables within a step in YAML, restricting which variables can be set during execution. The first example prevents any variables from being set, while the second example allows only specific variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: echo This is a step\n  target:\n    settableVariables: none\n```\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n  - bash: |\n      echo \"##vso[task.setvariable variable=Sauce;]crushed tomatoes\"\n      echo \"##vso[task.setvariable variable=secretSauce;]crushed tomatoes with garlic\"\n    target:\n     settableVariables:\n      - sauce\n    name: SetVars\n  - bash: \n      echo \"Sauce is $(sauce)\"\n      echo \"secretSauce is $(secretSauce)\"\n    name: OutputVars\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Variable Scopes in YAML Pipeline\nDESCRIPTION: This snippet shows how to set variables at different scopes (global, job) in a YAML pipeline. It includes two jobs that use both global and job-specific variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n  global_variable: value    # this is available to all jobs\n\njobs:\n- job: job1\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    job_variable1: value1    # this is only available in job1\n  steps:\n  - bash: echo $(global_variable)\n  - bash: echo $(job_variable1)\n  - bash: echo $JOB_VARIABLE1 # variables are available in the script environment too\n\n- job: job2\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    job_variable2: value2    # this is only available in job2\n  steps:\n  - bash: echo $(global_variable)\n  - bash: echo $(job_variable2)\n  - bash: echo $GLOBAL_VARIABLE\n```\n\n----------------------------------------\n\nTITLE: Mapping Variables Between Jobs in Azure DevOps Pipelines\nDESCRIPTION: Basic example showing how to reference an output variable from a dependent job. Job B depends on Job A and accesses an output variable set in Job A using the dependencies syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n# Map the variable from the job.\n- job: B\n  dependsOn: A\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    myVarFromDeploymentJob: $[ dependencies.A.outputs['A.setvarStep.myOutputVar'] ]\n  steps:\n  - script: \"echo $(myVarFromDeploymentJob)\"\n    name: echovar\n```\n\n----------------------------------------\n\nTITLE: YAML Pipeline Configuration for Building a .NET Web Application\nDESCRIPTION: Azure DevOps YAML pipeline that defines triggers, variables, and a Build stage for compiling and publishing a .NET web application. Includes tasks for npm installation, Sass compilation, and .NET build and publish operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- '*'\n\nvariables:\n  buildConfiguration: 'Release'\n  releaseBranchName: 'release'\n\nstages:\n- stage: 'Build'\n  displayName: 'Build the web application'\n  jobs: \n  - job: 'Build'\n    displayName: 'Build job'\n    pool:\n      vmImage: 'ubuntu-20.04'\n      demands:\n      - npm\n\n    variables:\n      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'\n      dotnetSdkVersion: '6.x'\n\n    steps:\n    - task: UseDotNet@2\n      displayName: 'Use .NET SDK $(dotnetSdkVersion)'\n      inputs:\n        version: '$(dotnetSdkVersion)'\n\n    - task: Npm@1\n      displayName: 'Run npm install'\n      inputs:\n        verbose: false\n\n    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'\n      displayName: 'Compile Sass assets'\n\n    - task: gulp@1\n      displayName: 'Run gulp tasks'\n\n    - script: 'echo \"$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)\" > buildinfo.txt'\n      displayName: 'Write build info'\n      workingDirectory: $(wwwrootDir)\n\n    - task: DotNetCoreCLI@2\n      displayName: 'Restore project dependencies'\n      inputs:\n        command: 'restore'\n        projects: '**/*.csproj'\n\n    - task: DotNetCoreCLI@2\n      displayName: 'Build the project - $(buildConfiguration)'\n      inputs:\n        command: 'build'\n        arguments: '--no-restore --configuration $(buildConfiguration)'\n        projects: '**/*.csproj'\n\n    - task: DotNetCoreCLI@2\n      displayName: 'Publish the project - $(buildConfiguration)'\n      inputs:\n        command: 'publish'\n        projects: '**/*.csproj'\n        publishWebProjects: false\n        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'\n        zipAfterPublish: true\n\n    - publish: '$(Build.ArtifactStagingDirectory)'\n      artifact: drop\n```\n\n----------------------------------------\n\nTITLE: Counting Work Items by Project Using OData Analytics in Azure DevOps\nDESCRIPTION: This example query counts work items for each project in an organization. It demonstrates the use of groupby and aggregate functions to summarize data across projects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/_odata/v4.0-preview/WorkItems?$apply=groupby((Project/ProjectName), aggregate($count as Count))\n```\n\n----------------------------------------\n\nTITLE: Conditionally Running Steps with If-ElseIf-Else in Azure DevOps Pipeline\nDESCRIPTION: Demonstrates conditional step execution using if-elseif-else construct. The pipeline will execute different echo commands based on the value of the 'foo' variable, showcasing branching logic in pipeline definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  - name: foo\n    value: contoso # triggers elseif condition\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- script: echo \"start\"\n- ${{ if eq(variables.foo, 'adaptum') }}:\n  - script: echo \"this is adaptum\"\n- ${{ elseif eq(variables.foo, 'contoso') }}: # true\n  - script: echo \"this is contoso\"\n- ${{ else }}:\n  - script: echo \"the value is not adaptum or contoso\"\n```\n\n----------------------------------------\n\nTITLE: Querying Area Path Properties in Azure DevOps Analytics\nDESCRIPTION: OData query that returns the AreaSK property for a specific Area Path. This query uses the $filter operator to match a specific AreaPath value and $select to return only the AreaSK property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/Areas?$filter=AreaPath eq 'Fabrikam Fiber\\Service Delivery\\Internet' &$select=AreaSK\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkout Options in YAML Pipeline\nDESCRIPTION: YAML configuration for the checkout step in Azure Pipelines, demonstrating various options including clean checkout, fetch depth, LFS files, submodules, custom path, and credential persistence.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/source-options.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self  # self represents the repo where the initial Pipelines YAML file was found\n  clean: boolean  # whether to fetch clean each time\n  fetchDepth: number  # the depth of commits to ask Git to fetch\n  lfs: boolean  # whether to download Git-LFS files\n  submodules: true | recursive  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules\n  path: string  # path to check out source code, relative to the agent's build directory (e.g. \\_work\\1)\n  persistCredentials: boolean  # set to 'true' to leave the OAuth token in the Git config after the initial fetch\n```\n\n----------------------------------------\n\nTITLE: Setting a Variable using Logging Command in PowerShell\nDESCRIPTION: Shows how to use a logging command to set a variable named 'testvar' with the value 'testvalue' in a PowerShell script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nWrite-Host \"##vso[task.setvariable variable=testvar;]testvalue\"\n```\n\n----------------------------------------\n\nTITLE: Publishing npm Packages to External Organization Feed (YAML)\nDESCRIPTION: YAML pipeline configuration for publishing npm packages to a feed in another Azure DevOps organization. It includes steps for setting up Node.js, authenticating with Azure Artifacts using a custom service connection, and running the npm publish command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/npm.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n- task: NodeTool@0\n  inputs:\n    checkLatest: true\n\n- task: npmAuthenticate@0\n  displayName: 'Authenticate to Azure Artifacts feed'\n  inputs:\n    workingFile: .npmrc\n    customEndpoint: <SERVICE_CONNECTION_NAME>\n    \n- script: |\n   npm publish  \n  displayName: Publish\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Composer Caching in Azure Pipelines\nDESCRIPTION: YAML configuration for caching PHP Composer packages using the Cache@2 task. Sets up caching based on composer.lock and configures COMPOSER_CACHE_DIR environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  COMPOSER_CACHE_DIR: $(Pipeline.Workspace)/.composer\n\nsteps:\n- task: Cache@2\n  inputs:\n    key: 'composer | \"$(Agent.OS)\" | composer.lock'\n    restoreKeys: |\n      composer | \"$(Agent.OS)\"\n      composer\n    path: $(COMPOSER_CACHE_DIR)\n  displayName: Cache composer\n\n- script: composer install\n```\n\n----------------------------------------\n\nTITLE: Canary Deployment Strategy Schema in YAML\nDESCRIPTION: Illustrates the schema for a canary deployment strategy that helps mitigate risks by rolling out changes to a small subset of servers first, then gradually increasing as confidence grows.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nstrategy: \n    canary:\n      increments: [ number ]\n      preDeploy:        \n        pool: [ server | pool ] # See pool schema.        \n        steps:\n        - script: [ script | bash | pwsh | powershell | checkout | task | templateReference ]\n      deploy:          \n        pool: [ server | pool ] # See pool schema.        \n        steps:\n        ...\n      routeTraffic:         \n        pool: [ server | pool ]         \n        steps:\n        ...        \n      postRouteTraffic:          \n        pool: [ server | pool ]        \n        steps:\n        ...\n      on:\n        failure:         \n          pool: [ server | pool ]           \n          steps:\n          ...\n        success:          \n          pool: [ server | pool ]           \n          steps:\n          ...\n```\n\n----------------------------------------\n\nTITLE: Rolling Deployment Strategy Schema in YAML\nDESCRIPTION: Defines the schema for a rolling deployment strategy that replaces instances of the previous version with the new version on a fixed set of VMs in each iteration. The maxParallel property controls the batch size.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nstrategy:\n  rolling:\n    maxParallel: [ number or percentage as x% ]\n    preDeploy:        \n      steps:\n      - script: [ script | bash | pwsh | powershell | checkout | task | templateReference ]\n    deploy:          \n      steps:\n      ...\n    routeTraffic:         \n      steps:\n      ...        \n    postRouteTraffic:          \n      steps:\n      ...\n    on:\n      failure:         \n        steps:\n        ...\n      success:          \n        steps:\n        ...\n```\n\n----------------------------------------\n\nTITLE: Using Join Function with Parameters in Azure DevOps Pipelines YAML\nDESCRIPTION: Shows how to use the join function to concatenate array elements with a specified separator. In this example, array items from a parameter are joined with semicolons.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: myArray\n  type: object\n  default:\n    - FOO\n    - BAR\n    - ZOO\n\nvariables:\n   A: ${{ join(';',parameters.myArray) }}\n\nsteps:\n  - script: echo $A # outputs FOO;BAR;ZOO\n```\n\n----------------------------------------\n\nTITLE: Targeting an Environment from a Deployment Job in Azure Pipelines YAML\nDESCRIPTION: YAML configuration that demonstrates how to target an entire environment group of resources from a deployment job. The pipeline runs on a specific VM resource within the specified environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n- stage: deploy\n  jobs:\n  - deployment: DeployWeb\n    displayName: deploy Web App\n    pool:\n      vmImage: 'Ubuntu-latest'\n    # creates an environment if it doesn't exist\n    environment: \n      name: 'smarthotel-dev'\n      resourceName: myVM\n      resourceType: virtualMachine\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - script: echo Hello world\n```\n\n----------------------------------------\n\nTITLE: Conditionally Installing Azure DevOps CLI Extension Across Multiple Agent Types (PowerShell)\nDESCRIPTION: This pipeline shows how to conditionally install the Azure DevOps CLI extension only on agent types that need it. It uses a matrix strategy to run on multiple agent types and conditionally installs the extension on Windows images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\n# Run on multiple Microsoft-hosted agent images\nstrategy:\n  matrix:\n    linux22:\n      imageName: \"ubuntu-22.04\"\n    linux20:\n      imageName: \"ubuntu-20.04\"\n    mac13:\n      imageName: \"macos-13\"\n    mac12:\n      imageName: \"macos-12\"\n    mac11:\n      imageName: \"macos-11\"\n    windows2019:\n      imageName: \"windows-2019\"\n    windows2022:\n      imageName: \"windows-2022\"\n  maxParallel: 3\n\npool:\n  vmImage: $(imageName)\n\nsteps:\n- pwsh: az --version\n  displayName: 'Show Azure CLI version'\n\n# Install Azure DevOps CLI extension only on macOS images\n- pwsh: az extension add -n azure-devops\n  condition: contains(variables.imageName, 'windows')\n  displayName: 'Install Azure DevOps extension'\n\n# Azure DevOps CLI extension call that does not require login or credentials\n# since it configures the local environment\n- pwsh: az devops configure --defaults organization='$(System.TeamFoundationCollectionUri)' project='$(System.TeamProject)' --use-git-aliases true\n  displayName: 'Set default Azure DevOps organization and project'\n\n# Call that does require credentials, use the System.AccessToken PAT\n# and assign to AZURE_DEVOPS_EXT_PAT which is known to Azure DevOps CLI extension\n- pwsh: |\n    az pipelines build list\n    git pr list\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n  displayName: 'Show build list and PRs'\n```\n\n----------------------------------------\n\nTITLE: Running Gulp in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to run Gulp in an Azure Pipelines YAML file. It includes an optional npmAuthenticate task for scenarios requiring authentication with an npm registry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_21\n\nLANGUAGE: YAML\nCODE:\n```\n- script: gulp                       # include any additional options that are needed\n```\n\nLANGUAGE: YAML\nCODE:\n```\n- task: npmAuthenticate@0\n  inputs:\n    customEndpoint: <Name of npm service connection>\n\n- script: gulp                       # include any additional options that are needed\n```\n\n----------------------------------------\n\nTITLE: Triggering Agent Updates via Azure DevOps REST API - HTTP\nDESCRIPTION: Demonstrates how to send an HTTP POST request to the Azure DevOps REST API endpoint to trigger updates for a specific agent in an agent pool. No request body is required; essential URI parameters include organization, poolId, agentId (optional for updating specific agent or all agents), and API version (should be set to '6.0'). This is intended for Azure DevOps Services, and requires appropriate authentication and permissions to execute.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/agents.md#2025-04-22_snippet_7\n\nLANGUAGE: HTTP\nCODE:\n```\nPOST https://dev.azure.com/{organization}/_apis/distributedtask/pools/{poolId}/messages?agentId={agentId}&api-version=6.0\n```\n\n----------------------------------------\n\nTITLE: Conditional Stage Execution Based on Cron Schedule in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to conditionally run a stage based on the cron schedule that triggered the pipeline. It uses the Build.CronSchedule.DisplayName variable to check if the pipeline was triggered by a specific named schedule.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- stage: stage1\n  # Run this stage only when the pipeline is triggered by the \n  # \"Daily midnight build\" cron schedule\n  condition: eq(variables['Build.CronSchedule.DisplayName'], 'Daily midnight build')\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies in Virtual Environment\nDESCRIPTION: Creates a Python virtual environment, activates it, and installs the dependencies specified in requirements.txt. This script runs in the directory specified by the projectRoot variable to set up the Python application environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\n      - script: |\n           python -m venv antenv\n           source antenv/bin/activate\n           python -m pip install --upgrade pip\n           pip install setuptools\n           pip install  -r ./requirements.txt\n         workingDirectory: $(projectRoot)\n         displayName: \"Install requirements\"\n```\n\n----------------------------------------\n\nTITLE: Publishing APK Artifacts with Copy and Publish Tasks (YAML, Azure DevOps)\nDESCRIPTION: This YAML snippet persists build outputs (APK files) as pipeline artifacts by first copying matching APK files to the build's artifact staging directory, then publishing that directory as a named artifact. These tasks (CopyFiles@2, PublishBuildArtifacts@1) are sequential in the pipeline, aiding download/upload across subsequent pipeline stages. Folder paths must be accessible to the build agent during task execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: CopyFiles@2\\n  inputs:\\n    contents: '**/*.apk'\\n    targetFolder: '$(build.artifactStagingDirectory)'\\n- task: PublishBuildArtifacts@1\\n  inputs:\\n    pathToPublish: $(Build.ArtifactStagingDirectory)\\n    artifactName: MyBuildOutputs\\n\n```\n\n----------------------------------------\n\nTITLE: Deprovisioning and Generalizing a Linux VM using waagent\nDESCRIPTION: Uses the Azure Linux Agent (`waagent`) command with `sudo` privileges to deprovision a Linux VM. The `-deprovision+user` flag removes unique machine-specific information and the user account, while `-force` suppresses confirmation prompts. This prepares the Linux VM for image capture.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nsudo waagent -deprovision+user -force\n```\n\n----------------------------------------\n\nTITLE: Setting Pipeline Variables with PowerShell Logging Commands\nDESCRIPTION: Shows how to set a new pipeline variable 'myVar' with the value 'myValue' using PowerShell and logging commands. This creates a variable that will be available to subsequent pipeline steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runs.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nWrite-Host \"##vso[task.setVariable variable=myVar]myValue\"\n```\n\n----------------------------------------\n\nTITLE: Projects Query Response in Azure DevOps Services\nDESCRIPTION: This snippet shows the JSON response from querying project names in Azure DevOps Services. It lists all project names in the organization with their OData context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_10\n\nLANGUAGE: OData\nCODE:\n```\n{\n@odata.context\t\"https://analytics.dev.azure.com/fabrikam/_odata/v4.0-preview/$metadata#Projects(ProjectName)\",\n\n\"value\": [\n   {\n      \"ProjectName\": \"Basic Fabrikam\"\n   },\n   {\n      \"ProjectName\": \"Fabrikam Fiber\"\n   },\n   {\n      \"ProjectName\": \"MyFirstProject\"\n   },\n   {\n      \"ProjectName\": \"Fabrikam Test\"\n   },\n   {\n      \"ProjectName\": \"MyPublicProject\"\n   }\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Variable Context and Expression Types in Azure Pipelines\nDESCRIPTION: This example demonstrates the difference between static variables, compile-time expressions, and runtime expressions in Azure Pipelines, showing how to access different values in pipeline scripts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n  staticVar: 'my value' # static variable\n  compileVar: ${{ variables.staticVar }} # compile time expression\n  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')] # runtime expression\n\nsteps:\n  - script: |\n      echo ${{variables.staticVar}} # outputs my value\n      echo $(compileVar) # outputs my value\n      echo $(isMain) # outputs True\n```\n\n----------------------------------------\n\nTITLE: Basic Azure DevOps YAML Pipeline Structure\nDESCRIPTION: Example of a starter YAML pipeline configuration demonstrating basic structure and syntax for Azure Pipelines. This is referenced in the guide as a starting point for pipeline migration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/from-classic-pipelines.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Starter pipeline\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n- script: echo Hello, world!\n  displayName: 'Run a one-line script'\n\n- script: |\n    echo Add other tasks to build, test, and deploy your project.\n    echo See https://aka.ms/yaml\n  displayName: 'Run a multi-line script'\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Deployment with Environment Resource\nDESCRIPTION: Demonstrates deployment to a specific Kubernetes namespace within an environment using KubernetesManifest task and runOnce strategy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\njobs:\n- deployment: DeployWeb\n  displayName: deploy Web App\n  pool:\n    vmImage: 'ubuntu-latest'\n  environment: 'smarthotel-dev.bookings'\n  strategy: \n    runOnce:\n      deploy:\n        steps:\n          - task: KubernetesManifest@0\n            displayName: Deploy to Kubernetes cluster\n            inputs:\n              action: deploy\n              namespace: $(k8sNamespace)\n              manifests: |\n                $(System.ArtifactsDirectory)/manifests/*\n              imagePullSecrets: |\n                $(imagePullSecret)\n              containers: |\n                $(containerRegistry)/$(imageRepository):$(tag)\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Script and Publishing Results in YAML Pipeline\nDESCRIPTION: Shows how to run .NET Core tests with the dotnet CLI and then publish the test results using the PublishTestResults task. This approach offers more control over the test execution process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# ...\n# do this after your tests have run\n- script: dotnet test <test-project> --logger trx\n- task: PublishTestResults@2\n  condition: succeededOrFailed()\n  inputs:\n    testRunner: VSTest\n    testResultsFiles: '**/*.trx'\n```\n\n----------------------------------------\n\nTITLE: Path and Branch Trigger Configuration in Azure DevOps YAML Pipelines\nDESCRIPTION: Combined path and branch filter configuration for CI triggers. This example triggers on specific branches when changes occur in certain file paths, excluding specific files from triggering the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ci-triggers1.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# specific path build\ntrigger:\n  branches:\n    include:\n    - main\n    - releases/*\n  paths:\n    include:\n    - docs\n    exclude:\n    - docs/README.md\n```\n\n----------------------------------------\n\nTITLE: Deployment Job Output Variables in Azure DevOps YAML Pipeline\nDESCRIPTION: Example demonstrating how to use output variables from a deployment job in a different stage. The test job runs conditionally based on a variable set in the build deployment job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: build\n  jobs:\n  - deployment: build_job\n    environment:\n      name: Production\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - task: PowerShell@2\n            name: setRunTests\n            inputs:\n              targetType: inline\n              pwsh: true\n              script: |\n                $runTests = \"true\"\n                echo \"setting runTests: $runTests\"\n                echo \"##vso[task.setvariable variable=runTests;isOutput=true]$runTests\"\n\n- stage: test\n  dependsOn:\n  - 'build'\n  condition: eq(dependencies.build.outputs['build_job.build_job.setRunTests.runTests'], 'true')\n  jobs:\n    - job: A\n      steps:\n        - script: echo Hello from job A\n```\n\n----------------------------------------\n\nTITLE: Publishing Multiple Artifacts in YAML\nDESCRIPTION: This YAML snippet shows how to publish multiple artifacts in a single pipeline. It uses two separate PublishBuildArtifacts tasks to create two different artifacts named 'drop1' and 'drop2'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/build-artifacts.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n- powershell: gci env:* | sort-object name | Format-Table -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt\n\n- task: CopyFiles@2\n  inputs:\n    sourceFolder: '$(Build.SourcesDirectory)'\n    contents: '**/$(BuildConfiguration)/**/?(*.exe|*.dll|*.pdb)'\n    targetFolder: '$(Build.ArtifactStagingDirectory)'\n- task: PublishBuildArtifacts@1\n  inputs:\n    pathToPublish: '$(Build.ArtifactStagingDirectory)'\n    artifactName: drop1\n- task: PublishBuildArtifacts@1\n  inputs:\n    pathToPublish: '$(Build.ArtifactStagingDirectory)'\n    artifactName: drop2\n```\n\n----------------------------------------\n\nTITLE: Building Node.js Project using Azure Pipelines YAML - YAML\nDESCRIPTION: This YAML pipeline builds a Node.js/JavaScript project on Azure Pipelines using npm for install, build, and test. It utilizes the UseNode@1 task to set up Node.js 16.x, followed by build/test scripts. Artifacts are archived using ArchiveFiles@2 and uploaded for release. Prerequisites include an Azure DevOps project and repository with Node.js project sources. Inputs expected are the main branch trigger and working directory. Output is a ZIP artifact available in the build staging directory for later deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/deploy-linux-vm.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n    trigger:\n    - main\n    \n    pool:\n      vmImage: ubuntu-latest\n    \n    stages:\n    - stage: Build\n      displayName: Build stage\n      jobs:  \n      - job: Build\n        displayName: Build\n        steps:\n        - task: UseNode@1\n          inputs:\n            version: '16.x'\n          displayName: 'Install Node.js'\n        - script: |\n            npm install\n            npm run build --if-present\n            npm run test --if-present\n          displayName: 'npm install, build and test'\n        - task: ArchiveFiles@2\n          displayName: 'Archive files'\n          inputs:\n            rootFolderOrFile: '$(System.DefaultWorkingDirectory)'\n            includeRootFolder: false\n            archiveType: zip\n            archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n            replaceExistingArchive: true\n        - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n          artifact: drop\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet Packages to External Feed with Classic Pipeline\nDESCRIPTION: Command line script used in a Classic pipeline task to push NuGet packages to an Azure Artifacts feed in a different organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/nuget.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnuget.exe push -Source \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" -ApiKey az $(Build.ArtifactStagingDirectory)\\*.nupkg\n```\n\n----------------------------------------\n\nTITLE: Implementing Type-Safe Parameters in Azure Pipeline Templates\nDESCRIPTION: A template that restricts the available pipeline pool options by providing an enumeration of specific choices. This enhances security by limiting the possible values for parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\n# template.yml\nparameters:\n- name: userpool\n  type: string\n  default: Azure Pipelines\n  values:\n  - Azure Pipelines\n  - private-pool-1\n  - private-pool-2\n\npool: ${{ parameters.userpool }}\nsteps:\n- script: # ... removed for clarity\n```\n\n----------------------------------------\n\nTITLE: Deployment Slot Configuration\nDESCRIPTION: YAML configuration for deploying to staging slot and swapping to production in Azure Web App for Containers. Demonstrates slot deployment and swap operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/deploy-docker-webapp.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureWebAppContainer@1\n  inputs:\n    azureSubscription: '<Azure service connection>'\n    appName: '<Name of the web app>'\n    containers: $(containerRegistry)/$(imageRepository):$(tag)\n    deployToSlotOrASE: true\n    resourceGroupName: '<Name of the resource group>'\n    slotName: staging\n\n- task: AzureAppServiceManage@0\n  inputs:\n    azureSubscription: '<Azure service connection>'\n    WebAppName: '<name of web app>'\n    ResourceGroupName: '<name of resource group>'\n    SourceSlot: staging\n    SwapWithProduction: true\n```\n\n----------------------------------------\n\nTITLE: Mounting Host Path to Outer Docker Container - Bash\nDESCRIPTION: Shows how to mount a host directory into an outer Docker container using the -v parameter. Requires Docker Engine and the specified host path to exist; the containerized path will mirror files from that directory. Useful for persisting files or exposing persistent resources to the running container. Replace <path-on-host> and <path-on-outer-container> with desired paths.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ndocker run ... -v \"<path-on-host>:<path-on-outer-container>\" ...\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Documents from Collection\nDESCRIPTION: Shows how to fetch all documents from a specified collection using the data service. Limited to 100,000 documents and returns a 404 if the collection doesn't exist.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n    // Get data service\n    SDK.getService(SDK.getContributionId()).then(function(dataService) {\n        // Get all document under the collection\n        dataService.getDocuments(\"MyCollection\").then(function(docs) {\n            console.log(\"There are \" + docs.length + \" in the collection.\");\n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: Secure YAML Pipeline with Explicit Submodule Checkout\nDESCRIPTION: This updated YAML pipeline configuration demonstrates proper security practices for repository access. It adds an explicit checkout step for the FabrikamFiberLib submodule before checking out its parent repository, ensuring it works with restricted permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/secure-access-to-repos.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nresources:\n  repositories:\n    - repository: SpaceGameWebReact\n      name: SpaceGameWeb/SpaceGameWebReact\n      type: git\n    - repository: FabrikamFiber\n      name: FabrikamFiber/FabrikamFiber\n      type: git\n    - repository: FabrikamChat\n      name: FabrikamFiber/FabrikamChat\n      type: git\n\nsteps:\n  - script: echo \"Building SpaceGameWeb\"\n  - checkout: SpaceGameWebReact\n  - checkout: FabrikamChat\n    condition: always()  \n  - checkout: git://FabrikamFiber/FabrikamFiberLib  \n  - checkout: FabrikamFiber\n    submodules: true\n    condition: always()\n  - script: |\n      cd FabrikamFiber\n      git -c http.extraheader=\"AUTHORIZATION: bearer $(System.AccessToken)\" submodule update --recursive --remote\n  - script: cat $(Build.Repository.LocalPath)/FabrikamFiber/FabrikamFiberLib/README.md\n```\n\n----------------------------------------\n\nTITLE: Publishing Test Results in Azure Pipelines YAML\nDESCRIPTION: Adds a PublishTestResults@2 task to upload JUnit or xUnit test result XML files collected in the pipeline. Task parameters specify file globbing and custom test run titles, with logic to upload on both success and failure. Requires pipeline test outputs to match the specified pattern.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishTestResults@2\\n  condition: succeededOrFailed()\\n  inputs:\\n    testResultsFiles: '**/test-*.xml'\\n    testRunTitle: 'Publish test results for Python $(python.version)'\n```\n\n----------------------------------------\n\nTITLE: Publishing Build Artifacts to Azure Pipelines\nDESCRIPTION: YAML configuration for publishing .NET build outputs as artifacts to Azure Pipelines. Includes dotnet publish command and artifact publishing task with zip compression.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n\n- task: DotNetCoreCLI@2\n  inputs:\n    command: publish\n    publishWebProjects: True\n    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'\n    zipAfterPublish: True\n\n# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.\n- task: PublishPipelineArtifact@1\n  inputs:\n    targetPath: '$(Build.ArtifactStagingDirectory)' \n    artifactName: 'myWebsite'\n```\n\n----------------------------------------\n\nTITLE: Defining Sequential Stages in Azure Pipelines\nDESCRIPTION: Example of stages that run sequentially in the order they are defined. When no dependencies are specified, stages run in the order they appear in the YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# if you do not use a dependsOn keyword, stages run in the order they are defined\nstages:\n- stage: QA\n  jobs:\n  - job:\n    ...\n\n- stage: Prod\n  jobs:\n  - job:\n    ...\n```\n\n----------------------------------------\n\nTITLE: Hard Reset to Last Commit\nDESCRIPTION: Command to discard all uncommitted changes in all files since the last commit using Git reset with hard flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/undo.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit reset --hard\n```\n\n----------------------------------------\n\nTITLE: Conditionally Assigning Variables in Azure DevOps YAML Pipeline\nDESCRIPTION: Demonstrates how to conditionally assign a variable value based on the source branch name using template syntax. This example sets a 'stageName' variable to 'prod' when the build is from the main branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}: # only works if you have a main branch\n    stageName: prod\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- script: echo ${{variables.stageName}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Repository Resources with Specific Refs in Azure Pipelines\nDESCRIPTION: This snippet demonstrates how to configure a repository resource with a specific ref and check it out in the pipeline steps. It includes an example for a GitHub repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/multi-repo-checkout.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n  - repository: MyGitHubRepo\n    type: github\n    endpoint: MyGitHubServiceConnection\n    name: MyGitHubOrgOrUser/MyGitHubRepo\n    ref: features/tools\n\nsteps:\n- checkout: MyGitHubRepo\n```\n\n----------------------------------------\n\nTITLE: Authenticating and Querying Projects in C# using HttpClient\nDESCRIPTION: Demonstrates how to authenticate with a personal access token and query projects in Azure DevOps Services using C# and the HttpClient class.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/how-to/call-rest-api.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\npublic static async void GetProjects()\n{\n    try\n    {\n        var personalaccesstoken = \"PAT_FROM_WEBSITE\";\n\n        using (HttpClient client = new HttpClient())\n        {\n            client.DefaultRequestHeaders.Accept.Add(\n                new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue(\"application/json\"));\n\n            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\",\n                Convert.ToBase64String(\n                    System.Text.ASCIIEncoding.ASCII.GetBytes(\n                        string.Format(\"{0}:{1}\", \"\", personalaccesstoken))));\n\n            using (HttpResponseMessage response = client.GetAsync(\n                        \"https://dev.azure.com/{organization}/_apis/projects\").Result)\n            {\n                response.EnsureSuccessStatusCode();\n                string responseBody = await response.Content.ReadAsStringAsync();\n                Console.WriteLine(responseBody);\n            }\n        }\n    }\n    catch (Exception ex)\n    {\n        Console.WriteLine(ex.ToString());\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Auto-Cancellation for PR Validation Builds in Azure Pipelines\nDESCRIPTION: This snippet demonstrates how to prevent newer PR updates from canceling in-progress validation runs. By setting 'autoCancel: false', multiple validation runs can execute simultaneously for the same PR.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# auto cancel false\npr:\n  autoCancel: false\n  branches:\n    include:\n    - main\n```\n\n----------------------------------------\n\nTITLE: Stopping an Azure VM using Azure CLI\nDESCRIPTION: Stops a running Azure Virtual Machine identified by its name and resource group. The VM remains provisioned but is not running; compute charges may still apply depending on the state. This is used during the VHD-to-managed disk conversion process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm stop --resource-group <myResourceGroup> --name <MyVM>\n```\n\n----------------------------------------\n\nTITLE: Versioning .NET Core Packages using DotNetCoreCLI@2 in YAML\nDESCRIPTION: Shows how to use the `DotNetCoreCLI@2` task in Azure Pipelines YAML for packing .NET Core or .NET Standard projects into NuGet packages. It utilizes the `byPrereleaseNumber` versioning scheme to create a version number formatted as *Major.Minor.Patch-ci-datetime*, using pipeline variables (`$(Major)`, `$(Minor)`, `$(Patch)`) for the base version components. This task is recommended over `NuGetCommand@2` for these project types to avoid potential `System.InvalidCastExceptions`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/nuget.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntask: DotNetCoreCLI@2\ninputs:\n    command: pack\n    versioningScheme: byPrereleaseNumber\n    majorVersion: '$(Major)'\n    minorVersion: '$(Minor)'\n    patchVersion: '$(Patch)'\n```\n\n----------------------------------------\n\nTITLE: Calling Azure DevOps API with Microsoft Entra ID Token in PowerShell\nDESCRIPTION: This snippet shows how to use the acquired Microsoft Entra ID token to make an API call to Azure DevOps. It constructs the necessary headers and uses Invoke-RestMethod to retrieve project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/service-principal-managed-identity.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$apiVersion = \"7.1-preview.1\"\n$uri = \"https://dev.azure.com/${yourOrgname}/_apis/projects?api-version=${apiVersion}\"\n$headers = @{\n    Accept = \"application/json\"\n    Authorization = \"Bearer $accessToken\"\n}\nInvoke-RestMethod -Uri $uri -Headers $headers -Method Get | Select-Object -ExpandProperty value ` | Select-Object id, name\n```\n\n----------------------------------------\n\nTITLE: Restoring and Building .NET Core Projects with Internal Feed Using DotNetCoreCLI - YAML\nDESCRIPTION: This comprehensive pipeline snippet configures continuous integration by installing a specific .NET SDK, setting a build configuration variable, restoring dependencies from an Azure Artifacts feed, and then building the project. Dependencies include Azure DevOps extensions for DotNetCoreCLI@2 and UseDotNet@2 tasks, a pre-existing Azure Artifact feed, and proper agent specification. Key parameters: 'version' for SDK selection, 'feedsToUse' and 'vstsFeed' for the restore task, and build configuration arguments. Inputs: YAML configuration, feed details, build arguments. Outputs: restoration and conditional builds for .NET Core projects in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\\n- main\\n\\npool:\\n  vmImage: 'windows-latest'\\n\\nsteps:\\n- task: UseDotNet@2\\n  displayName: 'Install .NET Core SDK'\\n  inputs:\\n    version: 8.x\\n    performMultiLevelLookup: true\\n    includePreviewVersions: true # Required for preview versions\\n\\nvariables:\\n  buildConfiguration: 'Release'\\n\\nsteps:\\n- task: DotNetCoreCLI@2\\n  inputs:\\n    command: 'restore'\\n    feedsToUse: 'select'\\n    vstsFeed: 'my-vsts-feed' # A series of numbers and letters\\n\\n- task: DotNetCoreCLI@2\\n  inputs:\\n    command: 'build'\\n    arguments: '--configuration $(buildConfiguration)'\\n  displayName: 'dotnet build $(buildConfiguration)'\\n\n```\n\n----------------------------------------\n\nTITLE: Configuring URL Access for dev.azure.com Domain in Azure Pipelines\nDESCRIPTION: This code snippet lists the URLs that need to be accessible by the Azure Pipelines agent when using the dev.azure.com domain. These URLs should be configured in the web proxy to allow direct access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/web-proxy-bypass.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com\nhttps://*.dev.azure.com\nhttps://login.microsoftonline.com\nhttps://management.core.windows.net\nhttps://vstsagentpackage.azureedge.net\nhttps://download.agent.dev.azure.com\nhttps://vssps.dev.azure.com\n```\n\n----------------------------------------\n\nTITLE: Managing Azure Pipeline Subscriptions in Slack\nDESCRIPTION: Command for viewing and managing all pipeline subscriptions in a Slack channel. This allows users to review current subscriptions and add or remove them as needed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/slack.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n/azpipelines subscriptions\n```\n\n----------------------------------------\n\nTITLE: OData Query for Flaky Tests by Test Owner\nDESCRIPTION: OData query that filters and groups flaky test results by test owner. Includes test outcome aggregations and flaky rate calculations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-flaky-tests.md#2025-04-22_snippet_6\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tAnd Date/Date ge {startdate})\n/groupby((TestSK, Test/TestName, Test/TestOwner), \n\taggregate(\n\tResultCount with sum as TotalCount,\n\tResultPassCount with sum as PassedCount,\n\tResultFailCount with sum as FailedCount,\n\tResultNotExecutedCount with sum as NotExecutedCount,\n\tResultNotImpactedCount with sum as NotImpactedCount,\n\tResultFlakyCount with sum as FlakyCount))\n/filter(FlakyCount gt 0)\n/compute(\n(FlakyCount div cast(TotalCount, Edm.Decimal)) mul 100 as FlakyRate)\n```\n\n----------------------------------------\n\nTITLE: Increasing Google Play App Rollout Percentage Using YAML Pipeline Task\nDESCRIPTION: This snippet demonstrates how to use the GooglePlayIncreaseRollout@2 task to increase the rollout percentage of an application previously released to the rollout track. It requires package name, service connection, and the target user fraction value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GooglePlayIncreaseRollout@2\n  inputs:\n    packageName: 'com.yourCompany.appPackageName'\n    serviceEndpoint: 'yourGooglePlayServiceConnectionName'\n    userFraction: '0.5' # 0.0 to 1.0 (0% to 100%)\n```\n\n----------------------------------------\n\nTITLE: Configuring Anaconda Environment Caching in Azure Pipelines\nDESCRIPTION: YAML configuration for caching Anaconda environments using the Cache@2 task. Includes setup for both Linux/macOS and Windows environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  CONDA_CACHE_DIR: /usr/share/miniconda/envs\n\nsteps:\n- script: echo \"##vso[task.prependpath]$CONDA/bin\"\n  displayName: Add conda to PATH\n\n- bash: |\n    sudo chown -R $(whoami):$(id -ng) $(CONDA_CACHE_DIR)\n  displayName: Fix CONDA_CACHE_DIR directory permissions\n\n- task: Cache@2\n  displayName: Use cached Anaconda environment\n  inputs:\n    key: 'conda | \"$(Agent.OS)\" | environment.yml'\n    restoreKeys: | \n      python | \"$(Agent.OS)\"\n      python\n    path: $(CONDA_CACHE_DIR)\n    cacheHitVar: CONDA_CACHE_RESTORED\n\n- script: conda env create --quiet --file environment.yml\n  displayName: Create Anaconda environment\n  condition: eq(variables.CONDA_CACHE_RESTORED, 'false')\n```\n\n----------------------------------------\n\nTITLE: Using Service Connection in YAML Pipeline\nDESCRIPTION: Example showing how to reference a service connection by name in a YAML pipeline. The connection name is used as the 'azureSubscription' parameter value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/service-endpoints.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription: MyAzureSubscription1\n```\n\n----------------------------------------\n\nTITLE: Fetching All Remote Git Branches\nDESCRIPTION: Git command to download new commits from all remote branches into your local repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pulling.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit fetch <remote repo>\n```\n\n----------------------------------------\n\nTITLE: Configuring Xcode Build Task in Azure Pipelines YAML\nDESCRIPTION: Defines the `Xcode@5` task to build an Xcode project. It specifies the action as 'build', targets the 'iphoneos' SDK with 'Release' configuration, locates the workspace using a wildcard pattern (`**/*.xcodeproj/project.xcworkspace`), and uses the default Xcode version available on the agent. Key parameters like `scheme`, `sdk`, `configuration`, `xcWorkspacePath`, and `xcodeVersion` are shown.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/xcode.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Xcode@5\n  inputs:\n    actions: 'build'\n    scheme: ''\n    sdk: 'iphoneos'\n    configuration: 'Release'\n    xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace'\n    xcodeVersion: 'default' # Options: 10, 11, 12, 13, 14, default, specifyPath\n```\n\n----------------------------------------\n\nTITLE: Checking Out Specific Refs in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to check out specific refs using inline syntax in Azure Pipelines. It includes examples for checking out branches and tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/multi-repo-checkout.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- checkout: git://MyProject/MyRepo@features/tools # checks out the features/tools branch\n- checkout: git://MyProject/MyRepo@refs/heads/features/tools # also checks out the features/tools branch\n- checkout: git://MyProject/MyRepo@refs/tags/MyTag # checks out the commit referenced by MyTag.\n```\n\n----------------------------------------\n\nTITLE: Implementing Staging Deployment in YAML Pipeline for Azure DevOps\nDESCRIPTION: Configures a staging deployment stage with two jobs: one for deployment and another for validation. The validation job includes a manual approval step, adding an extra layer of security and review before proceeding.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/run-stages.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n- stage: DeployToStaging\n  displayName: 'Deploy to Staging'\n  dependsOn: Test\n  jobs:\n  - job: DeployStagingJob\n    displayName: 'Deploy to Staging Job'\n    pool:\n      vmImage: 'ubuntu-latest'\n    steps:\n    - script: |\n        echo \"Build staging job...\"\n      displayName: 'Build and deploy to staging'\n\n  - job: DeployStagingJobWithValidation\n    pool: server\n    timeoutInMinutes: 4320 # job times out in 3 days\n    displayName: 'Deploy to Staging Job'\n    steps:\n    - task: ManualValidation@1\n      timeoutInMinutes: 1440 # task times out in 1 day\n      inputs:\n        notifyUsers: user@example.com\n        instructions: 'Please validate the stage configuration and resume'\n        onTimeout: 'resume'\n```\n\n----------------------------------------\n\nTITLE: Listing Agents in a Pool Using Azure DevOps CLI\nDESCRIPTION: Azure CLI command for listing all agents in a specified agent pool. The command includes parameters for filtering and displaying agent information including capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/agents.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines agent list --pool-id\n                        [--agent-name]\n                        [--demands]\n                        [--detect {false, true}]\n                        [--include-assigned-request {false, true}]\n                        [--include-capabilities {false, true}]\n                        [--include-last-completed-request {false, true}]\n                        [--org]\n                        [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Downloading Artifacts from a Specific Pipeline Version - Azure Pipelines - YAML\nDESCRIPTION: This YAML code demonstrates how to download artifacts from a specific build version produced by a named pipeline run using the 'resources.pipelines' section. It defines a dependency on another pipeline by project ID, pipeline source ID, and version, then downloads the 'drop' artifact matching all contents. This setup enables referencing artifacts from external or upstream pipeline executions for further processing. The snippet assumes access to the specified project and pipeline run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: myPipeline\n    project: 'xxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx'\n    source: '79'\n    version: '597'\n\nsteps:\n- download: myPipeline\n  artifact: drop\n  patterns: '**'\n  displayName: 'Download Pipeline Artifact'\n\n```\n\n----------------------------------------\n\nTITLE: Creating Anaconda Environment from environment.yml (YAML)\nDESCRIPTION: Creates an Anaconda environment based on the configuration defined in an 'environment.yml' file located in the repository. Uses the 'conda env create' command with '--quiet' flag. Notes suggest using '--force' on self-hosted agents to overwrite existing environments from previous builds, and using '--name' with a unique identifier (e.g., build number variable) to prevent conflicts in parallel jobs on shared storage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/anaconda.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n- script: conda env create --quiet --file environment.yml\n  displayName: Create Anaconda environment\n```\n```\n\n----------------------------------------\n\nTITLE: Canary Deployment Strategy for AKS\nDESCRIPTION: Example of canary deployment strategy for AKS with incremental rollout (10%, 20%) including health monitoring and success/failure handlers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\njobs: \n- deployment: \n  environment: smarthotel-dev.bookings\n  pool: \n    name: smarthotel-devPool\n  strategy:                  \n    canary:      \n      increments: [10,20]  \n      preDeploy:                                     \n        steps:           \n        - script: initialize, cleanup....   \n      deploy:             \n        steps: \n        - script: echo deploy updates... \n        - task: KubernetesManifest@0 \n          inputs: \n            action: $(strategy.action)       \n            namespace: 'default' \n            strategy: $(strategy.name) \n            percentage: $(strategy.increment) \n            manifests: 'manifest.yml' \n      postRouteTraffic: \n        pool: server \n        steps:           \n        - script: echo monitor application health...   \n      on: \n        failure: \n          steps: \n          - script: echo clean-up, rollback...   \n        success: \n          steps: \n          - script: echo checks passed, notify...\n```\n\n----------------------------------------\n\nTITLE: Using Filtered Arrays with JSON in Azure DevOps Pipelines\nDESCRIPTION: Example of using the '*' syntax for filtered arrays in Azure DevOps pipelines. This demonstrates how to extract an array of values for a specific property from an array of objects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_28\n\nLANGUAGE: json\nCODE:\n```\n[\n    { \"id\": 1, \"a\": \"avalue1\"},\n    { \"id\": 2, \"a\": \"avalue2\"},\n    { \"id\": 3, \"a\": \"avalue3\"}\n]\n```\n\n----------------------------------------\n\nTITLE: Executing Local npm Package with npx Script in YAML\nDESCRIPTION: Runs the `mocha` test runner using `npx` within a script step in Azure Pipelines YAML. `npx` finds and executes the `mocha` binary, prioritizing the version installed as a project dependency before looking for a global installation. Assumes `mocha` is a development dependency. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- script: npx mocha\n```\n\n----------------------------------------\n\nTITLE: Invoking Azure DevOps REST API to Run Pipeline with Stage Skipping via Azure CLI\nDESCRIPTION: This command demonstrates using the generic `az rest` command to interact directly with the Azure DevOps REST API. It makes a POST request to the 'Run Pipeline' endpoint (`/_apis/pipelines/{pipelineId}/runs`) to initiate a pipeline run. The `--body` parameter contains a JSON payload specifying parameters for the run, including the branch (`refName`) and potentially a list of stages to skip (`stagesToSkip`). The `--resource` parameter specifies the Azure DevOps service resource ID needed for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/manage-pipelines-with-azure-cli.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz rest --method post `\n    --uri https://dev.azure.com/{organization}/{project}/_apis/pipelines/{pipelineId}/runs?api-version=7.1-preview.1 `\n    --body \"{'stagesToSkip': [''], 'resources': {'repositories': {'self': {'refName': 'refs/heads/{branch}'}}}}\" `\n    --resource 499b84ac-1321-427f-aa17-267ca6975798\n```\n\n----------------------------------------\n\nTITLE: Implementing Always and Failed Conditions in Azure Pipelines YAML\nDESCRIPTION: This example demonstrates how to use the always() and failed() conditions in Azure Pipelines YAML. The first job 'Foo' contains a step that always runs regardless of build status, followed by a step that intentionally fails. The second job 'Bar' only runs if the 'Foo' job fails.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Foo\n  steps:\n  - script: echo Hello!\n    condition: always() # this step runs, even if the build is canceled\n  - script: |\n      echo \"This task will fail.\"\n      exit 1 \n- job: Bar\n  dependsOn: Foo\n  condition: failed() # this job runs only if Foo fails\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Artifacts Feed in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to use Python and authenticate with an Azure Artifacts feed using the TwineAuthenticate task in an Azure Pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pypi.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: UsePythonVersion@0\n  displayName: 'Use Python 3.x'\n\n- task: TwineAuthenticate@1\n  inputs:\n    artifactFeed: <PROJECT_NAME/FEED_NAME>     ## For an organization-scoped feed, use: artifactFeed: <FEED_NAME>\n```\n\n----------------------------------------\n\nTITLE: Passing Output Variables Between Pipeline Stages\nDESCRIPTION: Example showing how to set a variable in one stage and use it in a subsequent stage. Demonstrates both condition syntax and variable reference syntax for inter-stage variable passing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: StageA\n  jobs:\n  - job: A1\n    steps:\n      - pwsh: echo \"##vso[task.setvariable variable=RunStageB;isOutput=true]true\"\n        name: setvarStep\n      - bash: echo $(System.JobName)\n\n- stage: StageB\n  dependsOn: \n    - StageA\n \n  # when referring to another stage, stage name is included in variable path\n  condition: eq(dependencies.StageA.outputs['A1.setvarStep.RunStageB'], 'true')\n  \n  # Variables reference syntax differs slightly from inter-stage condition syntax\n  variables:\n    myOutputVar: $[stageDependencies.StageA.A1.outputs['setvarStep.RunStageB']]\n  jobs:\n  - deployment: B1\n    pool:\n      vmImage: 'ubuntu-latest'\n    environment: envB\n    strategy:                  \n      runOnce:\n        deploy:\n          steps:\n          - bash: echo $(myOutputVar)\n```\n\n----------------------------------------\n\nTITLE: Installing Node 6 Runner in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the NodeTaskRunnerInstaller task to install the Node 6 runner just-in-time for running legacy tasks that depend on Node 6 in Azure Pipelines. Dependencies include the Azure Pipelines agent and availability of the NodeTaskRunnerInstaller@0 task. The key parameter is 'runnerVersion', which specifies the Node version to install. The snippet is intended to be inserted in a pipeline's steps block and does not return output.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-218-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n  steps:\\n  - task: NodeTaskRunnerInstaller@0\\n    inputs:\\n      runnerVersion: 6\\n\n```\n\n----------------------------------------\n\nTITLE: Using Output Variables Between Jobs in Conditions\nDESCRIPTION: Example showing how to set a multi-job output variable in one job and use it in a condition for a subsequent job. The isOutput=true flag makes the variable available across jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Foo\n  steps:\n  - bash: |\n      echo \"This is job Foo.\"\n      echo \"##vso[task.setvariable variable=doThing;isOutput=true]Yes\" #set variable doThing to Yes\n    name: DetermineResult\n- job: Bar\n  dependsOn: Foo\n  condition: eq(dependencies.Foo.outputs['DetermineResult.doThing'], 'Yes') #map doThing and check the value\n  steps:\n  - script: echo \"Job Foo ran and doThing is Yes.\"\n```\n\n----------------------------------------\n\nTITLE: Conditional SQL Database Deployment in YAML Azure Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to conditionally deploy a SQL database using the SqlAzureDacpacDeployment task. The deployment only occurs if the build is successful and the source branch is 'main'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n- task: SqlAzureDacpacDeployment@1\n  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))\n  inputs:\n    azureSubscription: '<Azure service connection>'\n    ServerName: '<Database server name>'\n    DatabaseName: '<Database name>'\n    SqlUsername: '<SQL user name>'\n    SqlPassword: '<SQL user password>'\n    DacpacFile: '<Location of Dacpac file in $(Build.SourcesDirectory) after compilation>'\n```\n\n----------------------------------------\n\nTITLE: Creating Azure DevOps Project using CLI\nDESCRIPTION: Command syntax for creating a new Azure DevOps project using the Azure CLI. Allows specification of project name, description, process type, source control, and visibility settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/create-project.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops project create --name\n                         [--description]\n                         [--open]\n                         [--org]\n                         [--process]\n                         [--source-control {git, tfvc}]\n                         [--visibility {private, public}]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Pipeline for Publishing Extensions to Marketplace\nDESCRIPTION: A complete YAML pipeline definition that automates testing, packaging, and publishing of Azure DevOps extensions to the Visual Studio Marketplace. The pipeline consists of three stages: running tests, packaging the extension and publishing artifacts, and downloading artifacts to publish the extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: \n- main\npool:\n  vmImage: \"ubuntu-latest\"\nvariables:\n  - group: variable-group # Rename to whatever you named your variable group in the prerequisite stage of step 6\nstages:\n  - stage: Run_and_publish_unit_tests\n    jobs:\n      - job:\n        steps:\n          - task: TfxInstaller@4\n            inputs:\n              version: \"v0.x\"\n          - task: Npm@1\n            inputs:\n              command: 'install'\n              workingDir: '/TaskDirectory' # Update to the name of the directory of your task\n          - task: Bash@3\n            displayName: Compile Javascript\n            inputs:\n              targetType: \"inline\"\n              script: |\n                cd TaskDirectory # Update to the name of the directory of your task\n                tsc\n          - task: Npm@1\n            inputs:\n              command: 'custom'\n              workingDir: '/TestsDirectory' # Update to the name of the directory of your task's tests\n              customCommand: 'testScript' # See the definition in the explanation section below - it may be called test\n          - task: PublishTestResults@2\n            inputs:\n              testResultsFormat: 'JUnit'\n              testResultsFiles: '**/ResultsFile.xml'\n  - stage: Package_extension_and_publish_build_artifacts\n    jobs:\n      - job:\n        steps:\n          - task: TfxInstaller@4\n            inputs:\n              version: \"0.x\"\n          - task: Npm@1\n            inputs:\n              command: 'install'\n              workingDir: '/TaskDirectory' # Update to the name of the directory of your task\n          - task: Bash@3\n            displayName: Compile Javascript\n            inputs:\n              targetType: \"inline\"\n              script: |\n                cd TaskDirectory # Update to the name of the directory of your task\n                tsc\n          - task: QueryAzureDevOpsExtensionVersion@4\n            name: QueryVersion\n            inputs:\n              connectTo: 'VsTeam'\n              connectedServiceName: 'ServiceConnection' # Change to whatever you named the service connection\n              publisherId: '$(PublisherID)'\n              extensionId: '$(ExtensionID)'\n              versionAction: 'Patch'\n          - task: PackageAzureDevOpsExtension@4\n            inputs:\n              rootFolder: '$(System.DefaultWorkingDirectory)'\n              publisherId: '$(PublisherID)'\n              extensionId: '$(ExtensionID)'\n              extensionName: '$(ExtensionName)'\n              extensionVersion: '$(QueryVersion.Extension.Version)'\n              updateTasksVersion: true\n              updateTasksVersionType: 'patch'\n              extensionVisibility: 'private' # Change to public if you're publishing to the marketplace\n              extensionPricing: 'free'\n          - task: CopyFiles@2\n            displayName: \"Copy Files to: $(Build.ArtifactStagingDirectory)\"\n            inputs:\n              Contents: \"**/*.vsix\"\n              TargetFolder: \"$(Build.ArtifactStagingDirectory)\"\n          - task: PublishBuildArtifacts@1\n            inputs:\n              PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n              ArtifactName: '$(ArtifactName)'\n              publishLocation: 'Container'\n  - stage: Download_build_artifacts_and_publish_the_extension\n    jobs:\n      - job:\n        steps:\n          - task: TfxInstaller@4\n            inputs:\n              version: \"v0.x\"\n          - task: DownloadBuildArtifacts@0\n            inputs:\n              buildType: \"current\"\n              downloadType: \"single\"\n              artifactName: \"$(ArtifactName)\"\n              downloadPath: \"$(System.DefaultWorkingDirectory)\"\n          - task: PublishAzureDevOpsExtension@4\n            inputs:\n              connectTo: 'VsTeam'\n              connectedServiceName: 'ServiceConnection' # Change to whatever you named the service connection\n              fileType: 'vsix'\n              vsixFile: '$(PublisherID).$(ExtensionName)/$(PublisherID)..vsix'\n              publisherId: '$(PublisherID)'\n              extensionId: '$(ExtensionID)'\n              extensionName: '$(ExtensionName)'\n              updateTasksVersion: false\n              extensionVisibility: 'private' # Change to public if you're publishing to the marketplace\n              extensionPricing: 'free'\n```\n\n----------------------------------------\n\nTITLE: Accessing Help for Azure DevOps Agent Configuration in Linux\nDESCRIPTION: Command to display help information for the agent configuration script. This provides details on authentication alternatives, unattended configuration options, and other available parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/configure-help-unix.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./config.sh --help\n```\n\n----------------------------------------\n\nTITLE: Building and Publishing Gradle Artifacts in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to build a Gradle project, copy the files to the pipeline workspace, and publish the artifact in an Azure Pipelines YAML pipeline. It uses the Gradle, CopyFiles, and PublishPipelineArtifact tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/build-publish-artifacts-gradle.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Gradle@4\n  displayName: 'gradlew build'\n\n- task: CopyFiles@2\n  displayName: 'Copy Files to: $(Pipeline.Workspace)'\n  inputs:\n    TargetFolder: '$(Pipeline.Workspace)'\n\n- task: PublishPipelineArtifact@1\n  displayName: 'Publish Pipeline Artifact'\n```\n\n----------------------------------------\n\nTITLE: Task Condition Example\nDESCRIPTION: Example showing how to use conditions to control task execution, with PublishTestResults running even if previous step fails.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '3.x'\n    architecture: 'x64'\n- task: PublishTestResults@2\n  inputs:\n    testResultsFiles: \"**/TEST-*.xml\"\n  condition: succeededOrFailed()\n```\n\n----------------------------------------\n\nTITLE: Configuring Step Targets and Command Isolation in YAML Pipelines\nDESCRIPTION: Illustrates how to run individual steps within a YAML pipeline job on different targets. The example defines two container resources (`python` and `node`). The job runs by default in the `python` container. Steps demonstrate running on the default job container, the agent `host`, and another specified container (`node`) with `restricted` command mode enabled for enhanced security and isolation. This allows tailoring the execution environment for each step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-163-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\nresources:\n  containers:\n  - container: python\n    image: python:3.8\n  - container: node\n    image: node:13.2\n\njobs:\n- job: example\n  container: python\n\n  steps:\n  - script: echo Running in the job container\n\n  - script: echo Running on the host\n    target: host\n\n  - script: echo Running in another container, in restricted commands mode\n    target:\n      container: node\n      commands: restricted\n```\n```\n\n----------------------------------------\n\nTITLE: Job Dependencies Syntax in Azure DevOps Pipelines\nDESCRIPTION: YAML syntax for defining job dependencies in Azure DevOps pipelines. This allows specifying the order of execution and conditions for jobs within a pipeline stage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: string\n  dependsOn: string\n  condition: string\n```\n\n----------------------------------------\n\nTITLE: Stage Condition Based on Another Stage Result in Azure DevOps YAML Pipeline\nDESCRIPTION: Example of two stages where Stage B runs conditionally based on the result of Stage A. Stage A is set to never run with 'condition: false', but Stage B will run because it accepts skipped stages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  condition: false\n  jobs:\n  - job: A1\n    steps:\n    - script: echo Job A1\n- stage: B\n  condition: in(dependencies.A.result, 'Succeeded', 'SucceededWithIssues', 'Skipped')\n  jobs:\n  - job: B1\n    steps:\n    - script: echo Job B1\n```\n\n----------------------------------------\n\nTITLE: Docker Image Caching in Azure Pipelines YAML\nDESCRIPTION: This example shows how to cache Docker images in Azure Pipelines to reduce build time. It includes steps for loading and saving the Docker image cache.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  repository: 'myDockerImage'\n  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'\n  tag: '$(Build.BuildId)'\n\npool:\n  vmImage: 'ubuntu-latest'\nsteps:\n  - task: Cache@2\n    displayName: Cache task\n    inputs:\n      key: 'docker | \"$(Agent.OS)\" | cache'        ## A unique identifier for the cache\n      path: $(Pipeline.Workspace)/docker           ## Path of the folder or file that you want to cache\n      cacheHitVar: CACHE_RESTORED                  ## Variable to set to 'true' when the cache is restored\n    \n  - script: |\n      docker load -i $(Pipeline.Workspace)/docker/cache.tar\n    displayName: Docker restore\n    condition: and(not(canceled()), eq(variables.CACHE_RESTORED, 'true'))\n\n  - task: Docker@2\n    displayName: 'Build Docker'\n    inputs:\n      command: 'build'\n      repository: '$(repository)'\n      dockerfile: '$(dockerfilePath)'\n      tags: |\n        '$(tag)'\n\n  - script: |\n      mkdir -p $(Pipeline.Workspace)/docker\n      docker save -o $(Pipeline.Workspace)/docker/cache.tar $(repository):$(tag)\n    displayName: Docker save\n    condition: and(not(canceled()), not(failed()), ne(variables.CACHE_RESTORED, 'true'))\n```\n\n----------------------------------------\n\nTITLE: Using Variable Groups with Templates in YAML Pipeline\nDESCRIPTION: Example of using variable groups in a YAML pipeline with template reference and variable usage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: MyStage\n  variables:\n  - template: variables.yml\n  jobs:\n  - job: Test\n    steps:\n    - script: echo $(myhello)\n```\n\n----------------------------------------\n\nTITLE: Using Variables in Azure Pipelines Conditions\nDESCRIPTION: This example shows how to set and use variables in pipeline conditions. It creates an 'isMain' variable that checks if the source branch is 'main', then uses this variable in a stage condition to control execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]\n\nstages:\n- stage: A\n  jobs:\n  - job: A1\n    steps:\n      - script: echo Hello Stage A!\n\n- stage: B\n  condition: and(succeeded(), eq(variables.isMain, true))\n  jobs:\n  - job: B1\n    steps:\n      - script: echo Hello Stage B!\n      - script: echo $(isMain)\n```\n\n----------------------------------------\n\nTITLE: Targeting a Specific Environment Resource in Azure Pipelines YAML\nDESCRIPTION: Example showing how to scope a deployment to a particular resource within an Azure DevOps environment. This configuration automatically passes the Kubernetes service connection details from the environment resource to the deployment task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nenvironment: \n  name: 'smarthotel-dev.bookings'\nstrategy: \n runOnce:\n   deploy:\n     steps:\n     - task: KubernetesManifest@0\n       displayName: Deploy to Kubernetes cluster\n       inputs:\n         action: deploy\n         namespace: $(k8sNamespace)\n         manifests: $(System.ArtifactsDirectory)/manifests/*\n         imagePullSecrets: $(imagePullSecret)\n         containers: $(containerRegistry)/$(imageRepository):$(tag)\n```\n\n----------------------------------------\n\nTITLE: Creating Parameterized Job Templates in Azure Pipelines (YAML)\nDESCRIPTION: This example demonstrates how to create a template with parameters that can be customized when referenced. The template accepts name and vmImage parameters to configure jobs dynamically.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n# File: templates/npm-with-params.yml\n\nparameters:\n- name: name  # defaults for any parameters that aren't specified\n  default: ''\n- name: vmImage\n  default: ''\n\njobs:\n- job: ${{ parameters.name }}\n  pool: \n    vmImage: ${{ parameters.vmImage }}\n  steps:\n  - script: npm install\n  - script: npm test\n```\n\n----------------------------------------\n\nTITLE: Dockerfile for Azure Pipelines Agent on Ubuntu 22.04\nDESCRIPTION: Dockerfile to create an Azure Pipelines agent image based on Ubuntu 22.04. It installs necessary dependencies and the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_4\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM ubuntu:22.04\nENV TARGETARCH=\"linux-x64\"\n# Also can be \"linux-arm\", \"linux-arm64\".\n\nRUN apt update && \\\n  apt upgrade -y && \\\n  apt install -y curl git jq libicu70\n\n# Install Azure CLI\nRUN curl -sL https://aka.ms/InstallAzureCLIDeb | bash\n\nWORKDIR /azp/\n\nCOPY ./start.sh ./\nRUN chmod +x ./start.sh\n\n# Create agent user and set up home directory\nRUN useradd -m -d /home/agent agent\nRUN chown -R agent:agent /azp /home/agent\n\nUSER agent\n# Another option is to run the agent as root.\n# ENV AGENT_ALLOW_RUNASROOT=\"true\"\n\nENTRYPOINT [ \"./start.sh\" ]\n```\n\n----------------------------------------\n\nTITLE: Pushing to a Different Remote Branch with Git Command Line\nDESCRIPTION: Command to push a local branch to a differently named remote branch using the full Git push syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pushing.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit push <remote repo> <local branch name>:<remote branch name>\n```\n\n----------------------------------------\n\nTITLE: Publishing Symbols to File Share (YAML)\nDESCRIPTION: YAML snippet to configure the PublishSymbols task for publishing symbols to a file share. Specifies symbol folder, search pattern, and file share path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/symbols.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishSymbols@2\n  inputs:\n    SymbolsFolder: '$(Build.SourcesDirectory)'\n    SearchPattern: '**/bin/**/*.pdb'\n    IndexSources: true\n    PublishSymbols: true\n    SymbolServerType: 'FileShare' \n    SymbolsPath: '\\\\server\\shareName'\n```\n\n----------------------------------------\n\nTITLE: Promoting Packages Using PowerShell\nDESCRIPTION: PowerShell script to promote a package to a desired view in Azure Artifacts using REST API calls with personal access token authentication\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_21\n\nLANGUAGE: powershell\nCODE:\n```\n$env:PAT = \"YOUR_PERSONAL_ACCESS_TOKEN\"\n$uri = \"YOUR_URL\"\n$headers = @{\n    \"Content-Type\" = \"application/json\"\n    Authorization = \"Basic \" + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(\":$env:PAT\"))\n}\n$body = @{\n    views = @{\n        op    = \"add\"\n        path  = \"/views/-\"\n        value = \"YOUR_VIEW_NAME\"\n    }\n} | ConvertTo-Json\n\nInvoke-RestMethod -Uri $uri -Method Patch -Headers $headers -Body $body\n```\n\n----------------------------------------\n\nTITLE: Mapping System.AccessToken for Docker Task Authentication - Azure DevOps YAML\nDESCRIPTION: This YAML snippet demonstrates how to explicitly pass the system access token (System.AccessToken) into a Docker task to authenticate with an external container registry. It maps the secure variable to an environment variable (SYSTEM_ACCESSTOKEN), which the Docker@2 task consumes. Required dependencies include Azure DevOps pipeline agent with Docker@2 task installed and a properly configured containerRegistry connection. The key input parameters are the command (login), the container registry connection, and the environment mapping for authentication. Inputs are the pipeline variables and task definitions as described, with the output being a successful authenticated session with the registry. The scope of System.AccessToken can be further managed via pipeline authorization scope settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/variables.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Docker@2\n  inputs:\n    command: login\n    containerRegistry: '<docker connection>'\n  env:\n    SYSTEM_ACCESSTOKEN: $(System.AccessToken)\n```\n\n----------------------------------------\n\nTITLE: Logging a Warning with File Information in PowerShell\nDESCRIPTION: Shows how to log a warning message with specific file information using the task.logissue command in a PowerShell script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nWrite-Host \"##vso[task.logissue type=warning;sourcepath=consoleapp/main.cs;linenumber=1;columnnumber=1;code=100;]Found something that could be a problem.\"\n```\n\n----------------------------------------\n\nTITLE: Counter with Dynamic Reset in Azure DevOps Pipelines YAML\nDESCRIPTION: Shows how to create a counter that starts at 100, increments by 1 for every run, and resets to 100 every day by using the pipeline.startTime as part of the counter prefix.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job:\n  variables:\n    a: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 100)]\n  steps:\n  - bash: echo $(a)\n```\n\n----------------------------------------\n\nTITLE: Pushing Docker Image to Azure Container Registry - Bash\nDESCRIPTION: This Docker command pushes a locally built Docker image (with the tag <acr-server>/azp-agent:<tag>) to an Azure Container Registry. The placeholders <acr-server> and <tag> must be substituted with the registry name and specific image tag, respectively. Requires Docker CLI configured for Azure authentication and access to the target ACR instance. Ensures that the agent image is available for Kubernetes deployments referencing it.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker push \"<acr-server>/azp-agent:<tag>\"\n```\n\n----------------------------------------\n\nTITLE: Creating a GitHub Service Endpoint - Azure DevOps CLI - Azure CLI\nDESCRIPTION: This Azure CLI snippet illustrates using 'az devops service-endpoint github create' to establish a GitHub service connection. It requires the '--github-url' and '--name' arguments, with optional organization and project scoping. If not provided via environment variable (AZURE_DEVOPS_EXT_GITHUB_PAT), a prompt requests a GitHub personal access token. The created endpoint enables secure access to GitHub repositories from Azure DevOps pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_5\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz devops service-endpoint github create --github-url\\n                                         --name \\n                                         [--org]\\n                                         [--project]\n```\n\n----------------------------------------\n\nTITLE: Deployment Job Configuration\nDESCRIPTION: YAML configuration for a deployment job with environment and strategy settings\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- deployment: string\n  pool:\n    name: string\n    demands: string | [ string ]\n  environment: string\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - script: echo Hi!\n```\n\n----------------------------------------\n\nTITLE: Grouping Filter Conditions with Parentheses in WIQL WHERE Clause\nDESCRIPTION: Demonstrates how to group filter conditions using parentheses in the WHERE clause to control the order of logical operator evaluation (AND, OR). This example finds Product Backlog Items within the current project ('@project') that are either assigned to the current user ('@me') OR were closed by the current user ('@me'). System field reference names like 'System.TeamProject' are used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_4\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE\n    [System.TeamProject] = @project\n    AND (\n        [System.WorkItemType] = 'Product Backlog Item'\n        AND (\n            [System.AssignedTo] = @me\n            OR [Microsoft.VSTS.Common.ClosedBy] = @me\n        )\n    )\n```\n\n----------------------------------------\n\nTITLE: Complete YAML Pipeline for Linux\nDESCRIPTION: This YAML pipeline example for Linux shows the process of installing Rustup, configuring PATH, building the project, authenticating with CargoAuthenticate, and publishing to an Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/cargo-pipelines.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n- script: |\n   curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\n   echo \"##vso[task.prependpath]$HOME/.cargo/bin\"\n  displayName: Install\n\n- task: CargoAuthenticate@0\n  displayName: 'cargo Authenticate'\n  inputs:\n    configFile: '.cargo/config.toml'\n\n- script: |\n   cargo build --all\n  displayName: Build\n\n- powershell: |\n   cargo publish --registry CargoInternalFeed\n  displayName: Publish\n```\n\n----------------------------------------\n\nTITLE: Forking Sample Repository for Space Game Web App\nDESCRIPTION: URL for forking the sample repository containing the space game web application that will be used throughout this tutorial.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nhttps://github.com/MicrosoftDocs/mslearn-tailspin-spacegame-web-deploy\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Count in OData for Azure DevOps Analytics\nDESCRIPTION: This OData query demonstrates how to create a preview query that returns the count of work items for a specific project. It uses the $apply=aggregate($count as Count) syntax to get a total count rather than returning all records.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-best-practices.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/content-learn/Content/_odata/v4.0-preview/WorkItems? $apply=aggregate($count as Count)\n```\n\n----------------------------------------\n\nTITLE: Manually Importing a Git Repository Using Git CLI\nDESCRIPTION: Series of Git commands for manually importing a repository into Azure DevOps. This approach clones the source repository with the --bare option, pushes it to the target repository with --mirror, and handles LFS objects if present.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/import-git-repository.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit clone --bare https://github.com/contoso/old-contoso-repo.git\ncd old-contoso-repo.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit push --mirror https://dev.azure.com/contoso-ltd/MyFirstProject/_git/new-contoso-repo\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit lfs fetch origin --all\ngit lfs push --all https://dev.azure.com/contoso-ltd/MyFirstProject/_git/new-contoso-repo\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd ..\nrm -rf old-contoso-repo.git\n```\n\n----------------------------------------\n\nTITLE: Running Multiple Jobs with Different Service Container Versions in Azure Pipelines\nDESCRIPTION: YAML configuration that demonstrates running the same job against multiple versions of a service (PostgreSQL 14 and 15). This setup uses a matrix strategy to create separate jobs for each version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/service-containers.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: my_container\n    image: ubuntu:22.04\n  - container: pg15\n    image: postgres:15\n  - container: pg14\n    image: postgres:14\n\npool:\n  vmImage: 'ubuntu-latest'\n\nstrategy:\n  matrix:\n    postgres15:\n      postgresService: pg15\n    postgres14:\n      postgresService: pg14\n\ncontainer: my_container\n\nservices:\n  postgres: $[ variables['postgresService'] ]\nsteps:\n- script: printenv\n```\n\n----------------------------------------\n\nTITLE: Reading Variables in Azure DevOps Pipelines with Bash\nDESCRIPTION: Demonstrates how to access standard variables, secret variables, and output variables in a Bash task. Shows both environment variable access and macro replacement syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\n- bash: |\n    echo \"Non-secrets automatically mapped in, sauce is $SAUCE\"\n    echo \"Secrets are not automatically mapped in, secretSauce is $SECRETSAUCE\"\n    echo \"You can use macro replacement to get secrets, and they'll be masked in the log: $(secretSauce)\"\n```\n\n----------------------------------------\n\nTITLE: Multi-Registry Docker Build and Push in Azure Pipelines\nDESCRIPTION: This YAML snippet demonstrates the upgraded Docker task that simplifies pipeline authoring for container images. It shows how to log into multiple container registries and build/push images with multiple tags in a single step using Docker registry service connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-150-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Docker@2\n  displayName: Container registry login - ACR1 service connection\n  inputs:\n    command: login\n    containerRegistry: acr1\n- task: Docker@2\n  displayName: Container registry login - ACR2 service connection\n  inputs:\n    command: login\n    containerRegistry: acr2\n- task: Docker@2\n  displayName: Build and push images\n  inputs:\n    repository: test\n    tags: |\n      d1\n      d2\n```\n\n----------------------------------------\n\nTITLE: Cloning a Git Repository using SSH\nDESCRIPTION: Command to clone a Git repository from Azure DevOps using SSH authentication. This example shows the format for the SSH clone URL which includes the organization, project, and repository names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@ssh.dev.azure.com:v3/fabrikam-fiber/FabrikamFiber/FabrikamFiber\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Stage Dependencies in Azure Pipeline\nDESCRIPTION: Defines the deployment stage dependencies and conditions for execution. The stage will only run if the Build stage completes successfully.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\n  dependsOn: Build\n  condition: succeeded()\n```\n\n----------------------------------------\n\nTITLE: Package Resource Configuration\nDESCRIPTION: Configuration for consuming NuGet and npm GitHub packages as pipeline resources with automated triggers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  packages:\n    - package: contoso\n      type: npm\n      connection: pat-contoso\n      name: myname/contoso \n      version: 7.130.88 \n      trigger: true\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- getPackage: contoso\n```\n\n----------------------------------------\n\nTITLE: Checking Azure Pipelines Linux Agent Service Status\nDESCRIPTION: Command to check the status of the Azure Pipelines Linux agent service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh status\n```\n\n----------------------------------------\n\nTITLE: Creating Unit Test Method in C# for Azure DevOps\nDESCRIPTION: This code snippet shows how to create a unit test method using the MSTest framework in C#. It demonstrates setting up a test class, creating a test method, and using assertions to verify expected results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-write-new-code-user-story.md#2025-04-22_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\nusing System;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\nnamespace Fabrikam.Math.UnitTest\n{\n    [TestClass]\n    public class UnitTest1\n    {\n        [TestMethod]\n        // Demonstrates how to call the method.\n        public void SignatureTest()\n        {\n            // Create an instance:\n            var math = new Fabrikam.Math.LocalMath();\n\n            // Get a value to calculate:\n            double input = 0.0;\n\n            // Call the method:\n            double actualResult = math.SquareRoot(input);\n\n            // Use the result:\n            Assert.AreEqual(0.0, actualResult);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying .NET SDK Version with Patch Roll-Forward Policy in global.json - JSON\nDESCRIPTION: This global.json snippet sets the .NET SDK version and enables 'rollForward' to 'patch', allowing automatic use of the latest patch for the specified feature version. This ensures that even if the exact version is not present on the agent, the most recent compatible patch is used. Dependencies: .NET SDK, global.json mechanism. Key fields: 'version', 'rollForward'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-190-update.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"sdk\": {\n    \"version\": \"3.1.100\",\n    \"rollForward\": \"patch\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Sample .NET Code Repository URL\nDESCRIPTION: Provides the GitHub repository URL containing sample .NET Core code. Users should fork this repository into their own GitHub account to follow the guide for creating their first .NET Core pipeline in Azure Pipelines. This repository is used by Azure Pipelines to analyze the code and suggest a suitable pipeline template (ASP.NET Core).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/MicrosoftDocs/pipelines-dotnet-core\n```\n\n----------------------------------------\n\nTITLE: Triggering Agent Updates via Azure DevOps Server REST API - HTTP\nDESCRIPTION: Shows an HTTP POST request to the Azure DevOps Server REST API endpoint for triggering agent updates on a specified agent or all agents within a pool. The endpoint syntax adapts to on-premises server environments, using a custom server URL and collection, but otherwise follows the same principles as Azure DevOps Services. Requires organization, poolId, agentId, and API version ('6.0') as parameters, with an empty request body.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/agents.md#2025-04-22_snippet_8\n\nLANGUAGE: HTTP\nCODE:\n```\nPOST https://{server url}/tfs/{collection}/_apis/distributedtask/pools/{poolId}/messages?agentId={agentId}&api-version=6.0\n```\n\n----------------------------------------\n\nTITLE: Implementing Fan-out and Fan-in Stage Dependencies\nDESCRIPTION: Example of complex stage dependencies, where one stage triggers multiple parallel stages (fan-out), and another stage waits for all those parallel stages to complete (fan-in).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: Test\n\n- stage: DeployUS1\n  dependsOn: Test    # this stage runs after Test\n\n- stage: DeployUS2\n  dependsOn: Test    # this stage runs in parallel with DeployUS1, after Test\n\n- stage: DeployEurope\n  dependsOn:         # this stage runs after DeployUS1 and DeployUS2\n  - DeployUS1\n  - DeployUS2\n```\n\n----------------------------------------\n\nTITLE: Creating a ZIP Archive for Web App Deployment in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to create a ZIP file archive ready for publishing to a web app using the ArchiveFiles task in an Azure Pipelines YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_28\n\nLANGUAGE: YAML\nCODE:\n```\n- task: ArchiveFiles@2\n  inputs:\n    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'\n    includeRootFolder: false\n```\n\n----------------------------------------\n\nTITLE: Extension Manifest Configuration\nDESCRIPTION: JSON configuration file (vss-extension.json) that defines the extension's properties, contributions, and file mappings\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/get-started/node.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"manifestVersion\": 1,\n    \"id\": \"my-first-extension\",\n    \"publisher\": \"\",\n    \"version\": \"1.0.0\",\n    \"name\": \"My First Extension\",\n    \"description\": \"A sample Visual Studio Services extension\",\n    \"public\": false,\n    \"categories\": [\"Azure Repos\"],\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services\"\n        }\n    ],\n    \"contributions\": [\n        {\n            \"id\": \"my-hub\",\n            \"type\": \"ms.vss-web.hub\",\n            \"targets\": [\n                \"ms.vss-code-web.code-hub-group\"\n            ],\n            \"properties\": {\n                \"name\": \"My Hub\",\n                \"uri\": \"my-hub.html\"\n            }\n        }\n    ],\n    \"files\": [\n        {\n            \"path\": \"my-hub.html\",\n            \"addressable\": true\n        },\n        {\n            \"path\": \"node_modules/azure-devops-extension-sdk\",\n            \"addressable\": true,\n            \"packagePath\": \"lib\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Parallel Jobs in Azure Pipeline YAML\nDESCRIPTION: YAML configuration to specify parallel strategy and number of jobs to be dispatched in Azure DevOps pipeline. Sets up parallel execution using multiple agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/parallel-testing-any-test-runner.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: ParallelTesting\n  strategy:\n    parallel: 2\n```\n\n----------------------------------------\n\nTITLE: Setting Output Variables with Job Slicing\nDESCRIPTION: This YAML example demonstrates how to set output variables in a job with slicing (parallel execution) and access them in a downstream job. The variable reference includes the job position in the reference path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n\n# Set an output variable from a job with slicing\n- job: A\n  pool:\n    vmImage: 'ubuntu-latest'\n    parallel: 2 # Two slices\n  steps:\n  - bash: echo \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the slice $(system.jobPositionInPhase) value\"\n    name: setvarStep\n  - script: echo $(setvarStep.myOutputVar)\n    name: echovar\n\n# Map the variable from the job for the first slice\n- job: B\n  dependsOn: A\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    myVarFromJobsA1: $[ dependencies.A.outputs['job1.setvarStep.myOutputVar'] ]\n  steps:\n  - script: \"echo $(myVarFromJobsA1)\"\n    name: echovar\n```\n\n----------------------------------------\n\nTITLE: Installing PowerShell Module from Upstream Source\nDESCRIPTION: This command installs a PowerShell module (PSScriptAnalyzer) from the upstream source, which will save a copy to the Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/powershell-upstream-source.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nInstall-Module -Name PSScriptAnalyzer -Repository PSGalleryUpstream\n```\n\n----------------------------------------\n\nTITLE: Fetching Dependencies with `dep ensure` (Pre-1.11) in Shell\nDESCRIPTION: A bash script step for older Go projects using the `dep` tool for dependency management. It checks for the existence of `Gopkg.toml`, installs `dep` using curl if needed, and then runs `dep ensure` to install dependencies based on `Gopkg.lock` and `Gopkg.toml`. This ensures consistent dependency versions. The script is designed for Linux/macOS agents and assumes the `modulePath` working directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/go.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- script: |\n    if [ -f Gopkg.toml ]; then\n        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n        dep ensure\n    fi\n  workingDirectory: '$(modulePath)'\n  displayName: 'Download dep and run `dep ensure`'\n```\n\n----------------------------------------\n\nTITLE: Installing from Private npm Registry using Npm Task in YAML\nDESCRIPTION: Configures the `Npm@1` task in Azure Pipelines YAML to install packages, using credentials from a specified npm service connection (`<Name of npm service connection>`) for authenticating with a private registry defined in the `.npmrc` file. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Npm@1\n  inputs:\n    customEndpoint: <Name of npm service connection>\n```\n\n----------------------------------------\n\nTITLE: VS Code Project Open Command\nDESCRIPTION: Command to open the project directory in Visual Studio Code.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncode .\n```\n\n----------------------------------------\n\nTITLE: Retrieving Secrets and Acquiring Access Tokens in C#\nDESCRIPTION: This code snippet demonstrates how to retrieve a secret from Azure Key Vault using a managed identity and how to acquire a Microsoft Entra access token for an application registration using a certificate. It requires the Azure.Identity and Microsoft.Identity.Client libraries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/service-principal-managed-identity.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\npublic static async Task<string> GetSecret(string keyVaultName, string secretName)\n{\n\tvar keyVaultUri = new Uri(\"https://\" + keyVaultName + \".vault.azure.net\");\n\tvar client = new SecretClient(keyVaultUri, new ManagedIdentityCredential());\n\tvar keyVaultSecret = await client.GetSecretAsync(secretName);\n\n\tvar secret = keyVaultSecret.Value;\n\treturn secret.Value;\n}\n\nprivate static async Task<AuthenticationResult> GetAppRegistrationAADAccessToken(string applicationClientID, string appTenantId)\n{\n\tIConfidentialClientApplication app;\n\n\tbyte[] privateKeyBytes = Convert.FromBase64String(GetSecret(keyVaultName, secretName));\n\tX509Certificate2 certificateWithPrivateKey = new X509Certificate2(privateKeyBytes, (string)null, X509KeyStorageFlags.MachineKeySet);\n\n\tapp = ConfidentialClientApplicationBuilder.Create(applicationClientID)\n\t\t.WithCertificate(certificateWithPrivateKey)\n\t\t.WithAuthority(new Uri(string.Format(CultureInfo.InvariantCulture, \"https://login.microsoftonline.com/{0}\", appTenantId)))\n\t\t.Build();\n\tapp.AddInMemoryTokenCache();\n\n\tstring AdoAppClientID = \"499b84ac-1321-427f-aa17-267ca6975798/.default\";\n\tstring[] scopes = new string[] { AdoAppClientID };\n\n\tvar result = await app.AcquireTokenForClient(scopes).ExecuteAsync();\n\n\treturn result;\n}\n```\n\n----------------------------------------\n\nTITLE: Starting and Initializing Android Emulator via Bash (Bash, YAML Task, Azure DevOps)\nDESCRIPTION: This YAML snippet creates a Bash@3 task that installs the required Android Virtual Device system image, creates and lists a new emulator, and starts it in the background for further automated testing. The script also waits for the emulator to finish booting and then lists connected devices. It is intended for MacOS Microsoft-hosted agents with $ANDROID_HOME set and required SDK tools pre-installed. Emulator launch parameters (system image, device name, etc.) should be adjusted for different test needs; Ubuntu hosted agents are not supported for this.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Bash@3\\n  inputs:\\n    targetType: 'inline'\\n    script: |\\n      #!/usr/bin/env bash\\n\\n      # Install AVD files\\n      echo \"y\" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-35;google_apis;x86_64'\\n\\n      # Create emulator\\n      echo \"y\" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n xamarin_android_emulator -d \"Nexus 10\" -k 'system-images;android-35;google_apis;x86_64' --force\\n\\n      echo \"y\" | $ANDROID_HOME/emulator/emulator -list-avds\\n\\n      echo \"Starting emulator\"\\n\\n      # Start emulator in background\\n      nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -no-snapshot -no-window -no-audio -no-boot-anim -accel on > /dev/null 2>&1 &\\n      # Fixed quoting around \"\\r\"\\n      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d \"\\r\") ]]; do sleep 1; done; input keyevent 82'\\n\\n      $ANDROID_HOME/platform-tools/adb devices\\n\\n      echo \"Emulator started\"\\n\n```\n\n----------------------------------------\n\nTITLE: Using Parameters in Pipeline Conditions\nDESCRIPTION: Example showing how to use a boolean parameter in a condition to control whether a step runs. The condition combines the succeeded() function with a parameter check.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: doThing\n  default: true\n  type: boolean\n\nsteps:\n- script: echo I did a thing\n  condition: and(succeeded(), ${{ eq(parameters.doThing, true) }})\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Node.js Version with UseNode Task in YAML\nDESCRIPTION: Specifies the Node.js version to install on the build agent using the `UseNode@1` task within an Azure Pipelines YAML file. Replace '16.x' with the required version. This task is typically added at the beginning of the job for Azure DevOps 2020 and later when a specific Node.js version is needed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: UseNode@1\n  inputs:\n    version: '16.x' # replace this value with the version that you need for your project\n```\n\n----------------------------------------\n\nTITLE: Using Counter Function in Azure DevOps Pipelines YAML\nDESCRIPTION: Demonstrates how to use the counter function which automatically increments a value with each pipeline run. The counter requires a prefix and a seed value, with a separate counter tracked for each unique prefix value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  major: 1\n  # define minor as a counter with the prefix as variable major, and seed as 100.\n  minor: $[counter(variables['major'], 100)]\n\nsteps:\n- bash: echo $(minor)\n```\n\n----------------------------------------\n\nTITLE: Restoring Maven Packages from Internal Feed (YAML Pipeline)\nDESCRIPTION: YAML pipeline configuration to authenticate with and restore Maven packages from a feed in the same Azure DevOps organization. This uses the MavenAuthenticate task followed by a script task that runs 'mvn install'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/packages/maven-restore.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: MavenAuthenticate@0\n  displayName: 'Maven Authenticate'\n  inputs:\n    artifactsFeeds: 'YOUR_FEED_NAME'\n- script: |\n   mvn install\n```\n\n----------------------------------------\n\nTITLE: Committing Changes in Git Command Line\nDESCRIPTION: Command to save changes to Git as a commit. The -a flag stages all modified files, and the -m flag allows adding a descriptive message to document the changes made.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/gitquickstart.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n> git commit -a -m \"Descriptive message\"\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Duration Percentiles by Pipeline Name with OData\nDESCRIPTION: OData query that calculates 50th, 80th, and 95th percentile durations for a specified pipeline. It filters for successful or partially successful runs after a specified start date and groups results by duration percentiles.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration.md#2025-04-22_snippet_1\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelinename}'\n    and CompletedDate ge {startdate}\n    and (SucceededCount eq 1 or PartiallySucceededCount eq 1)\n    )\n/compute(\n    percentile_cont(TotalDurationSeconds, 0.5) as Duration50thPercentileInSeconds,\n    percentile_cont(TotalDurationSeconds, 0.8) as Duration80thPercentileInSeconds,\n    percentile_cont(TotalDurationSeconds, 0.95) as Duration95thPercentileInSeconds)\n/groupby(\n(Duration50thPercentileInSeconds, Duration80thPercentileInSeconds,Duration95thPercentileInSeconds))\n```\n\n----------------------------------------\n\nTITLE: Triggering Jobs Based on Previous Job Status\nDESCRIPTION: Example showing how to use the result of a previous job in a condition to trigger a dependent job only when the first job succeeds with issues (using continueOnError).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  displayName: Job A\n  continueOnError: true # next job starts even if this one fails\n  steps:\n  - script: echo Job A ran\n  - script: exit 1\n\n- job: B\n  dependsOn: A\n  condition: eq(dependencies.A.result,'SucceededWithIssues') # targets the result of the previous job \n  displayName: Job B\n  steps:\n  - script: echo Job B ran\n```\n\n----------------------------------------\n\nTITLE: Configuring PIP for Azure Artifacts\nDESCRIPTION: Configuration template for pip.ini/pip.conf file to connect to Azure Artifacts feed\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/python-packages.md#2025-04-22_snippet_3\n\nLANGUAGE: ini\nCODE:\n```\n[global]\nindex-url=https://pkgs.dev.azure.com/ORGANIZATION_NAME/PROJECT_NAME/_packaging/FEED_NAME/pypi/simple/\n```\n\n----------------------------------------\n\nTITLE: Checking Build Pipeline Authorization Scope - Azure DevOps Current\nDESCRIPTION: Instructions for determining job authorization scope in current Azure DevOps version for public projects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/access-tokens.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* If the pipeline is in a public project, then the job authorization scope is **project** regardless of any other settings.\n```\n\n----------------------------------------\n\nTITLE: Using Git mv command to fix case conflicts\nDESCRIPTION: Command to resolve filename case conflicts by using Git's mv command with the force flag. This approach allows renaming files with exact capitalization to avoid conflicts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/case-sensitivity.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit mv -f <conflicting name> <non-conflicting name>\n```\n\n----------------------------------------\n\nTITLE: Conditionally Installing Azure DevOps CLI Extension Across Multiple Agent Types (Bash)\nDESCRIPTION: This pipeline demonstrates how to conditionally install the Azure DevOps CLI extension only on agent types that need it. It uses a matrix strategy to run on multiple agent types and conditionally installs the extension on macOS images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\n# Run on multiple Microsoft-hosted agent images\nstrategy:\n  matrix:\n    linux22:\n      imageName: \"ubuntu-22.04\"\n    linux20:\n      imageName: \"ubuntu-20.04\"\n    mac13:\n      imageName: \"macos-13\"\n    mac12:\n      imageName: \"macos-12\"\n    mac11:\n      imageName: \"macos-11\"\n    windows2019:\n      imageName: \"windows-2019\"\n    windows2022:\n      imageName: \"windows-2022\"\n  maxParallel: 3\n\npool:\n  vmImage: $(imageName)\n\nsteps:\n- bash: az --version\n  displayName: 'Show Azure CLI version'\n\n# Install Azure DevOps CLI extension only on macOS images\n- bash: az extension add -n azure-devops\n  condition: contains(variables.imageName, 'mac')\n  displayName: 'Install Azure DevOps extension'\n\n# Azure DevOps CLI extension call that does not require login or credentials\n# since it configures the local environment\n- bash: az devops configure --defaults organization='$(System.TeamFoundationCollectionUri)' project='$(System.TeamProject)' --use-git-aliases true\n  displayName: 'Set default Azure DevOps organization and project'\n\n# Call that does require credentials, use the System.AccessToken PAT\n# and assign to AZURE_DEVOPS_EXT_PAT which is known to Azure DevOps CLI extension\n- bash: |\n    az pipelines build list\n    git pr list\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n  displayName: 'Show build list and PRs'\n```\n\n----------------------------------------\n\nTITLE: Packaging Azure DevOps Extension\nDESCRIPTION: Command to create a VSIX package from the extension manifest file using TFX CLI. This packages all extension files into a deployable format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_2\n\nLANGUAGE: cmd\nCODE:\n```\ntfx extension create --manifest-globs vss-extension.json\n```\n\n----------------------------------------\n\nTITLE: Setting a Basic Variable in PowerShell Script\nDESCRIPTION: Sets a variable named 'myVar' with the value 'foo' using the task.setvariable logging command in a PowerShell script. This variable will be available to subsequent tasks in the same job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- powershell: |\n    Write-Host \"##vso[task.setvariable variable=myVar;]foo\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Work Item Query Operations in C# for Azure DevOps\nDESCRIPTION: Complete implementation of a QueryExecutor class that authenticates with Azure DevOps and executes WIQL queries to fetch work items. The class provides methods to query open bugs and print their details, utilizing the Microsoft.TeamFoundationServer.Client package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/quickstarts/work-item-quickstart.md#2025-04-22_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\n// nuget:Microsoft.TeamFoundationServer.Client\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Microsoft.TeamFoundation.WorkItemTracking.WebApi;\nusing Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models;\nusing Microsoft.VisualStudio.Services.Common;\nusing Microsoft.VisualStudio.Services.WebApi;\n\npublic class QueryExecutor\n{\n    private readonly Uri uri;\n    private readonly string personalAccessToken;\n\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"QueryExecutor\" /> class.\n    /// </summary>\n    /// <param name=\"orgName\">\n    /// An organization in Azure DevOps Services. If you don't have one, you can create one for free:\n    /// <see href=\"https://go.microsoft.com/fwlink/?LinkId=307137\" />.\n    /// </param>\n    /// <param name=\"personalAccessToken\">\n    /// A Personal Access Token, find out how to create one:\n    /// <see href=\"/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\" />.\n    /// </param>\n    public QueryExecutor(string orgName, string personalAccessToken)\n    {\n        this.uri = new Uri(\"https://dev.azure.com/\" + orgName);\n        this.personalAccessToken = personalAccessToken;\n    }\n\n    /// <summary>\n    /// Execute a WIQL (Work Item Query Language) query to return a list of open bugs.\n    /// </summary>\n    /// <param name=\"project\">The name of your project within your organization.</param>\n    /// <returns>A list of <see cref=\"WorkItem\"/> objects representing all the open bugs.</returns>\n    public async Task<IList<WorkItem>> QueryOpenBugs(string project)\n    {\n        var credentials = new VssBasicCredential(string.Empty, this.personalAccessToken);\n        var wiql = new Wiql()\n        {\n            Query = \"Select [Id] \" +\n                    \"From WorkItems \" +\n                    \"Where [Work Item Type] = 'Bug' \" +\n                    \"And [System.TeamProject] = '\" + project + \"' \" +\n                    \"And [System.State] <> 'Closed' \" +\n                    \"Order By [State] Asc, [Changed Date] Desc\",\n        };\n\n        using (var httpClient = new WorkItemTrackingHttpClient(this.uri, new VssCredentials(credentials)))\n        {\n            try\n            {\n                var result = await httpClient.QueryByWiqlAsync(wiql).ConfigureAwait(false);\n                var ids = result.WorkItems.Select(item => item.Id).ToArray();\n\n                if (ids.Length == 0)\n                {\n                    return Array.Empty<WorkItem>();\n                }\n\n                var fields = new[] { \"System.Id\", \"System.Title\", \"System.State\" };\n                return await httpClient.GetWorkItemsAsync(ids, fields, result.AsOf).ConfigureAwait(false);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(\"Error querying work items: \" + ex.Message);\n                return Array.Empty<WorkItem>();\n            }\n        }\n    }\n\n    /// <summary>\n    /// Execute a WIQL (Work Item Query Language) query to print a list of open bugs.\n    /// </summary>\n    /// <param name=\"project\">The name of your project within your organization.</param>\n    /// <returns>An async task.</returns>\n    public async Task PrintOpenBugsAsync(string project)\n    {\n        var workItems = await this.QueryOpenBugs(project).ConfigureAwait(false);\n        Console.WriteLine(\"Query Results: {0} items found\", workItems.Count);\n\n        foreach (var workItem in workItems)\n        {\n            Console.WriteLine(\n                \"{0}\\t{1}\\t{2}\",\n                workItem.Id,\n                workItem.Fields[\"System.Title\"],\n                workItem.Fields[\"System.State\"]);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Conditional Job Execution Based on Output Variables\nDESCRIPTION: Example showing how to run a job based on output variables from a previous job. Job B only runs when the 'skipsubsequent' output variable from Job A is not set to 'true'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - script: \"echo '##vso[task.setvariable variable=skipsubsequent;isOutput=true]false'\"\n    name: printvar\n\n- job: B\n  condition: and(succeeded(), ne(dependencies.A.outputs['printvar.skipsubsequent'], 'true'))\n  dependsOn: A\n  steps:\n  - script: echo hello from B\n```\n\n----------------------------------------\n\nTITLE: Publishing with Microsoft Entra Token using Azure CLI (Bash)\nDESCRIPTION: Commands to authenticate as a service principal via Azure CLI in Bash and retrieve the service principal's profile information needed for publisher membership.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/command-line.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz login --service-principal --username <appId> --password <password> --tenant <tenant-id>\n# 499b84ac-1321-427f-aa17-267ca6975798 specifies azure devops as a resource\naz rest -u https://app.vssps.visualstudio.com/_apis/profile/profiles/me --resource 499b84ac-1321-427f-aa17-267ca6975798\n```\n\n----------------------------------------\n\nTITLE: Configuring Rolling Deployment Strategy in YAML Pipelines\nDESCRIPTION: YAML configuration for setting up rolling deployments in Azure Pipelines. This structure allows defining maximum parallel deployments, pre-deployment steps, deployment steps, traffic routing, and success/failure handlers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deployment-group-phases.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nstrategy:\n  rolling:\n    maxParallel: [ number or percentage as x% ]\n    preDeploy:        \n      steps:\n      - script: [ script | bash | pwsh | powershell | checkout | task | templateReference ]\n    deploy:          \n      steps:\n      ...\n    routeTraffic:         \n      steps:\n      ...        \n    postRouteTraffic:          \n      steps:\n      ...\n    on:\n      failure:         \n        steps:\n        ...\n      success:          \n        steps:\n        ...\n```\n\n----------------------------------------\n\nTITLE: Creating a Draft Pull Request with Azure CLI\nDESCRIPTION: This example shows how to create a pull request in draft mode using Azure CLI. Draft PRs indicate work in progress and don't trigger automatic build validations or required reviewers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-requests.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr create --repository Fabrikam --source-branch new --draft true\n```\n\n----------------------------------------\n\nTITLE: Client Certificate Configuration\nDESCRIPTION: Command to configure agent with SSL client certificate authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/certificate.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n.\\config.cmd/sh --sslcacert ca.pem --sslclientcert clientcert.pem --sslclientcertkey clientcert-key-pass.pem --sslclientcertarchive clientcert-archive.pfx --sslclientcertpassword \"mypassword\"\n```\n\n----------------------------------------\n\nTITLE: JavaScript for Fetching Query Data Using Azure DevOps REST API\nDESCRIPTION: JavaScript code that uses the WorkItemTracking REST client to fetch information about a specific query from Azure DevOps. It handles both success and failure scenarios through promises.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nVSS.require([\"AzureDevOps/Dashboards/WidgetHelpers\", \"AzureDevOps/WorkItemTracking/RestClient\"], \n    function (WidgetHelpers, TFS_Wit_WebApi) {\n        WidgetHelpers.IncludeWidgetStyles();\n        VSS.register(\"HelloWorldWidget2\", function () { \n            var projectId = VSS.getWebContext().project.id;\n\n            var getQueryInfo = function (widgetSettings) {\n                // Get a WIT client to make REST calls to Azure DevOps Services\n                return TFS_Wit_WebApi.getClient().getQuery(projectId, \"Shared Queries/Feedback\")\n                    .then(function (query) {\n                        // Do something with the query\n\n                        return WidgetHelpers.WidgetStatusHelper.Success();\n                    }, function (error) {                            \n                        return WidgetHelpers.WidgetStatusHelper.Failure(error.message);\n                    });\n            }\n\n            return {\n                load: function (widgetSettings) {\n                    // Set your title\n                    var $title = $('h2.title');\n                    $title.text('Hello World');\n\n                    return getQueryInfo(widgetSettings);\n                }\n            }\n        });\n        VSS.notifyLoadSucceeded();\n    });\n```\n\n----------------------------------------\n\nTITLE: Building Java Apps with Maven - Azure Pipelines YAML\nDESCRIPTION: Defines a build step using the Maven task in Azure Pipelines to build a Java project via Maven. It sets the path to the 'pom.xml', memory and JDK settings, enables publishing of JUnit test results, defines the output format for test results, and sets 'goals' for Maven to execute (e.g., 'package'). Dependencies: Azure Pipelines agent with Java and Maven, and a valid Maven project. Inputs: Paths to build files, memory settings, JDK config, Maven goals. Outputs: Maven build artifacts and test reports. Limitations: Tasks assume a preset repository structure and Azure Pipelines environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Maven@4\n  inputs:\n    mavenPomFile: 'pom.xml'\n    mavenOptions: '-Xmx3072m'\n    javaHomeOption: 'JDKVersion'\n    jdkVersionOption: 'default'\n    jdkArchitectureOption: 'x64'\n    publishJUnitResults: true\n    testResultsFiles: '**/TEST-*.xml'\n    goals: 'package'\n```\n\n----------------------------------------\n\nTITLE: Multi-Version Extension Directory Structure Example\nDESCRIPTION: Demonstrates the recommended folder structure for an extension containing multiple versions of tasks. Shows how to organize multiple task versions and multiple tasks within a single extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/integrate-build-task.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n* extensionManifest.json\n* extensionIcon.png\n* Task1\n  * Task1V1\n    * task.json\n    * icon.png\n    * taskScript.ps1\n  * Task1V2\n    * task.json\n    * icon.png\n    * taskScript.ps1\n* Task2\n  * Task2V1\n    * task.json\n    * icon.png\n    * taskScript.ps1\n  * Task2V2\n    * task.json\n    * icon.png\n    * taskScript.ps1\n```\n\n----------------------------------------\n\nTITLE: Setting User Home Environment Variable in Docker-in-Docker - Bash\nDESCRIPTION: Sets the DIND_USER_HOME environment variable for the Docker-in-Docker (DIND) user home directory. Allows the path to be passed to the inner Docker container at runtime, working around the lack of mount propagation between containers. Requires the outer container&rsquo;s $HOME to be properly set and Docker Engine to be available.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\ndocker run ... --env DIND_USER_HOME=$HOME ...\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Pass Rate by Branch\nDESCRIPTION: PowerBI query that retrieves pipeline pass rate data filtered by branch name. Calculates success, failure and partial success rates while grouping results by branch and completion date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-pass-rate-trend.md#2025-04-22_snippet_4\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and CanceledCount ne 1 \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(Branch/BranchName, CompletedOn/Date), \"\n                &\"aggregate \"\n                &\"($count as TotalCount, \"\n            &\"SucceededCount with sum as SucceededCount , \"\n                &\"FailedCount with sum as FailedCount, \"\n            &\"PartiallySucceededCount with sum as PartiallySucceededCount)) \"\n        &\"/compute( \"\n    &\"SucceededCount mul 100.0 div TotalCount as PassRate, \"\n    &\"FailedCount mul 100.0 div TotalCount as FailRate, \"\n    &\"PartiallySucceededCount mul 100.0 div TotalCount as PartiallySuccessfulRate) \"\n    &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Defining a Daily Midnight Build Schedule in YAML\nDESCRIPTION: This YAML snippet defines a schedule for a daily build that runs at midnight on the main branch. It uses cron syntax to specify the schedule timing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: '0 0 * * *'\n  displayName: Daily midnight build\n  branches:\n    include:\n    - main\n```\n\n----------------------------------------\n\nTITLE: Running Rake Tasks in Azure Pipelines (YAML)\nDESCRIPTION: This snippet executes the default Rake tasks in the project using Bundler, typically running tests and build automation steps as defined in the project's Rakefile. Assumes previous dependency installation and presence of a valid Rakefile and Gemfile. The output depends on the Rakefile contents—usually, it will run unit tests and report results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/ruby.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- script: bundle exec rake\\n  displayName: 'bundle exec rake'\\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Version in Azure Pipelines (YAML)\nDESCRIPTION: This snippet sets up the build environment in Azure Pipelines using a Microsoft-hosted agent, and configures a specific Ruby version (2.5 or higher) using the UseRubyVersion pipeline task. Required dependency: Azure DevOps agent with UseRubyVersion@0 task availability. Key parameters are the desired Ruby version and the agent pool image. The output is an environment ready to run Ruby scripts. Other prerequisites may include project files compatible with the requested Ruby version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/ruby.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# https://learn.microsoft.com/azure/devops/pipelines/ecosystems/ruby\\npool:\\n  vmImage: 'ubuntu-latest' # other options: 'macOS-latest', 'windows-latest'\\n\\nsteps:\\n- task: UseRubyVersion@0\\n  inputs:\\n    versionSpec: '>= 2.5'\\n    addToPath: true\\n\n```\n\n----------------------------------------\n\nTITLE: Downloading Pipeline Artifact using YAML Task in Azure DevOps\nDESCRIPTION: This YAML snippet demonstrates how to use the DownloadPipelineArtifact@2 task to download a pipeline artifact. It specifies the artifact name as an input.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DownloadPipelineArtifact@2\n  inputs:\n    artifact: WebApp\n```\n\n----------------------------------------\n\nTITLE: Example of Updating Work Item Linking Policy\nDESCRIPTION: This example demonstrates updating a work item linking policy for the 'main' branch of a specific repository. It sets the policy to be enabled but non-blocking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy work-item-linking update --id 3 --blocking false --branch main --enabled true --repository-id d28cd374-e7f0-4b1f-ad60-f349f155d47c --output table\n```\n\n----------------------------------------\n\nTITLE: Downloading Universal Package from External Feed using Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to download a Universal Package from an external feed (e.g., another Azure DevOps organization or external source) in an Azure Pipeline. It utilizes the UniversalPackages@0 task, setting `feedsToUse` to `external` and providing the necessary service connection name (`externalFeedCredentials`), external feed name, package name, and version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/universal-packages.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: UniversalPackages@0\n  displayName: Download a Universal Package\n  inputs:\n    command: download\n    feedsToUse: external                                        ## Set the value to `external` when downloading from an external source \n    externalFeedCredentials: 'MSENG2'                           ## Name of the service connection to the external feed\n    feedDownloadExternal: 'fabrikamFeedExternal'                ## Name of the external feed\n    packageDownloadExternal: 'fabrikam-package'                 ## The package name you wish to download\n    versionDownloadExternal: 1.0.0                              ## The version of the package you wish to download\n```\n\n----------------------------------------\n\nTITLE: Creating a Microsoft DevOps Pool with Azure Key Vault Integration using Azure CLI\nDESCRIPTION: This command demonstrates how to create a Microsoft DevOps pool with Azure Key Vault configuration using the Azure CLI. It references a fabric-profile.json file that contains the detailed configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --fabric-profile fabric-profile.json\n   # other parameters omitted for space\n```\n\n----------------------------------------\n\nTITLE: Creating a Template to Prevent Script Execution in Azure Pipelines\nDESCRIPTION: A template that prevents execution of inline scripts by filtering out certain task types. This enhances security by restricting which commands can run in a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n# template.yml\nparameters:\n- name: usersteps\n  type: stepList\n  default: []\nsteps:\n- ${{ each step in parameters.usersteps }}:\n  - ${{ if not(or(startsWith(step.task, 'Bash'),startsWith(step.task, 'CmdLine'),startsWith(step.task, 'PowerShell'))) }}:  \n    - ${{ step }}\n  # The following lines replace tasks like Bash@3, CmdLine@2, PowerShell@2\n  - ${{ else }}:  \n    - ${{ each pair in step }}:\n        ${{ if eq(pair.key, 'inputs') }}:\n          inputs:\n            ${{ each attribute in pair.value }}:\n              ${{ if eq(attribute.key, 'script') }}:\n                script: echo \"Script removed by template\"\n              ${{ else }}:\n                ${{ attribute.key }}: ${{ attribute.value }}\n        ${{ elseif ne(pair.key, 'displayName') }}:\n          ${{ pair.key }}: ${{ pair.value }}\n\n          displayName: 'Disabled by template: ${{ step.displayName }}'\n```\n\n----------------------------------------\n\nTITLE: Basic Pipeline Parameters with VM Image Selection\nDESCRIPTION: Demonstrates how to define a basic pipeline with runtime parameters to select different hosted agent images. Includes parameter definition and usage in pool configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runtime-parameters.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: image\n  displayName: Pool Image\n  type: string\n  default: ubuntu-latest\n  values:\n  - windows-latest\n  - ubuntu-latest\n  - macOS-latest\n\ntrigger: none\n\njobs:\n- job: build\n  displayName: build\n  pool: \n    vmImage: ${{ parameters.image }}\n  steps:\n  - script: echo building $(Build.BuildNumber) with ${{ parameters.image }}\n```\n\n----------------------------------------\n\nTITLE: Parallel Jobs in Travis vs Azure Pipelines\nDESCRIPTION: Comparison of how to define parallel job execution in Travis CI using stages and in Azure Pipelines using explicit dependencies, showing a multi-stage build, test, package, and deploy workflow.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\njobs:\n  include:\n  - stage: build\n    script: ./build.sh\n  - stage: test\n    script: ./test.sh unit_tests\n  - script: ./test.sh integration_tests\n  - stage: package\n    script: ./package.sh\n  - stage: deploy\n    script: ./deploy.sh pre_prod\n```\n\nLANGUAGE: YAML\nCODE:\n```\njobs:\n- job: build\n  steps:\n  - script: ./build.sh\n- job: test1\n  dependsOn: build\n  steps:\n  - script: ./test.sh unit_tests\n- job: test2\n  dependsOn: build\n  steps:\n  - script: ./test.sh integration_tests\n- job: package\n  dependsOn:\n  - test1\n  - test2\n  script: ./package.sh\n- job: deploy\n  dependsOn: package\n  steps:\n  - script: ./deploy.sh pre_prod\n```\n\n----------------------------------------\n\nTITLE: Combining Variable Groups and Standalone Variables in YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to use both a linked variable group and a standalone variable in a YAML pipeline. It shows the correct syntax for including a variable group and defining a standalone variable using the name-value format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- group: my-variable-group\n- name: my-standalone-variable\n  value: 'my-standalone-variable-value'\n```\n\n----------------------------------------\n\nTITLE: Enabling Verbose System Debug Logging - Azure DevOps YAML\nDESCRIPTION: This YAML code sets the system.debug pipeline variable to 'true', which enables verbose diagnostic logging across pipeline runs in Azure DevOps. The variable is configured globally for the pipeline or template, increasing log verbosity for troubleshooting purposes. No external dependencies are required beyond access to edit the pipeline variables. The input is the variable name and value, and the effect is that all pipeline tasks emit detailed log information for the duration of the run or until the variable is unset. Particularly useful for analyzing build and deployment issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/variables.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  system.debug: 'true'\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Completion Percentage for Features in Azure DevOps using Power BI\nDESCRIPTION: This Power BI query retrieves Feature work items from a specific iteration and area, and calculates the percentage of work completed based on the rollup of completed hours for all tasks linked to the requirements. It includes transformations to expand the descendants data and convert column types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview-rollup.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems? \n$filter=( \n    IterationSK eq {iterationSK}\n    and AreaSK eq {areaSK}\n    and WorkItemType eq 'Feature'\n)\n&$expand=Descendants( \n    $apply=filter( CompletedWork ne null or RemainingWork ne null ) \n    /aggregate( \n        iif(CompletedWork ne null, CompletedWork, 0) with sum as SumCompletedWork, \n        iif(RemainingWork ne null, RemainingWork, 0) with sum as SumRemainingWork \n    ) \n    /compute( \n        (SumCompletedWork add SumRemainingWork) as TotalWork, \n        SumCompletedWork as SumCompleted \n    ) \n    /compute( \n        iif(TotalWork gt 0,(SumCompleted div cast(TotalWork, Edm.Double) mul 100), 0) as PercCompletedWork \n    ) \n)\n&$select=WorkItemId, Title\", null, [Implementation=\"2.0\"]),\n    #\"Expanded Descendants\" = Table.ExpandTableColumn(Source, \"Descendants\", {\"SumCompletedWork\", \"SumRemainingWork\", \"TotalWork\", \"SumCompleted\", \"PercCompletedWork\"}, {\"Descendants.SumCompletedWork\", \"Descendants.SumRemainingWork\", \"Descendants.TotalWork\", \"Descendants.SumCompleted\", \"Descendants.PercCompletedWork\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Descendants\",{{\"Descendants.SumCompletedWork\", type number}, {\"Descendants.SumRemainingWork\", type number}, {\"Descendants.TotalWork\", type number}, {\"Descendants.SumCompleted\", type number}, {\"Descendants.PercCompletedWork\", type number}})\nin\n    #\"Changed Type\"\n```\n\n----------------------------------------\n\nTITLE: Cloning a Git Repository from Azure DevOps\nDESCRIPTION: This command clones a Git repository from Azure DevOps to the local machine. It creates a complete local copy of the repo including all commits and branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-new-repo.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://dev.azure.com/fabrikam-fiber/MyFirstProject/_git/\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure Key Vault in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to access Azure Key Vault secrets in an Azure DevOps pipeline. It includes the AzureKeyVault task to retrieve secrets and additional tasks to create a file with the secret content, copy it, and publish it as an artifact.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/azure-key-vault.md#2025-04-22_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n- task: AzureKeyVault@2\n  displayName: Azure Key Vault\n  inputs:\n    azureSubscription: 'SERVICE_CONNECTION_NAME'\n    KeyVaultName: 'KEY_VAULT_NAME'\n    SecretsFilter: '*'\n    RunAsPreJob: false\n\n- task: CmdLine@2\n  displayName: Create file\n  inputs:\n    script: 'echo $(SECRET_NAME) > secret.txt'\n\n- task: CopyFiles@2\n  displayName: Copy file\n  inputs:\n    Contents: secret.txt\n    targetFolder: '$(Build.ArtifactStagingDirectory)'\n\n- task: PublishBuildArtifacts@1\n  displayName: Publish Artifact\n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n    ArtifactName: 'drop'\n    publishLocation: 'Container'\n```\n\n----------------------------------------\n\nTITLE: Setting a Non-Skippable Stage in Azure DevOps YAML Pipeline\nDESCRIPTION: Shows how to mark a stage as non-skippable with the isSkippable property set to false. This prevents users from bypassing critical stages such as security scanning or malware detection during pipeline execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n- stage: malware_detection\n  displayName: Malware detection\n  isSkippable: false\n  jobs:\n  - job: check_job\n    ...\n```\n\n----------------------------------------\n\nTITLE: Connecting to Azure Container Registry\nDESCRIPTION: This snippet demonstrates how to reference an Azure Container Registry using a service connection to access private container images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/container-phases.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ncontainer:\n  image: myprivate.azurecr.io/windowsservercore:1803\n  endpoint: my_acr_connection\n```\n\n----------------------------------------\n\nTITLE: Using Formatting Commands in Bash\nDESCRIPTION: Demonstrates the use of various formatting commands in a Bash script to create groups, warnings, errors, sections, debug messages, and command-line outputs in the pipeline logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- bash: |\n    echo \"##[group]Beginning of a group\"\n    echo \"##[warning]Warning message\"\n    echo \"##[error]Error message\"\n    echo \"##[section]Start of a section\"\n    echo \"##[debug]Debug text\"\n    echo \"##[command]Command-line being run\"\n    echo \"##[endgroup]\"\n```\n\n----------------------------------------\n\nTITLE: Publishing Universal Package with YAML Pipeline\nDESCRIPTION: YAML snippet for publishing a Universal Package using Azure Pipelines. Specifies the publish directory, feed name, package name, and description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/universal-packages.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: UniversalPackages@0\n  displayName: Publish\n  inputs:\n    command: publish\n    publishDirectory: '$(Build.ArtifactStagingDirectory)'        ## Location of the files you wish to publish\n    vstsFeedPublish: '<PROJECT_NAME>/<FEED_NAME>'                ## The project and feed name to publish to. If you're working with an organization-scoped feed, specify only the feed name\n    vstsFeedPackagePublish: '<PACKAGE_NAME>'                     ## The package name. Must be lower case. Use only letters, numbers, and dashes\n    packagePublishDescription: '<PACKAGE_DESCRIPTION>'           ## Description of the package content\n```\n\n----------------------------------------\n\nTITLE: Running Flask App Locally on Windows using PowerShell\nDESCRIPTION: Executes a sequence of PowerShell commands to prepare and run the Python Flask application locally on a Windows environment. It creates a virtual environment (`.env`), activates it, installs required packages from `requirements.txt`, sets the `FLASK_APP` environment variable, and starts the Flask development server. Requires Python 3 and pip to be installed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\npy -m venv .env\n.env\\scripts\\activate\npip install -r ./requirements.txt\n$env:FLASK_APP = \"hello_app.webapp\"\nflask run\n```\n\n----------------------------------------\n\nTITLE: Start Script for Azure Pipelines Agent in Docker\nDESCRIPTION: Bash script to configure and start the Azure Pipelines agent in a Docker container. It handles authentication, agent configuration, and cleanup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\nset -e\n\nif [ -z \"${AZP_URL}\" ]; then\n  echo 1>&2 \"error: missing AZP_URL environment variable\"\n  exit 1\nfi\n\nif [ -n \"$AZP_CLIENTID\" ]; then\n  echo \"Using service principal credentials to get token\"\n  az login --allow-no-subscriptions --service-principal --username \"$AZP_CLIENTID\" --password \"$AZP_CLIENTSECRET\" --tenant \"$AZP_TENANTID\"\n  # adapted from https://learn.microsoft.com/en-us/azure/databricks/dev-tools/user-aad-token\n  AZP_TOKEN=$(az account get-access-token --query accessToken --output tsv)\n  echo \"Token retrieved\"\nfi\n\nif [ -z \"${AZP_TOKEN_FILE}\" ]; then\n  if [ -z \"${AZP_TOKEN}\" ]; then\n    echo 1>&2 \"error: missing AZP_TOKEN environment variable\"\n    exit 1\n  fi\n\n  AZP_TOKEN_FILE=\"/azp/.token\"\n  echo -n \"${AZP_TOKEN}\" > \"${AZP_TOKEN_FILE}\"\nfi\n\nunset AZP_CLIENTSECRET\nunset AZP_TOKEN\n\nif [ -n \"${AZP_WORK}\" ]; then\n  mkdir -p \"${AZP_WORK}\"\nfi\n\ncleanup() {\n  trap \"\" EXIT\n\n  if [ -e ./config.sh ]; then\n    print_header \"Cleanup. Removing Azure Pipelines agent...\"\n\n    # If the agent has some running jobs, the configuration removal process will fail.\n    # So, give it some time to finish the job.\n    while true; do\n      ./config.sh remove --unattended --auth \"PAT\" --token $(cat \"${AZP_TOKEN_FILE}\") && break\n\n      echo \"Retrying in 30 seconds...\"\n      sleep 30\n    done\n  fi\n}\n\nprint_header() {\n  lightcyan=\"\\033[1;36m\"\n  nocolor=\"\\033[0m\"\n  echo -e \"\\n${lightcyan}$1${nocolor}\\n\"\n}\n\n# Let the agent ignore the token env variables\nexport VSO_AGENT_IGNORE=\"AZP_TOKEN,AZP_TOKEN_FILE\"\n\nprint_header \"1. Determining matching Azure Pipelines agent...\"\n\nAZP_AGENT_PACKAGES=$(curl -LsS \\\n    -u user:$(cat \"${AZP_TOKEN_FILE}\") \\\n    -H \"Accept:application/json\" \\\n    \"${AZP_URL}/_apis/distributedtask/packages/agent?platform=${TARGETARCH}&top=1\")\n\nAZP_AGENT_PACKAGE_LATEST_URL=$(echo \"${AZP_AGENT_PACKAGES}\" | jq -r \".value[0].downloadUrl\")\n\nif [ -z \"${AZP_AGENT_PACKAGE_LATEST_URL}\" -o \"${AZP_AGENT_PACKAGE_LATEST_URL}\" == \"null\" ]; then\n  echo 1>&2 \"error: could not determine a matching Azure Pipelines agent\"\n  echo 1>&2 \"check that account \\\"${AZP_URL}\\\" is correct and the token is valid for that account\"\n  exit 1\nfi\n\nprint_header \"2. Downloading and extracting Azure Pipelines agent...\"\n\ncurl -LsS \"${AZP_AGENT_PACKAGE_LATEST_URL}\" | tar -xz & wait $!\n\nsource ./env.sh\n\ntrap \"cleanup; exit 0\" EXIT\ntrap \"cleanup; exit 130\" INT\ntrap \"cleanup; exit 143\" TERM\n\nprint_header \"3. Configuring Azure Pipelines agent...\"\n\n# Despite it saying \"PAT\", it can be the token through the service principal\n./config.sh --unattended \\\n  --agent \"${AZP_AGENT_NAME:-$(hostname)}\" \\\n  --url \"${AZP_URL}\" \\\n  --auth \"PAT\" \\\n  --token $(cat \"${AZP_TOKEN_FILE}\") \\\n  --pool \"${AZP_POOL:-Default}\" \\\n  --work \"${AZP_WORK:-_work}\" \\\n  --replace \\\n  --acceptTeeEula & wait $!\n\nprint_header \"4. Running Azure Pipelines agent...\"\n\nchmod +x ./run.sh\n\n# To be aware of TERM and INT signals call ./run.sh\n# Running it with the --once flag at the end will shut down the agent after the build is executed\n./run.sh \"$@\" & wait $!\n```\n\n----------------------------------------\n\nTITLE: Cloning a Git Repository to a Local Folder\nDESCRIPTION: Clone an existing Git repository from a URL into a specified local folder. This creates a full copy of the repository with its complete history.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit clone URL foldername\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Tool Directory Structure for Self-hosted Agent\nDESCRIPTION: Shows the required directory structure for setting up Python in the agent tools directory. The structure includes version number and platform-specific folders with tool files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_11\n\nLANGUAGE: console\nCODE:\n```\n$AGENT_TOOLSDIRECTORY/\n    Python/\n        {version number}/\n            {platform}/\n                {tool files}\n            {platform}.complete\n```\n\n----------------------------------------\n\nTITLE: Defining Menu Action Contribution in Extension Manifest (JSON)\nDESCRIPTION: This JSON snippet adds a menu action to the contributions section of the extension manifest. It specifies the action's properties including text, icon, and target location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-action.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": \"myAction\",\n            \"type\": \"ms.vss-web.action\",\n            \"description\": \"Run in Hello hub action\",\n            \"targets\": [\n                \"ms.vss-work-web.work-item-query-menu\"\n            ],\n            \"properties\": {\n                \"text\": \"Run in Hello hub\",\n                \"title\": \"Run in Hello hub\",\n                \"icon\": \"images/icon.png\",\n                \"groupId\": \"actions\",\n                \"uri\": \"action.html\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Globally Installing npm Package using Script in YAML\nDESCRIPTION: Executes `npm install -g @angular/cli` within a script step in Azure Pipelines YAML to install the Angular CLI globally on the build agent. On Microsoft-hosted Linux agents, prefixing with `sudo` might be required. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- script: npm install -g @angular/cli\n```\n\n----------------------------------------\n\nTITLE: Initializing Build Stage in YAML Pipeline for Azure DevOps\nDESCRIPTION: Sets up the initial build stage of the pipeline, including trigger configuration, pool specification, and basic build steps like restoring dependencies and running unit tests.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/run-stages.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nstages:\n- stage: Build\n  displayName: 'Build Stage'\n  jobs:\n  - job: BuildJob\n    displayName: 'Build Job'\n    steps:\n    - script: |\n        echo \"Restoring project dependencies...\"\n      displayName: 'Restore dependencies'\n    - script: |\n        echo \"Running unit tests...\"\n      displayName: 'Run unit tests'\n```\n\n----------------------------------------\n\nTITLE: Installing Kubelogin for Kubernetes Tasks in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to install kubelogin using the KubeloginInstaller@0 task before a Kubernetes-related task (like HelmDeploy@0) runs. This is necessary when targeting Azure Kubernetes Service (AKS) configured with Azure Active Directory integration, as kubelogin is not pre-installed on hosted agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-224-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n - task: KubeloginInstaller@0\n\n - task: HelmDeploy@0\n   # arguments do not need to be modified to use kubelogin\n```\n\n----------------------------------------\n\nTITLE: Installing PHP Dependencies with Composer in Azure Pipelines\nDESCRIPTION: A YAML script task for Azure Pipelines that executes `composer install` to download and install project dependencies defined in the `composer.json` file. The `--no-interaction` flag prevents prompts, and `--prefer-dist` favors downloading distribution packages over source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/php.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- script: composer install --no-interaction --prefer-dist\n  displayName: 'composer install'\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies using Npm Task in YAML\nDESCRIPTION: Utilizes the `Npm@1` task in Azure Pipelines YAML to execute the `npm install` command. This installs all dependencies defined in the project's `package.json` or `package-lock.json`. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Npm@1\n  inputs:\n     command: 'install'\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Repository Triggers in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to set up triggers for multiple repository resources in an Azure Pipeline. It includes trigger configurations for the self repository and two additional repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/multi-repo-checkout.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n- feature\n\nresources:\n  repositories:\n  - repository: A\n    type: git\n    name: MyProject/A\n    ref: main\n    trigger:\n    - main\n\n  - repository: B\n    type: git\n    name: MyProject/B\n    ref: release\n    trigger:\n    - main\n    - release\nsteps:\n- checkout: self\n- checkout: A\n- checkout: B\n```\n\n----------------------------------------\n\nTITLE: Publishing Maven Artifacts to Same-Organization Feed (YAML)\nDESCRIPTION: This YAML snippet authenticates with Azure Artifacts feeds and publishes Maven artifacts using the 'mvn deploy' command. It uses the MavenAuthenticate task to handle authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/publish-maven-artifacts.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: MavenAuthenticate@0\n  displayName: 'Authenticate to Azure Artifacts feed'\n  inputs:\n    artifactsFeeds: 'MavenDemo,MavenDemoFeed2'        ## Select one or multiple feeds to authenticate with.\n- script: |\n   mvn deploy\n  displayName: 'Publish'\n```\n\n----------------------------------------\n\nTITLE: Creating a Conditional Error Handler Job in Azure DevOps YAML Pipeline\nDESCRIPTION: This YAML snippet defines an error handler job that creates a bug work item when the previous job fails. It uses a bash script with curl to call the Azure DevOps API and create a work item of type 'Bug' with the title 'git clone failed'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n# This job creates a work item, and only runs if the previous job failed\n- job: ErrorHandler\n  dependsOn: Work\n  condition: failed()\n  steps: \n  - bash: |\n      curl \\\n        -X POST \\\n        -H 'Authorization: Basic $(System.AccessToken)' \\\n        -H 'Content-Type: application/json-patch+json' \\\n        -d '[\n              {\n                \"op\": \"add\",\n                \"path\": \"/fields/System.Title\",\n                \"from\": null,\n                \"value\": \"git clone failed\"\n              }\n            ]' \\\n        \"$(System.CollectionUri)$(System.TeamProject)/_apis//wit/workitems/$Bug?api-version=7.1-preview.3\n\"\n    env:\n        SYSTEM_ACCESSTOKEN: $(System.AccessToken)\n    displayName: 'Create work item on failure'\n```\n\n----------------------------------------\n\nTITLE: Publishing npm Packages to Same Organization Feed (YAML)\nDESCRIPTION: YAML pipeline configuration for publishing npm packages to a feed within the same Azure DevOps organization. It includes steps for setting up Node.js, authenticating with Azure Artifacts, and running the npm publish command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/npm.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: NodeTool@0\n  inputs:\n    checkLatest: true\n\n- task: npmAuthenticate@0\n  displayName: 'Authenticate to Azure Artifacts feed'\n  inputs:\n    workingFile: .npmrc\n\n- script: |\n   npm publish\n  displayName: Publish\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Agent with AutoLogon\nDESCRIPTION: Command to configure agent with automatic logon using PAT authentication, specifying agent name, pool, and Windows credentials\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/troubleshooting-autologon.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\n.\\config.cmd --unattended --agent '<agent-name>' --pool '<agent-pool-name>' --url '<azure-dev-ops-organization-url>' --auth 'PAT' --token '<token>' --runAsAutoLogon --windowsLogonAccount '<domain\\user-name>' --windowsLogonPassword '<windows-password>'\n```\n\n----------------------------------------\n\nTITLE: Adding Build Tag to Future Build using YAML in Azure Pipelines\nDESCRIPTION: This YAML snippet demonstrates how to add a build tag to a future build using the 'addbuildtag' logging command. It creates a tag with the current date and applies it to the build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/build-tag.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: |\n    last_scanned=\"last_scanned-$(date +%Y%m%d)\"\n    echo \"##vso[build.addbuildtag]$last_scanned\"\n  displayName: 'Apply last scanned tag'\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet for Project-scoped Feed in Azure DevOps\nDESCRIPTION: XML configuration for nuget.config file to connect to a project-scoped feed in Azure DevOps. This snippet specifies the package source URL for the feed, including the project name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/publish.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<SOURCE_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Creating Work Items on Pipeline Failure using Azure DevOps CLI in YAML Pipelines\nDESCRIPTION: This YAML pipeline example demonstrates how to create a work item automatically when a pipeline fails, which replaces the 'Create work item on failure' setting available in classic build pipelines. It uses a parameter to control success/failure, a work job that can be configured to fail, and an error handler job that creates a bug work item using the Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\n# When manually running the pipeline, you can select whether it\n# succeeds or fails.\nparameters:\n- name: succeed\n  displayName: Succeed or fail\n  type: boolean\n  default: false\n\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\njobs:\n- job: Work\n  steps:\n  - script: echo Hello, world!\n    displayName: 'Run a one-line script'\n\n  # This malformed command causes the job to fail\n  # Only run this command if the succeed variable is set to false\n  - script: git clone malformed input\n    condition: eq(${{ parameters.succeed }}, false)\n\n# This job creates a work item, and only runs if the previous job failed\n- job: ErrorHandler\n  dependsOn: Work\n  condition: failed()\n  steps: \n  - bash: |\n      az boards work-item create \\\n        --title \"Build $(build.buildNumber) failed\" \\\n        --type bug \\\n        --org $(System.TeamFoundationCollectionUri) \\\n        --project $(System.TeamProject)\n    env: \n      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n    displayName: 'Create work item on failure'\n```\n\n----------------------------------------\n\nTITLE: Configuring App Service Startup File using Azure CLI\nDESCRIPTION: Uses the Azure CLI command `az webapp config set` to configure the startup command file for an existing Azure App Service web app. This is necessary when the application requires a specific command or script to start correctly, as defined in the `startup.txt` file for this sample project. Requires the resource group name and web app name as parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz webapp config set --resource-group <your-resource-group> --name <your-web-app-name> --startup-file startup.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Restricted Approvers for ManualValidation Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates configuring the 'ManualValidation' task (version 1) with enhanced security parameters. It specifies the 'Release Approvers' group in both 'notifyUsers' and 'approvers' inputs, restricting task completion to members of this group. Additionally, 'allowApproversToApproveTheirOwnRuns' is set to 'false', preventing the user who initiated the pipeline run from approving their own run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-248-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n- task: ManualValidation@1\n  inputs:\n    notifyUsers: 'Release Approvers'\n    approvers: 'Release Approvers'\n    allowApproversToApproveTheirOwnRuns: false\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch-Specific Schedule in Azure DevOps Pipeline\nDESCRIPTION: YAML configuration demonstrating how to set up a scheduled pipeline run for a specific branch. The example shows a weekly Sunday noon (UTC) schedule targeting the features/X branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nschedules: \n- cron: '0 12 * * 0'   # replace with your schedule\n  branches: \n    include: \n    - features/X\n```\n\n----------------------------------------\n\nTITLE: Implementing Multi-Version Java Builds (Single Platform) in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates using a `strategy` matrix to build a Java project with multiple JDK versions (1.10 and 1.11) on a single specified platform. A variable `jdkVersion` is defined for each matrix entry, which is then used within the Maven task configuration. `maxParallel` controls concurrency.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  matrix:\n    jdk10:\n      jdkVersion: \"1.10\"\n    jdk11:\n      jdkVersion: \"1.11\"\n  maxParallel: 2\n```\n\n----------------------------------------\n\nTITLE: Cloning Git Repository using Command Line\nDESCRIPTION: Command to clone a Git repository from Azure Repos to your local machine using the git clone command. This creates a local copy of the repository that you can work with.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/gitquickstart.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n> git clone https://dev.azure.com/fabrikam-fiber/_git/FabrikamFiber\n```\n\n----------------------------------------\n\nTITLE: Pipeline Variables for Python Web App Deployment (Azure DevOps Server)\nDESCRIPTION: Defines pipeline variables specifically for Azure DevOps Server, configuring the necessary parameters for deploying a Python web application to Azure App Service. Includes service connection, web app name, environment, project location, and Python version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n# Azure Resource Manager connection created during pipeline creation\nazureServiceConnectionId: '<your-service-connection-name>'\n\n# Web app name\nwebAppName: '<your-webapp-name>'\n\n# Environment name\nenvironmentName: '<your-webapp-name>'\n\n# Project root folder. \nprojectRoot: $(System.DefaultWorkingDirectory)\n\n# Python version: 3.11. Change this to the version that is running on your agent and web app.\npythonVersion: '3.11'\n```\n\n----------------------------------------\n\nTITLE: Troubleshooting Output Variables with Dependencies\nDESCRIPTION: This snippet demonstrates how to troubleshoot output variables by creating a variable that holds the JSON representation of job dependencies and printing it using PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_18\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- '*'\n\npool:\n  vmImage: 'ubuntu-latest'\n \njobs:\n- job: A\n  steps:\n    - script: |\n        echo \"##vso[task.setvariable variable=MyTask;isOutput=true]theoutputval\"\n      name: ProduceVar  \n- job: B\n  dependsOn: A\n  variables:\n    varFromA: $[ dependencies.A.outputs['ProduceVar.MyTask'] ]\n    deps: $[convertToJson(dependencies)] # create a variable with the job dependencies\n  steps:\n  - script: echo $(varFromA) # \n  - powershell: Write-Host \"$(deps)\"\n```\n\n----------------------------------------\n\nTITLE: Setting Job Timeouts in Azure DevOps Pipelines\nDESCRIPTION: Example showing how to set execution and cancellation timeouts for jobs. The timeoutInMinutes parameter limits job execution time, while cancelTimeoutInMinutes controls how long to wait before stopping 'always run' tasks after cancellation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Test\n  timeoutInMinutes: 10 # how long to run the job before automatically cancelling\n  cancelTimeoutInMinutes: 2 # how much time to give 'run always even if cancelled tasks' before stopping them\n```\n\n----------------------------------------\n\nTITLE: Implementing Advanced Parallel Execution in Azure Pipelines\nDESCRIPTION: This YAML configuration demonstrates how to create multiple jobs with dependencies to orchestrate parallel execution with control over the deployment sequence. It shows how to run build, multiple test jobs in parallel, package creation, and conditional deployment steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: build\n  steps:\n  - script: ./build.sh\n- job: test1\n  dependsOn: build\n  steps:\n  - script: ./test.sh unit_tests\n- job: test2\n  dependsOn: build\n  steps:\n  - script: ./test.sh integration_tests\n- job: package\n  dependsOn: test1\n  script: ./package.sh\n- job: deploy\n  dependsOn:\n  - test1\n  - test2\n  - package\n  steps:\n  - script: ./deploy.sh pre_prod\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables in Downstream Steps\nDESCRIPTION: This YAML snippet shows how variables created with task.setvariable become environment variables in downstream steps. The variable is set in a bash step and then accessed through environment variables in both bash and PowerShell steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# Create a variable\n# Note that this does not update the environment of the current script.\n- bash: |\n    echo \"##vso[task.setvariable variable=sauce]crushed tomatoes\"\n\n# An environment variable called `SAUCE` has been added to all downstream steps\n- bash: |\n    echo \"my environment variable is $SAUCE\"\n- pwsh: |\n    Write-Host \"my environment variable is $env:SAUCE\"\n```\n\n----------------------------------------\n\nTITLE: Filtering by Planning Target Date Using @StartOfYear Macro - WIQL\nDESCRIPTION: This query uses @StartOfYear as a dynamic filter for items scheduled beyond the start of the current year. Useful for forward-planning or milestone tracking queries, it leverages the dynamic date macro without dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_17\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE \n   [Microsoft.VSTS.Scheduling.TargetDate] > @StartOfYear\n```\n\n----------------------------------------\n\nTITLE: Running Flask App Locally on Linux using Bash\nDESCRIPTION: Executes a sequence of Bash commands to prepare and run the Python Flask application locally on a Linux environment. It creates a virtual environment (`.env`), activates it, upgrades pip, installs required packages from `requirements.txt`, sets the `FLASK_APP` environment variable, and starts the Flask development server using `python3`. Requires Python 3 and pip to be installed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npython -m venv .env\nsource .env/bin/activate\npip install --upgrade pip\npip install -r ./requirements.txt\nexport set FLASK_APP=hello_app.webapp\npython3 -m flask run\n```\n\n----------------------------------------\n\nTITLE: Restoring Maven Packages from External Feed (YAML Pipeline)\nDESCRIPTION: YAML pipeline configuration to authenticate with and restore Maven packages from a feed in a different Azure DevOps organization. This uses the MavenAuthenticate task with a service connection followed by a script task that runs 'mvn install'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/packages/maven-restore.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: MavenAuthenticate@0\n  displayName: 'Maven Authenticate'\n  inputs:\n    MavenServiceConnections: <SERVICE_CONNECTION_NAME> \n\n- script: |\n   mvn install\n  displayName: 'Restore'\n```\n\n----------------------------------------\n\nTITLE: Setting Collection-Level Settings in Azure DevOps Extension\nDESCRIPTION: Demonstrates how to set a setting value at the project collection level using the SDK data service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n    // Get data service\n    SDK.getService(SDK.getContributionId()).then(function(dataService) {\n        // Set value (default is project collection scope)\n        dataService.setValue(\"someKey\", \"abcd-efgh\").then(function(value) {\n            console.log(\"Key value is \" + value);\n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: Reading Variables with Shell Script in Azure DevOps\nDESCRIPTION: Demonstrates reading regular and secret variables in a Shell script, showing positional parameter usage and environment variable access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/set-variables-in-scripts.md#2025-04-22_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n\"$(sauce)\" \"$(secret.Sauce)\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"No problem reading $1 or $SAUCE\"\necho \"But I cannot read $SECRET_SAUCE\"\necho \"But I can read $2 (but the log is redacted so I do not spoil the secret)\"\n```\n\n----------------------------------------\n\nTITLE: Adding a Retention Lease via PowerShell in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet defines an Azure Pipelines task using PowerShell to add a retention lease to the current pipeline run upon successful completion. It calls the Azure DevOps REST API to create a lease valid for 2 years (730 days), overriding shorter project-level retention settings. Requires the System.AccessToken for authorization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/run-retention.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PowerShell@2\n  condition: and(succeeded(), not(canceled()))\n  name: RetainOnSuccess\n  displayName: Retain on Success\n  inputs:\n    failOnStderr: true\n    targetType: 'inline'\n    script: |\n      $contentType = \"application/json\";\n      $headers = @{ Authorization = 'Bearer $(System.AccessToken)' };\n      $rawRequest = @{ daysValid = 365 * 2; definitionId = $(System.DefinitionId); ownerId = 'User:$(Build.RequestedForId)'; protectPipeline = $false; runId = $(Build.BuildId) };\n      $request = ConvertTo-Json @($rawRequest);\n      $uri = \"$(System.CollectionUri)$(System.TeamProject)/_apis/build/retention/leases?api-version=6.0-preview.1\";\n      Invoke-RestMethod -uri $uri -method POST -Headers $headers -ContentType $contentType -Body $request;\n```\n\n----------------------------------------\n\nTITLE: Installing Flask Package from PyPI\nDESCRIPTION: Command to install the Flask package from PyPI using pip, which will also save a copy to the Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/use-packages-from-pypi.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\npip install -U Flask\n```\n\n----------------------------------------\n\nTITLE: Azure Web App Deployment Task\nDESCRIPTION: Configures the AzureWebApp@1 task to deploy the web application package to Azure App Service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\n   - task: AzureWebApp@1\n      displayName: 'Deploy Azure Web App : <your-web-app-name>'\n      inputs:\n         azureSubscription: $(azureServiceConnectionId)\n         appName: $(webAppName)\n         package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip\n```\n\n----------------------------------------\n\nTITLE: Defining an Azure DevOps Build Policy in a JSON Configuration File\nDESCRIPTION: This JSON structure defines a configuration for an Azure DevOps build policy. It sets the policy to be blocking (`isBlocking: true`), enabled (`isEnabled: true`), and specifies a manual queue build policy (`manualQueueOnly: true`) associated with build definition ID 22. The configuration applies this policy to two scopes: all branches starting with 'release' (`matchKind: Prefix`, `refName: refs/heads/release`) in one repository, and the exact 'main' branch (`matchKind: Exact`, `refName: refs/heads/main`) in another (or potentially the same) repository, identified by their respective `repositoryId` values. This file is intended to be used with the `az repos policy create --policy-configuration` command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/policy-configuration-file.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"isBlocking\": true,\n  \"isDeleted\": false,\n  \"isEnabled\": true,\n  \"revision\": 1,\n  \"settings\": {\n    \"buildDefinitionId\": 22,\n    \"displayName\": \"Manual Queue Policy\",\n    \"manualQueueOnly\": true,\n    \"queueOnSourceUpdateOnly\": false,\n    \"scope\": [\n      {\n        \"matchKind\": \"Prefix\",\n        \"refName\": \"refs/heads/release\",\n        \"repositoryId\": \"e646f204-53c9-4153-9ab9-fd41a11e3564\"\n      },\n      {\n        \"matchKind\": \"Exact\",\n        \"refName\": \"refs/heads/main\",\n        \"repositoryId\": \"e646f204-53c9-4153-9ab9-fd41a11e1234\"\n      }\n    ],\n    \"validDuration\": 0\n  },\n  \"type\": {\n    \"displayName\": \"Build\",\n    \"id\": \"0609b952-1397-4640-95ec-e00a01b2f659\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Pipeline Variables as Environment Variables in Different Scripting Languages\nDESCRIPTION: Examples of how to access pipeline variables through environment variables in Batch, PowerShell, and Bash scripts. Variable names are converted to uppercase, and dots are replaced with underscores when exposed as environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/access-variables-through-env.md#2025-04-22_snippet_0\n\nLANGUAGE: Batch\nCODE:\n```\n%VARIABLE_NAME%\n```\n\nLANGUAGE: PowerShell\nCODE:\n```\n$env:VARIABLE_NAME\n```\n\nLANGUAGE: Bash\nCODE:\n```\n$VARIABLE_NAME\n```\n\n----------------------------------------\n\nTITLE: Defining Complex PR Triggers with Branch Inclusion and Exclusion in Azure Pipelines\nDESCRIPTION: This YAML configuration demonstrates more complex PR trigger rules that include specific branches while excluding others. It will trigger pipelines for PRs targeting 'main' or any branch under 'releases/' except those that match 'releases/old*'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# specific branch\npr:\n  branches:\n    include:\n    - main\n    - releases/*\n    exclude:\n    - releases/old*\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch Filters for Pipeline Triggers in Azure DevOps\nDESCRIPTION: YAML configuration showing how to use branch filters to trigger app-ci pipeline only when security-lib-ci completes on specific branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/pipeline-triggers.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# app-ci YAML pipeline\nresources:\n  pipelines:\n  - pipeline: securitylib\n    source: security-lib-ci\n    trigger: \n      branches:\n        include: \n        - releases/*\n        exclude:\n        - releases/old*\n```\n\n----------------------------------------\n\nTITLE: Setting and Consuming Output Variables in Deployment Job - Azure Pipelines YAML\nDESCRIPTION: This YAML snippet illustrates how to set an output variable within the 'deploy' lifecycle hook of a canary strategy deployment job and reference it in a downstream job within the same stage. It demonstrates inter-job variable mapping using Azure Pipelines' multi-job output variable syntax. Dependencies: Azure DevOps Pipelines YAML, a canary deployment strategy, and basic understanding of multistage pipelines; expected inputs are defined jobs with deployment steps, and outputs are the accessible output variables in jobs that depend on the deployment job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-164-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n// Set an output variable in a lifecycle hook of a deployment job executing canary strategy\n- deployment: A\n  pool:\n    vmImage: 'ubuntu-latest'\n  environment: staging\n  strategy:                  \n    canary:      \n      increments: [10,20]  # creates multiple jobs, one for each increment. Output variable can be referenced with this.\n      deploy:\n        steps:\n        - script: echo \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the deployment variable value\"\n          name: setvarStep\n        - script: echo $(setvarStep.myOutputVar)\n          name: echovar\n\n // Map the variable from the job\n- job: B\n  dependsOn: A\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    myVarFromDeploymentJob: $[ dependencies.A.outputs['deploy_10.setvarStep.myOutputVar'] ]\n  steps:\n  - script: \"echo $(myVarFromDeploymentJob)\"\n    name: echovar\n```\n\n----------------------------------------\n\nTITLE: Directly Compiling TypeScript using tsc Script in YAML\nDESCRIPTION: Executes the TypeScript compiler (`tsc`) directly within a script step in Azure Pipelines YAML. This example compiles code targeting ES6, enables strict mode, and uses a specific tsconfig file (`tsconfigs/production.json`). Assumes `typescript` is installed globally or as a project dependency accessible via the path. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n- script: tsc --target ES6 --strict true --project tsconfigs/production.json\n```\n\n----------------------------------------\n\nTITLE: Querying Sprint Burndown for User Stories by Team in Power BI\nDESCRIPTION: This Power BI query creates a sprint burndown chart filtered by team name instead of area path. It focuses on User Stories for the current iteration and aggregates count and story points data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-sprintburndown.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \"\n        &\"$apply=filter( \"\n            &\"WorkItemType eq 'User Story' \"\n            &\"and (Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and DateValue ge Iteration/StartDate \"\n            &\"and DateValue le Iteration/EndDate \"\n            &\"and Iteration/StartDate le now()  \"\n            &\"and Iteration/EndDate ge now() \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(DateValue,State,WorkItemType,Priority,Area/AreaPath,Iteration/IterationPath), \"\n            &\"aggregate($count as Count, StoryPoints with sum as TotalStoryPoints) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Renaming and Migrating Branches via Command Line\nDESCRIPTION: Git commands to rename a branch locally, push the renamed branch to remote, and delete the old branch from remote to comply with the new branch folder structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/require-branch-folders.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit branch -m {old_branch_name} {new_branch_name}\ngit push origin {new_branch_name}\ngit push origin --delete {old_branch_name}\n```\n\n----------------------------------------\n\nTITLE: SSL Certificate Error Diagnosis\nDESCRIPTION: Example of an error message when the agent fails to connect due to SSL certificate issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/certificate.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nEnter server URL > https://corp.tfs.com/tfs\nEnter authentication type (press enter for Integrated) >\nConnecting to server ...\nAn error occurred while sending the request.\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Job Condition Example 1\nDESCRIPTION: This example shows how job-level conditions can affect execution when a build is canceled. Job B runs if the source branch is 'main', even if job A is canceled, because its condition evaluates to true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - script: sleep 30\n- job: B\n  dependsOn: A \n  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n  steps:\n    - script: echo step 2.1\n```\n\n----------------------------------------\n\nTITLE: Downloading Build Artifacts with Specific Patterns\nDESCRIPTION: Demonstrates how to use the downloadBuild task to retrieve artifacts from a build resource. This example shows pattern filtering to download only ZIP files from the Spaceworkz build resource.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n- job: deploy_windows_x86_agent\n  steps:\n  - downloadBuild: Spaceworkz\n    patterns: '**/*.zip'\n```\n\n----------------------------------------\n\nTITLE: PowerShell Script for Accessing Azure DevOps REST API\nDESCRIPTION: Example of an inline PowerShell script that uses the OAuth token to access the Azure DevOps REST API for retrieving pipeline definition information. This can be used in Classic pipelines after enabling OAuth token access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/powershell.md#2025-04-22_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n$url = \"$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/definitions/$($env:SYSTEM_DEFINITIONID)?api-version=5.0\"\nWrite-Host \"URL: $url\"\n$pipeline = Invoke-RestMethod -Uri $url -Headers @{\n    Authorization = \"Bearer $env:SYSTEM_ACCESSTOKEN\"\n}\nWrite-Host \"Pipeline = $($pipeline | ConvertTo-Json -Depth 100)\"\n```\n\n----------------------------------------\n\nTITLE: Dynamically Managing Key Vault Firewall Access for Microsoft-hosted Agents\nDESCRIPTION: This pipeline demonstrates a dynamic approach to access a private Key Vault by first adding the Microsoft-hosted agent's IP to the vault's firewall allowlist, performing the required operations, and then removing the IP when finished. Note that this is for demonstration purposes and not the recommended approach.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzurePowerShell@5\n  displayName: 'Allow agent IP'\n  inputs:\n    azureSubscription: 'YOUR_SERVICE_CONNECTION_NAME'\n    azurePowerShellVersion: LatestVersion\n    ScriptType: InlineScript\n    Inline: |\n     $ip = (Invoke-WebRequest -uri \"http://ifconfig.me/ip\").Content\n     Add-AzKeyVaultNetworkRule -VaultName \"YOUR_KEY_VAULT_NAME\" -ResourceGroupName \"YOUR_RESOURCE_GROUP_NAME\" -IpAddressRange $ip\n     echo \"##vso[task.setvariable variable=agentIP]ip\"\n    \n- task: AzureKeyVault@2\n  inputs:\n    azureSubscription: 'YOUR_SERVICE_CONNECTION_NAME'\n    KeyVaultName: 'YOUR_KEY_VAULT_NAME'\n    SecretsFilter: '*'\n    RunAsPreJob: false\n\n- task: AzurePowerShell@5\n  displayName: 'Remove agent IP'\n  inputs:\n    azureSubscription: 'YOUR_SERVICE_CONNECTION_NAME'\n    azurePowerShellVersion: LatestVersion\n    ScriptType: InlineScript\n    Inline: |\n     $ipRange = $env:agentIP + \"/32\"\n     Remove-AzKeyVaultNetworkRule -VaultName \"YOUR_KEY_VAULT_NAME\" -IpAddressRange $ipRange\n  condition: succeededOrFailed()\n```\n\n----------------------------------------\n\nTITLE: Configuring CodeQL Analysis Pipeline with Multiple Languages and 'None' Build Mode\nDESCRIPTION: This YAML snippet demonstrates a valid Azure Pipelines configuration for CodeQL analysis. It initializes CodeQL for C#, Java, and JavaScript using the 'none' build mode, which is supported for these languages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-code-scanning.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: none\n\npool:\n  vmImage: windows-latest\n\nsteps:\n- task: AdvancedSecurity-Codeql-Init@1\n  displayName: Initialize CodeQL\n  inputs:\n    languages: 'csharp, java, javascript' \n    buildtype: 'none'\n\n- task: AdvancedSecurity-Codeql-Analyze@1\n  displayName: Perform CodeQL Analysis\n```\n\n----------------------------------------\n\nTITLE: Reading Variables in Azure DevOps Pipelines with PowerShell\nDESCRIPTION: Demonstrates how to access standard variables, secret variables, and output variables in a PowerShell task. Shows environment variable access, macro replacement syntax, and future job reference syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\n- pwsh: |\n    Write-Host \"Non-secrets automatically mapped in, sauce is $env:SAUCE\"\n    Write-Host \"Secrets are not automatically mapped in, secretSauce is $env:SECRETSAUCE\"\n    Write-Host \"You can use macro replacement to get secrets, and they'll be masked in the log: $(secretSauce)\"\n    Write-Host \"Future jobs can also see $env:SETVARS_OUTPUTSAUCE\"\n    write-Host \"Future jobs can also see $(SetVars.outputSauce)\"\n```\n\n----------------------------------------\n\nTITLE: Using a Variable for JDK Version in Maven Task in Azure Pipelines YAML\nDESCRIPTION: This snippet shows the updated Maven task configuration where the `jdkVersionOption` is set using a pipeline variable `$(jdkVersion)`. This allows the JDK version to be dynamically determined by the strategy matrix defined earlier in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\njdkVersionOption: $(jdkVersion)\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Endpoint from Configuration File Example - Azure DevOps CLI - Azure CLI\nDESCRIPTION: This Azure CLI example shows how to create a service endpoint using the previously defined JSON configuration file with the 'az devops service-endpoint create' command. The configuration file path must be provided, and the tool must be authenticated and correctly scoped. The command outputs the properties of the newly created service connection in JSON upon success.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_3\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz devops service-endpoint create --service-endpoint-configuration ./ServiceConnectionGeneric.json\n```\n\n----------------------------------------\n\nTITLE: Running PHPUnit Tests in Azure Pipelines\nDESCRIPTION: This YAML script task for Azure Pipelines executes the project's PHPUnit tests by running the `./phpunit` command. It assumes that `phpunit` is executable and located in the project's root directory or accessible via the system's PATH, often installed as a development dependency via Composer.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/php.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- script: ./phpunit\n  displayName: 'Run tests with phpunit'\n```\n\n----------------------------------------\n\nTITLE: Run Azure DevOps Agent Diagnostics\nDESCRIPTION: PowerShell command to run diagnostic tests on the agent to help troubleshoot issues. Available in version 2.165.0 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-windows-agent.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n.\\run --diagnostics\n```\n\n----------------------------------------\n\nTITLE: Adding SourceLink for GitHub Projects (XML)\nDESCRIPTION: XML snippet to add the Microsoft.SourceLink.GitHub package reference to a project file for projects hosted on GitHub.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/symbols.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<ItemGroup>\n  <PackageReference Include=\"Microsoft.SourceLink.GitHub\" Version=\"1.1.1\" PrivateAssets=\"All\"/>\n</ItemGroup>\n```\n\n----------------------------------------\n\nTITLE: Running Diagnostics on Azure DevOps Self-Hosted Agent in Linux\nDESCRIPTION: Command to run diagnostics on a self-hosted agent after configuration. This helps troubleshoot issues with the agent and is available in agent version 2.165.0 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/configure-help-unix.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh --diagnostics\n```\n\n----------------------------------------\n\nTITLE: Sample Service Endpoint Creation Response - Azure DevOps CLI - Azure CLI\nDESCRIPTION: This output is representative of the JSON response returned by Azure DevOps CLI after a successful service endpoint creation operation. It details all configured attributes, including authorization parameters, identity of the creator, endpoint IDs, types, and project references. Some fields may be null if not set. The output structure can be used as a template for parsing CLI responses in automation scripts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_4\n\nLANGUAGE: Azure CLI\nCODE:\n```\n{\\n  \"administratorsGroup\": null,\\n  \"authorization\": {\\n    \"parameters\": {\\n      \"serviceprincipalid\": \"your-service-principal-id\",\\n      \"serviceprincipalkey\": \"your-service-principal-key\",\\n      \"tenantid\": \"your-tenant-id\"\\n    },\\n    \"scheme\": \"ServicePrincipal\"\\n  },\\n  \"createdBy\": {\\n    \"descriptor\": \"aad.OGYxZTFlODEtMGJiNC03N2ZkLThkYzUtYjE3MTNiNTQ2MjQ4\",\\n    \"directoryAlias\": null,\\n    \"displayName\": \"Jamal Hartnett\",\\n    \"id\": \"60c83423-4eb6-4c5e-8395-1e71cb4aef4c\",\\n    \"imageUrl\": \"https://dev.azure.com/fabrikam/_apis/GraphProfile/MemberAvatars/aad.OGYxZTFlODEtMGJiNC03N2ZkLThkYzUtYjE3MTNiNTQ2MjQ4\",\\n    \"inactive\": null,\\n    \"isAadIdentity\": null,\\n    \"isContainer\": null,\\n    \"isDeletedInOrigin\": null,\\n    \"profileUrl\": null,\\n    \"uniqueName\": \"fabrikamfiber4@hotmail.com\",\\n    \"url\": \"https://spsprodwcus0.vssps.visualstudio.com/A0214b8cc-a36c-4b93-abbf-6348473c2f0a/_apis/Identities/60c83423-4eb6-4c5e-8395-1e71cb4aef4c\"\\n  },\\n  \"data\": {},\\n  \"description\": null,\\n  \"groupScopeId\": null,\\n  \"id\": \"3b6890ef-54b3-47ec-a907-a5d2f96237da\",\\n  \"isReady\": true,\\n  \"isShared\": false,\\n  \"name\": \"MyNewServiceEndpoint\",\\n  \"operationStatus\": null,\\n  \"owner\": \"library\",\\n  \"readersGroup\": null,\\n  \"serviceEndpointProjectReferences\": [\\n    {\\n      \"name\": \"MyNewServiceEndpoint\",\\n      \"projectReference\": {\\n        \"id\": \"677da0fb-b067-4f77-b89b-f32c12bb8617\",\\n        \"name\": null\\n      }\\n    }\\n  ],\\n  \"type\": \"Generic\",\\n  \"url\": \"https://myserver\"\\n}\n```\n\n----------------------------------------\n\nTITLE: Publishing Gradle Packages to Azure Artifacts\nDESCRIPTION: Command to execute the publishing process for Gradle packages to an Azure Artifacts feed after configuration is complete.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/publish-with-gradle.md#2025-04-22_snippet_8\n\nLANGUAGE: command\nCODE:\n```\ngradle publish\n```\n\n----------------------------------------\n\nTITLE: Configure Private Agent Pool in YAML Pipeline\nDESCRIPTION: YAML configuration to specify a private agent pool with no demands\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/pools-queues.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npool: MyPool\n```\n\n----------------------------------------\n\nTITLE: Validating Pipeline Builder Check in Rego\nDESCRIPTION: Policy to verify if container images are built by specific Azure Pipelines. Requires pipeline name format: AzureDevOps_$(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/artifact-policy.md#2025-04-22_snippet_0\n\nLANGUAGE: rego\nCODE:\n```\nallowedBuilder := \"AzureDevOps_pipeline-foo\"\n\ncheckBuilder[errors] {\n    trace(\"Check if images are built by Azure Pipelines\")\n    resourceUri := values[index].build.resourceUri    \n    image := fetchImage(resourceUri)\n    builder := values[index].build.build.provenance.builderVersion\n    trace(sprintf(\"%s: builder\", [builder]))\n    not startswith(builder, \"allowedBuilder\")\n    errors := sprintf(\"%s: image not built by Azure Pipeline [%s]\", [image,builder])\n}\n\nfetchRegistry(uri) = reg {\n    out := regex.find_n(\"//.*/\", uri, 1)\n    reg = trim(out[0], \"/\")\n}\n\nfetchImage(uri) = img {\n    out := regex.find_n(\"/.*@\", uri, 1)\n    img := trim(out[0], \"/@\")\n}\n```\n\n----------------------------------------\n\nTITLE: Publishing Code Coverage Results with Cobertura in Azure Pipelines YAML\nDESCRIPTION: Uses the PublishCodeCoverageResults@2 task to collect Cobertura XML coverage summaries in the build workspace. After collecting, the results are shown in build summary and HTML reports can be downloaded. Input paths must match generated coverage.xml files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishCodeCoverageResults@2\\n  inputs:\\n    codeCoverageTool: Cobertura\\n    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'\n```\n\n----------------------------------------\n\nTITLE: Checking Out Multiple Repositories in Azure DevOps YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to check out multiple repositories, including a submodule, in an Azure DevOps YAML pipeline. It explicitly checks out both the main repository and its submodule.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/secure-access-to-repos.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- checkout: git://FabrikamFiber/FabrikamFiberLib\n- checkout: FabrikamFiber\n```\n\n----------------------------------------\n\nTITLE: Complex Pipeline Resource Definition\nDESCRIPTION: Comprehensive pipeline resource definition with multiple trigger conditions including branches, tags, and stages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: SmartHotel\n    project: DevOpsProject\n    source: SmartHotel-CI\n    trigger:\n      branches:\n        include:\n        - releases/*\n        - main\n        exclude:\n        - topic/*\n      tags: \n      - Verified\n      - Signed\n      stages:\n      - Production\n      - PreProduction\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes to Remote in Git Command Line\nDESCRIPTION: Command to push local commits to a remote repository. The -u flag sets up tracking between the local and remote branch, making future pushes and pulls simpler.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/gitquickstart.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n> git push -u origin ReadMeFix\n```\n\n----------------------------------------\n\nTITLE: Creating a Nested Timeline Record\nDESCRIPTION: Shows how to use the task.logdetail command to create a new nested timeline record in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n##vso[task.logdetail id=new guid;parentid=exist timeline record guid;name=project1;type=build;order=1]create new nested timeline record\n```\n\n----------------------------------------\n\nTITLE: Complete Express Route for Handling PR Webhook and Posting Status\nDESCRIPTION: A full Express.js route handler that receives pull request webhook events, analyzes the PR title, and posts an appropriate status back to the pull request.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\napp.post(\"/\", function (req, res) {\n\n    // Get the details about the PR from the service hook payload\n    var repoId = req.body.resource.repository.id\n    var pullRequestId = req.body.resource.pullRequestId\n    var title = req.body.resource.title\n\n    // Build the status object that we want to post.\n    // Assume that the PR is ready for review...\n    var prStatus = {\n        \"state\": \"succeeded\",\n        \"description\": \"Ready for review\",\n        \"targetUrl\": \"https://visualstudio.microsoft.com\",\n        \"context\": {\n            \"name\": \"wip-checker\",\n            \"genre\": \"continuous-integration\"\n        }\n    }\n\n    // Check the title to see if there is \"WIP\" in the title.\n    if (title.includes(\"WIP\")) {\n\n        // If so, change the status to pending and change the description.\n        prStatus.state = \"pending\"\n        prStatus.description = \"Work in progress\"\n    }\n\n    // Post the status to the PR\n    vstsGit.createPullRequestStatus(prStatus, repoId, pullRequestId).then( result => {\n        console.log(result)\n    })\n\n    res.send(\"Received the POST\")\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Container Registry Resource\nDESCRIPTION: YAML configuration for setting up an Azure Container Registry (ACR) resource with triggers. Includes subscription, resource group and repository settings with tag-based triggers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nresources:         \n  containers:\n  - container: petStore      \n    type: acr  \n    azureSubscription: ContosoConnection\n    resourceGroup: ContosoGroup\n    registry: petStoreRegistry\n    repository: myPets\n    trigger: \n      tags:\n        include: \n        - production* \n```\n\n----------------------------------------\n\nTITLE: Pipeline Using Stage Template\nDESCRIPTION: Shows how to implement a stage template in a pipeline with specific parameter values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\nstages:\n- template: stage-template.yml\n  parameters:\n    stageName: 'BuildStage'\n    jobName: 'BuildJob'\n    scriptPath: 'build-script.sh'\n    vmImage: 'ubuntu-latest'\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 222 Update Content in Markdown\nDESCRIPTION: This snippet includes a markdown file containing the main content of Sprint 222 update for GitHub Advanced Security in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/ghazdo/sprint-222-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update](../includes/ghazdo/sprint-222-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating a Pipeline Variable Using Azure DevOps CLI\nDESCRIPTION: This snippet shows how to use the Azure DevOps CLI to create a variable in a pipeline. It creates a variable named 'Configuration' with the value 'platform' in a specific project and pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\naz pipelines variable create --name Configuration --pipeline-id 12 --value platform --project MyFirstProject --output table\n```\n\n----------------------------------------\n\nTITLE: Using AzureKeyVault Task with Self-hosted Agent to Access Private Key Vault\nDESCRIPTION: This pipeline uses the AzureKeyVault task to fetch secrets directly from a private Key Vault using a self-hosted agent. This approach doesn't require giving Azure DevOps inbound access to the Key Vault but requires the agent's virtual network to be allowed in the Key Vault's firewall.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npool: Self-hosted-pool\n\nsteps:\n- task: AzureKeyVault@2\n  inputs:\n    azureSubscription: '$(SERVICE_CONNECTION_NAME)'\n    keyVaultName: $(KEY_VAULT_NAME)\n    SecretsFilter: '*'\n\n- task: CmdLine@2\n  inputs:\n    script: 'echo $(mySecret) > secret.txt'\n    \n- task: CopyFiles@2\n  inputs:\n    Contents: secret.txt\n    targetFolder: '$(Build.ArtifactStagingDirectory)'\n\n- task: PublishBuildArtifacts@1\n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n    ArtifactName: 'drop'\n    publishLocation: 'Container'\n```\n\n----------------------------------------\n\nTITLE: Connecting to Private Docker Hub Registry\nDESCRIPTION: This snippet shows how to reference a private Docker Hub registry using a service connection to access private container images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/container-phases.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ncontainer:\n  image: registry:ubuntu1804\n  endpoint: private_dockerhub_connection\n```\n\n----------------------------------------\n\nTITLE: Using Build.ArtifactStagingDirectory Variable in Azure DevOps Pipelines\nDESCRIPTION: Represents the local path on the agent where artifacts are copied before being pushed. Typically used with 'Copy files' and 'Publish build artifacts' tasks. This directory is purged before each build. It's agent-scoped, usable as an environment variable or task parameter, but not in build numbers or version control tags. Not available in templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_1\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.ArtifactStagingDirectory\n```\n\n----------------------------------------\n\nTITLE: Cloning Repository Using System.AccessToken in Azure DevOps YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to clone a repository using the System.AccessToken in an Azure DevOps YAML pipeline. It's noted that this method fails when the 'Protect access to repositories in YAML pipelines' setting is enabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/secure-access-to-repos.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- script: git clone https://$(System.AccessToken)@dev.azure.com/fabrikam-tailspin/FabrikamFiber/_git/OtherRepo/\n```\n\n----------------------------------------\n\nTITLE: Basic OData Query for Bug Trend Data\nDESCRIPTION: OData query that retrieves bug trend data for a specific date range, grouped by date and state. Filters for bugs between March 1-31, 2016.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/querying-for-trend-data.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}//WorkItemSnapshot?\n  $apply=\n    filter(DateValue ge 2016-03-01Z and DateValue le 2016-03-31Z and WorkItemType eq 'Bug')/\n    groupby((DateValue,State), aggregate($count as Count))\n  &$orderby=DateValue\n```\n\n----------------------------------------\n\nTITLE: Listing Azure DevOps Projects with CLI\nDESCRIPTION: Command to list all projects in an Azure DevOps organization with their IDs, names and visibility settings. Output is formatted as a table.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/create-project.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops project list --org https://dev.azure.com/fabrikam/ --output table\n```\n\n----------------------------------------\n\nTITLE: Configuring Self-Hosted Agent Pool and Capabilities (YAML)\nDESCRIPTION: Specifies the use of a self-hosted agent pool and demands a Maven-capable agent in an Azure Pipelines YAML file. The 'pool' block's 'name' sets the agent pool; 'demands' requests agents with specific capabilities ('maven' here). Prerequisite: Agent pool and agents with required capabilities must already be registered. Inputs: pool name, demanded capability. Output: Build jobs assigned to the designated self-hosted agent meeting the capability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: MyPool\n  demands: maven\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Stage Condition Example 1\nDESCRIPTION: This example demonstrates how a stage with a condition based on the source branch will run even if a previous stage is canceled. Stage2 will run if the source branch is 'main', regardless of stage1's status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: stage1\n  jobs:\n  - job: A\n    steps:\n      - script: echo 1; sleep 30\n- stage: stage2\n  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n  jobs:\n  - job: B\n    steps:\n      - script: echo 2\n```\n\n----------------------------------------\n\nTITLE: Setting NODE_EXTRA_CA_CERTS Environment Variable for NuGet Certificate Issues\nDESCRIPTION: This example shows how to fix NuGet push task certificate errors by adding a trusted root certificate using either an environment variable on the build agent or a task variable in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/qa-agents.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nNODE_EXTRA_CA_CERTS=file\n```\n\nLANGUAGE: markdown\nCODE:\n```\nNODE.EXTRA.CA.CERTS=file\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary by Test Owner with OData\nDESCRIPTION: OData query that retrieves test result summary data grouped by test owner. The query groups results by Test/TestOwner, allowing teams to analyze test performance per owner and identify potential areas needing support or intervention.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_9\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And DateSK ge {startdate} \n    And Workflow eq 'Build'\n)/groupby(\n    (Test/TestOwner),\n    aggregate(\n        ResultCount with sum as ResultCount,\n        ResultPassCount with sum as ResultPassCount,\n        ResultFailCount with sum as ResultFailCount,\n        ResultNotExecutedCount with sum as ResultNotExecutedCount,\n        ResultNotImpactedCount with sum as ResultNotImpactedCount\n    )\n)\n```\n\n----------------------------------------\n\nTITLE: Building and Signing Android App Bundle Using Bash Script in YAML Pipeline\nDESCRIPTION: This snippet shows how to use the Bash@3 task with an inline script to build and sign an Android app bundle (AAB). It uses MSBuild with parameters for keystore path and signing credentials stored as variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Bash@3\n  displayName: \"Build and sign App Bundle\"\n  inputs:\n    targetType: \"inline\"\n    script: |\n      msbuild -restore $(Build.SourcesDirectory)/myAndroidApp/*.csproj -t:SignAndroidPackage -p:AndroidPackageFormat=aab -p:Configuration=$(buildConfiguration) -p:AndroidKeyStore=True -p:AndroidSigningKeyStore=$(keyStore.secureFilePath) -p:AndroidSigningStorePass=$(keystore.password) -p:AndroidSigningKeyAlias=$(key.alias) -p:AndroidSigningKeyPass=$(key.password)\n```\n\n----------------------------------------\n\nTITLE: Replacing Single Platform Pool Definition in Azure Pipelines YAML\nDESCRIPTION: This snippet shows the original `pool` definition specifying a single `vmImage` (`ubuntu-latest`). This configuration is intended to be replaced by a strategy matrix for enabling multi-platform builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: \"ubuntu-latest\"\n```\n\n----------------------------------------\n\nTITLE: Getting Sample Java Code Repository URL\nDESCRIPTION: Provides the GitHub repository URL containing sample Java code. Users should fork this repository into their own GitHub account to follow the guide for creating their first Java pipeline in Azure Pipelines. This repository is used by Azure Pipelines to analyze the code and suggest a suitable pipeline template (Maven).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/MicrosoftDocs/pipelines-java\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Job Condition Example 2\nDESCRIPTION: This example demonstrates a job with a condition that depends on both the source branch and the success of a previous job. Job B will not run if job A is canceled, because the condition includes a succeeded() check.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - script: sleep 30\n- job: B\n  dependsOn: A \n  steps:\n    - script: echo step 2.1\n  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), succeeded())\n```\n\n----------------------------------------\n\nTITLE: Policy Configuration JSON for Minimum Reviewers\nDESCRIPTION: This JSON file defines a policy configuration for requiring three approvals on all main branches across all repositories. It specifies settings like minimum approver count and whether the creator's vote counts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"isEnabled\": true,\n  \"isBlocking\": false,\n  \"type\": {\n    \"id\": \"fa4e907d-c16b-4a4c-9dfa-4906e5d171dd\"\n  },\n  \"settings\": {\n    \"minimumApproverCount\": 3,\n    \"creatorVoteCounts\": false,\n    \"scope\": [\n      {\n        \"repositoryId\": null,\n        \"refName\": \"refs/heads/main\",\n        \"matchKind\": \"exact\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Parallel Jobs in YAML Pipeline\nDESCRIPTION: YAML configuration to set up parallel test execution jobs in Azure DevOps pipelines. This snippet shows how to specify the parallel strategy and number of concurrent jobs to run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/parallel-testing-vstest.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: ParallelTesting\n  strategy:\n    parallel: 2\n```\n\n----------------------------------------\n\nTITLE: OIDC Token Generation in Azure CLI\nDESCRIPTION: Bash script showing how to request a fresh OIDC token and establish an Azure CLI session using workload identity federation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-240-update.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n- task: AzureCLI@2\n  inputs:\n    addSpnToEnvironment: true\n    azureSubscription: 'my-azure-subscription'\n    scriptType: bash\n    scriptLocation: inlineScript\n    inlineScript: |\n      # Request fresh idToken\n      OIDC_REQUEST_URL=\"${SYSTEM_OIDCREQUESTURI}?api-version=7.1&serviceConnectionId=${AZURESUBSCRIPTION_SERVICE_CONNECTION_ID}\"\n      ARM_OIDC_TOKEN=$(curl -s -H \"Content-Length: 0\" -H \"Content-Type: application/json\" -H \"Authorization: Bearer $(System.AccessToken)\" -X POST $OIDC_REQUEST_URL | jq -r '.oidcToken')\n\n      # Save subscription context\n      ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)\n\n      # New az-cli session\n      az login --service-principal -u $servicePrincipalId --tenant $tenantId --allow-no-subscriptions --federated-token $ARM_OIDC_TOKEN\n      az account set --subscription $ARM_SUBSCRIPTION_ID\n```\n\n----------------------------------------\n\nTITLE: Selecting Microsoft-hosted Ubuntu Agent in Azure DevOps Pipeline YAML - YAML\nDESCRIPTION: This snippet demonstrates how to specify a Microsoft-hosted Ubuntu image as the pipeline execution environment in Azure DevOps, using the 'vmImage' key under 'pool'. There are no dependencies beyond having access to Microsoft-hosted agents. Key input is the image label, in this case 'ubuntu-latest'. The output is assignment of all jobs/tasks to a fresh Ubuntu virtual machine for each pipeline run. Limitations: images may update over time, so use explicit versions for stability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npool:\\n  vmImage: 'ubuntu-latest' \\n\n```\n\n----------------------------------------\n\nTITLE: Adding Refresh Date to Power BI Query for Private Analytics View\nDESCRIPTION: This PowerQuery code modifies an existing Azure DevOps Analytics private view query to add a column showing the current refresh date using DateTimeZone.FixedUtcNow(), which provides UTC time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/add-last-refresh-time.md#2025-04-22_snippet_0\n\nLANGUAGE: M\nCODE:\n```\nlet\n    Source = AzureDevOps.AnalyticsViews(\"{OrganizationName}\", \"{ProjectName}\", []),\n    #\"Private Views_Folder\" = Source{[Id=\"Private Views\",Kind=\"Folder\"]}[Data],\n    #\"{AnalyticsViewsID_Table}\" = #\"Private Views_Folder\"{[Id=\"{AnalyticsViewsID}\",Kind=\"Table\"]}[Data],\n    #\"Added Refresh Date\" = Table.AddColumn(#\"{AnalyticsViewsID_Table}\", \"Refresh Date\", each DateTimeZone.FixedUtcNow(), type datetimezone)\nin\n    #\"Added Refresh Date\"\n```\n\n----------------------------------------\n\nTITLE: Publishing Code Coverage Results in Azure Pipelines\nDESCRIPTION: Uses nyc (Istanbul CLI) to generate code coverage reports in Cobertura format and publishes them using the PublishCodeCoverageResults task. This displays coverage metrics in the build summary.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\n- script: |\n    nyc --reporter=cobertura --reporter=html \\\n    npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=./test-results.xml\n  displayName: 'Build code coverage report'\n\n- task: PublishCodeCoverageResults@2\n  inputs: \n    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image with Azure Pipelines (Self-Hosted Agent)\nDESCRIPTION: Provides an Azure Pipelines YAML configuration for building a Docker image on a self-hosted agent pool (e.g., `name: default`). It demands Docker capability on the agent, triggers on the main branch, defines an `imageName` variable, and uses the `Docker@2` task to build the image from a Dockerfile located at `$(Build.SourcesDirectory)/app/Dockerfile`. This setup is typically used with Azure DevOps Server or when specific self-hosted agent capabilities are required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/build-image.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Docker\n# Build a Docker image\n# https://docs.microsoft.com/azure/devops/pipelines/languages/docker\n\ntrigger:\n- main\n\npool:\n  name: default\n  demands: docker\n\nvariables:\n  imageName: 'pipelines-javascript-docker'\n\nsteps:\n - task: Docker@2\n   displayName: Build an image\n   inputs:\n     repository: $(imageName)\n     command: build\n     Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'\n\n```\n\n----------------------------------------\n\nTITLE: Building Java Project with Maven using Azure Pipelines YAML - YAML\nDESCRIPTION: This YAML pipeline builds a Java Maven project in an Azure DevOps pipeline. It uses Maven@4 for package and test steps, and then copies build artifacts (WAR/JAR) to the staging directory with CopyFiles@2. Artifacts are uploaded for later deployment. Prerequisites are a Maven-enabled Java project and Azure DevOps integration. Key parameters include the path to the pom.xml file and artifact globbing pattern. The output is a drop artifact containing bundled Java files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/deploy-linux-vm.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n    trigger:\n    - main\n    \n    pool:\n      vmImage: ubuntu-latest\n    \n    stages:\n    - stage: Build\n      displayName: Build stage\n      jobs:  \n      - job: Build\n        displayName: Build Maven Project\n        steps:\n        - task: Maven@4\n          displayName: 'Maven Package'\n          inputs:\n            mavenPomFile: 'pom.xml'\n        - task: CopyFiles@2\n          displayName: 'Copy Files to artifact staging directory'\n          inputs:\n            SourceFolder: '$(System.DefaultWorkingDirectory)'\n            Contents: '**/target/*.?(war|jar)'\n            TargetFolder: $(Build.ArtifactStagingDirectory)\n        - upload: $(Build.ArtifactStagingDirectory)\n          artifact: drop\n```\n\n----------------------------------------\n\nTITLE: Listing Specific Pipelines with Azure CLI\nDESCRIPTION: This command lists Azure Pipelines within the configured Azure DevOps project whose names begin with 'python*'. The `--name` parameter filters the pipelines by name (supporting wildcards), and the `--output table` parameter formats the results into a human-readable table. Requires Azure CLI with the Azure DevOps extension installed and configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/manage-pipelines-with-azure-cli.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines list --name python* --output table\n```\n\n----------------------------------------\n\nTITLE: Initial Azure Pipeline Build Stage Configuration\nDESCRIPTION: Basic pipeline configuration with Docker build and artifact publishing. Sets up variables and build stage for container image creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/kubernetes/canary-demo.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nvariables:\n  imageName: azure-pipelines-canary-k8s\n  dockerRegistryServiceConnection: azure-pipelines-canary-acr\n  imageRepository: 'azure-pipelines-canary-k8s'\n  containerRegistry: <example>.azurecr.io\n  tag: '$(Build.BuildId)'\n\nstages:\n- stage: Build\n  displayName: Build stage\n  jobs:  \n  - job: Build\n    displayName: Build\n    pool:\n      vmImage: ubuntu-latest\n    steps:\n    - task: Docker@2\n      displayName: Build and push image\n      inputs:\n        containerRegistry: $(dockerRegistryServiceConnection)\n        repository: $(imageName)\n        command: buildAndPush\n        Dockerfile: app/Dockerfile\n        tags: |\n          $(tag)\n\n    - publish: manifests\n      artifact: manifests\n\n    - publish: misc\n      artifact: misc\n```\n\n----------------------------------------\n\nTITLE: Updating Pipeline Name and Description with Azure CLI\nDESCRIPTION: This command updates an existing Azure Pipeline identified by its ID (12). It sets a new description using `--description` and assigns a new name using `--new-name`. The `--output table` parameter displays the updated pipeline information in a table format. Requires Azure CLI with the Azure DevOps extension installed and configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/manage-pipelines-with-azure-cli.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines update --id 12 --description \"rename pipeline\" --new-name updatedname.pipelines-java --output table\n```\n\n----------------------------------------\n\nTITLE: Setting and Using Variables in YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to set variables at the root level of a YAML pipeline and use them in task inputs. It sets 'configuration' and 'platform' variables and uses them in MSBuild tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n# Set variables once\nvariables:\n  configuration: debug\n  platform: x64\n\nsteps:\n\n# Use them once\n- task: MSBuild@1\n  inputs:\n    solution: solution1.sln\n    configuration: $(configuration) # Use the variable\n    platform: $(platform)\n\n# Use them again\n- task: MSBuild@1\n  inputs:\n    solution: solution2.sln\n    configuration: $(configuration) # Use the variable\n    platform: $(platform)\n```\n\n----------------------------------------\n\nTITLE: Example Output for Azure DevOps CLI Help Command\nDESCRIPTION: Illustrates the typical output structure when requesting help for the 'az devops' command group. It lists related command groups, subgroups for specific areas (admin, project, security, etc.), and available commands like configure, invoke, login, and logout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/index.md#2025-04-22_snippet_3\n\nLANGUAGE: output\nCODE:\n```\nGroup\n    az devops : Manage Azure DevOps organization level operations.\n        Related Groups\n        az pipelines: Manage Azure Pipelines\n        az boards: Manage Azure Boards\n        az repos: Manage Azure Repos\n        az artifacts: Manage Azure Artifacts.\n   \nSubgroups:\n    admin            : Manage administration operations.\n    extension        : Manage extensions.\n    project          : Manage team projects.\n    security         : Manage security related operations.\n    service-endpoint : Manage service endpoints/service connections.\n    team             : Manage teams.\n    user             : Manage users.\n    wiki             : Manage wikis.\n\nCommands:\n    configure        : Configure the Azure DevOps CLI or view your configuration.\n    feedback         : Displays information on how to provide feedback to the Azure DevOps CLI team.\n    invoke           : This command will invoke request for any DevOps area and resource. Please use\n                       only json output as the response of this command is not fixed. Helpful docs -\n                       https://learn.microsoft.com/rest/api/azure/devops/.\n    login            : Set the credential (PAT) to use for a particular organization.\n    logout           : Clear the credential for all or a particular organization.\n```\n\n----------------------------------------\n\nTITLE: Accessing Deployed Java SE Application URL\nDESCRIPTION: Provides the example URL format for accessing the deployed Spring PetClinic application running on Java SE within the Azure App Service. Replace `my-app-name` with the actual name of the created Web App.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java-webapp.md#2025-04-22_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nhttps://my-app-name.azurewebsites.net\n```\n\n----------------------------------------\n\nTITLE: Referencing Variable Groups in YAML Pipeline\nDESCRIPTION: YAML configuration to reference and use variables from a variable group in a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- group: my-variable-group\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Names using Bash Variables\nDESCRIPTION: These Bash commands define environment variables ('webName', 'rgName', 'planName') to store the names for the Azure Web App, Resource Group, and App Service Plan respectively. The web app name incorporates the previously generated 'resourceSuffix' for uniqueness.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/nodejs-tutorial.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nwebName=\"helloworld-nodejs-${resourceSuffix}\"\nrgName='hello-world-nodejs-rg'\nplanName='helloworld-nodejs-plan'\n```\n\n----------------------------------------\n\nTITLE: Encoding PAT for npm Authentication (Linux/Mac)\nDESCRIPTION: This bash command encodes a personal access token (PAT) to Base64 for use in the .npmrc file on Linux or macOS systems.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\necho -n \"YOUR_PERSONAL_ACCESS-TOKEN\" | base64\n```\n\n----------------------------------------\n\nTITLE: Deployment Job Output Variables with Environment Resource in Azure DevOps YAML Pipeline\nDESCRIPTION: Example showing how to reference an environment virtual machine resource in a deployment job's output variable. The test stage depends on a variable set during deployment to a specific VM resource.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: build\n  jobs:\n  - deployment: build_job\n    environment:\n      name: vmtest\n      resourceName: winVM2\n      resourceType: VirtualMachine\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - task: PowerShell@2\n            name: setRunTests\n            inputs:\n              targetType: inline\n              pwsh: true\n              script: |\n                $runTests = \"true\"\n                echo \"setting runTests: $runTests\"\n                echo \"##vso[task.setvariable variable=runTests;isOutput=true]$runTests\"\n\n- stage: test\n  dependsOn:\n  - 'build'\n  condition: eq(dependencies.build.outputs['build_job.Deploy_winVM2.setRunTests.runTests'], 'true')\n  jobs:\n  - job: A\n    steps:\n     - script: echo Hello from job A\n```\n\n----------------------------------------\n\nTITLE: Initializing State with Extension Data Service in JavaScript\nDESCRIPTION: Demonstrates how to initialize state by getting an access token and setting up the extension data manager to retrieve stored values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n        private async initializeState(): Promise<void> {\n        await SDK.ready();\n        const accessToken = await SDK.getAccessToken();\n        const extDataService = await SDK.getService<IExtensionDataService>(CommonServiceIds.ExtensionDataService);\n        this._dataManager = await extDataService.getExtensionDataManager(SDK.getExtensionContext().id, accessToken);\n\n        this._dataManager.getValue<string>(\"test-id\").then((data) => {\n            this.setState({\n                dataText: data,\n                persistedText: data,\n                ready: true\n            });\n        }, () => {\n            this.setState({\n                dataText: \"\",\n                ready: true\n            });\n        });\n    }\n```\n\n----------------------------------------\n\nTITLE: SSH Fingerprint Verification Commands\nDESCRIPTION: Commands to verify the fingerprint of an SSH public key file in both MD5 and SHA-256 formats, useful for troubleshooting authentication issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_15\n\nLANGUAGE: powershell\nCODE:\n```\nssh-keygen -l -E md5 -f <path_to_your_public_key> -- use this for MD5 fingerprints\nssh-keygen -l -E sha256 -f <path_to_your_public_key> -- use this for SHA-256 fingerprints\n```\n\n----------------------------------------\n\nTITLE: Configuring Ant Build Task in Azure Pipelines\nDESCRIPTION: YAML configuration for using the Ant build tool in Azure Pipelines. Demonstrates how to set up the Ant@1 task with options for working directory, build file location, Java configuration, and test result publishing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Ant@1\n  inputs:\n    workingDirectory: ''\n    buildFile: 'build.xml'\n    javaHomeOption: 'JDKVersion'\n    jdkVersionOption: 'default'\n    jdkArchitectureOption: 'x64'\n    publishJUnitResults: false\n    testResultsFiles: '**/TEST-*.xml'\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Agent Pool and Name Configuration\nDESCRIPTION: Illustrates the command-line options for specifying the agent pool and name during configuration. These options allow for precise agent placement and identification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/unattended-config.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n--pool <pool> --agent <agent> --replace\n```\n\n----------------------------------------\n\nTITLE: Golang Package Caching in Azure Pipelines YAML\nDESCRIPTION: This example demonstrates how to cache Golang packages in Azure Pipelines. It sets the GO_CACHE_DIR variable and configures caching based on the go.mod file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  GO_CACHE_DIR: $(Pipeline.Workspace)/.cache/go-build/\n\nsteps:\n- task: Cache@2\n  inputs:\n    key: 'go | \"$(Agent.OS)\" | go.mod'\n    restoreKeys: | \n      go | \"$(Agent.OS)\"\n    path: $(GO_CACHE_DIR)\n  displayName: Cache GO packages\n```\n\n----------------------------------------\n\nTITLE: Configuring CI Trigger for Main and Feature Branches in YAML\nDESCRIPTION: This YAML snippet sets up triggers for both the main branch and any feature branches, ensuring that modifications to these branches automatically trigger a pipeline run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/ci-build-git.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n- feature/*\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry using Azure CLI\nDESCRIPTION: Azure CLI command to create a new Azure Container Registry named 'mycontainerregistry' with the 'Basic' SKU within the previously created 'myapp-rg' resource group. This registry will store the built Docker images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz acr create --resource-group myapp-rg --name mycontainerregistry --sku Basic\n```\n\n----------------------------------------\n\nTITLE: Parallel Tox Testing Matrix in Azure Pipelines YAML\nDESCRIPTION: Defines a job matrix to test Python code with Tox across multiple versions in parallel. Each job sets up a Python version, installs Tox, and runs 'tox -e py'. Requires Tox to be used in the Python project. Inputs are the python.version and job matrix contents; outputs are the results from each environment's test run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n- job:\\n\\n  pool:\\n    vmImage: 'ubuntu-latest'\\n  strategy:\\n    matrix:\\n      Python38:\\n        python.version: '3.8'\\n      Python39:\\n        python.version: '3.9'\\n      Python310:\\n        python.version: '3.10'\\n\\n  steps:\\n  - task: UsePythonVersion@0\\n    displayName: 'Use Python $(python.version)'\\n    inputs:\\n      versionSpec: '$(python.version)'\\n\\n  - script: pip install tox\\n    displayName: 'Install Tox'\\n\\n  - script: tox -e py\\n    displayName: 'Run Tox'\n```\n\n----------------------------------------\n\nTITLE: Conditionally Running Stages Based on Previous Stage Status\nDESCRIPTION: Example showing how to run stages conditionally based on the result of previous stages. This demonstrates using the failed() and succeeded() conditions to control stage execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n\n# stage B runs if A fails\n- stage: B\n  condition: failed()\n\n# stage C runs if B succeeds\n- stage: C\n  dependsOn:\n  - A\n  - B\n  condition: succeeded('B')\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Build Number Format in YAML Pipeline\nDESCRIPTION: Example of setting a custom build number format in a YAML pipeline using the name property, which combines the project name, definition name, branch name, and date with a sequential revision number.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/run-number.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:r)\n\nsteps:\n  - script: echo '$(Build.BuildNumber)'\n```\n\n----------------------------------------\n\nTITLE: Implementing Conditional Execution in Azure Pipelines\nDESCRIPTION: Shows how to achieve equivalent post-build execution in Azure Pipelines using job conditions. Demonstrates always(), succeeded(), and failed() conditions within pipeline jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-jenkins.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: always\n  steps:\n  - script: echo \"The build has finished\"\n    condition: always()\n\n- job: success\n  steps:\n  - script: echo \"The build succeeded\"\n    condition: succeeded()\n\n- job: failed\n  steps:\n  - script: echo \"The build failed\"\n    condition: failed()\n```\n\n----------------------------------------\n\nTITLE: Using Empty String Variables in Pipeline Conditions\nDESCRIPTION: Example showing how to set an empty string variable and use it in a condition to run a step when the variable is empty (null).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: testEmpty\n  value: ''\n\njobs:\n  - job: A\n    steps:\n    - script: echo testEmpty is blank\n    condition: eq(variables.testEmpty, '')\n```\n\n----------------------------------------\n\nTITLE: Using Each Keyword to Loop Through Parameters in Azure DevOps Pipeline\nDESCRIPTION: Shows how to iterate through an object parameter using the 'each' keyword. This example loops through a list of strings and echoes each value, demonstrating how to process collections in pipeline definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: listOfStrings\n  type: object\n  default:\n  - one\n  - two\n\nsteps:\n- ${{ each value in parameters.listOfStrings }}:\n  - script: echo ${{ value }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Branch Filters for Pipeline Triggers in Azure DevOps\nDESCRIPTION: Extended branch filter configuration that triggers the app-ci pipeline when security-lib-ci completes on either releases branches or the main branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/pipeline-triggers.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# app-ci YAML pipeline\nresources:\n  pipelines:\n  - pipeline: securitylib\n    source: security-lib-ci\n    trigger: \n      branches:\n        include: \n        - releases/*\n        - main\n        exclude:\n        - releases/old*\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow for Azure Artifacts with Managed Identity\nDESCRIPTION: GitHub workflow that builds and publishes a .NET NuGet package to Azure Artifacts using managed identity and federated authentication. The workflow handles building, testing, packaging, and publishing using various GitHub Actions including azure/login, setup-dotnet, and artifact management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/github-actions.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: Push a NuGet package to Azure Artifacts with managed identity and federated authentication\n\non:\n  push:\n    branches:\n      - main\n\npermissions:\n  id-token: write # Require write permission to Fetch an federated identity token.\n  contents: read # Require read permission to access the repository contents.\n\nenv:\n  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/myorg/nuget-artifact/_packaging/Fabrikam_Feed/nuget/v3/index.json    \n  BUILD_CONFIGURATION: 'Release'    # set this to the appropriate build configuration\n  DOTNET_VERSION: '6.0' \n  NuGetDirectory: ${{ github.workspace}}/nuget\n  VSS_NUGET_URI_PREFIXES: https://pkgs.dev.azure.com/myorg/\n\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      # Checkout the repo\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Azure CLI Login\n        uses: azure/login@v2\n        with:\n          client-id: ${{ secrets.AZURE_CLIENT_ID }}\n          tenant-id: ${{ secrets.AZURE_TENANT_ID }}\n          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}\n\n      # Setup .NET Core SDK\n      - name: Setup .NET Core\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: ${{ env.DOTNET_VERSION }}\n\n      # Run dotnet build and package\n      - name: dotnet build and test\n        run: |\n          dotnet restore\n          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'\n          dotnet test --configuration '${{ env.BUILD_CONFIGURATION }}'\n\n    # Create the NuGet package in the folder from the environment variable NuGetDirectory\n      - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}\n\n    # Publish the NuGet package as an artifact, so they can be used in the following jobs\n      - uses: actions/upload-artifact@v3\n        with:\n          name: nuget\n          if-no-files-found: error\n          retention-days: 7\n          path: ${{ env.NuGetDirectory }}/*.nupkg\n\n  az-artifacts-build-and-deploy:\n    needs: build\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Azure CLI Login\n        uses: azure/login@v2\n        with:\n          client-id: ${{ secrets.AZURE_CLIENT_ID }}\n          tenant-id: ${{ secrets.AZURE_TENANT_ID }}\n          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}\n\n      - uses: actions/download-artifact@v3\n        with:\n          name: nuget\n          path: ${{ env.NuGetDirectory }}\n\n      - name: Setup .NET Core\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: ${{ env.DOTNET_VERSION }}\n          source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}\n        env:\n          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}\n\n      - name: Install credential provider for Azure Artifacts\n        run: sh -c \"$(curl -fsSL https://aka.ms/install-artifacts-credprovider.sh)\"\n\n      - name: Extract access token\n        run: |\n            accessToken=$(az account get-access-token --query accessToken --resource 499b84ac-1321-427f-aa17-267ca6975798 -o tsv)\n            echo \"::add-mask::$accessToken\"\n            echo \"ACCESS_TOKEN=$accessToken\" >> $GITHUB_ENV\n\n      - name: Configure authentication provider to use Azure DevOps token\n        run: |\n          echo \"VSS_NUGET_ACCESSTOKEN=$ACCESS_TOKEN\" >> $GITHUB_ENV\n\n      - name: dotnet build and publish\n        run: |\n          dotnet restore\n          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'\n          dotnet pack --configuration '${{ env.BUILD_CONFIGURATION }}' --output ./nupkg --version-suffix ${{ github.run_id }}\n          \n      - name: 'Publish the package to Azure Artifacts'\n        run: dotnet nuget push ${{ env.NuGetDirectory }}/*.nupkg --api-key AzureDevOps --source ${{ env.AZURE_ARTIFACTS_FEED_URL }}\n```\n\n----------------------------------------\n\nTITLE: Example of Creating a Bug Work Item in Azure Boards\nDESCRIPTION: This example demonstrates how to create a bug work item titled \"Fix issue\", assign it to a specific user, and display the result in table format. The command returns the ID, type, title, assignee, and state of the created work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/add-work-items-cli.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item create --title \"Fix issue\" --type bug --assigned-to contoso@contoso.com --output table\n```\n\n----------------------------------------\n\nTITLE: Installing Go package from subfolder in private Azure Repos Git repository using HTTPS\nDESCRIPTION: These examples demonstrate how to install Go packages from subfolders within a private Azure Repos Git repository using go install with HTTPS authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/go-install.md#2025-04-22_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\ngo install dev.azure.com/<organization>/<project>/_git/<repo>.git/subfolder1@<version>\n\ngo install dev.azure.com/<organization>/<project>/_git/<repo>.git/subfolder1/subfolder2@<version>\n```\n\n----------------------------------------\n\nTITLE: HTTP Header API Version Specification\nDESCRIPTION: Example showing how to specify the API version in an HTTP request header. This method uses the Accept header with application/json content type and api-version parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/rest-api-versioning.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nAccept: application/json;api-version=1.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Azure Pipelines Agent Customization\nDESCRIPTION: Examples of environment variables that can be set in the operating system custom image to customize the Azure Pipelines Agent configuration. This includes changing the working directory and setting proxy settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nVSTS_AGENT_INPUT_WORK\nVSTS_AGENT_INPUT_PROXYURL\nVSTS_AGENT_INPUT_PROXYUSERNAME\nVSTS_AGENT_INPUT_PROXYPASSWORD\n```\n\n----------------------------------------\n\nTITLE: Defining a Service Endpoint Configuration - Azure DevOps - JSON\nDESCRIPTION: This JSON snippet outlines the required structure for a service endpoint configuration file used by the Azure DevOps CLI when creating new service connections. It specifies key parameters such as name, type, URL, authorization (with tenant ID and scheme), sharing and readiness states, and associated project references. It must be saved as a \".json\" file and passed to the CLI create command. Expected inputs are values like tenant IDs and project information, and missing required fields may cause CLI operations to fail.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\\n  \"data\": {},\\n  \"name\": \"MyNewServiceEndpoint\",\\n  \"type\": \"AzureRM\",\\n  \"url\": \"https://management.azure.com/\",\\n  \"authorization\": {\\n    \"parameters\": {\\n      \"tenantid\": \"your-tenant-id\"\\n    },\\n    \"scheme\": \"ManagedServiceIdentity\"\\n  },\\n  \"isShared\": false,\\n  \"isReady\": true,\\n  \"serviceEndpointProjectReferences\": [\\n    {\\n      \"projectReference\": {\\n        \"id\": \"c7e5f0b3-71fa-4429-9fb3-3321963a7c06\",\\n        \"name\": \"TestProject\"\\n      },\\n      \"name\": \"MyNewServiceEndpoint\"\\n    }\\n  ]\\n}\n```\n\n----------------------------------------\n\nTITLE: Restoring NuGet Packages from Same-Organization Feed with YAML Pipeline\nDESCRIPTION: YAML pipeline configuration that authenticates and restores NuGet packages from a feed within the same Azure DevOps organization. Uses NuGetAuthenticate, NuGetToolInstaller tasks, and a script command to execute the restore operation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/packages/nuget-restore.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: NuGetAuthenticate@1\n\n- task: NuGetToolInstaller@1\n  inputs:\n    versionSpec: '*'\n    checkLatest: true\n\n- script: nuget restore <SOLUTION_PATH>\n```\n\n----------------------------------------\n\nTITLE: Publishing npm Packages in Azure Pipelines YAML\nDESCRIPTION: These snippets show different ways to publish npm packages using Azure Pipelines YAML, including publishing to the public registry, a custom registry, and an Azure DevOps Services package management feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_27\n\nLANGUAGE: YAML\nCODE:\n```\n- script: npm publish\n```\n\nLANGUAGE: YAML\nCODE:\n```\n- task: Npm@1\n  inputs:\n     command: publish\n     publishRegistry: useExternalRegistry\n     publishEndpoint: https://my.npmregistry.com\n```\n\nLANGUAGE: YAML\nCODE:\n```\n- task: Npm@1\n  inputs:\n     command: publish\n     publishRegistry: useFeed\n     publishFeed: https://my.npmregistry.com\n```\n\n----------------------------------------\n\nTITLE: Implementing Token-Based Authentication Schema in Azure DevOps\nDESCRIPTION: Configuration for token-based authentication endpoint scheme. Includes setup for API token input and authorization header configuration. The scheme requires a confidential API token with a maximum length of 300 characters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/auth-schemes.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"endpoint-auth-scheme-token\",\n    \"description\": \"i18n:Token based endpoint authentication scheme\",\n    \"type\": \"ms.vss-endpoint.service-endpoint-type\",\n    \"targets\": [\n        \"ms.vss-endpoint.endpoint-types\"\n    ],\n    \"properties\": {\n        \"name\": \"Token\",\n        \"displayName\": \"i18n:Token Based Authentication\",\n        \"authenticationSchemes\": [\n            {\n                \"type\": \"ms.vss-endpoint.endpoint-auth-scheme-token\",\n                \"headers\": [\n                    {\n                        \"name\": \"Authorization\",\n                        \"value\": \"{{endpoint.apitoken}}\"\n                    }\n                ],\n                \"inputDescriptors\": [\n                    {\n                        \"id\": \"apitoken\",\n                        \"name\": \"i18n:API Token\",\n                        \"description\": \"i18n:API Token for connection to endpoint\",\n                        \"inputMode\": \"textbox\",\n                        \"isConfidential\": true,\n                        \"validation\": {\n                            \"isRequired\": true,\n                            \"dataType\": \"string\",\n                            \"maxLength\": 300\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Verbose Output for Azure DevOps Task Tests\nDESCRIPTION: PowerShell command to enable verbose output when running unit tests for Azure DevOps pipeline tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_18\n\nLANGUAGE: PowerShell\nCODE:\n```\n$env:TASK_TEST_TRACE=1\n```\n\n----------------------------------------\n\nTITLE: Updating Approver Count Policy in Azure DevOps using Azure CLI\nDESCRIPTION: This command updates an approver count policy for a repository or branch in Azure DevOps. It allows configuration of various policy settings such as minimum approver count, blocking, and vote counting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy approver-count update --id\n                                      [--allow-downvotes {false, true}]\n                                      [--blocking {false, true}]\n                                      [--branch]\n                                      [--branch-match-type {exact, prefix}]\n                                      [--creator-vote-counts {false, true}]\n                                      [--detect {false, true}]\n                                      [--enabled {false, true}]\n                                      [--minimum-approver-count]\n                                      [--org]\n                                      [--project]\n                                      [--repository-id]\n                                      [--reset-on-source-push {false, true}]\n                                      [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Filters for Pipeline Triggers in Azure DevOps\nDESCRIPTION: YAML configuration showing how to use tag filters to trigger a pipeline only when the source pipeline completes with specific tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/pipeline-triggers.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: MyCIAlias\n    source: Farbrikam-CI\n    trigger:\n      tags:        # This filter is used for triggering the pipeline run\n      - Production # Tags are AND'ed\n      - Signed\n```\n\n----------------------------------------\n\nTITLE: PowerShell Script for Applying Version to Assemblies\nDESCRIPTION: A comprehensive PowerShell script that extracts version numbers from the build number and applies them to assembly property files. Requires a build number format with four version components and includes validation logic.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/powershell.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n# Enable -Verbose option\n[CmdletBinding()]\n\n# Regular expression pattern to find the version in the build number\n$VersionRegex = \"\\d+\\.\\d+\\.\\d+\\.\\d+\"\n\n# If not running on a build server, remind user to set environment variables for debugging\nif(-not ($Env:BUILD_SOURCESDIRECTORY -and $Env:BUILD_BUILDNUMBER))\n{\n    Write-Error \"You must set the following environment variables\"\n    Write-Error \"to test this script interactively.\"\n    Write-Host '$Env:BUILD_SOURCESDIRECTORY - For example, enter something like:'\n    Write-Host '$Env:BUILD_SOURCESDIRECTORY = \"C:\\\\code\\\\Fabrikam\\\\HelloWorld\"'\n    Write-Host '$Env:BUILD_BUILDNUMBER - For example, enter something like:'\n    Write-Host '$Env:BUILD_BUILDNUMBER = \"Build HelloWorld_0000.00.00.0\"'\n    exit 1\n}\n\n# Make sure path to source code directory is available\nif (-not $Env:BUILD_SOURCESDIRECTORY)\n{\n    Write-Error (\"BUILD_SOURCESDIRECTORY environment variable is missing.\")\n    exit 1\n}\nelseif (-not (Test-Path $Env:BUILD_SOURCESDIRECTORY))\n{\n    Write-Error \"BUILD_SOURCESDIRECTORY does not exist: $Env:BUILD_SOURCESDIRECTORY\"\n    exit 1\n}\nWrite-Verbose \"BUILD_SOURCESDIRECTORY: $Env:BUILD_SOURCESDIRECTORY\"\n    \n# Make sure there's a build number\nif (-not $Env:BUILD_BUILDNUMBER)\n{\n    Write-Error (\"BUILD_BUILDNUMBER environment variable is missing.\")\n    exit 1\n}\nWrite-Verbose \"BUILD_BUILDNUMBER: $Env:BUILD_BUILDNUMBER\"\n    \n# Get and validate the version data\n$VersionData = [regex]::matches($Env:BUILD_BUILDNUMBER,$VersionRegex)\nswitch($VersionData.Count)\n{\n   0        \n      { \n         Write-Error \"Couldn't find version number data in BUILD_BUILDNUMBER.\"\n         exit 1\n      }\n   1 {}\n   default \n      { \n         Write-Warning \"Found more than one instance of version data in BUILD_BUILDNUMBER.\" \n         Write-Warning \"Assuming first instance is version.\"\n      }\n}\n$NewVersion = $VersionData[0]\nWrite-Verbose \"Version: $NewVersion\"\n    \n# Apply the version to the assembly property files\n$files = gci $Env:BUILD_SOURCESDIRECTORY -recurse -include \"*Properties*\",\"My Project\" | \n    ?{ $_.PSIsContainer } | \n    foreach { gci -Path $_.FullName -Recurse -include AssemblyInfo.* }\nif($files)\n{\n    Write-Verbose \"Applying $NewVersion to $($files.count) files.\"\n    \n    foreach ($file in $files) {\n        $filecontent = Get-Content($file)\n        attrib $file -r\n        $filecontent -replace $VersionRegex, $NewVersion | Out-File $file\n        Write-Verbose \"$file.FullName - version applied\"\n    }\n}\nelse\n{\n    Write-Warning \"Found no files.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Job Conditional Execution Using Output Variables in Azure DevOps YAML Pipeline\nDESCRIPTION: Example showing how a job can depend on an output variable from another job. Job A sets an output variable that Job B checks in its condition to determine whether it should run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - bash: echo \"##vso[task.setvariable variable=shouldrun;isOutput=true]true\"\n  # or on Windows:\n  # - script: echo ##vso[task.setvariable variable=shouldrun;isOutput=true]true\n    name: printvar\n\n- job: B\n  condition: and(succeeded(), eq(dependencies.A.outputs['printvar.shouldrun'], 'true'))\n  dependsOn: A\n  steps:\n  - script: echo hello from B\n```\n\n----------------------------------------\n\nTITLE: Updating a Specific Banner in Azure DevOps using CLI\nDESCRIPTION: This example demonstrates how to update a specific banner by changing its message and expiration date. The response shows the updated banner details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-banners.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops admin banner update --id 7653f414-3c01-424f-8f84-e51aa99b797c --message \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce ac lectus eget erat porttitor dapibus vulputate in ipsum..\" --expiration  2019-12-31\n{\n  \"7653f414-3c01-424f-8f84-e51aa99b797c\": {\n    \"expirationDate\": \"2019-12-31T00:00:00-08:00\",\n    \"level\": \"info\",\n    \"message\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit..\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: PAT Authentication in PowerShell\nDESCRIPTION: PowerShell script to authenticate Git operations using Personal Access Token (PAT) with Base64 encoding for HTTP basic authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/auth-overview.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$MyPat = 'yourPat'\n$headerValue = \"Authorization: Basic \" + [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\":\" + $MyPat))\n$env:GIT_AUTH_HEADER = $headerValue\n\ngit --config-env=http.extraheader=GIT_AUTH_HEADER clone https://dev.azure.com/yourOrgName/yourProjectName/_git/yourRepoName\n```\n\n----------------------------------------\n\nTITLE: Listing Pipeline Variables with Azure CLI\nDESCRIPTION: This Azure CLI command lists all variables in a pipeline with ID 12 and displays the result in table format. The output shows variable names, whether they allow override, if they are secret, and their values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable list --pipeline-id 12 --output table\n\nName           Allow Override    Is Secret    Value\n-------------  ----------------  -----------  ------------\nMyVariable     False             False        platform\nNextVariable   False             True         platform\nConfiguration  False             False        config.debug\n```\n\n----------------------------------------\n\nTITLE: Running Kubectl Commands via Script Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet leverages the script step in Azure Pipelines to run a raw kubectl command, allowing direct interaction with the Kubernetes cluster for applying a manifest file. It requires the kubectl CLI to be available on the agent and credentials to be already set (for example, via prior tasks or pre-configured kubeconfig). Input is a manifest file named 'manifest.yml', and the output is the cluster update in accordance with that manifest. There are no explicit constraints, but agent environment variables and permissions must suffice for kubectl authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/kubernetes/deploy.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- script: |\n    kubectl apply -f manifest.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Mount Options in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure mount options for containers in Azure Pipelines. It shows how to set read-only permissions for externals, tasks, and tools directories while keeping the work directory writable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/misc.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: example\n    image: ubuntu:22.04\n    mountReadOnly:\n      externals: true\n      tasks: true\n      tools: true\n      work: false  # the default; shown here for completeness\n```\n\n----------------------------------------\n\nTITLE: Pushing Local Git Repository to a Bare Git Repository\nDESCRIPTION: Git commands to push the local Git repository (converted from SVN) to the new bare Git repository. This configures the remote and pushes all references.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncd c:\\mytempdir \ngit remote add bare c:\\new-bare.git \ngit config remote.bare.push refs/remotes/*:refs/heads/* \ngit push bare \n```\n\n----------------------------------------\n\nTITLE: Publishing Python Package with Twine\nDESCRIPTION: Command to upload the package distributions to Azure Artifacts feed using twine with repository specification to prevent accidental PyPI uploads.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/python-cli.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntwine upload -r REPOSITORY_NAME dist/*\n```\n\n----------------------------------------\n\nTITLE: Setting Output Variables with Deployment Jobs\nDESCRIPTION: This YAML example shows how to set and access output variables from deployment jobs. The job name prefix is required when referencing output variables from deployment jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n\n# Set an output variable from a deployment\n- deployment: A\n  pool:\n    vmImage: 'ubuntu-latest'\n  environment: staging\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - bash: echo \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the deployment variable value\"\n          name: setvarStep\n        - bash: echo $(setvarStep.myOutputVar)\n          name: echovar\n\n# Map the variable from the job for the first slice\n- job: B\n  dependsOn: A\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    myVarFromDeploymentJob: $[ dependencies.A.outputs['A.setvarStep.myOutputVar'] ]\n  steps:\n  - bash: \"echo $(myVarFromDeploymentJob)\"\n    name: echovar\n```\n\n----------------------------------------\n\nTITLE: Setting Output Variables for Future Jobs in Bash\nDESCRIPTION: Sets an output variable 'myOutputVar' in a Bash script that can be accessed in future jobs. The variable is set with isOutput=true and assigned a name to reference later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - bash: |\n     echo \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is from job A\"\n    name: passOutput\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Access Using Pipeline Variables\nDESCRIPTION: Demonstrates how to safely access pipeline variables across different platforms using macro syntax $(variable).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/cross-platform-scripting.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  Example: 'myValue'\n\nsteps:\n- script: echo The value passed in is $(Example)\n```\n\n----------------------------------------\n\nTITLE: Executing Script-Based Docker Build Command\nDESCRIPTION: Demonstrates how to build a Docker image using a direct `docker build` command within a script task in Azure Pipelines, serving as an alternative to the dedicated `Docker@2` task. It specifies the Dockerfile (`-f Dockerfile`), tags the image (`-t foobar.azurecr.io/hello:world`), and defines the build context as the current directory (`.`).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/build-image.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -f Dockerfile -t foobar.azurecr.io/hello:world .\n```\n\n----------------------------------------\n\nTITLE: Defining a Template with Parameters in YAML\nDESCRIPTION: This snippet shows how to define a template file with parameters and use those parameters within tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-expressions.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# File: steps/msbuild.yml\n\nparameters:\n- name: 'solution'\n  default: '**/*.sln'\n  type: string\n\nsteps:\n- task: msbuild@1\n  inputs:\n    solution: ${{ parameters['solution'] }}  # index syntax\n- task: vstest@2\n  inputs:\n    solution: ${{ parameters.solution }}  # property dereference syntax\n```\n\n----------------------------------------\n\nTITLE: Encoding PAT for npm Authentication (Node.js)\nDESCRIPTION: This Node.js command-line script encodes a personal access token (PAT) to Base64 for use in the .npmrc file. It prompts for the PAT and outputs the encoded value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode -e \"require('readline') .createInterface({input:process.stdin,output:process.stdout,historySize:0}) .question('PAT> ',p => { b64=Buffer.from(p.trim()).toString('base64');console.log(b64);process.exit(); })\"\n```\n\n----------------------------------------\n\nTITLE: Upgrading Azure CLI on Hosted Agents (Bash)\nDESCRIPTION: This YAML snippet demonstrates how to upgrade Azure CLI to the latest version on a hosted agent using pip. It first specifies the Python version to use via the UsePythonVersion task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n# Specify python version\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '3.x'\n    architecture: 'x64'\n\n# Update to latest Azure CLI version\n- bash: pip install --pre azure-cli\n  displayName: 'Upgrade Azure CLI'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipelines YAML for Managed DevOps Pool\nDESCRIPTION: This YAML snippet shows how to configure an Azure Pipeline to use a Managed DevOps Pool. It replaces the default Microsoft-hosted agent with a custom Managed DevOps Pool named 'fabrikam-managed-pool'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  name: fabrikam-managed-pool\n```\n\n----------------------------------------\n\nTITLE: Updating Iteration Path Properties with Azure DevOps CLI\nDESCRIPTION: Command for updating iteration path properties such as name, path, start date, and finish date. This command allows you to rename iterations or move them in the hierarchy structure of your project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration project update --path\n                                   [--child-id]\n                                   [--finish-date]\n                                   [--name]\n                                   [--project]\n                                   [--start-date]\n```\n\n----------------------------------------\n\nTITLE: Comparing Jenkins Declarative Pipeline and Azure Pipelines YAML Configuration\nDESCRIPTION: A comparison showing how a basic Jenkins pipeline with build and test stages translates to Azure Pipelines YAML format. Both configurations define a build process with installation, build, and test steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-jenkins.md#2025-04-22_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\npipeline {\n    agent none\n    stages {\n        stage('Build') {\n            steps {\n                sh 'npm install'\n                sh 'npm run build'\n            }\n        }\n        stage('Test') {\n            steps {\n                sh 'npm test'\n            }\n        }\n    }\n}\n```\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Build\n  steps:\n  - script: npm install\n  - script: npm run build\n- job: Test\n  steps:\n  - script: npm test\n```\n\n----------------------------------------\n\nTITLE: Rollup Story Points to Epics from User Stories (Power BI Query)\nDESCRIPTION: Power BI M query that retrieves Epics and rolls up Story Points from descendant User Stories. This query filters for Epics in a specific area that have at least one User Story descendant.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_4\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n            &\"$filter=WorkItemType eq 'Epic'\"\n            &\" and State ne 'Cut'\"\n            &\" and startswith(Area/AreaPath,'{areapath}')\"\n            &\" and Descendants/any(d:d/WorkItemType eq 'User Story')\"    \n        &\"& $select=WorkItemId,Title,WorkItemType,State,AreaSK\"\n        &\"& $expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\"        \n            &\"Descendants(\"\n                &\"$apply=filter(WorkItemType eq 'User Story')\"\n                &\"/aggregate(StoryPoints with sum as TotalStoryPoints)\"\n            &\")\", \n        null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4])  \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Running Lint Tests with flake8 in Azure Pipelines YAML\nDESCRIPTION: Installs flake8 and performs linting over the working directory. Suitable for style and quality checks. Assumes any Python project structure; requirements are python and pip. The lint results are visible in pipeline logs, and the step is labeled for readability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- script: |\\n    python -m pip install flake8\\n    flake8 .\\n  displayName: 'Run lint tests'\n```\n\n----------------------------------------\n\nTITLE: Setting Up SecretVault for PowerShell Repository Credentials\nDESCRIPTION: Commands to create a SecretVault, store credentials, and create a credential info object for PSResourceGet.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\nRegister-SecretVault -Name \"MySecretVault\" -ModuleName Microsoft.PowerShell.SecretStore -DefaultVault\n\nSet-Secret -Name \"MyCredential\" -Secret $credentials -Vault \"MySecretVault\"\n\n$CredentialInfo = [Microsoft.PowerShell.PSResourceGet.UtilClasses.PSCredentialInfo]::new('MySecretVault', 'MyCredential')\n```\n\n----------------------------------------\n\nTITLE: Creating a PR with Title and Description using Azure DevOps CLI\nDESCRIPTION: This command creates a new pull request in the Fabrikam repository with a specified title and multi-line description. It merges changes from the 'new' branch using the Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-requests.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr create --repository Fabrikam --source-branch new --title \"Update the readme\" --description \"This PR updates the readme.\" \"These are *new* changes.\"\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Connection with .NET Standard\nDESCRIPTION: Shows explicit authentication method for .NET Standard version of the client libraries where interactive dialogs are not available. Implements a complete console application structure with proper connection handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/dotnet-client-libraries.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing Microsoft.TeamFoundation.SourceControl.WebApi;\nusing Microsoft.VisualStudio.Services.Common;\nusing Microsoft.VisualStudio.Services.WebApi;\n\nnamespace ConsoleApp1\n{\n    class Program\n    {\n        const string collectionUri = \"https://dev.azure.com/fabrikam\";\n        const string projectName = \"MyGreatProject\";\n        const string repoName = \"MyRepo\";\n        const string pat = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\n\n        static void Main(string[] args)\n        {\n            var creds = new VssBasicCredential(string.Empty, pat);\n            \n            // Connect to Azure DevOps Services\n            var connection = new VssConnection(new Uri(collectionUri), creds);\n            \n            // Get a GitHttpClient to talk to the Git endpoints\n            using var gitClient = connection.GetClient<GitHttpClient>();\n            \n            // Get data about a specific repository\n            var repo = gitClient.GetRepositoryAsync(projectName, repoName).Result;\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Cross-Stage Job Dependencies in Azure DevOps YAML Pipeline\nDESCRIPTION: Example showing jobs in one stage depending on jobs in another stage. Job B1 runs if job A1 is skipped, and job B2 checks an output variable from job A1 to determine whether it should run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  jobs:\n  - job: A1\n    steps:\n     - bash: echo \"##vso[task.setvariable variable=shouldrun;isOutput=true]true\"\n     # or on Windows:\n     # - script: echo ##vso[task.setvariable variable=shouldrun;isOutput=true]true\n       name: printvar\n\n- stage: B\n  dependsOn: A\n  jobs:\n  - job: B1\n    condition: in(stageDependencies.A.A1.result, 'Skipped') # change condition to `Succeeded and stage will be skipped`\n    steps:\n    - script: echo hello from Job B1\n  - job: B2\n    condition: eq(stageDependencies.A.A1.outputs['printvar.shouldrun'], 'true')\n    steps:\n     - script: echo hello from Job B2\n```\n\n----------------------------------------\n\nTITLE: Updating Security Permissions with Azure DevOps CLI\nDESCRIPTION: This command shows how to update permissions for a specific user in a given namespace using the Azure DevOps CLI. In this example, it sets the 'ExecuteUnrestrictedQuery' permission (bit 8) to 'Allow' for the user and displays the results in a table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission update --allow-bit 8 --id 58450c49-b02d-465a-ab12-59ae512d6531 --subject contoso@contoso.com --token 56af920d-393b-4236-9a07-24439ccaa85c --output table\n```\n\n----------------------------------------\n\nTITLE: Setting Task as Failed with Condition\nDESCRIPTION: Shows how to use the task.complete command to mark a task as failed based on a condition in a Bash script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n- bash: |\n    if [ -z \"$SOLUTION\" ]; then\n      echo \"##vso[task.logissue type=error;]Missing template parameter \\\"solution\\\"\"\n      echo \"##vso[task.complete result=Failed;]\"\n    fi\n```\n\n----------------------------------------\n\nTITLE: Cloning a Git Repository to a Specific Location\nDESCRIPTION: Git command for cloning a repository to a specific folder path. This example clones the FiberTests repository to the C:\\Repos\\FiberTests directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/clone.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit clone https://fiber-teams@dev.azure.com/fiber-teams/FiberTests/_git/FiberTests C:\\Repos\\FiberTests\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for Azure DevOps CLI Commands\nDESCRIPTION: Shows help content for the main 'az devops' command group. This includes a list of available subgroups (like pipelines, boards, repos, artifacts) and top-level commands within the Azure DevOps extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/index.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops -h\n```\n\n----------------------------------------\n\nTITLE: Viewing Git Commit History to Find SHA Hash Values\nDESCRIPTION: Use the git log command to view commit history and identify SHA hash values of recent commits, which is necessary to find the commit before the large binary was added.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/remove-binaries.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit log\n```\n\n----------------------------------------\n\nTITLE: Executing Maven Deploy Command (Shell)\nDESCRIPTION: This shell command is used in both YAML and Classic pipelines to execute the Maven deploy command, which publishes the artifacts to the configured repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/publish-maven-artifacts.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Making AJAX Request to Azure DevOps REST API using jQuery\nDESCRIPTION: This JavaScript code snippet demonstrates how to make an AJAX request to the Azure DevOps REST API using jQuery. It includes authentication with a Personal Access Token (PAT) and retrieves project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/how-to/call-rest-api.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n    $( document ).ready(function() {\n        $.ajax({\n            url: 'https://dev.azure.com/fabrikam/_apis/projects?api-version=1.0',\n            dataType: 'json',\n            headers: {\n                'Authorization': 'Basic ' + btoa(\"\" + \":\" + myPatToken)\n            }\n        }).done(function( results ) {\n            console.log( results.value[0].id + \" \" + results.value[0].name );\n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: Setting Key Vault Secrets\nDESCRIPTION: Azure CLI commands to set secrets in Key Vault for storing sensitive configuration values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault secret set --vault-name \"$keyVault\" --name \"databricks-token\" --value \"your-databricks-pat\"\naz keyvault secret set --vault-name \"$keyVault\" --name \"StorageKey\" --value \"your-storage-key\"\naz keyvault secret set --vault-name \"$keyVault\" --name \"StorageConnectString\" --value \"your-storage-connection\"\n```\n\n----------------------------------------\n\nTITLE: Defining Deployment Variables in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to define pipeline variables at the beginning of an Azure Pipelines file using the 'variables' keyword. It sets 'serviceConnectionToAzure' (for the Azure service connection), 'appName' (for the target web app), and 'functionAppName' (derived from 'pom.xml's 'stagingDirectory'). These variables are typically referenced in subsequent deployment tasks within the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/includes/deployment-variables.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# at the top of your YAML file \n# set some variables that you'll need when you deploy\nvariables:\n  # the name of the service connection that you created above\n  serviceConnectionToAzure: name-of-your-service-connection\n  # the name of your web app here is the same one you used above\n  # when you created the web app using the Azure CLI\n  appName: my-app-name\n  # the name of your functionApp is what you provided as\n  # stagingDirectory in pom.xml\n  functionAppName: 'javafunctions'\n# ...\n```\n\n----------------------------------------\n\nTITLE: Installing Rails in Azure Pipelines (YAML)\nDESCRIPTION: This snippet installs the Rails gem and verifies the installation by running 'rails -v', using the Azure Pipelines script step. Requires a Ruby environment set by a previous UseRubyVersion task and network access to RubyGems. The script outputs the installed Rails version and fails the pipeline if installation is unsuccessful. Parameter 'displayName' tags this step for logging clarity.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/ruby.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- script: gem install rails && rails -v\\n  displayName: 'gem install rails'\\n\n```\n\n----------------------------------------\n\nTITLE: Using Build.DefinitionName Variable in Azure DevOps Pipelines\nDESCRIPTION: Provides the name of the build pipeline. Note that this value might contain characters invalid for label formats. It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_8\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.DefinitionName\n```\n\n----------------------------------------\n\nTITLE: Showing Agent Queue Details in Azure Pipelines using Azure CLI\nDESCRIPTION: Azure CLI command to show details of a specific agent queue in Azure Pipelines. It requires the queue ID as a parameter and returns detailed information about the queue including its name, associated pool, and project ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/pools-queues.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines queue show --id\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines queue show --id 14\n```\n\n----------------------------------------\n\nTITLE: Retrieving Parent Work Item in Azure DevOps Analytics\nDESCRIPTION: This OData query demonstrates how to retrieve a work item and its parent. It uses the $expand parameter with the Parent property to include parent information when querying a specific work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/work-item-links.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/WorkItems?$select=WorkItemId,Title,State&$expand=Parent($select=WorkItemId,Title,WorkItemType, State)&$filter=WorkItemId eq 1048\n```\n\n----------------------------------------\n\nTITLE: Updating a Banner in Azure DevOps using CLI\nDESCRIPTION: This command updates the properties of an existing banner in Azure DevOps. It allows changing the message, type, and expiration date of the banner.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-banners.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops admin banner update --id\n                              [--expiration]\n                              [--message]\n                              [--type {error, info, warning}]\n```\n\n----------------------------------------\n\nTITLE: Using Build.Reason Variable in Azure DevOps Pipelines\nDESCRIPTION: Indicates the event that triggered the build, such as 'Manual', 'IndividualCI', 'BatchedCI', 'Schedule', 'ValidateShelveset', 'CheckInShelveset', 'PullRequest', 'BuildCompletion', or 'ResourceTrigger'. It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_12\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.Reason\n```\n\n----------------------------------------\n\nTITLE: Downloading Universal Package from Project-Scoped Feed\nDESCRIPTION: Azure CLI command to download a specific Universal Package from a project-scoped feed in Azure Artifacts. It requires organization name, project name, feed name, package name, version, and download path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/download-universal-packages.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz artifacts universal download --organization https://dev.azure.com/<YOUR_ORGANIZATION_NAME> --project <PROJECT_NAME> --scope project --feed <FEED_NAME> --name <PACKAGE_NAME> --version <PACKAGE_VERSION> --path <DOWNLOAD_PATH>\n```\n\n----------------------------------------\n\nTITLE: Configuring gradle.properties for Authentication in Gradle 8.2+\nDESCRIPTION: Setting up the gradle.properties file with credentials for authenticating to Azure Artifacts feed using a personal access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/publish-with-gradle.md#2025-04-22_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\n# Substitute FEED_NAME with the same name specified as the 'name' of the maven repository in build.gradle.\n# The value of the username is arbitrary but should not be blank.\n[FEED_NAME]Username=[ORGANIZATION_NAME]\n[FEED_NAME]Password=[PERSONAL_ACCESS_TOKEN]\n```\n\n----------------------------------------\n\nTITLE: Identifying Last Day in State for Work Items in Power BI Using DAX\nDESCRIPTION: This DAX code creates a calculated column that determines if a given row represents the last day a specific work item was in a particular state. It supports default aggregations in Power BI for time-in-state calculations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_4\n\nLANGUAGE: DAX\nCODE:\n```\nIs Last Day in State = \nISBLANK (CALCULATE (\n    COUNTROWS ( 'View Name' ),\n        ALLEXCEPT ( 'View Name', 'View Name'[Work Item Id] ),\n        'View Name'[Date] > EARLIER ( 'View Name'[Date] ),\n        'View Name'[State] = EARLIER ( 'View Name'[State] )\n))\n```\n\n----------------------------------------\n\nTITLE: Listing Branch Policies with Azure CLI\nDESCRIPTION: Uses the Azure DevOps CLI to list all branch policies in a project. Requires specifying the repository ID and branch name. Returns policy details like ID, name, if blocking, if enabled, etc.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy list --repository-id d28cd374-e7f0-4b1f-ad60-f349f155d47c --branch main --output table\n```\n\n----------------------------------------\n\nTITLE: Boolean Equivalence Using eq() Function in Azure DevOps YAML\nDESCRIPTION: Shows how eq() function handles implicit conversion of boolean values to numbers for equality comparison.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  trueAsNumber: $[eq('true', true)] # 1 vs. 1, True\n  falseAsNumber: $[eq('false', true)] # 0 vs. 1, False\n\nsteps:\n- script: echo $(trueAsNumber)\n- script: echo $(falseAsNumber)\n```\n\n----------------------------------------\n\nTITLE: Listing Azure CLI Commands for Azure DevOps Operations\nDESCRIPTION: This snippet provides a comprehensive list of Azure CLI commands used for various Azure DevOps operations. It includes commands for project management, pipeline operations, service endpoint creation, and variable group management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/cli/pipeline-variable-group-secret-nonsecret-variables.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- [az devops configure](/cli/azure/devops#az-devops-configure)\n- [az devops project create](/cli/azure/devops/project#az-devops-project-create)\n- [az devops project delete](/cli/azure/devops/project#az-devops-project-delete)\n- [az devops project delete](/cli/azure/devops/project#az-devops-project-list)\n- [az devops service-endpoint github create](/cli/azure/devops/service-endpoint/github#az-devops-service-endpoint-github-create)\n- [az login](/cli/azure/reference-index#az-login)\n- [az pipelines create](/cli/azure/pipelines#az-pipelines-create)\n- [az pipelines delete](/cli/azure/pipelines#az-pipelines-delete)\n- [az pipelines run](/cli/azure/pipelines#az-pipelines-run)\n- [az pipelines variable-group create](/cli/azure/pipelines/variable-group#az-pipelines-variable-group-create)\n- [az pipelines variable-group delete](/cli/azure/pipelines/variable-group#az-pipelines-variable-group-delete)\n- [az pipelines variable-group variable create](/cli/azure/pipelines/variable-group/variable#az-pipelines-variable-group-variable-create)\n- [az pipelines variable-group variable update](/cli/azure/pipelines/variable-group/variable#az-pipelines-variable-group-variable-update)\n```\n\n----------------------------------------\n\nTITLE: Complete Pipeline for React/Vue Applications in Azure Pipelines\nDESCRIPTION: Sets up a complete CI pipeline for React or Vue applications with Node.js setup, dependency installation, build, and artifact publishing steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_19\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: UseNode@1\n  inputs:\n    version: '16.x'\n  displayName: 'Install Node.js'\n\n- script: |\n    npm install\n  displayName: 'npm install'\n\n- script: |\n    npm run build\n  displayName: 'npm build'\n\n- task: CopyFiles@2\n  inputs:\n    Contents: 'build/**' # Pull the build directory (React)\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n\n- task: PublishBuildArtifacts@1\n  inputs: \n    PathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files\n    ArtifactName: 'www' # output artifact named www\n```\n\n----------------------------------------\n\nTITLE: Selecting Agent Pool and Agent Capabilities in Azure DevOps Pipeline YAML - YAML\nDESCRIPTION: This snippet demonstrates how to specify a self-hosted agent pool and set agent capability demands in an Azure DevOps pipeline using YAML. The 'pool' key specifies the agent pool name, while the 'demands' array allows you to select agents based on their properties (e.g., OS type or other capabilities). Required dependencies include accessible and configured agent pools and agents providing the listed capabilities. Inputs include agent pool names and capability filters; outputs are filtered agent selection for task assignment. Only compatible agents matching all demands will be used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\npool:\\n  name: myPrivateAgents\\n  demands:\\n  - agent.os -equals Darwin\\n  - anotherCapability -equals somethingElse\\n\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests for Release Workflow in Power BI\nDESCRIPTION: This Power BI M query retrieves failed test results for a specific release pipeline. It filters results by pipeline name and date range, then aggregates counts of test outcomes across all workflows.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_2\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate}) \"\n        &\"/groupby((TestSK, Test/TestName, Workflow), \"\n        &\"aggregate( \"\n            &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n                &\"ResultFailCount with sum as FailedCount, \"\n            &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n                &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n            &\"ResultFlakyCount with sum as FlakyCount)) \"\n        &\"/filter(FailedCount gt 0) \"\n    &\"/compute( \"\n    &\"iif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Resolving CRLF Issues in Scripts on Windows - Bash\nDESCRIPTION: This sequence of Bash commands converts text files from Windows-style line endings (CRLF) to Unix-style (LF) using dos2unix, then stages and commits the changes to Git. Targeted at resolving issues in container startup scripts when used in Linux containers, particularly when authored or cloned on Windows. Requires dos2unix, git Bash, and an initialized git repository. Paths to files must be customized to user context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\ndos2unix ~/azp-agent-in-docker/Dockerfile\ndos2unix ~/azp-agent-in-docker/start.sh\ngit add .\ngit commit -m \"Fixed CR\"\ngit push\n```\n\n----------------------------------------\n\nTITLE: Accessing Private Key Vault from Self-hosted Agent using Variable Groups\nDESCRIPTION: This pipeline demonstrates how to access a private Key Vault through a variable group using a self-hosted agent deployed in a virtual network with proper network connectivity to the Key Vault's private endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\npool: Self-hosted-pool\n\nvariables:\n  group: mySecret-VG\n\nsteps:\n- task: CmdLine@2\n  inputs:\n    script: 'echo $(mySecret) > secret.txt'\n    \n- task: CopyFiles@2\n  inputs:\n    Contents: secret.txt\n    targetFolder: '$(Build.ArtifactStagingDirectory)'\n\n- task: PublishBuildArtifacts@1\n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n    ArtifactName: 'drop'\n    publishLocation: 'Container'\n```\n\n----------------------------------------\n\nTITLE: Basic Scheduled Trigger for Main Branch in Azure Pipelines\nDESCRIPTION: YAML configuration for a daily scheduled trigger that runs at midnight UTC for the main branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# YAML file in the main branch\nschedules:\n- cron: '0 0 * * *'\n  displayName: Daily midnight build\n  branches:\n    include:\n    - main\n```\n\n----------------------------------------\n\nTITLE: Downloading a Specific Artifact Using DownloadPipelineArtifact Task - Azure Pipelines - YAML\nDESCRIPTION: This YAML snippet configures the DownloadPipelineArtifact@2 task to fetch a specific artifact from a defined pipeline run, specifying parameters such as a particular project, pipeline definition, and pipeline ID. The task inputs 'buildType: specific' and 'buildVersionToDownload: specific' ensure that only artifacts from the designated build are downloaded, with 'artifactName: drop' identifying the artifact. Use this approach when reproducibility or traceability for specific builds/artifacts is required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DownloadPipelineArtifact@2\n  displayName: 'Download Pipeline Artifact'\n  inputs:\n    buildType: specific\n    project: 'xxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx'\n    definition: 79\n    buildVersionToDownload: specific\n    pipelineId: 597\n    artifactName: drop\n\n```\n\n----------------------------------------\n\nTITLE: Querying Features and Child User Stories in Power BI\nDESCRIPTION: This Power BI query retrieves Features and their linked User Stories using the Child link type. It filters for non-closed Features within a specific Area Path and expands the Links entity to include details of the linked User Stories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'Feature' \"\n            &\"and State ne 'Closed' and State ne 'Removed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \" \n        &\"&$select=WorkItemId,Title,WorkItemType,State,AreaSK \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath), \"\n                &\"Links( \"\n                    &\"$filter=LinkTypeName eq 'Child' \"\n                        &\"and TargetWorkItem/WorkItemType eq 'User Story'; \"\n                    &\"$select=LinkTypeName; \"\n                    &\"$expand=TargetWorkItem($select=WorkItemType,WorkItemId,Title,State) \"\n                &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Accessing Output Variables in Same Job Using PowerShell\nDESCRIPTION: Sets and accesses two variables in PowerShell: a regular variable 'myJobVar' and an output variable 'myOutputJobVar'. Shows the different syntax required for each type of variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - powershell: |\n     Write-Host \"##vso[task.setvariable variable=myJobVar]this is the same job\"\n  - powershell: |\n     Write-Host \"##vso[task.setvariable variable=myOutputJobVar;isOutput=true]this is the same job too\"\n    name: setOutput\n  - powershell: |\n     Write-Host $(myJobVar) \n  - powershell: |\n     Write-Host $(setOutput.myOutputJobVar)\n```\n\n----------------------------------------\n\nTITLE: YAML Pipeline PowerShell Task to Access Azure DevOps REST API\nDESCRIPTION: Example of a PowerShell task in a YAML pipeline that uses OAuth token authentication to access the Azure DevOps REST API for retrieving pipeline definition information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/powershell.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PowerShell@2\n  inputs:\n    targetType: 'inline'\n    script: |\n      $url = \"$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/definitions/$($env:SYSTEM_DEFINITIONID)?api-version=5.0\"\n              Write-Host \"URL: $url\"\n              $pipeline = Invoke-RestMethod -Uri $url -Headers @{\n                  Authorization = \"Bearer $env:SYSTEM_ACCESSTOKEN\"\n              }\n              Write-Host \"Pipeline = $($pipeline | ConvertTo-Json -Depth 100)\"\n  env:\n     SYSTEM_ACCESSTOKEN: $(System.AccessToken)\n```\n\n----------------------------------------\n\nTITLE: Variable Template Usage\nDESCRIPTION: Demonstrates how to define and include variables from a template file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  favoriteVeggie: 'brussels sprouts'\n```\n\n----------------------------------------\n\nTITLE: Implementing RejectCanary Stage in Azure Pipelines YAML\nDESCRIPTION: This YAML configuration defines a stage that rejects a canary deployment in Kubernetes. It depends on the PromoteRejectCanary stage and executes when that stage fails, creating necessary Docker registry secrets before rejecting the canary deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/kubernetes/canary-demo.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n- stage: RejectCanary\n  displayName: Reject canary\n  dependsOn: PromoteRejectCanary\n  condition: failed()\n\n  jobs:\n  - deployment: RejectCanary\n    displayName: Reject Canary\n    pool: \n      vmImage: ubuntu-latest\n    environment: 'akscanary'\n    strategy:\n      runOnce:\n        deploy:\n          steps:        \n          - task: KubernetesManifest@1\n            displayName: Create Docker Registry Secret for reject canary\n            inputs:\n              action: 'createSecret'\n              connectionType: 'azureResourceManager'\n              azureSubscriptionConnection: 'azure-pipelines-canary-sc'\n              azureResourceGroup: 'kubernetes-testing'\n              kubernetesCluster: 'my-aks-cluster'\n              secretType: 'dockerRegistry'\n              secretName: 'my-acr-secret'\n              dockerRegistryEndpoint: 'azure-pipelines-canary-acr'    \n          - task: KubernetesManifest@1\n            displayName: Reject canary deployment\n            inputs:\n              action: 'reject'\n              connectionType: 'azureResourceManager'\n              azureSubscriptionConnection: 'azure-pipelines-canary-sc'\n              azureResourceGroup: 'my-resource-group'\n              kubernetesCluster: 'my-aks-cluster'\n              namespace: 'default'\n              strategy: 'canary'\n              manifests: '$(Pipeline.Workspace)/manifests/*'\n```\n\n----------------------------------------\n\nTITLE: Downloading and Installing a CA Certificate in a YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to download a secure certificate file using the DownloadSecureFile task and install it in a Linux environment. The script sets appropriate permissions and links the certificate to the trusted CA directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/secure-files.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadSecureFile@1\n  name: caCertificate\n  displayName: 'Download CA certificate'\n  inputs:\n    secureFile: 'myCACertificate.pem'\n\n- script: |\n    echo Installing $(caCertificate.secureFilePath) to the trusted CA directory...\n    sudo chown root:root $(caCertificate.secureFilePath)\n    sudo chmod a+r $(caCertificate.secureFilePath)\n    sudo ln -s -t /etc/ssl/certs/ $(caCertificate.secureFilePath)\n```\n\n----------------------------------------\n\nTITLE: Completing Pull Requests using Azure DevOps CLI\nDESCRIPTION: Command to complete a pull request using Azure DevOps CLI by updating its status to 'completed'. This allows users to merge the changes from the command line interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/complete-pull-requests.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr update --id 21 --status completed\n```\n\n----------------------------------------\n\nTITLE: Creating Dockerfile for Windows Azure Pipelines Agent\nDESCRIPTION: This Dockerfile sets up a Windows Server Core container with PowerShell to run an Azure Pipelines agent. It copies a startup script and sets the entry point.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_0\n\nLANGUAGE: Dockerfile\nCODE:\n```\nFROM mcr.microsoft.com/windows/servercore:ltsc2022\n\nWORKDIR /azp/\n\nCOPY ./start.ps1 ./\n\nCMD powershell .\\start.ps1\n```\n\n----------------------------------------\n\nTITLE: Adding an Iteration Path to a Team Using Azure DevOps CLI\nDESCRIPTION: Example showing how to add the 'Release 2' iteration path to the 'Service Delivery' team in the 'Fabrikam Fiber' project. The command returns detailed information about the added iteration path including its ID, name, and URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration team add --id a0554e98-b1f1-4230-8500-733c739a0113 --team \"Service Delivery\" --project \"Fabrikam Fiber\"\n{\n  \"attributes\": {\n    \"finishDate\": null,\n    \"startDate\": null,\n    \"timeFrame\": \"future\"\n  },\n  \"id\": \"a0554e98-b1f1-4230-8500-733c739a0113\",\n  \"name\": \"Release 2\",\n  \"path\": \"Fabrikam Fiber\\\\Release 2\",\n  \"url\": \"https://dev.azure.com/fabrikam/56af920d-393b-4236-9a07-24439ccaa85c/43e6bd2e-696f-492c-bbf7-9cde9cd420ea/_apis/work/teamsettings/iterations/a0554e98-b1f1-4230-8500-733c739a0113\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Creating Case Enforcement Policy\nDESCRIPTION: A concrete example showing how to implement a required case enforcement policy in the Fabrikam repository. The example uses the default organization and project configuration and outputs the result in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy case-enforcement create --blocking true --enabled true --repository-id d28cd374-e7f0-4b1f-ad60-f349f155d47c --output table\n```\n\n----------------------------------------\n\nTITLE: Adding a Retention Lease via InvokeRESTAPI Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet uses the built-in InvokeRESTAPI task in Azure Pipelines to add a retention lease to the current pipeline run upon successful completion. It POSTs a request to the Azure DevOps REST API to create a lease valid for 2 years (730 days). Requires a configured Service Connection and the System.AccessToken.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/run-retention.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: InvokeRESTAPI@1\n  displayName: 'Retain on Success'\n  inputs:\n    connectionType: connectedServiceName\n    serviceConnection: Your Service Connection\n    method: POST\n    headers: |\n      {\n        \"Content-type\": \"application/json\",\n        \"Authorization\": \"bearer $(system.AccessToken)\"\n      }\n    body: |\n      [{\n        \"daysValid\": 730,\n        \"definitionId\": $(System.DefinitionId),\n        \"ownerId\": \"User:$(Build.RequestedForId)\",\n        \"protectPipeline\": false,\n        \"runId\": $(Build.BuildId)\n      }]\n    waitForCompletion: 'false'\n```\n\n----------------------------------------\n\nTITLE: Setting AGENT_ACKNOWLEDGE_NO_UPDATES Variable in Pipeline\nDESCRIPTION: YAML configuration to set the AGENT_ACKNOWLEDGE_NO_UPDATES variable for agents running on operating systems not supported by .NET 6. This allows pipelines to continue running on legacy systems.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v3-agent.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: 'agentWithVariables'\n  displayName: 'Agent with variables'\n\n  variables:\n    AGENT_ACKNOWLEDGE_NO_UPDATES: 'true' # Required to not fail job on operating system that is not supported by .NET 6\n```\n\n----------------------------------------\n\nTITLE: Adding a Publish Code Coverage Task in Azure Pipelines YAML\nDESCRIPTION: This snippet adds a step using the `PublishCodeCoverageResults@1` task to publish code coverage results generated by JaCoCo. It specifies the tool (`JaCoCo`), the location of the summary XML file and report directory using predefined variables, and configures the pipeline to fail if coverage results are empty.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishCodeCoverageResults@1\n  inputs:\n    codeCoverageTool: \"JaCoCo\"\n    summaryFileLocation: \"$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml\"\n    reportDirectory: \"$(System.DefaultWorkingDirectory)/**/site/jacoco\"\n    failIfCoverageEmpty: true\n```\n\n----------------------------------------\n\nTITLE: Setting Service Principal Authentication in Linux/macOS\nDESCRIPTION: Bash script to configure environment variables for Service Principal authentication with Azure Artifacts feeds using certificate-based authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/nuget-exe.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport ARTIFACTS_CREDENTIALPROVIDER_FEED_ENDPOINTS='{\n    \"endpointCredentials\": [\n        {\n            \"endpoint\": \"<FEED_URL>\",\n            \"clientId\": \"<SERVICE_PRINCIPAL_APPLICATION_(CLIENT)_ID>\",\n            \"clientCertificateSubjectName\": \"<SERVICE_PRINCIPAL_CERTIFICATE_NAME>\",\n            \"clientCertificateFilePath\": \"<SERVICE_PRINCIPAL_CERTIFICATE_PATH>\"\n        }\n    ]\n}'\n```\n\n----------------------------------------\n\nTITLE: Extending Template in Azure DevOps Pipeline\nDESCRIPTION: An Azure pipeline configuration that extends the params.yml template, defines a container resource, and sets parameter values for the template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n# azure-pipeline.yml\n\nresources:\n containers:\n     - container: my-container\n       endpoint: my-service-connection\n       image: mycontainerimages\n\nextends:\n    template: params.yml\n    parameters:\n        yesNo: true\n        image: 'windows-latest'\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Artifact using Azure CLI in Azure DevOps\nDESCRIPTION: This Azure CLI command demonstrates how to publish a pipeline artifact using the az pipelines runs artifact upload command. It specifies the artifact name, path, and run ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines runs artifact upload --artifact-name 'WebApp' --path $(System.DefaultWorkingDirectory)/bin/WebApp --run-id '<run id here>'\n```\n\n----------------------------------------\n\nTITLE: Using Custom Conditions for Stage Execution\nDESCRIPTION: Example demonstrating how to use a custom condition with expressions to control when a stage runs. This shows combining the succeeded() condition with branch filtering.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n\n- stage: B\n  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))\n```\n\n----------------------------------------\n\nTITLE: Publishing a PowerShell Module to Azure Artifacts\nDESCRIPTION: Command to publish a PowerShell module to an Azure Artifacts feed using PSResourceGet.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_11\n\nLANGUAGE: powershell\nCODE:\n```\nPublish-PSResource -Path <PACKAGE_PATH> -Repository <REPOSITORY_NAME> -Credential $credentials -ApiKey <ANY_STRING>\n```\n\n----------------------------------------\n\nTITLE: Building and Publishing Docker Image Pipeline\nDESCRIPTION: YAML pipeline configuration for building and pushing a Docker image to Azure Container Registry. Includes trigger configuration, variable definitions, and build stage with Docker task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/deploy-docker-webapp.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\nresources:\n- repo: self\n\nvariables:\n    dockerRegistryServiceConnection: '{{ containerRegistryConnection.Id }}'\n    imageRepository: 'javascriptdocker'\n    containerRegistry: 'sampleappcontainerregistry.azurecr.io'\n    dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'\n    tag: '$(Build.BuildId)'\n    vmImageName: 'ubuntu-latest'\n\nstages:\n- stage: Build\n    displayName: Build and push stage\n    jobs:\n    - job: Build\n    displayName: Build\n    pool:\n        vmImage: $(vmImageName)\n    steps:\n    - task: Docker@2\n        displayName: Build and push an image to container registry\n        inputs:\n        command: buildAndPush\n        repository: $(imageRepository)\n        dockerfile: $(dockerfilePath)\n        containerRegistry: $(dockerRegistryServiceConnection)\n        tags: |\n            $(tag)\n```\n\n----------------------------------------\n\nTITLE: Running macOS Agent in Single-Job Mode\nDESCRIPTION: Command to run the macOS agent in a mode where it accepts only one job and then shuts down. This is useful for running on services like Azure Container Instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh --once\n```\n\n----------------------------------------\n\nTITLE: Referencing External Azure Repos in YAML Pipelines\nDESCRIPTION: Demonstrates how to configure a YAML pipeline to check out source code from an Azure Repos repository located in a different Azure DevOps organization. It utilizes a service connection (`MyServiceConnection`) defined with credentials to access the external repository (`ProjectName/RepoName`). The `checkout` steps show checking out both the primary (`self`) and the external (`otherrepo`) repositories. Requires a pre-configured Azure Repos/Team Foundation Server service connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-163-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\nresources:\n  repositories:\n  - repository: otherrepo\n    name: ProjectName/RepoName\n    endpoint: MyServiceConnection\nsteps:\n- checkout: self\n- checkout: otherrepo\n```\n```\n\n----------------------------------------\n\nTITLE: Pulling Remote Changes in Git Command Line\nDESCRIPTION: Command to download and merge changes from the remote repository into your local branch. This keeps your local branch in sync with changes made by other team members.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/gitquickstart.md#2025-04-22_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n> git pull\n```\n\n----------------------------------------\n\nTITLE: Setting a Secret Variable in Bash\nDESCRIPTION: Creates a secret variable 'mySecretVal' with a masked value using the task.setvariable command. The issecret=true flag ensures the value is saved as a secret and masked in logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/secret-variables-logging.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n- bash: |\n    echo \"##vso[task.setvariable variable=mySecretVal;issecret=true]secretvalue\"\n```\n\n----------------------------------------\n\nTITLE: Language Version Matrix in Azure Pipelines\nDESCRIPTION: Azure Pipelines configuration for testing with multiple Ruby versions. This uses the strategy matrix combined with the UseRubyVersion task to achieve the same functionality as the Travis CI language version matrix.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nvmImage: 'ubuntu-latest'\nstrategy:\n  matrix:\n    ruby 2.3:\n      ruby_version: '2.3.7'\n    ruby 2.4:\n      ruby_version: '2.4.4'\n    ruby 2.5:\n      ruby_version: '2.5.1'\nsteps:\n- task: UseRubyVersion@0\n  inputs:\n    versionSpec: $(ruby_version)\n- script: ruby --version\n```\n\n----------------------------------------\n\nTITLE: Resolving Azure Pipelines REST API URLs in PowerShell Build Tasks\nDESCRIPTION: PowerShell script for a pipeline task that resolves the correct base URL for calling Azure Pipelines release REST APIs. The script retrieves the organization URL from an environment variable, calls the Resource Areas REST API, and constructs a proper URL for the release definitions API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\n$orgUrl = $env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\n$releaseManagementAreaId = \"efc2f575-36ef-48e9-b672-0c6fb4a48ac5\"\n\n# Build the URL for calling the org-level Resource Areas REST API for the RM APIs\n$orgResourceAreasUrl = [string]::Format(\"{0}/_apis/resourceAreas/{1}?api-preview=5.0-preview.1\", $orgUrl, $releaseManagementAreaId)\n\n# Do a GET on this URL (this returns an object with a \"locationUrl\" field)\n$results = Invoke-RestMethod -Uri $orgResourceAreasUrl\n\n# The \"locationUrl\" field reflects the correct base URL for RM REST API calls\n$rmUrl = $results.locationUrl\n\n# Construct the URL to the release definitions REST API\n$releaseDefinitionsUrl = [string]::Format(\"{0}/_apis/release/definitions?api-preview=5.0-preview.1\", $rmUrl)\n```\n\n----------------------------------------\n\nTITLE: Configuring Unskippable Stages in Azure Pipelines YAML - YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure an unskippable stage in an Azure DevOps pipeline by setting the isSkippable property to false. To use this, add the isSkippable: false line under your stage definition; as a result, this stage will always execute regardless of user selection. Dependencies include Azure DevOps Pipelines with YAML support, and the key parameter is isSkippable, which controls if a stage can be skipped. The stage will always be run and will not appear as deselectable in the 'Stages to run' panel.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-242-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- stage: sdl_check_stage\\n  displayName: SDL Stage\\n  isSkippable: false\\n  jobs:\\n  - job: sdl_check_job\\n    ...\\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Repos Template Repository with Service Connection\nDESCRIPTION: Sets up an Azure Repos repository as a template source with a service connection to access a repository in a different organization. This configuration allows referencing templates from a central repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n  - repository: templates\n    name: Contoso/BuildTemplates\n    endpoint: myServiceConnection # Azure DevOps service connection\njobs:\n- template: common.yml@templates\n```\n\n----------------------------------------\n\nTITLE: Cloning Sample Repository using Git\nDESCRIPTION: Clones a specified Git repository from a given URL to the local filesystem. This step is necessary to obtain the source code for local testing and subsequent deployment setup. Requires Git to be installed. The `<repository-url>` placeholder needs to be replaced with the actual URL of the user's forked repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_0\n\nLANGUAGE: git\nCODE:\n```\ngit clone <repository-url>\n```\n\n----------------------------------------\n\nTITLE: Authenticating npm in Azure Pipelines using Lightweight Task (YAML)\nDESCRIPTION: This YAML snippet demonstrates using the `npmAuthenticate@0` task in Azure Pipelines to authenticate with an npm feed defined in a `.npmrc` file. Following authentication, custom script commands (`npm ci` for installing dependencies and `npm publish` for publishing packages) are executed. This approach enables using custom scripting for npm operations within a pipeline while leveraging the dedicated task for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/artifacts/sprint-170-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: npmAuthenticate@0\n  inputs:\n    workingFile: .npmrc\n- script: |\n    npm ci\n    npm publish\n```\n\n----------------------------------------\n\nTITLE: Maven Caching in Azure Pipelines YAML\nDESCRIPTION: This example demonstrates how to set up Maven caching in Azure Pipelines. It configures the local Maven repository path and caches it, with options for both script and Maven task usage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository\n  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'\n\nsteps:\n- task: Cache@2\n  inputs:\n    key: 'maven | \"$(Agent.OS)\" | **/pom.xml'\n    restoreKeys: |\n      maven | \"$(Agent.OS)\"\n      maven\n    path: $(MAVEN_CACHE_FOLDER)\n  displayName: Cache Maven local repo\n\n- script: mvn install -B -e\n\n- task: Maven@4\n  inputs:\n    mavenPomFile: 'pom.xml'\n    mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Stage Condition Example 3\nDESCRIPTION: This example demonstrates how step-level conditions interact with stage-level dependencies. When stage1 is canceled, stage2 doesn't run, even though it contains a step with a condition that evaluates to true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: stage1\n  jobs:\n  - job: A\n    steps:\n      - script: echo 1; sleep 30\n- stage: stage2\n  jobs:\n  - job: B\n    steps:\n      - script: echo 2\n        condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n```\n\n----------------------------------------\n\nTITLE: Configuring GitHub Repository as a Template Source in Azure Pipelines\nDESCRIPTION: Defines a GitHub repository as a template source and references a template from it. The repository is pinned to a specific tag version and the template is used with parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n    - repository: templates\n      type: github\n      name: Contoso/BuildTemplates\n      ref: refs/tags/v1.0 # optional ref to pin to\n\njobs:\n- template: common.yml@templates  # Template reference\n  parameters:\n    vmImage: 'windows-latest'\n```\n\n----------------------------------------\n\nTITLE: Setting Output Variables for Future Jobs in PowerShell\nDESCRIPTION: Sets an output variable 'myOutputVar' in a PowerShell script that can be accessed in future jobs. The variable is set with isOutput=true and assigned a name to reference later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - powershell: |\n     Write-Host \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is from job A\"\n    name: passOutput\n```\n\n----------------------------------------\n\nTITLE: Setting Output Variables with Matrix Strategy\nDESCRIPTION: This YAML example shows how to set output variables in a job with a matrix strategy and access them in a downstream job. The downstream job reference includes the matrix name in the variable path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n\n# Set an output variable from a job with a matrix\n- job: A\n  pool:\n    vmImage: 'ubuntu-latest'\n  strategy:\n    maxParallel: 2\n    matrix:\n      debugJob:\n        configuration: debug\n        platform: x64\n      releaseJob:\n        configuration: release\n        platform: x64\n  steps:\n  - bash: echo \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the $(configuration) value\"\n    name: setvarStep\n  - bash: echo $(setvarStep.myOutputVar)\n    name: echovar\n\n# Map the variable from the debug job\n- job: B\n  dependsOn: A\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    myVarFromJobADebug: $[ dependencies.A.outputs['debugJob.setvarStep.myOutputVar'] ]\n  steps:\n  - script: echo $(myVarFromJobADebug)\n    name: echovar\n```\n\n----------------------------------------\n\nTITLE: Releasing Android Apps to Google Play Store Using YAML Pipeline Task\nDESCRIPTION: This snippet demonstrates how to use the GooglePlayRelease@4 task to release a new Android app version to the Google Play store. It specifies the APK file pattern, the service connection for authentication, and the track for release (internal in this example).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GooglePlayRelease@4\n  inputs:\n    apkFile: '**/*.apk'\n    serviceEndpoint: 'yourGooglePlayServiceConnectionName'\n    track: 'internal'\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Duration Trend for All Project Pipelines in Power BI\nDESCRIPTION: Power BI query to retrieve pipeline duration trend data for all project pipelines. It filters runs by completion date and success status, then computes the 80th percentile duration for each pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration-trend.md#2025-04-22_snippet_5\n\nLANGUAGE: Power BI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"CompletedDate ge {startdate} \"\n                &\"and (SucceededCount eq 1 or PartiallySucceededCount eq 1) \"\n                &\") \"\n        &\"/compute( \"\n        &\"percentile_cont(TotalDurationSeconds, 0.8,PipelineId, CompletedDateSK) as Duration80thPercentileInSeconds) \"\n            &\"/groupby( \"\n                &\"(Duration80thPercentileInSeconds, Pipeline/PipelineName, CompletedOn/Date)) \"\n                &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Cloning TFVC Repository using Git-tf\nDESCRIPTION: Clones an existing TFVC repository to create a local Git repository using Git-tf.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/share-your-code-in-tfvc-xcode.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit tf clone https://fabrikamfiber.visualstudio.com $/FabrikamFiber\n```\n\n----------------------------------------\n\nTITLE: Unlisting NuGet Packages Using CLI\nDESCRIPTION: Command to unlist a NuGet package using the NuGet CLI. This hides the package from search results without actually deleting it from the feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/how-to/delete-and-recover-packages.md#2025-04-22_snippet_0\n\nLANGUAGE: Command\nCODE:\n```\nnuget.exe delete <PACKAGE_NAME> <PACKAGE_VERSION> -Source <PACKAGE_SOURCE_URL> -ApiKey <ANY_STRING>\n```\n\n----------------------------------------\n\nTITLE: Defining a GitHub Repository Resource in Azure DevOps\nDESCRIPTION: Shows how to define an external GitHub repository as a resource in Azure DevOps pipelines. This configuration is useful for template references or multi-repo checkout scenarios that require service connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n  - repository: common\n    type: github\n    name: Contoso/CommonTools\n    endpoint: MyContosoServiceConnection\n```\n\n----------------------------------------\n\nTITLE: Querying Pass Rate for All Project Pipelines\nDESCRIPTION: PowerBI query that retrieves pass rate data across all pipelines in a project. Groups results by pipeline name and completion date to show trends across the entire project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-pass-rate-trend.md#2025-04-22_snippet_6\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"CompletedDate ge {startdate} \"\n                &\"and CanceledCount ne 1 \"\n                &\") \"\n        &\"/groupby( \"\n        &\"(Pipeline/PipelineName, CompletedOn/Date), \"\n            &\"aggregate \"\n                &\"($count as TotalCount, \"\n                &\"SucceededCount with sum as SucceededCount , \"\n            &\"FailedCount with sum as FailedCount, \"\n                &\"PartiallySucceededCount with sum as PartiallySucceededCount)) \"\n            &\"/compute( \"\n        &\"SucceededCount mul 100.0 div TotalCount as PassRate, \"\n    &\"FailedCount mul 100.0 div TotalCount as FailRate, \"\n    &\"PartiallySucceededCount mul 100.0 div TotalCount as PartiallySuccessfulRate) \"\n    &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Publishing Universal Package with Custom Version in YAML Pipeline\nDESCRIPTION: YAML snippet for publishing a Universal Package with a custom version using Azure Pipelines. Includes options for specifying version strategy and custom version number.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/universal-packages.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: UniversalPackages@0\n  displayName: Publish\n  inputs:\n    command: publish\n    publishDirectory: '$(Build.ArtifactStagingDirectory)'             ## Location of the files you wish to publish\n    vstsFeedPublish: '<PROJECT_NAME>/<FEED_NAME>'                     ## The project and feed name to publish to. If you're working with an organization-scoped feed, specify only the feed name\n    vstsFeedPackagePublish: '<PACKAGE_NAME>'                          ## The package name. Must be lower case. Use only letters, numbers, and dashes\n    versionOption: custom                                             ## Select a versioning strategy. Options: `major`, `minor`, `patch`, `custom`\n    versionPublish: '<PACKAGE_VERSION>'                               ## The custom package version\n    packagePublishDescription: '<PACKAGE_DESCRIPTION>'                ## Description of the package content\n```\n\n----------------------------------------\n\nTITLE: Build Template with Dynamic Step List Implementation\nDESCRIPTION: Template file that processes the dynamic step list parameter. Sets up .NET Core SDK, executes the provided build steps, and handles artifact publishing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runtime-parameters.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n#build.yml\n\nparameters:\n  - name: build_tasks\n    type: stepList\n    default: []\n\nsteps:\n  - task: UseDotNet@2\n    displayName: 'Use .NET Core SDK'\n    inputs:\n      packageType: 'sdk'\n      version: '6.x'\n\n  - ${{ each step in parameters.build_tasks }}:\n      - ${{ step }}\n\n  - task: DotNetCoreCLI@2\n    displayName: 'Publish'\n    inputs:\n      command: 'publish'\n      arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'\n      projects: '**/*.csproj'\n\n  - task: PublishBuildArtifacts@1\n    displayName: 'Publish Artifact'\n    inputs:\n      PathtoPublish: '$(Build.ArtifactStagingDirectory)'\n      ArtifactName: 'drop'\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps CLI Extension\nDESCRIPTION: Commands to install or update the Azure DevOps extension for Azure CLI, which is required for managing Azure DevOps services including Universal Package publishing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/universal-packages.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name azure-devops\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name azure-devops\n```\n\n----------------------------------------\n\nTITLE: Implementing Pie Chart in Azure DevOps Extension\nDESCRIPTION: JavaScript code to create a pie chart using the Chart SDK in an Azure DevOps extension. It initializes the SDK, configures chart options, and renders the chart in a specified container.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-chart.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nVSS.init({\n        explicitNotifyLoaded: true,\n        usePlatformStyles: true \n    });\n\nVSS.require([\n        \"TFS/Dashboards/WidgetHelpers\", \n        \"Charts/Services\"\n        ],\n        function (WidgetHelpers, Services) {\n        WidgetHelpers.IncludeWidgetStyles();\n        VSS.register(\"chart\", function () { \n             return {\n             load:function() {\n                return Services.ChartsService.getService().then(function(chartService){\n                    var $container = $('#Chart-Container');\n                    var chartOptions = { \n                        \"hostOptions\": { \n                            \"height\": \"290\", \n                            \"width\": \"300\"\n                        },\n                        \"chartType\": \"pie\",\n                        \"series\": [{\n                            \"data\": [11, 4, 3, 1]\n                        }],\n                        \"xAxis\": { \n                            \"labelValues\": [\"Design\", \"On Deck\", \"Completed\", \"Development\"] \n                        }, \n                        \"specializedOptions\": {\n                            \"showLabels\": \"true\",\n                            \"size\": 200\n                        } \n                    };\n\n                    chartService.createChart($container, chartOptions);\n                    return WidgetHelpers.WidgetStatusHelper.Success();\n                });\n                }\n             }\n            });\n    VSS.notifyLoadSucceeded();\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting an Azure Pipeline using Azure CLI\nDESCRIPTION: Provides the syntax for the `az pipelines delete` command in Azure CLI. This command deletes a specific pipeline identified by its required `--id` parameter within an Azure DevOps organization and project. The `--yes` flag can bypass the confirmation prompt. Requires the Azure DevOps extension for Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/create-first-pipeline-next-steps.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n```azurecli\naz pipelines delete --id\n                    [--detect {false, true}]\n                    [--org]\n                    [--project]\n                    [--yes]\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch-Specific Builds in Azure Pipelines (YAML)\nDESCRIPTION: This YAML snippet shows how to configure Azure Pipelines to build only the main branch and branches starting with 'releases'. It uses the 'trigger' key with 'branches' and 'include' to specify the inclusion list.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  branches:\n    include:\n    - main\n    - releases*\n```\n\n----------------------------------------\n\nTITLE: Installing npm Packages using Script in YAML\nDESCRIPTION: Executes the standard `npm install` command within a script step in Azure Pipelines YAML to download and install project dependencies listed in `package.json` or `package-lock.json`. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- script: npm install\n```\n\n----------------------------------------\n\nTITLE: Configuring Ubuntu 22.04 VM Image in Azure Pipelines YAML\nDESCRIPTION: This code snippet demonstrates how to configure a job to use the Ubuntu 22.04 image in Azure Pipelines. It sets up a job named 'ubuntu2204' that runs on the 'ubuntu-22.04' VM image and executes a bash script to display a greeting and the Ubuntu version information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-208-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- job: ubuntu2204\n  pool:\n    vmImage: 'ubuntu-22.04'\n  steps:\n  - bash: |\n      echo Hello from Ubuntu 22.04\n      lsb_release -d\n```\n\n----------------------------------------\n\nTITLE: Get Latest Version of Single File\nDESCRIPTION: Command to get the latest version of a specific file in a project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/get-command.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1>tf get program.cs\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Elastic Agent Pool Resized Event (JSON)\nDESCRIPTION: This JSON object represents the sample payload sent when an 'elasticagentpool.resized' event occurs in Azure DevOps. It includes the publisher ID, event ID, details about the resized pool (ID, name, old size, new size), the associated project (ID, name), and the timestamp of the resize event. This payload is useful for configuring service hooks that react to changes in elastic agent pool sizes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"publisherId\": \"azure-devops\",\n  \"eventId\": \"elasticagentpool.resized\",\n  \"resource\": {\n    \"elasticAgentPool\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000pool-id\",\n      \"name\": \"pool-name\",\n      \"oldSize\": \"old-size\",\n      \"newSize\": \"new-size\",\n      \"project\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n        \"name\": \"project-name\"\n      }\n    }\n  },\n  \"resizedDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Local Branch\nDESCRIPTION: Command to delete a local Git branch\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_9\n\nLANGUAGE: git\nCODE:\n```\ngit branch -d branchname\n```\n\n----------------------------------------\n\nTITLE: Registry Allowlist Validation in Rego\nDESCRIPTION: Policy to ensure container images are only sourced from approved registries defined in an allowlist\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/artifact-policy.md#2025-04-22_snippet_1\n\nLANGUAGE: rego\nCODE:\n```\nallowlist = {\n \"gcr.io/myrepo\",\n \"raireg1.azurecr.io\"\n}\n\ncheckregistries[errors] {\n    trace(sprintf(\"Allowed registries: %s\", [concat(\", \", allowlist)]))\n    resourceUri := values[index].image.resourceUri\n    registry := fetchRegistry(resourceUri)\n    image := fetchImage(resourceUri)\n    not allowlist[registry]\n    errors := sprintf(\"%s: source registry not permitted\", [image]) \n}\n\nfetchRegistry(uri) = reg {\n    out := regex.find_n(\"//.*/\", uri, 1)\n    reg = trim(out[0], \"/\")\n}\n\nfetchImage(uri) = img {\n    out := regex.find_n(\"/.*@\", uri, 1)\n    img := trim(out[0], \"/@\")\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Git Repository via Command Line\nDESCRIPTION: Commands to create a new Git repository in a local folder containing a Visual Studio solution, make an initial commit, and rename the default branch to 'main'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-vs.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n> git init\n> git commit -am \"first commit\"\n> git branch -m main\n```\n\n----------------------------------------\n\nTITLE: Updating Extension Manifest for Azure DevOps Dashboard Widget\nDESCRIPTION: This JSON snippet shows how to update the vss-extension.json file to include new entries for a configurable widget and its configuration page. It demonstrates the structure for defining widget contributions, their properties, and associated files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n    ...\n    \"contributions\": [\n        ... , \n        {\n             \"id\": \"HelloWorldWidget3\",\n             \"type\": \"ms.vss-dashboards-web.widget\",\n             \"targets\": [\n                 \"ms.vss-dashboards-web.widget-catalog\",\n                 \"fabrikam.azuredevops-extensions-myExtensions.HelloWorldWidget.Configuration\"\n             ],\n             \"properties\": {\n                 \"name\": \"Hello World Widget 3 (with config)\",\n                 \"description\": \"My third widget\",\n                 \"previewImageUrl\": \"img/preview3.png\",                       \n                 \"uri\": \"hello-world3.html\",\n                 \"supportedSizes\": [\n                      {\n                             \"rowSpan\": 1,\n                             \"columnSpan\": 2\n                         }\n                     ],\n                 \"supportedScopes\": [\"project_team\"]\n             }\n         },\n         {\n             \"id\": \"HelloWorldWidget.Configuration\",\n             \"type\": \"ms.vss-dashboards-web.widget-configuration\",\n             \"targets\": [ \"ms.vss-dashboards-web.widget-configuration\" ],\n             \"properties\": {\n                 \"name\": \"HelloWorldWidget Configuration\",\n                 \"description\": \"Configures HelloWorldWidget\",\n                 \"uri\": \"configuration.html\"\n             }\n         }\n    ],\n    \"files\": [\n            {\n                \"path\": \"hello-world.html\", \"addressable\": true\n            },\n             {\n                \"path\": \"hello-world2.html\", \"addressable\": true\n            },\n            {\n                \"path\": \"hello-world3.html\", \"addressable\": true\n            },\n            {\n                \"path\": \"configuration.html\", \"addressable\": true\n            },\n            {\n                \"path\": \"sdk/scripts\", \"addressable\": true\n            },\n            {\n                \"path\": \"img\", \"addressable\": true\n            }\n        ],\n        ...     \n}\n```\n\n----------------------------------------\n\nTITLE: Tagged VM Deployment Pipeline Configuration in YAML\nDESCRIPTION: YAML configuration that targets VMs with specific tags for deployment, demonstrating how to deploy only to VMs that match multiple tag criteria.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-virtual-machines.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: \n- main\n\npool: \n   vmImage: ubuntu-latest\n\njobs:\n- deployment: VMDeploy\n  displayName: Deploy to VM\n  environment: \n    name: VMenv\n    resourceType: virtualMachine\n    tags: windows,prod\n  strategy:\n    runOnce:\n      deploy:   \n          steps:\n          - script: echo \"Hello world\"\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Artifacts Conditionally by Branch - Azure Pipelines - YAML\nDESCRIPTION: This YAML snippet demonstrates conditional artifact publishing using the PublishPipelineArtifact@1 task, where the output artifact name ('prod' or 'dev') depends on the source branch. It uses template expressions (${{ if ... }}') for branching logic. The artifact is published from a specified target path and by default is stored in Azure Pipelines. This approach helps segment artifacts for different release channels and ensures correct artifact naming for subsequent deployment stages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishPipelineArtifact@1\n  displayName: 'Publish pipeline artifact'\n  inputs:\n    targetPath: '$(Pipeline.Workspace)'\n    ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:\n        artifact: 'prod'\n    ${{ else }}:\n        artifact: 'dev'\n    publishLocation: 'pipeline'\n\n```\n\n----------------------------------------\n\nTITLE: Setting and Getting a Secret Variable in Bash\nDESCRIPTION: Sets a secret variable 'mySecretVal' and then retrieves its value in a subsequent Bash step. The variable value is masked in logs due to the issecret=true flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/secret-variables-logging.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n- bash: |\n    echo \"##vso[task.setvariable variable=mySecretVal;issecret=true]secretvalue\"\n- bash: |\n    echo $(mySecretVal)\n```\n\n----------------------------------------\n\nTITLE: Viewing Commit Details with Git Command Line\nDESCRIPTION: Command to display a diff view of the last commit in your current branch. This shows the changes made in the most recent commit including added, modified, and deleted content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-vs.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n> git show\n```\n\n----------------------------------------\n\nTITLE: Extension Runtime Configuration\nDESCRIPTION: Example showing runtime configuration attributes for an Azure DevOps extension manifest.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"galleryFlags\": [\n        \"Preview\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Path Filters for PR Triggers in Azure Pipelines\nDESCRIPTION: This example shows how to set up PR triggers with both branch and path filters. The pipeline will only run for changes to files in the 'docs' directory (excluding 'docs/README.md') when targeting 'main' or 'releases/*' branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# specific path\npr:\n  branches:\n    include:\n    - main\n    - releases/*\n  paths:\n    include:\n    - docs\n    exclude:\n    - docs/README.md\n```\n\n----------------------------------------\n\nTITLE: Using Iterative Job Template in YAML\nDESCRIPTION: This snippet shows how to use a job template that employs iterative insertion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-expressions.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# azure-pipelines.yml\njobs:\n- template: job.yml\n  parameters:\n    jobs:\n    - job: A\n      steps:\n      - script: echo This will get sandwiched between SetupMyBuildTools and PublishMyTelemetry.\n    - job: B\n      steps:\n      - script: echo So will this!\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack in Azure Pipelines\nDESCRIPTION: Installs webpack and webpack-cli as dev dependencies and runs webpack with a specified configuration file to bundle JavaScript applications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_20\n\nLANGUAGE: YAML\nCODE:\n```\n- script: |\n    npm install webpack webpack-cli --save-dev\n    npx webpack --config webpack.config.js\n```\n\n----------------------------------------\n\nTITLE: Finding Service Account Secret in Kubernetes 1.22+\nDESCRIPTION: Command to get the secret object for a specific service account in Kubernetes 1.22 and above, which is required when setting up a non-AKS Kubernetes resource with an existing service account.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-kubernetes.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secret -n <namespace>  -o jsonpath='{.items[?(@.metadata.annotations.kubernetes\\.io/service-account\\.name==\"service-account-name\")]}'\n```\n\n----------------------------------------\n\nTITLE: Setting and Getting a Secret Variable in PowerShell\nDESCRIPTION: Sets a secret variable 'mySecretVal' and then retrieves its value in a subsequent PowerShell step. The variable value is masked in logs due to the issecret=true flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/secret-variables-logging.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n- powershell: |\n    Write-Host \"##vso[task.setvariable variable=mySecretVal;issecret=true]secretvalue\"\n- powershell: |\n    Write-Host $(mySecretVal)\n```\n\n----------------------------------------\n\nTITLE: Explicit Job Definition with Properties\nDESCRIPTION: YAML configuration showing a single job with explicit properties like timeout and pool settings\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: myJob\n  timeoutInMinutes: 10\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - bash: echo \"Hello world\"\n```\n\n----------------------------------------\n\nTITLE: Adding Work Items to Existing Pull Request using Azure DevOps CLI\nDESCRIPTION: This snippet shows the syntax for adding work items to an existing pull request using the Azure DevOps CLI. It includes parameters for specifying the PR ID, work item IDs, and optional organization and subscription settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-requests.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr work-item add --id\n                          --work-items\n                          [--detect {false, true}]\n                          [--org]\n                          [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Azure Image Builder Task Configuration\nDESCRIPTION: YAML configuration for Azure VM Image Builder task that creates a custom VM image with the Java application artifacts and deploys it to the shared image gallery.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-virtual-scale-set-java.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n- task: AzureImageBuilderTask@1\n  displayName: 'Azure VM Image Builder Task'\n  inputs:\n    managedIdentity: '/subscriptions/<SUBSCRIPTION ID>/resourcegroups/<RESOURCE GROUP>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/<USER ASSIGNED IDENTITY NAME>'\n    imageSource: 'marketplace'\n    packagePath: '$(System.DefaultWorkingDirectory)/pipeline-artifacts'\n    inlineScript: |\n      sudo mkdir /lib/buildArtifacts\n      sudo cp  \"/tmp/pipeline-artifacts.tar.gz\" /lib/buildArtifacts/.\n      cd /lib/buildArtifacts/.\n      sudo tar -zxvf pipeline-artifacts.tar.gz\n      sudo sh install.sh\n    storageAccountName: 'vmssstorageaccount2'\n    distributeType: 'sig'\n    galleryImageId: '/subscriptions/<SUBSCRIPTION ID>/resourceGroups/<RESOURCE GROUP>/providers/Microsoft.Compute/galleries/myVMSSGallery/images/MyImage/versions/0.0.$(Build.BuildId)'\n    replicationRegions: 'eastus2'\n    ibSubscription: '<SUBSCRIPTION ID>'\n    ibAzureResourceGroup: 'myVMSSResourceGroup'\n    ibLocation: 'eastus2'\n```\n\n----------------------------------------\n\nTITLE: Implementing Azure Function for PR Event Handling in C#\nDESCRIPTION: This C# code implements an Azure Function that listens to Azure Repos events, specifically pull request creations and updates. It deserializes the incoming JSON payload, extracts pull request details, and logs the information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server-with-azure-functions.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Net;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Text;\nusing Newtonsoft.Json;\n\npublic static async Task<HttpResponseMessage> Run(HttpRequestMessage req, TraceWriter log)\n{\n    try\n    {\n        log.Info(\"Service Hook Received.\");\n\n        // Get request body\n        dynamic data = await req.Content.ReadAsAsync<object>();\n\n        log.Info(\"Data Received: \" + data.ToString());\n\n        // Get the pull request object from the service hooks payload\n        dynamic jObject = JsonConvert.DeserializeObject(data.ToString());\n\n        // Get the pull request id\n        int pullRequestId;\n        if (!Int32.TryParse(jObject.resource.pullRequestId.ToString(), out pullRequestId))\n        {\n            log.Info(\"Failed to parse the pull request id from the service hooks payload.\");\n        };\n\n        // Get the pull request title\n        string pullRequestTitle = jObject.resource.title;\n\n        log.Info(\"Service Hook Received for PR: \" + pullRequestId + \" \" + pullRequestTitle);\n\n        return req.CreateResponse(HttpStatusCode.OK);\n    }\n    catch (Exception ex)\n    {\n        log.Info(ex.ToString());\n        return req.CreateResponse(HttpStatusCode.InternalServerError);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Documents in Azure DevOps Extension\nDESCRIPTION: Demonstrates how to create a new document in a collection using the SDK data service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n    // Get data service\n    SDK.getService(SDK.getContributionId()).then(function(dataService) {\n        // Prepare document first\n        var newDoc = {\n            fullScreen: false,\n            screenWidth: 500\n        };\n\n        dataService.createDocument(\"MyCollection\", newDoc).then(function(doc) {\n            // Even if no ID was passed to createDocument, one gets generated\n            console.log(\"Doc id: \" + doc.id);\n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Pass Rate Trend for Named Pipeline in OData\nDESCRIPTION: This OData query retrieves pipeline run data for a specific pipeline, calculates pass rates, and groups results by date. It filters out canceled runs and orders results by completion date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-pass-rate-trend.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tand CompletedDate ge {startdate}\n\tand CanceledCount ne 1\n\t)\n/groupby(\n\t(CompletedOn/Date),\n\taggregate\n\t($count as TotalCount,\n\tSucceededCount with sum as SucceededCount ,\n\tFailedCount with sum as FailedCount,\n\tPartiallySucceededCount with sum as PartiallySucceededCount))\n/compute(\nSucceededCount mul 100.0 div TotalCount as PassRate,\nFailedCount mul 100.0 div TotalCount as FailRate,\nPartiallySucceededCount mul 100.0 div TotalCount as PartiallySuccessfulRate)\n&$orderby=CompletedOn/Date asc\n```\n\n----------------------------------------\n\nTITLE: Parameterizing Python Scripts with Arguments in Azure Pipelines YAML\nDESCRIPTION: Runs an inline Python script that accepts command-line arguments via the PythonScript task's arguments field. Demonstrates sys.argv and argparse usage for receiving pipeline-supplied parameters. Useful for more dynamic, parameterized coding tasks. Inputs are both the script content and the arguments list; output depends on how those arguments are processed in the script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PythonScript@0\\n  inputs:\\n    scriptSource: inline\\n    script: |\\n      import sys\\n      print ('Executing script file is:', str(sys.argv[0]))\\n      print ('The arguments are:', str(sys.argv))\\n      import argparse\\n      parser = argparse.ArgumentParser()\\n      parser.add_argument(\"--world\", help=\"Provide the name of the world to greet.\")\\n      args = parser.parse_args()\\n      print ('Hello ', args.world)\\n    arguments: --world Venus\n```\n\n----------------------------------------\n\nTITLE: Installing Linux Agent Service for Azure DevOps\nDESCRIPTION: This command creates a service file that sets up the environment and starts the agent host. If no username is specified, it uses the $SUDO_USER environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh install [username]\n```\n\n----------------------------------------\n\nTITLE: Defining a Basic Azure Pipelines Deployment Job for Linux VMs (YAML)\nDESCRIPTION: This YAML snippet shows the initial structure of an Azure Pipelines deployment job (`jobs: - deployment:`) named `VMDeploy`. It targets a specific environment by `name` and `resourceType: VirtualMachine`, filtering VMs using `tags`. Placeholders `<environment name>` and `<VM tag>` need to be replaced with actual values from a pre-configured Azure DevOps environment. This structure serves as the foundation for adding deployment strategies and steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/deploy-linux-vm.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\njobs:  \n- deployment: VMDeploy\n  displayName: Web deploy\n  environment:\n    name:  <environment name>\n    resourceType: VirtualMachine\n    tags: <VM tag> # Update value for VMs to deploy to\n  strategy:\n```\n\n----------------------------------------\n\nTITLE: Success Test Implementation for Azure DevOps Pipeline Task\nDESCRIPTION: TypeScript code implementing a success test case for an Azure DevOps pipeline task using Mocha and the task mock runner.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_14\n\nLANGUAGE: TypeScript\nCODE:\n```\nit('should succeed with simple inputs', function(done: Mocha.Done) {\n    this.timeout(1000);\n\n    let tp: string = path.join(__dirname, 'success.js');\n    let tr: ttm.MockTestRunner = new ttm.MockTestRunner(tp);\n\n    // tr.run(); //current, old function.\n    tr.runAsync().then(() => {\n        console.log(tr.succeeded);\n        assert.equal(tr.succeeded, true, 'should have succeeded');\n        assert.equal(tr.warningIssues.length, 0, \"should have no warnings\");\n        assert.equal(tr.errorIssues.length, 0, \"should have no errors\");\n        console.log(tr.stdout);\n        assert.equal(tr.stdout.indexOf('Hello human') >= 0, true, \"should display Hello human\");\n        done();\n    }).catch((error) => {\n        done(error); // Ensure the test case fails if there's an error\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Asynchronous Check for Code Coverage in Azure Pipelines\nDESCRIPTION: Example of implementing an asynchronous Azure Function check to verify code coverage before allowing access to a production resource. The check causes the pipeline to fail if code coverage is below 80%.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/invoke-checks.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- You write your pipeline in such a way that stage failures cause the build to fail\n- You add an _asynchronous_ Azure Function check that verifies the code coverage for the associated pipeline run\n- When a pipeline that wants to use the Service Connection runs:\n    - Azure Pipelines calls your check function\n    - If the code coverage condition isn't met, the check returns a negative decision. Assume this outcome\n    - The check failure causes your stage to fail, which causes your pipeline run to fail\n```\n\n----------------------------------------\n\nTITLE: Conditional Job Execution in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to set up conditional job execution in Azure Pipelines. It defines two jobs where Job2 depends on the successful completion of Job1.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Job1\n  steps:\n    - script: echo Hello Job1!\n\n- job: Job2\n  steps:\n    - script: echo Hello Job2!\n  dependsOn: Job1\n```\n\n----------------------------------------\n\nTITLE: Downloading Universal Package from Internal Feed using Azure Pipelines YAML\nDESCRIPTION: This YAML snippet defines a step in an Azure Pipeline to download a specific version of a Universal Package from an Azure Artifacts feed within the same organization. It uses the UniversalPackages@0 task, specifying the feed, package name, version, and target download directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/universal-packages.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: UniversalPackages@0\n  displayName: Download\n  inputs:\n    command: download\n    vstsFeed: '<PROJECT_NAME>/<FEED_NAME>'                        ## The Artifacts feed hosting the package to be downloaded\n    vstsFeedPackage: '<PACKAGE_NAME>'                             ## Name of the package to be downloaded\n    vstsPackageVersion: '<PACKAGE_VERSION>'                       ## Version of the package to be downloaded\n    downloadDirectory: '$(Build.SourcesDirectory)\\someFolder'     ## The download folder. Default value: $(System.DefaultWorkingDirectory).\n```\n\n----------------------------------------\n\nTITLE: Configuring .npmrc file for Project-scoped feed\nDESCRIPTION: Example of an .npmrc file configured for a project-scoped feed with a custom scope name. This configuration includes the project name in the registry URL path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/scopes.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n@ScopeName:registry=https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/\n    \nalways-auth=true\n```\n\n----------------------------------------\n\nTITLE: Creating a Pull Request with Azure CLI\nDESCRIPTION: This example demonstrates how to create a pull request from a 'new' branch to the default 'main' branch of the Fabrikam repository using Azure CLI. The command opens the PR in the browser and displays the output in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-requests.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr create --repository Fabrikam --source-branch new --open --output table\n\nID    Created     Creator              Title                         Status    IsDraft    Repository\n----  ----------  -------------------  ----------------------------  --------  ---------  ------------\n30    2021-10-31  jamalh@fabrikam.com  Updated note-new-git-tool.md  Active    False      Fabrikam\n```\n\n----------------------------------------\n\nTITLE: Creating Parallel Stages in Azure Pipelines\nDESCRIPTION: Example showing how to make stages run in parallel by removing implicit dependencies. Using empty dependsOn array makes a stage independent from previous stages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: FunctionalTest\n  jobs:\n  - job:\n    ...\n\n- stage: AcceptanceTest\n  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel\n  jobs:\n  - job:\n    ...\n```\n\n----------------------------------------\n\nTITLE: Adding PowerShell Core Script to YAML Pipeline\nDESCRIPTION: Shows how to run a PowerShell Core script in a YAML pipeline using the pwsh keyword, which is a shortcut for the PowerShell task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/powershell.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- pwsh: ./my-script.ps1\n```\n\n----------------------------------------\n\nTITLE: Getting Organization URL Using .NET Client Library (C#)\nDESCRIPTION: This C# code snippet demonstrates how to use the Microsoft-provided .NET client library to get the base URL for an Azure DevOps organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\nusing Microsoft.VisualStudio.Services.Common;\nusing Microsoft.VisualStudio.Services.WebApi;\n```\n\nLANGUAGE: csharp\nCODE:\n```\npublic async Task MyMethod()\n{\n    string organizationName = ...;\n    VssCredentials credentials = ...;\n\n    Uri organizationUrl = await VssConnectionHelper.GetOrganizationUrlAsync(organizationName);\n    \n    VssConnection connection = new VssConnection(organizationUrl, credentials);\n    \n    // get a client using connection.GetClient<T>() and do something\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring CodeQL Analysis Pipeline in Azure DevOps\nDESCRIPTION: Example YAML pipeline configuration that sets up CodeQL analysis for Java code. Includes initialization, dependency scanning, and analysis tasks with detailed comments for customization options. Supports multiple programming languages and can be configured for self-hosted agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/configure-github-advanced-security-features.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  - main\n\npool:\n  # Additional hosted image options are available: https://learn.microsoft.com/en-us/azure/devops/pipelines/agents/hosted#software\n  vmImage: ubuntu-latest\n\nsteps:\n\n  - task: AdvancedSecurity-Codeql-Init@1\n    inputs:\n      languages: \"java\"\n      # Supported languages: csharp, cpp, go, java, javascript, python, ruby, swift\n      # You can customize the initialize task: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/advanced-security-codeql-init-v1?view=azure-pipelines\n      # If you're using a self-hosted agent to run CodeQL, use `enableAutomaticCodeQLInstall` to automatically use the latest CodeQL bits on your agent:\n      enableAutomaticCodeQLInstall: true\n\n#   Add your custom build steps here\n# - Ensure that all code to be scanned is compiled (often using a `clean` command to ensure you're building from a clean state).\n# - Disable the use of any build caching mechanisms as this can interfere with CodeQL's ability to capture all the necessary data during the build.\n# - Disable the use of any distributed/multithreaded/incremental builds as CodeQL needs to monitor executions of the compiler to construct an accurate representation of the application.\n# - For dependency scanning, ensure you have a package restore step for more accurate results.\n\n# If you had a Maven app:\n#   - task: Maven@4\n#     inputs:\n#       mavenPomFile: 'pom.xml'\n#       goals: 'clean package'\n#       publishJUnitResults: true\n#       testResultsFiles: '**/TEST-*.xml'\n#       javaHomeOption: 'JDKVersion'\n#       jdkVersionOption: '1.17'\n#       mavenVersionOption: 'Default'\n\n# Or a general script:\n#   - script: |\n#       echo \"Run, Build Application using script\"\n#       ./location_of_script_within_repo/buildscript.sh\n\n  - task: AdvancedSecurity-Dependency-Scanning@1 # More details on this task: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/advanced-security-dependency-scanning-v1?view=azure-pipelines\n\n  - task: AdvancedSecurity-Codeql-Analyze@1 # More details on this task: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/advanced-security-codeql-analyze-v1?view=azure-pipelines\n```\n\n----------------------------------------\n\nTITLE: Setting Pipeline Variables with Bash Logging Commands\nDESCRIPTION: Demonstrates how to set a new pipeline variable 'myVar' with the value 'myValue' using bash script and logging commands. This variable will be available as an environment variable in subsequent steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runs.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\necho '##vso[task.setVariable variable=myVar]myValue'\n```\n\n----------------------------------------\n\nTITLE: Creating Azure App Service Plan (Linux, Basic Tier) using Azure CLI\nDESCRIPTION: This Azure CLI command creates a new Azure App Service Plan using the name from '$planName' within the resource group '$rgName'. It specifies the B1 (Basic) pricing tier and indicates that it should use Linux workers. Requires the resource group to exist and the variables $planName and $rgName to be set.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/nodejs-tutorial.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz appservice plan create \\\n  --name $planName \\\n  --resource-group $rgName \\\n  --sku B1 \\\n  --is-linux\n```\n\n----------------------------------------\n\nTITLE: Reading a Variable in PowerShell Script\nDESCRIPTION: Reads a previously set variable 'myVar' using macro syntax in a PowerShell script. This demonstrates how to access variables that were set in previous tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- powershell: |\n    Write-Host \"You can use macro syntax for variables: $(myVar)\"\n```\n\n----------------------------------------\n\nTITLE: Downloading Build Artifacts in YAML\nDESCRIPTION: This YAML snippet demonstrates how to download build artifacts. It uses the DownloadBuildArtifacts task to download a specific artifact named 'drop' from the current build to the artifacts directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/build-artifacts.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n- powershell: gci env:* | sort-object name | Format-Table -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt\n\n- task: DownloadBuildArtifacts@0\n  inputs:\n    buildType: 'current'\n    downloadType: 'single'\n    artifactName: 'drop'\n    downloadPath: '$(System.ArtifactsDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Grouping Work Items by Multiple Properties using OData\nDESCRIPTION: This OData query demonstrates how to group work items by multiple properties (WorkItemType and State) while aggregating counts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $apply=groupby((WorkItemType, State), aggregate($count as Count))\n```\n\n----------------------------------------\n\nTITLE: Querying Feature Progress for a Team in OData\nDESCRIPTION: This OData query retrieves Feature work items and their User Story descendants for specific teams, aggregating Story Points by State Category. It filters by Team Name and excludes cut items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-featureprogress.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'Feature'\n            and State ne 'Cut'\n            and (Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname})\n            and Descendants/any()\n        &$select=WorkItemId,Title,WorkItemType,State,AreaSK\n        &$expand=Descendants(\n            $apply=filter(WorkItemType eq 'User Story')\n                /groupby((StateCategory),\n                aggregate(StoryPoints with sum as TotalStoryPoints))\n            ) \n```\n\n----------------------------------------\n\nTITLE: Configuring macOS 12 Monterey Preview VM Image in Azure Pipelines\nDESCRIPTION: YAML configuration for using macOS 12 Monterey preview image in Azure Pipelines hosted agents. The snippet shows how to specify the VM image and includes a basic bash script to verify the macOS version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-204-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- job: macOS12\n  pool:\n    vmImage: 'macOS-12'\n  steps:\n  - bash: |\n      echo Hello from macOS Monterey Preview\n      sw_vers\n```\n\n----------------------------------------\n\nTITLE: Configuring Volume Mounts for Service Containers in Azure Pipelines\nDESCRIPTION: YAML snippet showing how to configure volume mounts for service containers. The example demonstrates named Docker volumes, anonymous Docker volumes, and host path bind mounts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/service-containers.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  my_service:\n    image: myservice:latest\n    volumes:\n    - mydockervolume:/data/dir\n    - /data/dir\n    - /src/dir:/dst/dir\n```\n\n----------------------------------------\n\nTITLE: Failure Test Mock for Azure DevOps Pipeline Task\nDESCRIPTION: TypeScript code to simulate a failed run of an Azure DevOps pipeline task for unit testing purposes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_15\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport ma = require('azure-pipelines-task-lib/mock-answer');\nimport tmrm = require('azure-pipelines-task-lib/mock-run');\nimport path = require('path');\n\nlet taskPath = path.join(__dirname, '..', 'index.js');\nlet tmr: tmrm.TaskMockRunner = new tmrm.TaskMockRunner(taskPath);\n\ntmr.setInput('samplestring', 'bad');\n\ntmr.run();\n```\n\n----------------------------------------\n\nTITLE: Configuring Cargo Credential Provider for Linux\nDESCRIPTION: TOML configuration to add to ~/.cargo/config.toml to set up a credential provider for Cargo on Linux. This configures global credential providers to use both token and libsecret.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[registry]\nglobal-credential-providers = [\"cargo:token\", \"cargo:libsecret\"]\n```\n\n----------------------------------------\n\nTITLE: Querying User Stories with Related Links in OData\nDESCRIPTION: This OData query retrieves User Stories and their related User Stories using the Related link type. It filters for non-closed User Stories within a specific Area Path and expands the Links entity to include details of the related User Stories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'User Story'\n            and State ne 'Closed'\n            and startswith(Area/AreaPath,'{areapath}')\n        &$select=WorkItemId,Title,WorkItemType,State,AreaSK\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\n                Links(\n                    $filter=LinkTypeName eq 'Related'\n                        and TargetWorkItem/WorkItemType eq 'User Story';\n                    $select=LinkTypeName;\n                    $expand=TargetWorkItem($select=WorkItemType,WorkItemId,Title,State)\n                )\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Source and Publishing Package\nDESCRIPTION: Commands to add a NuGet source with authentication credentials and publish a package to the configured feed. Requires source name, URL, username, PAT token, and package path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/nuget/publish.md#2025-04-22_snippet_1\n\nLANGUAGE: Command\nCODE:\n```\nnuget sources add -Name <SourceName> -Source <SourceURL> -username <UserName> -password <Pat>\nnuget push -Source <SourceName> -ApiKey key <PackagePath> #example:(\\Get-Hello.1.0.0.nupkg)>\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure DevOps CLI in YAML Pipeline (Bash)\nDESCRIPTION: This snippet demonstrates how to authenticate with Azure DevOps using System.AccessToken in a Bash script step within a YAML pipeline. The authentication token is passed via an environment variable named AZURE_DEVOPS_EXT_PAT.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n- bash: |\n    az pipelines build list --organization '$(System.TeamFoundationCollectionUri)' --project '$(System.TeamProject)'\n  displayName: 'Show build list'\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline PowerShell Module Installation\nDESCRIPTION: YAML pipeline configuration for installing PowerShell modules from Azure Artifacts\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'Windows-latest'\n\nvariables:\n  PackageFeedEndpoint: 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v2'\n\nsteps:\n- powershell: |\n    $pat = ConvertTo-SecureString ${env:pat_token} -AsPlainText -Force\n    $credential = New-Object System.Management.Automation.PSCredential(\"${env:userName}\", $pat)\n    Register-PSRepository -Name <REPOSITORY_NAME> -SourceLocation \"$(PackageFeedEndpoint)\" -InstallationPolicy Trusted -Credential $credential\n  displayName: 'Register PSRepository'\n  env:\n    pat_token: $patToken\n    userName: $userName\n\n- powershell: |\n    nuget install <PACKAGE_NAME> -Source \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\"\n  displayName: 'Install module'\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure DevOps CLI in YAML Pipeline (PowerShell)\nDESCRIPTION: This snippet shows how to authenticate with Azure DevOps using System.AccessToken in a PowerShell script step within a YAML pipeline. The authentication token is passed via an environment variable named AZURE_DEVOPS_EXT_PAT.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n- pwsh: |\n    az pipelines build list --organization '$(System.TeamFoundationCollectionUri)' --project '$(System.TeamProject)'\n  displayName: 'Show build list '\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n```\n\n----------------------------------------\n\nTITLE: Configuring Workspace Cleaning in Azure DevOps YAML Pipeline\nDESCRIPTION: Examples of how to configure workspace cleaning options in YAML pipelines. Shows how to clean outputs, resources, or the entire workspace before a job runs. This is only applicable for self-hosted agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\n- job: myJob\n  workspace:\n    clean: outputs | resources | all # what to clean up before the job runs\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary Trend for Release Workflow in OData\nDESCRIPTION: This OData query retrieves test run data for a specific pipeline's release workflow, aggregating results by date and calculating the pass rate.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestRuns?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tand CompletedOn/Date ge {startdate})\n/groupby((Workflow, CompletedOn/Date), \n\taggregate(\n\tResultPassCount with sum as ResultPassCount,\n\tResultNotExecutedCount with sum as ResultNotExecutedCount,\n\tResultCount with sum as ResultCount,\n\tResultNotImpactedCount with sum as ResultNotImpactedCount,\n\tResultFailCount with sum as ResultFailCount))\n/compute(\niif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Adding Maven Settings and Publish Plugins to Older Gradle Versions\nDESCRIPTION: Configuration for adding both the Maven Settings plugin and Maven Publish plugin to older Gradle projects for package publishing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/publish-with-gradle.md#2025-04-22_snippet_4\n\nLANGUAGE: groovy\nCODE:\n```\nplugins {\n  id 'net.linguica.maven-settings' version '0.5'\n  id 'maven-publish'\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Structure for Stage Dependencies in Azure DevOps Pipelines\nDESCRIPTION: The JSON structure that represents the dependencies object for stage-to-stage dependencies, showing the format for accessing results and outputs from other stages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n\"dependencies\": {\n  \"<STAGE_NAME>\" : {\n    \"result\": \"Succeeded|SucceededWithIssues|Skipped|Failed|Canceled\",\n    \"outputs\": {\n        \"jobName.stepName.variableName\": \"value\"\n    }\n  },\n  \"...\": {\n    // another stage\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Pipeline Variables in Step Conditions\nDESCRIPTION: Example demonstrating how to create a pipeline variable in one step and use it in a subsequent step's condition. The variable becomes available as an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n\n# This step creates a new pipeline variable: doThing. This variable is available to subsequent steps.\n- bash: |\n    echo \"##vso[task.setvariable variable=doThing]Yes\"\n  displayName: Step 1\n\n# This step is able to use doThing, so it uses doThing in its condition\n- script: |\n    # Access the variable from Step 1 as an environment variable.\n    echo \"Value of doThing (as DOTHING env var): $DOTHING.\"\n  displayName: Step 2\n  condition: and(succeeded(), eq(variables['doThing'], 'Yes')) # or and(succeeded(), eq(variables.doThing, 'Yes'))\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Script Extension on Windows VMSS using Azure CLI\nDESCRIPTION: Installs the Custom Script Extension on a specified Windows Virtual Machine Scale Set using Azure CLI. It downloads a script from the provided URL (`FileUris`) and executes it using PowerShell (`commandToExecute`) immediately after VM creation or reimaging, before the Azure Pipelines agent extension runs. Note the specific PowerShell execution policy. Requires an existing VMSS and a publicly accessible script URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz vmss extension set \\\n--vmss-name <scaleset name> \\\n--resource-group <resource group> \\\n--name CustomScriptExtension \\\n--version 1.9 \\\n--publisher Microsoft.Compute \\\n--settings '{ \\\"FileUris\\\":[\\\"https://<myGitHubRepoUrl>/myscript.ps1\\\"], \\\"commandToExecute\\\": \\\"Powershell.exe -ExecutionPolicy Unrestricted -File myscript.ps1 -myargs 0 \\\" }'\n```\n\n----------------------------------------\n\nTITLE: OData Query for Pipeline Duration Percentiles by Branch\nDESCRIPTION: This OData query retrieves the 50th, 80th, and 95th percentile durations for a specific pipeline, grouped by branch. It filters for successful or partially successful pipeline runs completed after a specified date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelinename}'\n    and CompletedDate ge {startdate}\n    and (SucceededCount eq 1 or PartiallySucceededCount eq 1)\n    )\n/compute(\n    percentile_cont(TotalDurationSeconds, 0.5, BranchSK) as Duration50thPercentileInSeconds,\n    percentile_cont(TotalDurationSeconds, 0.8, BranchSK) as Duration80thPercentileInSeconds,\n    percentile_cont(TotalDurationSeconds, 0.95, BranchSK) as Duration95thPercentileInSeconds)\n/groupby(\n(Duration50thPercentileInSeconds, Duration80thPercentileInSeconds,Duration95thPercentileInSeconds, Branch/BranchName))\n```\n\n----------------------------------------\n\nTITLE: Running webpack in Azure Pipelines\nDESCRIPTION: Executes webpack with default configuration to bundle JavaScript application assets for deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\n- script: webpack\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Identity in Azure Pipelines\nDESCRIPTION: Sets up the default identity for Git operations in a pipeline by configuring the global user email and name. This must be executed as the first step after code checkout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/git-commands.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n```\n\n----------------------------------------\n\nTITLE: Parsing Agent Capabilities JSON Response\nDESCRIPTION: Example JSON response showing agent capabilities and status information returned from the Azure DevOps API. Includes system capabilities like installed software versions and agent configuration details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/agents.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"offline\",\n  \"statusChangedOn\": null,\n  \"systemCapabilities\": {\n    \"ANDROID_HOME\": \"\",\n    \"ANDROID_NDK_HOME\": \"\",\n    \"Agent.Name\": \"Hosted Agent\",\n    \"Agent.Version\": \"2.160.1\",\n\n    <Some capabilities omitted for space>\n\n    \"sh\": \"\",\n    \"subversion\": \"\",\n    \"svn\": \"\",\n    \"To run tasks using Windows authentication to access an external service, the agent must run under an account with access to that service.\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Pipeline Runs with Azure DevOps CLI\nDESCRIPTION: Lists the first three completed and successful pipeline runs using the Azure DevOps CLI. The results are displayed in table format showing run ID, number, status, result, pipeline details, source branch, queue time, and reason.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runs.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz pipelines runs list --status completed --result succeeded --top 3 --output table\n```\n\n----------------------------------------\n\nTITLE: Setting a Specific PHP Version in Azure Pipelines (Ubuntu)\nDESCRIPTION: YAML snippet for an Azure Pipelines job targeting an Ubuntu VM image. It demonstrates using the `update-alternatives` command to switch the active PHP version and its related tools (phar, phpdbg, php-cgi, phar.phar) based on the `phpVersion` variable (e.g., 8.2). It concludes by running `php -version` to confirm the change.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/php.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-20.04'\n\nvariables:\n  phpVersion: 8.2\n\nsteps:\n- script: |\n    sudo update-alternatives --set php /usr/bin/php$(phpVersion)\n    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)\n    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)\n    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)\n    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)\n    php -version\n  displayName: 'Use PHP version $(phpVersion)'\n```\n\n----------------------------------------\n\nTITLE: Importing BACPAC to Azure SQL Database Using SQLPackage\nDESCRIPTION: This command line instruction uses SQLPackage.exe to import a BACPAC file into a new Azure SQL Database. It requires the source BACPAC file, target server name, database name, username, and password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_10\n\nLANGUAGE: Command Line\nCODE:\n```\nSqlPackage.exe /SourceFile:\"C:\\temp\\test.bacpac\" /Action:Import /TargetServerName:\"DemoSqlServer.database.windows.net.placeholder\"\n/TargetDatabaseName:\"Testdb\" /TargetUser:\"ajay\" /TargetPassword:\"SQLPassword\"\n```\n\n----------------------------------------\n\nTITLE: Excluding All Files Except Those in a Specific Directory with .artifactignore\nDESCRIPTION: This example demonstrates how to create an .artifactignore file that excludes all files from being published as artifacts except for those located in the src/MyApp/bin/Release directory. The pattern uses wildcards to ignore everything first, then makes an exception for a specific path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/reference/artifactignore.md#2025-04-22_snippet_0\n\nLANGUAGE: artifactignore\nCODE:\n```\n**/*\n!src/MyApp/bin/Release/**.*\n```\n\n----------------------------------------\n\nTITLE: Platform-Specific IP Address Detection\nDESCRIPTION: Complex example showing how to execute different commands based on the operating system using platform-specific conditions and commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/cross-platform-scripting.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# Linux\n- bash: |\n    export IPADDR=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1  -d'/')\n    echo \"##vso[task.setvariable variable=IP_ADDR]$IPADDR\"\n  condition: eq( variables['Agent.OS'], 'Linux' )\n  displayName: Get IP on Linux\n# macOS\n- bash: |\n    export IPADDR=$(ifconfig | grep 'en0' -A3 | grep inet | tail -n1 | awk '{print $2}')\n    echo \"##vso[task.setvariable variable=IP_ADDR]$IPADDR\"\n  condition: eq( variables['Agent.OS'], 'Darwin' )\n  displayName: Get IP on macOS\n# Windows\n- powershell: |\n    Set-Variable -Name IPADDR -Value ((Get-NetIPAddress | ?{ $_.AddressFamily -eq \"IPv4\" -and !($_.IPAddress -match \"169\") -and !($_.IPaddress -match \"127\") } | Select-Object -First 1).IPAddress)\n    Write-Host \"##vso[task.setvariable variable=IP_ADDR]$IPADDR\"\n  condition: eq( variables['Agent.OS'], 'Windows_NT' )\n  displayName: Get IP on Windows\n\n# now we use the value, no matter where we got it\n- script: |\n    echo The IP address is $(IP_ADDR)\n```\n\n----------------------------------------\n\nTITLE: Analyzing Code with CodeQL in Azure DevOps YAML Pipeline\nDESCRIPTION: This snippet shows the task for analyzing code with CodeQL in an Azure DevOps YAML pipeline. It uses the AdvancedSecurity-Codeql-Analyze@1 task to perform the analysis and post results directly to the advanced security service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/ghazdo/sprint-228-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nAdvancedSecurity-Codeql-Analyze@1\n```\n\n----------------------------------------\n\nTITLE: Implementing Manual Validation in Azure DevOps YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to configure a manual validation task in a pipeline to pause execution and wait for approval. It sets up a server job that waits for external validation with configurable timeouts, notification emails, and instructions for reviewers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deploy-using-approvals.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\npool: \n   vmImage: ubuntu-latest\n\njobs:\n- job: waitForValidation\n  displayName: Wait for external validation  \n  pool: server    \n  timeoutInMinutes: 4320 # job times out in 3 days\n  steps:   \n   - task: ManualValidation@0\n     timeoutInMinutes: 1440 # task times out in 1 day\n     inputs:\n         notifyUsers: |\n            someone@example.com\n         instructions: 'Please validate the build configuration and resume'\n         onTimeout: 'resume'\n```\n\n----------------------------------------\n\nTITLE: Language Selection in Travis vs Azure Pipelines\nDESCRIPTION: Comparing language configuration between Travis CI and Azure Pipelines, showing how to specify Node.js 16.x in both platforms. Travis uses the 'language' keyword while Azure Pipelines uses language-specific tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nlanguage: node_js\nnode_js:\n  - 16\n```\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: UseNode@1\n  inputs:\n    version: '16.x'\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Resources in YAML\nDESCRIPTION: Demonstrates how to reference another pipeline as a resource in a YAML pipeline. This allows one pipeline to consume artifacts from another pipeline or trigger when the source pipeline completes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/about-resources.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: SmartHotel-resource # identifier for the resource (used in pipeline resource variables)\n    source: SmartHotel-CI # name of the pipeline that produces an artifact\n```\n\n----------------------------------------\n\nTITLE: Implementing Delay Task in Azure Pipeline YAML\nDESCRIPTION: Configuration for adding a delay task in an agentless job to pause pipeline execution for a specified duration. The task must be used in a server pool and allows delaying workflow execution by a fixed time period.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/approvals/index.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Delay further execution of a workflow by a fixed time\npool: server\nsteps:\n- task: Delay@1\n  displayName: 'Delay by 5 minutes'\n  inputs:\n    delayForMinutes: 5\n```\n\n----------------------------------------\n\nTITLE: Signing and Aligning APKs in Azure Pipelines (YAML, Azure DevOps)\nDESCRIPTION: This YAML snippet adds the AndroidSigning@2 task to sign and zipalign APK files within an Azure Pipeline. It configures keystore file paths, keystore and key passwords (recommended as secure pipeline variables), signing alias, and zipalign options. This is essential for releasing Android apps and for running signed APKs on physical devices. The build must produce APK files at a path matching 'apkFiles'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AndroidSigning@2\\n  inputs:\\n    apkFiles: '**/*.apk'\\n    jarsign: true\\n    jarsignerKeystoreFile: 'pathToYourKeystoreFile'\\n    jarsignerKeystorePassword: '$(jarsignerKeystorePassword)'\\n    jarsignerKeystoreAlias: 'yourKeystoreAlias'\\n    jarsignerKeyPassword: '$(jarsignerKeyPassword)'\\n    zipalign: true\\n\n```\n\n----------------------------------------\n\nTITLE: Configuring pip for Azure Artifacts Feed\nDESCRIPTION: Example configuration for pip.ini (Windows) or pip.conf (Mac/Linux) file to connect to an Azure Artifacts feed. This should be added to the project's virtual environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/project-setup-python.md#2025-04-22_snippet_1\n\nLANGUAGE: INI\nCODE:\n```\n[global]\nindex-url=https://pkgs.dev.azure.com/ORGANIZATION_NAME/PROJECT_NAME/_packaging/FEED_NAME/pypi/simple/\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch and Path Filters for CI Triggers in Azure DevOps YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to set up branch and path filters for continuous integration triggers in an Azure DevOps pipeline. It includes triggers for the main branch and feature branches, while excluding changes in the tools folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ci-triggers4.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  branches:\n    include:\n    - main\n    - feature/*\n    exclude:\n    - feature/experimental-*\n  paths:\n    exclude:\n    - /tools/\n```\n\n----------------------------------------\n\nTITLE: Publishing npm Packages to Azure Artifacts Feed\nDESCRIPTION: Command to publish npm packages defined in package.json to an Azure Artifacts feed. This should be run after authenticating with the feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/publish.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Building Go Project using Go Task in YAML\nDESCRIPTION: Uses the dedicated `Go@0` Azure Pipelines task to execute the `go build` command. The `workingDirectory` is set to the default location where source code is checked out, suitable for Go 1.11+ projects or scenarios where the workspace is set up differently.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/go.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Go@0\n  inputs:\n    command: 'build'\n    workingDirectory: '$(System.DefaultWorkingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Publishing Universal Packages to Azure Artifacts Feed\nDESCRIPTION: Azure CLI commands for publishing Universal Packages to either project-scoped or organization-scoped feeds in Azure Artifacts. These commands require organization URL, project name (for project-scoped feeds), feed name, package name, version, path to package directory, and an optional description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/universal-packages.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz artifacts universal publish --organization https://dev.azure.com/<YOUR_ORGANIZATION> --project <PROJECT_NAME> --scope project --feed <FEED_NAME> --name <PACKAGE_NAME> --version <PACKAGE_VERSION> --path <PACKAGE_DIRECTORY> --description <PACKAGE_DESCRIPTION>\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz artifacts universal publish --organization https://dev.azure.com/<YOUR_ORGANIZATION> --feed <FEED_NAME> --name <PACKAGE_NAME> --version <PACKAGE_VERSION> --path <PACKAGE_DIRECTORY> --description <PACKAGE_DESCRIPTION>\n```\n\n----------------------------------------\n\nTITLE: Setting Variables with Shell Script in Azure DevOps\nDESCRIPTION: Sets regular and secret pipeline variables using Shell script commands in Linux/macOS environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/set-variables-in-scripts.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"##vso[task.setvariable variable=sauce]crushed tomatoes\"\necho \"##vso[task.setvariable variable=secret.Sauce;issecret=true]crushed tomatoes with garlic\"\n```\n\n----------------------------------------\n\nTITLE: Defining Server Jobs in YAML for Azure DevOps Pipelines\nDESCRIPTION: Full syntax for specifying agentless server jobs in YAML. The 'server' keyword in the pool property indicates this is an agentless job, which doesn't require a dedicated agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: string\n  timeoutInMinutes: number\n  cancelTimeoutInMinutes: number\n  strategy:\n    maxParallel: number\n    matrix: { string: { string: string } }\n\n  pool: server # note: the value 'server' is a reserved keyword which indicates this is an agentless job\n```\n\n----------------------------------------\n\nTITLE: Publishing Local Branch to Remote in Git\nDESCRIPTION: Pushes a local branch to a remote repository, establishing tracking between the local and remote branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_24\n\nLANGUAGE: git\nCODE:\n```\ngit push -u remote branchname\n```\n\n----------------------------------------\n\nTITLE: Verifying Virtual Machine Scale Set Configuration\nDESCRIPTION: Azure CLI command to display the configuration of the created Virtual Machine Scale Set, focusing on the upgrade policy and capacity.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_3\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz vmss show --resource-group vmssagents --name vmssagentspool --output table\n```\n\n----------------------------------------\n\nTITLE: VM Removal Commands\nDESCRIPTION: Commands to remove a VM from an environment for both Linux and Windows systems.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-virtual-machines.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./config.sh remove\n```\n\nLANGUAGE: powershell\nCODE:\n```\n./config.cmd remove\n```\n\n----------------------------------------\n\nTITLE: Service Connection Retrieval and Conversion PowerShell Script\nDESCRIPTION: PowerShell script that retrieves service connections from Azure DevOps and converts them from ServicePrincipal to WorkloadIdentityFederation authentication scheme. The script includes user interaction for confirming conversions and handles both shared and non-shared service connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/connect-to-azure.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n# Retrieve the service connection\n$getApiUrl = \"${OrganizationUrl}/${Project}/_apis/serviceendpoint/endpoints?authSchemes=ServicePrincipal&type=azurerm&includeFailed=false&includeDetails=true&api-version=${apiVersion}\"\naz rest --resource $azdoResource -u \"${getApiUrl} \" -m GET --query \"sort_by(value[?authorization.scheme=='ServicePrincipal' && data.creationMode=='Automatic' && !(isShared && serviceEndpointProjectReferences[0].projectReference.name!='${Project}')],&name)\" -o json `\n        | Tee-Object -Variable rawResponse | ConvertFrom-Json | Tee-Object -Variable serviceEndpoints | Format-List | Out-String | Write-Debug\nif (!$serviceEndpoints -or ($serviceEndpoints.count-eq 0)) {\n    Write-Warning \"No convertible service connections found\"\n    exit 1\n}\n\nforeach ($serviceEndpoint in $serviceEndpoints) {\n    # Prompt user to confirm conversion\n    $choices = @(\n        [System.Management.Automation.Host.ChoiceDescription]::new(\"&Convert\", \"Converting service connection '$($serviceEndpoint.name)'...\")\n        [System.Management.Automation.Host.ChoiceDescription]::new(\"&Skip\", \"Skipping service connection '$($serviceEndpoint.name)'...\")\n        [System.Management.Automation.Host.ChoiceDescription]::new(\"&Exit\", \"Exit script\")\n    )\n    $prompt = $serviceEndpoint.isShared ? \"Convert shared service connection '$($serviceEndpoint.name)'?\" : \"Convert service connection '$($serviceEndpoint.name)'?\"\n    $decision = $Host.UI.PromptForChoice([string]::Empty, $prompt, $choices, $serviceEndpoint.isShared ? 1 : 0)\n\n    if ($decision -eq 0) {\n        Write-Host \"$($choices[$decision].HelpMessage)\"\n    } elseif ($decision -eq 1) {\n        Write-Host \"$($PSStyle.Formatting.Warning)$($choices[$decision].HelpMessage)$($PSStyle.Reset)\"\n        continue \n    } elseif ($decision -ge 2) {\n        Write-Host \"$($PSStyle.Formatting.Warning)$($choices[$decision].HelpMessage)$($PSStyle.Reset)\"\n        exit \n    }\n\n    # Prepare request body\n    $serviceEndpoint.authorization.scheme = \"WorkloadIdentityFederation\"\n    $serviceEndpoint.data.PSObject.Properties.Remove('revertSchemeDeadline')\n    $serviceEndpoint | ConvertTo-Json -Depth 4 | Write-Debug\n    $serviceEndpoint | ConvertTo-Json -Depth 4 -Compress | Set-Variable serviceEndpointRequest\n    $putApiUrl = \"${OrganizationUrl}/${Project}/_apis/serviceendpoint/endpoints/$($serviceEndpoint.id)?operation=ConvertAuthenticationScheme&api-version=${apiVersion}\"\n    # Convert service connection\n    az rest -u \"${putApiUrl} \" -m PUT -b $serviceEndpointRequest --headers content-type=application/json --resource $azdoResource -o json `\n            | ConvertFrom-Json | Set-Variable updatedServiceEndpoint\n    \n    $updatedServiceEndpoint | ConvertTo-Json -Depth 4 | Write-Debug\n    if (!$updatedServiceEndpoint) {\n        Write-Debug \"Empty response\"\n        Write-Error \"Failed to convert service connection '$($serviceEndpoint.name)'\"\n        exit 1\n    }\n    Write-Host \"Successfully converted service connection '$($serviceEndpoint.name)'\"\n}\n```\n\n----------------------------------------\n\nTITLE: Logging a Warning with File Information in Bash\nDESCRIPTION: Demonstrates how to log a warning message with specific file information using the task.logissue command in a Bash script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"##vso[task.logissue type=warning;sourcepath=consoleapp/main.cs;linenumber=1;columnnumber=1;code=100;]Found something that could be a problem.\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Nightly Builds with Different Frequencies in YAML\nDESCRIPTION: This YAML snippet defines schedules for nightly builds with different frequencies. It includes a daily weekday build and a weekly Sunday build, with branch filters and the 'always' flag for running regardless of code changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: '0 3 * * Mon-Fri'\n  displayName: M-F 3:00 AM (UTC) daily build\n  branches:\n    include:\n    - main\n    - /releases/*\n- cron: '0 3 * * Sun'\n  displayName: Sunday 3:00 AM (UTC) weekly latest version build\n  branches:\n    include:\n    - /releases/lastversion\n  always: true\n```\n\n----------------------------------------\n\nTITLE: Step Target Configuration\nDESCRIPTION: Shows how to specify execution context for tasks between host and containers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: pycontainer\n    image: python:3.11\n\nsteps:\n- task: SampleTask@1\n  target: host\n- task: AnotherTask@1\n  target: pycontainer\n```\n\n----------------------------------------\n\nTITLE: Using Output Variable in Subsequent Stage with PowerShell\nDESCRIPTION: This snippet demonstrates how to use an output variable from a previous stage in a subsequent stage of an Azure DevOps pipeline, using PowerShell commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\nstages:\n- stage: A\n  jobs:\n  - job: A1\n    steps:\n    - powershell: Write-Host \"##vso[task.setvariable variable=myStageVal;isOutput=true]this is a stage output variable\"\n      name: MyOutputVar\n- stage: B\n  dependsOn: A\n  jobs:\n  - job: B1\n    variables:\n      myStageAVar: $[stageDependencies.A.A1.outputs['MyOutputVar.myStageVal']]\n    steps:\n    - powershell: Write-Host \"$(myStageAVar)\"\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Deployment YAML for Azure DevOps Agent - YAML\nDESCRIPTION: Defines a Kubernetes Deployment for running an Azure DevOps agent in a pod and mounts the Docker socket from the host. The manifest configures the pod to use environment variables sourced from the earlier 'azdevops' Kubernetes secret and specifies how the host's Docker socket is exposed inside the container. Placeholder values for image repo, secret names, and keys must be set before applying. This YAML is saved to a file and applied to AKS to schedule the agent pod, which supports Docker build operations inside Kubernetes-managed runners.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_12\n\nLANGUAGE: yml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: azdevops-deployment\n  labels:\n    app: azdevops-agent\nspec:\n  replicas: 1 # here is the configuration for the actual agent always running\n  selector:\n    matchLabels:\n      app: azdevops-agent\n  template:\n    metadata:\n      labels:\n        app: azdevops-agent\n    spec:\n      containers:\n      - name: kubepodcreation\n        image: <acr-server>/azp-agent:<tag>\n        env:\n          - name: AZP_URL\n            valueFrom:\n              secretKeyRef:\n                name: azdevops\n                key: AZP_URL\n          - name: AZP_TOKEN\n            valueFrom:\n              secretKeyRef:\n                name: azdevops\n                key: AZP_TOKEN\n          - name: AZP_POOL\n            valueFrom:\n              secretKeyRef:\n                name: azdevops\n                key: AZP_POOL\n        volumeMounts:\n        - mountPath: /var/run/docker.sock\n          name: docker-volume\n      volumes:\n      - name: docker-volume\n        hostPath:\n          path: /var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Basic API Request Pattern for Azure DevOps\nDESCRIPTION: Demonstrates the general pattern for making API requests to Azure DevOps, including the URL structure and API version specification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/how-to/call-rest-api.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nVERB https://{instance}/{collection}/{team-project}/_apis/{area}/{resource}?api-version={version}\n```\n\n----------------------------------------\n\nTITLE: Configuring Network Profile in ARM Template\nDESCRIPTION: ARM template snippet showing how to configure the networkProfile property with a subnetId for a Managed DevOps Pool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-networking.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"MyManagedDevOpsPool\",\n    \"type\": \"Microsoft.DevOpsInfrastructure/pools\",\n    \"apiVersion\": \"2024-10-19\",\n    \"location\": \"eastus\",\n    \"properties\": {\n        ...\n        \"networkProfile\": {\n          \"subnetId\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/mySubnet\",\n        }\n        ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Clean Checkout in YAML Pipeline\nDESCRIPTION: Sets up the checkout step in a YAML pipeline to clean the local repository before fetching, ensuring a fresh working directory for Git operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/git-commands.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self\n  clean: true\n```\n\n----------------------------------------\n\nTITLE: Simple File Undelete Example\nDESCRIPTION: A basic example that restores a file named '314.cs' to the server folder it was deleted from and retrieves a read-only copy to the current workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undelete-command.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\nC:\\projects>tf undelete c:\\math\\314.cs\n```\n\n----------------------------------------\n\nTITLE: Configuring NPM Test Script for Unit Testing Azure DevOps Extensions\nDESCRIPTION: A JSON configuration snippet for package.json that defines a test script using Mocha with XUnit reporter. This script runs tests and outputs the results to an XML file that can be published to Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n\"scripts\": {\n    \"testScript\": \"mocha ./TestFile --reporter xunit --reporter-option output=ResultsFile.xml\"\n},\n```\n\n----------------------------------------\n\nTITLE: REST-based Work Item Query Implementation in C#\nDESCRIPTION: Demonstrates how to create and execute a work item query using REST-based HTTP client. The sample creates a new query for New Bugs, stores it under 'MyQueries', runs the query, and outputs results to console. Requires Microsoft.TeamFoundationServer.Client, Microsoft.VisualStudio.Services.Client, and Microsoft.VisualStudio.Services.InteractiveClient NuGet packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/client-libraries/samples.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\npublic static void SampleREST()\n{\n    VssConnection connection = new VssConnection(orgUrl, new VssBasicCredential(string.Empty, personalAccessToken));\n\n    WorkItemTrackingHttpClient witClient = connection.GetClient<WorkItemTrackingHttpClient>();\n\n    List<QueryHierarchyItem> queryHierarchyItems = witClient.GetQueriesAsync(teamProjectName, depth: 2).Result;\n\n    QueryHierarchyItem myQueriesFolder = queryHierarchyItems.FirstOrDefault(qhi => qhi.Name.Equals(\"My Queries\"));\n    if (myQueriesFolder != null)\n    {\n        string queryName = \"REST Sample\";\n\n        QueryHierarchyItem newBugsQuery = null;\n        if (myQueriesFolder.Children != null)\n        {\n            newBugsQuery = myQueriesFolder.Children.FirstOrDefault(qhi => qhi.Name.Equals(queryName));\n        }\n        if (newBugsQuery == null)\n        {\n            newBugsQuery = new QueryHierarchyItem()\n            {\n                Name = queryName,\n                Wiql = \"SELECT [System.Id],[System.WorkItemType],[System.Title],[System.AssignedTo],[System.State],[System.Tags] FROM WorkItems WHERE [System.TeamProject] = @project AND [System.WorkItemType] = 'Bug' AND [System.State] = 'New'\",\n                IsFolder = false\n            };\n            newBugsQuery = witClient.CreateQueryAsync(newBugsQuery, teamProjectName, myQueriesFolder.Name).Result;\n        }\n\n        WorkItemQueryResult result = witClient.QueryByIdAsync(newBugsQuery.Id).Result;\n\n        if (result.WorkItems.Any())\n        {\n            int skip = 0;\n            const int batchSize = 100;\n            IEnumerable<WorkItemReference> workItemRefs;\n            do\n            {\n                workItemRefs = result.WorkItems.Skip(skip).Take(batchSize);\n                if (workItemRefs.Any())\n                {\n                    List<WorkItem> workItems = witClient.GetWorkItemsAsync(workItemRefs.Select(wir => wir.Id)).Result;\n                    foreach (WorkItem workItem in workItems)\n                    {\n                        Console.WriteLine(\"{0} {1}\", workItem.Id, workItem.Fields[\"System.Title\"]);\n                    }\n                }\n                skip += batchSize;\n            }\n            while (workItemRefs.Count() == batchSize);\n        }\n        else\n        {\n            Console.WriteLine(\"No work items were returned from query.\");\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring pip.ini/pip.conf for Azure Artifacts Authentication\nDESCRIPTION: Configuration file that should be added to your Python virtual environment to authenticate with Azure Artifacts. This sets the index URL to point to your organization's feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/install-python-packages.md#2025-04-22_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\n[global]\nindex-url=https://pkgs.dev.azure.com/ORGANIZATION_NAME/PROJECT_NAME/_packaging/FEED_NAME/pypi/simple/\n```\n\n----------------------------------------\n\nTITLE: Implementing Restrictions for Azure DevOps Pipeline Tasks\nDESCRIPTION: JSON configuration for task.json that restricts the Azure Pipelines commands and variables a task can use. This helps prevent unrestricted access to variables or commands for custom scripts executed by the task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_23\n\nLANGUAGE: json\nCODE:\n```\n\"restrictions\": {\n  \"commands\": {\n    \"mode\": \"restricted\"\n  },\n  \"settableVariables\": {\n    \"allowed\": [\"variable1\", \"test*\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring GitHub Release Task in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for the GitHub Release task in Azure Pipelines. This task allows creating, modifying, or discarding GitHub releases and supports uploading assets and generating release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-144-update.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\ntask: GithubRelease@0 \ndisplayName: 'Create GitHub Release'      \ninputs:\n  githubConnection: zenithworks\n  repositoryName: zenithworks/pipelines-java\n  assets: $(build.artifactstagingdirectory)/*.jar\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet Packages to External Feed with YAML Pipeline\nDESCRIPTION: YAML pipeline configuration to publish NuGet packages to an Azure Artifacts feed in a different organization. Uses NuGetToolInstaller, NuGetAuthenticate with a service connection, and a script task to push packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/nuget.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetToolInstaller@1                                # Minimum required NuGet version: 4.8.0.5385+.\n  displayName: 'NuGet Tool Installer'\n\n- task: NuGetAuthenticate@1\n  inputs:\n    nuGetServiceConnections: <SERVICE_CONNECTION_NAME>\n    \n- script: |\n      nuget.exe push -Source \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" -ApiKey az $(Build.ArtifactStagingDirectory)\\*.nupkg\n  displayName: Push\n```\n\n----------------------------------------\n\nTITLE: Configuring SpecificAccounts Permissions in ARM Template (JSON)\nDESCRIPTION: This JSON snippet demonstrates setting pool administration permissions to specific user accounts using an ARM template. The `permissionProfile.kind` is set to `SpecificAccounts`, and the `users` property contains an array of email addresses for the users to be granted administrator roles. The pool creator is added by default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n   {\n   \"organizationProfile\": {\n       \"organizations\": [...],\n       \"permissionProfile\": {\n           \"kind\": \"SpecificAccounts\",\n           \"users\" : [\"User1@fabrikam.com\", \"User2@fabrikam.com\" ]\n       },\n       \"kind\": \"AzureDevOps\"\n    }\n   \n```\n\n----------------------------------------\n\nTITLE: Workfold Command Syntax for Cloaking Folders\nDESCRIPTION: Syntax for cloaking a server folder, which excludes it from version control operations in the workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ntf workfold /cloak \n<server-folder> [/workspace:<workspace-name>] [/collection:<team-project-collection-url>] [/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Locking NuGet Dependencies in XML Project File\nDESCRIPTION: Add the RestorePackagesWithLockFile property to the csproj file to enable dependency locking and generate a packages.lock.json file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/caching-nuget.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<PropertyGroup>\n  <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>\n</PropertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Setting Pipeline Variables in Bash While Avoiding Single Quote Issues\nDESCRIPTION: A Bash script snippet demonstrating how to properly set Azure DevOps pipeline variables using ##vso commands while avoiding the issue of appended single quotes. This workaround temporarily disables command tracing (set +x) before setting variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/troubleshooting.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nset +x\necho ##vso[task.setvariable variable=MY_VAR]my_value\nset -x\n```\n\n----------------------------------------\n\nTITLE: Implementing PR Status Updates with Azure Functions in C#\nDESCRIPTION: This C# code for an Azure Function receives service hook events for new pull requests, processes the PR information, and posts status updates back to the PR. It checks if the PR title contains 'WIP' and sets the status accordingly. The code requires organization name, project name, repository name, and a Personal Access Token (PAT) with appropriate permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server-with-azure-functions.md#2025-04-22_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nusing System;\nusing System.Net;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Text;\nusing Newtonsoft.Json;\n\nprivate static string organizationName = \"[Organization Name]\";\nprivate static string projectName      = \"[Project Name]\";\nprivate static string repositoryName   = \"[Repo Name]\";\n\nprivate static string pat = \"[PAT TOKEN]\";\n\npublic static async Task<HttpResponseMessage> Run(HttpRequestMessage req, TraceWriter log)\n{\n    try\n    {\n        log.Info(\"Service Hook Received.\");\n\n        dynamic data = await req.Content.ReadAsAsync<object>();\n\n        log.Info(\"Data Received: \" + data.ToString());\n\n        dynamic jObject = JsonConvert.DeserializeObject(data.ToString());\n\n        int pullRequestId;\n        if (!Int32.TryParse(jObject.resource.pullRequestId.ToString(), out pullRequestId))\n        {\n            log.Info(\"Failed to parse the pull request id from the service hooks payload.\");\n        };\n\n        string pullRequestTitle = jObject.resource.title;\n\n        log.Info(\"Service Hook Received for PR: \" + pullRequestId + \" \" + pullRequestTitle);\n\n        PostStatusOnPullRequest(pullRequestId, ComputeStatus(pullRequestTitle));\n\n        return req.CreateResponse(HttpStatusCode.OK);\n    }\n    catch (Exception ex)\n    {\n        log.Info(ex.ToString());\n        return req.CreateResponse(HttpStatusCode.InternalServerError);\n    }\n}\n\nprivate static void PostStatusOnPullRequest(int pullRequestId, string status)\n{\n    string Url = string.Format(\n        @\"https://dev.azure.com/{0}/{1}/_apis/git/repositories/{2}/pullrequests/{3}/statuses?api-version=4.1\",\n        organizationName,\n        projectName,\n        repositoryName,\n        pullRequestId);\n\n    using (HttpClient client = new HttpClient())\n    {\n        client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));\n        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", Convert.ToBase64String(\n                ASCIIEncoding.ASCII.GetBytes(\n                string.Format(\"{0}:{1}\", \"\", pat))));\n\n        var method = new HttpMethod(\"POST\");\n        var request = new HttpRequestMessage(method, Url)\n        {\n            Content = new StringContent(status, Encoding.UTF8, \"application/json\")\n        };\n\n        using (HttpResponseMessage response = client.SendAsync(request).Result)\n        {\n            response.EnsureSuccessStatusCode();\n        }\n    }\n}\n\nprivate static string ComputeStatus(string pullRequestTitle)\n{\n    string state = \"succeeded\";\n    string description = \"Ready for review\";\n\n    if (pullRequestTitle.ToLower().Contains(\"wip\"))\n    {\n        state = \"pending\";\n        description = \"Work in progress\";\n    }\n\n    return JsonConvert.SerializeObject(\n        new\n        {\n            State = state,\n            Description = description,\n            TargetUrl = \"https://visualstudio.microsoft.com\",\n\n            Context = new\n            {\n                Name = \"PullRequest-WIT-App\",\n                Genre = \"pr-azure-function-ci\"\n            }\n        });\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Demands Configuration\nDESCRIPTION: YAML configuration demonstrating how to specify multiple demands for an agent pool\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  name: myPrivateAgents\n  demands:\n  - agent.os -equals Darwin\n  - anotherCapability -equals somethingElse\nsteps:\n- script: echo hello world\n```\n\n----------------------------------------\n\nTITLE: Simple Pipeline Resource Definition\nDESCRIPTION: Basic definition of a pipeline resource that consumes artifacts from another pipeline within the same project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: SmartHotel-resource # identifier to use in pipeline resource variables\n    source: SmartHotel-CI # name of the pipeline that produces the artifacts\n```\n\n----------------------------------------\n\nTITLE: Bundler Caching in Azure Pipelines YAML\nDESCRIPTION: This example shows how to set up caching for Ruby projects using Bundler in Azure Pipelines. It overrides the BUNDLE_PATH environment variable and caches the specified path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  BUNDLE_PATH: $(Pipeline.Workspace)/.bundle\n\nsteps:\n- task: Cache@2\n  displayName: Bundler caching\n  inputs:\n    key: 'gems | \"$(Agent.OS)\" | Gemfile.lock'\n    path: $(BUNDLE_PATH)\n    restoreKeys: | \n      gems | \"$(Agent.OS)\"\n      gems   \n```\n\n----------------------------------------\n\nTITLE: Deployment Job YAML Configuration with Step References\nDESCRIPTION: Example configuration for deployment jobs in YAML pipelines that supports step references and additional properties such as timeouts, conditions, variables, and error handling options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-154-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- deployment: DeploymentJobName\n  timeoutInMinutes: 120\n  cancelTimeoutInMinutes: 5\n  condition: succeeded()\n  continueOnError: false\n  variables:\n    # Variables can be hardcoded, from variable groups, Azure key vault, or defined in a file\n```\n\n----------------------------------------\n\nTITLE: Collecting Code Coverage with Script and Publishing Results in YAML Pipeline\nDESCRIPTION: Shows how to collect code coverage data using the dotnet CLI and then publish the test results with the PublishTestResults task. This approach provides more flexibility in the testing process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# ...\n# do this after your tests have run\n- script: dotnet test <test-project> --logger trx --collect \"Code Coverage\"\n- task: PublishTestResults@2\n  inputs:\n    testRunner: VSTest\n    testResultsFiles: '**/*.trx'\n```\n\n----------------------------------------\n\nTITLE: Complete Azure CLI and DevOps Extension Setup (PowerShell)\nDESCRIPTION: Complete YAML pipeline configuration combining Python setup, Azure CLI installation, and Azure DevOps extension installation using PowerShell commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n# Specify python version if you have side-by-side versions\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '3.x'\n    architecture: 'x64'\n\n# Update pip to latest\n- pwsh: python -m pip install --upgrade pip\n  displayName: 'Upgrade pip'\n\n# Update to latest Azure CLI version, min version required for Azure DevOps is 2.10.1\n- pwsh: pip install --pre azure-cli\n  displayName: 'Upgrade Azure CLI'\n\n# Install Azure DevOps extension\n- pwsh: az extension add -n azure-devops\n  displayName: 'Install Azure DevOps extension'\n\n# Now you can make calls into Azure DevOps CLI\n# ...\n```\n\n----------------------------------------\n\nTITLE: Querying Projects REST API with Legacy URL (HTTP)\nDESCRIPTION: This HTTP request example shows how to query the Projects REST API using a legacy organization URL format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET https://Fabrikam.visualstudio.com/_apis/projects/MyProject\n```\n\n----------------------------------------\n\nTITLE: Publishing Test Results in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to publish JUnit or xUnit test results to the server using the PublishTestResults task in an Azure Pipelines YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_22\n\nLANGUAGE: YAML\nCODE:\n```\n- task: PublishTestResults@2\n  inputs:\n    testResultsFiles: '**/TEST-RESULTS.xml'\n    testRunTitle: 'Test results for JavaScript using gulp'\n```\n\n----------------------------------------\n\nTITLE: Downloading Azure Pipelines Agent using PowerShell\nDESCRIPTION: PowerShell command using `Invoke-WebRequest` to download the Azure Pipelines self-hosted agent installer zip file from a specified URL (obtained from the Azure DevOps Agent Pool setup screen) to a local file path on the target VM. Placeholders `<YOUR_AGENT_DOWNLOAD_LINK>` and `<FILE_PATH>` need to be replaced with actual values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_4\n\nLANGUAGE: PowerShell\nCODE:\n```\nInvoke-WebRequest -URI <YOUR_AGENT_DOWNLOAD_LINK> -UseBasicParsing  -OutFile <FILE_PATH> \n##Example: Invoke-WebRequest -URI https://download.agent.dev.azure.com/agent/4.255.0/vsts-agent-win-x64-4.255.0.zip -OutFile C:\\vsts-agent-win-x64-4.255.0.zip\n```\n\n----------------------------------------\n\nTITLE: Build Number Processing with Bash in Azure DevOps Pipeline\nDESCRIPTION: Script that splits BUILD_BUILDNUMBER into major and minor components and creates pipeline variables using task.setvariable command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_32\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- bash: |\n    MAJOR_RUN=$(echo $BUILD_BUILDNUMBER | cut -d '.' -f1)\n    echo \"This is the major run number: $MAJOR_RUN\"\n    echo \"##vso[task.setvariable variable=major]$MAJOR_RUN\"\n\n    MINOR_RUN=$(echo $BUILD_BUILDNUMBER | cut -d '.' -f2)\n    echo \"This is the minor run number: $MINOR_RUN\"\n    echo \"##vso[task.setvariable variable=minor]$MINOR_RUN\"\n\n- bash: echo \"My pipeline variable for major run is $(major)\"\n- bash: echo \"My pipeline variable for minor run is $(minor)\"\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps CLI Extension (PowerShell)\nDESCRIPTION: YAML configuration for adding the Azure DevOps extension to an existing Azure CLI installation using PowerShell commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\n# Install Azure DevOps extension\n- pwsh: az extension add -n azure-devops\n  displayName: 'Install Azure DevOps extension'\n\n# Now you can make calls into Azure DevOps CLI\n# ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows-Specific Anaconda Caching in Azure Pipelines\nDESCRIPTION: YAML configuration for caching Anaconda environments on Windows systems using the Cache@2 task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Cache@2\n  displayName: Cache Anaconda\n  inputs:\n    key: 'conda | \"$(Agent.OS)\" | environment.yml'\n    restoreKeys: | \n      python | \"$(Agent.OS)\"\n      python\n    path: $(CONDA)/envs\n    cacheHitVar: CONDA_CACHE_RESTORED\n\n- script: conda env create --quiet --file environment.yml\n  displayName: Create environment\n  condition: eq(variables.CONDA_CACHE_RESTORED, 'false')\n```\n\n----------------------------------------\n\nTITLE: Authenticating Service Principal with Azure CLI in PowerShell\nDESCRIPTION: This snippet demonstrates how to authenticate a service principal using the Azure CLI in PowerShell. It includes steps for logging in, setting the correct subscription, and generating a Microsoft Entra ID access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/service-principal-managed-identity.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n# To authenticate a service principal with a password or cert:\naz login --service-principal -u <app-id> -p <password-or-cert> --tenant <tenant>\n\n# To authenticate a managed identity:\naz login --identity\n```\n\nLANGUAGE: powershell\nCODE:\n```\naz account set -s <subscription-id>\n```\n\nLANGUAGE: powershell\nCODE:\n```\n$accessToken = az account get-access-token --resource 499b84ac-1321-427f-aa17-267ca6975798 --query \"accessToken\" --output tsv\n```\n\n----------------------------------------\n\nTITLE: Viewing Local Git Configuration Settings\nDESCRIPTION: This command shows Git configuration settings specific to the current local repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ngit config --list --local\n```\n\n----------------------------------------\n\nTITLE: Implementing Azure DevOps Task Logic in TypeScript\nDESCRIPTION: Creates an index.ts file containing the main logic for the custom Azure DevOps task. This TypeScript code handles task inputs, performs the core functionality, and sets the task result.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport tl = require('azure-pipelines-task-lib/task');\n\nasync function run() {\n    try {\n        const inputString: string | undefined = tl.getInput('samplestring', true);\n        if (inputString == 'bad') {\n            tl.setResult(tl.TaskResult.Failed, 'Bad input was given');\n            return;\n        }\n        console.log('Hello', inputString);\n    }\n    catch (err:any) {\n        tl.setResult(tl.TaskResult.Failed, err.message);\n    }\n}\n\nrun();\n```\n\n----------------------------------------\n\nTITLE: Viewing Work Items with Azure DevOps CLI\nDESCRIPTION: Command to view a specific work item using the Azure DevOps CLI. The command retrieves and displays work item details based on the provided ID, with an option to open it in the default web browser.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/view-add-work-items.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item show --id\n                         [--open]\n                         [--org]\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Task Retries in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure automatic retries for a specific task within an Azure Pipeline. The `retryCountOnTaskFailure` property specifies the maximum number of times the task should be retried if it fails. This feature requires agent version 2.194.0 or later and is not supported for agentless tasks. Note that the task is retried immediately, assumes no idempotency, receives no information about the retry count, and logs a warning before each retry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-195-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: <name of task>\n   retryCountOnTaskFailure: <max number of retries>\n   ...\n```\n\n----------------------------------------\n\nTITLE: C# Controller for Handling Work Item Created Webhook Events\nDESCRIPTION: A C# sample controller that handles webhook events from Azure DevOps. It includes classes for deserializing the work item data structure and a method to extract field values from the payload.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/create-subscription.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Net;\nusing System.Net.Http;\nusing System.Web.Mvc;\n\nnamespace Microsoft.Samples.VisualStudioOnline\n{\n    public class ServiceHookEventController : Controller\n    {\n\n        // POST: /ServiceHookEvent/workitemcreated\n        [HttpPost]\n        public HttpResponseMessage WorkItemCreated(Content workItemEvent)\n        {\n            //Grabbing the title for the new workitem\n            var value = RetrieveFieldValue(\"System.field\", workItemEvent.Resource.Fields);\n\n            //Acknowledge event receipt\n            return new HttpResponseMessage(HttpStatusCode.OK);\n        }\n\n        /// <summary>\n        /// Gets the value for a specified work item field.\n        /// </summary>\n        /// <param name=\"key\">Key used to retrieve matching value</param>\n        /// <param name=\"fields\">List of fields for a work item</param>\n        /// <returns></returns>\n        public String RetrieveFieldValue(String key, IList<FieldInfo> fields)\n        {\n            if (String.IsNullOrEmpty(key))\n                return String.Empty;\n\n            var result = fields.Single(s => s.Field.RefName == key);\n\n            return result.Value;\n        }\n\n\t}\n\n    public class Content\n    {\n        public String SubscriptionId { get; set; }\n\n        public int NotificationId { get; set; }\n\n        public String EventType { get; set; }\n\n        public WorkItemResource Resource { get; set; }\n\n    }\n\n    public class WorkItemResource\n    {\n        public String UpdatesUrl { get; set; }\n\n        public IList<FieldInfo> Fields { get; set;}\n\n        public int Id { get; set; }\n\n        public int Rev { get; set; }\n\n        public String Url { get; set; }\n\n        public String WebUrl { get; set; }\n    }\n\n    public class FieldInfo\n    {\n        public FieldDetailedInfo Field { get; set; }\n\n        public String Value { get; set; }\n\n    }\n\n    public class FieldDetailedInfo\n    {\n        public int Id { get; set; }\n\n        public String Name { get; set; }\n\n        public String RefName { get; set; }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Configuration for Multiple Jobs on Single Agent Host\nDESCRIPTION: This Bash snippet shows how to set a Docker environment variable 'DOCKER_CONFIG' in each agent pool's runsvc.sh script to avoid authentication issues when running multiple container jobs in parallel.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/container-phases.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport DOCKER_CONFIG=./.docker\n```\n\n----------------------------------------\n\nTITLE: Filtering by Current Date with the @Today Macro - WIQL\nDESCRIPTION: This WIQL example queries work items created on the current date using the @today macro, which dynamically resolves to the local midnight date of execution. There are no dependencies apart from WIQL's support for macros; input is the current system date, and the result is a list of items created today.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_10\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE  \n   [System.CreatedDate] = @today\n```\n\n----------------------------------------\n\nTITLE: Pipeline Artifact Download Step\nDESCRIPTION: Example showing how to download specific artifacts from a pipeline resource with pattern matching.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\n- job: deploy_windows_x86_agent\n  steps:\n  - download: SmartHotel\n    artifact: WebTier1\n    patterns: '**/*.zip'\n```\n\n----------------------------------------\n\nTITLE: Configuring Project-Level .npmrc for Azure Artifacts (Linux/macOS)\nDESCRIPTION: This snippet creates a project-level .npmrc file to connect to an Azure Artifacts feed. It configures the registry URL and ensures authentication is always required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nregistry=https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/ \n                        \nalways-auth=true\n```\n\n----------------------------------------\n\nTITLE: Creating .gitignore for Azure DevOps Task Project\nDESCRIPTION: Creates a .gitignore file to exclude the node_modules directory from version control, as these dependencies should be installed during the build process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_3\n\nLANGUAGE: PowerShell\nCODE:\n```\necho node_modules > .gitignore\n```\n\n----------------------------------------\n\nTITLE: Posting Status to Azure DevOps Pull Request\nDESCRIPTION: Makes an API call to create a status on a pull request using the Azure DevOps Git API and logs the result to the console.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nvstsGit.createPullRequestStatus(prStatus, repoId, pullRequestId).then( result => {\n    console.log(result)\n})\n```\n\n----------------------------------------\n\nTITLE: Removing Azure DevOps Agent Configuration using Batch Command\nDESCRIPTION: This command removes the existing agent configuration using a Personal Access Token (PAT) for authentication. It should be run from the agent folder before reconfiguring the agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/troubleshooting-autologon.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\n.\\config.cmd remove --auth 'PAT' --token '<token>'\n```\n\n----------------------------------------\n\nTITLE: Implementing Asynchronous Performance Check for Canary Deployment in Azure Pipelines\nDESCRIPTION: Demonstration of setting up an asynchronous Azure Function check to monitor the performance of a canary deployment before allowing the pipeline to continue.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/invoke-checks.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- You add an _asynchronous_ Azure Function check \n- When a pipeline that wants to use the Service Connection runs:\n    - Azure Pipelines calls your check function\n    - The check starts a monitor of the canary deployment's performance\n    - The check schedules multiple evaluation checkpoints, to see how the performance evolved\n    - Once you gain enough confidence in the canary deployment's performance, your Azure Function calls back into Azure Pipelines with a positive decision\n    - The pipeline run continues\n```\n\n----------------------------------------\n\nTITLE: Setting Azure firewall rules using PowerShell (ARM)\nDESCRIPTION: This PowerShell script creates firewall rules in Azure to allow the Azure Pipelines agent to communicate with Azure SQL Database. It uses Azure Resource Manager (ARM) cmdlets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n[CmdletBinding(DefaultParameterSetName = 'None')]\nparam\n(\n  [String] [Parameter(Mandatory = $true)] $ServerName,\n  [String] [Parameter(Mandatory = $true)] $ResourceGroupName,\n  [String] $FirewallRuleName = \"AzureWebAppFirewall\"\n)\n$agentIP = (New-Object net.webclient).downloadstring(\"https://api.ipify.org\")\nNew-AzSqlServerFirewallRule -ResourceGroupName $ResourceGroupName -ServerName $ServerName -FirewallRuleName $FirewallRuleName -StartIPAddress $agentIP -EndIPAddress $agentIP\n```\n\n----------------------------------------\n\nTITLE: Comparing current version with a branch in Git\nDESCRIPTION: This command compares the current working directory with the specified branch, showing all differences.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_20\n\nLANGUAGE: git\nCODE:\n```\ngit diff branchname\n```\n\n----------------------------------------\n\nTITLE: Configuring App Center Test Task in Azure Pipelines YAML\nDESCRIPTION: Defines the `AppCenterTest@1` task to run UI tests on hosted iOS devices via Visual Studio App Center. It specifies the path to the app file (`.ipa`), the directory for artifacts, the testing framework ('appium'), the build directory for the framework, the required App Center service connection ('My App Center service connection'), the app identifier (`appSlug`), and the target device list ('devicelist'). A configured App Center service connection is a prerequisite. Note: Visual Studio App Center is scheduled for retirement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/xcode.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AppCenterTest@1\n  inputs:\n    appFile: path/myapp.ipa\n    artifactsDirectory: '$(Build.ArtifactStagingDirectory)/AppCenterTest'\n    frameworkOption: 'appium'\n    appiumBuildDirectory: test/upload\n    serverEndpoint: 'My App Center service connection'\n    appSlug: username/appIdentifier\n    devices: 'devicelist'\n```\n\n----------------------------------------\n\nTITLE: Restricting Agent Logging Commands in Azure Pipelines\nDESCRIPTION: Example of a task that fails due to restrictions on agent logging commands. In restricted mode, the task cannot publish artifacts because the required command is not allowed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n- task: PublishBuildArtifacts@1\n  inputs:\n    artifactName: myartifacts\n  target:\n    commands: restricted\n```\n\n----------------------------------------\n\nTITLE: Setting Pull Request Completion Options using Azure DevOps CLI\nDESCRIPTION: Complete command example to update a pull request with various completion options including deleting source branch, transitioning work items, and adding a custom merge commit message using Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/complete-pull-requests.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr update --id 21 --status completed --delete-source-branch true --transition-work-items true --merge-commit-message \"This update is complete.\"\n```\n\n----------------------------------------\n\nTITLE: OAuth Authentication for Azure DevOps REST Services\nDESCRIPTION: Implements OAuth authentication for Azure DevOps REST services using an access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/client-libraries/samples.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\npublic static void OAuthSample()\n{\n    VssConnection connection = new VssConnection(new Uri(collectionUri), new VssOAuthAccessTokenCredential(accessToken));\n}\n```\n\n----------------------------------------\n\nTITLE: Cherry-picking Commits in Git\nDESCRIPTION: Applies the changes from a specific commit to the current branch. This is useful for selectively incorporating changes from other branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_31\n\nLANGUAGE: git\nCODE:\n```\ngit cherry-pick commitID\n```\n\n----------------------------------------\n\nTITLE: Filtering User Stories by Tag in Azure DevOps Analytics\nDESCRIPTION: Power BI query that filters User Stories by a specific tag, excluding completed items, within a specific area path and date range. The query groups results by date, state, area path, and calculates count and total story points.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_4\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\"\n        &\"$apply=filter(WorkItemType eq 'User Story' \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and Tags/any(x:x/TagName eq '{tagname}') \"\n            &\"and DateValue ge {startdate} \"\n            &\"and DateValue le {enddate} \"\n            &\"and Date/DayName eq 'Friday' \"\n        &\") \"\n        &\"/groupby ( \"\n            &\"(DateValue,State,Area/AreaPath,AreaSK), \"\n            &\"aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Restoring NuGet Packages in Azure Pipelines YAML\nDESCRIPTION: Use the NuGetCommand@2 task to restore packages only when the cache is not found, improving build efficiency.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/caching-nuget.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n- task: NuGetCommand@2\n  condition: ne(variables.CACHE_RESTORED, true)\n  inputs:\n    command: 'restore'\n    restoreSolution: '**/*.sln'\n```\n\n----------------------------------------\n\nTITLE: Generating Matrix Configuration Using Output Variables in Azure DevOps\nDESCRIPTION: Demonstrates how to dynamically generate a matrix configuration using output variables from a previous job. This pattern allows for creating complex matrices at runtime based on script output.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: generator\n  steps:\n  - bash: echo \"##vso[task.setVariable variable=legs;isOutput=true]{'a':{'myvar':'A'}, 'b':{'myvar':'B'}}\"\n    name: mtrx\n  # This expands to the matrix\n  #   a:\n  #     myvar: A\n  #   b:\n  #     myvar: B\n- job: runner\n  dependsOn: generator\n  strategy:\n    matrix: $[ dependencies.generator.outputs['mtrx.legs'] ]\n  steps:\n  - script: echo $(myvar) # echos A or B depending on which leg is running\n```\n\n----------------------------------------\n\nTITLE: Creating Service Principal for Azure Stack Hub with Azure CLI\nDESCRIPTION: Azure CLI command to create a service principal with contributor role for a specific subscription and resource group in Azure Stack Hub. This generates the necessary credentials for authentication in the CI/CD pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-stack.md#2025-04-22_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz ad sp create-for-rbac --name \"myApp\" --role contributor \\\n    --scopes /subscriptions/{subscription-id}/resourceGroups/{resource-group} \\\n    --sdk-auth\n```\n\n----------------------------------------\n\nTITLE: Disabling Auto-Cancel for PR Triggers in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to disable the auto-cancellation of in-progress validation runs when new updates are made to a pull request. It sets 'autoCancel' to false for the 'main' branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/bitbucket.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  autoCancel: false\n  branches:\n    include:\n    - main\n```\n\n----------------------------------------\n\nTITLE: Calling Work Item Tracking REST API in JavaScript for Azure DevOps Extension\nDESCRIPTION: This snippet demonstrates how to call the Work Item Tracking REST API within an Azure DevOps extension. It uses the VSS SDK to get the client service and then queries for work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/call-rest-api.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nVSS.require([\"VSS/Service\", \"TFS/WorkItemTracking/RestClient\"], function(VSS_Service, TFS_Wit_WebApi) {\n    var witClient = VSS_Service.getCollectionClient(TFS_Wit_WebApi.WorkItemTrackingHttpClient);\n    witClient.getWorkItems([1, 2, 3]).then(\n        function(workItems) {\n            // Do something with the work items\n            console.log(workItems);\n        }\n    );\n});\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Day of Week in OData\nDESCRIPTION: Query that demonstrates a more abstract filter pattern by returning all work items that were created on Monday (where Monday is represented by DayOfWeek value 2).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_18\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=CreatedOn/DayOfWeek eq 2\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Pushing Current Branch to Origin\nDESCRIPTION: Command to push the current local branch to a same-named remote branch on 'origin'. Fails if the remote branch doesn't exist.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pushing.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ngit push origin\n```\n\n----------------------------------------\n\nTITLE: Authenticating Azure Pipelines with GitHub Credentials - azurecli-interactive\nDESCRIPTION: This CLI snippet shows interactive prompts for entering GitHub credentials to allow Azure Pipelines to access the forked repository. It asks for the GitHub username and password (supports use of pre-generated PAT if left blank). This step ensures pipeline setup can securely connect to GitHub through user authentication. No actual command, just the prompt outputs; used as part of the authentication flow.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nEnter your GitHub username (Leave blank for using already generated PAT): \nEnter your GitHub password:\n```\n\n----------------------------------------\n\nTITLE: Main Azure Pipeline Definition with Dynamic Build Tasks\nDESCRIPTION: Main pipeline configuration that defines build and deploy jobs. The build job uses a template and passes a list of .NET Core build tasks using the stepList parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runtime-parameters.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n#azure-pipelines.yml\n\ntrigger:\n- main\n\njobs:\n  - job: build\n    displayName: 'Build .NET Core Application'\n    pool:\n      vmImage: 'ubuntu-latest'\n\n    steps:\n      - checkout: self\n\n      - template: build.yml\n        parameters:\n          build_tasks:\n            - task: DotNetCoreCLI@2\n              displayName: 'Restore'\n              inputs:\n                command: 'restore'\n                projects: '**/*.csproj'  \n\n            - task: DotNetCoreCLI@2\n              displayName: 'Build'\n              inputs:\n                command: 'build'\n                arguments: '--no-restore'\n                projects: '**/*.csproj' \n\n  - job: deploy\n    displayName: 'Pack for Azure App Service deployment'\n    dependsOn: build\n    pool:\n      vmImage: 'ubuntu-latest'\n    steps:\n      - download: current\n        artifact: drop\n```\n\n----------------------------------------\n\nTITLE: Querying Test Execution Status for Requirements in Azure DevOps using OData\nDESCRIPTION: This OData query retrieves test points data for requirements within a specific iteration and area, grouped by parent work item. It calculates total tests and their execution status (passed, failed, blocked, not applicable, not run, run) for each parent requirement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview-rollup.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints? \n$apply=filter(\n    (TestSuite/RequirementWorkItem/IterationSK eq {iterationSK}\nand TestSuite/RequirementWorkItem/AreaSK eq {areaSK}\nand TestSuite/RequirementWorkItem/Processes/any(p:p/BacklogType eq 'RequirementBacklog')\nand TestSuite/RequirementWorkItem/Processes/all(p:p/IsBugType eq false)\n))\n/compute(iif(TestSuite/RequirementWorkItem/Parent ne null, TestSuite/RequirementWorkItem/Parent/WorkItemId, 0) as ParentWorkItemId, \niif(TestSuite/RequirementWorkItem/Parent ne null, TestSuite/RequirementWorkItem/Parent/Title, 'Unparented') as ParentWorkItemTitle\n)/groupby(\n    (ParentWorkItemId, ParentWorkItemTitle), \n    aggregate(\n        $count as TotalCount, \n        cast(LastResultOutcome eq 'Passed', Edm.Int32) with sum as PassedCount, \n        cast(LastResultOutcome eq 'Failed', Edm.Int32) with sum as FailedCount, \n        cast(LastResultOutcome eq 'Blocked', Edm.Int32) with sum as BlockedCount,\n        cast(LastResultOutcome eq 'NotApplicable', Edm.Int32) with sum as NotApplicableCount,\n        cast(LastResultOutcome eq 'None', Edm.Int32) with sum as NotRunCount, \n        cast(LastResultOutcome ne 'None', Edm.Int32) with sum as RunCount\n    )\n)\n```\n\n----------------------------------------\n\nTITLE: Setting Python Version in VSTS Build Pipeline\nDESCRIPTION: This snippet demonstrates configuring the Python version for a build pipeline using the 'Use Python Version' task. It allows specifying a version or version range to use from the agent's tool cache.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/may-07-vsts.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '>= 3.3'\n```\n\n----------------------------------------\n\nTITLE: Marking an Azure VM as Generalized using Azure CLI\nDESCRIPTION: Flags a deallocated Azure Virtual Machine as generalized within Azure metadata. This indicates that the VM is ready to be used as a source for creating a custom VM image. This command should be run after the VM has been deallocated post-generalization (using Sysprep or waagent).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm generalize --resource-group <myResourceGroup> --name <MyVM>\n```\n\n----------------------------------------\n\nTITLE: Implementing Parallel Testing with Job Slicing in Azure DevOps\nDESCRIPTION: Shows how to implement test slicing by creating multiple parallel jobs. This configuration creates 5 identical jobs that can use System.JobPositionInPhase and System.TotalJobsInPhase variables to divide work.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Test\n  strategy:\n    parallel: 5\n```\n\n----------------------------------------\n\nTITLE: Reading Variables with PowerShell in Azure DevOps\nDESCRIPTION: Shows how to read regular and secret variables in PowerShell, demonstrating parameter passing and environment variable access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/set-variables-in-scripts.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n-sauceArgument \"$(sauce)\" -secretSauceArgument \"$(secret.Sauce)\"\n```\n\nLANGUAGE: powershell\nCODE:\n```\nParam(\n   [string]$sauceArgument,\n   [string]$secretSauceArgument\n)\nWrite-Host No problem reading $env:SAUCE or $sauceArgument\nWrite-Host But I cannot read $env:SECRET_SAUCE\nWrite-Host But I can read $secretSauceArgument \"(but the log is redacted so I do not\n           spoil the secret)\"\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Grid Control with Data\nDESCRIPTION: Initializes a grid control with two columns (key and value), sets up data source, and configures grid properties including height and column definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/use-a-control-js.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Load Azure DevOps Services controls\nVSS.require([\"VSS/Controls\", \"VSS/Controls/Grids\"],\n    function (Controls, Grids) {\n\n    // Initialize the grid control with two columns, \"key\" and \"value\"\n    var dataSource = [];\n    dataSource.push({key: \"key\", value: \"value\"});\n\n    Controls.create(Grids.Grid, $(\"#grid-container\"), {\n        height: \"1000px\", // Explicit height is required for a Grid control\n        columns: [\n            // text is the column header text. \n            // index is the key into the source object to find the data for this column\n            // width is the width of the column, in pixels\n            { text: \"Property key\", index: \"key\", width: 150 },\n            { text: \"Property value\", index: \"value\", width: 600 }\n        ],\n        // This data source is rendered into the Grid columns defined previously\n        source: dataSource\n    });\n    VSS.notifyLoadSucceeded();\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Secrets in Azure DevOps Pipelines with Bash\nDESCRIPTION: Demonstrates how to register a transformed or derived value as a secret using the task.setsecret command in Bash. The value will be masked in logs to protect sensitive information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\n- bash: |\n    NEWSECRET=$(echo $OLDSECRET|base64)\n    echo \"##vso[task.setsecret]$NEWSECRET\"\n  name: SetSecret\n  env:\n    OLDSECRET: \"SeCrEtVaLuE\"\n```\n\n----------------------------------------\n\nTITLE: Promoting Android Apps Between Google Play Tracks Using YAML Pipeline Task\nDESCRIPTION: This snippet shows how to use the GooglePlayPromote@3 task to promote a previously released Android application from one track to another (e.g., from internal to alpha). It requires the package name and service connection for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GooglePlayPromote@3\n  inputs:\n    packageName: 'com.yourCompany.appPackageName'\n    serviceEndpoint: 'yourGooglePlayServiceConnectionName'\n    sourceTrack: 'internal'\n    destinationTrack: 'alpha'\n```\n\n----------------------------------------\n\nTITLE: Copying Field Value in XML Process\nDESCRIPTION: Demonstrates copying a blank value to a Status field when creating or modifying a work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"MyCorp.Status\" name=\"Status\" type=\"String\">\n   <COPY from=\"value\" value=\" \" />\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Endpoint Contribution in Extension Manifest\nDESCRIPTION: This JSON snippet defines a custom service endpoint contribution in the vss-extension.json file. It specifies the endpoint type, authentication schemes, and data sources for the Fabrikam server connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/service-endpoints.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n\"contributions\": [\n    {\n      \"id\": \"service-endpoint\",\n      \"description\": \"Service endpoint type for Fabrikam connections\",\n      \"type\": \"ms.vss-endpoint.service-endpoint-type\",\n      \"targets\": [ \"ms.vss-endpoint.endpoint-types\" ],\n      \"properties\": {\n        \"name\": \"fabrikam\",\n        \"displayName\": \"Fabrikam server connection\",\n        \"url\": {\n          \"displayName\": \"Server Url\",\n          \"helpText\": \"Url for the Fabrikam server to connect to.\"\n        },\n        \"dataSources\": [\n          {\n            \"name\": \"Fabrikam Projects\",\n            \"endpointUrl\": \"{{endpoint.url}}api/projects/index\",\n            \"resultSelector\": \"jsonpath:$[*].nm\"\n          }\n\n        ],\n        \"authenticationSchemes\": [\n          {\n            \"type\": \"ms.vss-endpoint.endpoint-auth-scheme-token\"\n          },\n          {\n            \"type\": \"ms.vss-endpoint.endpoint-auth-scheme-basic\",\n            \"inputDescriptors\": [\n              {\n                \"id\": \"username\",\n                \"name\": \"Username\",\n                \"description\": \"Username\",\n                \"inputMode\": \"textbox\",\n                \"validation\": {\n                  \"isRequired\": false,\n                  \"dataType\": \"string\"\n                }\n              },\n              {\n                \"id\": \"password\",\n                \"name\": \"Password\",\n                \"description\": \"Password\",\n                \"inputMode\": \"passwordbox\",\n                \"isConfidential\": true,\n                \"validation\": {\n                  \"isRequired\": false,\n                  \"dataType\": \"string\"\n                }\n              }\n            ]\n          }\n\n        ],\n        \"helpMarkDown\": \"<a href=\\\"url-to-documentation\\\" target=\\\"_blank\\\"><b>Learn More</b></a>\"\n      }\n    },\n  ],\n```\n\n----------------------------------------\n\nTITLE: Verifying and Setting Azure Subscription in Azure CLI\nDESCRIPTION: Azure CLI commands to list available subscriptions and set the desired subscription for subsequent operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz account list -o table\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz account set -s <your subscription ID>\n```\n\n----------------------------------------\n\nTITLE: Inline Repository Checkout in Azure Pipeline\nDESCRIPTION: Example demonstrating inline checkout syntax for Azure Repos Git repositories within the same organization, showing both self and additional repository checkout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/multi-repo-checkout.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- checkout: self\n- checkout: git://MyProject/MyRepo\n```\n\n----------------------------------------\n\nTITLE: Updating Google Play App Status Using YAML Pipeline Task\nDESCRIPTION: This snippet shows how to use the GooglePlayStatusUpdate@2 task to update the rollout status for an application previously released to the rollout track. It specifies authentication type, package name, service connection, and status (draft, inProgress, halted, or completed).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n  - task: GooglePlayStatusUpdate@2\n    inputs:\n      authType: ServiceEndpoint\n      packageName: 'com.yourCompany.appPackageName'\n      serviceEndpoint: 'yourGooglePlayServiceConnectionName'\n      status: 'inProgress' # draft | inProgress | halted | completed\n```\n\n----------------------------------------\n\nTITLE: Enabling Credential Persistence in YAML Pipeline\nDESCRIPTION: Configures the checkout step in a YAML pipeline to persist Git credentials, allowing subsequent Git commands to access the repository with proper authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/git-commands.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self\n  persistCredentials: true\n```\n\n----------------------------------------\n\nTITLE: Installing Packages into an Anaconda Environment (YAML)\nDESCRIPTION: Installs the 'scipy' package into the previously created 'myEnvironment' Anaconda environment. First, the environment is activated using platform-specific commands ('source activate' for Ubuntu/macOS, 'call activate' for Windows). Then, 'conda install' is used with '--yes' and '--quiet' flags. Examples provided for Ubuntu (bash), macOS (bash), and Windows (script).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/anaconda.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# Ubuntu\n\n```yaml\n- bash: |\n    source activate myEnvironment\n    conda install --yes --quiet --name myEnvironment scipy\n  displayName: Install Anaconda packages\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# macOS\n\n```yaml\n- bash: |\n    source activate myEnvironment\n    conda install --yes --quiet --name myEnvironment scipy\n  displayName: Install Anaconda packages\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# Windows\n\n```yaml\n- script: |\n    call activate myEnvironment\n    conda install --yes --quiet --name myEnvironment scipy\n  displayName: Install Anaconda packages\n```\n```\n\n----------------------------------------\n\nTITLE: Restoring Packages from an External NuGet Feed Using DotNetCoreCLI Task - YAML\nDESCRIPTION: This snippet enables restoring .NET Core packages from an external NuGet feed in Azure DevOps pipelines. The 'DotNetCoreCLI@2' task uses a provided nugetConfigPath and references a named external feed credential (service connection). Required dependencies: configured service connection, an accessible NuGet.config file, and presence of DotNetCoreCLI@2 in the environment. Parameters: 'projects' (file glob), 'feedsToUse' set as 'config', 'externalFeedCredentials'. Outputs are downloaded and authenticated packages for all targeted project files. Replace the placeholder for feed name appropriately.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# do this before your build tasks\\nsteps:\\n- task: DotNetCoreCLI@2\\n  displayName: Restore\\n  inputs:\\n    command: restore\\n    projects: '**/*.csproj'\\n    feedsToUse: config\\n    nugetConfigPath: NuGet.config    # Relative to root of the repository\\n    externalFeedCredentials: <Name of the NuGet service connection>\\n\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet Packages to Internal Feed with Classic Pipeline\nDESCRIPTION: Command line script used in a Classic pipeline task to push NuGet packages to an Azure Artifacts feed in the same organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/nuget.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnuget.exe push -Source \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" -ApiKey az $(Build.ArtifactStagingDirectory)\\*.nupkg\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Repository Checkout in Azure Pipelines\nDESCRIPTION: YAML configuration for checking out multiple repositories in Azure Pipelines. This example shows how to fetch and checkout a secondary 'Tools' repository alongside the main repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-161-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\nrepositories:\n  - repository: tools\n    name: Tools\n    type: git\n\nsteps:\n- checkout: self\n- checkout: tools\n- script: dir $(Build.SourcesDirectory)\n```\n\n----------------------------------------\n\nTITLE: Adding Upstream Remote via Git CLI\nDESCRIPTION: Commands to add and configure an upstream remote that points to the original repository that was forked. This allows synchronizing changes between the fork and original repo.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/forks.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit remote add upstream <clone URL>\n```\n\nLANGUAGE: console\nCODE:\n```\ngit remote set-url upstream <clone URL>\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Timeline Record\nDESCRIPTION: Demonstrates how to use the task.logdetail command to update an existing timeline record in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n##vso[task.logdetail id=existing timeline record guid;progress=15;state=InProgress;]update timeline record\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription Context with az CLI - Azure CLI\nDESCRIPTION: This Azure CLI command sets the active subscription context so that subsequent az commands operate on the specified subscription. This is important when the user has access to multiple Azure subscriptions. Replace the placeholder with the exact subscription ID or name as seen from the Azure portal. No output is shown on success; all subsequent CLI operations use this context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription \"<subscription id or subscription name>\"\n```\n\n----------------------------------------\n\nTITLE: Identity Field Type Operators and Macros in Azure DevOps Queries\nDESCRIPTION: Operators and macros supported for Identity fields in Azure DevOps queries. Identity fields store user identities and support various comparison and group membership operators.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n`= , <> , > , < , >= , <= , =[Field], <>[Field], >[Field], <[Field], >=[Field], <=[Field], Contains, Does Not Contain, In, Not In, In Group, Not In Group, Was Ever`\n**Macros**: **@me** valid for all Identity fields.\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up a Git Branch After Merging\nDESCRIPTION: A sequence of Git commands to clean up a local feature branch after it has been merged. This includes switching to the main branch, pulling the latest changes, and deleting the local feature branch that is no longer needed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/code-with-git.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout main\ngit pull origin main\ngit branch -d users/jamal/feature1\n```\n\n----------------------------------------\n\nTITLE: Opening a Visual Studio Solution from Command Line\nDESCRIPTION: Command to open a Visual Studio solution file from the command line. This is not a Git command but a way to open the solution after cloning a repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/clone.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nstart <solution filepath>\n```\n\n----------------------------------------\n\nTITLE: Field Customization Limits\nDESCRIPTION: Defines the maximum limits for custom fields in Azure DevOps work item types and processes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/inheritance-process-model.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n*   A maximum of 64 fields can be defined for each WIT\n*   A maximum of 512 fields can be defined per process\n```\n\n----------------------------------------\n\nTITLE: Installing Python Requirements from requirements.txt in Azure Pipelines YAML\nDESCRIPTION: Installs all dependencies specified in requirements.txt. Typically follows a tool-upgrade step. Assumes the requirements.txt file exists in the repo. Uses pip; no extra parameters required. The 'displayName' adds clarity to pipeline logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- script: pip install -r requirements.txt\\n  displayName: 'Install requirements'\n```\n\n----------------------------------------\n\nTITLE: Configuring Headers for Azure Function / REST API Check\nDESCRIPTION: JSON snippet showing the recommended minimum pipeline run information to send to the check via headers. This includes collection URI, project ID, host type, plan ID, job ID, task instance ID, and access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/invoke-checks.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"PlanUrl\": \"$(system.CollectionUri)\",\n  \"ProjectId\": \"$(system.TeamProjectId)\",\n  \"HubName\": \"$(system.HostType)\",\n  \"PlanId\": \"$(system.PlanId)\",\n  \"JobId\": \"$(system.JobId)\",\n  \"TaskInstanceId\": \"$(system.TaskInstanceId)\",\n  \"AuthToken\": \"$(system.AccessToken)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Selecting Mono Version on macOS Agent\nDESCRIPTION: This bash script enables manual selection of a specific Mono version on the Hosted macOS agent pool. It sets environment variables to configure the desired Mono version for use in subsequent build tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/hosted.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nSYMLINK=<symlink>\nMONOPREFIX=/Library/Frameworks/Mono.framework/Versions/$SYMLINK\necho \"##vso[task.setvariable variable=DYLD_FALLBACK_LIBRARY_PATH;]$MONOPREFIX/lib:/lib:/usr/lib:$DYLD_LIBRARY_FALLBACK_PATH\"\necho \"##vso[task.setvariable variable=PKG_CONFIG_PATH;]$MONOPREFIX/lib/pkgconfig:$MONOPREFIX/share/pkgconfig:$PKG_CONFIG_PATH\"\necho \"##vso[task.setvariable variable=PATH;]$MONOPREFIX/bin:$PATH\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Port Mapping for Service Containers in Azure Pipelines\nDESCRIPTION: YAML snippet demonstrating how to specify port mappings for service containers. This example shows different port mapping formats including host-to-container mapping and container-only mapping with protocol specification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/service-containers.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: my_service\n    image: my_service:latest\n    ports:\n    - 8080:80\n    - 5432\n\nservices:\n  redis:\n    image: redis\n    ports:\n    - 6379/tcp\n```\n\n----------------------------------------\n\nTITLE: Finding PowerShell Modules in a Repository\nDESCRIPTION: Command to search for a PowerShell module in a registered repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_13\n\nLANGUAGE: powershell\nCODE:\n```\nFind-PSResource -Name <RESOURCE_NAME> -Repository <REPOSITORY_NAME> -verbose\n```\n\n----------------------------------------\n\nTITLE: Using kompose with KubernetesManifest Task in Azure Pipelines\nDESCRIPTION: This snippet shows how to use kompose as a bake option in the KubernetesManifest task to transform Docker Compose files into Kubernetes resources, which are then deployed using a second KubernetesManifest task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-155-update.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from Helm chart\n  inputs:\n    action: bake\n    renderType: kompose\n    dockerComposeFile: docker-compose.yaml\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: k8sSC1\n    manifests: $(bake.manifestsBundle)\n```\n\n----------------------------------------\n\nTITLE: Adding Build Tag using Azure DevOps CLI\nDESCRIPTION: This Azure CLI command adds a build tag named 'prod' to a specific build in an Azure DevOps project. It requires the build ID, organization, and project name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/build-tag.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines build tag add --build-id 1234\n                           --tags prod\n                           --org https://dev.azure.com/Contoso/\n                           --project contoso\n```\n\n----------------------------------------\n\nTITLE: Showing Variable Group Details with Azure DevOps CLI\nDESCRIPTION: Command to display detailed information about a specific variable group including all its variables and their values in YAML format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group show --group-id 4 --output yaml\n```\n\n----------------------------------------\n\nTITLE: Push NuGet Packages to Azure Artifacts Feed\nDESCRIPTION: Command to publish all NuGet packages to the configured Azure Artifacts feed. The ApiKey parameter can be set to any string value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/move-from-fileshares.md#2025-04-22_snippet_2\n\nLANGUAGE: Command\nCODE:\n```\nnuget.exe push -Source <FEED_NAME> -ApiKey Az <PACKAGE_PATH>\\*.nupkg\n```\n\n----------------------------------------\n\nTITLE: Using Expressions for Step Conditions in Azure Pipelines YAML\nDESCRIPTION: Example showing how expressions can be used to define conditions for a pipeline step. The condition expression determines whether the task will run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Expressions are used to define conditions for a step, job, or stage\nsteps:\n- task: ...\n  condition: <expression>\n```\n\n----------------------------------------\n\nTITLE: Publishing Test Results in Azure Pipelines\nDESCRIPTION: Uses the PublishTestResults task to publish JUnit-formatted test results to Azure DevOps. This allows test results to appear in the build summary.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\n- task: PublishTestResults@2\n  condition: succeededOrFailed()\n  inputs:\n    testRunner: JUnit\n    testResultsFiles: '**/test-results.xml'\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group and Container Registry using Azure CLI\nDESCRIPTION: These Azure CLI commands, intended to be run in Azure Cloud Shell (Bash), create an Azure resource group named 'myapp-rg' in the 'eastus' region and a basic SKU Azure Container Registry named 'mycontainerregistry' within that group. These resources are prerequisites for the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/acr-template.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myapp-rg --location eastus\naz acr create --resource-group myapp-rg --name mycontainerregistry --sku Basic\n```\n\n----------------------------------------\n\nTITLE: Running npm test in Azure Pipelines\nDESCRIPTION: Invokes the test script defined in the project's package.json file to run JavaScript tests.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\n- script: npm test\n```\n\n----------------------------------------\n\nTITLE: Generating Random Suffix for Resource Names in Bash\nDESCRIPTION: This Bash command generates a pseudo-random integer and assigns it to the environment variable 'resourceSuffix'. This variable is then used to help create unique names for Azure resources within the tutorial.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/nodejs-tutorial.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nresourceSuffix=$RANDOM\n```\n\n----------------------------------------\n\nTITLE: Example Pipeline Variable Deletion\nDESCRIPTION: Example demonstrating how to delete a pipeline variable named 'Configuration' without confirmation prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable delete --name Configuration --pipeline-id 12 --yes\n```\n\n----------------------------------------\n\nTITLE: Creating Development and Staging App Service Instances with Azure CLI\nDESCRIPTION: Azure CLI commands to create two .NET 6.0 App Service instances for development and staging environments using the previously created App Service plan.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_4\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz webapp create \\\n  --name tailspin-space-game-web-dev-$webappsuffix \\\n  --resource-group tailspin-space-game-rg \\\n  --plan tailspin-space-game-asp \\\n  --runtime \"DOTNET|6.0\"\n\naz webapp create \\\n  --name tailspin-space-game-web-staging-$webappsuffix \\\n  --resource-group tailspin-space-game-rg \\\n  --plan tailspin-space-game-asp \\\n  --runtime \"DOTNET|6.0\"\n```\n\n----------------------------------------\n\nTITLE: Converting Azure RM Service Connections to Workload Identity Federation\nDESCRIPTION: PowerShell script to convert multiple Azure Resource Manager service connections to use workload identity federation for authentication. Requires PowerShell 7.3+ and Azure CLI. Takes organization URL and project name as parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/connect-to-azure.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n#!/usr/bin/env pwsh\n<# \n.SYNOPSIS \n    Convert multiple Azure Resource Manager service connection(s) to use Workload identity federation\n\n.LINK\n    https://aka.ms/azdo-rm-workload-identity-conversion\n\n.EXAMPLE\n    ./convert_azurerm_service_connection_to_oidc_simple.ps1 -Project <project> -OrganizationUrl https://dev.azure.com/<organization>\n#> \n\n#Requires -Version 7.3\n\nparam ( \n    [parameter(Mandatory=$true,HelpMessage=\"Name of the Azure DevOps Project\")]\n    [string]\n    [ValidateNotNullOrEmpty()]\n    $Project,\n\n    [parameter(Mandatory=$true,HelpMessage=\"Url of the Azure DevOps Organization\")]\n    [uri]\n    [ValidateNotNullOrEmpty()]\n    $OrganizationUrl\n) \n$apiVersion = \"7.1\"\n$PSNativeCommandArgumentPassing = \"Standard\" \n\n#-----------------------------------------------------------\n# Log in to Azure\n$azdoResource = \"499b84ac-1321-427f-aa17-267ca6975798\" # application id of Azure DevOps \naz login --allow-no-subscriptions --scope ${azdoResource}/.default\n$OrganizationUrl = $OrganizationUrl.ToString().Trim('/')\n```\n\n----------------------------------------\n\nTITLE: Specifying Pools at Stage and Job Levels in Azure Pipelines\nDESCRIPTION: Example showing how to define agent pools at both stage and job levels. Jobs inherit the pool from their stage unless explicitly overridden at the job level.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  pool: StageAPool\n  jobs:\n  - job: A1 # will run on \"StageAPool\" pool based on the pool defined on the stage\n  - job: A2 # will run on \"JobPool\" pool\n    pool: JobPool\n```\n\n----------------------------------------\n\nTITLE: Accessing Output Variables from Previous Jobs in Bash\nDESCRIPTION: Sets an output variable in job A and accesses it in job B using the dependencies syntax. This demonstrates how to pass variables between jobs in a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - bash: |\n     echo \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is from job A\"\n    name: passOutput\n- job: B\n  dependsOn: A\n  variables:\n    myVarFromJobA: $[ dependencies.A.outputs['passOutput.myOutputVar'] ]  \n  steps:\n  - bash: |\n     echo $(myVarFromJobA)\n```\n\n----------------------------------------\n\nTITLE: Copying Android App Bundle Artifacts in YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to use the CopyFiles@2 task to copy Android app bundle (AAB) files from the build output directory to a drop folder. This prepares the artifacts for publishing or further processing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/android.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n- task: CopyFiles@2\n  displayName: 'Copy deliverables'\n  inputs:\n    SourceFolder: '$(Build.SourcesDirectory)/myAndroidApp/bin/$(buildConfiguration)'\n    Contents: '*.aab'\n    TargetFolder: 'drop'\n```\n\n----------------------------------------\n\nTITLE: Scheduled Trigger for Multiple Branches in Azure Pipelines\nDESCRIPTION: YAML configuration for a daily scheduled trigger that runs at midnight UTC for both main and new-feature branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# YAML file in the new-feature-branch\nschedules:\n- cron: '0 0 * * *'\n  displayName: Daily midnight build\n  branches:\n    include:\n    - main\n    - new-feature\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines YAML for Deploying to Azure Stack Hub App Service\nDESCRIPTION: YAML configuration for an Azure Pipeline that deploys an application to Azure Stack Hub App Service. It includes a variable to ignore SSL errors and uses the AzureWebApp task for deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-stack.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n# Starter pipeline\n# Start with a minimal pipeline that you can customize to build and deploy your code.\n# Add steps that build, run tests, deploy, and more:\n# https://aka.ms/yaml\ntrigger:\n- main\nvariables:\n  azureSubscription: '<your connection name>'\n  VSTS_ARM_REST_IGNORE_SSL_ERRORS: true\nsteps:\n- task: AzureWebApp@1\n  displayName: Azure Web App Deploy\n  inputs:\n    azureSubscription: $(azureSubscription)\n    appName: <your-app-name>\n    package: '$(System.DefaultWorkingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Defining a Container Resource in Azure DevOps\nDESCRIPTION: Shows how to define a container resource that references a Docker image. This configuration allows using container images from Docker registries in your pipeline jobs or container jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nresources:         \n  containers:\n  - container: smartHotel \n    endpoint: myDockerRegistry\n    image: smartHotelApp \n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in Bash Task\nDESCRIPTION: Example showing how to set environment variables in a Bash task using both the script shortcut syntax and the equivalent task syntax. Demonstrates using an environment variable in a shell script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Bash@3\n  inputs:\n     targetType: # specific to each task\n  env:\n    ENV_VARIABLE_NAME: value\n    ENV_VARIABLE_NAME2: value\n  ...\n```\n\n----------------------------------------\n\nTITLE: Creating an Extends Template in Azure Pipelines\nDESCRIPTION: An example of a template file that can be extended by pipelines. This template defines a parameter for user steps and adds those steps to the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nparameters:\n- name: usersteps\n  type: stepList\n  default: []\nsteps:\n- ${{ each step in parameters.usersteps }}:\n  - ${{ step }}\n```\n\n----------------------------------------\n\nTITLE: Initializing Git Repository via Command Line\nDESCRIPTION: Commands to initialize a new Git repository, add all files, make the first commit, and rename the default branch to main. Used for creating a local Git repo in an existing Visual Studio solution folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/creatingrepo.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n> git init\n> git add .\n> git commit -m \"first commit\"\n> git branch -m main\n```\n\n----------------------------------------\n\nTITLE: Filtering User Stories or Bugs in Azure Boards Query\nDESCRIPTION: This query clause filters work items to include only those of type 'User Story' or 'Bug'. It uses the 'In' operator to specify multiple allowed work item types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-numeric.md#2025-04-22_snippet_0\n\nLANGUAGE: azure-boards-query\nCODE:\n```\nWork Item Type In User Story,Bug\n```\n\n----------------------------------------\n\nTITLE: Specifying a Linux Agent Pool in Azure Pipelines YAML\nDESCRIPTION: This snippet configures the pipeline to run jobs on a Microsoft-hosted agent using the latest Ubuntu image. The `pool.vmImage` property specifies the virtual machine image for the agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: \"ubuntu-latest\"\n```\n\n----------------------------------------\n\nTITLE: Creating New Work Item Type Definition in XML\nDESCRIPTION: Example showing how to define a new work item type called 'LSI' with a custom reference name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<WORKITEMTYPE name=\"LSI\" refname=\"My.LSI\">\n```\n\n----------------------------------------\n\nTITLE: Complete build.gradle Configuration for Older Gradle Versions\nDESCRIPTION: Full example of a build.gradle file for older Gradle versions configured for both consuming and publishing artifacts to an Azure DevOps feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/publish-with-gradle.md#2025-04-22_snippet_6\n\nLANGUAGE: groovy\nCODE:\n```\npublishing { \n    publications {\n        library(MavenPublication) {\n            from components.java\n        }\n    }\n\n    // Repositories to publish artifacts \n    repositories { \n        maven {\n            url 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1'                //for organization-scoped feeds use this format: 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/maven/v1'\n            name '<FEED_NAME>'\n            authentication {\n                basic(BasicAuthentication)\n            }\n        }\n    } \n} \n    \n// Repositories to fetch dependencies\nrepositories { \n        maven {\n            url 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1'                //for organization-scoped feeds use this format: 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/maven/v1'\n            name '<FEED_NAME>'\n            authentication {\n                basic(BasicAuthentication)\n            }\n        }\n} \n```\n\n----------------------------------------\n\nTITLE: Authenticating with PAT using curl on Linux/macOS\nDESCRIPTION: This curl command example demonstrates how to authenticate to Azure DevOps REST APIs using a Personal Access Token on Linux or macOS systems to retrieve a list of builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/personal-access-tokens.md#2025-04-22_snippet_2\n\nLANGUAGE: curl\nCODE:\n```\ncurl -u :{PAT} https://dev.azure.com/{organization}/_apis/build-release/builds\n```\n\n----------------------------------------\n\nTITLE: Adding a Retention Lease via Bash in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet defines an Azure Pipelines task using Bash and curl to add a retention lease to the current pipeline run upon successful completion. It calls the Azure DevOps REST API to create a lease valid for 2 years (730 days). This serves as an alternative to the PowerShell task for achieving the same goal. Requires the System.AccessToken for authorization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/run-retention.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- bash: |\n    curl \\\n      -X POST \\\n      -H 'Authorization: Bearer $(System.AccessToken)' \\\n      -H 'Content-Type: application/json' \\\n      -d '[\n            {\n              \"daysValid\": 730,\n              \"definitionId\": $(System.DefinitionId),\n              \"ownerId\": \"User:$(Build.RequestedForId)\",\n              \"protectPipeline\": false,\n              \"runId\": $(Build.BuildId)\n            }\n          ]' \\\n      \"$(System.CollectionUri)$(System.TeamProject)/_apis/build/retention/leases?api-version=6.0-preview.1\"\n  condition: and(succeeded(), not(canceled()))\n  name: RetainOnSuccess\n  displayName: Retain on Success\n```\n\n----------------------------------------\n\nTITLE: Generate Base64 Encoded Personal Access Token\nDESCRIPTION: Node.js command to generate a base64 encoded personal access token for NPM authentication. Creates an interactive prompt for secure token input.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nnode -e \"require('readline') .createInterface({input:process.stdin,output:process.stdout,historySize:0}) .question('PAT> ',p => { b64=Buffer.from(p.trim()).toString('base64');console.log(b64);process.exit(); })\"\n```\n\n----------------------------------------\n\nTITLE: Constructing Azure DevOps OAuth 2.0 Authorization URL\nDESCRIPTION: This code snippet demonstrates how to construct the authorization URL for Azure DevOps OAuth 2.0. It includes parameters such as client_id, response_type, state, scope, and redirect_uri.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_0\n\nLANGUAGE: no-highlight\nCODE:\n```\nhttps://app.vssps.visualstudio.com/oauth2/authorize\n        ?client_id={app ID}\n        &response_type={Assertion}\n        &state={state}\n        &scope={scope}\n        &redirect_uri={callback URL}\n```\n\n----------------------------------------\n\nTITLE: Listing Banner Details in Azure DevOps using CLI\nDESCRIPTION: This command displays information about a single banner in Azure DevOps. It requires the banner ID as a parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-banners.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops admin banner show --id\n```\n\n----------------------------------------\n\nTITLE: Installing vsts-npm-auth Tool for Windows\nDESCRIPTION: Command to install the vsts-npm-auth tool globally on Windows systems to facilitate authentication with Azure Artifacts feeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/restore-npm-packages.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g vsts-npm-auth --registry https://registry.npmjs.com --always-auth false\n```\n\n----------------------------------------\n\nTITLE: Reading Transformed Secrets in Azure DevOps Pipelines with PowerShell\nDESCRIPTION: Shows how a transformed secret (registered using task.setsecret) is automatically masked when output to the console in a PowerShell task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\n- pwsh: |\n    Write-Host \"Transformed and derived secrets will be masked: $([convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($env:OLDSECRET)))\"\n  env:\n    OLDSECRET: \"SeCrEtVaLuE\"\n```\n\n----------------------------------------\n\nTITLE: Managing Azure DevOps Resources with Bash Script\nDESCRIPTION: This Bash script creates Azure DevOps resources including a project, GitHub service connection, pipeline, and variable group. It then runs the pipeline multiple times, modifying variable values between runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/cli/pipeline-variable-group-secret-nonsecret-variables.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\n# Provide placeholder variables.\ndevopsOrg=\"https://dev.azure.com/<devops-organization>\"\ngithubOrg=\"<github-organization>\"\ngithubRepo=\"<github-repository>\"\npipelineName=\"<pipelinename>\"\nrepoName=\"$githubOrg/$githubRepo\"\nrepoType=\"github\"\nbranch=\"main\"\n\n# Declare other variables.\nuniqueId=$RANDOM\ndevopsProject=\"Contoso DevOps Project $uniqueId\"\nserviceConnectionName=\"Contoso Service Connection $uniqueId\"\n\n# Sign in to Azure CLI and follow the sign-in instructions, if necessary.\necho \"Sign in.\"\naz login\n\n# Sign in to Azure DevOps with your Azure DevOps PAT, if necessary.\necho \"Sign in to Azure DevOps.\"\naz devops login\n\n# Create the Azure DevOps project and set defaults.\nprojectId=$(az devops project create \\\n    --name \"$devopsProject\" --organization \"$devopsOrg\" --visibility private --query id)\nprojectId=${projectId:1:-1}  # Just set to GUID; drop enclosing quotes.\naz devops configure --defaults organization=\"$devopsOrg\" project=\"$devopsProject\"\npipelineRunUrlPrefix=\"$devopsOrg/$projectId/_build/results?buildId=\"\n\n# Create GitHub service connection.\ngithubServiceEndpointId=$(az devops service-endpoint github create \\\n    --name \"$serviceConnectionName\" --github-url \"https://www.github.com/$repoName\" --query id)\ngithubServiceEndpointId=${githubServiceEndpointId:1:-1}  # Just set to GUID; drop enclosing quotes.\n\n# Create the pipeline.\npipelineId=$(az pipelines create \\\n    --name \"$pipelineName\" \\\n    --skip-first-run \\\n    --repository $repoName \\\n    --repository-type $repoType \\\n    --branch $branch \\\n    --service-connection $githubServiceEndpointId \\\n    --yml-path azure-pipelines.yml \\\n    --query id)\n\n# Create a variable group with 2 non-secret variables and 1 secret variable.\n# (contososecret < a < b). Then run the pipeline.\nvariableGroupId=$(az pipelines variable-group create \\\n    --name \"$variableGroupName\" --authorize true --variables a=12 b=29 --query id)\naz pipelines variable-group variable create \\\n    --group-id $variableGroupId --name contososecret --secret true --value 17\npipelineRunId1=$(az pipelines run --id $pipelineId --open --query id)\necho \"Go to the pipeline run's web page to view the output results of the 'Test variable group variables' job for the 1st run.\"\necho \"If the web page doesn't automatically appear, go to:\"\necho \"    ${pipelineRunUrlPrefix}${pipelineRunId1}\"\nread -p \"Press Enter to change the value of one of the variable group's nonsecret variables, then run again:\"\n\n# Change the value of one of the variable group's nonsecret variables.\naz pipelines variable-group variable update \\\n    --group-id $variableGroupId --name a --value 22\npipelineRunId2=$(az pipelines run --id $pipelineId --open --query id)\necho \"Go to the pipeline run's web page to view the output results of the 'Test variable group variables' job for the 2nd run.\"\necho \"If the web page doesn't automatically appear, go to:\"\necho \"    ${pipelineRunUrlPrefix}${pipelineRunId2}\"\nread -p \"Press Enter to change the value of the variable group's secret variable, then run once more:\"\n\n# Change the value of the variable group's secret variable.\naz pipelines variable-group variable update \\\n    --group-id $variableGroupId --name contososecret --value 35\npipelineRunId3=$(az pipelines run --id $pipelineId --open --query id)\necho \"Go to the pipeline run's web page to view the output results of the 'Test variable group variables' job for the 3rd run.\"\necho \"If the web page doesn't automatically appear, go to:\"\necho \"    ${pipelineRunUrlPrefix}${pipelineRunId3}\"\nread -p \"Press Enter to continue:\"\n```\n\n----------------------------------------\n\nTITLE: Rename Field Command\nDESCRIPTION: Renames a work item field's friendly name using witadmin changefield command\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_4\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin changefield /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:Microsoft.VSTS.Common.Rank /name:\"Important Rank\"\n```\n\n----------------------------------------\n\nTITLE: Using Domain Name for Groups in XML Process\nDESCRIPTION: Example of referencing a domain user or group using a domain-qualified account name in a list item value. This example shows how to specify a group like 'Christie Church's Direct Reports'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_18\n\nLANGUAGE: xml\nCODE:\n```\n<LISTITEM value=\"FABRIKAM\\Christie Church's Direct Reports\"/>\n```\n\n----------------------------------------\n\nTITLE: Witadmin Commands for Exporting and Importing Process Definitions\nDESCRIPTION: Complete set of witadmin commands for exporting and importing work item types, categories, and process configuration files, essential for customizing the process template in on-premises TFS.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-portfolio-backlogs.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nwitadmin exportwitd /collection:CollectionURL /p:\"ProjectName\" /n:TypeName /f:\"DirectoryPath\\WITDefinitionFile.xml\"\n\nwitadmin importwitd /collection:CollectionURL /p:\"ProjectName\" /f:\"DirectoryPath\\WITDefinitionFile.xml\"\n\nwitadmin exportcategories /collection:\"CollectionURL\" /p:\"ProjectName\" /f:\"DirectoryPath/categories.xml\"\n\nwitadmin importcategories /collection:\"CollectionURL\" /p:\"ProjectName\" /f:\"DirectoryPath/categories.xml\"\n\nwitadmin exportprocessconfig /collection:\"CollectionURL\" /p:\"ProjectName\" /f:\"DirectoryPath/ProcessConfiguration.xml\"\n\nwitadmin importprocessconfig /collection:\"CollectionURL\" /p:\"ProjectName\" /f:\"DirectoryPath/ProcessConfiguration.xml\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipelines Agent on Windows\nDESCRIPTION: Run the configuration script to set up the Azure Pipelines agent, which will prompt for various configuration options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/windows-agent.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\config.cmd\n```\n\n----------------------------------------\n\nTITLE: Setting Default Configuration Parameters in Azure DevOps CLI\nDESCRIPTION: Example commands showing how to configure default organization and project settings, and then override them with command parameters when listing repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/auto-detect-and-git-aliases.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n~/$ az devops configure --defaults organization=https://dev.azure.com/contoso project=webApp\n~/$ az repos list --organization=https://dev.azure.com/contosoTest --project=testApplication\n```\n\n----------------------------------------\n\nTITLE: Template Expressions in Container Resource Definition\nDESCRIPTION: YAML pipeline demonstrating how to use parameters to dynamically specify container resource properties like the service connection endpoint. This allows for flexible container configuration at queue time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-212-update.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n  - name: endpointName    \n    default: AzDOACR\n    type: string\n\nresources:\n  containers:\n    - container: linux\n      endpoint: ${{ parameters.endpointName }}\n      image: fabrikamfiber.azurecr.io/ubuntu:latest\n\njobs:\n- job:\n  container: linux\n  steps:\n  - task: CmdLine@2\n    inputs:\n      script: 'echo Hello world'\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group using Azure CLI\nDESCRIPTION: This Azure CLI command creates a new Azure Resource Group using the name stored in the '$rgName' environment variable. Resource groups act as containers for Azure resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/nodejs-tutorial.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name $rgName\n```\n\n----------------------------------------\n\nTITLE: Configuring Stage Filters for Pipeline Triggers in Azure DevOps\nDESCRIPTION: YAML configuration showing how to trigger a pipeline when specific stages of a source pipeline complete, rather than waiting for the entire pipeline to complete.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/pipeline-triggers.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: MyCIAlias  \n    source: Farbrikam-CI  \n    trigger:    \n      stages:         # This stage filter is used when evaluating conditions for \n      - PreProduction # triggering your pipeline. On successful completion of all the stages\n      - Production    # provided, your pipeline will be triggered. \n```\n\n----------------------------------------\n\nTITLE: Adding Files to Git Repository\nDESCRIPTION: A Git command to stage all files in the current directory for commit. This adds all the downloaded sample files to the Git index before committing them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-repo-intellij.md#2025-04-22_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\ngit add --all\n```\n\n----------------------------------------\n\nTITLE: Resolving 'VS1530019' Error in Azure DevOps CLI Team Iteration Addition (Azure CLI)\nDESCRIPTION: Explains how to fix the `VS1530019` error encountered when attempting to add a backlog iteration to a team using Azure DevOps CLI. The root cause is that only child iterations of a backlog iteration can be added. The solution involves first creating a child iteration using `az boards iteration project create --name \"child_iteration_name\" --path <BacklogIterationPath>`, obtaining its ID, and then adding it to the team using the `az boards iteration team add` command (use `-h` for help).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/troubleshooting.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nVS1530019: Cannot find iteration with id 'b1e33737-e943-xxxx-xxxx-e3f1cbaxxxx'. The iteration might have been deleted, or it might not be selected for your team.\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration project create --name \"child_iteration_name\" --path <BacklogIterationPath>\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration team add -h\n```\n\n----------------------------------------\n\nTITLE: Generating App Token in JavaScript\nDESCRIPTION: Code to generate a signed token using the extension's certificate for service authentication. Uses the azure-devops-extension-sdk package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/auth.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as SDK from \"azure-devops-extension-sdk\";\nimport { getAppToken } from \"azure-devops-extension-sdk\";\n\nSDK.init();\n\ngetAppToken().then((token) => {\n// Add token to your request\nconsole.log(token);\n});\n```\n\n----------------------------------------\n\nTITLE: Running Linux Agent in Single-Job Mode\nDESCRIPTION: Command to run the Azure Pipelines Linux agent in a mode where it accepts only one job and then shuts down. This is useful for containerized environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh --once\n```\n\n----------------------------------------\n\nTITLE: Example: Listing and Deleting an Azure Pipeline with Azure CLI\nDESCRIPTION: Demonstrates a practical example of using Azure CLI to manage pipelines. First, it lists pipelines in a table format using `az pipelines list --output table`. Then, it deletes a specific pipeline (with ID 6 in this case) using `az pipelines delete --id 6`, showing the confirmation prompt unless `--yes` is used. Assumes default organization and project are configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/create-first-pipeline-next-steps.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n```azurecli\naz pipelines list --output table\n\nID    Path    Name           Status    Default Queue\n----  ------  -------------  --------  ------------------\n6     \\       FabrikamFiber  enabled   Hosted Ubuntu 1604\n\naz pipelines delete --id 6\n\nAre you sure you want to delete this pipeline? (y/n): y\nPipeline 6 was deleted successfully.\n```\n```\n\n----------------------------------------\n\nTITLE: Setting Progress Indicator in PowerShell\nDESCRIPTION: Shows how to use the task.setprogress command to display progress percentage in a PowerShell script during a lengthy process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\nWrite-Host \"Begin a lengthy process...\"\n$i=0\nWhile ($i -le 100)\n{\n   Start-Sleep 1\n   Write-Host \"##vso[task.setprogress value=$i;]Sample Progress Indicator\"\n   $i += 10\n}\nWrite-Host \"Lengthy process is complete.\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Code Coverage Settings in YAML\nDESCRIPTION: Example YAML configuration for code coverage settings in Azure Pipelines. This snippet demonstrates how to set the coverage status, comments, and diff coverage target threshold.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/codecoverage-for-pullrequests.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\ncoverage:\n  status:           # Code coverage status will be posted to pull requests based on targets defined below.\n    comments: on    # Off by default. When on, details about coverage for each file changed will be posted as a pull request comment. \n    diff:           # Diff coverage is code coverage only for the lines changed in a pull request.\n      target: 60%   # Set this to a desired percentage. Default is 70 percent\n```\n\n----------------------------------------\n\nTITLE: Git Command to Update Remote URL from HTTPS to SSH\nDESCRIPTION: Git command to update the remote URL from HTTPS to SSH format, enabling SSH authentication for an existing repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ngit remote set-url origin <SSH URL to your repository>\n```\n\n----------------------------------------\n\nTITLE: Disabling Variable Setting in Azure Pipelines Step (YAML)\nDESCRIPTION: This YAML snippet shows how to configure an Azure Pipelines step to prevent it from setting any variables via logging commands. The `target.settableVariables: none` directive ensures that any `setVariable` logging command executed within this script step will be ignored. This is a security measure to control potential variable manipulation within a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-184-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: echo hello\n  target:\n    settableVariables: none\n```\n\n----------------------------------------\n\nTITLE: Configuring Agent Size using Azure CLI for Managed DevOps Pools\nDESCRIPTION: This Azure CLI command creates a Managed DevOps Pool with a specified agent size. The VM size is defined in a separate JSON file (fabric-profile.json) which includes the 'sku' property set to Standard_D2ads_v5.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --fabric-profile fabric-profile.json\n   # other parameters omitted for space\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vmss\": {\n    \"sku\": {\n      \"name\": \"Standard_D2ads_v5\"\n    },\n    \"images\": [...],\n    \"osProfile\": {...},\n    \"storageProfile\": {...}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Removing a Specific Banner in Azure DevOps using CLI\nDESCRIPTION: This example demonstrates how to remove a specific banner by providing its ID. No response is returned upon successful execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-banners.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops admin banner remove --id e090e7b0-4499-4b8f-a09b-1eddf7fdeb44\n```\n\n----------------------------------------\n\nTITLE: Example of cross-organization NuGet package publishing\nDESCRIPTION: A complete example showing both the configuration of a package source with credentials and the subsequent publishing of a package to that source. This demonstrates the full workflow for publishing to another organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-exe.md#2025-04-22_snippet_6\n\nLANGUAGE: CLI\nCODE:\n```\ndotnet nuget add source https://pkgs.dev.azure.com/MyOrg/MyProject/_packaging/MyFeed/nuget/v3/index.json --name MySource --username MyUserName --password MyPersonalAccessToken --configfile ./nuget.config\n\ndotnet nuget push --source MySource --api-key AZ nupkgs/mypackage.1.1.0.nupkg\n```\n\n----------------------------------------\n\nTITLE: Power BI Query for User Stories Burndown by Area Path\nDESCRIPTION: Power BI M query that returns historical data of User Stories for a release based on area path and tag filtering. Groups results by date, state and area path, aggregating count and story points.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\"\n        &\"$apply=filter(WorkItemType eq 'User Story' \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and Tags/any(x:x/TagName eq '{tagname}') \"\n            &\"and DateValue ge {startdate} \"\n            &\"and DateValue le {enddate} \"\n        &\") \"\n        &\"/groupby ( \"\n            &\"(DateValue,State,Area/AreaPath), \"\n            &\"aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Rolling Deployment Strategy for VMs\nDESCRIPTION: Configuration for rolling deployment strategy targeting virtual machines with pre-deploy, deploy, route traffic, and post-route traffic steps including success/failure handlers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\njobs: \n- deployment: VMDeploy\n  displayName: web\n  environment:\n    name: smarthotel-dev\n    resourceType: VirtualMachine\n  strategy:\n    rolling:\n      maxParallel: 5\n      preDeploy:\n        steps:\n        - download: current\n          artifact: drop\n        - script: echo initialize, cleanup, backup, install certs\n      deploy:\n        steps:\n        - task: IISWebAppDeploymentOnMachineGroup@0\n          displayName: 'Deploy application to Website'\n          inputs:\n            WebSiteName: 'Default Web Site'\n            Package: '$(Pipeline.Workspace)/drop/**/*.zip'\n      routeTraffic:\n        steps:\n        - script: echo routing traffic\n      postRouteTraffic:\n        steps:\n        - script: echo health check post-route traffic\n      on:\n        failure:\n          steps:\n          - script: echo Restore from backup! This is on failure\n        success:\n          steps:\n          - script: echo Notify! This is on success\n```\n\n----------------------------------------\n\nTITLE: Rollup Story Points to Features from User Stories by Team Name (OData Query)\nDESCRIPTION: OData query that retrieves Features and rolls up Story Points from child User Stories, filtering by Team Name instead of Area Path. This query allows filtering for multiple teams in a single report.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $filter=WorkItemType eq 'Feature'\n        and State ne 'Cut'\n        and (Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}'))\n        and Descendants/any()\n    &$select=WorkItemId,Title,WorkItemType,State,AreaSK\n    &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\n        Descendants(\n        $apply=filter(WorkItemType eq 'User Story')\n        /aggregate($count as CountOfUserStories, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Accessing Pipeline Resource Variables in Azure DevOps\nDESCRIPTION: Demonstrates how to access predefined variables for a pipeline resource named 'myresourcevars'. This snippet shows how to reference pipeline resource metadata including IDs, names, branch information, and requestor details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: myresourcevars\n    source: mypipeline\n    trigger: true \n\nsteps:\n- script: |\n    echo $(resources.pipeline.myresourcevars.pipelineID)\n    echo $(resources.pipeline.myresourcevars.runName)\n    echo $(resources.pipeline.myresourcevars.runID)\n    echo $(resources.pipeline.myresourcevars.runURI)\n    echo $(resources.pipeline.myresourcevars.sourceBranch)\n    echo $(resources.pipeline.myresourcevars.sourceCommit)\n    echo $(resources.pipeline.myresourcevars.sourceProvider)\n    echo $(resources.pipeline.myresourcevars.requestedFor)\n    echo $(resources.pipeline.myresourcevars.requestedForID)\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Tasks for Secret-less Azure Storage Access (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to configure the AzureVmssDeployment@1, JavaToolInstaller@2, and JenkinsDownloadArtifacts@2 tasks to interact with Azure Storage using Azure RBAC for authentication, eliminating the need for storage account keys or SAS tokens. Key parameters include the Azure service connection (`azureSubscription`, `azureResourceManagerEndpoint`, `ConnectedServiceNameARM`) and the target storage account (`customScriptsStorageAccount`, `azureStorageAccountName`, `storageAccountName`). These updated task versions require the service connection's identity to have the 'Storage Blob Data Contributor' RBAC role assigned on the target storage account.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-251-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureVmssDeployment@1\n  inputs:\n    (required properties)\n    azureSubscription: <service connection>\n    customScriptsStorageAccount: <storage account>\n- task: JavaToolInstaller@2\n  inputs:\n    (required properties)\n    jdkSourceOption: 'AzureStorage'\n    azureResourceManagerEndpoint: <service connection>\n    azureStorageAccountName: <storage account>\n- task: JenkinsDownloadArtifacts@2\n  inputs:\n    (required properties)\n    artifactProvider: 'azureStorage'\n    ConnectedServiceNameARM: <service connection>\n    storageAccountName: <storage account>\n```\n\n----------------------------------------\n\nTITLE: Unit Test Suite for Azure DevOps Pipeline Task\nDESCRIPTION: TypeScript code for setting up a Mocha test suite to unit test an Azure DevOps pipeline task. Includes placeholders for success and failure test cases.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_12\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport * as path from 'path';\nimport * as assert from 'assert';\nimport * as ttm from 'azure-pipelines-task-lib/mock-test';\n\ndescribe('Sample task tests', function () {\n\n    before( function() {\n\n    });\n\n    after(() => {\n\n    });\n\n    it('should succeed with simple inputs', function(done: Mocha.Done) {\n        // Add success test here\n    });\n\n    it('it should fail if tool returns 1', function(done: Mocha.Done) {\n        // Add failure test here\n    });    \n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Version for Pipeline Tasks\nDESCRIPTION: Uses the UsePythonVersion task to select the specified Python version for the pipeline. The version is determined by the pythonVersion variable defined earlier in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\n      - task: UsePythonVersion@0\n         inputs:\n           versionSpec: '$(pythonVersion)'\n           displayName: 'Use Python $(pythonVersion)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Organization-scoped NuGet Feed in nuget.config\nDESCRIPTION: XML configuration for connecting to an organization-scoped Azure Artifacts feed with NuGet. This config file should be placed in the same folder as your .csproj or .sln file and includes the package source URL for your organization's feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/upstream-sources.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<SOURCE_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Setting a Variable using Logging Command in Bash\nDESCRIPTION: Demonstrates how to use a logging command to set a variable named 'testvar' with the value 'testvalue' in a Bash script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"##vso[task.setvariable variable=testvar;]testvalue\"\n```\n\n----------------------------------------\n\nTITLE: Querying Burndown for User Stories Across Multiple Sprints in Power BI\nDESCRIPTION: This Power BI query retrieves data for all sprint burndowns since the start of 2022. It filters User Stories by area path and aggregates story points for tracking completion across multiple iterations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-sprintburndown.md#2025-04-22_snippet_4\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \"\n        &\"$apply=filter( \"\n            &\"WorkItemType eq 'User Story' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and DateValue ge Iteration/StartDate \"\n            &\"and DateValue le Iteration/EndDate \"\n            &\"and Iteration/StartDate ge 2022-01-01Z \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(DateValue,Iteration/EndDate,Area/AreaPath,Iteration/IterationPath,State,WorkItemType,Priority,AreaSK), \"\n            &\"aggregate($count as Count, StoryPoints with sum as TotalStoryPoints) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Conditionally Adding Retention Lease for Specific Branches via PowerShell\nDESCRIPTION: This YAML snippet defines an Azure Pipelines PowerShell task that adds a 2-year retention lease, but only if the pipeline run succeeds and the source branch name starts with 'releases/'. It modifies the condition of the previous PowerShell example to include `startsWith(variables['Build.SourceBranch'], 'releases/')`. Requires the System.AccessToken.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/run-retention.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PowerShell@2\n  condition: and(succeeded(), not(canceled()), startsWith(variables['Build.SourceBranch'], 'releases/'))\n  name: RetainReleaseBuildOnSuccess\n  displayName: Retain Release Build on Success\n  inputs:\n    failOnStderr: true\n    targetType: 'inline'\n    script: |\n      $contentType = \"application/json\";\n      $headers = @{ Authorization = 'Bearer $(System.AccessToken)' };\n      $rawRequest = @{ daysValid = 365 * 2; definitionId = $(System.DefinitionId); ownerId = 'User:$(Build.RequestedForId)'; protectPipeline = $false; runId = $(Build.BuildId) };\n      $request = ConvertTo-Json @($rawRequest);\n      $uri = \"$(System.CollectionUri)$(System.TeamProject)/_apis/build/retention/leases?api-version=6.0-preview.1\";\n      Invoke-RestMethod -uri $uri -method POST -Headers $headers -ContentType $contentType -Body $request;\n```\n\n----------------------------------------\n\nTITLE: Generating RSA SSH Keys with SHA-512 in PowerShell/Bash\nDESCRIPTION: Command to generate RSA SSH keys with SHA-512 encryption for authentication with Azure DevOps. This creates a stronger encryption for the SSH key pair.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nssh-keygen -t rsa-sha2-512\n```\n\n----------------------------------------\n\nTITLE: Using Copy Files Task in YAML Pipeline to Preserve Build Data\nDESCRIPTION: YAML pipeline snippet that demonstrates how to use the Copy Files task to save build and artifact data beyond standard retention policies. This approach stores data in a network path that won't be affected by Azure DevOps cleanup processes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/policies/retention.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: CopyFiles@2\n  displayName: 'Copy Files to: \\\\mypath\\storage\\$(Build.BuildNumber)'\n  inputs:\n    SourceFolder: '$(Build.SourcesDirectory)'\n    Contents: '_buildOutput/**'\n    TargetFolder: '\\\\mypath\\storage\\$(Build.BuildNumber)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Flaky Test Detection in Azure DevOps\nDESCRIPTION: This snippet shows how to set up custom flaky test detection in Azure DevOps. It includes a note about updating test results metadata for flaky tests using the REST API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/flaky-test-management.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Screenshot of Test Management, Flaky test detection enabled, Custom detection.](media/flaky-test-management/custom-detection.png)\n```\n\n----------------------------------------\n\nTITLE: Extension Manifest Configuration in JSON\nDESCRIPTION: Example of configuring the extension manifest file (vss-extension.json) with publisher ID settings\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/overview.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"...\": \"\",\n    \"id\": \"my-first-extension\",\n    \"publisher\": \"AnnetteNielsen\",\n    \"...\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Output Variables Between Jobs in YAML\nDESCRIPTION: Example showing how to set an output variable in one job and use it in a subsequent job. This pattern allows for data to be passed between jobs in a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\n- job: A\n  steps:\n  - powershell: echo \"##vso[task.setvariable variable=a;isOutput=true]10\"\n    name: a_step\n\n# Map the variable into job B\n- job: B\n  dependsOn: A\n  variables:\n    some_variable: $[ dependencies.A.outputs['a_step.a'] ]\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Mode with System.Debug Variable in Azure DevOps Release Pipelines\nDESCRIPTION: Sets the System.Debug variable to 'true' to enable debug mode for releases in Azure DevOps. This can be applied at the entire release level, for a specific stage, or through a variable group. Debug mode displays additional information during execution to help diagnose issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/variables.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nSystem.Debug: true\n```\n\n----------------------------------------\n\nTITLE: Installing P12 Certificate in macOS Keychain - Shell\nDESCRIPTION: This shell command installs a P12 certificate into the default macOS keychain, enabling code signing for build agents. Dependencies include a valid .p12 certificate file, its password, and administrative privileges. <certificate.p12> should be replaced with the file path and <password> with the decryption password. This command prompts the system to import the certificate, making it available for use in subsequent builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/mobile/app-signing.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo security import <certificate.p12> -P <password>\n```\n\n----------------------------------------\n\nTITLE: Configuring macOS 11 Agent in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet illustrates how to specify the generally available `macos-11` VM image for jobs running on Microsoft-hosted agents in Azure Pipelines. Setting `vmImage` to `macos-11` in the `pool` section ensures the pipeline jobs execute on an agent running macOS 11.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-192-update.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: macos-11\n```\n\n----------------------------------------\n\nTITLE: Exporting PAT Environment Variable for Azure DevOps CLI (macOS/Linux) - Bash\nDESCRIPTION: Uses the Bash 'export' command to set 'AZURE_DEVOPS_EXT_PAT' for the current shell session, enabling automated sign-in for Azure DevOps CLI on macOS or Linux. Requires only a Unix shell and Azure CLI with the DevOps extension installed. Replace 'xxxxxxxxxx' with the valid PAT. This approach is designed for non-interactive, process-level authentication in shell scripts or CI jobs without prompting the user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/log-in-via-pat.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport AZURE_DEVOPS_EXT_PAT=xxxxxxxxxx\n```\n\n----------------------------------------\n\nTITLE: Example of Creating Merge Strategy Policy to Allow Only Squash Merge\nDESCRIPTION: This example creates a blocking merge strategy policy for the main branch of the Fabrikam repository that only allows squash merge. It uses the default organization and project configuration to simplify the command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy merge-strategy create --allow-squash true --blocking true --branch main --enabled true --repository-id d28cd374-e7f0-4b1f-ad60-f349f155d47c --output table\n```\n\n----------------------------------------\n\nTITLE: Using tf merges Command in TFVC (Batch)\nDESCRIPTION: Demonstrates the basic syntax and usage of the tf merges command to display merge history between branches in Team Foundation Version Control. It includes various options for formatting output and filtering results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merges-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Batch\nCODE:\n```\ntf merges [source] destination [/recursive] [/extended] [/format:(brief|detailed)] [/login:username, [password]] [/showall]]] [/collection:TeamProjectCollectionUrl]\n```\n\n----------------------------------------\n\nTITLE: Upgrading Azure CLI on Hosted Agents (PowerShell)\nDESCRIPTION: This YAML snippet shows how to upgrade Azure CLI to the latest version on a hosted agent using pip with PowerShell. It first specifies the Python version to use via the UsePythonVersion task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n# Specify python version\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '3.x'\n    architecture: 'x64'\n\n# Update to latest Azure CLI version\n- pwsh: pip install --pre azure-cli\n  displayName: 'Upgrade Azure CLI'\n```\n\n----------------------------------------\n\nTITLE: Implementing the runOnce Deployment Strategy in Azure Pipelines (YAML)\nDESCRIPTION: This YAML configuration demonstrates the `runOnce` deployment strategy within an Azure Pipelines deployment job. The `runOnce` strategy executes the `deploy` steps (here, a simple echo command) once on all targeted VMs simultaneously after the `preDeploy` hook (if defined) and before `routeTraffic` and `postRouteTraffic` hooks. Placeholders `<environment name>` and `<VM tag>` identify the target environment and specific virtual machines, which must be pre-configured in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/deploy-linux-vm.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment: VMDeploy\n  displayName: Web deploy\n  environment:\n    name: <environment name>\n    resourceType: VirtualMachine\n    tags: <VM tag>\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - script: echo my first deployment\n```\n\n----------------------------------------\n\nTITLE: Python Version Configuration Task\nDESCRIPTION: Uses the UsePythonVersion task to specify the Python version for the deployment agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\n    - task: UsePythonVersion@0\n      inputs:\n        versionSpec: '$(pythonVersion)'\n      displayName: 'Use Python version'\n```\n\n----------------------------------------\n\nTITLE: Create Azure Repos Git Repository\nDESCRIPTION: Creates a new Git repository in Azure Repos using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-cmdline.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz repos create --name FabrikamApp\n```\n\n----------------------------------------\n\nTITLE: Example Service Principal JSON Response\nDESCRIPTION: Sample JSON output after creating a service principal. Contains important authentication details including the appId, password, and tenant that are needed for the Azure DevOps service connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-in-own-project.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"appId\": \"00001111-aaaa-2222-bbbb-3333cccc4444\",\n  \"displayName\": \"MyServicePrincipal\",\n  \"password\": \"***********************************\",\n  \"tenant\": \"aaaabbbb-0000-cccc-1111-dddd2222eeee\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Public Feed in Cargo Config with Force Authentication\nDESCRIPTION: TOML configuration to add to .cargo/config.toml for users with elevated permissions (Feed/Upstream Readers, Publishers, Owners). Includes the force-auth flag for proper authentication with the feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[registries]\n<FEED_NAME> = { index = \"sparse+https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>~force-auth/Cargo/index/\" }\n\n[source.crates-io]\nreplace-with = \"<FEED_NAME>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch-Specific Builds in Travis CI (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to configure Travis CI to build only the main branch and branches starting with 'releases'. It uses the 'branches' key with 'only' to specify the inclusion list.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nbranches:\n  only:\n  - main\n  - /^releases.*/\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven POM for Azure DevOps Cloud\nDESCRIPTION: XML configuration for pom.xml file to connect to Azure Artifacts feed in cloud-hosted Azure DevOps. Includes repository and distribution management settings with placeholders for organization, project and feed names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/pom-and-settings.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<repositories>\n  <repository>\n    <id>MavenDemo</id>\n    <url>https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1</url>\n    <releases>\n      <enabled>true</enabled>\n    </releases>\n    <snapshots>\n      <enabled>true</enabled>\n    </snapshots>\n  </repository>\n</repositories>\n<distributionManagement>\n  <repository>\n    <id>MavenDemo</id>\n    <url>https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1</url>\n    <releases>\n      <enabled>true</enabled>\n    </releases>\n    <snapshots>\n      <enabled>true</enabled>\n    </snapshots>\n  </repository>\n</distributionManagement>\n```\n\n----------------------------------------\n\nTITLE: Command Line Maven Install Script (Classic Pipeline)\nDESCRIPTION: Shell command used in a Command Line task for a Classic pipeline to restore Maven packages. This should be added after configuring a Maven Authenticate task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/packages/maven-restore.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Custom Script for Fetching Submodules with Different Credentials\nDESCRIPTION: Script to fetch Git submodules when different credentials are needed compared to the main repository. This approach uses a personal access token encoded in a Basic authentication header.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_6\n\nLANGUAGE: Bash\nCODE:\n```\ngit -c http.https://<url of submodule repository>.extraheader=\"AUTHORIZATION: basic <BASE64_ENCODED_TOKEN_DESCRIBED_ABOVE>\" submodule update --init --recursive\n```\n\n----------------------------------------\n\nTITLE: Restricting Workflow States for User Stories in XML Process\nDESCRIPTION: This XML snippet defines a custom rule that restricts the Fabrikam Review Team from modifying user stories by disallowing all workflow states for the user story work item type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-samples.md#2025-04-22_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n<WORKFLOW>\n... \n <STATE value=\"New\">  \n   not=\"[Project]\\Fabrikam Review Team\"  \n</STATE>  \n<STATE value=\"Active\">  \n   not=\"[Project]\\Fabrikam Review Team\"  \n</STATE>  \n<STATE value=\"Resolved\">  \n   not=\"[Project]\\Fabrikam Review Team\"  \n</STATE>  \n<STATE value=\"Closed\">  \n   not=\"[Project]\\Fabrikam Review Team\"  \n</STATE>  \n...  \n</WORKFLOW>\n```\n\n----------------------------------------\n\nTITLE: Adding Azure DevOps Extension using Azure CLI\nDESCRIPTION: This command adds the Azure DevOps extension to an existing Azure CLI installation. This extension enables management of Azure DevOps services via the command line. Requires Azure CLI version 2.10.1 or later to be installed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/index.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name azure-devops\n```\n\n----------------------------------------\n\nTITLE: Release Pipeline Authorization Scope - Post-2020 Azure DevOps\nDESCRIPTION: Instructions for determining job authorization scope for release pipelines in versions after Azure DevOps 2020.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/access-tokens.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n* If the pipeline is in a private project, check the Pipeline settings under your Azure DevOps **Organization settings**:\n  * If **Limit job authorization scope to current project for release pipelines** is enabled, then the scope is **project**.\n  * If **Limit job authorization scope to current project for release pipelines** is not enabled, then check the Pipeline settings under your **Project settings** in Azure DevOps:\n    * If **Limit job authorization scope to current project for release pipelines** is enabled, then the scope is **project**.\n    * Otherwise, the scope is **collection**.\n```\n\n----------------------------------------\n\nTITLE: Disabling Automatic Artifact Download in Deployment Jobs - Azure Pipelines - YAML\nDESCRIPTION: This YAML snippet adds a 'download: none' step to prevent automatic downloading of artifacts in a deployment job in Azure Pipelines. By default, deployment jobs download artifacts to '$(Pipeline.Workspace)', but this step can be used to explicitly turn off that behavior. This is useful when artifacts do not need to be downloaded or when a custom artifact management strategy is required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- download: none\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Synchronous Check for Deployment Reason Validation in Azure Pipelines\nDESCRIPTION: Example of implementing a synchronous Azure Function check to ensure that access to a production environment is only allowed for manually queued builds by verifying the Build.Reason parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/invoke-checks.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- You add a _synchronous_ Azure Function check that verifies that `Build.Reason` for the pipeline run is `Manual`\n- You configure the Azure Function check to pass `Build.Reason` in its `Headers`\n- You set the check's _Time between evaluations_ to _0_, so failure or pass is final and no reevaluation is necessary\n- When a pipeline that wants to use the Service Connection runs:\n    - Azure Pipelines calls your check function\n    - If the reason is other than `Manual`, the check fails, and the pipeline run fails\n```\n\n----------------------------------------\n\nTITLE: Caching NuGet Packages in Azure Pipelines YAML\nDESCRIPTION: Define a pipeline variable for the NuGet packages location and use the Cache@2 task to cache packages based on the hash of packages.lock.json.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/caching-nuget.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages\n\n- task: Cache@2\n  displayName: Cache v2 task \n  inputs:\n    key: 'nuget | \"$(Agent.OS)\" | **/packages.lock.json,!**/bin/**,!**/obj/**'\n    restoreKeys: |\n       nuget | \"$(Agent.OS)\"\n       nuget\n    path: '$(NUGET_PACKAGES)'\n    cacheHitVar: 'CACHE_RESTORED'\n```\n\n----------------------------------------\n\nTITLE: Dockerfile for Azure Pipelines Agent on Alpine Linux\nDESCRIPTION: Dockerfile to create an Azure Pipelines agent image based on Alpine Linux. It installs necessary dependencies and the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_3\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM python:3-alpine\nENV TARGETARCH=\"linux-musl-x64\"\n\n# Another option:\n# FROM arm64v8/alpine\n# ENV TARGETARCH=\"linux-musl-arm64\"\n\nRUN apk update && \\\n  apk upgrade && \\\n  apk add bash curl gcc git icu-libs jq musl-dev python3-dev libffi-dev openssl-dev cargo make\n\n# Install Azure CLI\nRUN pip install --upgrade pip\nRUN pip install azure-cli\n\nWORKDIR /azp/\n\nCOPY ./start.sh ./\nRUN chmod +x ./start.sh\n\nRUN adduser -D agent\nRUN chown agent ./\nUSER agent\n# Another option is to run the agent as root.\n# ENV AGENT_ALLOW_RUNASROOT=\"true\"\n\nENTRYPOINT [ \"./start.sh\" ]\n```\n\n----------------------------------------\n\nTITLE: Using Environment Variables in Bash Script\nDESCRIPTION: Demonstrates two ways to echo an environment variable in a bash script using both the script shortcut and the Bash task syntax. The example defines a custom environment variable and references it in the script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n# Using the script shortcut syntax\n- script: echo \"This is \" $ENV_VARIABLE_NAME\n  env:\n    ENV_VARIABLE_NAME: \"my value\"\n  displayName: 'echo environment variable'\n\n# Using the task syntax\n- task: Bash@2\n  inputs:\n    script: echo \"This is \" $ENV_VARIABLE_NAME\n  env:\n    ENV_VARIABLE_NAME: \"my value\"\n  displayName: 'echo environment variable'\n```\n\n----------------------------------------\n\nTITLE: Example JSON Output from az webapp up Command\nDESCRIPTION: Displays a sample JSON object representing the output of the `az webapp up` Azure CLI command. This output contains key information about the created Azure App Service resources, including the web app URL, App Service plan name, location, resource group, and detected runtime version. Placeholders indicate where specific values will appear.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"URL\": <your-web-app-url>,\n  \"appserviceplan\": <your-app-service-plan-name>,\n  \"location\": <your-azure-location>,\n  \"name\": <your-web-app-name>,\n  \"os\": \"Linux\",\n  \"resourcegroup\": <your-resource-group>,\n  \"runtime_version\": \"python|3.11\",\n  \"runtime_version_detected\": \"-\",\n  \"sku\": <sku>,\n  \"src_path\": <repository-source-path>\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Environment Variables for macOS Agent Service\nDESCRIPTION: Commands to update environment variables for the macOS agent service. This involves regenerating the environment snapshot and restarting the service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n./env.sh\n./svc.sh stop\n./svc.sh start\n```\n\n----------------------------------------\n\nTITLE: Fetching Changes from Remote Git Branch\nDESCRIPTION: Git command to download new commits from a specific remote branch into your local repository without merging them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pulling.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit fetch <remote repo> <remote branch name>\n```\n\n----------------------------------------\n\nTITLE: Listing Variables in Azure DevOps CLI\nDESCRIPTION: Command to list all variables in a variable group using Azure DevOps CLI with table output format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group variable list --group-id 4 --output table\n```\n\n----------------------------------------\n\nTITLE: Referencing Variable Groups in YAML Pipeline\nDESCRIPTION: Shows how to reference a variable group in a YAML pipeline using the variables syntax. Variable groups should be created in the Pipelines Library section and then can be included in pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/about-resources.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- group: my-variable-group\n```\n\n----------------------------------------\n\nTITLE: Building and Managing Dependencies (Pre-1.11) in Shell\nDESCRIPTION: A bash script step for Go versions before 1.11, executed within the configured `modulePath`. It checks the Go version, uses `go get` to fetch dependencies, optionally installs `dep` and runs `dep ensure` if a `Gopkg.toml` file exists, and finally builds the project using `go build`. This step assumes the Go workspace structure has been set up previously.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/go.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- script: |\n    go version\n    go get -v -t -d ./...\n    if [ -f Gopkg.toml ]; then\n        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n        dep ensure\n    fi\n    go build -v .\n  workingDirectory: '$(modulePath)'\n  displayName: 'Get dependencies, then build'\n```\n\n----------------------------------------\n\nTITLE: Extracting SVN Authors in PowerShell with UTF-8 Encoding\nDESCRIPTION: PowerShell command to extract a list of all Subversion users from the repository logs and save them to an authors-transform.txt file with UTF-8 encoding. This file will be used to map SVN usernames to Git name/email format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nsvn.exe log --quiet | ? { $_ -notlike '-*' } | % { \"{0} = {0} \" -f ($_ -split ' | ')[1] } | Select-Object -Unique | Sort-Object | Out-File 'authors-transform.txt' -Encoding utf8NoBOM\n```\n\n----------------------------------------\n\nTITLE: Executing SQL Scripts with PowerShell in Azure Pipelines\nDESCRIPTION: This PowerShell script installs the SqlServer module if not present, then uses Invoke-Sqlcmd to execute a SQL script file against an Azure SQL Database. It requires parameters for the SQL file, server FQDN, database name, admin username, and password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_5\n\nLANGUAGE: PowerShell\nCODE:\n```\nif (-not (Get-Module -ListAvailable -Name SqlServer)) {\n  Install-Module -Name SqlServer -Force -AllowClobber\n}\n\nInvoke-Sqlcmd -InputFile $(SQLFile) -ServerInstance $(ServerFqdn) -Database $(DatabaseName) -Username $(AdminUser) -Password $(AdminPassword)\n```\n\n----------------------------------------\n\nTITLE: Install Git on macOS using Homebrew\nDESCRIPTION: Installs Git on macOS using the Homebrew package manager.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-cmdline.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbrew install git\n```\n\n----------------------------------------\n\nTITLE: Conditionally Accessing Variable Groups in Azure Pipelines YAML\nDESCRIPTION: This code snippet demonstrates how to conditionally access a variable group only when running on the main branch. It uses a condition to check the source branch and only exposes secrets when that condition is met, enhancing security by restricting access to sensitive information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/secrets.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\njobs:\n- job: ExampleJob\n  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - script: echo \"This runs only for the main branch\"\n    displayName: 'Conditional Step'\n  variables:\n  - group: your-variable-group-name\n```\n\n----------------------------------------\n\nTITLE: Configuring ARM Template for Azure Pipelines Deployment Agent Installation\nDESCRIPTION: JSON ARM template snippet for configuring a Windows deployment agent within a virtual machine resources section. This template defines the extension properties including account settings, deployment group parameters, and authentication tokens. For Linux VMs, the 'type' parameter should be changed to 'TeamServicesAgentLinux'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deployment-groups/howto-provision-deployment-group-agents.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"name\": \"[concat(parameters('vmNamePrefix'),copyIndex(),'/TeamServicesAgent')]\",\n    \"type\": \"Microsoft.Compute/virtualMachines/extensions\",\n    \"location\": \"[parameters('location')]\",\n    \"apiVersion\": \"2015-06-15\",\n    \"dependsOn\": [\n        \"[resourceId('Microsoft.Compute/virtualMachines/',\n                      concat(parameters('vmNamePrefix'),copyindex()))]\"\n    ],\n    \"properties\": {\n      \"publisher\": \"Microsoft.VisualStudio.Services\",\n      \"type\": \"TeamServicesAgent\",\n      \"typeHandlerVersion\": \"1.0\",\n      \"autoUpgradeMinorVersion\": true,\n      \"settings\": {\n        \"VSTSAccountName\": \"[parameters('VSTSAccountName')]\",\n        \"TeamProject\": \"[parameters('TeamProject')]\",\n        \"DeploymentGroup\": \"[parameters('DeploymentGroup')]\",\n        \"AgentName\": \"[parameters('AgentName')]\",\n        \"AgentMajorVersion\": \"auto|2|3\",\n        \"Tags\": \"[parameters('Tags')]\"\n      },\n      \"protectedSettings\": {\n      \"PATToken\": \"[parameters('PATToken')]\"\n     }\n   }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Publishing npm Packages (Classic Pipeline Command)\nDESCRIPTION: Command-line script for publishing npm packages in a Classic pipeline. This script is used in the Command line task of the pipeline configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/npm.md#2025-04-22_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Accessing Repository Resource Variables in Azure DevOps\nDESCRIPTION: Shows how to access metadata variables from a repository resource. This example demonstrates retrieving and displaying information like repository name, reference, ID, type, URL, and version using runtime variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n    - repository: common\n      type: git\n      ref: main\n      name: Repo\n\nvariables:\n  ref: $[ resources.repositories.common.ref ]\n  name: $[ resources.repositories.common.name ]\n  id: $[ resources.repositories.common.id ]\n  type: $[ resources.repositories.common.type ]\n  url: $[ resources.repositories.common.url ]\n  version: $[ resources.repositories.common.version ]\n\nsteps:\n- bash: |\n    echo \"name = $(name)\"\n    echo \"ref = $(ref)\"\n    echo \"id = $(id)\"\n    echo \"type = $(type)\"\n    echo \"url = $(url)\"\n    echo \"version = $(version)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring npm audit task in Classic Azure Pipeline\nDESCRIPTION: Custom command to run npm audit in a Classic Azure Pipeline. The command uses the --registry argument to specify the feed's source URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npm-audit.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naudit --registry=<FEED_SOURCE_URL>\n```\n\nLANGUAGE: bash\nCODE:\n```\naudit fix --registry=<FEED_SOURCE_URL>\n```\n\n----------------------------------------\n\nTITLE: Task Control Options Schema\nDESCRIPTION: Shows the complete schema for task control options including condition, timeout, and environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: string # Required as first property. Name of the task to run.\n  inputs: # Inputs for the task.\n    string: string # Name/value pairs\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Pipelines Task Library\nDESCRIPTION: Installs the azure-pipelines-task-lib package, which provides essential functionality for creating custom Azure DevOps tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\nnpm install azure-pipelines-task-lib --save\n```\n\n----------------------------------------\n\nTITLE: Running Mocha Tests with JUnit Reporter in Azure Pipelines\nDESCRIPTION: Uses mocha-junit-reporter to produce XML test results that can be published in Azure DevOps. This script runs mocha tests directly and outputs results in JUnit format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\n- script: mocha test --reporter mocha-junit-reporter\n```\n\n----------------------------------------\n\nTITLE: Generating Microsoft Entra ID Access Token Using Azure CLI\nDESCRIPTION: Command to generate a Microsoft Entra ID access token using Azure CLI with the Azure DevOps resource ID. Returns the access token in TSV format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/entra.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz account get-access-token \\\n--resource 499b84ac-1321-427f-aa17-267ca6975798 \\\n--query \"accessToken\" \\\n-o tsv\n```\n\n----------------------------------------\n\nTITLE: Adding Conda to PATH in Azure Pipelines (YAML)\nDESCRIPTION: Adds the Conda installation's binary/script directory to the system PATH for the current job, making Conda commands accessible in subsequent steps. This is necessary because Conda is not in the PATH by default on hosted agents. Uses the 'task.prependpath' logging command, implemented differently for Ubuntu (bash), macOS (bash with added ownership change), and Windows (powershell).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/anaconda.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Ubuntu\n\n```yaml\n- bash: echo \"##vso[task.prependpath]$CONDA/bin\"\n  displayName: Add conda to PATH\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# macOS\n\n```yaml\n- bash: echo \"##vso[task.prependpath]$CONDA/bin\"\n  displayName: Add conda to PATH\n\n# On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory/\n# We need to take ownership if we want to update conda or install packages globally\n- bash: sudo chown -R $USER $CONDA\n  displayName: Take ownership of conda installation\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# Windows\n\n```yaml\n- powershell: Write-Host \"##vso[task.prependpath]$env:CONDA\\Scripts\"\n  displayName: Add conda to PATH\n```\n```\n\n----------------------------------------\n\nTITLE: Getting Sample Python Code Repository URL\nDESCRIPTION: Provides the GitHub repository URL containing sample Python code, specifically a Flask tutorial application. Users should fork this repository into their own GitHub account to follow the guide for creating their first Python pipeline in Azure Pipelines. This repository is used by Azure Pipelines to analyze the code and suggest a suitable pipeline template (Python package).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/Microsoft/python-sample-vscode-flask-tutorial\n```\n\n----------------------------------------\n\nTITLE: Traditional Extension Directory Structure Example\nDESCRIPTION: Shows the basic folder and file structure for a simple extension with a single task version. Includes the main extension manifest, icons, and task implementation files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/integrate-build-task.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n* extensionManifest.json\n* extensionIcon.png\n* Task1\n  * task.json\n  * icon.png\n  * taskScript.ps1\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Connection String Example\nDESCRIPTION: Example of a configured DefaultConnectionString variable for connecting to an Azure SQL database instance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deployment-groups/deploying-azure-vms-deployment-groups.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nData Source=cust1sqljo5zndv53idtw.westus2.cloudapp.azure.com;Initial Catalog=PartsUnlimited-Dev;User ID=xxxxxxxx;Password=xxxxxxxx;MultipleActiveResultSets=False;Connection Timeout=30;\n```\n\n----------------------------------------\n\nTITLE: Running macOS Agent for Single Job\nDESCRIPTION: Command to run the macOS agent in single-job mode, where it accepts only one job before shutting down.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh --once\n```\n\n----------------------------------------\n\nTITLE: Updating Widget JavaScript for Azure DevOps Dashboard\nDESCRIPTION: This JavaScript snippet shows how to modify the widget's load and reload functions to display the configurable widget name. It demonstrates how to update the widget's title based on the widgetSettings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nreturn {\n    load: function (widgetSettings) {\n        // Set your title\n        var $title = $('h2.title');\n        $title.text(widgetSettings.name);\n\n        return getQueryInfo(widgetSettings);\n    },\n    reload: function (widgetSettings) {\n        // Set your title\n        var $title = $('h2.title');\n        $title.text(widgetSettings.name);\n\n        return getQueryInfo(widgetSettings);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Windows PowerShell Script to YAML Pipeline\nDESCRIPTION: Shows how to run a Windows PowerShell script in a YAML pipeline using the powershell keyword, which is a shortcut for the PowerShell task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/powershell.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- powershell: .\\my-script.ps1\n```\n\n----------------------------------------\n\nTITLE: Reading Variables in PowerShell for Azure DevOps Pipelines\nDESCRIPTION: Demonstrates how to read previously set variables in a PowerShell script. The script uses parameters to receive variables and shows accessing them through environment variables as well.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/set-variables-in-scripts.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nParam(\n   [string]$sauceArgument,\n   [string]$secretSauceArgument\n)\nWrite-Host No problem reading $env:SAUCE or $sauceArgument\nWrite-Host But I cannot read $env:SECRET_SAUCE\nWrite-Host But I can read $secretSauceArgument \"(but the log is redacted so I do not spoil the secret)\"\n```\n\n----------------------------------------\n\nTITLE: Using always() Condition in Azure DevOps Pipelines\nDESCRIPTION: This snippet demonstrates how to use the always() condition to run a job even if a previous dependency fails and even if the run is canceled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/task-run-built-in-conditions.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nalways()\n```\n\n----------------------------------------\n\nTITLE: Multiple Language Selection in Azure Pipelines\nDESCRIPTION: Example showing how to configure an Azure Pipelines environment to support multiple language versions simultaneously, specifically Node.js 16.x and Ruby 3.2 or better.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: UseNode@1\n  inputs:\n    version: '8.x'\n- task: UseRubyVersion@0\n  inputs:\n    versionSpec: '>= 3.2'\n```\n\n----------------------------------------\n\nTITLE: Decorator Opt-Out Using Variables in YAML\nDESCRIPTION: Demonstrates how to create a decorator that can be opted out of using a pipeline variable, allowing pipeline authors to control decorator injection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/pipeline-decorator-context.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- ${{ if ne(variables['skipInjecting'], 'true') }}:\n  - script: echo Injected the decorator\n```\n\n----------------------------------------\n\nTITLE: Setting Variables in Azure DevOps Pipelines with PowerShell\nDESCRIPTION: Sets task variables with different properties (standard, secret, and output) using PowerShell in Azure DevOps pipelines. Shows how to create variables that can be accessed in the current job or passed to future jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\n- pwsh: |\n    Write-Host \"##vso[task.setvariable variable=sauce;]crushed tomatoes\"\n    Write-Host \"##vso[task.setvariable variable=secretSauce;isSecret=true]crushed tomatoes with garlic\"\n    Write-Host \"##vso[task.setvariable variable=outputSauce;isOutput=true]canned goods\"\n  name: SetVars\n```\n\n----------------------------------------\n\nTITLE: Configuring Team Settings in Azure DevOps\nDESCRIPTION: Steps for configuring various team settings including cards, boards, charts, and general settings in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-teams.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n3. Choose a tab under any of the sections&mdash;**Cards, Board**, **Charts**, and **General**&mdash;to configure the cards or boards, the cumulative flow chart, or other team settings. When you're done configuring the settings, select **Save and close**.   \n\n\t:::image type=\"content\" source=\"media/team-settings-page.png\" alt-text=\"Screenshot of team settings page.\":::\n```\n\n----------------------------------------\n\nTITLE: Accessing Team/Project Level Notifications URL in Azure DevOps\nDESCRIPTION: URL pattern to directly access the notifications settings page for a specific team or project in Azure DevOps. Replace the placeholders with your organization and project names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/navigating-the-ui.md#2025-04-22_snippet_0\n\nLANGUAGE: URL\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}/{Your_Project}/_settings/notifications\n```\n\n----------------------------------------\n\nTITLE: Querying Approvals REST API - Azure Pipelines - JSON\nDESCRIPTION: This snippet shows an example JSON response returned from a GET call to the Azure Pipelines Approvals REST API, querying for approvals assigned to a specific user with a 'pending' state. It details the data structure, including approval metadata, linked pipelines, and owner references. Required dependencies include API access credentials and permissions to the Azure DevOps organization. Key parameters returned in the structure are 'id', 'status', timestamps, approvers, and pipeline information. This sample is intended to help developers parse or visualize the results of such API requests; the actual API depends on Azure DevOps REST endpoints.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-230-update.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\\n    \\\"count\\\": 1,\\n    \\\"value\\\":\\n    [\\n        {\\n            \\\"id\\\": \\\"7e90b9f7-f3f8-4548-a108-8b80c0fa80e7\\\",\\n            \\\"steps\\\":\\n            [],\\n            \\\"status\\\": \\\"pending\\\",\\n            \\\"createdOn\\\": \\\"2023-11-09T10:54:37.977Z\\\",\\n            \\\"lastModifiedOn\\\": \\\"2023-11-09T10:54:37.9775685Z\\\",\\n            \\\"executionOrder\\\": \\\"anyOrder\\\",\\n            \\\"minRequiredApprovers\\\": 1,\\n            \\\"blockedApprovers\\\":\\n            [],\\n            \\\"_links\\\":\\n            {\\n                \\\"self\\\":\\n                {\\n                    \\\"href\\\": \\\"https://dev.azure.com/fabrikam/26dcfaeb-d8fe-495c-91cb-fec4acb44fbb/_apis/pipelines/approvals/7e80b987-f3fe-4578-a108-8a80c0fb80e7\\\"\\n                }\\n            },\\n            \\\"pipeline\\\":\\n            {\\n                \\\"owner\\\":\\n                {\\n                    \\\"_links\\\":\\n                    {\\n                        \\\"web\\\":\\n                        {\\n                            \\\"href\\\": \\\"https://dev.azure.com/buildcanary/26dcfaeb-d8fe-495c-91cb-fec4acb44fbb/_build/results?buildId=73222930\\\"\\n                        },\\n                        \\\"self\\\":\\n                        {\\n                            \\\"href\\\": \\\"https://dev.azure.com/buildcanary/26dcfaeb-d8fe-495c-91cb-fec4acb44fbb/_apis/build/Builds/73222930\\\"\\n                        }\\n                    },\\n                    \\\"id\\\": 73222930,\\n                    \\\"name\\\": \\\"20231109.1\\\"\\n                },\\n                \\\"id\\\": \\\"4597\\\",\\n                \\\"name\\\": \\\"FabrikamFiber\\\"\\n            }\\n        }\\n    ]\\n}\n```\n\n----------------------------------------\n\nTITLE: Setting a Secret Variable in PowerShell\nDESCRIPTION: Creates a secret variable 'mySecretVal' with a masked value using PowerShell. The issecret=true flag ensures the value is saved as a secret and masked in logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/secret-variables-logging.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n- powershell: |\n    Write-Host \"##vso[task.setvariable variable=mySecretVal;issecret=true]secretvalue\"\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Certificate in YAML Pipeline\nDESCRIPTION: This YAML snippet shows how to add the InstallAppleCertificate@2 task to a pipeline for installing an Apple certificate. It references a secure file for the certificate and uses a variable for the password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/mobile/app-signing.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: InstallAppleCertificate@2\n    inputs:\n      certSecureFile: '<secure-file.p12>'\n      certPwd: '$(P12password)'\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Environment Resource Tags Configuration\nDESCRIPTION: Illustrates the command-line options for adding and specifying environment resource tags when configuring an Azure DevOps agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/unattended-config.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n--addvirtualmachineresourcetags --virtualmachineresourcetags <tags>\n```\n\n----------------------------------------\n\nTITLE: Updating Merge Strategy Policy with Azure CLI\nDESCRIPTION: Command to update merge strategy policy settings for Azure DevOps repositories. Allows configuration of various merge types including fast-forward, rebase, squash merge and branch matching options. Requires policy ID and supports optional parameters for organization, project and repository filtering.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy merge-strategy update --id\n                                      [--allow-no-fast-forward {false, true}]\n                                      [--allow-rebase {false, true}]\n                                      [--allow-rebase-merge {false, true}]\n                                      [--allow-squash {false, true}]\n                                      [--blocking {false, true}]\n                                      [--branch]\n                                      [--branch-match-type {exact, prefix}]\n                                      [--detect {false, true}]\n                                      [--enabled {false, true}]\n                                      [--org]\n                                      [--project]\n                                      [--repository-id]\n                                      [--subscription]\n                                      [--use-squash-merge {false, true}]\n```\n\n----------------------------------------\n\nTITLE: Configuring Collection-Scoped Feed in Cargo Config for Azure DevOps Server 2022\nDESCRIPTION: TOML configuration to add to .cargo/config.toml for connecting to a collection-scoped feed in Azure DevOps Server 2022. This configures the registry and replaces the default crates-io source with your feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[registries]\n<FEED_NAME> = { index = \"sparse+https://pkgs.dev.azure.com/<COLLECTION_NAME>/_packaging/<FEED_NAME>/Cargo/index/\" }\n\n[source.crates-io]\nreplace-with = \"<FEED_NAME>\"\n```\n\n----------------------------------------\n\nTITLE: Example of Viewing Policy Details with Azure CLI\nDESCRIPTION: This example demonstrates how to show details for a policy with ID 1 in the default project. The output is formatted as a table to display policy information including name, blocking status, and branch information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy show --id 1 --output table\n\nID    Name                     Is Blocking    Is Enabled    Repository Id                         Branch\n----  -----------------------  -------------  ------------  ------------------------------------  ------------\n1     Git repository settings  True           True          d28cd374-e7f0-4b1f-ad60-f349f155d47c  All Branches\n```\n\n----------------------------------------\n\nTITLE: Deleting a file in Git\nDESCRIPTION: These commands remove a file from the working directory and the Git repository, then commit the deletion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_16\n\nLANGUAGE: git\nCODE:\n```\ngit rm filename\ngit commit -m \"filename\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Stateless Agent using Azure CLI\nDESCRIPTION: Azure CLI configuration for setting up a stateless agent in a Managed DevOps Pool with no standby agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --agent-profile agent-profile.json\n   # other parameters omitted for space\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Stateless\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading Specific Build Artifact in YAML\nDESCRIPTION: This YAML snippet shows how to download a specific artifact from a particular build. It specifies the project, pipeline, build ID, and artifact name to download a precise artifact version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/build-artifacts.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: DownloadBuildArtifacts@1\n  displayName: 'Download Build Artifacts'\n  inputs:\n    buildType: specific\n    project: 'xxxxxxxxxx-xxxx-xxxx-xxxxxxxxxxx'\n    pipeline: 20\n    buildVersionToDownload: specific\n    buildId: 128\n    artifactName: drop\n    extractTars: false\n```\n\n----------------------------------------\n\nTITLE: Adding a Team Member in Azure DevOps\nDESCRIPTION: This code snippet shows the HTML for an image that highlights the 'Add' button used to add a new team member in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-teams.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n:::image type=\"content\" source=\"media/add-team-member.png\" alt-text=\"Screenshot of Add button highlighted, to add team member.\":::\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Duration Percentiles by Pipeline Name in Power BI\nDESCRIPTION: Power BI query that calculates 50th, 80th, and 95th percentile durations for a specified pipeline. It filters for successful or partially successful runs after a specified start date and groups results by duration percentiles.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration.md#2025-04-22_snippet_0\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and (SucceededCount eq 1 or PartiallySucceededCount eq 1) \"\n        &\") \"\n        &\"/compute( \"\n            &\"percentile_cont(TotalDurationSeconds, 0.5) as Duration50thPercentileInSeconds, \"\n                &\"percentile_cont(TotalDurationSeconds, 0.8) as Duration80thPercentileInSeconds, \"\n                &\"percentile_cont(TotalDurationSeconds, 0.95) as Duration95thPercentileInSeconds) \"\n            &\"/groupby( \"\n                &\"(Duration50thPercentileInSeconds, Duration80thPercentileInSeconds,Duration95thPercentileInSeconds)) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Rolling Back a Complete Changeset in TFVC\nDESCRIPTION: This command negates the effect of changeset 23 on all items that were changed in that changeset. It creates pending changes that counter all modifications made in changeset C23.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rollback-command-team-foundation-version-control.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nc:\\workspace> tf rollback /changeset:C23\n```\n\n----------------------------------------\n\nTITLE: Configuring ACR as a Pipeline Resource in Azure DevOps\nDESCRIPTION: This YAML snippet shows how to define Azure Container Registry (ACR) as a first-class pipeline resource. It includes configuration for the container alias, Azure subscription connection, resource group, registry details, and trigger conditions based on image tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-160-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: MyACR  #container resource alias\n    type: ACR\n    azureSubscription: RMPM  #ARM service connection\n    resourceGroup: contosoRG\n    registry: contosodemo\n    repository: alphaworkz\n    trigger: \n      tags:\n        include: \n        - production\n```\n\n----------------------------------------\n\nTITLE: Rollup Story Points to Features from User Stories by Area Path (OData Query)\nDESCRIPTION: OData query that retrieves Features and rolls up Story Points from child User Stories, filtering by Area Path. The query counts User Stories and sums Story Points for each Feature in the specified area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $filter=WorkItemType eq 'Feature'\n        and State ne 'Cut'\n        and startswith(Area/AreaPath,'{areapath}')\n        and Descendants/any()\n    &$select=WorkItemId,Title,WorkItemType,State,AreaSK\n    &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\n        Descendants(\n        $apply=filter(WorkItemType eq 'User Story')\n        /aggregate($count as CountOfUserStories, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Defining Build Task Configuration in JSON\nDESCRIPTION: This JSON snippet shows the content of the task.json file, which defines the build task's properties, inputs, and execution details. It includes configuration for using the custom Fabrikam service endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/service-endpoints.md#2025-04-22_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"id\": \"6557a6d2-4caf-4247-99ea-5131286a8753\",\n  \"name\": \"build-task\",\n  \"friendlyName\": \"Build Task that uses the service endpoint\",\n  \"description\": \"Task with a dynamic property getting data from an endpoint REST data source\",\n  \"author\": \"francistotten\",\n  \"helpMarkDown\": \"Replace with Markdown to show in help\",\n  \"category\": \"Build\",\n  \"visibility\": [\n    \"Build\",\n    \"Release\"\n  ],\n  \"demands\": [],\n  \"version\": {\n    \"Major\": \"0\",\n    \"Minor\": \"1\",\n    \"Patch\": \"1\"\n  },\n  \"minimumAgentVersion\": \"1.95.0\",\n  \"instanceNameFormat\": \"Service Endpoint Build Task $(project)\",\n  \"inputs\": [\n    {\n      \"name\": \"FabrikamService\",\n      \"type\": \"connectedService:Fabrikam\",\n      \"label\": \"Fabrikam service/server end point\",\n      \"defaultValue\": \"\",\n      \"required\": true,\n      \"helpMarkDown\": \"Select the Fabrikam end point to use. If needed, select 'manage', and add a new service endpoint of type 'Fabrikam server connection'\"\n    },\n    {\n      \"name\": \"project\",\n      \"type\": \"pickList\",\n      \"label\": \"Fabrikam Project\",\n      \"required\": true,\n      \"helpMarkDown\": \"Select the name of the Fabrikam Project to analyze.\",\n      \"properties\": {\n        \"EditableOptions\": \"True\"\n      }\n    }\n  ],\n  \"dataSourceBindings\": [\n    {\n      \"target\": \"project\",\n      \"endpointId\": \"$(FabrikamService)\",\n      \"dataSourceName\": \"Fabrikam Projects\"\n    }\n  ],\n  \"execution\": {\n    \"Node\": {\n      \"target\": \"sample.js\",\n      \"argumentFormat\": \"\"\n    },\n    \"PowerShell3\": {\n      \"target\": \"sample.ps1\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Amending the last commit in Git\nDESCRIPTION: This command amends the last commit with staged changes and updates the commit message. It's useful for making small changes to the most recent commit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_12\n\nLANGUAGE: git\nCODE:\n```\ngit commit --amend -m \"Updated message\"\n```\n\n----------------------------------------\n\nTITLE: Publishing Code Coverage Results with Cobertura in Azure Pipelines (YAML)\nDESCRIPTION: This step uses the PublishCodeCoverageResults task to upload code coverage reports, produced by SimpleCov with the Cobertura formatter, to Azure DevOps. Required dependencies include the SimpleCov Ruby gem and configuration to output coverage.xml and an HTML report folder. Input parameters specify the summary XML file and report directory, using pipeline variable expansions for location. Outputs include visual coverage metrics and downloadable HTML reports in the build summary.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/ruby.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishCodeCoverageResults@1\\n  inputs:\\n    codeCoverageTool: Cobertura\\n    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'\\n    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'\\n\n```\n\n----------------------------------------\n\nTITLE: Listing Repository Policies with Azure CLI\nDESCRIPTION: Command to list all policies for repositories and branches. Supports filtering by specific repository IDs and branch names with various optional parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy list [--branch]\n                     [--detect {false, true}]\n                     [--org]\n                     [--project]\n                     [--query-examples]\n                     [--repository-id]\n                     [--subscription]\n```\n\n----------------------------------------\n\nTITLE: OData Capabilities Definition\nDESCRIPTION: Definition of supported OData functions and capabilities in the Analytics endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-metadata.md#2025-04-22_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<Annotation Term=\"Org.OData.Capabilities.V1.FilterFunctions\">\n   <Collection>\n      <String>contains</String>\n      <String>endswith</String>\n      <String>startswith</String>\n      <String>length</String>\n      <String>indexof</String>\n      <String>substring</String>\n      <String>tolower</String>\n      <String>toupper</String>\n      <String>trim</String>\n      <String>concat</String>\n      <String>year</String>\n      <String>month</String>\n      <String>day</String>\n      <String>hour</String>\n      <String>minute</String>\n      <String>second</String>\n      <String>fractionalseconds</String>\n      <String>round</String>\n      <String>floor</String>\n      <String>ceiling</String>\n      <String>date</String>\n      <String>time</String>\n      <String>isof</String>\n      <String>cast</String>\n   </Collection>\n</Annotation>\n```\n\n----------------------------------------\n\nTITLE: Specifying Target Task for Pipeline Decorator\nDESCRIPTION: JSON configuration for specifying a target task in the pipeline decorator, allowing injection of tasks before or after the target task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-pipeline-decorator.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": \"my-required-task\",\n            \"type\": \"ms.azure-pipelines.pipeline-decorator\",\n            \"targets\": [\n                \"ms.azure-pipelines-agent-job.pre-task-tasks\",\n                \"ms.azure-pipelines-agent-job.post-task-tasks\"\n            ],\n            \"properties\": {\n                \"template\": \"my-decorator.yml\",\n                \"targettask\": \"target-task-id\"\n            }\n        }\n    ],\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps OAuth 2.0 Token Response\nDESCRIPTION: This JSON snippet shows the structure of the response received when successfully obtaining an access token and refresh token from Azure DevOps OAuth 2.0.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"access_token\": { \"access token for the user\" },\n    \"token_type\": { \"type of token\" },\n    \"expires_in\": { \"time in seconds that the token remains valid\" },\n    \"refresh_token\": { \"refresh token to use to acquire a new access token\" }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Go Workspace (Pre-1.11) in Shell\nDESCRIPTION: Defines pipeline variables for GOPATH and GOBIN and includes a bash script step to create the traditional Go workspace directory structure (`bin`, `pkg`, `src`) required for Go versions before 1.11. It moves the checked-out source code into the `src` directory and prepends the Go bin path to the system PATH. This script is designed for Linux and macOS agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/go.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  GOBIN:  '$(GOPATH)/bin' # Go binaries path\n  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path\n  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code\n\nsteps:\n- script: |\n    mkdir -p '$(GOBIN)'\n    mkdir -p '$(GOPATH)/pkg'\n    mkdir -p '$(modulePath)'\n    shopt -s extglob\n    shopt -s dotglob\n    mv !(gopath) '$(modulePath)'\n    echo '##vso[task.prependpath]$(GOBIN)'\n  displayName: 'Set up the Go workspace'\n```\n\n----------------------------------------\n\nTITLE: Showing Build Details and Opening in Browser using Azure DevOps CLI\nDESCRIPTION: Retrieves the details for a specific Azure Pipelines build, identified by its ID (in this case, ID 1), and displays them in the command line. The '--open' switch additionally opens the build details page in the default web browser.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/index.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines build show --id 1 --open\n```\n\n----------------------------------------\n\nTITLE: Configuring On-premises Agent Selection in Azure Pipelines\nDESCRIPTION: Shows how to select on-premises build agents in Azure Pipelines by specifying agent capabilities using the demands keyword.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-jenkins.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  demands: java\n```\n\n----------------------------------------\n\nTITLE: Configuring Project-scoped NuGet Feed in nuget.config\nDESCRIPTION: XML configuration for connecting to a project-scoped Azure Artifacts feed with NuGet. This config includes the package source URL that references both your organization and project, and should be placed in the same folder as your project files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/upstream-sources.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<SOURCE_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Configuring Git User Name and Email\nDESCRIPTION: These Git commands set the global user name and email address for commits. This configuration helps ensure consistent author information across repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-names.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global user.name \"Frances Totten\"\ngit config --global user.email \"frances_t@fabrikam.com\"\n```\n\n----------------------------------------\n\nTITLE: Setting Job Priority in Azure Pipeline\nDESCRIPTION: Demonstrates how to set job execution priority (High, Medium, Low) using the Priority demand. Jobs with higher priority are executed first when multiple jobs are queued.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/demands.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: fabrikam-dev-pool # Name of Managed DevOps Pool\n  demands:\n  - Priority -equals Low\n```\n\n----------------------------------------\n\nTITLE: OAuth 2.0 Scopes Table for Azure DevOps\nDESCRIPTION: Table showing available OAuth scopes for Azure DevOps REST APIs, including scope names and descriptions. These scopes are used to specify access levels when requesting authorization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/oauth.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [scopes table](../../includes/scopes.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating package.json for Custom Azure DevOps Task\nDESCRIPTION: Initializes a new Node.js project for the custom Azure DevOps task by creating a package.json file with default options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nnpm init --yes\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Pipelines Variable Group using Azure CLI\nDESCRIPTION: Creates a variable group named `datapipeline-vg` within a specified Azure DevOps project using the Azure CLI. It populates the group with several variables using values from environment variables (`$region`, `$rgName`, etc.) defined in the shell session. Requires prior login via `az devops login` and the `azure-devops` extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group create --name datapipeline-vg -p <yourazuredevopsprojectname> --variables \\\n                                       \"LOCATION=$region\" \\\n                                       \"RESOURCE_GROUP=$rgName\" \\\n                                       \"DATA_FACTORY_NAME=$datafactorydev\" \\\n                                       \"DATA_FACTORY_DEV_NAME=$datafactorydev\" \\\n                                       \"DATA_FACTORY_TEST_NAME=$datafactorytest\" \\\n                                       \"ADF_PIPELINE_NAME=DataPipeline\" \\\n                                       \"DATABRICKS_NAME=$databricksname\" \\\n                                       \"AZURE_RM_CONNECTION=azure_rm_connection\" \\\n                                       \"DATABRICKS_URL=<URL copied from Databricks in Azure portal>\" \\\n                                       \"STORAGE_ACCOUNT_NAME=$storageName\" \\\n                                       \"STORAGE_CONTAINER_NAME=rawdata\"\n```\n\n----------------------------------------\n\nTITLE: Viewing System-level Git Configuration Settings\nDESCRIPTION: This command shows Git configuration settings that apply to all users and repos on the computer.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit config --list --system\n```\n\n----------------------------------------\n\nTITLE: Implementing PromoteRejectCanary Stage in Azure Pipelines YAML\nDESCRIPTION: This YAML configuration defines a stage that promotes a canary deployment in Kubernetes. It depends on a previous DeployCanary stage and creates necessary Docker registry secrets before promoting the canary deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/kubernetes/canary-demo.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n- stage: PromoteRejectCanary\n  displayName: Promote or Reject canary\n  dependsOn: DeployCanary\n  condition: succeeded()\n    \n  jobs:\n  - deployment: PromoteCanary\n    displayName: Promote Canary\n    pool: \n      vmImage: ubuntu-latest\n    environment: 'akspromote'\n    strategy:\n      runOnce:\n        deploy:\n          steps:      \n          - task: KubernetesManifest@1\n            displayName: Create Docker Registry Secret for akspromote\n            inputs:\n              action: 'createSecret'\n              connectionType: 'azureResourceManager'\n              azureSubscriptionConnection: 'azure-pipelines-canary-sc'\n              azureResourceGroup: 'my-resource-group'\n              kubernetesCluster: 'my-aks-cluster'\n              secretType: 'dockerRegistry'\n              secretName: 'my-acr-secret'\n              dockerRegistryEndpoint: 'azure-pipelines-canary-acr'\n      \n          - task: KubernetesManifest@1\n            displayName: promote canary\n            inputs:\n              action: 'promote'\n              connectionType: 'azureResourceManager'\n              azureSubscriptionConnection: 'azure-pipelines-canary-sc'\n              azureResourceGroup: 'my-resource-group'\n              kubernetesCluster: 'my-aks-cluster'\n              strategy: 'canary'\n              manifests: '$(Pipeline.Workspace)/manifests/*'\n              containers: '$(containerRegistry)/$(imageRepository):$(tag)'\n              imagePullSecrets: 'my-acr-secret'\n```\n\n----------------------------------------\n\nTITLE: Using Composer Install with a Custom Working Directory (Absolute Path)\nDESCRIPTION: Shell command showing how to run `composer install` targeting a subfolder (`pkgs`) using an absolute path. The path is constructed using the Azure Pipelines predefined variable `$(system.defaultWorkingDirectory)`. The `--working-dir` argument specifies the exact directory for Composer's execution. The `--no-interaction` flag prevents interactive prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/php.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncomposer install --no-interaction --working-dir='$(system.defaultWorkingDirectory)/pkgs'\n```\n\n----------------------------------------\n\nTITLE: Forcing Scheduled Runs Without Code Changes in YAML\nDESCRIPTION: This YAML snippet shows how to use the 'always' keyword to force a pipeline to run on schedule even when there are no code changes since the last successful scheduled run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: ...\n  ...\n  always: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Retries in YAML Pipeline\nDESCRIPTION: Specifies the number of retries if a task fails. The default is zero retries. Maximum allowed retries is 10, with exponential backoff between retry attempts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: <name of task>\n  retryCountOnTaskFailure: <max number of retries>\n   ...\n```\n\n----------------------------------------\n\nTITLE: Clearing Extended Attributes on macOS Agent Download\nDESCRIPTION: Command to clear extended attributes on the downloaded agent tar file on macOS. This is required before unpacking the agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nxattr -c vsts-agent-osx-x64-V.v.v.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Registering Work Item Form Event Listener in JavaScript\nDESCRIPTION: This JavaScript code demonstrates how to register an object that listens for various events on the work item form, such as field changes, loading, and saving.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-workitem-extension.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { IWorkItemFormService, WorkItemTrackingServiceIds } from \"azure-devops-extension-api/WorkItemTracking\";\nimport * as SDK from \"azure-devops-extension-sdk\";\n\nasync function getWorkItemFormService()\n{\n    const workItemFormService = await SDK.getService<IWorkItemFormService>(WorkItemTrackingServiceIds.WorkItemFormService);\n    return workItemFormService;\n}\n\nSDK.register(SDK.getContributionId(), function () {\n    return {\n        onFieldChanged: function(args) {\n            $(\".events\").append($(\"<div/>\").text(\"onFieldChanged - \" + JSON.stringify(args)));\n        },\n        \n        onLoaded: function (args) {\n            getWorkItemFormService().then(function(service) {            \n                service.getFieldValues([\"System.Id\", \"System.Title\", \"System.State\", \"System.CreatedDate\"]).then(\n                    function (value) {\n                        $(\".events\").append($(\"<div/>\").text(\"onLoaded - \" + JSON.stringify(value)));\n                    });\n            });\n        },\n        \n        onUnloaded: function (args) {\n            $(\".events\").empty();\n            $(\".events\").append($(\"<div/>\").text(\"onUnloaded - \" + JSON.stringify(args)));\n        },\n        \n        onSaved: function (args) {\n            $(\".events\").append($(\"<div/>\").text(\"onSaved - \" + JSON.stringify(args)));\n        },\n        \n        onReset: function (args) {\n            $(\".events\").append($(\"<div/>\").text(\"onReset - \" + JSON.stringify(args)));\n        },\n        \n        onRefreshed: function (args) {\n            $(\".events\").append($(\"<div/>\").text(\"onRefreshed - \" + JSON.stringify(args)));\n        }\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Using Inline Script for Java Build in Azure Pipelines\nDESCRIPTION: YAML configuration for running an inline Bash/Command Prompt script to build a Java project with Maven. The script echoes a message and then runs the Maven package command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: |\n    echo Starting the build\n    mvn package\n  displayName: 'Build with Maven'\n```\n\n----------------------------------------\n\nTITLE: Simplified Syntax for Server Jobs in Azure DevOps Pipelines\nDESCRIPTION: Streamlined YAML syntax for agentless server jobs, showing only the required properties. This syntax is useful when additional configuration options are not needed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: string\n  pool: server # note: the value 'server' is a reserved keyword which indicates this is an agentless job\n```\n\n----------------------------------------\n\nTITLE: Using Date Surrogate Keys for Time Zone Independent Filtering in OData\nDESCRIPTION: Query that uses date surrogate key properties (with 'SK' suffix) to filter work items created since the beginning of 2020, regardless of organization time zone settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_17\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=CreatedDateSK ge 20200101\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Configuring Project-Level .npmrc for Azure DevOps Server (Linux/macOS)\nDESCRIPTION: This snippet creates a project-level .npmrc file to connect to an Azure Artifacts feed on Azure DevOps Server. It configures the registry URL and ensures authentication is always required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nregistry=http://<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/\n                        \nalways-auth=true\n```\n\n----------------------------------------\n\nTITLE: Interactive Staging Using Git CLI\nDESCRIPTION: Command to interactively stage parts of a changed file using the patch option\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/commits.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit add --patch <file path>\n```\n\n----------------------------------------\n\nTITLE: Configuring .npmrc file for Organization-scoped feed\nDESCRIPTION: Example of an .npmrc file configured for an organization-scoped feed with a custom scope name. This configuration directs npm to use the specified Azure DevOps registry for packages with the defined scope.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/scopes.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n@ScopeName:registry=https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/npm/registry/\n    \nalways-auth=true\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps CLI Extension\nDESCRIPTION: Commands to install or update the Azure DevOps extension for Azure CLI. This extension is required for managing Azure DevOps resources from the command line.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/download-universal-packages.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name azure-devops\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name azure-devops\n```\n\n----------------------------------------\n\nTITLE: Creating Team with Azure DevOps CLI\nDESCRIPTION: Azure CLI command to create a new team in Azure DevOps. Required parameters include team name, with optional description and project name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/add-teams.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team create --name [--description] [--project]\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet Packages to Internal Feed with YAML Pipeline\nDESCRIPTION: YAML pipeline configuration to publish NuGet packages to an Azure Artifacts feed in the same organization. Uses NuGetToolInstaller, NuGetAuthenticate, and a script task to push packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/nuget.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: NuGetToolInstaller@1                            # Minimum required NuGet version: 4.8.0.5385+.\n  displayName: 'NuGet Tool Installer'\n\n- task: NuGetAuthenticate@0\n  displayName: 'NuGet Authenticate'\n\n- script: |\n      nuget.exe push -Source \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" -ApiKey az $(Build.ArtifactStagingDirectory)\\*.nupkg\n  displayName: Push\n```\n\n----------------------------------------\n\nTITLE: Configuring Ubuntu 22.04 Preview VM Image in Azure Pipelines\nDESCRIPTION: YAML configuration for using Ubuntu 22.04 preview image in Azure Pipelines hosted agents. The snippet demonstrates how to specify the VM image and includes a basic bash script to verify the Ubuntu version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-204-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- job: ubuntu2204\n  pool:\n    vmImage: 'ubuntu-22.04'\n  steps:\n  - bash: |\n      echo Hello from Ubuntu 22.04 Preview\n      lsb_release -d\n```\n\n----------------------------------------\n\nTITLE: Uploading Custom Logs as Pipeline Artifacts in Azure DevOps\nDESCRIPTION: Uses the PublishPipelineArtifact@1 task to upload a log file or directory as a pipeline artifact. This approach is useful when you have many custom log files that need to be preserved for further analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishPipelineArtifact@1\n  inputs:\n    targetPath: '$(Pipeline.Workspace)/s/trace'\n    artifact: 'file_result.pcap'\n    publishLocation: 'pipeline'\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Server 2022 Agent in Azure Pipelines YAML\nDESCRIPTION: This YAML pipeline configuration demonstrates how to use the `windows-2022` VM image (currently in preview), which includes Visual Studio 2022, on Microsoft-hosted agents. The steps include installing NuGet tools, restoring NuGet packages, and building a Visual Studio solution using the `VSBuild@1` task. Note that `windows-latest` still points to `windows-2019` during the preview.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-192-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'windows-2022'\n\nsteps:\n- task: NuGetToolInstaller@1\n- task: NuGetCommand@2\n  inputs:\n    restoreSolution: '**/*.sln'\n- task: VSBuild@1 # Visual Studio 2022 build\n  inputs:\n    solution: '**/*.sln'\n    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation=\"$(build.artifactStagingDirectory)\\WebApp.zip\" /p:DeployIisAppPath=\"Default Web Site\"'\n    platform: 'Any CPU'\n    configuration: 'Release'\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Hook Subscription for Build Events in JavaScript\nDESCRIPTION: A JSON example showing how to create a service hook subscription that triggers when a build fails. This request specifies the publisherId, eventType, consumerId, and necessary input parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/create-subscription.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"publisherId\": \"tfs\",\n    \"eventType\": \"build.complete\",\n    \"resourceVersion\": \"1.0\",\n    \"consumerId\": \"webHooks\",\n    \"consumerActionId\": \"httpRequest\",\n    \"publisherInputs\": {\n        \"buildStatus\": \"failed\",\n        \"definitionName\": \"WebSite.CI\",\n        \"projectId\": \"56479caf-1eeb-4bca-86ab-aaa6f29399d9\",\n    },\n    \"consumerInputs\": {\n        \"url\": \" https://myservice/event\"\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: OData Query for Filtering User Stories by Iteration Path in Azure DevOps Analytics\nDESCRIPTION: OData query that filters User Stories by a specific iteration path and area path, excluding completed items, within a date range. Results are grouped by date, state category, state, and area path with aggregations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\n        $apply=filter(WorkItemType eq 'User Story'\n            and StateCategory ne 'Completed'\n            and startswith(Area/AreaPath,'{areapath}')\n            and startswith(Iteration/IterationPath,'{iterationpath}')\n            and DateValue ge {startdate}\n            and DateValue le {enddate}\n            )\n        /groupby (\n            (DateValue,StateCategory,State,Area/AreaPath,AreaSK),\n            aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Querying Lead and Cycle Time for User Stories by Area Path with OData\nDESCRIPTION: OData query that extracts completed user stories filtered by area path with their lead time and cycle time metrics from Azure DevOps Analytics. It provides the raw query format for HTTP requests.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-leadcycletime.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'User Story'\n            and StateCategory eq 'Completed'\n            and CompletedDate ge {startdate}\n            and startswith(Area/AreaPath,'{areapath}')\n        &$select=WorkItemId,Title,WorkItemType,State,Priority,AreaSK\n            ,CycleTimeDays,LeadTimeDays,CompletedDateSK\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath)\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Slack Command Reference\nDESCRIPTION: Complete list of commands supported by the Azure Pipelines app for Slack. These commands allow users to subscribe to pipelines, manage subscriptions, provide feedback, get help, and manage authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/slack.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Command        | Description  |\n| -------------------- |----------------|\n| `/azpipelines subscribe <pipeline url or project url>`      | Subscribe to a pipeline or all pipelines in a project and receive notifications. | \n| `/azpipelines subscriptions`      | Add or remove subscriptions for this channel.      | \n| `/azpipelines feedback` | Report a problem or suggest a feature.      |\n| `/azpipelines help`     | Get help on the commands. |\n| `/azpipelines signin`  | Sign in to your Azure Pipelines account. |\n| `/azpipelines signout`  | Sign out of your Azure Pipelines account. |\n| `/azpipelines unsubscribe all <project url>` | Remove all project pipelines and their associated subscriptions from a channel. |\n```\n\n----------------------------------------\n\nTITLE: Defining Azure DevOps Task in JSON\nDESCRIPTION: Creates a task.json file that defines the structure, inputs, and execution details of the custom Azure DevOps task. This file is crucial for task integration with Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_7\n\nLANGUAGE: JSON\nCODE:\n```\n{\n \"$schema\": \"https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json\",\n \"id\": \"{{taskguid}}\",\n \"name\": \"{{taskname}}\",\n \"friendlyName\": \"{{taskfriendlyname}}\",\n \"description\": \"{{taskdescription}}\",\n \"helpMarkDown\": \"\",\n \"category\": \"Utility\",\n \"author\": \"{{taskauthor}}\",\n \"version\": {\n     \"Major\": 0,\n     \"Minor\": 1,\n     \"Patch\": 0\n },\n \"instanceNameFormat\": \"Echo $(samplestring)\",\n \"inputs\": [\n     {\n         \"name\": \"samplestring\",\n         \"type\": \"string\",\n         \"label\": \"Sample String\",\n         \"defaultValue\": \"\",\n         \"required\": true,\n         \"helpMarkDown\": \"A sample string\"\n     }\n ],\n \"execution\": {\n     \"Node20_1\": {\n         \"target\": \"index.js\"\n     }\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Maximum File Size Policy Example\nDESCRIPTION: Example of updating an existing maximum file size policy to increase the file size limit to 20 MB. This command modifies a policy that's identified by its policy ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_20\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy file-size update --id 45 --maximum-git-blob-size 20971520 --output table\n```\n\n----------------------------------------\n\nTITLE: Generating Microsoft Entra ID Access Token Using PowerShell\nDESCRIPTION: Command to generate a Microsoft Entra ID access token using Azure PowerShell with the Azure DevOps resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/entra.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzAccessToken -ResourceUrl '499b84ac-1321-427f-aa17-267ca6975798'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Key Vault in the fabric-profile.json for Microsoft DevOps Pools\nDESCRIPTION: This JSON configuration shows the osProfile section of a fabric-profile.json file with secretsManagementSettings configured to access certificates from Azure Key Vault. It specifies the certificate store location and observed certificates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vmss\": {\n    \"sku\": {...},\n    \"images\": [...],\n    \"osProfile\": {\n      \"secretsManagementSettings\": {\n          \"certificateStoreLocation\": \"LocalMachine\",\n          \"observedCertificates\": [\n              \"https://<keyvault-uri>/secrets/<certificate-name>\"\n          ],\n          \"keyExportable\": false\n      },\n      \"logonType\": \"Interactive\"\n    },\n    \"storageProfile\": {...}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Azure DevOps Extension SDK in JavaScript\nDESCRIPTION: This snippet shows how to install and initialize the Azure DevOps Extension SDK in a JavaScript project. It's a prerequisite for creating custom work item form controls.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/custom-control.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as SDK from \"azure-devops-extension-sdk\";\nSDK.init();\n```\n\n----------------------------------------\n\nTITLE: Uploading Custom Log Files Using PowerShell in Azure Pipelines\nDESCRIPTION: PowerShell script that uploads a custom log file as part of the standard pipeline logs using the ##vso[task.uploadfile] logging command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- pwsh: Write-Host \"##vso[task.uploadfile]$(Agent.TempDirectory)\\resource-usage.txt\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Cross-Account Dependency Settings in JSON for Azure DevOps\nDESCRIPTION: This JSON snippet configures cross-account dependency settings for the Dependency Tracker. It allows enabling or disabling cross-organization dependency linking, setting the default state for the cross-account toggle, and customizing toggle text.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/extensions/dependency-tracker.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"crossAccountConfigs\": {\n  \"crossAccountDependencyEnabled\": false,\n  \"crossAccountDependencyToggleDefaultState\": false, //default state for cross account toggle\n  \"crossAccountDependencyToggleOnText\": \"Cross-account dependencies on\",\n  \"crossAccountDependencyToggleOffText\": \"Cross-account dependencies off\"}\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Outer Container Home to Inner Container - Bash\nDESCRIPTION: This Docker command mounts the DIND_USER_HOME variable, populated previously, from the host into the inner container for persistent or shared file access. It ensures that the inner container receives the right host subpath for user-level file sharing in Docker-in-Docker scenarios. Both DIND_USER_HOME and <path-on-inner-container> must be adjusted to the deployment needs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\ndocker run ... -v \"${DIND_USER_HOME}:<path-on-inner-container>\" ...\n```\n\n----------------------------------------\n\nTITLE: Creating a New Timeline Record\nDESCRIPTION: Demonstrates how to use the task.logdetail command to create a new root timeline record in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n##vso[task.logdetail id=new guid;name=project1;type=build;order=1]create new timeline record\n```\n\n----------------------------------------\n\nTITLE: Generating RSA SSH Keys with SHA-256 in PowerShell/Bash\nDESCRIPTION: Command to generate RSA SSH keys with SHA-256 encryption for authentication with Azure DevOps. This creates a public/private key pair that can be used for SSH authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nssh-keygen -t rsa-sha2-256\n```\n\n----------------------------------------\n\nTITLE: Visual Studio Sign-in Authentication for SOAP Services in C#\nDESCRIPTION: This snippet shows how to authenticate with Azure DevOps using the Visual Studio sign-in prompt for SOAP-based services. It supports both Microsoft Account and Azure Active Directory authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/client-libraries/soapSamples.md#2025-04-22_snippet_3\n\nLANGUAGE: C#\nCODE:\n```\npublic static void MicrosoftAccountSample()\n{\n    // authenticate using Visual Studio sign-in prompt\n    using (TfsTeamProjectCollection tpc = new TfsTeamProjectCollection(new Uri(collectionUri), new VssClientCredentials()))\n    {\n        tpc.Authenticate();\n        Console.WriteLine(tpc.InstanceId);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting TLS 1.2 Protocol in PowerShell for Agent Installation\nDESCRIPTION: PowerShell command to set the security protocol to TLS 1.2, which resolves secure channel errors that might occur when running the deployment agent installation script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deployment-groups/howto-provision-deployment-group-agents.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Agent Docker Container\nDESCRIPTION: Command to run the Azure Pipelines agent Docker container with necessary environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -e AZP_URL=\"<Azure DevOps instance>\" -e AZP_TOKEN=\"<Personal Access Token>\" -e AZP_POOL=\"<Agent Pool Name>\" -e AZP_AGENT_NAME=\"Docker Agent - Linux\" --name \"azp-agent-linux\" azp-agent:linux\n```\n\n----------------------------------------\n\nTITLE: Uploading SARIF Files with Azure Pipelines using Microsoft Security DevOps Task\nDESCRIPTION: This YAML pipeline example demonstrates how to integrate the Microsoft Security DevOps task with GitHub Advanced Security for Azure DevOps. It runs security scanning for Infrastructure as Code (IaC) and publishes the results using the AdvancedSecurity-Publish task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-code-scanning-third-party.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n- task: MicrosoftSecurityDevOps@1\n  inputs:\n    command: 'run'\n    categories: 'IaC'\n- task: AdvancedSecurity-Publish@1\n  inputs:\n    SarifsInputDirectory: '$(Build.ArtifactStagingDirectory)/.gdn/'\n```\n\n----------------------------------------\n\nTITLE: Configuring Headers for Advanced Azure Function Check in JSON\nDESCRIPTION: This JSON snippet defines the required headers for configuring an advanced Azure Function check in Azure Pipelines. It includes the same system variables and access token as the basic check configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/invoke-checks.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Content-Type\":\"application/json\", \n    \"PlanUrl\": \"$(system.CollectionUri)\", \n    \"ProjectId\": \"$(system.TeamProjectId)\", \n    \"HubName\": \"$(system.HostType)\", \n    \"PlanId\": \"$(system.PlanId)\", \n    \"JobId\": \"$(system.JobId)\", \n    \"TimelineId\": \"$(system.TimelineId)\", \n    \"TaskInstanceId\": \"$(system.TaskInstanceId)\", \n    \"AuthToken\": \"$(system.AccessToken)\",\n    \"BuildId\": \"$(build.BuildId)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sparse Checkout Cone Mode in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to enable sparse checkout in cone mode within an Azure Pipelines `checkout` task for an Azure Repo. It uses the `sparseCheckoutDirectories` property to specify that only the 'src' directory and its contents should be checked out, improving checkout performance by limiting fetched data. This feature requires agent v3.248.0 (or v4.248.0 for .NET 8) or later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/repos/sprint-248-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n  - checkout: repo\n    sparseCheckoutDirectories: src\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Provisioning Profile in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to add the InstallAppleProvisioningProfile@1 task to a pipeline for installing an Apple provisioning profile. It references a secure file for the profile.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/mobile/app-signing.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: InstallAppleProvisioningProfile@1\n    inputs:\n      provProfileSecureFile: '<secure-file.mobileprovision>'\n```\n\n----------------------------------------\n\nTITLE: Defining Multiple Cron Schedules in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to define multiple cron schedules for an Azure Pipeline. It includes two schedules: a daily midnight build and a weekly Sunday build, each with different branch inclusions and exclusions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: '0 0 * * *'\n  displayName: Daily midnight build\n  branches:\n    include:\n    - main\n    - releases/*\n    exclude:\n    - releases/ancient/*\n- cron: '0 12 * * 0'\n  displayName: Weekly Sunday build\n  branches:\n    include:\n    - releases/*\n  always: true\n```\n\n----------------------------------------\n\nTITLE: Retrieving IP Ranges for Azure DevOps Hosted Agents in C#\nDESCRIPTION: This C# code snippet demonstrates how to retrieve IP address ranges for Microsoft-hosted agents in the United States geography from the weekly Azure IP ranges file. It loads the JSON file, filters for specific regions, and outputs the IP ranges to the console.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/hosted.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing Newtonsoft.Json.Linq;\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\n\nnamespace WeeklyFileIPRanges\n{\n    class Program\n    {\n        // Path to the locally saved weekly file\n        const string weeklyFilePath = @\"C:\\MyPath\\ServiceTags_Public_20230904.json\";\n\n        static void Main(string[] args)\n        {\n            // United States geography has the following regions:\n            // Central US, East US, East US 2, East US 3, North Central US, \n            // South Central US, West Central US, West US, West US 2, West US 3\n            // This list is accurate as of 9/8/2023\n            List<string> USGeographyRegions = new List<string>\n            {\n                \"centralus\",\n                \"eastus\",\n                \"eastus2\",\n                \"eastus3\",\n                \"northcentralus\",\n                \"southcentralus\",\n                \"westcentralus\",\n                \"westus\",\n                \"westus2\",\n                \"westus3\"\n            };\n\n            // Load the weekly file\n            JObject weeklyFile = JObject.Parse(File.ReadAllText(weeklyFilePath));\n            JArray values = (JArray)weeklyFile[\"values\"];\n\n            foreach (string region in USGeographyRegions)\n            {\n                string tag = $\"AzureCloud.{region}\";\n                Console.WriteLine(tag);\n\n                var ipList =\n                    from v in values\n                    where tag.Equals((string)v[\"name\"], StringComparison.OrdinalIgnoreCase)\n                    select v[\"properties\"][\"addressPrefixes\"];\n\n                foreach (var ip in ipList.Children())\n                {\n                    Console.WriteLine(ip);\n                }\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: OData Query for Basic Flaky Tests Analysis\nDESCRIPTION: OData query to retrieve flaky test results from Azure DevOps Analytics. Filters tests by pipeline name and date, groups by test details, and calculates flaky rates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-flaky-tests.md#2025-04-22_snippet_4\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tAnd Date/Date ge {startdate})\n/groupby((TestSK, Test/TestName, Test/ContainerName), \n\taggregate(\n\tResultCount with sum as TotalCount,\n\tResultPassCount with sum as PassedCount,\n\tResultFailCount with sum as FailedCount,\n\tResultNotExecutedCount with sum as NotExecutedCount,\n\tResultNotImpactedCount with sum as NotImpactedCount,\n\tResultFlakyCount with sum as FlakyCount))\n/filter(FlakyCount gt 0)\n/compute(\n(FlakyCount div cast(TotalCount, Edm.Decimal)) mul 100 as FlakyRate)\n```\n\n----------------------------------------\n\nTITLE: Custom Condition for Job Execution in Azure DevOps\nDESCRIPTION: Example of using a custom condition to run a job only for a specific branch. This job will only execute when the source branch is 'refs/heads/main' and the dependent job succeeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - script: echo hello\n\n- job: B\n  dependsOn: A\n  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))\n  steps:\n  - script: echo this only runs for master\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration Metrics with OData in Azure DevOps Analytics\nDESCRIPTION: An OData query that retrieves test duration metrics from Azure DevOps Analytics, filtering by pipeline name and date range. The query groups results by test name and owner, calculates total count and duration, and computes average duration for each test.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And Date/Date ge {startdate} \n    And Workflow eq 'Build'\n)/groupby(\n    (TestSK, Test/TestName, Test/TestOwner),\n    aggregate(\n        ResultCount with sum as TotalCount,\n        ResultDurationSeconds with sum as TotalDuration\n    )\n)/compute(\n    TotalDuration div TotalCount as AvgDuration\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring SpecificAccounts Permissions in Organization Profile JSON for Azure CLI\nDESCRIPTION: This JSON snippet shows an `organization-profile.json` file structure for Azure CLI configured for 'SpecificAccounts' permissions. `permissionProfile.kind` is set to `SpecificAccounts`, and the `users` array lists the email addresses to be granted administrator roles. This file is used with the `--organization-profile` parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n    {\n        \"AzureDevOps\" : {\n            \"organizationProfile\": {\n            \"organizations\": [...],\n            \"permissionProfile\": {\n            \"kind\": \"SpecificAccounts\",\n            \"users\" : [\"User1@fabrikam.com\", \"User2@fabrikam.com\" ]\n            }\n        }\n    }\n   \n```\n\n----------------------------------------\n\nTITLE: Advanced Failure Handling with Conditions in Azure Pipelines\nDESCRIPTION: Advanced Azure Pipelines configuration demonstrating conditional job execution. This example runs an alert job only when the build fails and the source branch is 'main', showcasing Azure Pipelines' powerful conditional logic.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: build\n  steps:\n  - script: ./build.sh\n- job: alert\n  dependsOn: build\n  condition: and(failed(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))\n  steps:\n  - script: ./sound_the_alarms.sh\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Basic Asterisk Pattern Matching in File Paths\nDESCRIPTION: Examples showing how the asterisk (*) wildcard matches zero or more characters in file names, including matching .sln files with 'Website' in their names and .proj files within specific directories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/tasks/file-matching-patterns.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nConsoleHost.sln\nContosoWebsite.sln\nFabrikamWebsite.sln\nWebsite.sln\n```\n\nLANGUAGE: text\nCODE:\n```\nContosoWebsite/index.html\nContosoWebsite/ContosoWebsite.proj\nFabrikamWebsite/index.html\nFabrikamWebsite/FabrikamWebsite.proj\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Manifest for Backlog Panels in Azure DevOps\nDESCRIPTION: JSON configuration for the extension manifest, defining the contribution for adding a custom panel to various backlog pages. It specifies the panel's properties, target locations, and required scopes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-backlog-panel.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"contributions\": [\n    {\n      \"id\": \"Fabrikam.HelloWorld.Backlogs.Panel\",\n      \"type\": \"ms.vss-work-web.backlog-panel\",\n      \"description\": \"Adds a 'Hello' panel to Product and Iteration backlog pages.\",\n      \"targets\": [\n        \"ms.vss-work-web.requirement-backlog-toolpane\",\n        \"ms.vss-work-web.portfolio-backlog-toolpane\",\n        \"ms.vss-work-web.iteration-backlog-toolpane\"\n      ],\n      \"properties\": {\n        \"title\": \"Hello Panel Pane\",\n        \"name\": \"Hello Panel\",\n        \"uri\": \"index.html\",\n        \"registeredObjectId\": \"backlogPanelObject\"\n      }\n    }\n  ],\n  \"scopes\": [ \n    \"vso.work\" \n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Reverting Git Commits via Command Line\nDESCRIPTION: Command to revert changes made by a specific commit, creating a new commit with reversed changes. Requires the commit ID of the commit to be reverted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/undo.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ngit revert <commit ID>\n```\n\n----------------------------------------\n\nTITLE: Using the 'In' Operator with TreePath Fields in Azure Boards Queries\nDESCRIPTION: Illustrates the use of the `In` operator within Azure Boards queries, specifically for TreePath fields like Area Path or Iteration Path. This operator allows specifying multiple valid values to match against.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-operators-variables.md#2025-04-22_snippet_3\n\nLANGUAGE: wiql\nCODE:\n```\nIn\n```\n\n----------------------------------------\n\nTITLE: Installing a Specific Node Execution Handler in Azure DevOps Pipeline (YAML)\nDESCRIPTION: This snippet demonstrates how to add the NodeTaskRunnerInstaller@0 task to an Azure DevOps YAML pipeline in order to install the Node 16 execution handler. This is necessary when running third-party or legacy tasks that depend on Node 16 and your agent package does not include it. The runnerVersion input specifies which Node version to install, and the task ensures compatibility without manual agent modification. Requires the 'NodeTaskRunnerInstaller@0' task to be available in the environment. Inputs: runnerVersion (Node.js version to install). Outputs: Makes specified Node.js version available to subsequent tasks. Limitations: Only works if the task and the requested version are supported and available.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-254-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n  steps:\\n  - task: NodeTaskRunnerInstaller@0\\n    inputs:\\n      runnerVersion: 16\\n\n```\n\n----------------------------------------\n\nTITLE: Power BI Query for Flaky Tests by Test Owner\nDESCRIPTION: Power BI M query that retrieves flaky test results and groups them by test owner. Includes aggregations for various test result counts and calculates flaky rate percentage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-flaky-tests.md#2025-04-22_snippet_5\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate}) \"\n        &\"/groupby((TestSK, Test/TestName, Test/TestOwner), \"\n        &\"aggregate( \"\n                &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n                &\"ResultFailCount with sum as FailedCount, \"\n                &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n                &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n                &\"ResultFlakyCount with sum as FlakyCount)) \"\n        &\"/filter(FlakyCount gt 0) \"\n    &\"/compute( \"\n    &\"(FlakyCount div cast(TotalCount, Edm.Decimal)) mul 100 as FlakyRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Creating a Git Repository in a New Folder\nDESCRIPTION: Initialize a new Git repository in a specified folder. This creates a new .git directory with all the necessary repository files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit init foldername\n```\n\n----------------------------------------\n\nTITLE: Secret Variables in Azure File Copy Task\nDESCRIPTION: Example showing how to use secret variables in an Azure File Copy task configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  VMS_USER: $(vmsUser)\n  VMS_PASS: $(vmsAdminPass)\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: AzureFileCopy@4\n  inputs:\n    SourcePath: 'my/path'\n    azureSubscription: 'my-subscription'\n    Destination: 'AzureVMs'\n    storage: 'my-storage'\n    resourceGroup: 'my-rg'\n    vmsAdminUserName: $(VMS_USER)\n    vmsAdminPassword: $(VMS_PASS)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Test Results Summary with Power BI Query\nDESCRIPTION: Power BI query that retrieves test result statistics grouped by test owner. It aggregates result counts (total, passed, failed, not executed, and not impacted) for a specific pipeline and date range.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_10\n\nLANGUAGE: PowerQuery\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/mseng/AzureDevOps/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And DateSK ge {startdate} \"\n      &\"And Workflow eq 'Build'\"\n      &\")/groupby(\"\n      &\"(Test/TestOwner),\"\n      &\"aggregate(\"\n      &\"ResultCount with sum as ResultCount, \"\n      &\"ResultPassCount with sum as ResultPassCount, \"\n      &\"ResultFailCount with sum as ResultFailCount, \"\n      &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n      &\"ResultNotImpactedCount with sum as ResultNotImpactedCount\"\n      &\"))\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Implementing Post-Build Actions in Jenkins Pipeline\nDESCRIPTION: Demonstrates how to use the post section in Jenkins to execute commands after build completion. Shows handling for always, success, and failure conditions using the post block.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-jenkins.md#2025-04-22_snippet_7\n\nLANGUAGE: groovy\nCODE:\n```\npost {\n    always {\n        echo \"The build has finished\"\n    }\n    success {\n        echo \"The build succeeded\"\n    }\n    failure {\n        echo \"The build failed\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Linux Agent as a Service\nDESCRIPTION: The './svc.sh' script is provided to manage the agent as a systemd service. It requires sudo privileges to use systemctl commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh\n```\n\n----------------------------------------\n\nTITLE: Basic Cross-Platform NPM Script Using YAML\nDESCRIPTION: Simple example showing how to run NPM commands using the script keyword, which automatically uses the appropriate shell for each platform.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/cross-platform-scripting.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: |\n    npm install\n    npm test\n```\n\n----------------------------------------\n\nTITLE: Updating Environment Variables for Linux Agent Service\nDESCRIPTION: These commands update the environment variables for the Azure DevOps agent service, typically after installing new software or making changes to the environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n./env.sh\nsudo ./svc.sh stop\nsudo ./svc.sh start\n```\n\n----------------------------------------\n\nTITLE: ARM Template for Managed DevOps Pool\nDESCRIPTION: JSON template defining the structure and properties of a Managed DevOps Pool resource. It includes parameters for pool name, Azure DevOps organization, Dev Center resource ID, image name, pool size, and location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-arm-template.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"parameters\": {\n        \"poolName\": {\n            \"type\": \"string\"\n        },\n        \"adoOrg\": {\n            \"type\": \"string\"\n        },\n        \"devCenterResourceId\": {\n            \"type\": \"string\"\n        },\n        \"imageName\": {\n            \"type\": \"string\"\n        },\n        \"poolSize\": {\n            \"type\": \"int\"\n        },\n        \"location\": {\n            \"type\": \"string\",\n            \"defaultValue\": \"eastus\"\n        }\n    },\n    \"variables\": {},\n    \"resources\": [\n        {\n            \"name\": \"[parameters('poolName')]\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"[parameters('location')]\",\n            \"tags\": {},\n            \"properties\": {\n                \"organizationProfile\": {\n                    \"organizations\": [\n                        {\n                            \"url\": \"[parameters('adoOrg')]\",\n                            \"parallelism\": 1\n                        }\n                    ],\n                    \"permissionProfile\": {\n                        \"kind\": \"CreatorOnly\"\n                    },\n                    \"kind\": \"AzureDevOps\"\n                },\n                \"devCenterProjectResourceId\": \"[parameters('devCenterResourceId')]\",\n                \"maximumConcurrency\": \"[parameters('poolSize')]\",\n                \"agentProfile\": {\n                    \"kind\": \"Stateless\"\n                },\n                \"fabricProfile\": {\n                    \"sku\": {\n                        \"name\": \"Standard_D2ads_v5\"\n                    },\n                    \"images\": [\n                        {\n                            \"wellKnownImageName\": \"[parameters('imageName')]\",\n                            \"buffer\": \"*\"\n                        }\n                    ],\n                    \"kind\": \"Vmss\"\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Publishing and Downloading Artifacts Between Jobs in Azure DevOps Pipeline\nDESCRIPTION: Complete example showing a two-job pipeline that builds, tests, and publishes an artifact in the first job, then downloads and deploys it in the second job. The second job only runs if the first job succeeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\n# test and upload my code as an artifact named WebSite\njobs:\n- job: Build\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - script: npm test\n  - task: PublishBuildArtifacts@1\n    inputs:\n      pathtoPublish: '$(System.DefaultWorkingDirectory)'\n      artifactName: WebSite\n\n# download the artifact and deploy it only if the build job succeeded\n- job: Deploy\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - checkout: none #skip checking out the default repository resource\n  - task: DownloadBuildArtifacts@0\n    displayName: 'Download Build Artifacts'\n    inputs:\n      artifactName: WebSite\n      downloadPath: $(Pipeline.Workspace)\n\n  dependsOn: Build\n  condition: succeeded()\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory using Bash\nDESCRIPTION: Changes the current working directory in a Bash shell to the specified project folder (`python-sample-vscode-flask-tutorial`). This is a standard navigation command required before executing project-specific commands like setting up a virtual environment or running the application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd python-sample-vscode-flask-tutorial\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items Closed Within a Specific Date Range\nDESCRIPTION: This query finds items that are in the Done state and were closed within a specified time period.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/history-and-auditing.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n`State = Done`  \n`And Closed Date > 7/1/2015`  \n`And Closed Date <= 7/21/2015`\n```\n\n----------------------------------------\n\nTITLE: Updating Git Policies with Azure CLI\nDESCRIPTION: This command allows updating existing policies in Azure DevOps Git repositories using a policy configuration file. It requires both the policy ID and the configuration file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy update --config\n                       --id\n                       [--detect {false, true}]\n                       [--org]\n                       [--project]\n                       [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Setting Arguments for PowerShell Task in Azure DevOps Release Pipeline\nDESCRIPTION: Command-line arguments passed to the PowerShell script in the release pipeline. These arguments use release variables to pass the requester's name and build definition name to the script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_15\n\nLANGUAGE: PowerShell\nCODE:\n```\n-greeter \"$(Release.RequestedFor)\" -trigger \"$(Build.DefinitionName)\"\n```\n\n----------------------------------------\n\nTITLE: Finding Service Account Secret Name in Kubernetes 1.22 and Below\nDESCRIPTION: Command to find the secret name associated with a service account in Kubernetes 1.22 and below, used as part of setting up a Kubernetes resource with an existing service account.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-kubernetes.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get serviceAccounts <service-account-name> -n <namespace> -o 'jsonpath={.secrets[*].name}'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Bugs with Duplicate Links using Power BI Query in Azure DevOps\nDESCRIPTION: Power BI M query that retrieves bugs that have a Duplicate link to another bug. The query filters by work item type, state, area path, and the existence of a Duplicate link, including expansion of link relationships.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_6\n\nLANGUAGE: PowerBI M Query\nCODE:\n```\nlet\n    Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'Bug' \"\n            &\"and State ne 'Closed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and Links/any(x:x/LinkTypeName eq 'Duplicate' and x/TargetWorkItem/WorkItemType eq 'Bug') \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath), \"\n            &\"Links( \"\n                &\"$filter=LinkTypeName eq 'Duplicate' \"\n                &\"and TargetWorkItem/WorkItemType eq 'Bug'; \"\n                    &\"$select=LinkTypeName; \"\n                &\"$expand=TargetWorkItem($select=WorkItemType,WorkItemId,Title,State) \"\n            &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal for RBAC using Azure CLI\nDESCRIPTION: Creates an Azure AD service principal using the Azure CLI `az ad sp create-for-rbac` command. This identity is intended for use by automated tools like Azure Pipelines (especially on Azure DevOps Server) to access Azure resources. It assigns the 'contributor' role scoped to a specified resource group, allowing the service principal to manage resources within that group. Placeholders for service principal name, subscription ID, and resource group name must be replaced.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad sp create-for-rbac --display-name <service-principal-name> --role contributor --scopes /subscriptions/<your-subscription-id>/resourceGroups/<your-resource-group>\n```\n\n----------------------------------------\n\nTITLE: Git Cherry-Pick Commit Range Command\nDESCRIPTION: Command to cherry-pick a range of commits using dot notation in Git CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/cherry-pick.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit cherry-pick <oldest-commit ID>^..<newest-commit ID>\n```\n\n----------------------------------------\n\nTITLE: Restoring NuGet Packages with dotnet CLI\nDESCRIPTION: Command to restore NuGet packages using the dotnet CLI. The --interactive flag prompts the user for credentials when needed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/restore-nuget-packages-dotnet.md#2025-04-22_snippet_2\n\nLANGUAGE: CLI\nCODE:\n```\ndotnet restore --interactive\n```\n\n----------------------------------------\n\nTITLE: Listing Repositories with Formatted Output Example\nDESCRIPTION: Example command showing how to list all repositories with tabular output format for the default organization and project configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos list --output table\n```\n\n----------------------------------------\n\nTITLE: Referencing Custom Task with Full Identifier\nDESCRIPTION: Shows how to reference custom tasks using publisher ID and extension ID to avoid naming conflicts with built-in tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: myPublisherId.myExtensionId.myContributionId.myTaskName@1 #format example\n- task: qetza.replacetokens.replacetokens-task.replacetokens@3 #working example\n```\n\n----------------------------------------\n\nTITLE: Example of Resolved Merge Conflict in Git\nDESCRIPTION: Shows how a file might look after resolving merge conflicts by removing the conflict markers and choosing the desired content from both branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/merging.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n- Network controller\n- Fiber optic transmitter\n- Fiber optic transceiver\n- Network switch\n```\n\n----------------------------------------\n\nTITLE: Querying Test Pass Rate Trend Data with OData REST API\nDESCRIPTION: This OData query retrieves test results data from Azure DevOps Analytics REST API to track the pass rate trend of a specific test in a pipeline. It filters by pipeline name, test name, and date range, then groups results by date and calculates the pass rate percentage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-pass-rate-trend-test.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tAnd Date/Date ge {startdate}\n\tAnd Test/TestName eq '{testName}'\n\tAnd Workflow eq 'Build')\n/groupby((Date/Date), \n\taggregate(\n\tResultCount with sum as TotalCount,\n\tResultPassCount with sum as ResultPassCount,\n\tResultFailCount with sum as ResultFailCount,\n\tResultAbortedCount with sum as ResultAbortedCount,\n\tResultErrorCount with sum as ResultErrorCount,\n\tResultInconclusiveCount with sum as ResultInconclusiveCount,\n\tResultNotExecutedCount with sum as ResultNotExecutedCount,\n\tResultNotImpactedCount with sum as ResultNotImpactedCount))\n/filter(ResultFailCount gt 0)\n/compute(\n\tiif(TotalCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(TotalCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resources with CLI\nDESCRIPTION: Series of Azure CLI commands to create resource group, storage account, containers, and key vault.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name $rgName\n\naz storage account create \\\n    --name $storageName \\\n    --resource-group $rgName \\\n    --sku Standard_RAGRS \\\n    --kind StorageV2\n\naz storage container create -n rawdata --account-name $storageName \naz storage container create -n prepareddata --account-name $storageName \n\naz keyvault create \\\n    --name $keyVault \\\n    --resource-group $rgName\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary Trend Filtered by Branch in OData\nDESCRIPTION: This OData query retrieves test run data for a specific pipeline, filtered by branch, aggregating results by date and calculating the pass rate.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestRuns?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tand CompletedOn/Date ge {startdate}\n\tand Workflow eq 'Build')\n/groupby((Branch/BranchName, CompletedOn/Date), \n\taggregate(\n\tResultPassCount with sum as ResultPassCount,\n\tResultNotExecutedCount with sum as ResultNotExecutedCount,\n\tResultCount with sum as ResultCount,\n\tResultNotImpactedCount with sum as ResultNotImpactedCount,\n\tResultFailCount with sum as ResultFailCount))\n/compute(\niif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Creating Maximum File Size Policy using Azure DevOps CLI\nDESCRIPTION: Creates a maximum file size policy for a Git repository using the Azure DevOps CLI. This command defines whether the policy is blocking, enabled, the maximum file size in bytes, and additional configuration options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy file-size create --blocking {false, true}\n                                 --enabled {false, true}\n                                 --maximum-git-blob-size\n                                 --repository-id\n                                 --use-uncompressed-size {false, true}\n                                 [--detect {false, true}]\n                                 [--org]\n                                 [--project]\n                                 [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Selecting Xcode Version on macOS Agent\nDESCRIPTION: This bash command allows manual selection of a specific Xcode version on a Hosted macOS agent pool. It uses sudo to change the active Xcode version before running xcodebuild tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/hosted.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n/bin/bash -c \"sudo xcode-select -s /Applications/Xcode_13.2.app/Contents/Developer\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Credential Helper via Command Line\nDESCRIPTION: Sets the credential.helper option to specify how Git should store credentials for remote operations. Options include in-memory cache or storing credentials in a file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_9\n\nLANGUAGE: console\nCODE:\n```\ngit config credential.helper [cache|store]\n```\n\n----------------------------------------\n\nTITLE: Using @Today Macro with Offset in Azure Boards DateTime Queries\nDESCRIPTION: Shows how to use the `@Today` macro with a numerical offset (`-1`) to specify a relative date (yesterday) in Azure Boards queries involving DateTime fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-operators-variables.md#2025-04-22_snippet_1\n\nLANGUAGE: wiql\nCODE:\n```\n@Today-1\n```\n\n----------------------------------------\n\nTITLE: Complex Branch Trigger Configuration with Include/Exclude in Azure DevOps YAML Pipelines\nDESCRIPTION: Advanced syntax for configuring branch triggers with include and exclude lists. This example triggers on main and releases branches but excludes branches that start with 'releases/old'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ci-triggers1.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# specific branch build\ntrigger:\n  branches:\n    include:\n    - main\n    - releases/*\n    exclude:\n    - releases/old*\n```\n\n----------------------------------------\n\nTITLE: Showing User Details in Azure DevOps CLI\nDESCRIPTION: Command to display detailed information about a specific user in Azure DevOps organization, including their ID, display name, email, license type, access level, and status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/add-organization-users.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops user show --user contoso@contoso.com --output table\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Pass Rate Trend by Pipeline ID in OData\nDESCRIPTION: This OData query retrieves pipeline run data using a specific pipeline ID, calculates pass rates, and groups results by date. It's more stable than using pipeline names as it's not affected by pipeline renaming.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-pass-rate-trend.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n\tPipelineId eq {pipelineId}\n\tand CompletedDate ge {startdate}\n\tand CanceledCount ne 1\n\t)\n/groupby(\n\t(CompletedOn/Date),\n\taggregate\n\t($count as TotalCount,\n\tSucceededCount with sum as SucceededCount ,\n\tFailedCount with sum as FailedCount,\n\tPartiallySucceededCount with sum as PartiallySucceededCount))\n/compute(\nSucceededCount mul 100.0 div TotalCount as PassRate,\nFailedCount mul 100.0 div TotalCount as FailRate,\nPartiallySucceededCount mul 100.0 div TotalCount as PartiallySuccessfulRate)\n&$orderby=CompletedOn/Date asc\n```\n\n----------------------------------------\n\nTITLE: Configuring Yarn Package Caching in Azure Pipelines\nDESCRIPTION: YAML configuration for caching Yarn packages using the Cache@2 task. Caches Yarn's shared cache folder and uses yarn.lock for cache key generation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn\n\nsteps:\n- task: Cache@2\n  inputs:\n    key: 'yarn | \"$(Agent.OS)\" | yarn.lock'\n    restoreKeys: |\n       yarn | \"$(Agent.OS)\"\n       yarn\n    path: $(YARN_CACHE_FOLDER)\n  displayName: Cache Yarn packages\n\n- script: yarn --frozen-lockfile\n```\n\n----------------------------------------\n\nTITLE: Creating Wiki with Azure DevOps CLI\nDESCRIPTION: Command syntax for creating a new wiki in Azure DevOps with optional parameters for specifying wiki type, name, repository, and mapped path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki create [--mapped-path]\n                      [--name]\n                      [--project]\n                      [--repository]\n                      [--subscription]\n                      [--type {codewiki, projectwiki}]\n```\n\n----------------------------------------\n\nTITLE: Viewing Global Git Configuration Settings\nDESCRIPTION: This command displays Git configuration settings that apply to the current user across all repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit config --list --global\n```\n\n----------------------------------------\n\nTITLE: Querying All Revisions for a Specific Work Item\nDESCRIPTION: This example demonstrates how to query the complete revision history for a specific work item using the WorkItemRevisions entity set. This is the recommended approach to access work item history instead of using the blocked Revisions expansion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_12\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItemRevisions?\n  $filter=WorkItemId eq {id}\n  &$select=WorkItemId, Title\n```\n\n----------------------------------------\n\nTITLE: Cloning a Sample PHP Composer Project from GitHub\nDESCRIPTION: Provides the URL to fork a sample PHP project on GitHub that uses Composer. This repository serves as a starting point for setting up an Azure Pipeline for PHP applications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/php.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/Azure-Samples/basic-php-composer\n```\n\n----------------------------------------\n\nTITLE: Changing to Agent Directory\nDESCRIPTION: Example command to change to the directory where the Azure Pipelines Linux agent is installed, assuming it was installed in a subfolder named 'myagent' in the user's home directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd ~/myagent$\n```\n\n----------------------------------------\n\nTITLE: Server-Driven Paging Response Format in Azure DevOps Analytics\nDESCRIPTION: Example of the JSON response format when server-driven paging is applied. The response includes a nextLink property that allows retrieving the next set of items, providing optimal performance for large result sets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_28\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\": \"https://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/$metadata#WorkItems(*)\",\n  \"value\": [\n    ...\n  ],\n  \"@odata.nextLink\":\"https://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?$skiptoken=12345\"}\n```\n\n----------------------------------------\n\nTITLE: Implementing Container-Based Builds in Jenkins and Azure Pipelines\nDESCRIPTION: Shows how to configure container-based builds in both systems, demonstrating how to run a build in an Ubuntu 20.04 container and tests in an Ubuntu 22.04 container with shared volumes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-jenkins.md#2025-04-22_snippet_1\n\nLANGUAGE: groovy\nCODE:\n```\npipeline {\n    agent none\n    stages {\n        stage('Build') {\n            agent {\n                docker {\n                    image 'ubuntu:focal'\n                    args '-v $HOME:/build -w /build'\n                }\n            }\n            steps {\n                sh 'make'\n            }\n        }\n        stage('Test') {\n            agent {\n                docker {\n                    image 'ubuntu:jammy'\n                    args '-v $HOME:/build -w /build'\n                }\n            }\n            steps {\n                sh 'make test'\n            }\n        }\n    }\n}\n```\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: focal\n    image: ubuntu:focal\n  - container: jammy\n    image: ubuntu:jammy\n\njobs:\n- job: build\n  container: focal\n  steps:\n  - script: make\n- job: test\n  dependsOn: build\n  container: jammy\n  steps:\n  - script: make test\n```\n\n----------------------------------------\n\nTITLE: Displaying Bug Work Item Type Image in Markdown\nDESCRIPTION: This snippet shows how to conditionally display an image of the Bug work item type form based on the Azure DevOps version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/manage-bugs.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\">= azure-devops-2020\"\n:::image type=\"content\" source=\"media/manage-bugs/bug-work-item-type.png\" alt-text=\"Screenshot shows a Bug work item type form for Scrum process in Azure DevOps Server 2020 and cloud service.\" lightbox=\"media/manage-bugs/bug-work-item-type.png\":::\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps OAuth 2.0 Refresh Token Response\nDESCRIPTION: This JSON snippet shows the structure of the response received when successfully refreshing an access token using Azure DevOps OAuth 2.0.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"access_token\": { \"access token for this user\" },\n    \"token_type\": { \"type of token\" },\n    \"expires_in\": { \"time in seconds that the token remains valid\" },\n    \"refresh_token\": { \"new refresh token to use when the token has timed out\" }\n}\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Linux Agent Service for Azure DevOps\nDESCRIPTION: This command uninstalls the Azure DevOps agent service on a Linux system. It's recommended to stop the service before uninstalling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh uninstall\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Management via CLI\nDESCRIPTION: The YAML-based multi-stage pipelines can now be managed using the 'az pipelines' command in the Azure CLI. This allows for interactive setup and management of pipelines or automation via scripts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-152-update.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz pipelines\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Settings for Azure DevOps Server\nDESCRIPTION: XML configuration for settings.xml file to set up authentication credentials for Azure Artifacts in on-premises Azure DevOps Server. Includes server configuration with placeholders for collection name and personal access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/pom-and-settings.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<servers>\n  <server>\n    <id>MavenDemo</id>\n    <username><COLLECTION_NAME></username>\n    <password>[PERSONAL_ACCESS_TOKEN]</password>\n  </server>\n</servers>\n```\n\n----------------------------------------\n\nTITLE: Implementing BuildJobs Template for Extended Pipeline\nDESCRIPTION: A simple implementation of the BuildJobs.yml file that is referenced by the extended template using @self. This file is placed in the extending repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\n# Repo: Contoso/MyProduct\n# File: BuildJobs.yml\njobs:\n- job: Build\n  steps: []\n```\n\n----------------------------------------\n\nTITLE: Fetching Dependencies with `go get` (Pre-1.11) in Shell\nDESCRIPTION: A bash script step demonstrating how to use `go get` specifically to download Go project source code and dependencies into the Go workspace (`modulePath`). The flags `-v`, `-t`, and `-d` are used for verbose output, including test dependencies, and downloading only, respectively. This is typically used with older Go versions requiring explicit workspace setup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/go.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- script: go get -v -t -d ./...\n  workingDirectory: '$(modulePath)'\n  displayName: 'go get dependencies'\n```\n\n----------------------------------------\n\nTITLE: Creating Work Item Linking Policy in Azure DevOps using Azure CLI\nDESCRIPTION: This command creates a work item linking policy for a repository or branch in Azure DevOps. It allows configuration of policy settings such as blocking, branch matching, and enabling/disabling the policy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy work-item-linking create --blocking {false, true}\n                                         --branch\n                                         --enabled {false, true}\n                                         --repository-id\n                                         [--branch-match-type {exact, prefix}]\n                                         [--detect {false, true}]\n                                         [--org]\n                                         [--project]\n                                         [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Using tf merge Command in TFVC\nDESCRIPTION: The tf merge command syntax for applying changes from one branch to another in TFVC. It includes various options for controlling the merge operation, such as recursive merging, force merging, and specifying version ranges.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merge-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Command Line\nCODE:\n```\ntf merge [/recursive] [/force] [/candidate] [/discard] \n[/version:versionspec] [/lock:none|checkin|checkout] [/preview] \n[/baseless] [/nosummary] [/noimplicitbaseless] [/conservative] [/format:(brief|detailed)] [/noprompt] [/login:username,[password]] source destination\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth and API Endpoints in Python Flask Application (Python)\nDESCRIPTION: This snippet demonstrates the initial setup for 'app_config.py' in a Python Flask application, focusing on placeholders for OAuth credentials (CLIENT_ID, CLIENT_SECRET), Azure AD AUTHORITY endpoint, default Microsoft Graph API endpoint, scope, and session management type. It includes commentary on securing the CLIENT_SECRET through environment variables and supports multitenant configuration. Inputs include environment variables or hardcoded secrets, and outputs are constants used throughout the application. Requires the 'os' module and is intended for early or test-phase configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/manage-personal-access-tokens-via-api.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport os\n\nCLIENT_ID = \"YOUR_CLIENT_ID_HERE\" \n# Application (client) ID of app registration\n\nCLIENT_SECRET = \"YOUR_CLIENT_SECRET_HERE\" \n# Placeholder - for use ONLY during testing.\n# In a production app, we recommend you use a more secure method of storing your secret,\n# like Azure Key Vault. Or, use an environment variable as described in Flask's documentation:\n# https://flask.palletsprojects.com/en/1.1.x/config/#configuring-from-environment-variables\n# CLIENT_SECRET = os.getenv(\"CLIENT_SECRET\")\n# if not CLIENT_SECRET:\n#     raise ValueError(\"Need to define CLIENT_SECRET environment variable\")\n\nAUTHORITY = \"https://login.microsoftonline.com/YOUR_AAD_TENANT_ID_HERE\"  # For multi-tenant app\n# AUTHORITY = \"https://login.microsoftonline.com/Enter_the_Tenant_Name_Here\"\n\nREDIRECT_PATH = \"/getAToken\"  \n# Used for forming an absolute URL to your redirect URI.\n# The absolute URL must match the redirect URI you set\n# in the app's registration in the Azure portal.\n\nENDPOINT = 'https://graph.microsoft.com/v1.0/users'  \n\nSCOPE = [\"User.ReadBasic.All\"]\n\nSESSION_TYPE = \"filesystem\"  \n# Specifies the token cache should be stored in server-side session\n\n```\n\n----------------------------------------\n\nTITLE: Using Azure DevOps CLI with Windows Hosted Agents (PowerShell)\nDESCRIPTION: This YAML pipeline example demonstrates a complete workflow using Azure DevOps CLI on a Windows hosted agent. It configures defaults, authenticates using System.AccessToken, and runs multiple CLI commands including Git aliases.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: 'windows-latest'\n\nsteps:\n- bash: az --version\n  displayName: 'Show Azure CLI version'\n\n- pwsh: az devops configure --defaults organization='$(System.TeamFoundationCollectionUri)' project='$(System.TeamProject)' --use-git-aliases true\n  displayName: 'Set default Azure DevOps organization and project'\n\n- pwsh: |\n    az pipelines build list\n    git pr list\n  displayName: 'Show build list and PRs'\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n```\n\n----------------------------------------\n\nTITLE: Subscribing to a Specific Pipeline using Teams Command\nDESCRIPTION: Command for subscribing to notifications for a specific pipeline in Azure DevOps using the Azure Pipelines Teams app, referencing a pipeline by its definition ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/microsoft-teams.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n@azure pipelines subscribe https://dev.azure.com/myorg/myproject/_build?definitionId=123\n```\n\n----------------------------------------\n\nTITLE: Branch Merging Script for Azure Pipelines\nDESCRIPTION: A batch script that automatically merges a feature branch to main when run in a build pipeline. It checks if the source is already main, performs the merge with a commit message, and pushes the changes to the remote repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/git-commands.md#2025-04-22_snippet_3\n\nLANGUAGE: bat\nCODE:\n```\n@echo off\nECHO SOURCE BRANCH IS %BUILD_SOURCEBRANCH%\nIF %BUILD_SOURCEBRANCH% == refs/heads/main (\n   ECHO Building main branch so no merge is needed.\n   EXIT\n)\nSET sourceBranch=origin/%BUILD_SOURCEBRANCH:refs/heads/=%\nECHO GIT CHECKOUT MAIN\ngit checkout main\nECHO GIT STATUS\ngit status\nECHO GIT MERGE\ngit merge %sourceBranch% -m \"Merge to main\"\nECHO GIT STATUS\ngit status\nECHO GIT PUSH\ngit push origin\nECHO GIT STATUS\ngit status\n```\n\n----------------------------------------\n\nTITLE: Referencing Azure Subscription in YAML Pipeline\nDESCRIPTION: When using an Azure Resource Manager service connection in a YAML pipeline, you need to reference it using the azureSubscription parameter with the connection name as its value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/azure-resource-manager-alternate-approaches.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription: 'your-connection-name'\n```\n\n----------------------------------------\n\nTITLE: Grouping and Advanced Logical Operators in WIQL Expressions - WIQL\nDESCRIPTION: This example WIQL demonstrates grouping of logical expressions with parentheses, use of AND/OR for complex Boolean logic, and querying work items by project, type, state, creator, and assigned user. No dependencies are required, and it shows how query logic can be nested to combine multiple criteria. Input values (e.g., assigned user, work item states) and output is a filtered set of work items matching all criteria.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_6\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE\n    [System.TeamProject] = @project\n    AND (\n        [System.WorkItemType] <> ''\n        AND [System.State] IN ('Active', 'Approved', 'Committed', 'In Progress')\n        AND (\n            [System.CreatedBy] = ''\n            OR [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\n        )\n    )\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Azure VM Image using Azure CLI\nDESCRIPTION: Creates a reusable custom VM image in Azure based on a previously generalized and deallocated source VM. The resulting image can be used to create new VMs or Virtual Machine Scale Sets for Azure Pipelines agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz image create  --resource-group <myResourceGroup> --name <MyImage> --source <MyVM>\n```\n\n----------------------------------------\n\nTITLE: Restoring Wiki Repository from Recycle Bin\nDESCRIPTION: HTTP PATCH request to restore a deleted wiki repository from the recycle bin using its repository ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/restore-deleted-wiki.md#2025-04-22_snippet_2\n\nLANGUAGE: HTTP\nCODE:\n```\nPATCH https://dev.azure.com/christiechurch/fabrikamfiber/_apis/git/recycleBin/repositories/978e3886-64a8-4b6f-96da-6afc2936b04b?api-version=7.1-preview.1\n```\n\nLANGUAGE: REST API\nCODE:\n```\n{\n    \"deleted\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Stage Condition Example 2\nDESCRIPTION: This example shows how job-level conditions interact with stage-level dependencies. Even though job B has a condition that might evaluate to true, if stage2 is skipped because stage1 was canceled, job B will not run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: stage1\n  jobs:\n  - job: A\n    steps:\n      - script: echo 1; sleep 30\n- stage: stage2\n  jobs:\n  - job: B\n    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n    steps:\n      - script: echo 2\n```\n\n----------------------------------------\n\nTITLE: Using Extension Data Service in Azure DevOps to Store and Retrieve Data\nDESCRIPTION: This snippet demonstrates how to access the Extension Data Service to store user preferences and retrieve documents. It shows setting a user-scoped preference with setValue() and retrieving an organization-scoped document from a collection with getDocument().\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/extend/reference/samples/client-services/ExtensionDataService.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Get the data service\nVSS.getService(VSS.ServiceIds.ExtensionData).then(function(dataService) {\n\t// Set a user-scoped preference\n\tdataService.setValue(\"pref1\", 12345, {scopeType: \"User\"}).then(function(value) {\n\t    console.log(\"User preference value is \" + value);\n\t});\t\t\n\t// Get an organization-scoped document in a collection\n\tdataService.getDocument(\"MyCollection\", \"SomeDocumentId\").then(function(doc) {\n\t    console.log(\"Document is \" + JSON.stringify(doc, null, 2));\n\t});\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring PR Triggers with Path Filters in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to set up pull request triggers with both branch and path filters. It includes specific branches and paths, while excluding certain files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/bitbucket.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  branches:\n    include:\n    - main\n    - releases/*\n  paths:\n    include:\n    - docs\n    exclude:\n    - docs/README.md\n```\n\n----------------------------------------\n\nTITLE: Retrieving Service Account Secret Object in Kubernetes\nDESCRIPTION: Command to get the full secret object in JSON format using the secret name retrieved from the previous step, needed for configuring a non-AKS Kubernetes resource.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-kubernetes.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secret <service-account-secret-name> -n <namespace> -o json\n```\n\n----------------------------------------\n\nTITLE: Referencing Build Number in Scripts with Custom Variables\nDESCRIPTION: Example demonstrating how to reference the build number within a script by either defining a new variable that includes the build number or calling the build number directly using predefined variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/run-number.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Set MyRunNumber\nvariables: \n  MyRunNumber: '1.0.0-CI+$(Build.BuildNumber)'\n\nsteps:\n- script: echo $(MyRunNumber)\n- script: echo $(Build.BuildNumber)\n```\n\n----------------------------------------\n\nTITLE: SSH Config for Custom Key Location\nDESCRIPTION: SSH configuration for using a non-default SSH key location when connecting to Azure DevOps, ensuring only the specified identity is used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nHost ssh.dev.azure.com\n  IdentityFile ~/.ssh/id_rsa_azure\n  IdentitiesOnly yes\n```\n\n----------------------------------------\n\nTITLE: Cloning Additional Repositories in Classic Pipelines\nDESCRIPTION: This snippet shows how to clone additional repositories as part of a classic pipeline. It uses the System.AccessToken to authenticate if the repo is in the same project, or a personal access token for repos in different projects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/azure-repos-git.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone -c http.extraheader=\"AUTHORIZATION: bearer $(System.AccessToken)\" <clone URL>\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit clone -c http.extraheader=\"AUTHORIZATION: basic <BASIC_AUTH_TOKEN>\" <clone URL>\n```\n\n----------------------------------------\n\nTITLE: Defining Azure DevOps Access Control Matrix in Markdown\nDESCRIPTION: A structured markdown table defining access levels (Reader, User, Administrator, Manager) for different user roles (Project Valid Users, Contributors, Administrators, Service Accounts) across various Azure DevOps components at project and organization levels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/default-role-assignments.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"2\":::\n      **Task**\n   :::column-end:::\n   :::column span=\"1\":::\n      **Project Valid Users**\n   :::column-end:::\n   :::column span=\"1\":::\n      **Contributors**\n   :::column-end:::\n   :::column span=\"1\":::\n      **Administrators**\n   :::column-end:::\n   :::column span=\"1\":::\n      **Service Accounts**\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"2\":::\n     Agent pools (project-level)\n   :::column-end:::\n   :::column span=\"1\":::\n      Reader\n   :::column-end:::\n   :::column span=\"1\":::\n      User\n   :::column-end:::\n   :::column span=\"1\":::\n      Administrator\n   :::column-end:::\n   :::column span=\"1\":::\n      Administrator\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Deleting Remote Branch\nDESCRIPTION: Command to delete a branch from the remote repository\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_10\n\nLANGUAGE: git\nCODE:\n```\ngit push origin --delete branchname\n```\n\n----------------------------------------\n\nTITLE: Basic Manual Standby Agent Profile Configuration\nDESCRIPTION: JSON configuration for a basic manual standby agent provisioning scheme. It specifies the time zone and a simple schedule for standby agents on Monday with 1 agent from midnight to 4:00 AM.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Stateless\": {},\n    \"resourcePredictionsProfile\": {\n        \"Manual\": {}\n    },\n    \"resourcePredictions\": {\n        \"timeZone\": \"Eastern Standard Time\",\n        \"daysData\": [\n            {},\n            {\n                \"00:00:00\": 1,\n                \"04:00:00\": 0\n            },\n            {},\n            {},\n            {},\n            {},\n            {}\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Restoring NuGet Packages via CLI\nDESCRIPTION: Command to restore NuGet packages using the NuGet CLI. This command should be run in the project directory after configuring the nuget.config file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/restore-nuget-packages-nuget-exe.md#2025-04-22_snippet_2\n\nLANGUAGE: CLI\nCODE:\n```\nnuget.exe restore\n```\n\n----------------------------------------\n\nTITLE: Maven Project with Vulnerable Dependency\nDESCRIPTION: A Maven POM file example showing a project that depends on jackson-jaxrs-json-provider which has a transitive dependency on a vulnerable version of jackson-databind.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n<project>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.microsoft.customer360</groupId>\n  <artifactId>maven-dependencies</artifactId>\n  <packaging>jar</packaging>\n  <version>1.0-SNAPSHOT</version>\n  <name>maven-dependencies</name>\n  <url>http://maven.apache.org</url>\n  <dependencies>\n    <dependency>\n      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n      <artifactId>jackson-jaxrs-json-provider</artifactId>\n      <version>2.10.3</version>\n    </dependency>\n</project>\n```\n\n----------------------------------------\n\nTITLE: Setting Global User Name and Email in Git Config\nDESCRIPTION: These commands set the user name and email in the global Git configuration file for the current user across all repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_5\n\nLANGUAGE: console\nCODE:\n```\ngit config --global user.name \"Jamal Hartnett\"\ngit config --global user.email \"jamal@fabrikam.com\"\n```\n\n----------------------------------------\n\nTITLE: Archiving and Publishing Build Artifacts in Azure Pipelines for PHP\nDESCRIPTION: This YAML snippet includes two Azure Pipelines tasks. The `ArchiveFiles@2` task bundles files from the specified directory (`$(system.defaultWorkingDirectory)`) into an archive (typically zip). The `PublishBuildArtifacts@1` task then uploads this archive, making it available as a build artifact for later stages or download.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/php.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: ArchiveFiles@2\n  inputs:\n    rootFolderOrFile: '$(system.defaultWorkingDirectory)'\n    includeRootFolder: false\n- task: PublishBuildArtifacts@1\n```\n\n----------------------------------------\n\nTITLE: ARM Template for Manual Standby Agent Configuration\nDESCRIPTION: This ARM template snippet demonstrates how to configure manual standby agents for a managed pool, including time zone and daily schedule settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                ...\n                \"agentProfile\": {\n                    \"kind\": \"Stateless\",\n                    \"resourcePredictionsProfile\": {\n                        \"kind\": \"Manual\"\n                    },\n                    \"resourcePredictions\": {\n                        \"timeZone\": \"Eastern Standard Time\",\n                        \"daysData\": [\n                            {},\n                            {\n                                \"00:00:00\": 1,\n                                \"04:00:00\": 0\n                            },\n                            {},\n                            {},\n                            {},\n                            {},\n                            {}\n                        ]\n                    }\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Path Filters for Branch Policies in Azure DevOps\nDESCRIPTION: Examples of path filter syntax for applying branch policies to specific files or directories in Azure DevOps. Demonstrates absolute paths, wildcards, multiple paths, and exclusions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\n/WebApp/Models/Data.cs\n/WebApp/*\n*/Models/Data.cs\n*.cs\n\n/WebApp/Models/Data.cs;/ClientApp/Models/Data.cs\n\n/WebApp/*;!/WebApp/Tests/*\n!/WebApp/Tests/*\n```\n\n----------------------------------------\n\nTITLE: Configuring npm Package Caching in Azure Pipelines\nDESCRIPTION: YAML configuration for caching npm packages using the Cache@2 task. Caches npm's shared cache directory and uses package-lock.json for cache key generation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  npm_config_cache: $(Pipeline.Workspace)/.npm\n\nsteps:\n- task: Cache@2\n  inputs:\n    key: 'npm | \"$(Agent.OS)\" | package-lock.json'\n    restoreKeys: |\n       npm | \"$(Agent.OS)\"\n    path: $(npm_config_cache)\n  displayName: Cache npm\n\n- script: npm ci\n```\n\n----------------------------------------\n\nTITLE: Naming the Azure Pipeline Service Connection - azurecli-interactive\nDESCRIPTION: This snippet shows the prompt for naming the Azure Pipeline service connection, which is used to authenticate and enable communication between Azure Pipelines and the GitHub repository. 'ContosoPipelineServiceConnection' is given as the example name to use. This step is necessary for connecting the CI/CD pipeline to the external code source securely.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nEnter a service connection name to create? ContosoPipelineServiceConnection\n```\n\n----------------------------------------\n\nTITLE: Moving Work Items Using Azure DevOps CLI\nDESCRIPTION: Command to move a work item to a different area path using Azure DevOps CLI. This example moves work item ID 148 to the 'Fabrikam Fiber\\Production Planning' area path with YAML output format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/move-work-items.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item update --id 148 --area \"Fabrikam Fiber\\Production Planning\" --output yaml\n```\n\n----------------------------------------\n\nTITLE: SSH MAC Error Message\nDESCRIPTION: Error output when SSH client cannot negotiate with the server due to no matching MAC (Message Authentication Code) algorithm.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_10\n\nLANGUAGE: output\nCODE:\n```\nUnable to negotiate with <IP> port 22: no matching MAC found. Their offer: hmac-sha2-256,hmac-sha2-512\n```\n\n----------------------------------------\n\nTITLE: Disabling Default CI/PR Triggers in Azure DevOps Pipeline\nDESCRIPTION: YAML configuration to disable both continuous integration and pull request triggers, making the pipeline run only on schedule. This prevents the pipeline from running when changes are pushed or PRs are created.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: none\npr: none\n```\n\n----------------------------------------\n\nTITLE: Rollup Story Points to Epics from User Stories (OData Query)\nDESCRIPTION: OData query that retrieves Epics and rolls up Story Points from descendant User Stories. This query filters for Epics in a specific area that have at least one descendant work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $filter=WorkItemType eq 'Epic'\n        and State ne 'Cut'\n        and startswith(Area/AreaPath,'{areapath}')\n        and Descendants/any()\n    &$select=WorkItemId,Title,WorkItemType,State,AreaSK\n    &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\n        Descendants(\n        $apply=filter(WorkItemType eq 'User Story')\n        /aggregate(StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Piping PAT Token to Azure DevOps CLI Login from Variable - Azure CLI\nDESCRIPTION: Demonstrates non-interactive login by piping a PAT token, allowing automation tools or shell scripts to supply the token without user intervention. The token value, '######', can be replaced by environment variables or CI/CD pipeline variables. Requires the Azure CLI with the Azure DevOps extension. Standard input is used for the PAT, and the '--organization' parameter defines the target organization. Intended for automation and pipeline scenarios where interactive input is unavailable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/log-in-via-pat.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\necho  \"######\" | az devops login --organization https://dev.azure.com/contoso/\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary by Test Owner in Power BI\nDESCRIPTION: Power BI query that retrieves test result summary data grouped by test owner. This query enables filtering test results by specific test owners, providing visibility into test ownership and performance accountability across the team.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_8\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/mseng/AzureDevOps/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And DateSK ge {startdate} \"\n      &\"And Workflow eq 'Build'\"\n      &\")/groupby(\"\n      &\"(Test/TestOwner),\"\n      &\"aggregate(\"\n      &\"ResultCount with sum as ResultCount, \"\n      &\"ResultPassCount with sum as ResultPassCount, \"\n      &\"ResultFailCount with sum as ResultFailCount, \"\n      &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n      &\"ResultNotImpactedCount with sum as ResultNotImpactedCount\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: PowerShell Script for Configuring and Running Azure Pipelines Agent\nDESCRIPTION: This PowerShell script downloads, configures, and runs the Azure Pipelines agent in a Windows container. It handles environment variables, agent installation, and cleanup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\nfunction Print-Header ($header) {\n  Write-Host \"`n${header}`n\" -ForegroundColor Cyan\n}\n\nif (-not (Test-Path Env:AZP_URL)) {\n  Write-Error \"error: missing AZP_URL environment variable\"\n  exit 1\n}\n\nif (-not (Test-Path Env:AZP_TOKEN_FILE)) {\n  if (-not (Test-Path Env:AZP_TOKEN)) {\n    Write-Error \"error: missing AZP_TOKEN environment variable\"\n    exit 1\n  }\n\n  $Env:AZP_TOKEN_FILE = \"\\azp\\.token\"\n  $Env:AZP_TOKEN | Out-File -FilePath $Env:AZP_TOKEN_FILE\n}\n\nRemove-Item Env:AZP_TOKEN\n\nif ((Test-Path Env:AZP_WORK) -and -not (Test-Path $Env:AZP_WORK)) {\n  New-Item $Env:AZP_WORK -ItemType directory | Out-Null\n}\n\nNew-Item \"\\azp\\agent\" -ItemType directory | Out-Null\n\n# Let the agent ignore the token env variables\n$Env:VSO_AGENT_IGNORE = \"AZP_TOKEN,AZP_TOKEN_FILE\"\n\nSet-Location agent\n\nPrint-Header \"1. Determining matching Azure Pipelines agent...\"\n\n$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(\":$(Get-Content ${Env:AZP_TOKEN_FILE})\"))\n$package = Invoke-RestMethod -Headers @{Authorization=(\"Basic $base64AuthInfo\")} \"$(${Env:AZP_URL})/_apis/distributedtask/packages/agent?platform=win-x64&`$top=1\"\n$packageUrl = $package[0].Value.downloadUrl\n\nWrite-Host $packageUrl\n\nPrint-Header \"2. Downloading and installing Azure Pipelines agent...\"\n\n$wc = New-Object System.Net.WebClient\n$wc.DownloadFile($packageUrl, \"$(Get-Location)\\agent.zip\")\n\nExpand-Archive -Path \"agent.zip\" -DestinationPath \"\\azp\\agent\"\n\ntry {\n  Print-Header \"3. Configuring Azure Pipelines agent...\"\n\n  .\\config.cmd --unattended `\n    --agent \"$(if (Test-Path Env:AZP_AGENT_NAME) { ${Env:AZP_AGENT_NAME} } else { hostname })\" `\n    --url \"$(${Env:AZP_URL})\" `\n    --auth PAT `\n    --token \"$(Get-Content ${Env:AZP_TOKEN_FILE})\" `\n    --pool \"$(if (Test-Path Env:AZP_POOL) { ${Env:AZP_POOL} } else { 'Default' })\" `\n    --work \"$(if (Test-Path Env:AZP_WORK) { ${Env:AZP_WORK} } else { '_work' })\" `\n    --replace\n\n  Print-Header \"4. Running Azure Pipelines agent...\"\n\n  .\\run.cmd\n} finally {\n  Print-Header \"Cleanup. Removing Azure Pipelines agent...\"\n\n  .\\config.cmd remove --unattended `\n    --auth PAT `\n    --token \"$(Get-Content ${Env:AZP_TOKEN_FILE})\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Organization URL Using Node.js\nDESCRIPTION: This Node.js code snippet demonstrates how to get the base URL for an Azure DevOps organization using the request library.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = require('request');\n\nlet getOrgUrl = function(orgName, callback) {\n    let resourceAreaUrl = 'https://dev.azure.com/_apis/resourceAreas/79134C72-4A58-4B42-976C-04E7115F32BF?' + \n      'accountName=' + orgName +\n      '&api-version=5.0-preview.1';\n    \n    request(resourceAreaUrl, { json: true }, (err, res, body) => {\n        if (err) { \n            callback(err);   \n        } else {\n            callback(null, body.locationUrl);\n        }\n    });\n};\n\ngetOrgUrl('fabrikam', (err, url) => {\n    console.log(url);\n});\n```\n\n----------------------------------------\n\nTITLE: TFVC Branches Command File Example\nDESCRIPTION: Demonstrates how to display branch history for a specific file in the local workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branches-command.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf branches 314.cs\n```\n\n----------------------------------------\n\nTITLE: Displaying GitHub Comment Trigger Commands in Markdown\nDESCRIPTION: This markdown table shows the supported comment commands for triggering Azure Pipelines builds from GitHub pull requests. It includes commands for getting help, running all pipelines, and running specific pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| Command | Result |\n| - | - |\n| `/AzurePipelines help` | Display help for all supported commands. |\n| `/AzurePipelines help <command-name>` | Display help for the specified command. |\n| `/AzurePipelines run` | Run all pipelines that are associated with this repository and whose triggers don't exclude this pull request. |\n| `/AzurePipelines run <pipeline-name>` | Run the specified pipeline unless its triggers exclude this pull request. |\n```\n\n----------------------------------------\n\nTITLE: Audit Log JSON for Approval Reassignment\nDESCRIPTION: Example of the JSON audit log entry created when a pipeline approval is reassigned from one user or group to another. The log contains details about who performed the reassignment, the original and new approvers, and any comments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-212-update.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"Id\": \"2517368925862632546;00000264-0000-8888-8000-000000000000;839ad1ba-f72b-4258-bc3f-88be7a4553b5\",\n        \"CorrelationId\": \"aaaa0000-bb11-2222-33cc-444444dddddd\",\n        \"ActivityId\": \"a298a06c-965f-4e60-9643-2593f2066e37\",\n        \"ActorCUID\": \"fe950802-bf07-755b-826d-e8dcc066252c\",\n        \"ActorUserId\": \"fe950802-bf07-755b-826d-e8dcc066252c\",\n        \"ActorUPN\": \"silviu@fabrikam.app\",\n        \"AuthenticationMechanism\": \"AAD_Cookie\",\n        \"Timestamp\": \"2022-10-10T11:26:53.7367453Z\",\n        \"ScopeType\": \"Organization\",\n        \"ScopeDisplayName\": \"Fabrikam (Organization)\",\n        \"ScopeId\": \"547a7316-cdf4-40d2-af16-3215f97d053e\",\n        \"ProjectId\": \"4bf16944-3595-421f-9947-79d9eb190284\",\n        \"ProjectName\": \"FabrikamFiber\",\n        \"IpAddress\": \"127.0.0.1\",\n        \"UserAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36 Edg/106.0.1370.37\",\n        \"ActionId\": \"ApproverReassigned\",\n        \"Data\": {\n            \"ApprovalId\": \"dae6e7c9-2a10-4cd8-b63a-579a6e7ba78d\",\n            \"OldApproverUserId\": \"692b6e2a-dd61-4872-866a-85498da390fc\",\n            \"OldApproverDisplayName\": \"[FabrikamFiber]\\\\Build Administrators\",\n            \"NewApproverUserId\": \"fe95080b-bf07-655b-226d-e8dcc066252c\",\n            \"NewApproverDisplayName\": \"Jack Fabrikam\",\n            \"Comment\": \"All admins are OOO\"\n        },\n        \"Details\": \"Reassigned approver of Approval dae6e7c9-9a10-4cd8-b63a-579a6e7ba78d in Project \\\"FabrikamFiber\\\" from \\\"[FabrikamFiber]\\\\Build Administrators\\\" to \\\"Jack Fabrikam\\\" with comment \\\"All admins are OOO\\\".\",\n        \"Area\": \"Checks\",\n        \"Category\": \"Modify\",\n        \"CategoryDisplayName\": \"Modify\",\n        \"ActorDisplayName\": \"Silviu\"\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Target Task Input Injection in vss-extension.json for Azure Pipeline Decorators\nDESCRIPTION: This JSON snippet demonstrates how to modify the vss-extension.json manifest file to specify target task input injection for Azure Pipeline decorators. It includes the configuration of contributions, targets, and properties such as template, targettask, and targettaskinputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-pipeline-decorator.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": \"my-required-task\",\n            \"type\": \"ms.azure-pipelines.pipeline-decorator\",\n            \"targets\": [\n                \"ms.azure-pipelines-agent-job.pre-task-tasks\",\n                \"ms.azure-pipelines-agent-job.post-task-tasks\"\n            ],\n            \"properties\": {\n                \"template\": \"my-decorator.yml\",\n                \"targettask\": \"target-task-id\",\n                \"targettaskinputs\": [\"target-task-input\", \"target-task-second-input\"]\n            }\n        }\n    ],\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Creating Required Reviewer Policy\nDESCRIPTION: Practical example of creating a required reviewer policy for the main branch, setting Jamal Hartnett as a required reviewer in the Fabrikam repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy required-reviewer create --blocking true --branch main --enabled true --message \"Please review.\" --repository-id d28cd374-e7f0-4b1f-ad60-f349f155d47c --required-reviewer-ids fabrikamfiber4@hotmail.com --output table\n```\n\n----------------------------------------\n\nTITLE: Stopping macOS Agent Service\nDESCRIPTION: Command to stop the macOS agent running as a launchd service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh stop\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Provisioning Profile on macOS - Shell\nDESCRIPTION: This shell command copies a given provisioning profile into the directory used by Xcode and related tools on macOS, allowing code signing and provisioning to occur automatically. Replace <profile> with the profile path and <UUID> with the profile's UUID (usually the filename without extension). The command should be executed on the build agent to ensure the provisioning profile is correctly registered for all builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/mobile/app-signing.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nsudo cp <profile> ~/Library/MobileDevice/Provisioning Profiles/<UUID>.mobileprovision\n```\n\n----------------------------------------\n\nTITLE: Syncing Changes Between Source and Destination Git Repositories\nDESCRIPTION: A series of Git commands to sync changes from a source repository to a destination repository in Azure Repos. This process involves cloning the repository, adding remotes, fetching changes, and pushing updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/import-git-repository.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngit clone --bare <Azure-Repos-clone-URL>.git\ncd <name-of-repo>\ngit remote add --mirror=fetch upstream <original-repo-URL>\ngit fetch upstream --tags\ngit push origin --all\n```\n\n----------------------------------------\n\nTITLE: Restoring a Deleted Project with PowerShell in Azure DevOps\nDESCRIPTION: PowerShell script to restore a specific deleted project by name. This script first finds the project in the list of deleted projects, then sends a PATCH request to change its state to 'wellFormed'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/delete-project.md#2025-04-22_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n$collectionUrl = \"https://localhost/defaultcollection\"\n$projectName = 'Project1'\n$project = (irm -Uri \"$collectionUrl/_apis/projects?stateFilter=\ndeleted&api-version=5.0-preview.3\" -UseDefaultCredentials).value\n | where {$_.name -eq $projectName}\nirm -Uri ($project.url + \"?api-version=5.0-preview.3\") \n-UseDefaultCredentials -Method PATCH -Body '{\"state\":\"wellFormed\"}'\n -ContentType 'application/json'\n```\n\n----------------------------------------\n\nTITLE: Configuring ARM Template for Azure DevOps Server 2022.0 and Earlier\nDESCRIPTION: JSON ARM template for Azure DevOps Server 2022.0 and earlier versions, with a different AgentMajorVersion parameter format. This template follows the same structure as the newer version but uses 'auto|N' as the acceptable values for agent version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deployment-groups/howto-provision-deployment-group-agents.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"name\": \"[concat(parameters('vmNamePrefix'),copyIndex(),'/TeamServicesAgent')]\",\n    \"type\": \"Microsoft.Compute/virtualMachines/extensions\",\n    \"location\": \"[parameters('location')]\",\n    \"apiVersion\": \"2015-06-15\",\n    \"dependsOn\": [\n        \"[resourceId('Microsoft.Compute/virtualMachines/',\n                      concat(parameters('vmNamePrefix'),copyindex()))]\"\n    ],\n    \"properties\": {\n      \"publisher\": \"Microsoft.VisualStudio.Services\",\n      \"type\": \"TeamServicesAgent\",\n      \"typeHandlerVersion\": \"1.0\",\n      \"autoUpgradeMinorVersion\": true,\n      \"settings\": {\n        \"VSTSAccountName\": \"[parameters('VSTSAccountName')]\",\n        \"TeamProject\": \"[parameters('TeamProject')]\",\n        \"DeploymentGroup\": \"[parameters('DeploymentGroup')]\",\n        \"AgentName\": \"[parameters('AgentName')]\",\n        \"AgentMajorVersion\": \"auto|N\",\n        \"Tags\": \"[parameters('Tags')]\"\n      },\n      \"protectedSettings\": {\n      \"PATToken\": \"[parameters('PATToken')]\"\n     }\n   }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Publishing DACPAC to Azure SQL Database Using SQLPackage\nDESCRIPTION: This command line instruction uses SQLPackage.exe to publish a DACPAC file to an Azure SQL Database. It will create the database if it doesn't exist, or update an existing database. It requires the source DACPAC file, target server name, database name, username, and password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_8\n\nLANGUAGE: Command Line\nCODE:\n```\nSqlPackage.exe /SourceFile:\"E:\\dacpac\\ajyadb.dacpac\" /Action:Publish /TargetServerName:\"DemoSqlServer.database.windows.net.placeholder\"\n/TargetDatabaseName:\"Testdb4\" /TargetUser:\"ajay\" /TargetPassword:\"SQLPassword\"\n```\n\n----------------------------------------\n\nTITLE: Extracting Azure SQL Database to DACPAC Using SQLPackage\nDESCRIPTION: This command line instruction uses SQLPackage.exe to extract a database schema from a live Azure SQL Database into a DACPAC file. It requires the target file path, source server name, database name, username, and password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_7\n\nLANGUAGE: Command Line\nCODE:\n```\nSqlPackage.exe /TargetFile:\"C:\\temp\\test.dacpac\" /Action:Extract /SourceServerName:\"DemoSqlServer.database.windows.net.placeholder\"\n /SourceDatabaseName:\"Testdb\" /SourceUser:\"ajay\" /SourcePassword:\"SQLPassword\"\n```\n\n----------------------------------------\n\nTITLE: Applying a Kubernetes Manifest File - Bash\nDESCRIPTION: Executes the kubectl apply command to create or update resources defined in the ReplicationController.yml (actually a Deployment manifest) in the configured Kubernetes cluster. Assumes the manifest file has been customized as needed and is present in the current directory. The command will create the deployment, secrets, and any other referenced resources in the target namespace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ReplicationController.yml\n```\n\n----------------------------------------\n\nTITLE: Recursive Variable Expansion in YAML\nDESCRIPTION: Demonstrates how variables referenced using $( ) syntax are recursively expanded on the agent. This allows for variable values to reference other variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  myInner: someValue\n  myOuter: $(myInner)\n\nsteps:\n- script: echo $(myOuter)  # prints \"someValue\"\n  displayName: Variable is $(myOuter)  # display name is \"Variable is someValue\"\n```\n\n----------------------------------------\n\nTITLE: Adding Condition to Publish Pipeline Artifacts Task in YAML\nDESCRIPTION: This YAML snippet adds a condition to the PublishPipelineArtifact task, ensuring it only executes when building the main branch and the previous tasks have succeeded.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/ci-build-git.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishPipelineArtifact@1\n  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))\n```\n\n----------------------------------------\n\nTITLE: Switching Between YAML and Classic Pipelines in GitHub Repository Setup\nDESCRIPTION: This tabbed interface allows users to choose between YAML and Classic pipeline configuration instructions when setting up GitHub repository access in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# [YAML](#tab/yaml/)\n\nYou create a new pipeline by first selecting a GitHub repository and then a YAML file in that repository. The repository in which the YAML file is present is called `self` repository. By default, this is the repository that your pipeline builds. \n\nYou can later configure your pipeline to check out a different repository or multiple repositories. To learn how to do this, see [multi-repo checkout](multi-repo-checkout.md).\n\n# [Classic](#tab/classic/)\n\nYou create a new pipeline by first selecting **GitHub** for repository type, and then one of the repositories you have access to.\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven POM for Azure DevOps Server\nDESCRIPTION: XML configuration for pom.xml file to connect to Azure Artifacts feed in on-premises Azure DevOps Server. Includes repository and distribution management settings with placeholders for server, collection, project and feed names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/pom-and-settings.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<repositories>\n  <repository>\n    <id>MavenDemo</id>\n    <url>http://<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1</url>\n    <releases>\n      <enabled>true</enabled>\n    </releases>\n    <snapshots>\n      <enabled>true</enabled>\n    </snapshots>\n  </repository>\n</repositories>\n<distributionManagement>\n  <repository>\n    <id>MavenDemo</id>\n    <url>http://<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1</url>\n    <releases>\n      <enabled>true</enabled>\n    </releases>\n    <snapshots>\n      <enabled>true</enabled>\n    </snapshots>\n  </repository>\n</distributionManagement>\n```\n\n----------------------------------------\n\nTITLE: Creating Required Reviewer Policy in Azure DevOps CLI\nDESCRIPTION: Command to create a new required reviewer policy using Azure DevOps CLI. Includes parameters for blocking status, branch specification, repository ID, and reviewer configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy required-reviewer create --blocking {false, true}\n                                         --branch\n                                         --enabled {false, true}\n                                         --message\n                                         --repository-id\n                                         --required-reviewer-ids\n                                         [--branch-match-type {exact, prefix}]\n                                         [--detect {false, true}]\n                                         [--org]\n                                         [--path-filter]\n                                         [--project]\n                                         [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Querying Weekly Bug Trends (Friday Snapshots) with OData\nDESCRIPTION: This OData query retrieves bug trend data with weekly snapshots taken every Friday. This reduces the data volume and improves query performance while still providing meaningful trend information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-bugtrend.md#2025-04-22_snippet_5\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \n        $apply=filter(\n            WorkItemType eq 'Bug'\n            and State ne 'Closed'\n            and startswith(Area/AreaPath,'{areapath}')\n            and DateValue ge {startdate}\n            and Date/DayName eq 'Friday' \n        )\n        /groupby(\n            (DateValue,State,WorkItemType,Priority,Severity,Area/AreaPath,Iteration/IterationPath,AreaSK),\n            aggregate($count as Count)\n        )\n```\n\n----------------------------------------\n\nTITLE: Using NOT Operator in WIQL Queries\nDESCRIPTION: Demonstrates using the NOT CONTAINS operator to exclude specific criteria while including others, filtering for work items that were assigned to one user but not containing another user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_29\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT [System.Id], [System.Title] \nFROM WorkItems \nWHERE [System.TeamProject] = @project \nAND [System.AssignedTo] EVER 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\nAND [System.AssignedTo] NOT CONTAINS 'Raisa Pokrovskaya <fabrikamfiber5@hotmail.com>'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kubernetes Server URL with kubectl\nDESCRIPTION: Command to retrieve the server URL of a Kubernetes cluster using kubectl, which is needed when configuring a non-AKS Kubernetes resource in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-kubernetes.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config view --minify -o 'jsonpath={.clusters[0].cluster.server}'\n```\n\n----------------------------------------\n\nTITLE: Updating Existing Retention Lease in Multi-stage Pipeline (PowerShell)\nDESCRIPTION: This YAML snippet defines a 'Release' stage that depends on the 'Build' stage. It includes a PowerShell task that updates the retention lease created in the previous stage. The task retrieves the `newLeaseId` output variable and uses the PATCH method with the Azure DevOps REST API to update the lease's validity (e.g., to 1 year upon successful release). Requires the System.AccessToken.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/run-retention.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- stage: Release\n  dependsOn: Build\n  jobs:\n  - job: default\n    variables:\n    - name: NewLeaseId\n      value: $[ stageDependencies.Build.default.outputs['RetainOnSuccess.newLeaseId']]\n    steps:\n    - task: PowerShell@2\n      condition: and(succeeded(), not(canceled()))\n      name: RetainOnSuccess\n      displayName: Retain on Success\n      inputs:\n        failOnStderr: true\n        targetType: 'inline'\n        script: |\n          $contentType = \"application/json\";\n          $headers = @{ Authorization = 'Bearer $(System.AccessToken)' };\n          $rawRequest = @{ daysValid = 365 };\n          $request = ConvertTo-Json $rawRequest;\n          $uri = \"$(System.CollectionUri)$(System.TeamProject)/_apis/build/retention/leases/$(newLeaseId)?api-version=7.1-preview.2\";\n          Invoke-RestMethod -uri $uri -method PATCH -Headers $headers -ContentType $contentType -Body $request;\n```\n\n----------------------------------------\n\nTITLE: Packaging Azure DevOps Extension\nDESCRIPTION: Command to package an Azure DevOps extension using the TFX CLI tool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_19\n\nLANGUAGE: PowerShell\nCODE:\n```\ntfx extension create --manifest-globs vss-extension.json\n```\n\n----------------------------------------\n\nTITLE: Controlling Container Start/Stop in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates advanced control over container lifecycle in Azure Pipelines. The resource containers section defines a 'builder' container, and pipeline steps run scripts inside it or stop it using the Docker@2 task. Dependencies include the Docker@2 Azure Pipelines task and a Linux agent with Docker installed. Key parameters are 'container' for identifying resources and task inputs for specifying Docker commands. Inputs are standard YAML syntax with steps and resource definitions; outputs are controlled start/stop of containers, and the possibility to inspect container IDs via Agent.ContainerMapping. Steps running after the container is stopped and targeting it will fail.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-174-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\nresources:\n  containers:\n    - container: builder\n      image: ubuntu:18.04\nsteps:\n  - script: echo \"I can run inside the container (it starts by default)\"\n    target:\n      container: builder\n  - task: Docker@2\n    inputs:\n      command: stop\n      container: builder\n# if any step tried to run in the container here, it would fail\n```\n\n----------------------------------------\n\nTITLE: Git Cherry-Pick Without Auto-Commit Command\nDESCRIPTION: Command to cherry-pick multiple commits without automatically creating commit messages, allowing manual commit creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/cherry-pick.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ngit cherry-pick -n <commit1 ID> <commit2 ID>\n```\n\n----------------------------------------\n\nTITLE: Git Version Output Example in Azure DevOps Pipeline Logs\nDESCRIPTION: A sample log output showing how Azure DevOps reports the Git version being used during the checkout process in a pipeline run. This example demonstrates how to verify which Git version is being utilized.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/system-prefer-git-from-path.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nSyncing repository: PathFilter (Git)\nPrepending Path environment variable with directory containing 'git.exe'.\ngit version\ngit version 2.26.2.windows.1\n```\n\n----------------------------------------\n\nTITLE: Approving a Pull Request using Azure CLI\nDESCRIPTION: This example shows how to approve pull request #21 using the Azure CLI. The command returns a table with the voter's information and vote status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/review-pull-requests.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr set-vote --id 21 --vote approve --output table\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Cargo Service Connection Parameters\nDESCRIPTION: Table defining the configuration parameters needed to set up a Cargo service connection for artifact repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/service-endpoints.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Parameter | Description |\n| --------- | ----------- |\n| Authentication method | Choose the authentication method to the artifacts repository: **Basic username/password (including Azure DevOps PATs)** or **Authorization value (including crates.io tokens)**. |\n| Repository URL | Required. URL for the repository. For crates.io, use `https://crates.io` |\n| Username | Required when Basic authentication is selected. Username for connecting to the endpoint. The value can be arbitrary if using personal access tokens or the Authorization value authentication method. |\n| Password | Required when Basic authentication is selected. Password for connecting to the endpoint. Personal access tokens are applicable for Azure DevOps Services organizations. |\n| Token | Required when **Authorization value** authentication is selected. |\n| Service connection name | Name for the service connection |\n| Connection name | Required. The name you use to refer to the service connection in task properties. If you're using YAML, use the name as the **azureSubscription** or the equivalent subscription name value in the script. |\n| Description | Optional. The description of the service connection. |\n| Security | Optional. Select **Grant access permission to all pipelines** to allow all pipelines to use this connection. If you don't select this option, you must explicitly authorize the service connection for each pipeline that uses it. |\n```\n\n----------------------------------------\n\nTITLE: Updating Work Item Assignment Using Azure DevOps CLI\nDESCRIPTION: This command updates a work item by assigning it to a specific user. It requires the work item ID, the user's email address, and organization/project information unless defaults have been configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/manage-work-items.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item update --id <work-item-id> --assigned-to <user-email> --org https://dev.azure.com/<organization-name> --project <project-name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Code Scanning Pipeline with Explicit and Inferred Repository Publishing\nDESCRIPTION: This YAML snippet demonstrates how to set up a pipeline for code scanning using GitHub Advanced Security. It includes two jobs: one with explicit repository definition for SARIF submission, and another that infers the repository from the working directory. The pipeline also includes steps for checking out code, running a template analyzer, and publishing results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-code-scanning-troubleshoot.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  - main\n\nresources:\n  repositories:\n    - repository: BicepGoat\n      type: git\n      name: BicepGoat\n      ref: refs/heads/main\n      trigger:\n        - main\n\njobs:\n  # Explicit - `advancedsecurity.publish.repository` explicitly defines the repository to submit SARIF to.\n  - job: \"AdvancedSecurityCodeScanningExplicit\"\n    displayName: \"🛡 Infrastructure-as-Code Scanning (Explicit)\"\n    variables:\n      advancedsecurity.publish.repository: $[ convertToJson(resources.repositories['BicepGoat']) ]\n    steps:\n      - checkout: BicepGoat\n      - task: TemplateAnalyzerSarif@1\n        displayName: Scan with Template Analyzer\n      - task: AdvancedSecurity-Publish@1\n        displayName: Publish to IaC Scanning Results to Advanced Security\n\n\n  # Infer - `advancedsecurity.publish.repository.infer` specifies that the `AdvancedSecurity-Publish` must\n  # infer repository to submit SARIF to from the working directory on the build agent.\n  - job: \"AdvancedSecurityCodeScanningInfer\"\n    displayName: \"🛡 Infrastructure-as-Code Scanning (Infer)\"\n    variables:\n      advancedsecurity.publish.repository.infer: true\n    steps:\n      - checkout: BicepGoat\n      - task: TemplateAnalyzerSarif@1\n        displayName: Scan with Template Analyzer\n      - task: AdvancedSecurity-Publish@1\n        displayName: Publish to IaC Scanning Results to Advanced Security\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration for Release Workflow with OData\nDESCRIPTION: This OData query retrieves test duration data for a specific pipeline with any workflow. It groups data by test and workflow, calculating execution counts and duration metrics.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And Date/Date ge {startdate}'\n)/groupby(\n    (TestSK, Test/TestName, Workflow),\n    aggregate(\n        ResultCount with sum as TotalCount,\n        ResultDurationSeconds with sum as TotalDuration\n    )\n)/compute(\n    TotalDuration div TotalCount as AvgDuration\n)\n```\n\n----------------------------------------\n\nTITLE: Operating System Matrix in Azure Pipelines\nDESCRIPTION: Azure Pipelines configuration for running the same script across multiple operating systems. This uses the strategy matrix pattern to define different VM images and then references those images in the pool configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  matrix:\n    linux:\n      imageName: 'ubuntu-latest'\n    mac:\n      imageName: 'macOS-latest'\n    windows:\n      imageName: 'windows-latest'\n\npool:\n  vmImage: $(imageName)\n\nsteps:\n- script: echo Hello, world!\n```\n\n----------------------------------------\n\nTITLE: Creating a Git Commit via Command Line\nDESCRIPTION: This snippet demonstrates how to create a Git commit using the command line interface. It uses the 'git commit' command with the '-m' flag to specify a commit message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/commits.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ngit commit -m \"<commit message>\"\n```\n\n----------------------------------------\n\nTITLE: Code Block - Field Usage Table Display\nDESCRIPTION: Markdown table structure showing field names and their usage descriptions for work item tracking in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/create-your-backlog.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      **Field**\n   :::column-end:::\n   :::column span=\"3\":::\n      **Usage**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Extension Manifest\nDESCRIPTION: JSON manifest file (vss-extension.json) that defines the extension properties, contributions, and files for an Azure DevOps dashboard widget. Contains essential configuration like extension ID, version, publisher details, and widget specifications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"manifestVersion\": 1,\n    \"id\": \"azure-devops-extensions-myExtensions\",\n    \"version\": \"1.0.0\",\n    \"name\": \"My First Set of Widgets\",\n    \"description\": \"Samples containing different widgets extending dashboards\",\n    \"publisher\": \"fabrikam\",\n    \"categories\": [\"Azure Boards\"],\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services\"\n        }\n    ],\n    \"icons\": {\n        \"default\": \"img/logo.png\"\n    },\n    \"contributions\": [\n        {\n            \"id\": \"HelloWorldWidget\",\n            \"type\": \"ms.vss-dashboards-web.widget\",\n            \"targets\": [\n                \"ms.vss-dashboards-web.widget-catalog\"\n            ],\n            \"properties\": {\n                \"name\": \"Hello World Widget\",\n                \"description\": \"My first widget\",\n                \"catalogIconUrl\": \"img/CatalogIcon.png\",\n                \"previewImageUrl\": \"img/preview.png\",\n                \"uri\": \"hello-world.html\",\n                \"supportedSizes\": [\n                    {\n                        \"rowSpan\": 1,\n                        \"columnSpan\": 2\n                    }\n                ],\n                \"supportedScopes\": [\"project_team\"]\n            }\n        }\n    ],\n    \"files\": [\n        {\n            \"path\": \"hello-world.html\",\n            \"addressable\": true\n        },\n        {\n            \"path\": \"sdk/scripts\",\n            \"addressable\": true\n        },\n        {\n            \"path\": \"img\",\n            \"addressable\": true\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Azure CLI Version in Bash\nDESCRIPTION: Command to verify the installed version of Azure CLI. The required version is 2.0.49 or newer.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/prerequisites-cli.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz --version\n```\n\n----------------------------------------\n\nTITLE: Adding a Page to Work Item Form in JSON\nDESCRIPTION: This JSON snippet defines a contribution to add a custom page (tab) to the work item form. It specifies the page's name and URI for content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-workitem-extension.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"contributions\": [\n    {  \n        \"id\": \"sample-work-item-form-page\",\n        \"type\": \"ms.vss-work-web.work-item-form-page\",\n        \"description\": \"Custom work item form page\",\n        \"targets\": [\n            \"ms.vss-work-web.work-item-form\"\n        ],\n        \"properties\": {\n            \"name\": \"My Page\",\n            \"uri\": \"workItemPage.html\"\n        } \n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Example of Updating Case Enforcement Policy\nDESCRIPTION: A concrete example showing how to update a case enforcement policy in the Fabrikam repository to disable enforcement. The example uses the default organization and project configuration and outputs the result in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy case-enforcement update --blocking false --enabled false --policy-id 40 --output table\n```\n\n----------------------------------------\n\nTITLE: Basic Success and Failure Handling in Azure Pipelines\nDESCRIPTION: Azure Pipelines configuration showing how to execute different scripts based on the success or failure of a previous step. This uses Azure Pipelines' condition property to control step execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: ./build.sh\n- script: echo Success\n  condition: succeeded()\n- script: echo Failed\n  condition: failed()\n```\n\n----------------------------------------\n\nTITLE: Variable Group Details Output in YAML Format\nDESCRIPTION: Sample YAML output showing the complete details of a variable group including its ID, name, description, type, and all variables with their values and secret status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nauthorized: false\ndescription: Variables for my new app\nid: 4\nname: my-new-variables\nproviderData: null\ntype: Vsts\nvariables:\n  app-location:\n    isSecret: null\n    value: home-office\n  app-name:\n    isSecret: null\n    value: contoso\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Agent Diagnostics in PowerShell\nDESCRIPTION: Executes a diagnostic suite for troubleshooting issues with a self-hosted Azure Pipelines agent. This feature is available from agent version 2.165.0 onwards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/windows-agent.md#2025-04-22_snippet_5\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\run --diagnostics\n```\n\n----------------------------------------\n\nTITLE: Importing New and Updating Existing Azure DevOps Work Items via CSV\nDESCRIPTION: This CSV example illustrates how to use a single file to both update existing Azure DevOps work items and create new ones. Existing items are identified by their 'ID' (e.g., 16504 to 16508), while new items have the 'ID' field left empty (e.g., the last 'Epic' entry). The import process will update items with IDs and create new items for those without.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/import-work-items-from-csv.md#2025-04-22_snippet_5\n\nLANGUAGE: csv\nCODE:\n```\nID,Work Item Type,Title,Assigned To,State,Priority,Tags\n\"16504\",\"Issue\",\"Fix issues with code\",,\"To Do\",\"1\",\n\"16505\",\"Issue\",\"Merge testing modules\",,\"To Do\",\"3\",\n\"16506\",\"Issue\",\"Open private preview for select customers\",,\"To Do\",\"2\",\n\"16507\",\"Issue\",\"Enable feature for customer champs\",,\"To Do\",\"2\",\n\"16508\",\"Issue\",\"Remove old test code\",,\"To Do\",\"2\",\n,\"Epic\",\"Track Telemetry for data imports\",,\"To Do\",\"2\",\n```\n\n----------------------------------------\n\nTITLE: Print All Available Variables in Pipeline\nDESCRIPTION: Uses the env command to print all available variables in a pipeline. This is useful for debugging variable availability or checking variable names, especially in execution strategies like matrix jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n- script: env\n  displayName: 'Print all variables'\n```\n\n----------------------------------------\n\nTITLE: Publishing Artifacts in YAML Azure Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to publish the contents of the 'bin' directory as an artifact named 'binaries' using the new 'publish' keyword in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-153-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- publish: bin\n  artifact: binaries\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Capabilities to Azure Boards Work Items in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Capabilities' to Azure Boards 'Work item'. It notes that Capabilities are defined, planned, and tracked similarly to Epics and Features within work items and backlogs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Capabilities\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Work item**](safe-concepts.md#work-items). You define, plan, and track Capabilities similar to Epics and Features. You capture them in work items and within various team backlogs. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Querying Task Duration Trend by Pipeline Name in OData\nDESCRIPTION: OData query to get the 80th percentile task duration trend for a specific pipeline and task, filtered by date range and successful runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelinename}'\n    and TaskDisplayName eq '{taskname}'\n    and PipelineRunCompletedOn/Date ge {startdate}\n    and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded')\n    and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1)\n    )\n/compute(\n    percentile_cont(ActivityDurationSeconds, 0.8, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds)\n/groupby(\n    (TaskDuration80thPercentileInSeconds, PipelineRunCompletedOn/Date))\n&$orderby=PipelineRunCompletedOn/Date asc\n```\n\n----------------------------------------\n\nTITLE: Allowing Specific Variable Setting in Azure Pipelines Step (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to configure an Azure Pipelines step to allow setting only a specific list of variables ('things', 'stuff') via logging commands. Using `target.settableVariables` with an array of variable names restricts the `setVariable` logging command within the script step to only modify these explicitly permitted variables, enhancing pipeline security and control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-184-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: echo hello\n  target:\n    settableVariables:\n    - things\n    - stuff\n```\n\n----------------------------------------\n\nTITLE: Branch Mirroring Pipeline Configuration in Azure DevOps\nDESCRIPTION: YAML pipeline configuration for mirroring changes between old and new default branches. This pipeline runs on Ubuntu, checks out the repository with credentials, and pushes changes to both the old (master) and new (main) default branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/change-default-branch.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  branches:\n    include:\n    - main\n    - master\n \npool: { vmImage: ubuntu-latest }\nsteps:\n- checkout: self\n  persistCredentials: true\n- script: |\n    git checkout $(Build.SourceBranchName)\n    git push origin HEAD:master HEAD:main\n  displayName: Mirror old and new default branches\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Organization with Azure CLI\nDESCRIPTION: This Azure CLI command creates a Managed DevOps Pool, specifying the organization profile using a JSON file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_4\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz mdp pool create \\\n   --organization-profile organization-profile.json\n   # other parameters omitted for space\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Branches Command Syntax\nDESCRIPTION: Shows the fundamental syntax for the tf branches command including parameters for version, collection URL, and login credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branches-command.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntf branches itemspec [/version:versionspec] [/collection:TeamProjectCollectionUrl] [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Installing NuGet Packages from Package Manager Console\nDESCRIPTION: This snippet illustrates the pattern for installing NuGet packages via the Package Manager Console in Visual Studio. Users copy the Install-Package command from NuGet.org and execute it in the console.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/install-nuget-packages-with-visual-studio.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nInstall-Package\n```\n\n----------------------------------------\n\nTITLE: Pipeline Resources and Template Parameters API Response - JSON\nDESCRIPTION: Example response body from the Pipelines Runs REST API showing repository, pipeline, and container resources along with template parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-209-update.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resources\":\n{\n    \"repositories\":\n    {\n        \"self\":\n        {\n            \"repository\":\n            {\n                \"id\": \"e5c55144-277b-49e3-9905-2dc162e3f663\",\n                \"type\": \"azureReposGit\"\n            },\n            \"refName\": \"refs/heads/main\",\n            \"version\": \"44153346ecdbbf66c68c20fadf27f53ea1394db7\"\n        },\n        \"MyFirstProject\":\n        {\n            \"repository\":\n            {\n                \"id\": \"e5c55144-277b-49e3-9905-2dc162e3f663\",\n                \"type\": \"azureReposGit\"\n            },\n            \"refName\": \"refs/heads/main\",\n            \"version\": \"44153346ecdbbf66c68c20fadf27f53ea1394db7\"\n        }\n    },\n    \"pipelines\":\n    {\n        \"SourcePipelineResource\":\n        {\n            \"pipeline\":\n            {\n                \"url\": \"https://dev.azure.com/fabrikam/20317ad0-ae49-4588-ae92-6263028b4d83/_apis/pipelines/51?revision=3\",\n                \"id\": 51,\n                \"revision\": 3,\n                \"name\": \"SourcePipeline\",\n                \"folder\": \"\\\\source\"\n            },\n            \"version\": \"20220801.1\"\n        }\n    },\n    \"containers\":\n    {\n        \"windowscontainer\":\n        {\n            \"container\":\n            {\n                \"environment\":\n                {\n                    \"Test\": \"test\"\n                },\n                \"mapDockerSocket\": false,\n                \"image\": \"mcr.microsoft.com/windows/servercore:ltsc2019\",\n                \"options\": \"-e 'another_test=tst'\",\n                \"volumes\":\n                [\n                    \"C:\\\\Users\\\\fabrikamuser\\\\mount-fabrikam:c:\\\\mount-fabrikam\"\n                ],\n                \"ports\":\n                [\n                    \"8080:80\",\n                    \"6379\"\n                ]\n            }\n        }\n    }\n},\n\"templateParameters\":\n{\n    \"includeTemplateSteps\": \"True\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Output Variables in Same Job Using PowerShell\nDESCRIPTION: Sets two variables in PowerShell: a regular variable 'myJobVar' and an output variable 'myOutputJobVar' with isOutput=true. This demonstrates the two ways to set variables for use in the same job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - powershell: |\n     Write-Host \"##vso[task.setvariable variable=myJobVar]this is the same job\"\n  - powershell: |\n     Write-Host \"##vso[task.setvariable variable=myOutputJobVar;isOutput=true]this is the same job too\"\n    name: setOutput\n```\n\n----------------------------------------\n\nTITLE: YAML Pipeline with Clean Checkout Parameter\nDESCRIPTION: Defines a YAML pipeline that uses a runtime parameter to control the clean checkout behavior. The pipeline includes a boolean parameter that can be toggled when manually running the pipeline to determine whether the repository should be cleaned before checkout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: clean\n  displayName: Checkout clean\n  type: boolean\n  default: true\n  values:\n  - false\n  - true\n\ntrigger:\n- main\n\npool: FabrikamPool\n#  vmImage: 'ubuntu-latest'\n\nsteps:\n- checkout: self\n  clean: ${{ parameters.clean }}\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Run Stage State Changed Event (JSON)\nDESCRIPTION: This JSON object is a sample payload for the 'ms.vss-pipelines.stage-state-changed-event' in Azure DevOps Pipelines. It includes event details, publisher ID ('pipelines'), messages, and comprehensive resource information about the stage (links, ID, name, state, result), the associated run (pipeline details, state, result, timestamps, ID, name), the pipeline itself, repository details (including commit info), resource version, and container IDs (collection, account, project). This event fires when a pipeline stage changes state (e.g., starts, completes, fails).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000ac1dd6da-af30-43cb-8434-e1005864b0a3\",\n  \"eventType\": \"ms.vss-pipelines.stage-state-changed-event\",\n  \"publisherId\": \"pipelines\",\n  \"message\": {\n    \"text\": \"Run 2 stage __default succeeded.\",\n    \"html\": \"Run 2 stage <a href=\\\"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=2\\\">__default</a> succeeded.\",\n    \"markdown\": \"Run 2 stage [__default](https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=2) succeeded.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Run 2 stage __default succeeded.\",\n    \"html\": \"Run 2 stage <a href=\\\"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=2\\\">__default</a> succeeded.\",\n    \"markdown\": \"Run 2 stage [__default](https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=2) succeeded.\"\n  },\n  \"resource\": {\n    \"stage\": {\n      \"_links\": {\n        \"web\": {\n          \"href\": \"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=2\"\n        },\n        \"pipeline.web\": {\n          \"href\": \"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/definition?definitionId=2\"\n        }\n      },\n      \"id\": \"00000000-0000-0000-0000-00000000000000000000-0000-0000-0000-000000000000\",\n      \"name\": \"__default\",\n      \"displayName\": null,\n      \"state\": \"completed\",\n      \"result\": \"succeeded\"\n    },\n    \"run\": {\n      \"pipeline\": {\n        \"url\": \"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_apis/Pipelines/2?revision=2\",\n        \"id\": 2,\n        \"revision\": 2,\n        \"name\": \"TEST-CI\",\n        \"folder\": \"\\\\\"\n      },\n      \"state\": \"completed\",\n      \"result\": \"succeeded\",\n      \"createdDate\": \"2019-12-13T06:10:10.164Z\",\n      \"finishedDate\": \"2019-12-13T06:10:10.164Z\",\n      \"id\": 2,\n      \"name\": \"2\"\n    },\n    \"pipeline\": {\n      \"url\": \"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_apis/Pipelines/2?revision=2\",\n      \"id\": 2,\n      \"revision\": 2,\n      \"name\": \"TEST-CI\",\n      \"folder\": \"\\\\\"\n    },\n    \"repositories\": [\n      {\n        \"type\": \"Git\",\n        \"change\":\n        {\n          \"author\":\n          {\n            \"name\": \"Fabrikam John\",\n            \"email\": \"john@fabrikamfiber.com\",\n            \"date\": \"2024-11-11T15:09:21Z\"\n          },\n          \"committer\":\n          {\n            \"name\": \"Fabrikam John\",\n            \"email\": \"john@fabrikamfiber.com\",\n            \"date\": \"2024-11-11T15:09:21Z\"\n          },\n          \"message\": \"Added Viva support\"\n        },\n        \"url\": \"https://fabrikamfiber@dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_git/fabrikamfiber\"\n      }\n    ]\n  },\n  \"resourceVersion\": \"5.1-preview.1\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2019-12-13T06:10:10.186Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Cloud-Specific Documentation Block\nDESCRIPTION: Markdown conditional block for Azure DevOps cloud-specific content using moniker range syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/quick-ref.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"azure-devops\"  \n\nYou customize work item types using the Inheritance process model. \n<br/> \n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault with Azure CLI\nDESCRIPTION: Command to create a new Azure Key Vault within the specified resource group. This creates the secure storage for secrets that will be accessed by pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-in-own-project.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault create \\\n  --name <your-key-vault-name> \\\n  --resource-group <your-resource-group>\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Configuration for ASP.NET Build\nDESCRIPTION: YAML configuration for building ASP.NET projects in Azure Pipelines. Includes NuGet package restoration, VSBuild tasks, and configures build platform and configuration settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/aspnet/build-aspnet-4.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# ASP.NET\n# Build and test ASP.NET projects.\n# Add steps that publish symbols, save build artifacts, deploy, and more:\n# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4\n\ntrigger:\n- main\n\npool:\n  vmImage: 'windows-latest'\n\nvariables:\n  solution: '**/*.sln'\n  buildPlatform: 'Any CPU'\n  buildConfiguration: 'Release'\n\nsteps:\n- task: NuGetToolInstaller@1\n\n- task: NuGetCommand@2\n  inputs:\n    restoreSolution: '$(solution)'\n\n- task: VSBuild@1\n  inputs:\n    solution: '$(solution)'\n    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactStagingDirectory)\"'\n    platform: '$(buildPlatform)'\n    configuration: '$(buildConfiguration)'\n```\n\n----------------------------------------\n\nTITLE: Creating a Default Pull Request Template in Markdown\nDESCRIPTION: This snippet shows an example of a default pull request template in Markdown format. It includes a checklist for contributors to ensure code quality and adherence to standards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-request-templates.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nThank you for your contribution to the Fabrikam Fiber repo. \nBefore submitting this PR, please make sure:\n\n- [ ] Your code builds clean without any errors or warnings\n- [ ] You are using approved terminology\n- [ ] You have added unit tests\n```\n\n----------------------------------------\n\nTITLE: Downloading Artifacts in YAML Azure Pipeline\nDESCRIPTION: This YAML snippet shows how to download an artifact named 'binaries' from the current pipeline using the new 'download' keyword in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-153-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- download: current\n  artifact: binaries\n```\n\n----------------------------------------\n\nTITLE: Updating a Variable Group with Azure DevOps CLI\nDESCRIPTION: Command to update an existing variable group's name and description using its ID. This example updates group ID 4 with a new name and description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group update --group-id 4\n                                   --name my-new-variables\n                                   --description \"New home office variables\"\n                                   --output table\n```\n\n----------------------------------------\n\nTITLE: Creating a Git Repository from an Existing Visual Studio Solution\nDESCRIPTION: Initialize a Git repository for an existing Visual Studio solution, creating an initial commit with all solution files. This allows you to start tracking changes in an existing Visual Studio project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit init foldername\ncd foldername\ngit add --all\ngit commit -m \"Initial commit\"\n```\n\n----------------------------------------\n\nTITLE: Adding Reviewers to an Existing PR with Azure DevOps CLI\nDESCRIPTION: This command syntax shows how to add reviewers to an existing pull request using the Azure DevOps CLI. It includes all available parameters for the reviewer add operation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-requests.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr reviewer add --id\n                         --reviewers\n                         [--detect {false, true}]\n                         [--org]\n                         [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Example: Validating a Work Item Type XML Definition\nDESCRIPTION: This example validates the XML definition of a work item type without actually importing it. Useful for checking syntax and structure before applying changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_10\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin importwitd /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /f:myworkitem.xml /p:AdventureWorks /v\n```\n\n----------------------------------------\n\nTITLE: Setting Key Vault Secret\nDESCRIPTION: Azure CLI command to create a new secret in the Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/azure-key-vault.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault secret set \\\n  --name <YOUR_SECRET_NAME> \\\n  --value <YOUR_ACTUAL_SECRET> \\\n  --vault-name <YOUR_KEY_VAULT_NAME>\n```\n\n----------------------------------------\n\nTITLE: Using UNDER Operator for Classification Paths in WIQL\nDESCRIPTION: Demonstrates using the UNDER operator to filter work items that belong to a specific area path hierarchy, finding all items under a particular area path node.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_31\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT [System.Id], [System.Title] \nFROM WorkItems \nWHERE [System.TeamProject] = @project \nAND [System.AssignedTo] EVER 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\nAND [System.AreaPath] UNDER 'Agile1\\Area 0'\n```\n\n----------------------------------------\n\nTITLE: Custom Script for Fetching Git Submodules with Authentication\nDESCRIPTION: Bash script that demonstrates how to fetch Git submodules when the default checkout options can't be used, such as when different credentials are needed for submodules or when repositories are in different organizations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/source-options.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit -c http.https://<url of submodule repository>.extraheader=\"AUTHORIZATION: Basic <BASE64_ENCODED_STRING>\" submodule update --init --recursive\n```\n\n----------------------------------------\n\nTITLE: Constructing Security Token for Project Permissions in Azure DevOps\nDESCRIPTION: Example of constructing a security token to manage project-related permissions in Azure DevOps. The token is built using the project ID obtained from the 'az devops project show' command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n$PROJECT:vstfs:///Classification/TeamProject/xxxxxxxx-a1de-4bc8-b751-188eea17c3ba\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Runs by Pipeline Name with OData\nDESCRIPTION: OData query that retrieves pipeline runs for a specific pipeline name from a specified start date, aggregating counts of different outcomes including succeeded, failed, partially succeeded, and canceled runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tand CompletedDate ge {startdate}\n\t)\n/aggregate(\n\t$count as TotalCount,\n\tSucceededCount with sum as SucceededCount ,\n\tFailedCount with sum as FailedCount,\n\tPartiallySucceededCount with sum as PartiallySucceededCount ,\n\tCanceledCount with sum as CanceledCount\n\t)\n```\n\n----------------------------------------\n\nTITLE: Pipeline Variables Configuration\nDESCRIPTION: YAML configuration for pipeline variables including secret variable mapping\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  ARM_PASS: $(adminPass)\n\ntrigger:\n- none\n\npool:\n  vmImage: 'ubuntu-latest'\n```\n\n----------------------------------------\n\nTITLE: Configuring Headers for Basic Azure Function Check in JSON\nDESCRIPTION: This JSON snippet defines the required headers for configuring a basic Azure Function check in Azure Pipelines. It includes various system variables and an access token for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/invoke-checks.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Content-Type\":\"application/json\", \n    \"PlanUrl\": \"$(system.CollectionUri)\", \n    \"ProjectId\": \"$(system.TeamProjectId)\", \n    \"HubName\": \"$(system.HostType)\", \n    \"PlanId\": \"$(system.PlanId)\", \n    \"JobId\": \"$(system.JobId)\", \n    \"TimelineId\": \"$(system.TimelineId)\", \n    \"TaskInstanceId\": \"$(system.TaskInstanceId)\", \n    \"AuthToken\": \"$(system.AccessToken)\",\n    \"BuildId\": \"$(build.BuildId)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Was Ever Assigned To (Flat List Query) - WIQL\nDESCRIPTION: This WIQL example retrieves all work items that were ever assigned to a specific user by using the EVER operator in the WHERE clause. It includes a SELECT statement specifying output columns (Id, Title, State, IterationPath) and a FROM clause. No external dependencies required, but the EVER operator is supported only in newer Azure DevOps instances. Returns a list of work item records matching the historical assignment condition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_8\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT\n    [System.Id],\n    [System.Title],\n    [System.State],\n    [System.IterationPath]\nFROM workitems\nWHERE\n    [System.TeamProject] = @project\n    AND [System.WorkItemType] <> ''\n    AND EVER [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\n```\n\n----------------------------------------\n\nTITLE: Extension Manifest Configuration with BaseUri\nDESCRIPTION: Example of configuring an extension manifest with baseUri property and hub contribution for external hosting. Shows how to specify the base URL and define a hub contribution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/static-content.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"baseUri\": \"https://myservice.net/extension\",\n    \"contributions\": [\n        {\n             \"id\": \"Fabrikam.HelloWorld\",\n             \"type\": \"ms.vss-web.hub\",\n             \"targets\": [\n                 \"ms.vss-work-web.work-hub-group\"\n             ],\n             \"properties\": {\n                 \"name\": \"Hello\",\n                 \"uri\": \"hello-world.html\"\n             }\n         }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle Repository for Azure Artifacts\nDESCRIPTION: Gradle configuration snippet to add to build.gradle file to connect to an Azure Artifacts feed with basic authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_3\n\nLANGUAGE: command\nCODE:\n```\nmaven {\n    url 'https://pkgs.dev.azure.com/[ORGANIZATION-NAME]/_packaging/[FEED-NAME]/maven/v1'\n    name '[FEED-NAME]'\n    authentication {\n        basic(BasicAuthentication)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Service Principal Authentication in Windows\nDESCRIPTION: PowerShell script to configure environment variables for Service Principal authentication with Azure Artifacts feeds using certificate-based authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/nuget-exe.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$env:ARTIFACTS_CREDENTIALPROVIDER_FEED_ENDPOINTS = @'{\n    \"endpointCredentials\": [\n        {\n            \"endpoint\": \"<FEED_URL>\",\n            \"clientId\": \"<SERVICE_PRINCIPAL_APPLICATION_(CLIENT)_ID>\",\n            \"clientCertificateSubjectName\": \"<SERVICE_PRINCIPAL_CERTIFICATE_NAME>\",\n            \"clientCertificateFilePath\": \"<SERVICE_PRINCIPAL_CERTIFICATE_PATH>\"\n        }\n    ]\n}'@\n```\n\n----------------------------------------\n\nTITLE: Publishing Example with Auto-Incrementing Version\nDESCRIPTION: Example of publishing an extension with TFX CLI that includes the --rev-version flag to automatically increment the patch version number when an update is being published.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/command-line.md#2025-04-22_snippet_4\n\nLANGUAGE: Command\nCODE:\n```\nC:\\vso-team-calendar>tfx extension publish --publisher publishFabrikam --manifest-js fabrikam.config.js --share-with fabrikam --rev-version\nCopyright Microsoft Corporation\n> Personal access token:\nChecking if this extension is already published\nIt is, update the extension\nWaiting for server to validate extension package...\nSharing extension with fabrikam.\n\n=== Completed operation: publish extension ===\n - Packaging: C:\\vso-team-calendar\\fabrikam.team-calendar-0.2.6.vsix\n - Publishing: success\n - Sharing: shared with fabrikam\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Provisioning Profile in Azure DevOps Pipeline - YAML\nDESCRIPTION: This YAML snippet demonstrates adding the InstallAppleProvisioningProfile@1 pipeline task for installing a provisioning profile before executing build tasks. The provProfileSecureFile input must be set to the uploaded provisioning profile, and removeProfile is set to false to retain the profile on the agent between builds. Requires the provisioning profile to be uploaded as a secure file within Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/mobile/app-signing.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: InstallAppleProvisioningProfile@1\n    inputs:\n      provProfileSecureFile: '<secure-file.mobileprovision>'\n      removeProfile: false\n```\n\n----------------------------------------\n\nTITLE: Installing Development Dependencies using npm Script in YAML\nDESCRIPTION: Executes the `npm install --only=dev` command within a script step in an Azure Pipelines YAML file. This installs only the packages listed under `devDependencies` in the project's `package.json`. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- script: npm install --only=dev\n```\n\n----------------------------------------\n\nTITLE: Container Port Validation in Rego\nDESCRIPTION: Policy to check for and prevent usage of forbidden ports in container images\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/artifact-policy.md#2025-04-22_snippet_2\n\nLANGUAGE: rego\nCODE:\n```\nforbiddenPorts = {\n    \"80\",\n    \"22\"\n}\n\ncheckExposedPorts[errors] {\n    trace(sprintf(\"Checking for forbidden exposed ports: %s\", [concat(\", \", forbiddenPorts)]))\n    layerInfos := values[index].image.image.layerInfo\n    layerInfos[x].directive == \"EXPOSE\"\n    resourceUri := values[index].image.resourceUri\n    image := fetchImage(resourceUri)\n    ports := layerInfos[x].arguments\n    trace(sprintf(\"exposed ports: %s\", [ports]))\n    forbiddenPorts[ports]\n    errors := sprintf(\"%s: image exposes forbidden port %s\", [image,ports])\n}\n\nfetchRegistry(uri) = reg {\n    out := regex.find_n(\"//.*/\", uri, 1)\n    reg = trim(out[0], \"/\")\n}\n\nfetchImage(uri) = img {\n    out := regex.find_n(\"/.*@\", uri, 1)\n    img := trim(out[0], \"/@\")\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Host Path to Inner Docker Container - Bash\nDESCRIPTION: Similar to the previous snippet, but used in cases where a Docker container is run from within another container (Docker-in-Docker). The -v parameter again mounts a host directory into the inner container. As before, <path-on-host> and <path-on-inner-container> must be replaced with real paths. This command assumes the host Docker daemon is available to both outer and inner containers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ndocker run ... -v \"<path-on-host>:<path-on-inner-container>\" ...\n```\n\n----------------------------------------\n\nTITLE: Installing Azure CLI with Python Dependencies (PowerShell)\nDESCRIPTION: YAML configuration for installing Azure CLI using Python with PowerShell commands. Sets up Python environment and installs Azure CLI with required dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\n# Specify python version if you have side-by-side versions\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '3.x'\n    architecture: 'x64'\n\n# Update pip to latest\n- pwsh: python -m pip install --upgrade pip\n  displayName: 'Upgrade pip'\n\n# Update to latest Azure CLI version, min version required for Azure DevOps is 2.10.1\n- pwsh: pip install --pre azure-cli\n  displayName: 'Upgrade Azure CLI'\n```\n\n----------------------------------------\n\nTITLE: Querying Sprint Burndown for User Stories by Area Path in OData\nDESCRIPTION: This OData query retrieves workitem snapshot data for a sprint burndown chart, focusing on User Stories in a specific area path for the current iteration. It filters by state category and groups data by relevant fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-sprintburndown.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \n        $apply=filter(\n            WorkItemType eq 'User Story'\n            and startswith(Area/AreaPath,'{areapath}')\n            and StateCategory ne 'Completed'\n            and DateValue ge Iteration/StartDate\n            and DateValue le Iteration/EndDate\n            and Iteration/StartDate le now() \n            and Iteration/EndDate ge now()\n        )\n        /groupby(\n            (DateValue,State,WorkItemType,Priority,Area/AreaPath,Iteration/IterationPath),\n            aggregate($count as Count, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Adding Conditional Execution to Pipeline Decorator\nDESCRIPTION: Enhanced YAML template that uses conditions to control when the decorator runs, based on the branch and existing tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-pipeline-decorator.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- ${{ if and(eq(resources.repositories['self'].ref, resources.repositories['self'].defaultBranch), not(containsValue(job.steps.*.task.id, 'd9bafed4-0b18-4f58-968d-86655b4d2ce9'))) }}:\n  - script: dir\n    displayName: 'Run my script (injected from decorator)'\n```\n\n----------------------------------------\n\nTITLE: Setting up NPM package restore before dependency scanning in JavaScript\nDESCRIPTION: YAML snippet demonstrating how to configure a pipeline to install NPM packages before running the AdvancedSecurity-Dependency-Scanning task for a JavaScript project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning-troubleshoot.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Npm@1\n  displayName: 'npm install'\n  inputs:\n    command: 'install'\n    workingDir: '$(System.DefaultWorkingDirectory)'\n\n- task: AdvancedSecurity-Dependency-Scanning@1\n```\n\n----------------------------------------\n\nTITLE: Updating a Remote URL in Git\nDESCRIPTION: Change the URL of an existing remote in your Git repository. This is useful when a repository has been renamed or moved to a different location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit remote set-url name url\n```\n\n----------------------------------------\n\nTITLE: Configuring Project-scoped Feed in nuget.config\nDESCRIPTION: XML configuration for connecting to a project-scoped feed in Azure DevOps. This configuration includes project-specific settings and should be placed in a nuget.config file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/restore-nuget-packages-nuget-exe.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<SOURCE_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Cloning SVN Repository with Custom Layout Using git-svn\nDESCRIPTION: Git command to clone a Subversion repository with a custom directory structure. This command allows you to specify custom paths for the trunk, branches, and tags directories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit svn clone [\"SVN repo URL\"] --prefix=svn/ --no-metadata --trunk=/trunk --branches=/branches --tags=/tags  --authors-file \"authors-transform.txt\" c:\\mytempdir\n```\n\n----------------------------------------\n\nTITLE: Setting Variables in Shell Script for Azure DevOps Pipelines\nDESCRIPTION: Demonstrates how to set regular and secret variables using a Shell script in Azure DevOps pipelines. The script uses the task.setvariable logging command to define variables for subsequent tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/set-variables-in-scripts.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"##vso[task.setvariable variable=sauce]crushed tomatoes\"\necho \"##vso[task.setvariable variable=secret.Sauce;issecret=true]crushed tomatoes with garlic\"\n```\n\n----------------------------------------\n\nTITLE: Using GLOBAL Token for Collection-Scoped Group in XML Process\nDESCRIPTION: Example of using the [GLOBAL] token to reference a collection-scoped security group in a field rule. This makes the Title field read-only for all Project Collection Valid Users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD name=\"Title\">\n    <READONLY for=\"[GLOBAL]\\Project Collection Valid Users\"/>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Switching Branches in Git\nDESCRIPTION: This command allows you to switch to a different branch in your Git repository. It changes the working directory to match the selected branch or commit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_7\n\nLANGUAGE: console\nCODE:\n```\ngit checkout <branch>\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Artifacts Keyring for Python\nDESCRIPTION: Command to install the Azure Artifacts keyring, which is required for authenticating with Azure Artifacts feeds. This should be run for first-time setup on a machine.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/project-setup-python.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\npip install keyring artifacts-keyring\n```\n\n----------------------------------------\n\nTITLE: Analytics OData Feed URL Format\nDESCRIPTION: URL format patterns for connecting to Azure DevOps Analytics OData feed. Shows both organization-level and project-level URL structures.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/access-analytics-power-bi.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/\n```\n\n----------------------------------------\n\nTITLE: Required Parameter Validation in Azure Pipelines\nDESCRIPTION: Demonstrates how to implement validation for required parameters in a template using Bash script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-parameters.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# File: steps/msbuild.yml\n\nparameters:\n- name: 'solution'\n  default: ''\n  type: string\n\nsteps:\n- bash: |\n    if [ -z \"$SOLUTION\" ]; then\n      echo \"##vso[task.logissue type=error;]Missing template parameter \\\"solution\\\"\"\n      echo \"##vso[task.complete result=Failed;]\"\n    fi\n  env:\n    SOLUTION: ${{ parameters.solution }}\n  displayName: Check for required parameters\n- task: msbuild@1\n  inputs:\n    solution: ${{ parameters.solution }}\n- task: vstest@2\n  inputs:\n    solution: ${{ parameters.solution }}\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\n\n# This will fail since it doesn't set the \"solution\" parameter to anything,\n# so the template will use its default of an empty string\nsteps:\n- template: steps/msbuild.yml\n```\n\n----------------------------------------\n\nTITLE: Using Build.RequestedForEmail Variable in Azure DevOps Pipelines\nDESCRIPTION: Provides the email address of the user for whom the build was requested (refer to identity variable details). It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_21\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.RequestedForEmail\n```\n\n----------------------------------------\n\nTITLE: Importing a Git Repository using Azure CLI\nDESCRIPTION: Commands for importing a Git repository using the Azure CLI 'az repos import' command. This approach requires first creating an empty repository in Azure DevOps and provides options for authentication, organization specification, and handling private repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/import-git-repository.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos import create --git-source-url\n                       [--detect {false, true}]\n                       [--git-service-endpoint-id]\n                       [--org]\n                       [--project]\n                       [--repository]\n                       [--requires-authorization]\n                       [--subscription]\n                       [--user-name]\n```\n\n----------------------------------------\n\nTITLE: Configuring pip for Organization-Scoped Feed\nDESCRIPTION: Configuration snippet for pip.ini or pip.conf file to authenticate with an organization-scoped Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/use-packages-from-pypi.md#2025-04-22_snippet_4\n\nLANGUAGE: ini\nCODE:\n```\n[global]\nextra-index-url=https://<FEED_NAME>:<YOUR_PERSONAL_ACCESS_TOKEN>@pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/pypi/simple/\n```\n\n----------------------------------------\n\nTITLE: Creating a Team with Azure CLI in Azure DevOps\nDESCRIPTION: This command creates a new team named \"Production Planning\" in the Fabrikam Fiber project within the fabrikamprime organization. It sets a description for the team and outputs the result in YAML format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/add-teams.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team create --name \"Production Planning\" --description \"Team tasked with planning operations and new processes.\" --output yaml\n```\n\n----------------------------------------\n\nTITLE: Querying Top 10 Work Items in Azure DevOps Analytics with OData\nDESCRIPTION: This OData query retrieves the top 10 work items under a specific area path, ordered by creation date. It selects WorkItemId, Title, WorkItemType, State, and CreatedDate fields, filtering by the specified area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/odataquery-connect.md#2025-04-22_snippet_0\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $select=WorkItemId,Title,WorkItemType,State,CreatedDate\n    &$filter=startswith(Area/AreaPath,'{area path}')\n    &$orderby=CreatedDate desc\n    &$top=10\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Area Path Using OData Analytics in Azure DevOps\nDESCRIPTION: This query demonstrates how to filter work items based on a specific Area Path. It can be customized to list all work items under any specified area path hierarchy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?\n  $filter=Area/AreaPath eq '{area path}'\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Pipeline Extension Points in Azure DevOps\nDESCRIPTION: Example configuration for adding custom buttons in pipeline headers and folder menus using Azure DevOps extensions. Demonstrates how to define contributions in the vss-extension.json manifest file with specific targets and properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-201-update.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"contributions\": [\n        {\n            \"id\": \"pipelinesFolderContextMenuTestItem\",\n            \"type\": \"ms.vss-web.action\",\n            \"description\": \"Custom menu on a pipeline folder\",\n            \"targets\": [\n                \"ms.vss-build-web.pipelines-folder-menu\"\n            ],\n            \"properties\": {\n                \"text\": \"Test item\",\n                \"title\": \"ms.vss-code-web.source-item-menu\",\n                \"icon\": \"images/show-properties.png\",\n                \"group\": \"actions\",\n                \"uri\": \"main.html\",\n                \"registeredObjectId\": \"showProperties\"\n            }\n        },\n        {\n            \"id\": \"pipelinesHeaderTestButton\",\n            \"type\": \"ms.vss-web.action\",\n            \"description\": \"Custom button in the pipeline header\",\n            \"targets\": [\n                \"ms.vss-build-web.pipelines-header-menu\"\n            ],\n            \"properties\": {\n                \"text\": \"Test item\",\n                \"title\": \"ms.vss-code-web.source-item-menu\",\n                \"icon\": \"images/show-properties.png\",\n                \"group\": \"actions\",\n                \"uri\": \"main.html\",\n                \"registeredObjectId\": \"showProperties\"\n            }\n        }\n]\n```\n\n----------------------------------------\n\nTITLE: Implementing Yarn Dependency Caching in Azure DevOps Pipeline\nDESCRIPTION: This example shows how to configure the Cache task to cache Yarn dependencies. It creates a cache key based on the OS, a string literal, and the yarn.lock file hash to uniquely identify the dependency set.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/s/.yarn\n\nsteps:\n- task: Cache@2\n  inputs:\n    key: '\"yarn\" | \"$(Agent.OS)\" | yarn.lock'\n    restoreKeys: |\n       \"yarn\" | \"$(Agent.OS)\"\n       \"yarn\"\n    path: $(YARN_CACHE_FOLDER)\n  displayName: Cache Yarn packages\n\n- script: yarn --frozen-lockfile\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Principal Authentication for Git Credential Manager\nDESCRIPTION: Command to configure Git to use a service principal for authentication with Azure Repos, specifying tenant ID and client ID in the required format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/set-up-credential-managers.md#2025-04-22_snippet_0\n\nLANGUAGE: git\nCODE:\n```\ngit config --global credential.azreposServicePrincipal \"11111111-1111-1111-1111-111111111111/22222222-2222-2222-2222-222222222222\"\n```\n\n----------------------------------------\n\nTITLE: TFVC Workspaces Remove Command Syntax\nDESCRIPTION: Syntax for removing workspace entries from the client cache for specified collections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspaces-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntf workspaces /remove:(*|workspace1[,workspace2,...]) \n/collection:(*|<team-project-collection-url>)\n```\n\n----------------------------------------\n\nTITLE: Configuring Agent with Proxy (macOS/Linux)\nDESCRIPTION: Command to configure a macOS or Linux agent with proxy settings, including URL, username, and password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/proxy.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./config.sh --proxyurl http://127.0.0.1:8888 --proxyusername \"myuser\" --proxypassword \"mypass\"\n```\n\n----------------------------------------\n\nTITLE: Importing Parent-Child Work Item Links via CSV in Azure DevOps\nDESCRIPTION: This CSV snippet demonstrates how to establish parent-child relationships between work items during import into Azure DevOps. Child items are indicated by indenting their titles into subsequent 'Title' columns (Title 1, Title 2, etc.). In this example, three 'Issue' work items are created as children of the 'Epic' defined in the first row, as their titles appear in the 'Title 2' column.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/import-work-items-from-csv.md#2025-04-22_snippet_6\n\nLANGUAGE: CSV\nCODE:\n```\nID,Work Item Type,Title 1,Title 2,Assigned To,State,Priority,Tags\n\"165\",\"Epic\",\"Track Telemetry for data imports\",,,\"To Do\",\"2\",\n,\"Issue\",,\"Fix issues with code\",,\"To Do\",\"1\",\n,\"Issue\",,\"Open private preview for select customers\",,\"To Do\",\"2\",\n,\"Issue\",,\"Enable feature for customer champs\",,\"To Do\",\"2\",\n```\n\n----------------------------------------\n\nTITLE: Accessing Repository Name in YAML Pipeline\nDESCRIPTION: Demonstrates how to print the name of the 'self' repository in a YAML pipeline using the resources context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/pipeline-decorator-context.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: echo ${{ resources.repositories['self'].name }}\n```\n\n----------------------------------------\n\nTITLE: Setting READONLY Rule for Work Item Field in XML\nDESCRIPTION: This XML code shows how to use the READONLY element to prevent a field from being modified under any circumstances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_10\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"MyCorp.Status\" name=\"Status\" type=\"String\">\n    <READONLY />  \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Pipelines Linux Agent as a systemd Service\nDESCRIPTION: Command to install the Azure Pipelines Linux agent as a systemd service. This allows the agent to run automatically on system startup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh install [username]\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resources for Java SE App Service using Azure CLI\nDESCRIPTION: Uses Azure CLI commands to set up the necessary Azure infrastructure for a Java web app on Linux using Java SE. It first creates a resource group, then a Linux App Service Plan, and finally a Web App specifying the 'JAVA|8-jre8' runtime. Replace `myapp-rg`, `myapp-service-plan`, and `my-app-name` with desired values. Requires Azure CLI and an active Azure subscription login.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java-webapp.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a resource group\naz group create --location eastus2 --name myapp-rg\n\n# Create an app service plan of type Linux\naz appservice plan create -g myapp-rg -n myapp-service-plan --is-linux\n\n# Create an App Service from the plan with Java SE as the runtime\naz webapp create -g myapp-rg -p myapp-service-plan -n my-app-name --runtime \"JAVA|8-jre8\"\n```\n\n----------------------------------------\n\nTITLE: Installing TypeScript Compiler\nDESCRIPTION: Installs a specific version of TypeScript compiler globally and as a dev dependency for the project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_5\n\nLANGUAGE: PowerShell\nCODE:\n```\nnpm install typescript@4.6.3 -g --save-dev\n```\n\n----------------------------------------\n\nTITLE: Multi-line String Literals in Azure Pipelines\nDESCRIPTION: Example showing how to define multi-line string literals in Azure Pipelines using the pipe character (|).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nmyKey: |\n  one\n  two\n  three\n```\n\n----------------------------------------\n\nTITLE: Querying User Stories with Task Rollups in Power BI\nDESCRIPTION: This Power BI M query retrieves User Stories with aggregated Task work metrics. It filters User Stories that aren't removed, are in a specific area path, and have descendants. The query expands related entities and calculates total remaining and completed work from child Tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_6\n\nLANGUAGE: powerbi-m\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n            &\"$filter=WorkItemType eq 'User Story'\"\n            &\" and State ne 'Removed'\"\n            &\" and startswith(Area/AreaPath,'{areapath}')\"\n            &\" and Descendants/any()\"    \n        &\"& $select=WorkItemId,Title,WorkItemType,State,AreaSK\"\n        &\"& $expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\"        \n            &\"Descendants(\"\n                &\"$apply=filter(WorkItemType eq 'Task')\"\n                &\"/aggregate(RemainingWork with sum as TotalRemainingWork, CompletedWork with sum as TotalCompletedWork)\"\n            &\")\", \n        null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4])  \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Removing Files from Git Tracking While Preserving Locally\nDESCRIPTION: Commands to permanently remove a file from Git tracking without deleting it from the filesystem. This approach allows keeping the file locally while preventing Git from reporting changes to it.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/ignore-files.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ngit rm --cached <file path>\ngit commit <some message>\n```\n\n----------------------------------------\n\nTITLE: Publishing Maven Artifacts to Cross-Organization Feed (YAML)\nDESCRIPTION: This YAML snippet authenticates with a Maven service connection to publish artifacts to a feed in another organization. It uses the MavenAuthenticate task with a service connection and then runs 'mvn deploy'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/publish-maven-artifacts.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: MavenAuthenticate@0\n  displayName: 'Authenticate to Azure Artifacts feed'\n  inputs:\n    MavenServiceConnections: <NAME_OF_YOUR_SERVICE_CONNECTION> \n\n- script: |\n   mvn deploy\n  displayName: 'Publish'\n```\n\n----------------------------------------\n\nTITLE: Azure AD Authentication for Azure DevOps REST Services\nDESCRIPTION: Shows how to authenticate with Azure DevOps using Azure Active Directory credentials through the VssConnection class.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/client-libraries/samples.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\npublic static void AADRestSample()\n{\n    VssConnection connection = new VssConnection(new Uri(collectionUri), new VssAadCredential(userName, password));\n}\n```\n\n----------------------------------------\n\nTITLE: Output Variables with Different Environment Definitions in Deployment Jobs\nDESCRIPTION: Example showing how to set and reference output variables across deployment jobs and regular jobs within the same stage. Demonstrates how the reference syntax differs between shorthand environment notation and full environment definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: StageA\n  jobs:\n  - deployment: A1\n    pool:\n      vmImage: 'ubuntu-latest'\n    environment: env1\n    strategy:                  \n      runOnce:\n        deploy:\n          steps:\n          - bash: echo \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the deployment variable value\"\n            name: setvarStep\n          - bash: echo $(System.JobName)\n  - deployment: A2\n    pool:\n      vmImage: 'ubuntu-latest'\n    environment: \n      name: env2\n      resourceName: vmsfortesting\n      resourceType: virtualmachine\n    strategy:                  \n      runOnce:\n        deploy:\n          steps:\n          - script: echo \"##vso[task.setvariable variable=myOutputVarTwo;isOutput=true]this is the second deployment variable value\"\n            name: setvarStepTwo\n  \n  - job: B1\n    dependsOn: A1\n    pool:\n      vmImage: 'ubuntu-latest'\n    variables:\n      myVarFromDeploymentJob: $[ dependencies.A1.outputs['A1.setvarStep.myOutputVar'] ]\n      \n    steps:\n    - script: \"echo $(myVarFromDeploymentJob)\"\n      name: echovar\n \n  - job: B2\n    dependsOn: A2\n    pool:\n      vmImage: 'ubuntu-latest'\n    variables:\n      myVarFromDeploymentJob: $[ dependencies.A2.outputs['A2.setvarStepTwo.myOutputVarTwo'] ]\n      myOutputVarTwo: $[ dependencies.A2.outputs['Deploy_vmsfortesting.setvarStepTwo.myOutputVarTwo'] ]\n    \n    steps:\n    - script: \"echo $(myOutputVarTwo)\"\n      name: echovartwo\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag-Based Triggers in Azure DevOps Pipeline\nDESCRIPTION: YAML configuration example showing how to specify tag-based triggers in Azure DevOps pipelines. Demonstrates including tags matching 'v2.*' pattern while explicitly excluding 'v2.0' tag. By default, tags won't trigger pipelines unless explicitly configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ci-triggers2.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# specific tag\ntrigger:\n  tags:\n    include:\n    - v2.*\n    exclude:\n    - v2.0\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline for CodeQL Analysis with Custom Configuration in YAML\nDESCRIPTION: Example of an Azure Pipeline that uses a custom configuration file for CodeQL analysis, including variable definitions and task specifications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-code-scanning-queries.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: none\n\npool:\n  vmImage: windows-latest\n\nvariables:\n  advancedsecurity.codeql.configfilepath: '$(build.sourcesDirectory)/.pipelines/steps/configfile.yml'\n\nsteps:\n- task: AdvancedSecurity-Codeql-Init@1\n  displayName: Initialize CodeQL\n  inputs:\n    languages: 'javascript'\n    loglevel: '2'\n    configfilepath: '$(build.sourcesDirectory)/.pipelines/steps/configfile.yml'\n  env:\n    GITHUB_TOKEN: $(githubtoken)\n\n- task: AdvancedSecurity-Codeql-Analyze@1\n  displayName: Perform CodeQL Analysis\n```\n\n----------------------------------------\n\nTITLE: GitHub Repository Not Found Error Log\nDESCRIPTION: Example error message shown during the checkout step when a GitHub repository cannot be accessed, typically due to GitHub outages or access permission issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_10\n\nLANGUAGE: log\nCODE:\n```\nremote: Repository not found.\nfatal: repository <repo> not found\n```\n\n----------------------------------------\n\nTITLE: Posting Pull Request Status in JSON\nDESCRIPTION: Example of posting a successful CI build status to a pull request using JSON format. It includes state, description, context, and target URL fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-request-status.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"state\": \"succeeded\",\n    \"description\": \"CI build succeeded\",\n    \"context\": {\n        \"name\": \"my-ci-system\",\n        \"genre\": \"continuous-integration\"\n    },\n    \"targetUrl\": \"http://contoso.com/CI/builds/1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Pushing NuGet Packages via Command Line in Azure Pipelines Classic\nDESCRIPTION: Specifies the `nuget.exe push` command used within a Command Line task in the Azure Pipelines Classic editor. This command targets a specific Azure Artifacts feed URL and pushes all `.nupkg` files located in the `$(Build.ArtifactStagingDirectory)`. It uses `az` as the API key, relying on prior authentication (like the `NuGetAuthenticate` task) to succeed. Requires placeholder replacement for `<ORGANIZATION_NAME>`, `<PROJECT_NAME>`, and `<FEED_NAME>`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/nuget.md#2025-04-22_snippet_5\n\nLANGUAGE: script\nCODE:\n```\nnuget.exe push -Source \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" -ApiKey az $(Build.ArtifactStagingDirectory)\\*.nupkg\n```\n\n----------------------------------------\n\nTITLE: Retrieving Bugs with Duplicate Links using OData Query in Azure DevOps\nDESCRIPTION: OData query that retrieves bugs that have a Duplicate link to another bug. The query filters by work item type, state, area path, and the existence of a Duplicate link, including expansion of link relationships.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'Bug'\n            and State ne 'Closed'\n            and startswith(Area/AreaPath,'{areapath}')\n            and Links/any(x:x/LinkTypeName eq 'Duplicate' and x/TargetWorkItem/WorkItemType eq 'Bug')\n        &$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\n            Links(\n                $filter=LinkTypeName eq 'Duplicate'\n                and TargetWorkItem/WorkItemType eq 'Bug';\n                    $select=LinkTypeName;\n                $expand=TargetWorkItem($select=WorkItemType,WorkItemId,Title,State)\n            )\n```\n\n----------------------------------------\n\nTITLE: Direct-Link Query Example\nDESCRIPTION: WIQL query demonstrating direct link relationships between work items with multiple link types and specific date filtering.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_24\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT\n    [System.Id],\n    [System.WorkItemType],\n    [System.Title],\n    [System.AssignedTo],\n    [System.State]\nFROM workitemLinks\nWHERE\n    (\n        [Source].[System.TeamProject] = @project\n        AND [Source].[System.WorkItemType] <> ''\n        AND [Source].[System.State] <> ''\n    )\n    AND (\n        [System.Links.LinkType] = 'System.LinkTypes.Dependency-Reverse'\n        OR [System.Links.LinkType] = 'System.LinkTypes.Related-Forward'\n        OR [System.Links.LinkType] = 'System.LinkTypes.Dependency-Forward'\n    )\n    AND (\n        [Target].[System.TeamProject] = @project\n        AND [Target].[System.WorkItemType] <> ''\n        AND [Target].[System.ChangedDate] >= @today - 60\n    )\nORDER BY [System.Id]\nMODE (MustContain)\n```\n\n----------------------------------------\n\nTITLE: Listing App Service Instances to Verify Deployment with Azure CLI\nDESCRIPTION: Azure CLI command to list the App Service instances in the resource group, displaying their hostnames and state to verify successful creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_5\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz webapp list \\\n  --resource-group tailspin-space-game-rg \\\n  --query \"[].{hostName: defaultHostName, state: state}\" \\\n  --output table\n```\n\n----------------------------------------\n\nTITLE: Extending Templates with Dynamic Branch Selection\nDESCRIPTION: YAML pipeline that extends a template from another repository using a dynamic branch reference. This configuration ensures the pipeline extends the template from the same branch that the pipeline is running on.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-212-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n    - repository: templates\n      type: git\n      name: Templates\n      ref: ${{ variables['Build.SourceBranch'] }}\n\nextends:\n  template: template.yml@templates\n  parameters:\n    steps:\n      - script: echo ./build.sh\n      - script: echo ./test.sh\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps Extension SDK via NPM\nDESCRIPTION: Command to install the Azure DevOps Extension SDK using NPM package manager.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-web-page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install azure-devops-extension-sdk\n```\n\n----------------------------------------\n\nTITLE: Team Explorer Global Shortcuts - Markdown Table\nDESCRIPTION: Markdown table listing global keyboard shortcuts for Team Explorer, including navigation commands for different sections like Build, Connect, and Work Items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/navigation/keyboard-shortcuts.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|Ctrl+0, a|Open web portal|\n|Ctrl+0, b|Open Build|\n|Ctrl+0, c|Open Connect|\n|Ctrl+0, d|Open Documents|\n|Ctrl+0, e|Open Branches (Git)|\n|Ctrl+0, g|Open Changes (Git)|\n|Ctrl+0, h|Open Home|\n|Ctrl+0, m|Open My Work Team Foundation Version Control (TFVC)|\n|Ctrl+0, p|Open Pending changes (TFVC)|\n|Ctrl+0, r|Open Reports|\n|Ctrl+0, s|Open Settings|\n|Ctrl+0, w|Open Work items|\n|Ctrl+0, y|Open Synchronization (Git)|\n|Ctrl+'|Move focus to search box|\n|Alt+0|Move focus to top of page|\n|Alt+1|Move focus to visible section \\[1 through 9\\]|\n|Alt+Up arrow|Move focus to next section|\n|Alt+Down arrow|Move focus to previous section|\n```\n\n----------------------------------------\n\nTITLE: Webhook with Filters Configuration\nDESCRIPTION: Example of webhook resource configuration with path filters for repository name and action triggers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  webhooks:\n    - webhook: MyWebhookTrigger          \n      connection: MyWebhookConnection    \n      filters:\n        - path: repositoryName      \n          value: maven-releases     \n        - path: action\n          value: CREATED\nsteps:\n- task: PowerShell@2\n  inputs:\n    targetType: 'inline'\n    script: |\n      Write-Host ${{ parameters.MyWebhookTrigger.repositoryName}}\n      Write-Host ${{ parameters.MyWebhookTrigger.component.group}}\n```\n\n----------------------------------------\n\nTITLE: Git Cherry-Pick Single Commit Command\nDESCRIPTION: Command to cherry-pick a single commit from one branch to another using Git CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/cherry-pick.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit cherry-pick <commit ID>\n```\n\n----------------------------------------\n\nTITLE: Restricting Variable Setting in Azure Pipelines\nDESCRIPTION: A PowerShell task that fails because it tries to set a variable that isn't in the allowed list. This demonstrates how to control which variables can be set by tasks for security.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n- task: PowerShell@2\n  target:\n    commands: restricted\n    settableVariables:\n    - expectedVar\n    - ok*\n  inputs:\n    targetType: 'inline'\n    script: |\n      Write-Host \"##vso[task.setvariable variable=BadVar]myValue\"\n```\n\n----------------------------------------\n\nTITLE: Adding Remote Repository and Pushing Code via Git CLI\nDESCRIPTION: Commands for adding a remote repository and pushing local code to Azure DevOps Git repository's main branch. Requires a clone URL from Azure DevOps project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-vs.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n> git remote add origin <clone URL>\n> git push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Using Build.QueuedBy Variable in Azure DevOps Pipelines\nDESCRIPTION: Identifies the user who queued the build (refer to identity variable details). May contain characters invalid for label formats. It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_10\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.QueuedBy\n```\n\n----------------------------------------\n\nTITLE: Updating Comment Resolution Policy using Azure CLI in Azure DevOps\nDESCRIPTION: This command updates an existing comment resolution policy for pull requests. The policy requires comments to be resolved before pull requests can be merged. Parameters include policy ID, branch settings, repository details, and enforcement options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy comment-required update --id\n                                        [--blocking {false, true}]\n                                        [--branch]\n                                        [--branch-match-type {exact, prefix}]\n                                        [--detect {false, true}]\n                                        [--enabled {false, true}]\n                                        [--org]\n                                        [--project]\n                                        [--repository-id]\n                                        [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Basic Branch Trigger Configuration in Azure DevOps YAML Pipelines\nDESCRIPTION: Simple syntax for controlling which branches trigger CI builds. This example triggers the pipeline when changes are pushed to the main branch or any branch under the releases directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ci-triggers1.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n- releases/*\n```\n\n----------------------------------------\n\nTITLE: Retrieving Work Items with Bug Relationships Using Power BI Query\nDESCRIPTION: This Power Query retrieves requirement work items from Azure DevOps Analytics and expands their links to bug work items. It filters by iteration and area path, includes only requirement backlog items while excluding bugs, and pivots the results to show bug counts by state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerQuery\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $filter=(\n        IterationSK eq {iterationSK} \n        and AreaSK eq {areaSK}\n        and Processes/any(p:p/BacklogType eq 'RequirementBacklog') \n        and Processes/all(p:p/IsBugType eq false)\n    )\n    &$expand=Links(\n        $apply=filter(\n            (LinkTypeName eq 'Child' or LinkTypeName eq 'Related')\n            and TargetWorkItem/WorkItemType eq 'Bug'\n        )\n        /groupby(\n            (TargetWorkItem/State),\n            aggregate($count as Count)\n        )\n    )&$select=WorkItemId,Title\", null, [Implementation=\"2.0\"]),\n    #\"Expanded Links\" = Table.ExpandTableColumn(Source, \"Links\", {\"TargetWorkItem\", \"Count\"}, {\"Links.TargetWorkItem\", \"Links.Count\"}),\n    #\"Expanded Links.TargetWorkItem\" = Table.ExpandRecordColumn(#\"Expanded Links\", \"Links.TargetWorkItem\", {\"State\"}, {\"Links.TargetWorkItem.State\"}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded Links.TargetWorkItem\", each [Links.Count] <> null and [Links.Count] <> \"\"),\n    #\"Pivoted Column\" = Table.Pivot(#\"Filtered Rows\", List.Distinct(#\"Filtered Rows\"[Links.TargetWorkItem.State]), \"Links.TargetWorkItem.State\", \"Links.Count\", List.Sum),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Pivoted Column\",{{\"Active\", type number}, {\"Closed\", type number}})\nin\n    #\"Changed Type\"\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Script Extension on Linux VMSS using Azure CLI\nDESCRIPTION: Installs the Custom Script Extension on a specified Linux Virtual Machine Scale Set using Azure CLI. It downloads a script from the provided URL (`fileUris`) and executes it using bash (`commandToExecute`) immediately after VM creation or reimaging, before the Azure Pipelines agent extension runs. Requires an existing VMSS and a publicly accessible script URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz vmss extension set \\\n--vmss-name <scaleset name> \\\n--resource-group <resource group> \\\n--name CustomScript \\\n--version 2.0 \\\n--publisher Microsoft.Azure.Extensions \\\n--settings '{ \\\"fileUris\\\":[\\\"https://<myGitHubRepoUrl>/myScript.sh\\\"], \\\"commandToExecute\\\": \\\"bash ./myScript.sh /myArgs \\\" }'\n```\n\n----------------------------------------\n\nTITLE: Inserting Steps into a Job Template in YAML\nDESCRIPTION: This snippet shows how to create a job template that allows insertion of custom steps at different points in the job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-expressions.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# File: jobs/build.yml\n\nparameters:\n- name: 'preBuild'\n  type: stepList\n  default: []\n- name: 'preTest'\n  type: stepList\n  default: []\n- name: 'preSign'\n  type: stepList\n  default: []\n\njobs:\n- job: Build\n  pool:\n    vmImage: 'windows-latest'\n  steps:\n  - script: cred-scan\n  - ${{ parameters.preBuild }}\n  - task: msbuild@1\n  - ${{ parameters.preTest }}\n  - task: vstest@2\n  - ${{ parameters.preSign }}\n  - script: sign\n```\n\n----------------------------------------\n\nTITLE: Listing Git Repositories with Azure CLI\nDESCRIPTION: Command to list all Git repositories for a project in Azure DevOps. Parameters include options to detect organization automatically, specify organization URL, project name/ID, and subscription.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos list [--detect {false, true}]\n              [--org]\n              [--project]\n              [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Implementing Stacked Area Chart in Azure DevOps Extension\nDESCRIPTION: JavaScript code to create a stacked area chart using the Chart SDK in an Azure DevOps extension. It demonstrates custom series colors and date-based x-axis labels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-chart.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nVSS.init({\n        explicitNotifyLoaded: true,\n        usePlatformStyles: true \n    });\n\nVSS.require([\n        \"TFS/Dashboards/WidgetHelpers\", \n        \"Charts/Services\"\n        ],\n        function (WidgetHelpers, Services) {\n        WidgetHelpers.IncludeWidgetStyles();\n        VSS.register(\"StackedAreaChart\", function () { \n             return {\n             load:function() {\n                return Services.ChartsService.getService().then(function(chartService){\n                    var $container = $('#Chart-Container');\n                    var chartOptions = { \n                        \"hostOptions\": { \n                            \"height\": \"290\", \n                            \"width\": \"300\"\n                        },\n                        \"chartType\": \"stackedArea\",\n                        \"series\": [\n                            {\n                                \"name\": \"Completed\",\n                                \"data\": [1,3,4,3,6,1,9,0,8,11]\n                            },\n                            {\n                                \"name\": \"Development\",\n                                \"data\": [1,1,0,3,0,2,8,9,2,8]\n                            },\n                            {\n                                \"name\": \"Design\",\n                                \"data\": [0,0,0,6,1,1,9,9,1,9], \n                                \"color\": \"#207752\"\n                            },\n                            {\n                                \"name\": \"On Deck\",\n                                \"data\": [1,2,4,5,4,2,1,7,0,6]\n                            }\n                        ],\n                        \"xAxis\": {\n                            \"labelFormatMode\": \"dateTime_DayInMonth\",\n                            \"labelValues\": [\n                                \"1/1/2016\",\n                                \"1/2/2016\",\n                                \"1/3/2016\",\n                                \"1/4/2016\",\n                                \"1/5/2016\",\n                                \"1/6/2016\",\n                                \"1/7/2016\",\n                                \"1/8/2016\",\n                                \"1/9/2016\",\n                                \"1/10/2016\"\n                            ]\n                        }\n                    }\n                    chartService.createChart($container, chartOptions);\n                    return WidgetHelpers.WidgetStatusHelper.Success();\n                });\n                }\n             }\n            });\n    VSS.notifyLoadSucceeded();\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Git Remote URL\nDESCRIPTION: Command to update the remote URL of a Git repository to point to the new location after migration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/move-git-repos-between-team-projects.md#2025-04-22_snippet_1\n\nLANGUAGE: Git\nCODE:\n```\ngit remote set-url origin https://demo-fabrikam.visualstudio.com/DefaultCollection/Fabrikam/_git/MigrationDemo\n```\n\n----------------------------------------\n\nTITLE: Updating Environment Variables for Azure DevOps Agent Service (bash)\nDESCRIPTION: This script sequence updates environment variables for the agent service by running an environment setup script and restarting the service. It requires the service management scripts (env.sh, svc.sh) to be present and executable. The sequence ensures that newly installed software or environment changes are recognized by stopping and starting the service; inputs are not required, and outputs relate to service state change. Limitations include requiring correct user permissions and valid script locations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# Updating environment and restarting agent service\n./env.sh\n./svc.sh stop\n./svc.sh start\n```\n\n----------------------------------------\n\nTITLE: Configuring nuget.config for Organization-scoped Azure Artifacts Feed\nDESCRIPTION: XML configuration for connecting to an organization-scoped Azure Artifacts feed. This file should be placed in the same folder as your .csproj or .sln file to establish the connection to your private package feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-setup.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<FEED_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Querying Feature Progress Based on Area Path in OData\nDESCRIPTION: This OData query retrieves Feature work items and their User Story descendants, aggregating Story Points by State Category. It filters by Area Path and excludes removed items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-featureprogress.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'Feature'\n            and State ne 'Removed'\n            and startswith(Area/AreaPath,'{areapath}')\n            and Descendants/any()\n        &$select=WorkItemId,Title,Area,Iteration,AssignedTo,WorkItemType,State,AreaSK\n        &$expand=Descendants(\n            $apply=filter(WorkItemType eq 'User Story')\n                /groupby((StateCategory),\n                aggregate(StoryPoints with sum as TotalStoryPoints))\n            ) \n```\n\n----------------------------------------\n\nTITLE: Checking for Multiple Merge Bases with Git\nDESCRIPTION: This command allows you to manually check for multiple merge bases between a feature branch and master branch, which helps verify if there might be issues during a pull request merge operation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/merging-with-squash.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit merge-base --all feature master\n```\n\n----------------------------------------\n\nTITLE: Disabling PR Triggers in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to opt out of pull request validation entirely by setting 'pr: none'. This prevents the pipeline from being triggered by any pull request activity.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n# no PR triggers\npr: none\n```\n\n----------------------------------------\n\nTITLE: Displaying Repository Policies in Table Format\nDESCRIPTION: Example showing how to list all policies in effect for a project with tabular output, displaying policy IDs, names, blocking status, and applicable branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy list --output table\n```\n\n----------------------------------------\n\nTITLE: Configuring npm audit task in YAML Azure Pipeline\nDESCRIPTION: YAML configuration to add an npm audit task in an Azure Pipeline. The task uses a custom command to run npm audit with the specified feed source URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npm-audit.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Npm@1\n  displayName: 'npm audit'\n  inputs:\n    command: custom\n    customCommand: 'audit --registry=<FEED_SOURCE_URL>'\n```\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Npm@1\n  displayName: 'npm audit & fix'\n  inputs:\n    command: custom\n    customCommand: 'audit fix --registry=<FEED_SOURCE_URL>'\n```\n\n----------------------------------------\n\nTITLE: Navigating to Agent Directory in PowerShell\nDESCRIPTION: Change the current directory to where the agent was unpacked, typically C:\\agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/windows-agent.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\ncd C:\\agents\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Trigger in app-ci Pipeline for Azure DevOps\nDESCRIPTION: YAML configuration for app-ci pipeline that uses a pipeline resource trigger to run automatically after security-lib-ci pipeline completes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/pipeline-triggers.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# app-ci YAML pipeline\n# We are setting up a pipeline resource that references the security-lib-ci\n# pipeline and setting up a pipeline completion trigger so that our app-ci\n# pipeline runs when a run of the security-lib-ci pipeline completes\nresources:\n  pipelines:\n  - pipeline: securitylib # Name of the pipeline resource.\n    source: security-lib-ci # The name of the pipeline referenced by this pipeline resource.\n    project: FabrikamProject # Required only if the source pipeline is in another project\n    trigger: true # Run app-ci pipeline when any run of security-lib-ci completes\n\nsteps:\n- bash: echo \"app-ci runs after security-lib-ci completes\"\n```\n\n----------------------------------------\n\nTITLE: Checking Status of Linux Agent Service for Azure DevOps\nDESCRIPTION: This command checks the status of the Azure DevOps agent service on a Linux system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh status\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Boards Query Command Syntax (Azure CLI)\nDESCRIPTION: This snippet outlines the command structure and parameters for the `az boards query` command in the Azure DevOps CLI. It details options like specifying a query by ID (`--id`), path (`--path`), or providing the WIQL directly (`--wiql`), along with organization (`--org`) and project (`--project`) context. This command is used to execute work item queries from the command line.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/view-run-query.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n```azurecli \naz boards query [--id]\n                [--org]\n                [--path]\n                [--project]\n                [--wiql] \n```\n```\n\n----------------------------------------\n\nTITLE: Using Formatting Commands in PowerShell\nDESCRIPTION: Shows how to use various formatting commands in a PowerShell script to create groups, warnings, errors, sections, debug messages, and command-line outputs in the pipeline logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- powershell: |\n    Write-Host \"##[group]Beginning of a group\"\n    Write-Host \"##[warning]Warning message\"\n    Write-Host \"##[error]Error message\"\n    Write-Host \"##[section]Start of a section\"\n    Write-Host \"##[debug]Debug text\"\n    Write-Host \"##[command]Command-line being run\"\n    Write-Host \"##[endgroup]\"\n```\n\n----------------------------------------\n\nTITLE: Exporting PowerShell Module Functions\nDESCRIPTION: Specifying which functions to export in the module manifest\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_18\n\nLANGUAGE: powershell\nCODE:\n```\nFunctionsToExport = @('Get-Hello')\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts Table for Azure DevOps Work Items\nDESCRIPTION: A markdown table defining keyboard shortcuts and their corresponding actions for Azure DevOps work item management. Includes shortcuts for opening work items, backlog, board, sprint, queries, and other common actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/work-items-page-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|w|Open [work items](../../boards/work-items/view-add-work-items.md)|\n|l|Open [backlog](../../boards/backlogs/create-your-backlog.md)|\n|b|Open [board](../../boards/boards/kanban-quickstart.md)|\n|i|Open [sprint](../../boards/sprints/assign-work-sprint.md)\n|q|Open [queries](../../boards/queries/using-queries.md)|\n|z|Toggle full screen|\n|Ctrl+Shift+f|Filter results|\n|Ctrl+c|Copy to clipboard|\n|Delete|Delete|\n```\n\n----------------------------------------\n\nTITLE: Querying Sprint Burndown for User Stories by Area Path in Power BI\nDESCRIPTION: This Power BI query retrieves workitem snapshot data to create a burndown chart for User Stories in a specific area path during the current iteration. It filters incomplete work items and aggregates counts and story points.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-sprintburndown.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \"\n        &\"$apply=filter( \"\n            &\"WorkItemType eq 'User Story' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and DateValue ge Iteration/StartDate \"\n            &\"and DateValue le Iteration/EndDate \"\n            &\"and Iteration/StartDate le now()  \"\n            &\"and Iteration/EndDate ge now() \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(DateValue,State,WorkItemType,Priority,Area/AreaPath,Iteration/IterationPath), \"\n            &\"aggregate($count as Count, StoryPoints with sum as TotalStoryPoints) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Sending Decision Back to Azure DevOps\nDESCRIPTION: JSON body for the Post Event REST API call to communicate a decision back to Azure Pipelines. This includes the event name, task ID, job ID, and result (succeeded or failed).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/invoke-checks.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"TaskCompleted\",\n    \"taskId\": \"{TaskInstanceId}\",\n    \"jobId\": \"{JobId}\",\n    \"result\": \"succeeded|failed\"\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing OData URL for Azure DevOps Analytics\nDESCRIPTION: OData feed URL format for connecting Excel to Azure DevOps Analytics. The URL includes organization name and version parameters to access analytics data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/access-analytics-excel.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{Organization_Name}/_odata/{version}/\n```\n\n----------------------------------------\n\nTITLE: Resetting Branch to Previous Commit in Visual Studio\nDESCRIPTION: Instructions for resetting a branch to a selected commit using either a hard reset (deleting changes) or a mixed reset (keeping changes as unstaged) in Visual Studio.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/undo-revert-branch.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the **History** tab for the current branch, right-click the commit you want to reset, and then choose **Reset > Delete Changes (--hard)** to reset the branch to the selected commit and delete all changes to all branch files since that commit. Or, choose **Reset > Keep Changes (--mixed)** to reset the branch to the selected commit and retain all subsequent changes as unstaged changes.\n\n   :::image type=\"content\" source=\"../media/undo/visual-studio-2019/common/reset-hard.png\" border=\"true\" alt-text=\"Screenshot of the Reset option in the context menu for a commit in the History window in Visual Studio.\" lightbox=\"../media/undo/visual-studio-2019/common/reset-hard-lrg.png\":::\n```\n\n----------------------------------------\n\nTITLE: Listing Service Hooks Permissions for a Group in Azure DevOps\nDESCRIPTION: Command to list the current Service Hooks permissions for a specified group or user in Azure DevOps using the security namespace ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/view-permission.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> az devops security permission list --id cb594ebe-87dd-4fc9-ac2c-6a10a4c92046 --subject <Group or user descriptor> --output table\n```\n\n----------------------------------------\n\nTITLE: Configuring Pip Settings for Azure Artifacts\nDESCRIPTION: Example configuration for pip.ini (Windows) or pip.conf (Mac/Linux) file that points to an Azure Artifacts feed with upstream sources enabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_0\n\nLANGUAGE: command\nCODE:\n```\n[global]\nindex-url=https://pkgs.dev.azure.com/ORGANIZATION-NAME/_packaging/FEED-NAME/pypi/simple/\n```\n\n----------------------------------------\n\nTITLE: Configuring Workspace Cleaning in YAML Pipeline Job\nDESCRIPTION: This YAML snippet shows how to configure the workspace cleaning options for a job in an Azure Pipeline. It allows specifying what to clean up before the job runs: outputs, resources, or all.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/source-options.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: string  # name of the job, A-Z, a-z, 0-9, and underscore\n  ...\n  workspace:\n    clean: outputs | resources | all # what to clean up before the job runs\n```\n\n----------------------------------------\n\nTITLE: Negating Hierarchical Queries with NOT UNDER Operator - WIQL\nDESCRIPTION: This WIQL snippet demonstrates how to negate the assignment of work items under a specific tree path (i.e., excluding all items under 'Fabrikam Fiber\\\\Account Management'). It uses the NOT and UNDER operators within a WHERE clause to filter out specific branch subtrees. This is useful for excluding work items from a particular project area or folder hierarchy, with no external dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_7\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE\n    [System.TeamProject] = @project\n    AND [System.WorkItemType] <> ''\n    AND NOT [System.AreaPath] UNDER 'Fabrikam Fiber\\Account Management'\n\n```\n\n----------------------------------------\n\nTITLE: Task JSON Configuration for Node 16 Runner\nDESCRIPTION: Configuration structure for tasks to express compatibility with multiple Node runners in task.json under the execution property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-210-update.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"execution\": {\n    \"Node16\": {\n      \"target\": \"index.js\"\n    },\n    \"Node10\": {\n      \"target\": \"index.js\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests Filtered by Branch in Power BI\nDESCRIPTION: This Power BI M query retrieves failed test results for a specific build pipeline, allowing filtering by branch. It includes the branch name in the grouping to enable slicing in the Power BI report.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_4\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate} \"\n        &\"And Workflow eq 'Build') \"\n        &\"/groupby((TestSK, Test/TestName, Branch/BranchName), \"\n            &\"aggregate( \"\n                &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n            &\"ResultFailCount with sum as FailedCount, \"\n                &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n            &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n        &\"ResultFlakyCount with sum as FlakyCount)) \"\n    &\"/filter(FailedCount gt 0) \"\n    &\"/compute( \"\n    &\"iif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Full Security Namespace List Command Example\nDESCRIPTION: Example command showing the complete output of listing security namespaces in Azure DevOps, including namespace IDs and names. This command displays all available namespaces in a tabular format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission namespace list --org https://dev.azure.com/OrganizationName --output table\n \nId                                    Name\n------------------------------------  ------------------------------\nc788c23e-1b46-4162-8f5e-d7585343b5de  ReleaseManagement\n58450c49-b02d-465a-ab12-59ae512d6531  Analytics\nd34d3680-dfe5-4cc6-a949-7d9c68f73cba  AnalyticsViews\n62a7ad6b-8b8d-426b-ba10-76a7090e94d5  PipelineCachePrivileges\n7c7d32f7-0e86-4cd6-892e-b35dbba870bd  ReleaseManagement\na6cc6381-a1ca-4b36-b3c1-4e65211e82b6  AuditLog\n5a27515b-ccd7-42c9-84f1-54c998f03866  Identity\n445d2788-c5fb-4132-bbef-09c4045ad93f  WorkItemTrackingAdministration\n101eae8c-1709-47f9-b228-0e476c35b3ba  DistributedTask\n71356614-aad7-4757-8f2c-0fb3bff6f680  WorkItemQueryFolders\n2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87  Git Repositories\n3c15a8b7-af1a-45c2-aa97-2cb97078332e  VersionControlItems2\n2bf24a2b-70ba-43d3-ad97-3d9e1f75622f  EventSubscriber\n5a6cd233-6615-414d-9393-48dbb252bd23  WorkItemTrackingProvision\n49b48001-ca20-4adc-8111-5b60c903a50c  ServiceEndpoints\ncb594ebe-87dd-4fc9-ac2c-6a10a4c92046  ServiceHooks\nbc295513-b1a2-4663-8d1a-7017fd760d18  Chat\n3e65f728-f8bc-4ecd-8764-7e378b19bfa7  Collection\ncb4d56d2-e84b-457e-8845-81320a133fbb  Proxy\nbed337f8-e5f3-4fb9-80da-81e17d06e7a8  Plan\n2dab47f9-bd70-49ed-9bd5-8eb051e59c02  Process\n11238e09-49f2-40c7-94d0-8f0307204ce4  AccountAdminSecurity\nb7e84409-6553-448a-bbb2-af228e07cbeb  Library\n83d4c2e6-e57d-4d6e-892b-b87222b7ad20  Environment\n52d39943-cb85-4d7f-8fa8-c6baac873819  Project\n58b176e7-3411-457a-89d0-c6d0ccb3c52b  EventSubscription\n83e28ad4-2d72-4ceb-97b0-c7726d5502c3  CSS\n9e4894c3-ff9a-4eac-8a85-ce11cafdc6f1  TeamLabSecurity\nfc5b7b85-5d6b-41eb-8534-e128cb10eb67  ProjectAnalysisLanguageMetrics\nbb50f182-8e5e-40b8-bc21-e8752a1e7ae2  Tagging\nf6a4de49-dbe2-4704-86dc-f8ec1a294436  MetaTask\nbf7bfa03-b2b7-47db-8113-fa2e002cc5b1  Iteration\nfa557b48-b5bf-458a-bb2b-1b680426fe8b  Favorites\n4ae0db5d-8437-4ee8-a18b-1f6fb38bd34c  Registry\nc2ee56c9-e8fa-4cdd-9d48-2c44f697a58e  Graph\ndc02bf3d-cd48-46c3-8a41-345094ecc94b  ViewActivityPaneSecurity\n2a887f97-db68-4b7c-9ae3-5cebd7add999  Job\n73e71c45-d483-40d5-bdba-62fd076f7f87  WorkItemTracking\n4a9e8381-289a-4dfd-8460-69028eaa93b3  StrongBox\n1f4179b3-6bac-4d01-b421-71ea09171400  Server\ne06e1c24-e93d-4e4a-908a-7d951187b483  TestManagement\n6ec4592e-048c-434e-8e6c-8671753a8418  SettingEntries\n302acaca-b667-436d-a946-87133492041c  BuildAdministration\n2725d2bc-7520-4af4-b0e3-8d876494731f  Location\n83abde3a-4593-424e-b45f-9898af99034d  UtilizationPermissions\nc0e7a722-1cad-4ae6-b340-a8467501e7ce  WorkItemsHub\n0582eb05-c896-449a-b933-aa3d99e121d6  WebPlatform\n66312704-deb5-43f9-b51c-ab4ff5e351c3  VersionControlPrivileges\n93bafc04-9075-403a-9367-b7164eac6b5c  Workspaces\n093cbb02-722b-4ad6-9f88-bc452043fa63  CrossProjectWidgetView\n35e35e8e-686d-4b01-aff6-c369d6e36ce0  WorkItemTrackingConfiguration\n0d140cae-8ac1-4f48-b6d1-c93ce0301a12  Discussion Threads\n5ab15bc8-4ea1-d0f3-8344-cab8fe976877  BoardsExternalIntegration\n7ffa7cf4-317c-4fea-8f1d-cfda50cfa956  DataProvider\n81c27cc8-7a9f-48ee-b63f-df1e1d0412dd  Social\n9a82c708-bfbe-4f31-984c-e860c2196781  Security\na60e0d84-c2f8-48e4-9c0c-f32da48d5fd1  IdentityPicker\n84cc1aa4-15bc-423d-90d9-f97c450fc729  ServicingOrchestration\n33344d9c-fc72-4d6f-aba5-fa317101a7e9  Build\n8adf73b7-389a-4276-b638-fe1653f7efc7  DashboardsPrivileges\na39371cf-0841-4c16-bbd3-276e341bc052  VersionControlItems\n```\n\n----------------------------------------\n\nTITLE: Authenticating npm Commands using npmAuthenticate Task in YAML\nDESCRIPTION: Uses the `npmAuthenticate@0` task in Azure Pipelines YAML to configure authentication for subsequent npm operations. It uses credentials from the specified npm service connection (`<Name of npm service connection>`), making them available for tools like Gulp or Grunt that run `npm` commands internally. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- task: npmAuthenticate@0\n  inputs:\n    customEndpoint: <Name of npm service connection>\n```\n\n----------------------------------------\n\nTITLE: Reverting Changes with Git Reset Hard\nDESCRIPTION: Command to revert all changes and roll back to the most recent commit using Git's reset with the hard flag. This will discard all working directory changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\ngit reset --hard HEAD\n```\n\n----------------------------------------\n\nTITLE: Resetting Branch to Origin Main Example\nDESCRIPTION: Example of resetting a local branch to match the main branch from the origin remote. This discards all local changes and makes your branch identical to origin/main.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\ngit reset --hard origin/main\n```\n\n----------------------------------------\n\nTITLE: Accessing Deployed Tomcat Application URL\nDESCRIPTION: Provides the example URL format for accessing the deployed Spring PetClinic application running on Tomcat within the Azure App Service. Replace `my-app-name` with the actual name of the created Web App. Note the `/petclinic` path specific to this sample application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java-webapp.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nhttps://my-app-name.azurewebsites.net/petclinic\n```\n\n----------------------------------------\n\nTITLE: Copy Files Task Configuration\nDESCRIPTION: YAML configuration for copying template files to the build artifact staging directory\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  ARM_PASS: $(adminPass)\n\ntrigger:\n- none\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: CopyFiles@2\n  inputs:\n    SourceFolder: 'quickstarts/microsoft.web/webapp-linux-managed-mysql/'\n    Contents: '**'\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Linux Agent Interactively\nDESCRIPTION: Command to run the Azure Pipelines Linux agent interactively. This allows the agent to accept and execute pipeline jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh\n```\n\n----------------------------------------\n\nTITLE: Registering Tab Object in Azure DevOps Extension\nDESCRIPTION: JavaScript code that registers a tab object with the Azure DevOps SDK, implementing required callback functions for page title, context updates, and visibility/disabled states.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-backlog-tabs.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nSDK.register(\"backlogTabObject\", {\n    pageTitle: function(state) {\n        return \"Hello Tab\";\n    },\n    updateContext: function(tabContext) {\n    },\n    isInvisible: function(state) {\n        return false;\n    },\n    isDisabled: function(state) {\n        return false;\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: OData Query for Pipeline Run Outcomes Filtered by Build Reason\nDESCRIPTION: OData query URL that retrieves pipeline run outcome data filtered by pipeline name and completion date. The query groups results by RunReason and aggregates counts for different outcome statuses.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelinename}'\n    and CompletedDate ge {startdate}\n    )\n/groupby(\n(RunReason),\naggregate(\n    $count as TotalCount,\n    SucceededCount with sum as SucceededCount ,\n    FailedCount with sum as FailedCount,\n    PartiallySucceededCount with sum as PartiallySucceededCount ,\n    CanceledCount with sum as CanceledCount\n))\n```\n\n----------------------------------------\n\nTITLE: Accessing Pipeline Workspace in YAML\nDESCRIPTION: Demonstrates how to access the pipeline workspace directory using a predefined variable. This variable points to the workspace directory for a particular pipeline and has the same value as Agent.BuildDirectory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: echo $(Pipeline.Workspace)\n  displayName: 'Print workspace path'\n```\n\n----------------------------------------\n\nTITLE: Creating Code Wiki Example\nDESCRIPTION: Example command for creating a code wiki from a specific repository folder in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki create --name WIKI_NAME --type codewiki\n--repository REPO_NAME --mapped-path PATH_TO_PUBLISH\n```\n\n----------------------------------------\n\nTITLE: Reading Variables with Batch Script in Azure DevOps\nDESCRIPTION: Demonstrates reading both regular and secret variables in a Batch script, showing how variables can be accessed via arguments and environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/set-variables-in-scripts.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\"$(sauce)\" \"$(secret.Sauce)\"\n```\n\nLANGUAGE: batch\nCODE:\n```\n@echo off\nset sauceArgument=%~1\nset secretSauceArgument=%~2\n@echo No problem reading %sauceArgument% or %SAUCE%\n@echo But I cannot read %SECRET_SAUCE%\n@echo But I can read %secretSauceArgument% (but the log is redacted so I do not spoil\n      the secret)\n```\n\n----------------------------------------\n\nTITLE: Aligning TypeField Reference Names in WIT and ProcessConfiguration\nDESCRIPTION: TypeField references in work item types must match those defined in ProcessConfiguration.xml. This example shows correcting the ApplicationType field reference in a FeedbackRequest work item type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_38\n\nLANGUAGE: xml\nCODE:\n```\n  <TypeField refname=\"Custom.ApplicationType\" type=\"ApplicationType\">\n    <TypeFieldValues>\n      <TypeFieldValue value=\"Web application\" type=\"WebApp\" />\n      <TypeFieldValue value=\"Remote machine\" type=\"RemoteMachine\" />\n      <TypeFieldValue value=\"Client application\" type=\"ClientApp\" />\n    </TypeFieldValues>\n  </TypeField>  \n```\n\nLANGUAGE: xml\nCODE:\n```\n  <FIELD name=\"Application Type\" refname=\"Microsoft.AzureDevOps.Feedback.ApplicationType\" type=\"String\">\n    ...\n  </FIELD>\n```\n\nLANGUAGE: xml\nCODE:\n```\n  <FIELD name=\"Application Type\" refname=\"Custom.ApplicationType\" type=\"String\">\n    ...\n  </FIELD>\n```\n\n----------------------------------------\n\nTITLE: Querying Items Closed Within the Last 15 Days in Azure Boards (WIQL)\nDESCRIPTION: This WIQL code snippet filters for work items in the 'Closed' state whose 'Closed Date' is greater than today's date minus 15, using the `@Today-15` macro. This is useful for getting a list of recently closed work items. Fields required are 'State' and 'Closed Date'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_9\n\nLANGUAGE: WIQL\nCODE:\n```\nState = Closed\nAnd Closed Date  > @Today-15\n```\n\n----------------------------------------\n\nTITLE: Complete Widget Configuration HTML Template\nDESCRIPTION: Full HTML template for the widget configuration page including initialization code, event handlers, and query dropdown interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n    <head>                          \n        <script src=\"sdk/scripts/VSS.SDK.min.js\"></script>      \n        <script type=\"text/javascript\">\n            VSS.init({                        \n                explicitNotifyLoaded: true,\n                usePlatformStyles: true\n            });\n\n            VSS.require([\"AzureDevOps/Dashboards/WidgetHelpers\"], function (WidgetHelpers) {\n                VSS.register(\"HelloWorldWidget.Configuration\", function () {   \n                    var $queryDropdown = $(\"#query-path-dropdown\");\n\n                    return {\n                        load: function (widgetSettings, widgetConfigurationContext) {\n                            var settings = JSON.parse(widgetSettings.customSettings.data);\n                            if (settings && settings.queryPath) {\n                                 $queryDropdown.val(settings.queryPath);\n                             }\n\n                             $queryDropdown.on(\"change\", function () {\n                                 var customSettings = {data: JSON.stringify({queryPath: $queryDropdown.val()})};\n                                 var eventName = WidgetHelpers.WidgetEvent.ConfigurationChange;\n                                 var eventArgs = WidgetHelpers.WidgetEvent.Args(customSettings);\n                                 widgetConfigurationContext.notify(eventName, eventArgs);\n                             });\n\n                            return WidgetHelpers.WidgetStatusHelper.Success();\n                        },\n                        onSave: function() {\n                            var customSettings = {data: JSON.stringify({queryPath: $queryDropdown.val()})};\n                            return WidgetHelpers.WidgetConfigurationSave.Valid(customSettings); \n                        }\n                    }\n                });\n                VSS.notifyLoadSucceeded();\n            });\n        </script>       \n    </head>\n    <body>\n        <div class=\"container\">\n            <fieldset>\n                <label class=\"label\">Query: </label>\n                <select id=\"query-path-dropdown\" style=\"margin-top:10px\">\n                    <option value=\"\" selected disabled hidden>Please select a query</option>\n                    <option value=\"Shared Queries/Feedback\">Shared Queries/Feedback</option>\n                    <option value=\"Shared Queries/My Bugs\">Shared Queries/My Bugs</option>\n                    <option value=\"Shared Queries/My Tasks\">Shared Queries/My Tasks</option>                        \n                </select>\n            </fieldset>     \n        </div>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Basic Shelve Command Syntax in TFVC\nDESCRIPTION: The basic syntax for the shelve command allows storing pending changes with optional comment and validation options. This can be used to create a new shelveset with a specified name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelve-command.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntf shelve  [/replace] [/comment:(\"comment\"|@commentfile)] [shelvesetname] [/validate][/noprompt] [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps CLI Extension on macOS Agents\nDESCRIPTION: This snippet shows how to install the Azure DevOps CLI extension on macOS Microsoft-hosted agents, which don't come with the extension pre-installed unlike Windows and Linux agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n# Install Azure DevOps extension\n- bash: az extension add -n azure-devops\n  displayName: 'Install Azure DevOps extension'\n```\n\n----------------------------------------\n\nTITLE: Defining Variables in Azure DevOps Pipeline YAML\nDESCRIPTION: This YAML snippet defines several variables used within the Azure DevOps pipeline. It sets the agent VM image, the target Azure resource group name (which must already exist), the Azure location, the path to the Bicep template file, and the source folder containing the template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  vmImageName: 'ubuntu-latest'\n  resourceGroupName: '<resource-group-name>' # Needs to already exist\n  location: '<your-closest-location>'\n  templateFile: './main.bicep'\n  sourceFolder: 'quickstarts/microsoft.web/webapp-linux-managed-mysql/'\n```\n\n----------------------------------------\n\nTITLE: Building a Cargo Project and Consuming Dependencies\nDESCRIPTION: Command to build a Cargo project and download its dependencies. When used with an Azure Artifacts feed, this will also save copies of any upstream packages to your feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ncargo build\n```\n\n----------------------------------------\n\nTITLE: Defining Webhook Resources in Azure DevOps YAML Pipelines\nDESCRIPTION: This code snippet demonstrates how to reference a service connection and name a webhook in the resources section of a YAML pipeline. This configuration is used to create a webhook that can trigger pipeline runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  webhooks:\n    - webhook: MyWebhookTriggerAlias\n      connection: MyServiceConnection\n```\n\n----------------------------------------\n\nTITLE: Creating a Normal Git Commit\nDESCRIPTION: This snippet demonstrates initializing a Git repository, creating a new file, and making a normal commit. This establishes the baseline for showing date differences in later examples.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-dates.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit init\necho test > file.txt\ngit add *\ngit commit -m \"A normal commit message\"\n```\n\n----------------------------------------\n\nTITLE: Promoting Packages Using Curl\nDESCRIPTION: Curl command to promote a package to a desired view in Azure Artifacts using REST API calls with personal access token authentication\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nPAT=\"YOUR_PERSONAL_ACCESS_TOKEN\"\nENCODED_PAT=$(echo -n \":$PAT\" | base64 | tr -d '\\n')\n$ curl -X PATCH \"YOUR_ENDPOINT_URL\" \\\n-H \"Content-Type: application/json\" \\\n-H \"Authorization: Basic $ENCODED_PAT\" \\\n-d '{\n    \"views\":  {\n                  \"path\":  \"/views/-\",\n                  \"op\":  \"add\",\n                  \"value\":  \"YOUR_VIEW_NAME\"\n              }\n    }'\n```\n\n----------------------------------------\n\nTITLE: Uploading Python Package to Azure Artifacts Feed in Classic Pipeline\nDESCRIPTION: This command line script uploads a built Python package to an Azure Artifacts feed using twine in a Classic pipeline. It uses the PYPIRC_PATH environment variable for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pypi.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npython -m twine upload -r <FEED_NAME> --config-file $(PYPIRC_PATH) dist/*.whl\n```\n\n----------------------------------------\n\nTITLE: Counting Bugs Rolled Up to Features in Power BI\nDESCRIPTION: This Power BI M query retrieves Features with a count of their child Bugs. It filters Features that aren't removed, are in a specific area path, and have descendants. The query expands related entities and counts how many Bugs are children of each Feature.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_8\n\nLANGUAGE: powerbi-m\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n            &\"$filter=WorkItemType eq 'Feature'\"\n            &\" and State ne 'Removed'\"\n            &\" and startswith(Area/AreaPath,'{areapath}')\"\n            &\" and Descendants/any()\"    \n        &\"& $select=WorkItemId,Title,WorkItemType,State,AreaSK\"\n        &\"& $expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\"        \n            &\"Descendants(\"\n                &\"$apply=filter(WorkItemType eq 'Bug')\"\n                &\"/aggregate($count as CountOfBugs)\"\n            &\")\", \n        null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4])  \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Uploading Packages with twine in Azure Pipelines YAML\nDESCRIPTION: Executes a shell script invoking twine upload with a resolved feed, configuration file, and package path(s). Relies on prior authentication via TwineAuthenticate and correct path/environment setup. Placeholder text indicates where to provide feed/service details and package files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n- script: |\\n   twine upload -r \"<feed or service connection name>\" --config-file $(PYPIRC_PATH) <package path/files>\n```\n\n----------------------------------------\n\nTITLE: Escaping Newlines in Output Variables\nDESCRIPTION: This snippet shows how to escape newline characters when setting an output variable in an Azure DevOps pipeline using Bash.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_17\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- bash: |\n    escape_data() {\n      local data=$1\n      data=\"${data//'%'/'%AZP25'}\"\n      data=\"${data//$'\\n'/'%0A'}\"\n      data=\"${data//$'\\r'/'%0D'}\"\n      echo \"$data\"\n    }\n    echo \"##vso[task.setvariable variable=myStageVal;isOutput=true]$(escape_data $'foo\\nbar')\"\n  name: MyOutputVar\n```\n\n----------------------------------------\n\nTITLE: Git Pull from Remote Branch with Explicit Branch Names\nDESCRIPTION: Command to download and integrate commits from a remote branch into the current working branch. This combines fetch and merge operations in a single command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pulling.md#2025-04-22_snippet_6\n\nLANGUAGE: console\nCODE:\n```\ngit pull <remote repo> <remote branch name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Stateful Agent using Azure CLI\nDESCRIPTION: Azure CLI configuration for setting up a stateful agent with customized lifetime and grace period settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --agent-profile agent-profile.json\n   # other parameters omitted for space\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Stateful\": \n    {\n        \"maxAgentLifetime\": \"7.00:00:00\",\n        \"gracePeriodTimeSpan\": \"00:30:00\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Images in ARM Template\nDESCRIPTION: ARM template example showing how to configure three different images with aliases and buffer settings in a Managed DevOps Pool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-images.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                \"fabricProfile\": {\n                    \"images\": [\n                        {\n                            \"resourceId\": \"/subscriptions/subscription_id_placeholder/Providers/Microsoft.Compute/Locations/eastus/publishers/canonical/artifacttypes/vmimage/offers/0001-com-ubuntu-server-focal/skus/20_04-lts-gen2/versions/latest\",\n                            \"aliases\": [\n                                \"ubuntu-20.04-gen2\"\n                            ]\n                        },\n                        {\n                            \"wellKnownImageName\": \"windows-2022\"\n                        },\n                        {\n                            \"wellKnownImageName\": \"ubuntu-22.04\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Restricting Work Item Creation by Group in XML Process\nDESCRIPTION: This XML snippet shows how to restrict creation of work items by a specific group (Fabrikam Review Team) by configuring the workflow transition permission from empty state to New state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-samples.md#2025-04-22_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<WORKFLOW>\n... \n<TRANSITION from=\" \" to=\"New\"  \n   for=\"[Project]\\Developers\" \n   not=\"[Project]\\Fabrikam Review Team\"  \n   . . .  \n</TRANSITION> \n...  \n</WORKFLOW>\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch and Path Triggers with Wildcards in Azure DevOps\nDESCRIPTION: YAML configuration example showing how to set up trigger rules with branch includes/excludes and path filters using wildcard patterns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ci-triggers5.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  branches:\n    include:\n    - main\n    - releases/*\n    - feature/*\n    exclude:\n    - releases/old*\n    - feature/*-working\n  paths:\n    include:\n    - docs/*.md\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Version Node.js Build Matrix in YAML\nDESCRIPTION: Demonstrates using a matrix strategy in Azure Pipelines YAML to run build steps (`UseNode@1` and `npm install`) across multiple specified Node.js versions (16.x and 18.x). The `$(node_version)` variable dynamically sets the Node version for each job in the matrix. Requires Azure DevOps 2020 or later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-latest'\nstrategy:\n  matrix:\n    node_16_x:\n      node_version: 16.x\n    node_13_x:\n      node_version: 18.x\n\nsteps:\n- task: UseNode@1\n  inputs:\n    version: $(node_version)\n\n- script: npm install\n```\n\n----------------------------------------\n\nTITLE: OData Response with Warnings\nDESCRIPTION: Example of an OData response JSON that includes warnings about query optimization, specifically highlighting the recommendation to include a $select or $apply clause.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\": \"https://{OrganizationName}.tfsallin.net/_odata/v1.0/$metadata#WorkItems\",\n  \"@vsts.warnings\": [\n    \"The specified query does not include a $select or $apply clause which is recommended for all queries.\"\n  ],\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Code Coverage with Coverlet in Azure Pipelines\nDESCRIPTION: YAML configuration for running tests and publishing code coverage metrics using Coverlet and the PublishCodeCoverageResults task. Includes .NET build, test execution with coverage collection, and publishing results in Cobertura format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\n- task: UseDotNet@2\n  inputs:\n    version: '8.x'\n    includePreviewVersions: true # Required for preview versions\n    \n- task: DotNetCoreCLI@2\n  displayName: 'dotnet build'\n  inputs:\n    command: 'build'\n    configuration: $(buildConfiguration)\n    \n- task: DotNetCoreCLI@2\n  displayName: 'dotnet test'\n  inputs:\n    command: 'test'\n    arguments: '--configuration $(buildConfiguration) --collect:\"XPlat Code Coverage\" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'\n    publishTestResults: true\n    projects: 'MyTestLibrary' # update with your test project directory\n    \n- task: PublishCodeCoverageResults@2\n  displayName: 'Publish code coverage report'\n  inputs:\n    codeCoverageTool: 'Cobertura'\n    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'\n```\n\n----------------------------------------\n\nTITLE: Defining a Linux Container Job in YAML Pipeline\nDESCRIPTION: This snippet shows how to define a simple Linux container job using Ubuntu 18.04 that runs the 'printenv' command inside the container.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/container-phases.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-latest'\n\ncontainer: ubuntu:18.04\n\nsteps:\n- script: printenv\n```\n\n----------------------------------------\n\nTITLE: Setting Dependent Field Values Based on Selection in XML Process\nDESCRIPTION: This XML code maps values from a T-shirt Size field to a numerical Size field using WHEN and COPY rules. It defines the allowed values for the T-shirt size and the corresponding numerical values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-samples.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<FIELDS>\n   ...\n   <FIELD name=\"Tee-Shirt Size\" refname=\"Fabrikam.TShirt.Size\" type=\"String\">\n        <HELPTEXT>Estimate of overall size for work to be done; Small (2), Medium (6), Large (18), X-Large (30).</HELPTEXT>\n        <ALLOWEDVALUES expanditems=\"true\">\n          <LISTITEM value=\"Large\" />\n          <LISTITEM value=\"Medium\" />\n          <LISTITEM value=\"Small\" />\n          <LISTITEM value=\"X-Large\" />\n        </ALLOWEDVALUES>\n   </FIELD> \n   <FIELD name=\"Size\" refname=\"Fabrikam.Size\" type=\"Integer\">\n        <HELPTEXT>Integer estimate of overall size for work to be done; Automatically fill in based on Tee-Shirt Size. Allow any value.</HELPTEXT>\n        <WHEN field=\"Fabrikam.TShirt.Size\" value=\"Small\">\n          <COPY value=\"2\" />\n        </WHEN>\n        <WHEN field=\"Fabrikam.TShirt.Size\" value=\"Medium\">\n          <COPY value=\"6\" />\n        </WHEN>\n        <WHEN field=\"Fabrikam.TShirt.Size\" value=\"Large\">\n          <COPY value=\"18\" />\n        </WHEN>\n        <WHEN field=\"Fabrikam.TShirt.Size\" value=\"X-Large\">\n          <COPY value=\"30\" />\n        </WHEN>\n   </FIELD>\n   ...\n </FIELDS>\n```\n\n----------------------------------------\n\nTITLE: Pushing Local Branch to Same-Named Remote Branch\nDESCRIPTION: Command to push commits from a local branch to a same-named remote branch. Creates the remote branch if it doesn't exist.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pushing.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit push <remote repo> <local branch name>\n```\n\n----------------------------------------\n\nTITLE: Configuring App Center Distribute Task in Azure Pipelines YAML\nDESCRIPTION: Defines the `AppCenterDistribute@3` task to distribute the application build using Visual Studio App Center. It specifies the App Center service connection ('AppCenter'), the application identifier (`$(APP_CENTER_SLUG)`), the path to the app file (`$(APP_FILE)`), enables symbol collection ('Apple'), provides release notes directly ('input'), and targets distribution to specific tester groups ('groups'). A configured App Center service connection is required. Note: Visual Studio App Center is scheduled for retirement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/xcode.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AppCenterDistribute@3\n  inputs:\n    serverEndpoint: 'AppCenter'\n    appSlug: '$(APP_CENTER_SLUG)'\n    appFile: '$(APP_FILE)' # Relative path from the repo root to the IPA file you want to publish\n    symbolsOption: 'Apple'\n    releaseNotesOption: 'input'\n    releaseNotesInput: 'Here are the release notes for this version.'\n    destinationType: 'groups'\n```\n\n----------------------------------------\n\nTITLE: Configuring settings.xml for On-Premises Azure DevOps Maven Authentication\nDESCRIPTION: This XML snippet demonstrates how to set up the settings.xml file for authenticating with an on-premises Azure DevOps Maven feed. It includes a server configuration with placeholders for the collection name and Personal Access Token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/maven/pom-and-settings.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n  <servers>\n    <server>\n      <id>MavenDemo</id>\n      <username><COLLECTION_NAME></username>\n      <password>[PERSONAL_ACCESS_TOKEN]</password>\n    </server>\n  </servers>\n```\n\n----------------------------------------\n\nTITLE: Switching to branches using Git switch command\nDESCRIPTION: Alternative commands using git switch to change branches. The first command switches to an existing branch, while the second creates and switches to a new branch in one step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-branch.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit switch <existing branch name>\n```\n\nLANGUAGE: console\nCODE:\n```\ngit switch -c <new branch name>\n```\n\n----------------------------------------\n\nTITLE: Running Diagnostics for Self-Hosted Agent in Azure DevOps (Bash)\nDESCRIPTION: This command runs a diagnostic suite to troubleshoot issues with a self-hosted agent after configuration. It's available for agent versions 2.165.0 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/configure-help-unix.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh --diagnostics\n```\n\n----------------------------------------\n\nTITLE: Advanced Scheduled Triggers with Batch Option in Azure Pipelines\nDESCRIPTION: Extended YAML configuration for scheduled triggers in Azure Pipelines, including the batch option to control concurrent scheduled runs. Available in Azure DevOps Server 2022.1 and higher.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: string # cron syntax defining a schedule\n  displayName: string # friendly name given to a specific schedule\n  branches:\n    include: [ string ] # which branches the schedule applies to\n    exclude: [ string ] # which branches to exclude from the schedule\n  always: boolean # whether to always run the pipeline or only if there have been source code or pipeline settings changes since the last successful scheduled run. The default is false.\n  batch: boolean # Whether to run the pipeline if the previously scheduled run is in-progress; the default is false.\n  # batch is available in Azure DevOps Server 2022.1 and higher\n```\n\n----------------------------------------\n\nTITLE: Managing Agent Service on macOS using svc.sh (Shell)\nDESCRIPTION: Provides the `./svc.sh` script as a convenient method to run and manage the Azure DevOps agent as a `launchd` LaunchAgent service on macOS. Users can employ this script for standard service management tasks, though alternative mechanisms are also possible.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n./svc.sh\n```\n\n----------------------------------------\n\nTITLE: OData Query for All Pipeline Tasks Duration Trend\nDESCRIPTION: An OData query that calculates the 80th percentile task duration for all tasks in a specific pipeline, grouped by task name and completion date. Enables comparing duration trends across multiple tasks in a single report.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_9\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelinename}'\n    and PipelineRunCompletedOn/Date ge {startdate}\n    and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded')\n    and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1)\n    )\n/compute(\n    percentile_cont(ActivityDurationSeconds, 0.8, TaskDisplayName, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds)\n/groupby(\n    (TaskDuration80thPercentileInSeconds, TaskDisplayName, PipelineRunCompletedOn/Date))\n&$orderby=PipelineRunCompletedOn/Date asc\n```\n\n----------------------------------------\n\nTITLE: Stopping Azure Pipelines Linux Agent Service\nDESCRIPTION: Command to stop the Azure Pipelines Linux agent service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh stop\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Azure Repos in Slack\nDESCRIPTION: This snippet demonstrates the slash command syntax for subscribing to all Git repositories in a project using the Azure Repos app in Slack. It includes the command structure and an example with a project URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-161-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nSlash command: /azrepos subscribe [project url] ​\n\nExample: /azrepos subscribe `https://dev.azure.com/myorg/myproject`​\n```\n\n----------------------------------------\n\nTITLE: Enabling Admin User for Azure Container Registry using Azure CLI\nDESCRIPTION: This Azure CLI command uses `az acr update` with the `--admin-enabled true` flag to enable the admin user account on the specified Azure Container Registry (`<acrName>`). This is often required for certain authentication methods or administrative tasks related to the registry, although the template typically creates a service principal connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/acr-template.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr update -n <acrName> --admin-enabled true\n```\n\n----------------------------------------\n\nTITLE: Publishing Python Package to Azure Artifacts\nDESCRIPTION: Command to publish Python package to Azure Artifacts feed using twine\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/python-packages.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ntwine upload -r <FEED_NAME> dist/*\n```\n\n----------------------------------------\n\nTITLE: Removing Build Tag using Azure DevOps CLI\nDESCRIPTION: This Azure CLI command removes a build tag named 'prod' from a specific build in an Azure DevOps project. It requires the build ID, tag name, organization, and project name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/build-tag.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines build tag delete --build-id 1234\n                           --tag prod\n                           --org https://dev.azure.com/Contoso/\n                           --project contoso\n```\n\n----------------------------------------\n\nTITLE: Querying job history for deprecated images using PowerShell\nDESCRIPTION: This PowerShell command uses a script to query the job history across projects in an Azure DevOps organization to find pipelines using retired images. It requires specifying the organization URL and a personal access token (PAT).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/hosted.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n./QueryJobHistoryForRetiredImages.ps1 -accountUrl https://dev.azure.com/{org} -pat {pat}\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Azure Pipelines Linux Agent Service\nDESCRIPTION: Command to uninstall the Azure Pipelines Linux agent service. It's recommended to stop the service before uninstalling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh uninstall\n```\n\n----------------------------------------\n\nTITLE: Querying All Revisions for Active Work Items\nDESCRIPTION: This query retrieves the complete revision history for all work items currently in an 'Active' state. It demonstrates how to filter revisions based on the current state of the parent work item using navigation properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_13\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItemRevisions?\n  $filter=WorkItem/State eq 'Active'\n  &$select=WorkItemId, Title\n```\n\n----------------------------------------\n\nTITLE: Cloning a Single Branch from a Git Repository\nDESCRIPTION: Git command for cloning only a specific branch from a repository. This is useful when working with large repositories where only one branch is of interest.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/clone.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit clone <clone URL> --branch <branch name> --single-branch\n```\n\n----------------------------------------\n\nTITLE: Accessing Repository Details in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to access details of non-self repositories using the resources.repositories template context object. It demonstrates setting a variable with the ref of another repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/multi-repo-checkout.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n  - repository: other\n    type: git\n    name: MyProject/OtherTools\n\nvariables:\n  tools.ref: $[ resources.repositories['other'].ref ]\n\nsteps:\n- checkout: self\n- checkout: other\n- bash: |\n    echo \"Tools version: $TOOLS_REF\"\n```\n\n----------------------------------------\n\nTITLE: Rebasing a Branch using Git Command Line\nDESCRIPTION: This snippet shows how to use the git rebase command to integrate commits from a source branch into a target branch. It includes the basic syntax and a simplified version for when the current branch is the target branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/rebase.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit rebase <source branch name> <target branch name>\n```\n\nLANGUAGE: console\nCODE:\n```\ngit rebase <source branch name>\n```\n\n----------------------------------------\n\nTITLE: Publishing Symbols to Azure Artifacts Symbol Server (YAML)\nDESCRIPTION: YAML snippet to configure the PublishSymbols task for publishing symbols to Azure Artifacts symbol server. Specifies symbol folder, search pattern, and server type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/symbols.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishSymbols@2\n  inputs:\n    SymbolsFolder: '$(Build.SourcesDirectory)'\n    SearchPattern: '**/bin/**/*.pdb'\n    IndexSources: true\n    PublishSymbols: true\n    SymbolServerType: 'TeamServices' \n    SymbolExpirationInDays: '36530'\n    IndexableFileFormats: 'Default'\n    DetailedLog: true\n    SymbolsArtifactName: 'Symbols_$(BuildConfiguration)'\n```\n\n----------------------------------------\n\nTITLE: Using succeededOrFailed() Condition in Azure DevOps Pipelines\nDESCRIPTION: This snippet shows how to use the succeededOrFailed() condition to run a job even if a previous dependency fails, unless the run is canceled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/task-run-built-in-conditions.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsucceededOrFailed()\n```\n\n----------------------------------------\n\nTITLE: Pipeline-Level Run Latest Lock Behavior Configuration\nDESCRIPTION: YAML configuration demonstrating how to set runLatest lock behavior at the pipeline level to ensure only the latest run acquires the resource lock.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/approvals.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nlockBehavior: runLatest\nstages:\n- stage: A\n  jobs:\n  - job: Job\n    steps:\n    - script: Hey!\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Web App Hostname and State using Azure CLI\nDESCRIPTION: This Azure CLI command lists Web Apps within the specified resource group ('$rgName'). It uses a query to filter the output, showing only the default hostname and the current state of each Web App in a table format. Requires the resource group to exist and the $rgName variable to be set.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/nodejs-tutorial.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz webapp list \\\n  --resource-group $rgName \\\n  --query \"[].{hostName: defaultHostName, state: state}\" \\\n  --output table\n```\n\n----------------------------------------\n\nTITLE: Project-Level OData Query Base URL - Cloud\nDESCRIPTION: Base URL structure for making project-scoped OData queries in Azure DevOps Services cloud environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/account-scoped-queries.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/\n```\n\n----------------------------------------\n\nTITLE: Updating Environment Variables for Azure Pipelines Linux Agent Service\nDESCRIPTION: Commands to update environment variables for the Azure Pipelines Linux agent service. This is useful after installing new software or changing system configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n./env.sh\nsudo ./svc.sh stop\nsudo ./svc.sh start\n```\n\n----------------------------------------\n\nTITLE: Defining Hub Group and Hub in Azure DevOps Extension Manifest\nDESCRIPTION: This JSON snippet demonstrates how to define a hub group and a hub within an Azure DevOps extension manifest. It includes the namespace, name, description, version, provider details, baseUri, icon, links, and contributions for the hub group and hub.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-hub-group.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"namespace\": \"Fabrikam.myextension\",\n\t\"name\": \"My Extension\",\n\t\"description\": \"This is my first extension\",\n\t\"version\": \"1.0\",\n\t\"provider\": {\n\t\t\"name\": \"Fabrikam Fiber Inc\"\n\t},\n\t\"baseUri\": \"https://localhost:port\",\n\t\"icon\": \"images/logo.png\",\n\t\"links\": {\n\t\t\"info\": \"info.html\",\n\t\t\"support\": \"support.html\",\n\t\t\"termsOfService\": \"terms-of-service.html\"\n\t},\n\t\"contributions\": {\n\t\t\"vss.web#hubGroups.project\": [\n\t\t\t{\n\t\t\t\t\"id\": \"samples\",\n\t\t\t\t\"name\": \"Samples\",\n\t\t\t\t\"order\":  30\n\t\t\t}\n\t\t],\n\t\t\"vss.web#hubs\": [\n\t\t\t{\n\t\t\t\t\"id\": \"myhub\",\n\t\t\t\t\"name\": \"Hello\",\n\t\t\t\t\"groupId\": \"samples\",\n\t\t\t\t\"uri\": \"hello-world.html\"\n\t\t\t}\n\t\t]\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Action Context Handler for Team-Aware Extensions\nDESCRIPTION: Menu contribution handler showing how to access team information from the actionContext parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/web-navigation.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar menuContributionHandler = (function () {\n        \"use strict\";\n        return {\n            // This is a callback that gets invoked when a user selects the newly contributed menu item\n            // The actionContext parameter contains team information.\n            execute: function (actionContext) {\n                if(\"team\" in actionContext) {\n                    alert(`Team. Id is ${actionContext.team.id}, Name is ${actionContext.team.name}`);\n                }\n            }\n        };\n    }());\n```\n\n----------------------------------------\n\nTITLE: Publishing Crates to Feed in YAML Pipeline\nDESCRIPTION: This PowerShell snippet within a YAML pipeline shows how to publish a Cargo package to a specified feed using the cargo publish command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/cargo-pipelines.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n- powershell: |\n   cargo publish --registry <FEED_NAME>\n  env:\n    SYSTEM_ACCESSTOKEN: $(system.accesstoken)\n```\n\n----------------------------------------\n\nTITLE: Using Restore Keys with Yarn Caching in Azure DevOps Pipeline\nDESCRIPTION: This example demonstrates the use of restore keys with the Cache task for Yarn dependencies. It shows how to set up fallback cache keys when the primary key doesn't yield a match, enabling partial cache restoration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn\n\nsteps:\n- task: Cache@2\n  inputs:\n    key: '\"yarn\" | \"$(Agent.OS)\" | yarn.lock'\n    restoreKeys: |\n       yarn | \"$(Agent.OS)\"\n       yarn\n    path: $(YARN_CACHE_FOLDER)\n  displayName: Cache Yarn packages\n\n- script: yarn --frozen-lockfile\n```\n\n----------------------------------------\n\nTITLE: Specifying a macOS Agent Pool in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to configure the pipeline to run jobs on a Microsoft-hosted agent using the latest macOS image by setting the `pool.vmImage` property to `macos-latest`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: \"macos-latest\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to Linux VM via SSH in Azure\nDESCRIPTION: This command establishes an SSH connection to a Linux VM using its public IP address. It's executed in the Azure portal's Cloud Shell.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/includes/create-linux-deployment-group.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nssh <publicIpAddress>\n```\n\n----------------------------------------\n\nTITLE: Complete HTML Widget with REST API Integration\nDESCRIPTION: The final HTML file for an Azure DevOps dashboard widget that fetches query information via REST API and displays it. It includes all necessary initialization, data fetching, and rendering code.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>    \n    <script src=\"sdk/scripts/VSS.SDK.min.js\"></script>\n    <script type=\"text/javascript\">\n        VSS.init({\n            explicitNotifyLoaded: true,\n            usePlatformStyles: true\n        });\n\n        VSS.require([\"AzureDevOps/Dashboards/WidgetHelpers\", \"AzureDevOps/WorkItemTracking/RestClient\"], \n            function (WidgetHelpers, TFS_Wit_WebApi) {\n                WidgetHelpers.IncludeWidgetStyles();\n                VSS.register(\"HelloWorldWidget2\", function () {                \n                    var projectId = VSS.getWebContext().project.id;\n\n                    var getQueryInfo = function (widgetSettings) {\n                        // Get a WIT client to make REST calls to Azure DevOps Services\n                        return TFS_Wit_WebApi.getClient().getQuery(projectId, \"Shared Queries/Feedback\")\n                            .then(function (query) {\n                                // Create a list with query details                                \n                                var $list = $('<ul>');\n                                $list.append($('<li>').text(\"Query ID: \" + query.id));\n                                $list.append($('<li>').text(\"Query Name: \" + query.name));\n                                $list.append($('<li>').text(\"Created By: \" + (query.createdBy ? query.createdBy.displayName : \"<unknown>\")));\n\n                                // Append the list to the query-info-container\n                                var $container = $('#query-info-container');\n                                $container.empty();\n                                $container.append($list);\n\n                                // Use the widget helper and return success as Widget Status\n                                return WidgetHelpers.WidgetStatusHelper.Success();\n                            }, function (error) {\n                                // Use the widget helper and return failure as Widget Status\n                                return WidgetHelpers.WidgetStatusHelper.Failure(error.message);\n                            });\n                    }\n\n                    return {\n                        load: function (widgetSettings) {\n                            // Set your title\n                            var $title = $('h2.title');\n                            $title.text('Hello World');\n\n                            return getQueryInfo(widgetSettings);\n                        }\n                    }\n                });\n            VSS.notifyLoadSucceeded();\n        });       \n    </script>\n\n</head>\n<body>\n    <div class=\"widget\">\n        <h2 class=\"title\"></h2>\n        <div id=\"query-info-container\"></div>\n    </div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Webhook Request Body Example\nDESCRIPTION: Example JSON payload for webhook trigger request showing message structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"resource\": {\n        \"message\": {\n            \"title\": \"Hello, world!\",\n            \"subtitle\": \"I'm using WebHooks!\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Historical WIQL Query with ASOF Clause\nDESCRIPTION: WIQL query example demonstrating historical data retrieval using the ASOF clause to get work items as they existed at a specific point in time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_20\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT\n    [System.Id],\n    [System.Title],\n    [System.State],\n    [System.IterationPath]\nFROM workitems\nWHERE\n    [System.TeamProject] = @project\n    AND [System.WorkItemType] <> ''\n    AND ([System.IterationPath] UNDER 'Fabrikam Fiber\\Release 1'\n    AND [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>') \n    ASOF  '01-05-2022 00:00:00.0000000'\n```\n\n----------------------------------------\n\nTITLE: Configuring WorkFolder Demand in Azure Pipeline\nDESCRIPTION: Shows how to set a custom work folder location for pipeline agents using the WorkFolder demand. This can be used to specify alternate drive and directory locations for agent work folders.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/demands.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: fabrikam-managed-pool # Name of Managed DevOps Pool\n  demands:\n  - WorkFolder -equals c:\\custom-work-folder # Windows agent example\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps STA Authentication Workaround\nDESCRIPTION: Provides a workaround for the interactive authentication dialog issue in Single Threaded Apartment (STA) scenarios, commonly encountered in WPF applications. Uses async initialization with VssClientCredentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/dotnet-client-libraries.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nasync void InitAzureDevOps()\n{\n    Uri _uri = new Uri(\"https://dev.azure.com/MyAccount/\");\n\n    var creds = new VssClientCredentials(new WindowsCredential(false),\n                                         new VssFederatedCredential(false),\n                                         CredentialPromptType.PromptIfNeeded);\n\n    VssConnection vssConnection = new VssConnection(_uri, creds);\n    CancellationTokenSource source = new CancellationTokenSource();\n    CancellationToken token = source.Token;\n    await vssConnection.ConnectAsync(token);\n\n    ...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GitHub PR Triggers with Draft PR Control in Azure Pipelines YAML\nDESCRIPTION: This YAML schema defines the structure for the 'pr' trigger in Azure Pipelines, specifically for GitHub repositories. It includes options to control automatic cancellation ('autoCancel'), filter by branches ('branches') and file paths ('paths'), and specifies whether to trigger builds for draft pull requests using the 'drafts' boolean flag (defaulting to 'true'). This configuration allows users to manage build resources for draft PRs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-176-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  autoCancel: boolean # indicates whether additional pushes to a PR should cancel in-progress runs for the same PR. Defaults to true\n  branches:\n    include: [ string ] # branch names which will trigger a build\n    exclude: [ string ] # branch names which will not\n  paths:\n    include: [ string ] # file paths which must match to trigger a build\n    exclude: [ string ] # file paths which will not trigger a build\n  drafts: boolean # whether to build draft PRs\n```\n\n----------------------------------------\n\nTITLE: Example JSON Response for Project Query\nDESCRIPTION: Shows a sample JSON response returned when querying projects in Azure DevOps, including project details and collection information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/how-to/call-rest-api.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"value\": [\n        {\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\n            \"name\": \"Fabrikam-Fiber-TFVC\",\n            \"url\": \"https: //dev.azure.com/fabrikam-fiber-inc/_apis/projects/00000000-0000-0000-0000-000000000000\",\n            \"description\": \"TeamFoundationVersionControlprojects\",\n            \"collection\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000\",\n                \"name\": \"DefaultCollection\",\n                \"url\": \"https: //dev.azure.com/fabrikam-fiber-inc/_apis/projectCollections/00000000-0000-0000-0000-000000000000\",\n                \"collectionUrl\": \"https: //dev.azure.com/fabrikam-fiber-inc\"\n            },\n            \"defaultTeam\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000\",\n                \"name\": \"Fabrikam-Fiber-TFVCTeam\",\n                \"url\": \"https: //dev.azure.com/fabrikam-fiber-inc/_apis/projects/00000000-0000-0000-0000-000000000000/teams/00000000-0000-0000-0000-000000000000\"\n            }\n        },\n        {\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\n            \"name\": \"Fabrikam-Fiber-Git\",\n            \"url\": \"https: //dev.azure.com/fabrikam-fiber-inc/_apis/projects/00000000-0000-0000-0000-000000000000\",\n            \"description\": \"Gitprojects\",\n            \"collection\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000\",\n                \"name\": \"DefaultCollection\",\n                \"url\": \"https: //dev.azure.com/fabrikam-fiber-inc/_apis/projectCollections/00000000-0000-0000-0000-000000000000\",\n                \"collectionUrl\": \"https: //dev.azure.com/fabrikam-fiber-inc\"\n            },\n            \"defaultTeam\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000\",\n                \"name\": \"Fabrikam-Fiber-GitTeam\",\n                \"url\": \"https: //dev.azure.com/fabrikam-fiber-inc/_apis/projects/00000000-0000-0000-0000-000000000000/teams/00000000-0000-0000-0000-000000000000\"\n            }\n        }\n    ],\n    \"count\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Filter Conditions with WHERE Clause in WIQL\nDESCRIPTION: Provides a simple example of a WIQL WHERE clause to filter work items. It selects 'User Story' work items that are in the 'Active' state and assigned to the current user (using the '@Me' macro). Field names with spaces must be enclosed in square brackets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_3\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE [Work Item Type] = 'User Story'\n   AND [State] = 'Active'\n   AND [Assigned to] = @Me\n```\n\n----------------------------------------\n\nTITLE: Setting Secrets in Azure DevOps Pipelines with PowerShell\nDESCRIPTION: Demonstrates how to register a transformed or derived value as a secret using the task.setsecret command in PowerShell. The value will be masked in logs to protect sensitive information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\n- pwsh: |\n    $NewSecret = [convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($env:OLDSECRET))\n    Write-Host \"##vso[task.setsecret]$NewSecret\"\n  name: SetSecret\n  env:\n    OLDSECRET: \"SeCrEtVaLuE\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Includes Template in Azure Pipeline YAML\nDESCRIPTION: A basic example demonstrating how to include a template in the steps section of a pipeline. This approach inserts the template's code directly into the outer file at the reference point.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- template: templates/include-npm-steps.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Git SSL Backend Provider via Command Line\nDESCRIPTION: Sets the http.sslBackend option to specify which TLS/SSL backend Git will use for encrypted communications. This can be set to openssl or schannel (Windows Secure Channel).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_8\n\nLANGUAGE: console\nCODE:\n```\ngit config --global http.sslBackend [openssl|schannel]\n```\n\n----------------------------------------\n\nTITLE: Querying Test Suite Execution Data using OData REST Query\nDESCRIPTION: This OData REST query retrieves test point data and aggregates it by test suite at level 3 of the hierarchy. It calculates execution metrics including total count, pass/fail counts, and execution percentages for test suites within a specified test plan.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-aggregate-data-level.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints?  \n$apply=filter((TestSuite/TestPlanTitle eq '{testPlanTitle}' and TestSuite/IdLevel3 ne null)) \n/groupby( \n    (TestSuite/TitleLevel3), \n    aggregate( \n        $count as TotalCount,  \n        cast(LastResultOutcome eq 'Passed', Edm.Int32) with sum as PassedCount, \n        cast(LastResultOutcome eq 'Failed', Edm.Int32) with sum as FailedCount, \n        cast(LastResultOutcome eq 'None', Edm.Int32) with sum as  NotRunCount, \n        cast(LastResultOutcome ne 'None', Edm.Int32) with sum as RunCount \n    )\n)\n/compute( \n    RunCount mul 100 div TotalCount as RunPercentage, \n    NotRunCount mul 100 div TotalCount as NotRunPercentage, \n    iif(TotalCount gt NotRunCount, PassedCount mul 100 div RunCount,0) as PassedPercentage, \n    iif(TotalCount gt NotRunCount, FailedCount mul 100 div RunCount,0) as FailedPercentage \n) \n&$orderby=RunPercentage desc\n```\n\n----------------------------------------\n\nTITLE: Project Directory Setup Command\nDESCRIPTION: Command line instructions for creating and navigating to the project directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmkdir pr-server\ncd pr-server\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Repository in pom.xml for Azure Artifacts\nDESCRIPTION: XML snippet to add to the repositories and distributionManagement sections in a Maven pom.xml file to connect to an Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_1\n\nLANGUAGE: command\nCODE:\n```\n<repository>\n  <id>[FEED-NAME]</id>\n  <url>https://pkgs.dev.azure.com/[ORGANIZATION-NAME]/_packaging/[FEED-NAME]/maven/v1</url>\n  <releases>\n    <enabled>true</enabled>\n  </releases>\n  <snapshots>\n    <enabled>true</enabled>\n  </snapshots>\n</repository>\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Variables for Kubernetes Deployment\nDESCRIPTION: YAML snippet for defining variables to use in a Kubernetes deployment pipeline. These variables are typically defined when using the Azure Kubernetes Services template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-kubernetes.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  # Container registry service connection established during pipeline creation\n  dockerRegistryServiceConnection: ''\n  imageRepository: ''\n  containerRegistry: ''\n  dockerfilePath: '**/Dockerfile'\n  tag: '$(Build.BuildId)'\n  imagePullSecret: ''\n\n  # Agent VM image name\n  vmImageName: 'ubuntu-latest'\n  \n  # Name of the new namespace being created to deploy the PR changes\n  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'\n```\n\n----------------------------------------\n\nTITLE: Basic Extension Core Properties Configuration\nDESCRIPTION: Example showing the required core attributes for an Azure DevOps extension manifest including the extension ID and installation targets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"galleryFlags\": [\n        \"Public\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Target Branches for Pull Requests in Azure DevOps with YAML\nDESCRIPTION: This YAML configuration specifies preferred target branches for pull requests in Azure DevOps. The file should be placed at `.azuredevops/pull_request_targets.yml` in your repository's default branch. It prioritizes the main branch while also considering branches that start with 'release/' or 'feature/' prefixes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/repos/sprint-246-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npull_request_targets:\n  - main\n  - release/*\n  - feature/*\n```\n\n----------------------------------------\n\nTITLE: GitHub App Permissions Table in Markdown\nDESCRIPTION: A markdown table showing the permissions required by the Azure Pipelines GitHub App and how each permission is utilized.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Permission | How Azure Pipelines uses the permission |\n|------------|-----------------------------------|\n| Write access to code | Only upon your deliberate action, Azure Pipelines will simplify creating a pipeline by committing a YAML file to a selected branch of your GitHub repository. |\n| Read access to metadata | Azure Pipelines will retrieve GitHub metadata for displaying the repository, branches, and issues associated with a build in the build's summary. |\n| Read and write access to checks | Azure Pipelines will read and write its own build, test, and code coverage results to be displayed in GitHub. |\n| Read and write access to pull requests | Only upon your deliberate action, Azure Pipelines will simplify creating a pipeline by creating a pull request for a YAML file that was committed to a selected branch of your GitHub repository. Pipelines retrieves request metadata to display in build summaries associated with pull requests. |\n```\n\n----------------------------------------\n\nTITLE: Webhook Resource Definition\nDESCRIPTION: Configuration for webhook resource to integrate pipelines with external services and trigger automated workflows.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  webhooks:\n    - webhook: WebHook\n      connection: IncomingWH\n\nsteps:  \n- script: echo ${{ parameters.WebHook.resource.message.title }}\n```\n\n----------------------------------------\n\nTITLE: File Path and Email Validation Policy Configuration - Markdown\nDESCRIPTION: Markdown documentation showing how to configure repository policies for file path validation and commit author email validation in Azure DevOps. These policies help control which file paths can be modified and which email addresses are allowed for commit authors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n1. Select **Project Settings** > **Repositories**, and select a repository if you want to configure only that repository.\n2. On the **Policies** tab of the **All Repositories** or **\\<Repository name>** page, under **Repository Policies**, set **File path validation** to **On** or **Off**.\n3. If you turn on the policy, specify the path or paths to block.\n\n   You can specify exact paths and wildcards. Exact paths begin with `/`. You can also specify multiple paths by using `;` as a separator. Paths prefixed with `!` are excluded. Order is important.\n```\n\n----------------------------------------\n\nTITLE: Using `${{ elseif }}` Conditional Expressions in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to leverage `${{ elseif }}` and `${{ else }}` expressions to define pipeline variables conditionally. The value of the `testsFolder` variable is determined by comparing the `parameters.os` runtime parameter to 'win', 'linux', or other values, enabling OS-specific configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-192-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  ${{ if eq(parameters.os, 'win') }}:\n    testsFolder: windows\n  ${{ elseif eq(parameters.os, 'linux') }}:\n    testsFolder: linux\n  ${{ else }}:\n    testsFolder: mac\n```\n\n----------------------------------------\n\nTITLE: Displaying Security Roles Table in Markdown\nDESCRIPTION: This code snippet uses Markdown syntax to create a table showing security roles for environments in Azure Pipelines. It includes role names and their descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/policies/permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-tdCol2BreakAll\"]  \n> | Role | Description |\n> |------------------------------------|--------|\n> | **Creator** | Can create environments in the project. It only applies to project-level security. Contributors are automatically assigned this role. |\n> | **Reader** | Can view the environment. |\n> | **User** | Can use the environment when creating or editing YAML pipelines. |\n> | **Administrator** | Can administer permissions, create, manage, view and use environments. The creator of an environment is granted the administrator role for that environment.  Administrators can also open access to an environment for all pipelines in the project. |\n```\n\n----------------------------------------\n\nTITLE: Adding Work Scope to Extension Manifest\nDESCRIPTION: JSON snippet showing how to add the vso.work scope to the extension manifest, which grants the widget read-only access to queries and work items in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"scopes\":[\n        \"vso.work\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Azure DevOps Service Connections to Workload Identity Federation using PowerShell\nDESCRIPTION: This script automates the conversion of multiple Azure Resource Manager (azurerm) service connections within Azure DevOps from Service Principal secret authentication to Workload Identity Federation. Dependencies include Azure CLI (with 'az rest' support), PowerShell 7.3+, and sufficient permissions to modify service connections. Required parameters are the Azure DevOps project name and organization URL. The script logs into Azure, retrieves convertible azurerm service connections, and prompts for action per connection; conversions are performed using the Azure DevOps REST API. Inputs required are Project and OrganizationUrl; outputs are status messages and updated service connections. The script requires PowerShell 7.3+ and requires user interaction for conversion confirmation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-233-update.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n#!/usr/bin/env pwsh\\n<# \\n.SYNOPSIS \\n    Convert multiple Azure Resource Manager service connection(s) to use Workload identity federation\\n\\n.LINK\\n    https://aka.ms/azdo-rm-workload-identity-conversion\\n\\n.EXAMPLE\\n    ./convert_azurerm_service_connection_to_oidc_simple.ps1 -Project <project> -OrganizationUrl https://dev.azure.com/<organization>\\n#> \\n#Requires -Version 7.3\\n\\nparam ( \\n    [parameter(Mandatory=$true,HelpMessage=\"Name of the Azure DevOps Project\")]\\n    [string]\\n    [ValidateNotNullOrEmpty()]\\n    $Project,\\n\\n    [parameter(Mandatory=$true,HelpMessage=\"Url of the Azure DevOps Organization\")]\\n    [uri]\\n    [ValidateNotNullOrEmpty()]\\n    $OrganizationUrl\\n) \\n$apiVersion = \"7.1\"\\n$PSNativeCommandArgumentPassing = \"Standard\" \\n\\n#-----------------------------------------------------------\\n# Log in to Azure\\n$azdoResource = \"499b84ac-1321-427f-aa17-267ca6975798\"\\naz login --allow-no-subscriptions --scope ${azdoResource}/.default\\n$OrganizationUrl = $OrganizationUrl.ToString().Trim('/')\\n\\n#-----------------------------------------------------------\\n# Retrieve the service connection\\n$getApiUrl = \"${OrganizationUrl}/${Project}/_apis/serviceendpoint/endpoints?authSchemes=ServicePrincipal&type=azurerm&includeFailed=false&includeDetails=true&api-version=${apiVersion}\"\\naz rest --resource $azdoResource -u \"${getApiUrl} \" -m GET --query \"sort_by(value[?authorization.scheme=='ServicePrincipal' && data.creationMode=='Automatic' && !(isShared && serviceEndpointProjectReferences[0].projectReference.name!='${Project}')],&name)\" -o json `\\n        | Tee-Object -Variable rawResponse | ConvertFrom-Json | Tee-Object -Variable serviceEndpoints | Format-List | Out-String | Write-Debug\\nif (!$serviceEndpoints -or ($serviceEndpoints.count-eq 0)) {\\n    Write-Warning \"No convertible service connections found\"\\n    exit 1\\n}\\n\\nforeach ($serviceEndpoint in $serviceEndpoints) {\\n    # Prompt user to confirm conversion\\n    $choices = @(\\n        [System.Management.Automation.Host.ChoiceDescription]::new(\"&Convert\", \"Converting service connection '$($serviceEndpoint.name)'...\")\\n        [System.Management.Automation.Host.ChoiceDescription]::new(\"&Skip\", \"Skipping service connection '$($serviceEndpoint.name)'...\")\\n        [System.Management.Automation.Host.ChoiceDescription]::new(\"&Exit\", \"Exit script\")\\n    )\\n    $prompt = $serviceEndpoint.isShared ? \"Convert shared service connection '$($serviceEndpoint.name)'?\" : \"Convert service connection '$($serviceEndpoint.name)'?\"\\n    $decision = $Host.UI.PromptForChoice([string]::Empty, $prompt, $choices, $serviceEndpoint.isShared ? 1 : 0)\\n\\n    if ($decision -eq 0) {\\n\\n        Write-Host \"$($choices[$decision].HelpMessage)\"\\n    } elseif ($decision -eq 1) {\\n        Write-Host \"$($PSStyle.Formatting.Warning)$($choices[$decision].HelpMessage)$($PSStyle.Reset)\"\\n        continue \\n    } elseif ($decision -ge 2) {\\n        Write-Host \"$($PSStyle.Formatting.Warning)$($choices[$decision].HelpMessage)$($PSStyle.Reset)\"\\n        exit \\n    }\\n\\n    # Prepare request body\\n    $serviceEndpoint.authorization.scheme = \"WorkloadIdentityFederation\"\\n    $serviceEndpoint.data.PSObject.Properties.Remove('revertSchemeDeadline')\\n    $serviceEndpoint | ConvertTo-Json -Depth 4 | Write-Debug\\n    $serviceEndpoint | ConvertTo-Json -Depth 4 -Compress | Set-Variable serviceEndpointRequest\\n    $putApiUrl = \"${OrganizationUrl}/${Project}/_apis/serviceendpoint/endpoints/$($serviceEndpoint.id)?operation=ConvertAuthenticationScheme&api-version=${apiVersion}\"\\n    # Convert service connection\\n    az rest -u \"${putApiUrl} \" -m PUT -b $serviceEndpointRequest --headers content-type=application/json --resource $azdoResource -o json `\\n            | ConvertFrom-Json | Set-Variable updatedServiceEndpoint\\n    \\n    $updatedServiceEndpoint | ConvertTo-Json -Depth 4 | Write-Debug\\n    if (!$updatedServiceEndpoint) {\\n        Write-Debug \"Empty response\"\\n        Write-Error \"Failed to convert service connection '$($serviceEndpoint.name)'\"\\n        exit 1\\n    }\\n    Write-Host \"Successfully converted service connection '$($serviceEndpoint.name)'\"\\n}\\n\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary for Build Workflow in Power BI\nDESCRIPTION: Power BI query that retrieves test result summary data from the TestResultsDaily entity for a specified pipeline with Build workflow. The query aggregates counts for all test result types (passed, failed, not executed, not impacted).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_0\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/mseng/AzureDevOps/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And DateSK ge {startdate} \"\n      &\"And Workflow eq 'Build' \"\n      &\")/aggregate(\"\n      &\"ResultCount with sum as ResultCount, \"\n      &\"ResultPassCount with sum as ResultPassCount, \"\n      &\"ResultFailCount with sum as ResultFailCount, \"\n      &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n      &\"ResultNotImpactedCount with sum as ResultNotImpactedCount\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Package Sources\nDESCRIPTION: Example nuget.config file showing how to configure a single feed as package source with clearing other sources for deterministic package resolution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/concepts/upstream-sources.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<packageSources>\n  <clear />\n  <add key=\"FabrikamFiber\" value=\"https://pkgs.dev.azure.com/fabrikam/_packaging/FabrikamFiber/nuget/v3/index.json\" />\n</packageSources>\n```\n\n----------------------------------------\n\nTITLE: Force Push Git Branch Using Command Line\nDESCRIPTION: Commands to force push commits from a local branch to a remote branch using the --force-with-lease flag, which is safer than regular --force as it prevents overwriting unintegrated remote commits. Multiple variations of the command are shown based on remote naming and branch tracking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/rebase.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit push --force-with-lease <remote> <local branch name>\ngit push --force-with-lease <remote>\ngit push --force-with-lease origin\ngit push --force-with-lease\n```\n\n----------------------------------------\n\nTITLE: Using IN Operator in WIQL Queries\nDESCRIPTION: Demonstrates using the IN operator to check if a field's value matches any of a set of specified values, with two semantically equivalent examples shown.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_37\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE\n    [System.TeamProject] = @project\n    AND [System.CreatedBy] IN ('Jamal Hartnett <fabrikamfiber4@hotmail.com>', 'Raisa Pokrovskaya <fabrikamfiber5@hotmail.com>', 'Christie Church <fabrikamfiber1@hotmail.com>')\n\nor\n\nWHERE\n    [System.TeamProject] = @project\n    AND (\n        [System.CreatedBy] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\n        OR [System.CreatedBy] = 'Raisa Pokrovskaya <fabrikamfiber5@hotmail.com>'\n        OR [System.CreatedBy] = 'Christie Church <fabrikamfiber1@hotmail.com>'\n    )\n```\n\n----------------------------------------\n\nTITLE: Migrating Specific SVN Revisions to Git\nDESCRIPTION: Git command for cloning a specific range of revisions from an SVN repository. This example demonstrates how to migrate from revision 100 to HEAD, with options for author mapping and standardized repository layout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ngit svn clone [\"SVN repo URL\"] --prefix=svn/ --no-metadata --authors-file \"authors-transform.txt\" --stdlayout c:\\mytempdir -r100:HEAD\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Azure DevOps Extension Example\nDESCRIPTION: This example demonstrates uninstalling the 'Timetracker' extension from the '7pace' publisher without confirmation prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension uninstall --extension-name Timetracker --publisher-name 7pace --yes\n```\n\n----------------------------------------\n\nTITLE: Querying Test Suite Execution Data using Power BI Query\nDESCRIPTION: This Power BI query retrieves test point data and aggregates it by test suite at level 3 of the hierarchy. It calculates execution metrics including total count, pass/fail counts, and execution percentages for test suites within a specified test plan.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-aggregate-data-level.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet \n    Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints?\" \n        &\"$apply=filter((TestSuite/TestPlanTitle eq '{testPlanTitle}' and TestSuite/IdLevel3 ne null))\" \n            &\"/groupby(\" \n                &\"(TestSuite/TitleLevel3),\" \n                &\"aggregate(\" \n                    &\"$count as TotalCount,\" \n                    &\"cast(LastResultOutcome eq 'Passed', Edm.Int32) with sum as PassedCount,\" \n                    &\"cast(LastResultOutcome eq 'Failed', Edm.Int32) with sum as FailedCount,\" \n                    &\"cast(LastResultOutcome eq 'None', Edm.Int32) with sum as  NotRunCount,\" \n                    &\"cast(LastResultOutcome ne 'None', Edm.Int32) with sum as RunCount\" \n            &\")\" \n        &\")\" \n        &\"/compute(\" \n            &\"RunCount mul 100 div TotalCount as RunPercentage,\" \n            &\"NotRunCount mul 100 div TotalCount as NotRunPercentage,\" \n            &\"iif(TotalCount gt NotRunCount, PassedCount mul 100 div RunCount,0) as PassedPercentage,\" \n            &\"iif(TotalCount gt NotRunCount, FailedCount mul 100 div RunCount,0) as FailedPercentage\" \n        &\")\" \n        &\"&$orderby=RunPercentage desc\", null, [Implementation=\"2.0\"]) \nin \n    Source\n```\n\n----------------------------------------\n\nTITLE: Setting Check-in Policies Configuration Steps\nDESCRIPTION: Step-by-step markdown instructions for creating and configuring check-in policies in Visual Studio Team Explorer. Includes detailed steps for different policy types like Builds, Code Analysis, Custom Path Policy, Forbidden Patterns Policy, and Work Items Query Policy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/add-check-policies.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. From Visual Studio Team Explorer, select **Settings**, and then select  **Source Control** under **Team Project**.\n2. In the **Source Control Settings** dialog box, select the **Check-in Policy** tab, and then select **Add**.\n3. In the **Add Check-in Policy** dialog box, select the policy types you want, and then select **OK**.\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Demands\nDESCRIPTION: Example showing how to specify multiple demands including API version and contribution requirements\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"demands\": [\n        \"api-version/3.0\",\n        \"contribution/ms.vss-dashboards-web.widget-catalog\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Running Azure Boards Query with WIQL (Azure CLI)\nDESCRIPTION: This snippet demonstrates running an Azure Boards query by providing the query logic directly in Work Item Query Language (WIQL) using the `--wiql` parameter in the Azure DevOps CLI. The example query selects specific fields for 'Bug' work items in the 'Fabrikam Fiber' area path, orders the results, and displays them using `--output table`. This method allows for executing ad-hoc or complex queries without needing a pre-saved query ID or path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/view-run-query.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n```azurecli \naz boards query --wiql \"SELECT [Microsoft.VSTS.Common.Priority], [System.NodeName], [System.WorkItemType], [System.Title], [Microsoft.VSTS.Scheduling.RemainingWork], [System.AssignedTo], [System.State], [System.Tags], [System.AreaPath] FROM workitems WHERE [System.WorkItemType] = 'Bug' AND [System.AreaPath] = 'Fabrikam Fiber' ORDER BY [System.WorkItemType]\" --output table\n\nPriority    Node Name       Work Item Type    Title                  Remaining Work\n----------  --------------  ----------------  ----------------       ----------------\n2           Fabrikam Fiber  Bug               Slow response on form\n2           Fabrikam Fiber  Bug               Check permissions\n2           Fabrikam Fiber  Bug               Fix performance issue\n2           Fabrikam Fiber  Bug               Secure Sign-in \n```\n```\n\n----------------------------------------\n\nTITLE: Microsoft Docs Markdown Row/Column Layout\nDESCRIPTION: These directives are specific to the Microsoft Docs platform and are used to structure content into a responsive row and column layout for better presentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/organization-management.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   \n   #### Manage access\n   \n   - [Add external users](add-external-user.md)\n   - [Link work accounts to Visual Studio subscriptions](/visualstudio/subscriptions/vs-alternate-identity?toc=%2Fazure%2Fdevops%2Forganizations%2Ftoc.json&bc=%2Fazure%2Fdevops%2Forganizations%2Fbreadcrumb%2Ftoc.json)\n   - [Remove users](delete-organization-users.md)\n   - [Change app access policies](change-application-access-policies.md)\n   - [Authenticate with PATs](use-personal-access-tokens-to-authenticate.md)\n   - [Revoke user PATs](admin-revoke-user-pats.md)\n   \n   <a name='manage-azure-ad-access'></a>\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary for Build Workflow with OData\nDESCRIPTION: OData query that retrieves test result summary data from the TestResultsDaily entity for a specified pipeline with Build workflow. The query aggregates counts for all test result types and returns the data in OData format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_1\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And DateSK ge {startdate} \n    And Workflow eq 'Build'\n)/aggregate(\n    ResultCount with sum as ResultCount,\n    ResultPassCount with sum as ResultPassCount,\n    ResultFailCount with sum as ResultFailCount,\n    ResultNotExecutedCount with sum as ResultNotExecutedCount,\n    ResultNotImpactedCount with sum as ResultNotImpactedCount\n)\n```\n\n----------------------------------------\n\nTITLE: JavaScript for Rendering Query Information in the Widget\nDESCRIPTION: JavaScript code that creates and populates an HTML list with query details, including query ID, name, and creator, and then appends this list to the widget's container element.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// Create a list with query details                                \nvar $list = $('<ul>');                                \n$list.append($('<li>').text(\"Query Id: \" + query.id));\n$list.append($('<li>').text(\"Query Name: \" + query.name));\n$list.append($('<li>').text(\"Created By: \" + (query.createdBy ? query.createdBy.displayName : \"<unknown>\")));\n\n// Append the list to the query-info-container\nvar $container = $('#query-info-container');\n$container.empty();\n$container.append($list);\n```\n\n----------------------------------------\n\nTITLE: Adding a Custom Icon to Hub Using Asset Path\nDESCRIPTION: JSON properties configuration showing how to add a custom icon to a hub in Azure DevOps using an asset file path. This approach allows extensions to use their own custom imagery.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/reference/targets/overview.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"properties\": {\n            \"name\": \"Sample hub\",\n            \"uri\": \"dist/Hub/Hub.html\",\n            \"icon\": \"asset://static/sample-icon.png\",\n            \"supportsMobile\": true\n        }\n```\n\n----------------------------------------\n\nTITLE: Configuring cgroups for Memory Management\nDESCRIPTION: Using cgroups and adjusting oom_score_adj can help prevent agent failure due to memory pressure. This ensures Linux reclaims memory from job processes before the agent process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncgroups\n```\n\nLANGUAGE: bash\nCODE:\n```\noom_score_adj\n```\n\n----------------------------------------\n\nTITLE: Removing Untracked Files with Git Clean\nDESCRIPTION: Command to delete untracked files from the working directory using Git clean with the force flag. This permanently removes files that are not being tracked by Git.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\ngit clean -f\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Runs by Pipeline ID in Power BI\nDESCRIPTION: Power BI query that retrieves pipeline runs for a specific pipeline ID from a specified start date. This approach prevents reports from breaking when pipeline names change.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_2\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"PipelineId eq {pipelineId} \"\n                &\"and CompletedDate ge {startdate} \"\n                &\") \"\n        &\"/aggregate( \"\n        &\"$count as TotalCount, \"\n            &\"SucceededCount with sum as SucceededCount , \"\n                &\"FailedCount with sum as FailedCount, \"\n                &\"PartiallySucceededCount with sum as PartiallySucceededCount , \"\n            &\"CanceledCount with sum as CanceledCount \"\n                &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Extension Hub HTML Implementation\nDESCRIPTION: HTML file that implements the extension's hub view with SDK initialization and user display functionality\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/get-started/node.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\"></script>\n    <script>\n        window.requirejs.config({\n            enforceDefine: true,\n            paths: {\n                'SDK': './lib/SDK.min'\n            }\n        });\n        window.requirejs(['SDK'], function (SDK) {\n            if (typeof SDK !== 'undefined') {\n                console.log(\"SDK is defined. Trying to initialize...\");\n                SDK.init();\n                SDK.ready().then(() => {\n                    console.log(\"SDK is ready\");\n                    document.getElementById(\"name\").innerText = SDK.getUser().displayName;\n                });\n            } else {\n                console.log('SDK is not defined');\n            }\n        });\n    </script>\n    <style>\n        body {\n            background-color: rgb(0, 67, 117);\n            color: white;\n            margin: 10px;    \n            font-family: \"Segoe UI VSS (Regular)\",\"-apple-system\",BlinkMacSystemFont,\"Segoe UI\",sans-serif;\n        }\n    </style>\n</head>\n<body>        \n    <h1>Hello, <span id=\"name\"></span></h1>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Adding All Files Including Ignored Items in TFVC\nDESCRIPTION: Example of using the 'add' command with the '/noignore' flag to add all files in a local TFVC workspace, including items designated as ignored.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/add-command.md#2025-04-22_snippet_2\n\nLANGUAGE: Batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1>tf add /noignore\n```\n\n----------------------------------------\n\nTITLE: Referencing a Template with Parameters in YAML\nDESCRIPTION: This snippet demonstrates how to reference a template and pass parameters to it in the main pipeline file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-expressions.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\n\nsteps:\n- template: steps/msbuild.yml\n  parameters:\n    solution: my.sln\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Self-Hosted Agent via PowerShell\nDESCRIPTION: Executes the `run.cmd` script located in the agent's installation directory. This command starts the configured self-hosted agent process, which then connects to Azure DevOps Services, registers itself in the specified pool, and begins listening for pipeline jobs assigned to that pool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\n.\\run.cmd\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization URL Format\nDESCRIPTION: URL format for accessing an Azure DevOps organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/make-project-public.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Managing Subscriptions in Slack\nDESCRIPTION: Command to view, add, or remove repository event subscriptions for the current Slack channel. This displays a list of current subscriptions with options to modify them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-slack.md#2025-04-22_snippet_4\n\nLANGUAGE: slash command\nCODE:\n```\n/azrepos subscriptions\n```\n\n----------------------------------------\n\nTITLE: JSON Response Format for Bug Trend Query\nDESCRIPTION: Example JSON response showing aggregated bug counts by state and date. Demonstrates the structure of returned trend data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/querying-for-trend-data.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\": \"https://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}//$metadata#WorkItemSnapshot(DateValue,State,Count)\",\n  \"value\": [\n    {\n      \"@odata.id\": null,\n      \"State\": \"Active\",\n      \"DateValue\": \"2016-03-01T00:00:00-08:00\",\n      \"Count\": 2666\n    },\n    {\n      \"@odata.id\": null,\n      \"State\": \"Closed\",\n      \"DateValue\": \"2016-03-01T00:00:00-08:00\",\n      \"Count\": 51408\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning Repository with Submodules in Classic Build Pipeline\nDESCRIPTION: This snippet shows how to clone a repository with submodules in a classic build pipeline using a command-line task. It uses the System.AccessToken for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/secure-access-to-repos.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit -c http.extraheader=\"AUTHORIZATION: bearer $(System.AccessToken)\" clone --recurse-submodules https://dev.azure.com/silviuandrica/FabrikamFiber/_git/FabrikamFiber\n```\n\n----------------------------------------\n\nTITLE: Setting OAuth Client Credentials in Python Flask Application (Python)\nDESCRIPTION: This snippet shows the CLIENT_ID and CLIENT_SECRET constants for a Python Flask application, noting that CLIENT_SECRET should only be hardcoded for testing purposes. Production environments should secure CLIENT_SECRET with an environment variable or secret management service. Inputs are string literals for client credentials, and outputs are configuration constants for use in the app.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/manage-personal-access-tokens-via-api.md#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nCLIENT_ID = \"YOUR_CLIENT_ID_HERE\" \n# Application (client) ID of app registration\n\nCLIENT_SECRET = \"YOUR_CLIENT_SECRET_HERE\" \n# Placeholder - for use ONLY during testing.\n# In a production app, we recommend you use a more secure method of storing your secret.\n\n```\n\n----------------------------------------\n\nTITLE: Secured API Controller in .NET Core\nDESCRIPTION: Example of a secured API controller class in ASP.NET Core that requires JWT token authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/auth.md#2025-04-22_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Mvc;\n\n[Route(\"api/[controller]\")]\n[Authorize]\npublic class SampleLogicController : ControllerBase\n{\n   // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring body-parser for JSON Processing in Express\nDESCRIPTION: Sets up the Express application to use body-parser middleware for handling JSON payloads.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nvar bodyParser = require('body-parser')\n\napp.use(bodyParser.json())\n```\n\n----------------------------------------\n\nTITLE: Querying Removed Items Marked as Duplicates in Azure Boards (WIQL)\nDESCRIPTION: The snippet demonstrates how to filter for removed work items that were designated as duplicates using `State = Removed` and `Reason = Duplicate`. Both field values must exist in the process configuration. This is useful for auditing or reporting on duplicate removals.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_7\n\nLANGUAGE: WIQL\nCODE:\n```\nState= Removed\nAnd Reason = Duplicate\n```\n\n----------------------------------------\n\nTITLE: Validating Collection for Azure DevOps Migration\nDESCRIPTION: Command to validate a collection for migration to Azure DevOps Services, specifying the collection URL, tenant domain name, and region.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_1\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator validate /collection:{collection URL} /tenantDomainName:{name} /region:{region}\n```\n\n----------------------------------------\n\nTITLE: Logging in with Personal Access Token\nDESCRIPTION: Example of logging into Azure DevOps CLI using a personal access token, showing the interactive prompt format\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/auth/tfs-basic-auth.md#2025-04-22_snippet_1\n\nLANGUAGE: no-highlight\nCODE:\n```\n~$ tfx login\nCopyright Microsoft Corporation\n\n> Service URL: {url}\n> Personal access token: xxxxxxxxxxxx\nLogged in successfully\n```\n\n----------------------------------------\n\nTITLE: Starting an Azure VM using Azure CLI\nDESCRIPTION: Starts a stopped or deallocated Azure Virtual Machine identified by its name and resource group. If deallocated, new compute resources will be assigned. This is used after converting a disk to managed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm start --resource-group <myResourceGroup> --name <MyVM>\n```\n\n----------------------------------------\n\nTITLE: Using macOS-14 Sonoma Preview Image in Azure Pipelines\nDESCRIPTION: YAML configuration for using the new macOS-14 Sonoma preview image in Azure Pipelines. The snippet shows how to specify the vmImage property and includes a basic bash step that displays the macOS version information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-238-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- job: macOS14\n  pool:\n    vmImage: 'macOS-14'\n  steps:\n  - bash: |\n      echo Hello from macOS Sonoma Preview\n      sw_vers\n```\n\n----------------------------------------\n\nTITLE: Logging an Error using Task Command in PowerShell\nDESCRIPTION: Shows how to log an error message using the task.logissue command in a PowerShell script, followed by exiting with a non-zero status code.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nWrite-Host \"##vso[task.logissue type=error]Something went very wrong.\"\nexit 1\n```\n\n----------------------------------------\n\nTITLE: Temporarily Ignoring Tracked Files with Git Update-Index\nDESCRIPTION: Commands to temporarily stop tracking changes to a file using git update-index. The skip-worktree flag prevents Git from reporting changes to the file while maintaining it in the repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/ignore-files.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit update-index --skip-worktree <file path>\n```\n\n----------------------------------------\n\nTITLE: Configuring Pull Request Triggers for Main and Feature Branches in YAML\nDESCRIPTION: This YAML snippet specifies the target branches for pull request builds, running the build only for pull requests targeting the main branch and branches starting with feature/.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/ci-build-git.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n- main\n- feature/*\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Pipeline YAML for Bicep Deployment via Azure CLI\nDESCRIPTION: This YAML configuration defines an Azure DevOps pipeline named 'Bicep deploy template'. It includes variable definitions, sets the trigger to none, specifies the agent pool, and uses the `AzureCLI@2` task to execute an inline bash script. The script runs `az deployment group create` to deploy a Bicep template located at `$(sourceFolder)$(templateFile)` to the specified `$(resourceGroupName)`, passing administrator credentials as parameters. Requires an Azure service connection named `<service-connection-name>`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  vmImageName: 'ubuntu-latest'\n  resourceGroupName: '<resource-group-name>' # Needs to already exist\n  location: '<your-closest-location>'\n  templateFile: './main.bicep'\n  sourceFolder: 'quickstarts/microsoft.web/webapp-linux-managed-mysql/'\n\ntrigger:\n- none\n\npool:\n  vmImage: $(vmImageName)\n\nname: Bicep deploy template\n\nsteps:\n- task: AzureCLI@2\n  inputs:\n    azureSubscription: '<service-connection-name>'\n    scriptType: bash\n    scriptLocation: inlineScript\n    inlineScript: |\n      az deployment group create --resource-group $(resourceGroupName) --template-file $(sourceFolder)$(templateFile) \\\n      --parameters administratorLogin=$(administratorLogin) administratorLoginPassword=$(administratorLoginPassword)\n```\n\n----------------------------------------\n\nTITLE: Configuring Project Input with DataSource Bindings\nDESCRIPTION: Shows the configuration of a project picklist input that is populated via REST calls. The dataSourceBindings array specifies how to populate the field using data from the custom endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/service-endpoints.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inputs\": [\n    {\n      \"name\": \"project\",\n      \"type\": \"pickList\"\n    }\n  ],\n  \"dataSourceBindings\": [\n    {\n      \"target\": \"project\",\n      \"endpointId\": \"FabrikamService\",\n      \"dataSourceName\": \"Projects\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: OData Query for All Project Pipelines Duration Percentiles\nDESCRIPTION: This OData query retrieves the 50th, 80th, and 95th percentile durations for all pipelines in a project. It filters for successful or partially successful pipeline runs completed after a specified date and groups results by pipeline name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    CompletedDate ge {startdate}\n    and (SucceededCount eq 1 or PartiallySucceededCount eq 1)\n    )\n/compute(\n    percentile_cont(TotalDurationSeconds, 0.5, PipelineId) as Duration50thPercentileInSeconds,\n    percentile_cont(TotalDurationSeconds, 0.8, PipelineId) as Duration80thPercentileInSeconds,\n    percentile_cont(TotalDurationSeconds, 0.95, PipelineId) as Duration95thPercentileInSeconds)\n/groupby(\n(Duration50thPercentileInSeconds, Duration80thPercentileInSeconds,Duration95thPercentileInSeconds, Pipeline/PipelineName))\n```\n\n----------------------------------------\n\nTITLE: Declaring a Contribution Type in Azure DevOps Extension Manifest\nDESCRIPTION: This snippet demonstrates how to declare a contribution type named 'hub' in an extension manifest. It defines properties such as name, uri, and order that contributions of this type must adhere to.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/contributions-overview.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    ...\n    \"contributionTypes\": [\n        {\n            \"id\": \"hub\",\n            \"name\": \"Web Access Hub\",\n            \"description\": \"A hub that appears in the hubs menu at the top of web pages.\",\n            \"properties\": {\n                \"name\": {\n                    \"description\": \"The text to display for the hub\",\n                    \"type\": \"string\",\n                    \"required\": true\n                },\n                \"uri\": {\n                    \"description\": \"URI of the contents of the hub page\",\n                    \"type\": \"string\",\n                    \"required\": true\n                },\n                \"order\": {\n                    \"description\": \"An optional ordering value which can indicate in which position to place the hub within the hub group\",\n                    \"type\": \"integer\"\n                }\n\t\t\t\t...\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Activating Python Virtual Environment in Windows\nDESCRIPTION: Command to activate a Python virtual environment in Windows PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/use-packages-from-pypi.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n<YOUR_VIRTUAL_ENVIRONMENT_NAME>/Scripts/Activate.ps1\n```\n\n----------------------------------------\n\nTITLE: Example Git LFS File Format in Markdown\nDESCRIPTION: Demonstrates the structure of a Git LFS pointer file, which contains metadata about the tracked large file instead of the actual file content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/manage-large-files.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nversion https://git-lfs.github.com/spec/v1\noid a747cfbbef63fc0a3f5ffca332ae486ee7bf77c1d1b9b2de02e261ef97d085fe\nsize 4923023\n```\n```\n\n----------------------------------------\n\nTITLE: Variable Management with Azure DevOps CLI (Bash)\nDESCRIPTION: YAML configuration demonstrating how to store and use Azure DevOps CLI command results in pipeline variables using Bash, including authentication handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n- name: variableGroupId\n\ntrigger: none\n\npool:\n  vmImage: \"ubuntu-latest\"\n\nsteps:\n- bash: az devops configure --defaults organization='$(System.TeamFoundationCollectionUri)' project='$(System.TeamProject)' --use-git-aliases true\n  displayName: 'Set default Azure DevOps organization and project'\n\n- bash: echo \"##vso[task.setvariable variable=variableGroupId]$(az pipelines variable-group list --group-name Fabrikam-2023 --query [].id -o tsv)\"\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n  displayName: 'Get Fabrikam-2023 variable group id'\n\n- bash: az pipelines variable-group variable list --group-id '$(variableGroupId)'\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n  displayName: 'List variables in Fabrikam-2023 variable group'\n```\n\n----------------------------------------\n\nTITLE: Searching for Extensions in Azure DevOps CLI\nDESCRIPTION: This snippet demonstrates how to search for an extension in the Azure DevOps marketplace using the Azure CLI. It uses the 'az devops extension search' command with a search query parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension search --search-query\n```\n\n----------------------------------------\n\nTITLE: Setting Area Path Object-Level Permissions in Azure DevOps API\nDESCRIPTION: Demonstrates how to set area path object-level permissions using the Azure DevOps API. It shows the POST request format and the JSON body structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nPOST https://dev.azure.com/{organization}/_apis/securitynamespaces/{namespaceId}/permissions?api-version=6.0 { \"token\": \"vstfs:///Classification/Node/{area_node_id}\", \"permissions\": { \"allow\": 1, \"deny\": 0 } }\n```\n\n----------------------------------------\n\nTITLE: Get Latest Version of All Workspace Items\nDESCRIPTION: Command to recursively get all files in the specified path including child folders.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/get-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf get\n```\n\n----------------------------------------\n\nTITLE: Multi-period Agent Scheduling with Varied Counts\nDESCRIPTION: JSON configuration showing how to schedule varying numbers of standby agents throughout the day, with 1 agent from midnight to 9:00 AM, then 10 agents until 5:00 PM, then none after that.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"00:00:00\": 1,\n    \"09:00:00\": 10,\n    \"17:00:00\": 0\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Wiki Example\nDESCRIPTION: Example command for deleting a wiki without confirmation prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki delete --wiki myprojectwiki --yes\n```\n\n----------------------------------------\n\nTITLE: Accessing Output Variables from Previous Jobs in PowerShell\nDESCRIPTION: Sets an output variable in job A and accesses it in job B using the dependencies syntax. This demonstrates how to pass variables between jobs in a pipeline using PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - powershell: |\n     Write-Host \"##vso[task.setvariable variable=myOutputVar;isOutput=true]this is from job A\"\n    name: passOutput\n- job: B\n  dependsOn: A\n  variables:\n    myVarFromJobA: $[ dependencies.A.outputs['passOutput.myOutputVar'] ]  \n  steps:\n  - powershell: |\n     Write-Host $(myVarFromJobA)\n```\n\n----------------------------------------\n\nTITLE: Installing Azure CLI with Python Dependencies (Bash)\nDESCRIPTION: YAML configuration for installing Azure CLI using Python on a self-hosted agent. Updates pip and installs the latest Azure CLI version with minimum version 2.10.1 requirement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\n# Specify python version if you have side-by-side versions\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '3.x'\n    architecture: 'x64'\n\n# Update pip to latest\n- bash: python -m pip install --upgrade pip\n  displayName: 'Upgrade pip'\n\n# Update to latest Azure CLI version, min version required for Azure DevOps is 2.10.1\n- bash: pip install --pre azure-cli\n  displayName: 'Upgrade Azure CLI'\n```\n\n----------------------------------------\n\nTITLE: Adding Release Deployment Control to Work Item Type in XML\nDESCRIPTION: This XML snippet shows how to add the release deployments control to a work item type definition. The control displays release information for work items associated with commits in builds being released.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/hosted-xml-process-model.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<Group Label=\"Deployment\">\n    <Control Type=\"DeploymentsControl\" Name=\"Deployments\" />\n</Group>\n```\n\n----------------------------------------\n\nTITLE: Running Basic Get Command in TFVC\nDESCRIPTION: This command demonstrates how to get the latest version of all items in a workspace. It's executed in the context of a directory mapped in the workspace, where $/SiteApp/Main/ is mapped to c:\\code\\SiteApp\\Main\\.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/use-team-foundation-version-control-commands.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf get\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Tag Format with Build Variables\nDESCRIPTION: Example showing how to format Git tags using predefined and custom build variables. Uses built-in variables like Build.DefinitionName and Build.BuildId along with user-defined variables. The tag format must result in a valid Git tag without whitespace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/source-options.md#2025-04-22_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n$(Build.DefinitionName)_$(Build.DefinitionVersion)_$(Build.BuildId)_$(Build.BuildNumber)_$(My.Variable)\n```\n\n----------------------------------------\n\nTITLE: Hardcoding JDK Version in Maven Task (Before Variable) in Azure Pipelines YAML\nDESCRIPTION: This snippet shows the original configuration line within the Maven task where the JDK version (`jdkVersionOption`) is hardcoded to `1.11`. This line is typically replaced when using a strategy matrix to dynamically set the JDK version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/customize-pipeline.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\njdkVersionOption: \"1.11\"\n```\n\n----------------------------------------\n\nTITLE: Creating Azure VM from VHD with Unmanaged Disk using Azure CLI\nDESCRIPTION: Creates a new Azure Virtual Machine from a specified generalized VHD URL. It initially uses an unmanaged disk of the desired size and requires specifying the OS type, admin credentials, and the storage account containing the VHD. This is part of the process for creating a custom image starting from a VHD.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm create --resource-group <myResourceGroup> --name <MyVM> --image <myVhdUrl> --os-type windows --os-disk-size-gb <myDiskSizeGb> --use-unmanaged-disk --admin-username <myUserName> --admin-password <myPassword> --storage-account <myVhdStorageAccount>\n```\n\n----------------------------------------\n\nTITLE: Remove Azure DevOps Agent Configuration\nDESCRIPTION: PowerShell command to remove an existing agent configuration, allowing for reconfiguration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-windows-agent.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n.\\config remove\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Resource Manager Service Connection with Workload Identity\nDESCRIPTION: YAML configuration for creating an Azure Resource Manager service connection using workload identity federation in Azure Pipelines. This snippet shows the structure and key parameters required for the connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/configure-workload-identity.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureResourceManagerWorkloadIdentityConnection@1\n  inputs:\n    azureSubscription: 'MyAzureSubscription'\n    resourceGroupName: 'MyResourceGroup'\n    managedIdentityName: 'MyManagedIdentity'\n    issuer: '$(System.CollectionUri)'\n    subject: 'sc://$(System.TeamProject)/$(Build.DefinitionName)/$(Build.BuildId)'\n    audience: 'api://AzureADTokenExchange'\n```\n\n----------------------------------------\n\nTITLE: Setting Service Principal Authentication for Azure Artifacts in Windows PowerShell\nDESCRIPTION: PowerShell commands to set environment variables for authenticating with Azure Artifacts using a Service Principal. This approach uses certificate-based authentication and requires either the certificate subject name or file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-setup.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$env:ARTIFACTS_CREDENTIALPROVIDER_FEED_ENDPOINTS = @'{\n    \"endpointCredentials\": [\n        {\n            \"endpoint\": \"<FEED_URL>\",\n            \"clientId\": \"<SERVICE_PRINCIPAL_APPLICATION_(CLIENT)_ID>\",\n            \"clientCertificateSubjectName\": \"<SERVICE_PRINCIPAL_CERTIFICATE_NAME>\",\n            \"clientCertificateFilePath\": \"<SERVICE_PRINCIPAL_CERTIFICATE_PATH>\"\n        }\n    ]\n}'\n@\n```\n\n----------------------------------------\n\nTITLE: Querying Monthly Bug Trends (1st Day Snapshots) in Power BI\nDESCRIPTION: This Power BI query retrieves bug trend data with monthly snapshots taken on the first day of each month. This significantly reduces data volume and improves query performance for long-term trend analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-bugtrend.md#2025-04-22_snippet_6\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \"\n        &\"$apply=filter( \"\n            &\"WorkItemType eq 'Bug' \"\n            &\"and State ne 'Closed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and DateValue ge {startdate} \"\n            &\"and Date/DayOfMonth eq 1  \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(DateValue,State,WorkItemType,Priority,Severity,Area/AreaPath,Iteration/IterationPath,AreaSK), \"\n            &\"aggregate($count as Count) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Stopping macOS Agent Service\nDESCRIPTION: Command to stop the running macOS agent service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh stop\n```\n\n----------------------------------------\n\nTITLE: Navigating to Team Delivery Settings in Azure DevOps UI\nDESCRIPTION: Provides the step-by-step instructions to access the Delivery Settings for a specific team within the Organization settings / Global notifications section of Azure DevOps. This applies to Azure DevOps Server and Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/concepts-email-recipients.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n1. In **Organization settings**, select **Global notifications** > **Subscribers** > your **Team** > **Delivery settings**.\n```\n\n----------------------------------------\n\nTITLE: Using Agent Name Confirmation in Azure DevOps\nDESCRIPTION: Shows the single character input expected when configuring an agent with an existing name. User must enter 'Y' to confirm replacement of the existing agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/replace-agent.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nY\n```\n\n----------------------------------------\n\nTITLE: Building Maven Package\nDESCRIPTION: Command to compile, test and package a Maven project into a distributable format like JAR\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/get-started-maven.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn package\n```\n\n----------------------------------------\n\nTITLE: Capturing Network Traces on Linux Agents in Azure DevOps\nDESCRIPTION: Uses tcpdump to capture network traffic on a Linux-based pipeline agent. The resulting pcap file is uploaded as a pipeline artifact for network troubleshooting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Bash@3\n  inputs:\n    targetType: 'inline'\n    script: |\n      sudo rm -f nohup.out\n      sudo rm -R trace\n      sudo mkdir trace\n      sudo nohup tcpdump -i eth0 -s 65535 -w trace/file_result.pcap &\n      cd trace\n      ls\n\n# Add tasks that perform actions that you want to trace here\n\n# Upload the trace to a pipeline artifact\n- task: PublishPipelineArtifact@1\n  inputs:\n    targetPath: '$(Pipeline.Workspace)/s/trace'\n    artifact: 'file_result.pcap'\n    publishLocation: 'pipeline'\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet Package to Azure DevOps Feed\nDESCRIPTION: CLI command to publish a NuGet package to a feed in the same Azure DevOps organization. It uses the NuGet push command with the package path, feed URL, and an API key.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/publish.md#2025-04-22_snippet_2\n\nLANGUAGE: CLI\nCODE:\n```\nnuget push <PACKAGE_PATH> -src https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json -ApiKey <ANY_STRING>\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group using Azure DevOps Pipeline Task (YAML)\nDESCRIPTION: This YAML snippet defines steps within an Azure DevOps pipeline for resource cleanup (specifically in the context of ARM templates/JSON). It uses the `AzureResourceManagerTemplateDeployment@3` task with the `action` set to `DeleteRG`, instructing the task to delete the specified `resourceGroupName` ('ARMPipelinesLAMP-rg') associated with the provided Azure subscription and service connection. A `CopyFiles@2` task is also included, though its relevance to the deletion action might depend on broader pipeline context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  ARM_PASS: $(adminPass)\n\ntrigger:\n- none\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: CopyFiles@2\n  inputs:\n    SourceFolder: 'quickstarts/microsoft.web/webapp-linux-managed-mysql/'\n    Contents: '**'\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n\n- task: AzureResourceManagerTemplateDeployment@3\n  inputs:\n    deploymentScope: 'Resource Group'\n    azureResourceManagerConnection: '<your-resource-manager-connection>'\n    subscriptionId: '<your-subscription-id>'\n    action: 'DeleteRG'\n    resourceGroupName: 'ARMPipelinesLAMP-rg'\n    location: ''<your-closest-location>'\n```\n\n----------------------------------------\n\nTITLE: Filtering by Advanced Date Macro with Offset (@StartOfYear with '+3M') - WIQL\nDESCRIPTION: This example demonstrates the use of @StartOfYear with a '+3M' (three months) offset in the WIQL query to filter work items closed after a certain date. The clause supports nested date modifiers, allowing queries for precise periods within a year. WIQL macros are the only requirement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_14\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE \n   [Microsoft.VSTS.Common.ClosedDate] >=@StartOfYear('+3M') - 1\n```\n\n----------------------------------------\n\nTITLE: PAT Authentication in Linux/macOS\nDESCRIPTION: Bash script to authenticate Git operations using Personal Access Token (PAT) with Base64 encoding for HTTP basic authentication on Linux or macOS systems.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/auth-overview.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nMY_PAT=yourPAT # replace \"yourPAT\" with \"PatStringFromWebUI\"\nexport HEADER_VALUE=$(echo -n \"Authorization: Basic \"$(printf \":%s\" \"$MY_PAT\" | base64))\n\ngit --config-env=http.extraheader=HEADER_VALUE clone https://dev.azure.com/yourOrgName/yourProjectName/_git/yourRepoName\n```\n\n----------------------------------------\n\nTITLE: Implementing SMI-based Canary Deployments in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to perform Service Mesh Interface (SMI) based canary deployments in a rolling manner using the KubernetesManifest task. It includes steps for creating secrets, deploying canary versions, and implementing traffic splitting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-160-update.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- deployment: Deployment\n    displayName: Deployment\n    pool:\n      vmImage: $(vmImage)\n    environment: ignite.smi\n    strategy:\n      canary:\n        increments: [25, 50]\n        preDeploy:\n          steps:\n          - task: KubernetesManifest@0\n            displayName: Create/update secret\n            inputs:\n              action: createSecret\n              namespace: smi\n              secretName: $(secretName)\n              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)\n        deploy:\n          steps:\n          - checkout: self\n          - task: KubernetesManifest@0\n            displayName: Deploy canary\n            inputs:\n              action: $(strategy.action)\n              namespace: smi\n              strategy: $(strategy.name)\n              trafficSplitMethod: smi\n              percentage: $(strategy.increment)\n              baselineAndCanaryReplicas: 1\n              manifests: |\n                manifests/deployment.yml\n                manifests/service.yml\n              imagePullSecrets: $(secretName)\n              containers: '$(containerRegistry)/$(imageRepository):$(Build.BuildId)'\n        postRouteTraffic:\n          pool: server\n          steps:\n            - task: Delay@1\n              inputs:\n                delayForMinutes: '2'\n```\n\n----------------------------------------\n\nTITLE: Extending Pipeline Templates with YAML\nDESCRIPTION: Demonstrates how to use the extends keyword in YAML pipelines to create reusable template structures with configurable parameters and conditional steps. Includes support for boolean parameters and step lists.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-162-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# azure-pipelines.yml\nextends:\n  template: build-template.yml\n  parameters:\n    runTests: true\n    postBuildSteps:\n    - script: echo This step runs after the build!\n    - script: echo This step does too!\n\n# build-template.yml\nparameters:\n- name: runTests\n  type: boolean\n  default: false\n- name: postBuildSteps\n  type: stepList\n  default: []\nsteps:\n- task: MSBuild@1   # this task always runs\n- ${{ if eq(parameters.runTests, true) }}:\n  - task: VSTest@2  # this task is injected only when runTests is true\n- ${{ each step in parameters.postBuildSteps }}:\n  - ${{ step }}\n```\n\n----------------------------------------\n\nTITLE: Resetting Branch to Remote Version\nDESCRIPTION: Command to reset your local branch to match the most recent commit on a remote branch. This example shows the syntax with a placeholder for the remote/branch name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\ngit reset --hard remote/branchname\n```\n\n----------------------------------------\n\nTITLE: Running npm build script in Azure Pipelines\nDESCRIPTION: Executes the build script defined in the project's package.json file to package the application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_17\n\nLANGUAGE: YAML\nCODE:\n```\n- script: npm run build\n```\n\n----------------------------------------\n\nTITLE: Configuring Pull Request Target Branches in YAML\nDESCRIPTION: YAML configuration file that specifies the list of potential target branches for pull requests. The file must be placed at .azuredevops/pull_request_targets.yml in the repository's default branch. It supports exact branch names and wildcard patterns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-request-targets.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npull_request_targets:\n  - main\n  - release/*\n  - feature/*\n```\n\n----------------------------------------\n\nTITLE: Publishing Maven Package\nDESCRIPTION: Command to deploy a Maven package to an Azure Artifacts feed\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/get-started-maven.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines via GitHub PR Comments\nDESCRIPTION: Shows how to trigger Azure Pipelines builds from GitHub pull request comments using the /AzurePipelines or /azp command syntax. This feature allows repository owners or collaborators to manually trigger builds for PR validation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-147-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n/AzurePipelines run\n/AzurePipelines run <pipeline_name>\n/azp help\n```\n\n----------------------------------------\n\nTITLE: Registering Azure Artifacts Feed as PSRepository\nDESCRIPTION: These commands register an Azure Artifacts feed as a PowerShell repository. Two versions are provided: one for project-scoped feeds and another for organization-scoped feeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/powershell-upstream-source.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nRegister-PSRepository -Name \"PSGalleryUpstream\" -SourceLocation \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v2\" -PublishLocation \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v2\" -InstallationPolicy Trusted -Credential $myCredentialsObject\n```\n\nLANGUAGE: powershell\nCODE:\n```\nRegister-PSRepository -Name \"PSGalleryUpstream\" -SourceLocation \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v2\" -PublishLocation \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v2\" -InstallationPolicy Trusted -Credential $myCredentialsObject\n```\n\n----------------------------------------\n\nTITLE: Configuring Agent with Proxy (Windows)\nDESCRIPTION: Command to configure a Windows agent with proxy settings, including URL, username, and password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/proxy.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\n./config.cmd --proxyurl http://127.0.0.1:8888 --proxyusername \"myuser\" --proxypassword \"mypass\"\n```\n\n----------------------------------------\n\nTITLE: Logging into Cargo Registry with Azure CLI Authentication\nDESCRIPTION: Commands to log into a Cargo registry using Azure CLI authentication. This uses your Azure account credentials for authentication with the registry instead of a PAT.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\naz login\naz account get-access-token --query \"join(' ', ['Bearer', accessToken])\" --output tsv | cargo login --registry <FEED_NAME>\n```\n\n----------------------------------------\n\nTITLE: Implementing Action Handler in JavaScript\nDESCRIPTION: Creates an action handler function that navigates to a custom Hello hub using the VSTS Web Context. The function is wrapped in an IIFE to maintain scope isolation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-action-ts.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.action = (function () {\n\t\"use strict\";\n\treturn {\n\t\tmyAction: function (actionContext) {\n\n\t\t\t// Get the Web Context to create the uri\n\t\t\tvar vstsContext = VSS.getWebContext();\n\n\t\t\t// Navigate to the new View Associated Work Items hub.\n\t\t\t// Fabrikam is the extension's namespace and Fabrikam.HelloWorld is the hub's id.\n\t\t\twindow.parent.location.href = vstsContext.host.uri +\n\t\t\t\tvstsContext.project.name + \"/_apps/hub/Fabrikam/Fabrikam.HelloWorld\";\n\t\t}\n\t};\n}());\n```\n\n----------------------------------------\n\nTITLE: Configuring Cargo Registry in config.toml\nDESCRIPTION: This snippet shows how to configure the Cargo registry in the config.toml file for both project-scoped and organization-scoped feeds. It specifies the registry URL and replaces the default crates.io source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/cargo-pipelines.md#2025-04-22_snippet_0\n\nLANGUAGE: Toml\nCODE:\n```\n[registries]\n<FEED_NAME> = { index = \"sparse+https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/Cargo/index/\" }\n\n[source.crates-io]\nreplace-with = \"<FEED_NAME>\"\n```\n\n----------------------------------------\n\nTITLE: Updating Required Reviewer Policy in Azure DevOps CLI\nDESCRIPTION: Command to update an existing required reviewer policy using Azure DevOps CLI. Includes all available parameters for modifying policy settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy required-reviewer update --id\n                                         [--blocking {false, true}]\n                                         [--branch]\n                                         [--branch-match-type {exact, prefix}]\n                                         [--detect {false, true}]\n                                         [--enabled {false, true}]\n                                         [--message]\n                                         [--org]\n                                         [--path-filter]\n                                         [--project]\n                                         [--repository-id]\n                                         [--required-reviewer-ids]\n                                         [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Fetching a remote branch using Git commands\nDESCRIPTION: Commands to fetch a remote branch into your local Git repository and then switch to that branch. Used after creating a branch through the browser interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-branch.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit fetch\ngit switch <remote branch name>\n```\n\n----------------------------------------\n\nTITLE: Azure Service Bus Topic Configuration Settings\nDESCRIPTION: Configuration for sending messages to Azure Service Bus Topic, including connection string, topic name, and message control settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/consumers.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"connectionString\": \"string\",\n  \"topicName\": \"string\",\n  \"resourceDetailsToSend\": \"string\",\n  \"messagesToSend\": \"string\",\n  \"detailedMessagesToSend\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Test Owner Summary Query - OData\nDESCRIPTION: OData REST query to retrieve test run data grouped by test owner and date. Provides the same test owner-based analytics as the Power BI query but in OData URL format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tand CompletedOn/Date ge {startdate}\n\tAnd Workflow eq 'Build')\n/groupby((Test/TestOwner, Date/Date), \n\taggregate(\n\tResultPassCount with sum as ResultPassCount,\n\tResultNotExecutedCount with sum as ResultNotExecutedCount,\n\tResultCount with sum as ResultCount,\n\tResultNotImpactedCount with sum as ResultNotImpactedCount,\n\tResultFailCount with sum as ResultFailCount))\n/compute(\niif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Linked Work Items with Details in Azure DevOps Analytics\nDESCRIPTION: This OData query retrieves a work item with all its links and includes detailed information about the target work items. It demonstrates how to expand both Links and TargetWorkItem properties to get comprehensive information in a single query.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/work-item-links.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam Fiber/_odata/v4.0-preview/WorkItems?$select=WorkItemId,Title,WorkItemType,State&$filter=WorkItemId%20eq%20103&$expand=Links($select=SourceWorkItemId,TargetWorkItemId,LinkTypeName;$expand=TargetWorkItem($select=WorkItemId,Title,State))\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary Trend for Build Workflow in OData\nDESCRIPTION: This OData query retrieves test run data for a specific pipeline's build workflow, aggregating results by date and calculating the pass rate.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestRuns?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tand CompletedOn/Date ge {startdate}\n\tand Workflow eq 'Build'\n\t)\n/groupby(\n\t(CompletedOn/Date), \n\taggregate(\n\tResultCount with sum as ResultCount,\n\tResultPassCount with sum as ResultPassCount,\n\tResultNotExecutedCount with sum as ResultNotExecutedCount,\n\tResultNotImpactedCount with sum as ResultNotImpactedCount,\n\tResultFailCount with sum as ResultFailCount\n\t))\n/compute(\niif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Example Azure DevOps Query URL\nDESCRIPTION: Example of an encoded query URL that lists ID and title of active bugs in a specific area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/using-queries.md#2025-04-22_snippet_4\n\nLANGUAGE: txt\nCODE:\n```\nhttps://dev.azure.com/fabrikam/FabrikamFiber/_workitems?_a=query&wiql=SELECT%20%5BSystem.ID%5D%2C%20%5BSystem.Title%5D%20FROM%20WorkItems%20WHERE%20%5BSystem.TeamProject%5D%3D'FabrikamFiber'%20AND%20%5BSystem.WorkItemType%5D%3D'Bug'%20AND%20%5BSystem.State%5D%3D'Active'%20AND%20%5BSystem.AreaPath%5D%3D'FabrikamFiber%5CWeb'\n```\n\n----------------------------------------\n\nTITLE: Querying TaskAgentRequestSnapshots Endpoint in Azure DevOps Analytics\nDESCRIPTION: This code snippet demonstrates a sample query and response from the TaskAgentRequestSnapshots endpoint in Azure DevOps Analytics. It shows various data points related to job execution in agent pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/pool-consumption-report.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"@odata.context\": \"https://analytics.dev.azure.com/{org}/{project_id}/_odata/v4.0-preview/$metadata#TaskAgentRequestSnapshots\",\n\"vsts.warnings@odata.type\": \"#Collection(String)\",\n\"@vsts.warnings\": [\n\"VS403507: The specified query does not include a $select or $apply clause which is recommended for all queries. Details on recommended query patterns are available here: https://go.microsoft.com/fwlink/?linkid=861060.\"\n],\n\"value\": [\n{\n\"SamplingDateSK\": 20201117,\n\"SamplingHour\": 13,\n\"SamplingTime\": \"2020-11-17T13:10:00-08:00\",\n\"QueuedDate\": \"2020-11-17T13:07:26.22-08:00\",\n\"QueuedDateSK\": 20201117,\n\"StartedDate\": \"2020-11-17T15:02:23.7398429-08:00\",\n\"StartedDateSK\": 20201117,\n\"FinishedDate\": \"2020-11-17T15:13:49.89-08:00\",\n\"FinishedDateSK\": 20201117,\n\"QueueDurationSeconds\": 6897.519,\n\"ProjectSK\": \"...\",\n\"PipelineSK\": 5141,\n\"RequestId\": 6313,\n\"PoolId\": 28,\n\"PipelineType\": \"Build\",\n\"IsHosted\": true,\n\"IsRunning\": false,\n\"IsQueued\": true\n},\n...\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Creating a Test Run with TCM\nDESCRIPTION: This example demonstrates creating a test run named \"MyTestRun\" in the test plan with ID 77, using test suite ID 161 and test configuration ID 9. The command is executed for the Fabrikam Fiber project in the fabrikamprime organization and returns the created run ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_3\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /create /title:MyTestRun /planid:77 /collection:https://fabrikamprime.visualstudio.com /teamproject:\"Fabrikam Fiber\" /suiteid:161 /configid:9\n\nRun created with ID: 1000082.\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Decorator Contribution in vss-extension.json\nDESCRIPTION: JSON configuration for adding a pipeline decorator contribution to an Azure DevOps extension. It specifies the decorator type, target, and template file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-pipeline-decorator.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"manifestVersion\": 1,\n    \"contributions\": [\n        {\n            \"id\": \"my-required-task\",\n            \"type\": \"ms.azure-pipelines.pipeline-decorator\",\n            \"targets\": [\n                \"ms.azure-pipelines-agent-job.post-job-tasks\"\n            ],\n            \"properties\": {\n                \"template\": \"my-decorator.yml\"\n            }\n        }\n    ],\n    \"files\": [\n        {\n            \"path\": \"my-decorator.yml\",\n            \"addressable\": true,\n            \"contentType\": \"text/plain\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Work Item Relationships with Azure CLI\nDESCRIPTION: Command syntax for removing relationships between work items with Azure CLI, including required parameters for specifying link types and target work items to remove.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/add-link.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item relation remove --id\n                                    --relation-type\n                                    --target-id\n                                    [--detect {false, true}]\n                                    [--org]\n                                    [--yes]\n```\n\n----------------------------------------\n\nTITLE: Checking Out Repository in Azure DevOps YAML Pipeline\nDESCRIPTION: This snippet shows the recommended way to check out a repository in an Azure DevOps YAML pipeline using the 'checkout' command. This method works even when the 'Protect access to repositories in YAML pipelines' setting is enabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/secure-access-to-repos.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- checkout: git://FabrikamFiber/OtherRepo\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Agent for a Single Job in PowerShell\nDESCRIPTION: Command to run the Azure Pipelines agent for only one job before shutting down. This is useful for running the agent in containers or temporary environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-windows-agent.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\run.cmd --once\n```\n\n----------------------------------------\n\nTITLE: Listing Branch Policies for a Pull Request using Azure CLI\nDESCRIPTION: This Azure CLI command lists all branch policies in effect for a specific pull request. It requires the pull request ID and can be customized with various optional parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/complete-pull-requests.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr policy list --id\n                        [--detect {false, true}]\n                        [--org]\n                        [--query-examples]\n                        [--skip]\n                        [--subscription]\n                        [--top]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Deployment Job Configuration\nDESCRIPTION: Configures a deployment job targeting an environment with a specified virtual machine image pool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\n  - deployment: DeploymentJob\n    pool:\n      vmImage: $(vmImageName)\n    environment: $(environmentName)\n```\n\n----------------------------------------\n\nTITLE: Setting a Global .gitignore File with Git Config\nDESCRIPTION: Command to configure a global .gitignore file that applies to all local Git repositories. This allows specifying files to ignore across all projects without modifying individual repo settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/ignore-files.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit config core.excludesfile <gitignore file path>\n```\n\n----------------------------------------\n\nTITLE: Upgrading Python Package Manager in Command Line\nDESCRIPTION: Command to upgrade the Python package manager (pip) to the latest version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/use-packages-from-pypi.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npython -m pip install --upgrade pip\n```\n\n----------------------------------------\n\nTITLE: Targeting Contributions in Azure DevOps Extension\nDESCRIPTION: This JSON snippet demonstrates how a contribution can target other contributions. In this case, a hub contribution targets a specific hub group contribution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/contributions-overview.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"build-explorer-hub\",\n    \"type\": \"ms.vss-web.hub\",\n    \"targets\": [\n        \".build-hub-group\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Removing a User from Azure DevOps Organization using Azure CLI\nDESCRIPTION: This Azure CLI command removes a user from an Azure DevOps organization. It requires the user's email address or ID, and the organization URL. The '--yes' flag prevents confirmation prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/delete-organization-users.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops user remove --user contoso@contoso.com --org https://dev.azure.com/contoso/ --yes\n```\n\n----------------------------------------\n\nTITLE: Simple Business Hours Agent Scheduling\nDESCRIPTION: JSON configuration for scheduling a single standby agent to start at 9:00 AM and stop at 5:00 PM. This pattern is commonly used for business hours agent availability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"09:00:00\": 1,\n    \"17:00:00\": 0\n}\n```\n\n----------------------------------------\n\nTITLE: Using Equals, Contains, and Not Operators in Azure DevOps Work Item Search\nDESCRIPTION: Examples of using Equals (=), Contains (:), and Not (-) operators to create specific search criteria for work items in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\nA:Peter -S=Active\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n- Activity=Development\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n\"Resolved By\":Peter\n```\n\nLANGUAGE: plaintext\nCODE:\n```\ntriage -A=@me -S=Closed\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nS=Active T=bug A=@Me -Title:bugbash\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies using Yarn Script in YAML\nDESCRIPTION: Executes the `yarn install` command within a script step in Azure Pipelines YAML to download and install project dependencies using the Yarn package manager. Requires Yarn to be installed or available on the build agent. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n- script: yarn install\n```\n\n----------------------------------------\n\nTITLE: Sync Workspace to Specific Changeset\nDESCRIPTION: Command to synchronize workspace to match the codebase as it existed at changeset 15.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/get-command.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf get /v:15\n```\n\n----------------------------------------\n\nTITLE: List Team Members using Azure DevOps CLI\nDESCRIPTION: Command to list individual members of a team in an Azure DevOps organization using the CLI. Supports pagination through skip and top parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-users-team-project.md#2025-04-22_snippet_0\n\nLANGUAGE: CLI\nCODE:\n```\naz devops team list-member --team\n                           [--org]\n                           [--project]\n                           [--skip]\n                           [--top]\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Manifest for Custom Service Hook Consumer in JSON\nDESCRIPTION: This JSON configuration defines the extension manifest for a custom service hook consumer in Azure DevOps. It specifies the extension details, contribution type, and properties for the consumer service, including supported events and actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-service-hook.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"manifestVersion\": 1,\n    \"id\": \"samples-service-hooks-consumer\",\n    \"version\": \"0.1.2\",\n    \"name\": \"Service Hooks Sample\",\n    \"description\": \"A simple extension that demonstrates how to contribute a consumer service into service hooks.\",\n    \"publisher\": \"fabrikam\",\n    \"public\": false,\n    \"icons\": {\n        \"default\": \"images/logo.png\"\n    },\n    \"scopes\": [],\n    \"files\": [\n        {\n            \"path\": \"images\",\n            \"addressable\": true\n        }\n    ],\n    \"content\": {\n        \"details\": {\n            \"path\": \"readme.md\"\n        }\n    },\n    \"categories\": [\n        \"Developer samples\"\n    ],\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services\"\n        }\n    ],\n    \"contributions\": [\n        {\n            \"id\": \"consumer\",\n            \"type\": \"ms.vss-servicehooks.consumer\",\n            \"targets\": [\n                \"ms.vss-servicehooks.consumers\"\n            ],\n            \"properties\": {\n                \"id\": \"consumer\",\n                \"name\": \"Sample Consumer\",\n                \"description\": \"Sample consumer service\",\n                \"informationUrl\": \"https://aka.ms/vsoextensions\",\n                \"inputDescriptors\": [\n                    {\n                        \"id\": \"url\",\n                        \"isRequired\": true,\n                        \"name\": \"URL\",\n                        \"description\": \"URL to post event payload to\",\n                        \"inputMode\": \"textbox\"\n                    }\n                ],\n                \"actions\": [\n                    {\n                        \"id\": \"performAction\",\n                        \"name\": \"Perform action\",\n                        \"description\": \"Posts a standard event payload\",\n                        \"supportedEventTypes\": [\n                            \"git.push\",\n                            \"git.pullrequest.created\",\n                            \"git.pullrequest.updated\"\n                        ],\n                        \"publishEvent\": {\n                            \"url\": \"{{{url}}}\",\n                            \"resourceDetailsToSend\": \"all\",\n                            \"messagesToSend\": \"all\",\n                            \"detailedMessagesToSend\": \"all\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Azure VMSS from Custom Image using Azure CLI\nDESCRIPTION: Creates a new Azure Virtual Machine Scale Set (VMSS) based on a specified custom VM image (or a public Azure image). Configures administrative credentials, initial instance count, disables overprovisioning, sets the upgrade policy to manual, and specifies no load balancer ('\"\"'). This VMSS can then be used for an Azure Pipelines agent pool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\naz vmss create --resource-group <myResourceGroup> --name <myScaleSet> --image <MyImage> --admin-username <myUsername> --admin-password <myPassword> --instance-count 2 --disable-overprovision --upgrade-policy-mode manual --load-balancer '\"\"'\n```\n\n----------------------------------------\n\nTITLE: Adding a Group to Work Item Form in JSON\nDESCRIPTION: This JSON snippet defines a contribution to add a custom group to the work item form. It specifies the group's name, URI for content, and optional height.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-workitem-extension.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"contributions\": [\n    {  \n        \"id\": \"sample-work-item-form-group\",\n        \"type\": \"ms.vss-work-web.work-item-form-group\",\n        \"description\": \"Custom work item form group\",\n        \"targets\": [\n            \"ms.vss-work-web.work-item-form\"\n        ],\n        \"properties\": {\n            \"name\": \"My Group\",\n            \"uri\": \"workItemGroup.html\",\n            \"height\": 600\n        }\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Sequential Jobs in Azure DevOps Pipelines\nDESCRIPTION: Example of defining sequential jobs in YAML where the Release job depends on the Debug job completing first. This ensures jobs run in a specific order rather than in parallel.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Debug\n  steps:\n  - script: echo hello from the Debug build\n- job: Release\n  dependsOn: Debug\n  steps:\n  - script: echo hello from the Release build\n```\n\n----------------------------------------\n\nTITLE: Creating Variables in Azure DevOps CLI\nDESCRIPTION: Command to create a new variable in a variable group with specified name and value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group variable create --group-id 4\n                                            --name requires-login\n                                            --value true\n                                            --output table\n```\n\n----------------------------------------\n\nTITLE: Setting Progress Indicator in Bash\nDESCRIPTION: Demonstrates how to use the task.setprogress command to show progress percentage in a Bash script during a lengthy process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\necho \"Begin a lengthy process...\"\nfor i in {0..100..10}\ndo\n   sleep 1\n   echo \"##vso[task.setprogress value=$i;]Sample Progress Indicator\"\ndone\necho \"Lengthy process is complete.\"\n```\n\n----------------------------------------\n\nTITLE: Filtering Aggregated Results in OData\nDESCRIPTION: This OData query demonstrates how to apply multiple filters before grouping and aggregating work item data, first filtering by iteration then by work item type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_8\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $apply=\n    filter(Iteration/IterationName eq 'Sprint 89')/\n    filter(WorkItemType eq 'User Story')/\n    groupby((State), aggregate($count as Count))\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Boards Configuration Requirements Table in Markdown\nDESCRIPTION: This markdown snippet presents a table that outlines the various categories of requirements for configuring and customizing Azure Boards. It covers permissions, access levels, project process model, and knowledge prerequisites.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/process-prerequisites.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Permissions** | - To create, delete, or edit a process: Member of the [Project Collection Administrators](../../security/change-organization-collection-level-permissions.md) group or specific collection-level permissions **Create process**, **Delete process**, **Edit process**, or **Delete a field from organization** set to **Allow**. For more information, see [Set permissions and access for work tracking, Customize an inherited process](../../../security/set-permissions-access-work-tracking.md#customize-an-inherited-process).<br>- To update boards: [Team Administrator](../add-team-administrator.md) or a member of the [Project Administrators](../../security/change-project-level-permissions.md) group. |\n| **Access** | - Even if you have **Basic** or lower access, you can still change a process if someone gives you permissions to do so.<br>- To update and change the type of your existing work items: Member of the project. |\n| **Project process model** | - Have the [Inheritance process model](../../../reference/customize-work.md#choose-the-process-model-for-your-project-collection) for the project collection containing the project.<br>- If migrating data to Azure DevOps Services, use the [Team Foundation Server Database Import Service](../../../migrate/migration-overview.md). |\n| **Knowledge** | Familiarity with the [customization and process models](../../../reference/customize-work.md). |\n```\n\n----------------------------------------\n\nTITLE: Managing Task Groups Scope (`vso.taskgroups_manage`)\nDESCRIPTION: Grants the ability to read, create and manage taskgroups. Requires full access. Depends on `vso.taskgroups_write`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_16\n\nLANGUAGE: text\nCODE:\n```\n`vso.taskgroups_manage`\n```\n\n----------------------------------------\n\nTITLE: Constructing OData Query URL for Azure DevOps Services (Cloud)\nDESCRIPTION: This snippet demonstrates the URL structure for querying Analytics metadata in Azure DevOps Services (cloud environment). It includes placeholders for organization and project names, and specifies the OData version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/version/$metadata\n```\n\n----------------------------------------\n\nTITLE: Correct Way to Update Direct Dependencies in npm\nDESCRIPTION: Shows the correct way to update a direct dependency's version in npm without using overrides. This example updates the 'axios' package to version 0.19.2.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"name\": \"npm-overrides\",\n  \"version\": \"1.0.0\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"axios\": \"0.19.2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Interactive Mode in Fabric Profile JSON for Azure CLI\nDESCRIPTION: This JSON snippet shows the structure of a `fabric-profile.json` file used with the Azure CLI `az mdp pool create` or `update` commands. It specifically highlights the `osProfile` section within the `vmss` object, where `logonType` is set to `Interactive` to enable interactive mode for the pool agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vmss\": {\n    \"sku\": {...},\n    \"images\": [...],\n    \"osProfile\": {\n      \"secretsManagementSettings\": {...},\n      \"logonType\": \"Interactive\"\n    },\n    \"storageProfile\": {...}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: String Coalescing in Azure DevOps YAML\nDESCRIPTION: Demonstrates the coalesce() function which evaluates parameters in order and returns the first non-null/non-empty value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  coalesceLiteral: $[coalesce(variables.emptyString, '', 'literal value')]\n\nsteps:\n- script: echo $(coalesceLiteral) # outputs literal value\n```\n\n----------------------------------------\n\nTITLE: Configuring Contribution Visibility for Public Users in Azure DevOps Extension Manifest\nDESCRIPTION: This JSON snippet demonstrates how to set the 'restrictedTo' attribute in an extension manifest to make a hub visible to anonymous, public, and member users in Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/public-project.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": \"my-hub\",\n            \"type\": \"ms.vss-web.hub\",\n            \"targets\": [\n                \"ms.vss-code-web.code-hub-group\"\n            ],\n            \"restrictedTo\": [\n                \"member\",\n                \"public\",\n                \"anonymous\"\n            ],\n            \"properties\": {\n                ...            \n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Interactive Rebase for Squashing Commits\nDESCRIPTION: Command to initiate an interactive rebase for squashing multiple commits into a single commit. The example shows how to rebase the last 5 commits and includes sample commit list formatting for squashing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/rebase.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit rebase -i HEAD~5\n```\n\n----------------------------------------\n\nTITLE: Deleting Wiki Page with Azure CLI\nDESCRIPTION: This command deletes a wiki page using the Azure DevOps CLI. It requires the page path and wiki name, with optional parameters for comment and confirmation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-edit-wiki.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page delete --path\n                           --wiki\n                           [--comment]\n                           [--project]\n                           [--subscription]\n                           [--yes]\n```\n\n----------------------------------------\n\nTITLE: Defining Reserved Priority Field in Azure DevOps Work Item Type\nDESCRIPTION: Example of correctly defining the reserved 'Priority' field in the Bug.xml file for an Azure DevOps work item type. Shows the required list of values for this system field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_44\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Priority\" refname=\"Microsoft.AzureDevOps.Common.Priority\" type=\"Integer\" reportable=\"dimension\">\n  <HELPTEXT>Business importance. 1=must fix; 4=unimportant.</HELPTEXT>\n  <ALLOWEDVALUES expanditems=\"true\">\n    <LISTITEM value=\"1\"/>\n    <LISTITEM value=\"2\"/>\n    <LISTITEM value=\"3\"/>\n    <LISTITEM value=\"4\"/>\n  </ALLOWEDVALUES>\n  <DEFAULT from=\"value\" value=\"2\" />\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Moniker-Based Sprint Planning Instructions in Azure DevOps\nDESCRIPTION: Markdown content showing how to move work items to sprints using the Planning pane in Azure DevOps. The content is wrapped in a moniker range condition for version control purposes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/assign-to-sprint.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<=azure-devops\"\nFrom any product, sprint, or portfolio backlog, you can drag a multi-selected list of work items and drop it onto a sprint in the **Planning** pane to change its iteration path. This action is not supported for users with **Stakeholder** access.\n\n1. To open the **Planning** pane, choose the :::image type=\"icon\" source=\"../../media/icons/view-options-icon.png\" border=\"false\"::: view options icon and select **Planning**. You can choose to set **In Progress items** to **On** or **Off**.\n\n   :::image type=\"content\" source=\"../sprints/media/define-sprints/view-options-planning-menu.png\" alt-text=\"Screenshot of the Backlogs Open view options with Planning selected.\":::\n\n   The set of sprints selected for your team appears. If you don't see any sprints listed, you can add sprints or select existing sprints for your team's use. To learn how, see [Manage sprint timelines](../sprints/define-sprints.md).  \n\n1. You can drag items from the **Backlog** onto a sprint.\n\n   :::image type=\"content\" source=\"../sprints/media/define-sprints/drag-drop-backlog-items-to-sprint.png\" alt-text=\"Screenshot of the Backlog where you can drag items to a sprint.\":::\n\n   This action updates the Iteration Path of the backlog items and any of its child tasks to the sprint you selected.\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Running a Pipeline with Variables using Azure CLI\nDESCRIPTION: This command queues a run for the specified Azure Pipeline ('myGithubname.pipelines-java'). It targets the 'pipeline' branch using `--branch`, passes a runtime variable `var1` with the value `100` using `--variables`, and displays the output (run details) in a table format using `--output table`. Requires Azure CLI with the Azure DevOps extension installed and configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/manage-pipelines-with-azure-cli.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines run --name myGithubname.pipelines-java --branch pipeline --variables var1=100 --output table\n```\n\n----------------------------------------\n\nTITLE: Adding Extension Declaration in XML\nDESCRIPTION: XML configuration for declaring an extension to make it available in the work item form.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/configure-workitemform-extensions.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<Extensions>\n    <Extension Id=\"example.color-control-dev\" />\n</Extensions>\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps Extension SDK\nDESCRIPTION: Command to install the Azure DevOps Extension SDK package\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/get-started/node.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install azure-devops-extension-sdk --save\n```\n\n----------------------------------------\n\nTITLE: OData Query for User Stories Burndown by Team\nDESCRIPTION: OData query that returns historical burndown data filtered by team name. Returns grouped data with count and story point aggregations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\n        $apply=filter(WorkItemType eq 'User Story'\n            and StateCategory ne 'Completed'\n            and (Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}')\n            and Tags/any(x:x/TagName eq '{tagname}')\n            and DateValue ge {startdate}\n            and DateValue le {enddate}\n        )\n        /groupby (\n            (DateValue,State,Area/AreaPath),\n            aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Logging in with Service Principal using Azure CLI\nDESCRIPTION: Azure CLI commands to log in using a service principal and retrieve account information. This is useful for developers working with provided service principal credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-stack.md#2025-04-22_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz login --service-principal -u \"<client-id>\" -p \"<secret>\" --tenant \"<tenant-ID>\" --allow-no-subscriptions\naz account show\n```\n\n----------------------------------------\n\nTITLE: Running vsdiffmerge for File Comparison in Command Prompt\nDESCRIPTION: This command demonstrates how to use the vsdiffmerge.exe tool from the Visual Studio Developer Command Prompt to compare and merge two files. It requires four file parameters and the /m flag to open the merge tool directly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/compare-files.md#2025-04-22_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\nvsdiffmerge.exe \"File1\" \"File2\" \"Base file\" \"Result file\" /m\n```\n\n----------------------------------------\n\nTITLE: Undelete with Specific Deletion ID\nDESCRIPTION: Example showing how to restore a specific version of a deleted file by specifying its deletion ID, which is required when multiple instances of the same file have been deleted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undelete-command.md#2025-04-22_snippet_4\n\nLANGUAGE: PowerShell\nCODE:\n```\nc:\\projects>tf undelete 314.cs;X11\n```\n\n----------------------------------------\n\nTITLE: Interactive Rebasing in Git\nDESCRIPTION: Performs an interactive rebase of the last n commits, allowing for commit squashing, reordering, or editing. The syntax differs slightly between Unix-based systems and Windows.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_30\n\nLANGUAGE: git\nCODE:\n```\ngit rebase -i HEAD~n # Linux and macOS\ngit rebase -i \"HEAD^n\" # Windows\n```\n\n----------------------------------------\n\nTITLE: Defining Workflow Transitions for Bug Work Items in XML\nDESCRIPTION: This XML snippet defines the various workflow transitions for a Bug work item, including transitions from and to states like New, Active, Resolved, and Closed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_17\n\nLANGUAGE: XML\nCODE:\n```\n<TRANSITION from=\"\" to=\"New\">\n<TRANSITION from=\"New\" to=\"Active\">\n<TRANSITION from=\"New\" to=\"Resolved\">\n<TRANSITION from=\"New\" to=\"Closed\">\n<TRANSITION from=\"Resolved\" to=\"Active\">\n<TRANSITION from=\"Closed\" to=\"Active\">\n```\n\n----------------------------------------\n\nTITLE: Using Azure DevOps OAuth 2.0 Access Token in HTTP Request\nDESCRIPTION: This snippet demonstrates how to include the access token in the Authorization header of an HTTP request to Azure DevOps APIs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_5\n\nLANGUAGE: no-highlight\nCODE:\n```\nGET https://dev.azure.com/myaccount/myproject/_apis/build-release/builds?api-version=3.0\nAuthorization: Bearer {access_token}\n```\n\n----------------------------------------\n\nTITLE: Strategy Limitations with Variables in YAML\nDESCRIPTION: Example showing the limitation of using variables in a job strategy matrix. Variables defined at the job level are not available during strategy expansion because they are only expanded at the beginning of each expanded job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  variables:\n    a: 10\n  strategy:\n    matrix:\n      x:\n        some_variable: $(a)    # This does not work\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Character Set Pattern Matching in File Names\nDESCRIPTION: Examples showing how character sets ([]) match specific characters or ranges in file names, including matching files with specific letters and character ranges in their names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/tasks/file-matching-patterns.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nSampleA.dat\nSampleB.dat\nSampleC.dat\nSampleD.dat\n```\n\nLANGUAGE: text\nCODE:\n```\nSampleA.dat\nSampleB.dat\nSampleC.dat\nSampleD.dat\n```\n\nLANGUAGE: text\nCODE:\n```\nSampleA.dat\nSampleB.dat\nSampleC.dat\nSampleD.dat\nSampleE.dat\nSampleF.dat\nSampleG.dat\nSampleH.dat\n```\n\n----------------------------------------\n\nTITLE: Declaring Pool Usage with 'uses' for Matrix Jobs in Azure Pipelines YAML\nDESCRIPTION: Illustrates using the `uses` keyword to pre-declare agent pools that will be utilized by jobs generated through a matrix strategy in Azure Pipelines YAML. This allows the resource authorization system to identify and authorize the necessary pools upfront, preventing runtime errors that could occur because matrix parameters are resolved dynamically.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-181-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: mtrx\n  strategy:\n    matrix:\n      windows:\n        mypoolname: Private-Windows\n      mac:\n        mypoolname: Private-Mac\n  pool: $(mypoolname)\n  # without the following \"uses\" statement, \"pool\" won't see\n  # the pool names until it's too late, and you'll get an error\n  # at runtime\n  uses:\n    pools:\n    - Private-Windows\n    - Private-Mac\n```\n\n----------------------------------------\n\nTITLE: Retrieving Dev Center Project ID with Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the 'devCenterProjectResourceId' for a Dev Center project by querying its 'id' property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz devcenter admin project show --name fabrikam-dev-center-project --resource-group fabrikam-managed-devops-pools --query \"id\"\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Multiple Aggregations\nDESCRIPTION: This JSON shows the structure of a response when multiple aggregations are requested in a single call, displaying sums for both completed and remaining work.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_10\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\":\"https://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/$metadata#WorkItems(SumOfCompletedWork,SumOfRemainingWork)\",\"value\":[\n    {\n      \"@odata.id\":null,\"SumOfCompletedWork\":1525841.2900000005,\"SumOfRemainingWork\":73842.39\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Disconnecting Remote Desktop Session for UI Testing\nDESCRIPTION: Batch script to automatically find the current remote desktop session ID and disconnect it using the tscon command. This preserves the UI session for running tests while avoiding computer lock issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/ui-testing-considerations.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nfor /f \"skip=1 tokens=3\" %%s in ('query user %USERNAME%') do (\n  %windir%\\System32\\tscon.exe %%s /dest:console\n)\n```\n\n----------------------------------------\n\nTITLE: Adding Hub Group Contribution to Azure DevOps Extension Manifest\nDESCRIPTION: This JSON snippet defines a hub group contribution in the extension manifest. It creates a 'Samples' hub group at the project/team level with a specified order.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-hub-group.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"contributions\": [\n    {\n        \"id\": \"sample-hub-group\",\n        \"type\": \"ms.vss-web.hub-group\",\n        \"description\": \"Adds a 'Samples' hub group at the project/team-level\",\n        \"targets\": [\n            \"ms.vss-web.project-hub-groups-collection\"\n        ],\n        \"properties\": {\n            \"name\": \"Samples\",\n            \"order\": 100\n        }\n    },\n ]\n```\n\n----------------------------------------\n\nTITLE: Agent Profile JSON for Manual Standby Configuration\nDESCRIPTION: This JSON snippet shows the structure of an agent profile configuration file for manual standby agent setup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Stateless\": {},\n    \"resourcePredictionsProfile\": {\n        \"Manual\": {}\n    },\n    \"resourcePredictions\": {...}\n}\n```\n\n----------------------------------------\n\nTITLE: Example Structure for Agent.ContainerMapping Variable in Azure DevOps\nDESCRIPTION: Illustrates the JSON-like structure held by the Agent.ContainerMapping variable within Azure DevOps Pipelines. This variable provides a mapping between container resource names defined in the YAML pipeline (like 'one_container', 'another_container') and their corresponding runtime Docker container IDs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"one_container\": {\n    \"id\": \"bdbb357d73a0bd3550a1a5b778b62a4c88ed2051c7802a0659f1ff6e76910190\"\n  },\n  \"another_container\": {\n    \"id\": \"82652975109ec494876a8ccbb875459c945982952e0a72ad74c91216707162bb\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Recent Status Changes\nDESCRIPTION: Query clause to find items whose state was updated in the last week using @Today macro.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-date-or-current-iteration.md#2025-04-22_snippet_5\n\nLANGUAGE: WIQL\nCODE:\n```\nState Changed Date > @Today - 7\n```\n\n----------------------------------------\n\nTITLE: Cloning a Git Repository from Azure DevOps\nDESCRIPTION: A Git command to clone a repository from Azure DevOps to a local machine. This is executed in a Git command window to download the repository contents to your local computer.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-repo-intellij.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ngit clone https://dev.azure.com/contoso-ltd/MyFirstProject/_git/DeepSpace\n```\n\n----------------------------------------\n\nTITLE: Adding an Icon to Hub Using Office UI Fabric Icons\nDESCRIPTION: JSON properties configuration demonstrating how to add an icon to a hub in Azure DevOps using the Office UI Fabric Icons library by referencing the icon name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/reference/targets/overview.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"properties\": {\n            \"iconName\": \"Code\",\n            \"name\": \"Code Hub\",\n            \"order\": 30,\n            \"uri\": \"/views/code/custom.html\"\n        }\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Control in Extension Manifest JSON\nDESCRIPTION: This JSON snippet demonstrates how to define a custom work item form control contribution in the extension manifest. It specifies the control's properties and targets the work item form.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/custom-control.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"contributions\": [\n    {  \n        \"id\": \"sample-work-item-form-control\",\n        \"type\": \"ms.vss-work-web.work-item-form-control\",\n        \"description\": \"Custom work item form control\",\n        \"targets\": [\n            \"ms.vss-work-web.work-item-form\"\n        ],\n        \"properties\": {\n            \"name\": \"My Control\",\n            \"uri\": \"workItemControl.html\",\n            \"height\": 600\n        }\n    }\n],\n\"manifestVersion\": 1.0,\n    \"scopes\": [\n        \"vso.work\"\n    ]\n```\n\n----------------------------------------\n\nTITLE: Installing macOS Agent as launchd Service\nDESCRIPTION: Command to install the macOS agent as a launchd LaunchAgent service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh install\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Tag Using OData Analytics in Azure DevOps\nDESCRIPTION: This query demonstrates how to filter work items that contain a specific tag. It uses the 'any' operator to query the collection of tags associated with each work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_6\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?\n  $filter=Tags/any(d:d/TagName eq '{tag name}')\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Mismatched Scheduled Trigger Configuration in Azure Pipelines\nDESCRIPTION: Example of mismatched YAML configurations in different branches, demonstrating how branch-specific configurations affect scheduled triggers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/scheduled-triggers.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# YAML file in the release branch\nschedules:\n- cron: '0 0 * * *'\n  displayName: Daily midnight build\n  branches:\n    include:\n    - main\n\n# YAML file in the main branch with release added to the branches list\nschedules:\n- cron: '0 0 * * *'\n  displayName: Daily midnight build\n  branches:\n    include:\n    - main\n    - release\n```\n\n----------------------------------------\n\nTITLE: Cloning Sample .NET Core Docker App Repository\nDESCRIPTION: Provides the Git URL to clone the sample .NET Core application repository needed for the tutorial on building Docker images with Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/MicrosoftDocs/pipelines-dotnet-core-docker\n```\n\n----------------------------------------\n\nTITLE: Listing Tokens for a Security Namespace with Azure DevOps CLI\nDESCRIPTION: Command syntax for listing security tokens for a specified namespace and user or group. Required parameters include namespace ID and subject (user email or group descriptor).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission list --id\n                                   --subject\n                                   [--recurse]\n                                   [--token]\n```\n\n----------------------------------------\n\nTITLE: Showing Team Details with Azure CLI in Azure DevOps\nDESCRIPTION: This command displays detailed information about a specified team in Azure DevOps. It requires the team name or ID and has optional parameters for organization URL and project. The example shows the output in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-users-team-project.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team show --team\n                    [--org]\n                    [--project]\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team show --team \"Fabrikam Team\" --output table\n```\n\n----------------------------------------\n\nTITLE: Managing Subscriptions Command\nDESCRIPTION: Command to view, add and remove Azure Boards subscriptions in a Slack channel.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-slack.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n/azboards subscriptions\n```\n\n----------------------------------------\n\nTITLE: Publishing an Extension via TFX CLI in PowerShell\nDESCRIPTION: This PowerShell command uses the TFX CLI to publish an extension to the Visual Studio Marketplace and share it with a specific organization in one step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_20\n\nLANGUAGE: powershell\nCODE:\n```\ntfx extension publish --manifest-globs your-manifest.json --share-with yourOrganization\n```\n\n----------------------------------------\n\nTITLE: Node.js Server Start Command\nDESCRIPTION: Command to start the Node.js web server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode app.js\n```\n\n----------------------------------------\n\nTITLE: Listing Variable Groups with Azure DevOps CLI\nDESCRIPTION: Command to list the first three variable groups in a project in ascending order with a table output format to identify their IDs and properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group list --top 3 --query-order Asc --output table\n```\n\n----------------------------------------\n\nTITLE: OData Query for Pipeline Task Duration Percentiles\nDESCRIPTION: An OData query that calculates task duration percentiles (50th, 80th, 95th) for a specific pipeline task, filtering by pipeline name, task name, and completion date. Results are grouped by the calculated percentiles and completion date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_5\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\n$apply=filter(\nPipeline/PipelineName eq '{pipelinename}'\nand TaskDisplayName eq '{taskname}'\nand PipelineRunCompletedOn/Date ge {startdate}\nand (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded')\nand (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1)\n)\n/compute(\npercentile_cont(ActivityDurationSeconds, 0.5, PipelineRunCompletedDateSK) as TaskDuration50thPercentileInSeconds,\npercentile_cont(ActivityDurationSeconds, 0.8, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds,\npercentile_cont(ActivityDurationSeconds, 0.95, PipelineRunCompletedDateSK) as TaskDuration95thPercentileInSeconds)\n/groupby(\n(TaskDuration50thPercentileInSeconds, TaskDuration80thPercentileInSeconds, TaskDuration95thPercentileInSeconds, PipelineRunCompletedOn/Date))\n&$orderby=PipelineRunCompletedOn/Date asc\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Revise Others\nDESCRIPTION: Namespace identifier for revising other users' changes in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_40\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, ReviseOther\n```\n\n----------------------------------------\n\nTITLE: Creating Git Repository in Xcode\nDESCRIPTION: Steps to create a local Git repository for new Xcode projects by selecting 'Create Git repository on My Mac' during project creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-xcode.md#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Linking Azure Boards Project in Slack\nDESCRIPTION: Command to link an Azure Boards project to a Slack channel using the azboards slash command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-slack.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n/azboards link [project url]\n```\n\nLANGUAGE: bash\nCODE:\n```\n/azboards link https://dev.azure.com/myorg/myproject\n```\n\n----------------------------------------\n\nTITLE: Example of Aborting a Test Run with TCM\nDESCRIPTION: This example demonstrates canceling a test run with ID 1000082 for the Fabrikam Fiber project in the fabrikamprime organization. The command returns confirmation of the aborted run with its ID and title.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_7\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /abort /id:1000082 /collection:https://fabrikamprime.visualstudio.com /teamproject:\"Fabrikam Fiber\"\n\nRun with ID [1000082] and title [MyTestRun] has been aborted.\n```\n\n----------------------------------------\n\nTITLE: Using Output Variable in Subsequent Stage with Bash\nDESCRIPTION: This snippet demonstrates how to use an output variable from a previous stage in a subsequent stage of an Azure DevOps pipeline, using Bash commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\nstages:\n- stage: A\n  jobs:\n  - job: A1\n    steps:\n     - bash: echo \"##vso[task.setvariable variable=myStageVal;isOutput=true]this is a stage output variable\"\n       name: MyOutputVar\n- stage: B\n  dependsOn: A\n  jobs:\n  - job: B1\n    variables:\n      myStageAVar: $[stageDependencies.A.A1.outputs['MyOutputVar.myStageVal']]\n    steps:\n      - bash: echo $(myStageAVar)\n```\n\n----------------------------------------\n\nTITLE: Extending from a Template with Resources in Azure Pipelines (YAML)\nDESCRIPTION: This example demonstrates how to extend from a template that contains pipeline resources. The main pipeline file references the resource template that defines pipeline dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/templates.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\ntrigger:\n- none\n\nextends:\n  template: resource-template.yml\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: resource-template.yml\nresources:\n  pipelines:\n  - pipeline: my-pipeline \n    source: sourcePipeline\n\nsteps:\n- script: echo \"Testing resource template\"\n```\n\n----------------------------------------\n\nTITLE: Filtering by Date Offset from @Today Macro - WIQL\nDESCRIPTION: This query fetches work items created after two days before the current date, using @today-2 to specify the offset. It highlights the WIQL capability for date arithmetic within macros. No dependencies except for WIQL support for macros and date offsets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_12\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE  \n   [System.CreatedDate] > @today-2\n```\n\n----------------------------------------\n\nTITLE: Resolving File Content Conflicts in Git\nDESCRIPTION: Example of merge conflict markers in a file and how to resolve them. The conflict markers show the target branch version between <<<<<<< HEAD and ======= and the source branch version between ======= and >>>>>>>.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/merging.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n<<<<<<< HEAD\n- Network controller\n- Fiber optic transmitter\n- Fiber optic transceiver\n- Network switches\n=======\n- Network control\n- Fiber optic transmitter\n- Fiber optic transceiver\n- Network switch\n>>>>>>> origin/main\n```\n\n----------------------------------------\n\nTITLE: Querying Features and Child User Stories in OData\nDESCRIPTION: This OData query retrieves Features and their linked User Stories using the Child link type. It filters for non-closed Features within a specific Area Path and expands the Links entity to include details of the linked User Stories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'Feature'\n            and State ne 'Closed' and State ne 'Removed'\n            and startswith(Area/AreaPath,'{areapath}')\n        &$select=WorkItemId,Title,WorkItemType,State,AreaSK\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\n                Links(\n                    $filter=LinkTypeName eq 'Child'\n                        and TargetWorkItem/WorkItemType eq 'User Story';\n                    $select=LinkTypeName;\n                    $expand=TargetWorkItem($select=WorkItemType,WorkItemId,Title,State)\n                )\n```\n\n----------------------------------------\n\nTITLE: Configuring Sparse Checkout Non-Cone Mode in Azure Pipelines YAML\nDESCRIPTION: This YAML example shows the configuration of sparse checkout in non-cone mode for an Azure Repo using the `checkout` task in Azure Pipelines. The `sparseCheckoutPatterns` property defines complex patterns (`/* !/img`) to include all root items except the 'img' directory, offering fine-grained control over the files and directories checked out. This feature requires agent v3.248.0 (or v4.248.0 for .NET 8) or later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/repos/sprint-248-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n - checkout: repo\n   sparseCheckoutPatterns: /* !/img \n```\n\n----------------------------------------\n\nTITLE: Example of Adding a Child Link between Work Items with Azure CLI\nDESCRIPTION: Practical example showing how to add a Child relationship between two work items using Azure CLI with output displaying all current relationships for the work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/add-link.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item relation add --id 2794 --relation-type Child --target-id 2856 --output table\nAre you sure you want to remove this relation(s)? (y/n): y\nRelation Type    Url\n---------------  -------------------------------------------------------------------------------------------------\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2850\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2808\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2820\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2856\nParent           https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2811\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2876\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2801\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2877\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2805\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2807\n```\n\n----------------------------------------\n\nTITLE: Azure Active Directory Authentication for SOAP Services in C#\nDESCRIPTION: This example demonstrates how to authenticate with Azure DevOps using Azure Active Directory (AAD) credentials for SOAP-based services. It creates a TfsTeamProjectCollection with a VssAadCredential.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/client-libraries/soapSamples.md#2025-04-22_snippet_2\n\nLANGUAGE: C#\nCODE:\n```\npublic static void AADSoapSample()\n{\n    // Authenticate using Azure Active Directory credential (requires a Azure AD-backed organization)\n    using (TfsTeamProjectCollection tpc = new TfsTeamProjectCollection(new Uri(collectionUri), new VssAadCredential()))\n    {\n        tpc.Authenticate();\n        Console.WriteLine(tpc.InstanceId);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: SSH Configuration for Legacy RSA Key Support\nDESCRIPTION: Configuration to enable RSA key support for distributions with strict crypto policies. Adds RSA to accepted key types for Azure DevOps SSH hosts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_18\n\nLANGUAGE: ssh\nCODE:\n```\nHost ssh.dev.azure.com vs-ssh.visualstudio.com\n  PubkeyAcceptedKeyTypes +ssh-rsa\n```\n\n----------------------------------------\n\nTITLE: Installing and Upgrading Managed DevOps Pool Extension in Azure CLI\nDESCRIPTION: This command installs the 'mdp' extension for Azure CLI or upgrades it to the latest version if already installed. This extension is required for creating and managing Managed DevOps Pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name mdp --upgrade\n```\n\n----------------------------------------\n\nTITLE: Process Configuration XML - Invalid Requirement Backlog States\nDESCRIPTION: Example of invalid ProcessConfiguration.xml where RequirementBacklog element is missing a metastate mapping for type=\"Proposed\".\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_25\n\nLANGUAGE: xml\nCODE:\n```\n<RequirementBacklog category=\"Microsoft.RequirementCategory\" pluralName=\"Backlog items\" singularName=\"Backlog item\">\n   <States>\n      <State value=\"Committed\" type=\"InProgress\" />\n      <State value=\"Done\" type=\"Complete\" />\n   </States>\n . . .\n</RequirementBacklog >\n```\n\n----------------------------------------\n\nTITLE: Fetching Kubernetes Cluster Server URL\nDESCRIPTION: Command to retrieve the API server URL from the current Kubernetes context configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/service-endpoints.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config view --minify -o 'jsonpath={.clusters[0].cluster.server}'\n```\n\n----------------------------------------\n\nTITLE: Querying Requirement-Based Test Suites in Azure DevOps\nDESCRIPTION: Query clause to filter for requirement-based test suites by combining work item type and test suite type conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/build-test-integration.md#2025-04-22_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nWork Item Type = Test Suite And Test Suite Type = Requirement Based\n```\n\n----------------------------------------\n\nTITLE: Git SChannel Configuration\nDESCRIPTION: Command to configure agent to use Git with SChannel for SSL connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/certificate.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n./config.cmd --gituseschannel\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items Created Since a Specific Date in OData\nDESCRIPTION: Query that filters work items created since the beginning of 2020 with proper time zone handling (UTC-08:00). Note that time zone information must be included when filtering on date columns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_15\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=CreatedDate ge 2020-01-01T00:00:00-08:00\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Running Azure DevOps Pipeline Task in PowerShell\nDESCRIPTION: Demonstrates how to run a custom Azure DevOps pipeline task locally using Node.js and PowerShell. Shows error handling when required inputs are missing and successful execution when inputs are provided.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_10\n\nLANGUAGE: PowerShell\nCODE:\n```\nnode index.js\n```\n\nLANGUAGE: PowerShell\nCODE:\n```\n$env:INPUT_SAMPLESTRING=\"Human\"\nnode index.js\n```\n\n----------------------------------------\n\nTITLE: Creating Credentials for PowerShell Repository Authentication\nDESCRIPTION: Script to create a credential object using a Personal Access Token for authentication with Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n$username = \"<USER_NAME>\"\n$patToken = \"<PERSONAL_ACCESS_TOKEN>\" | ConvertTo-SecureString -AsPlainText -Force\n\n$credentials = New-Object System.Management.Automation.PSCredential($username, $patToken)\n```\n\n----------------------------------------\n\nTITLE: Listing Project Iterations using Azure CLI\nDESCRIPTION: This Azure CLI command lists the iteration paths defined for a project. It allows specifying the depth of child nodes to list and the project name or ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration project list [--depth]\n                                 [--path]\n                                 [--project]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Agent Windows Service Configuration\nDESCRIPTION: Demonstrates the command-line options for configuring an Azure DevOps agent as a Windows service, including auto-logon and specifying Windows credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/unattended-config.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n--runAsService --windowsLogonAccount <account> --windowsLogonPassword <password>\n```\n\n----------------------------------------\n\nTITLE: Configuring PyPIRC File for Azure Artifacts\nDESCRIPTION: Configuration file setup for connecting to Azure Artifacts feed. This snippet shows the structure of the pypirc file that should be added to the home directory for package publishing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/python-cli.md#2025-04-22_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\n[distutils]\nIndex-servers =\nFEED_NAME\n\n[FEED_NAME]\nRepository = https://pkgs.dev.azure.com/ORGANIZATION_NAME/PROJECT_NAME/_packaging/FEED_NAME/pypi/upload/\n```\n\n----------------------------------------\n\nTITLE: Querying Azure Key Vault Secrets in Pipeline\nDESCRIPTION: YAML pipeline configuration demonstrating how to fetch secrets from Azure Key Vault and map them to environment variables. Uses the AzureKeyVault@1 task to retrieve secrets and a bash task to utilize them securely.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-in-own-project.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: AzureKeyVault@1\n  inputs:\n    azureSubscription: 'SERVICE_CONNECTION_NAME'\n    KeyVaultName: 'KEY_VAULT_NAME'\n    SecretsFilter: '*'\n\n- bash: |\n    echo \"Secret Found! $MY_MAPPED_ENV_VAR\"        \n  env:\n    MY_MAPPED_ENV_VAR: $(SECRET_NAME)\n```\n\nLANGUAGE: bash\nCODE:\n```\nSecret Found! ***\n```\n\n----------------------------------------\n\nTITLE: Trending Multiple States Time Analysis in DAX for Azure DevOps\nDESCRIPTION: This formula calculates the combined time that work items have spent in multiple specified states ('Committed' and 'In Progress'). It's designed for trending analysis to show cumulative time across workflow states.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_7\n\nLANGUAGE: DAX\nCODE:\n```\nState Time in Days - Working States = \nCALCULATE (\n    SUM ( 'View Name'[Date Diff in Days] ),\n    ALLEXCEPT ( 'View Name', 'View Name'[Work Item Id] ),\n   'View Name'[Date] <= EARLIER('View Name'[Date]),\n   'View Name'[State] IN { \"Committed\", \"In Progress\" }\n) + 0\n```\n\n----------------------------------------\n\nTITLE: Querying Child Work Items from Parent in Azure DevOps Analytics\nDESCRIPTION: This OData query retrieves a parent work item and its children, demonstrating the parent-to-child relationship query. It selects basic work item fields and expands the Children property to include details of linked child items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/work-item-links.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam Fiber/_odata/v4.0-preview/WorkItems?$filter=WorkItemId eq 359&$select=WorkItemId, Title, WorkItemType, State&$expand=Children($select=WorkItemId,Title, WorkItemType, State)\n```\n\n----------------------------------------\n\nTITLE: Creating a Build Validation Policy with Azure CLI\nDESCRIPTION: This command creates a build validation policy for pull requests. It requires parameters like blocking status, branch name, build definition ID, and repository ID. Additional optional parameters allow for fine-tuning the policy configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy build create --blocking {false, true}\n                             --branch\n                             --build-definition-id\n                             --display-name\n                             --enabled {false, true}\n                             --manual-queue-only {false, true}\n                             --queue-on-source-update-only {false, true}\n                             --repository-id\n                             --valid-duration\n                             [--branch-match-type {exact, prefix}]\n                             [--detect {false, true}]\n                             [--org]\n                             [--path-filter]\n                             [--project]\n                             [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Settings for Azure DevOps Cloud\nDESCRIPTION: XML configuration for settings.xml file to set up authentication credentials for Azure Artifacts in cloud-hosted Azure DevOps. Includes server configuration with placeholders for organization name and personal access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/pom-and-settings.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<servers>\n  <server>\n    <id>MavenDemo</id>\n    <username><ORGANIZATION_NAME></username>\n    <password>[PERSONAL_ACCESS_TOKEN]</password>\n  </server>\n</servers>\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Task Duration with Power BI M Query\nDESCRIPTION: Power BI M query that extracts task duration metrics from the Azure DevOps Analytics service. It calculates 50th, 80th, and 95th percentile durations for each task in a specified pipeline, filtering by pipeline name, date range, and successful runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerBI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and PipelineRunCompletedOn/Date ge {startdate} \"\n                &\"and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded') \"\n        &\"and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1) \"\n        &\") \"\n            &\"/compute( \"\n                &\"percentile_cont(ActivityDurationSeconds, 0.5, TaskDisplayName) as TaskDuration50thPercentileInSeconds, \"\n                &\"percentile_cont(ActivityDurationSeconds, 0.8, TaskDisplayName) as TaskDuration80thPercentileInSeconds, \"\n            &\"percentile_cont(ActivityDurationSeconds, 0.95, TaskDisplayName) as TaskDuration95thPercentileInSeconds) \"\n                &\"/groupby( \"\n            &\"(TaskDuration50thPercentileInSeconds, TaskDuration80thPercentileInSeconds,TaskDuration95thPercentileInSeconds, TaskDisplayName)) \"\n        &\"&$orderby=TaskDuration50thPercentileInSeconds desc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Configuring Git LFS with Submodules in YAML Pipeline\nDESCRIPTION: Script to properly configure Git LFS before checking out submodules. This is necessary when submodules contain LFS files, particularly on Windows agents or self-hosted agents that don't have Git LFS preconfigured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- script: |\n    git config --global --add filter.lfs.required true\n    git config --global --add filter.lfs.smudge \"git-lfs smudge -- %%f\"\n    git config --global --add filter.lfs.process \"git-lfs filter-process\"\n    git config --global --add filter.lfs.clean \"git-lfs clean -- %%f\"\n  displayName: Configure LFS for use with submodules\n- checkout: self\n  lfs: true\n  submodules: true\n# ... rest of steps ...\n```\n\n----------------------------------------\n\nTITLE: Updating Case Enforcement Policy with Azure CLI\nDESCRIPTION: This command updates an existing case enforcement policy in a Git repository. It requires the policy ID and can modify whether the policy is blocking, enabled, and other parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy case-enforcement update --id\n                                        [--blocking {false, true}]\n                                        [--detect {false, true}]\n                                        [--enabled {false, true}]\n                                        [--org]\n                                        [--project]\n                                        [--repository-id]\n```\n\n----------------------------------------\n\nTITLE: Creating Pull Requests Using Git Aliases\nDESCRIPTION: Example of using git aliases to create a pull request targeting a specific branch, demonstrating the shortened command syntax after enabling git aliases.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/auto-detect-and-git-aliases.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit pr create --target-branch {branch\\_name}\n```\n\n----------------------------------------\n\nTITLE: Adding Reviewers to a PR with Azure DevOps CLI\nDESCRIPTION: This command creates a new pull request in the Fabrikam repository with specified reviewers. It demonstrates how to add teams or groups as reviewers during PR creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-requests.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr create --repository Fabrikam --source-branch new --reviewer \"[Fabrikam]\\Fabrikam Team\" \"[Fabrikam Fiber]\\Web\"\n```\n\n----------------------------------------\n\nTITLE: Creating Initial Retention Lease and Outputting ID in Multi-stage Pipeline (PowerShell)\nDESCRIPTION: This YAML snippet shows a PowerShell task within a 'Build' stage that creates an initial 1-year retention lease upon success. It then extracts the `LeaseId` from the REST API response and sets it as an output variable named `newLeaseId` using `task.setvariable`, making it available for subsequent stages. Requires the System.AccessToken.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/run-retention.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PowerShell@2\n  condition: and(succeeded(), not(canceled()))\n  name: RetainOnSuccess\n  displayName: Retain on Success\n  inputs:\n    failOnStderr: true\n    targetType: 'inline'\n    script: |\n      $contentType = \"application/json\";\n      $headers = @{ Authorization = 'Bearer $(System.AccessToken)' };\n      $rawRequest = @{ daysValid = 365; definitionId = $(System.DefinitionId); ownerId = 'User:$(Build.RequestedForId)'; protectPipeline = $false; runId = $(Build.BuildId) };\n      $request = ConvertTo-Json @($rawRequest);\n      $uri = \"$(System.CollectionUri)$(System.TeamProject)/_apis/build/retention/leases?api-version=6.0-preview.1\";\n      $newLease = Invoke-RestMethod -uri $uri -method POST -Headers $headers -ContentType $contentType -Body $request;\n      $newLeaseId = $newLease.Value[0].LeaseId\n      echo \"##vso[task.setvariable variable=newLeaseId;isOutput=true]$newLeaseId\";\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from All Project Pipelines using Teams Command\nDESCRIPTION: Command for removing all pipeline subscriptions related to a specific Azure DevOps project from a Microsoft Teams channel.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/microsoft-teams.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n@azure pipelines unsubscribe all https://dev.azure.com/myorg/myproject\n```\n\n----------------------------------------\n\nTITLE: Generating Deployment Report for Azure SQL Database Using SQLPackage\nDESCRIPTION: This command line instruction uses SQLPackage.exe to create an XML report of changes that would be made by publishing a DACPAC to an Azure SQL Database. It requires the source DACPAC file, target server details, and output path for the report.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_11\n\nLANGUAGE: Command Line\nCODE:\n```\nSqlPackage.exe /SourceFile:\"E: \\dacpac\\ajyadb.dacpac\" /Action:DeployReport /TargetServerName:\"DemoSqlServer.database.windows.net.placeholder\"\n/TargetDatabaseName:\"Testdb\" /TargetUser:\"ajay\" /TargetPassword:\"SQLPassword\" /OutputPath:\"C:\\temp\\deployReport.xml\" \n```\n\n----------------------------------------\n\nTITLE: Removing Azure DevOps Pipeline Agent\nDESCRIPTION: Command to remove an existing Azure DevOps pipeline agent using the configuration script. This should be executed after stopping and uninstalling the agent service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/remove-and-reconfigure-unix.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./config.sh remove\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests Filtered by Branch with OData\nDESCRIPTION: This OData query retrieves failed test results for a specific build pipeline, allowing filtering by branch. It includes the branch name in the grouping to enable slicing in the Power BI report.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tAnd Date/Date ge {startdate}\n\tAnd Workflow eq 'Build')\n/groupby((TestSK, Test/TestName, Branch/BranchName), \n\taggregate(\n\tResultCount with sum as TotalCount,\n\tResultPassCount with sum as PassedCount,\n\tResultFailCount with sum as FailedCount,\n\tResultNotExecutedCount with sum as NotExecutedCount,\n\tResultNotImpactedCount with sum as NotImpactedCount,\n\tResultFlakyCount with sum as FlakyCount))\n/filter(FailedCount gt 0)\n/compute(\niif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Field Details - Azure DevOps REST API\nDESCRIPTION: REST API endpoint to get field attributes for a specific field by its reference name in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/work-item-fields.md#2025-04-22_snippet_4\n\nLANGUAGE: REST\nCODE:\n```\nhttps://dev.azure.com/OrganizationName/_apis/wit/fields/FieldReferenceName\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Agent Interactively on Windows\nDESCRIPTION: Start the Azure Pipelines agent in interactive mode, allowing it to accept and process jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/windows-agent.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\run.cmd\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Multiple Tags (AND) in OData\nDESCRIPTION: Query to retrieve work items that have been tagged with both specified tags using AND conditions. This demonstrates combining multiple tag filters to find items with all required tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_25\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=Tags/any(t:t/TagName eq {tag1}) and Tags/any(t:t/TagName eq {tag2})\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pipeline without Confirmation using Azure CLI\nDESCRIPTION: This command deletes the Azure Pipeline specified by its ID (12). The `--yes` parameter bypasses the default confirmation prompt, proceeding with the deletion immediately. Use with caution. Requires Azure CLI with the Azure DevOps extension installed and configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/manage-pipelines-with-azure-cli.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines delete --id 12 --yes\n```\n\n----------------------------------------\n\nTITLE: Defining FabrikamService Input Object\nDESCRIPTION: Demonstrates the configuration of a connected service input object in task.json. The input type is connectedService:Fabrikam which specifies it's an endpoint type with Fabrikam as the service name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/service-endpoints.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inputs\": [\n    {\n      \"name\": \"FabrikamService\",\n      \"type\": \"connectedService:Fabrikam\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Including Content from External Files in Markdown\nDESCRIPTION: These snippets show how to include content from external files in the markdown document, likely used for modular documentation structure in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-157-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update-links](includes/general/sprint-157-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update-links](includes/boards/sprint-157-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update-links](includes/repos/sprint-157-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update-links](includes/artifacts/sprint-157-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update-links](includes/pipelines/sprint-157-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update-links](includes/reporting/sprint-157-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update](includes/general/sprint-157-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update](includes/boards/sprint-157-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update](includes/repos/sprint-157-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update](includes/artifacts/sprint-157-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update](includes/pipelines/sprint-157-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update](includes/reporting/sprint-157-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157](includes/signer/sprint-157.md)]\n```\n\n----------------------------------------\n\nTITLE: Setting Azure DevOps Agent Configuration via Environment Variable\nDESCRIPTION: Demonstrates how to set an agent configuration option using an environment variable instead of a command-line parameter. This example shows setting the password option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/unattended-config.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nVSTS_AGENT_INPUT_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Using assume-unchanged Flag to Ignore File Changes\nDESCRIPTION: Alternative method to temporarily ignore changes to tracked files using the assume-unchanged flag. This approach is less robust than skip-worktree as it can be reverted by Git pull operations that modify the file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/ignore-files.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ngit update-index --assume-unchanged <file path>\n```\n\n----------------------------------------\n\nTITLE: Querying Resource Areas REST API (HTTP)\nDESCRIPTION: This HTTP request demonstrates how to query the Resource Areas REST API to get the base URL for an organization using its name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nGET https://dev.azure.com/_apis/resourceAreas/79134C72-4A58-4B42-976C-04E7115F32BF\n      ?accountName={organizationName}&api-version=5.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: Example Commit Messages for Work Item Resolution\nDESCRIPTION: Shows various syntax examples for closing work items using commit message keywords. Demonstrates different ways to reference work items with fix keywords.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/resolution-mentions.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nFixes #123\n\nThis fixed #123!\n\nChange behavior to fix: #123\n\nFixes #123 and fixes #124\n```\n\n----------------------------------------\n\nTITLE: JSON Structure for Azure Stack Hub Service Principal\nDESCRIPTION: Example JSON object structure returned after creating or logging in with a service principal. This information is used to create the service connection in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-stack.md#2025-04-22_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"environmentName\": \"<Environment name>\",\n  \"homeTenantId\": \"<Tenant ID for the SPN>\",\n  \"id\": \"<Application ID for the SPN>\",\n  \"isDefault\": true,\n  \"managedByTenants\": [],\n  \"name\": \"<Tenant name>\",\n  \"state\": \"Enabled\",\n  \"tenantId\": \"<Tenant ID for the SPN>\",\n  \"user\": {\n    \"name\": \"<User email address>\",\n    \"type\": \"user\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Active User Stories Assigned to a Team Group in Azure Boards (WIQL)\nDESCRIPTION: This WIQL clause filters for active user stories assigned to a specific team or group by using `Work Item Type = User Story`, `State = Active`, and `Assigned To In Group [FabrikamFiber]\\Web`. The 'In Group' operator matches group-based assignments. Required dependencies include accurate group names and permissions to query group memberships. This returns work items of type User Story currently assigned to the 'Web' team in the 'Active' state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_2\n\nLANGUAGE: WIQL\nCODE:\n```\nWork Item Type = User Story\nAnd State = Active\nAnd Assigned To In Group [FabrikamFiber]\\Web\n```\n\n----------------------------------------\n\nTITLE: Declaring a Contribution in Azure DevOps Extension Manifest\nDESCRIPTION: This example shows how to declare a hub contribution in an extension manifest. It specifies the contribution type, targets, and properties such as name, uri, and order.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/contributions-overview.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": \"build-explorer-hub\",\n            \"type\": \"ms.vss-web.hub\",\n            \"targets\": [\n                \".build-hub-group\"\n            ],\n            \"properties\": {\n                \"name\": \"Explorer\",\n                \"uri\": \"/_build\",\n                \"order\": 22\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Running Linux Agent Interactively in Azure Pipelines\nDESCRIPTION: Command to run the Azure Pipelines Linux agent interactively after installation and configuration. This allows the agent to accept and run jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh\n```\n\n----------------------------------------\n\nTITLE: Cloning Git Repository with Mirror Option\nDESCRIPTION: Command to clone a Git repository with the --mirror option, which creates a bare clone of the repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/move-git-repos-between-team-projects.md#2025-04-22_snippet_0\n\nLANGUAGE: Git\nCODE:\n```\ngit clone --mirror https://demo-fabrikam.visualstudio.com/DefaultCollection/Fabrikam/_git/MigrationDemo\n```\n\n----------------------------------------\n\nTITLE: Example of publishing a NuGet package using dotnet CLI\nDESCRIPTION: A concrete example of the dotnet nuget push command with sample values filled in, showing how to publish a package named MyPackage version 5.0.2 to a feed named MyFeed in the MyProject project of the MyOrg organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-exe.md#2025-04-22_snippet_3\n\nLANGUAGE: CLI\nCODE:\n```\ndotnet nuget push --source https://pkgs.dev.azure.com/MyOrg/MyProject/_packaging/MyFeed/nuget/v3/index.json --api-key AZ bin/MyPackage.5.0.2.nupkg\n```\n\n----------------------------------------\n\nTITLE: Setting Service Principal Authentication for Azure Artifacts in Linux/macOS\nDESCRIPTION: Bash commands to set environment variables for authenticating with Azure Artifacts using a Service Principal. This approach uses certificate-based authentication and requires either the certificate subject name or file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-setup.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport ARTIFACTS_CREDENTIALPROVIDER_FEED_ENDPOINTS='{\n    \"endpointCredentials\": [\n        {\n            \"endpoint\": \"<FEED_URL>\",\n            \"clientId\": \"<SERVICE_PRINCIPAL_APPLICATION_(CLIENT)_ID>\",\n            \"clientCertificateSubjectName\": \"<SERVICE_PRINCIPAL_CERTIFICATE_NAME>\",\n            \"clientCertificateFilePath\": \"<SERVICE_PRINCIPAL_CERTIFICATE_PATH>\"\n        }\n    ]\n}'\n```\n\n----------------------------------------\n\nTITLE: Denying CreateBranch Permission at Repository Root for Contributors\nDESCRIPTION: TF Git command to block Contributors from creating branches at the repository root level, forcing them to use the designated branch folders instead.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/require-branch-folders.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf git permission /deny:CreateBranch /group:[FabrikamProject]\\Contributors /collection:https://dev.azure.com/fabrikam-fiber/ /teamproject:FabrikamProject /repository:FabrikamRepo\n```\n\n----------------------------------------\n\nTITLE: Azure Teams Authentication URL\nDESCRIPTION: URL endpoint for signing into Microsoft Teams before resetting Azure Repos authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-teams.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://teams.microsoft.com/\n```\n\n----------------------------------------\n\nTITLE: Pinging Provider Addresses Across Hosts with PowerShell\nDESCRIPTION: This PowerShell command tests connectivity between host machines using their provider addresses. It verifies that all host machines are properly connected to a physical NIC in trunk mode with routable IPs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/create-virtual-network.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nping -p <Provider address>\n```\n\n----------------------------------------\n\nTITLE: DateTime Field Type Operators and Macros in Azure DevOps Queries\nDESCRIPTION: Operators and macros supported for DateTime fields in Azure DevOps queries. DateTime fields allow specification of dates, variables like @Today, and support various comparison operators.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`= , <> , > , < , >= , <= , =[Field], <>[Field], >[Field], <[Field], >=[Field], <=[Field], In, Not In, Was Ever`  \n**Macros**: `@Today`, valid with any **DateTime** field  \n\n**Additional macros supported on Azure DevOps 2019 Update 1 and later versions:**:  \n`@StartOfDay`, `@StartOfWeek`, `@StartOfMonth`, and `@StartOfYear`, valid with any **DateTime** field\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps OAuth 2.0 Token Request Body\nDESCRIPTION: This code snippet shows the structure of the HTTP request body used to obtain an access token and refresh token after receiving the authorization code.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_2\n\nLANGUAGE: no-highlight\nCODE:\n```\nclient_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&client_assertion={0}&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion={1}&redirect_uri={2}\n```\n\n----------------------------------------\n\nTITLE: Delete Field Command\nDESCRIPTION: Deletes a field from the project collection using witadmin deletefield command\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_7\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin deletefield /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:AdventureWorks.Field\n```\n\n----------------------------------------\n\nTITLE: Accessing Organization Settings in Azure DevOps\nDESCRIPTION: This snippet demonstrates how to navigate to the Organization settings page in Azure DevOps, where users can find information about their organization's geography.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/change-organization-location.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Sign in to your organization (```https://dev.azure.com/{Your_Organization}```).\n\n2. Select :::image type=\"icon\" source=\"../../media/icons/gear-icon.png\" border=\"false\"::: **Organization settings**.\n\n   :::image type=\"content\" source=\"../../media/settings/open-admin-settings-vert.png\" alt-text=\"Screenshot showing a gear icon and Organization settings emphasized.\":::\n\n1. Select **Overview**. The geography information is listed further down the page.\n\n   :::image type=\"content\" source=\"media/change-organization-location/organization-settings-geography.png\" alt-text=\"Screenshot showing the region in Organization settings.\":::\n```\n\n----------------------------------------\n\nTITLE: Azure Boards Sign Out Command\nDESCRIPTION: Command used to sign out of Azure Boards in Microsoft Teams as part of authentication troubleshooting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-teams.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n@azure boards signout\n```\n\n----------------------------------------\n\nTITLE: Displaying History Command Syntax in TFVC\nDESCRIPTION: Shows the full syntax for the tf history command, including all available parameters and options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/history-command.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ntf hist[ory] itemspec [/version:versionspec] \n[/stopafter:number] [/recursive] [/user:username] \n[/format:(brief|detailed)] [/slotmode] [/itemmode] [/noprompt]\n[/login:username,[password]] [/sort:ascending,descending]\n[/collection:TeamProjectCollectionUrl]\n```\n\n----------------------------------------\n\nTITLE: Creating Anaconda Environment from Command Line (YAML)\nDESCRIPTION: Creates a new Anaconda environment named 'myEnvironment' using the 'conda create' command. The '--yes' flag automatically confirms prompts, and '--quiet' reduces console output. Examples provided for Ubuntu (bash), macOS (bash), and Windows (script task). Note: To add specific channels, use 'conda config --add channels <channel-name>' in a preceding step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/anaconda.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Ubuntu\n\n```yaml\n- bash: conda create --yes --quiet --name myEnvironment\n  displayName: Create Anaconda environment\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# macOS\n\n```yaml\n- bash: conda create --yes --quiet --name myEnvironment\n  displayName: Create Anaconda environment\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# Windows\n\n```yaml\n- script: conda create --yes --quiet --name myEnvironment\n  displayName: Create Anaconda environment\n```\n```\n\n----------------------------------------\n\nTITLE: Finding Items Resolved by Current User in the Last Week in Azure Boards (WIQL)\nDESCRIPTION: This snippet filters for items resolved by the current user within the last seven days using `Resolved By = @Me` and `Resolved Date >= Today-7`. The 'Today-7' macro dynamically filters by the week timeframe. This is ideal for measuring recent personal completions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_11\n\nLANGUAGE: WIQL\nCODE:\n```\nResolved By = @Me\nAnd Resolved Date >= Today-7\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 150 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links to Sprint 150 update information for Azure Repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-150-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-150-update-links](../includes/repos/sprint-150-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Environment Roles Table Definition\nDESCRIPTION: Markdown table defining the core roles (Creator, Reader, User, Administrator) and their associated permissions for environment management in current Azure DevOps version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/environment-roles.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Role | Description |\n|------------------------------------|---------|\\n| **Creator** | Global role, available from environments hub security option. Members of this role can create the environment in the project. Contributors are added as members by default. Required to trigger a YAML pipeline when the environment does not already exist.|\n| **Reader** | Members of this role can view the environment. |\n| **User** | Members of this role can use the environment when creating or editing YAML pipelines. |\n| **Administrator** | Members of this role can administer permissions, create, manage, view and use environments. For a particular environment, its creator is added as Administrator by default. Administrators can also open access to an environment to all pipelines. |\n```\n\n----------------------------------------\n\nTITLE: Specifying Proxy Bypass URLs\nDESCRIPTION: Example content for a .proxybypass file to specify URLs that should bypass the proxy using regular expressions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/proxy.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\ngithub\\.com\nbitbucket\\.com\n```\n\n----------------------------------------\n\nTITLE: Tracking Test Suite Clone Status Using TCM CLI in Azure DevOps\nDESCRIPTION: This TCM command retrieves the status of a previously initiated clone operation. It requires the clone operation ID, collection URL, and team project name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_8\n\nLANGUAGE: tcm\nCODE:\n```\ntcm suites /clone /status:4 /collection:https://dev.azure.com/fabrikamprime /teamproject:\"Fabrikam Fiber\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Deleted Items in TFVC\nDESCRIPTION: Example showing how to list all items in the current folder, including deleted items with their deletion IDs using the /deleted option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/dir-command.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf dir /deleted\n```\n\n----------------------------------------\n\nTITLE: Pushing Commits to Remote Repository with Git Command Line\nDESCRIPTION: Command to publish new commits from your current local branch to the corresponding branch in the Azure Repos Git repository. This uploads your locally committed changes to the remote repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-vs.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n> git push\n```\n\n----------------------------------------\n\nTITLE: Creating Security Group in Azure DevOps CLI\nDESCRIPTION: Command syntax for creating a new security group in Azure DevOps using the CLI. Includes optional parameters for description, email-id, groups, name, origin-id, project and scope settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group create [--description]\n                                [--email-id]\n                                [--groups]\n                                [--name]\n                                [--origin-id]\n                                [--project]\n                                [--scope {organization, project}]\n```\n\n----------------------------------------\n\nTITLE: Configuring Dashboard Widget Visibility for Public Users in Azure DevOps\nDESCRIPTION: This JSON snippet demonstrates how to set the 'restrictedTo' property for a dashboard widget contribution to make it visible to both non-member and member users in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/public-project.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"contributions\": [\n    {\n      \"id\": \"HelloWorldWidget\",\n      \"type\": \"ms.vss-dashboards-web.widget\",\n      \"targets\": [\n        \"ms.vss-dashboards-web.widget-catalog\"\n      ],\n      \"restrictedTo\": [\n        \"member\",\n        \"public\",\n        \"anonymous\"\n      ],\n      \"properties\": {\n          ...\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Linked Work Items Query\nDESCRIPTION: WIQL query demonstrating how to retrieve linked work items using WorkItemLinks table and filtering on both source and target items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_22\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT\n    [System.Id],\n    [System.Title],\n    [System.State],\n    [System.IterationPath]\nFROM workitemLinks\nWHERE\n    (\n        [Source].[System.TeamProject] = @project\n        AND [Source].[System.WorkItemType] = 'Product Backlog Item'\n    )\n    AND (\n        [System.Links.LinkType] = 'System.LinkTypes.Hierarchy-Forward'\n    )\n    AND (\n        [Target].[System.TeamProject] = @project\n        AND [Target].[System.WorkItemType] <> ''\n        AND [Target].[System.State] <> 'Closed'\n    )\nORDER BY [Microsoft.VSTS.Common.Priority],\n    [System.CreatedDate] DESC\nMODE (Recursive)\n```\n\n----------------------------------------\n\nTITLE: Sample Azure CLI Command for Repository Import\nDESCRIPTION: Example Azure CLI command that imports a public GitHub repository into an empty Git repository in Azure DevOps using default configuration. Shows the full command syntax and the resulting JSON output.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/import-git-repository.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos import create --git-source-url https://github.com/fabrikamprime/fabrikam-open-source --repository fabrikam-open-source\n```\n\n----------------------------------------\n\nTITLE: Using `${{ else }}` Conditional Expression in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the `${{ else }}` conditional expression within an Azure Pipelines step. It conditionally sets the `TOOL_DEBUG` and `TOOL_DEBUG_DIR` environment variables based on the value of the `parameters.debug` runtime parameter, allowing different environment setups for debug and non-debug builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-192-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: tool\n  env:\n    ${{ if parameters.debug }}:\n      TOOL_DEBUG: true\n      TOOL_DEBUG_DIR: _dbg\n    ${{ else }}:\n      TOOL_DEBUG: false\n      TOOL_DEBUG_DIR: _dbg\n```\n\n----------------------------------------\n\nTITLE: Embedding Video in Wiki Using Markdown\nDESCRIPTION: Demonstrates how to embed videos from services like Microsoft Stream and YouTube into a wiki page using a specific markdown syntax format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-140-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: video\n> [!VIDEO https://www.youtube.com/embed/7DbslbKsQSk]\n:::\n```\n\n----------------------------------------\n\nTITLE: Configuring Project-Scoped Feed in Cargo Config for Azure DevOps Server 2022\nDESCRIPTION: TOML configuration to add to .cargo/config.toml for connecting to a project-scoped feed in Azure DevOps Server 2022. This configures the registry and replaces the default crates-io source with your feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[registries]\n<FEED_NAME> = { index = \"sparse+https://pkgs.dev.azure.com/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/Cargo/index/\" }\n\n[source.crates-io]\nreplace-with = \"<FEED_NAME>\"\n```\n\n----------------------------------------\n\nTITLE: Querying Stage-wise Pipeline Failures in Power BI\nDESCRIPTION: Power BI query to analyze stage-wise failures in a specific pipeline. Returns failure counts grouped by date and stage name, filtering for failed pipeline runs and tasks after a specified start date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-stagewise-failures.md#2025-04-22_snippet_0\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and PipelineRunCompletedOn/Date ge {startdate} \"\n                &\"and PipelineRunOutcome eq 'Failed' \"\n        &\"and TaskOutcome eq 'Failed' \"\n        &\") \"\n            &\"/groupby( \"\n                &\"(PipelineRunCompletedOn/Date, PipelineRunId, PipelineJob/StageName ), \"\n                &\"aggregate (FailedCount with sum as FailedCount)) \"\n            &\"/groupby( \"\n                &\"(PipelineRunCompletedOn/Date, PipelineJob/StageName ), \"\n            &\"aggregate \"\n        &\"(cast(FailedCount gt 0, Edm.Int32) with sum as FailedStageCount)) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Specifying Image Override in Azure Pipeline\nDESCRIPTION: Shows how to configure a pipeline to use a specific image by using the ImageOverride demand with an image alias. This is useful when pools have multiple images available.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/demands.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: fabrikam-dev-pool # Name of Managed DevOps Pool\n  demands:\n  - ImageOverride -equals ubuntu-20.04-gen2\n```\n\n----------------------------------------\n\nTITLE: Managing Build Tags via Azure CLI\nDESCRIPTION: Commands to add, delete or list build tags when creating builds from the command line. This enables tagging builds at creation time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-152-update.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz pipelines build tag\n```\n\n----------------------------------------\n\nTITLE: Updating PR Details with Azure DevOps CLI\nDESCRIPTION: This command updates an existing pull request (ID #21) with a new title and description. It demonstrates how to modify PR metadata after creation using the Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-requests.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr update --id 21 --description \"These updates are *no longer new*.\" --title \"Old updates\"\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for HTTP Tracing in Windows Agents\nDESCRIPTION: Commands to enable HTTP traffic tracing in Windows agents by setting the VSTS_AGENT_HTTPTRACE environment variable before launching the agent listener.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_1\n\nLANGUAGE: cmd\nCODE:\n```\nWindows:\n    set VSTS_AGENT_HTTPTRACE=true\n\nmacOS/Linux:\n    export VSTS_AGENT_HTTPTRACE=true\n```\n\n----------------------------------------\n\nTITLE: Filtering by Creator in Azure DevOps Search\nDESCRIPTION: This snippet shows the shortcut filter `c:` used in Azure DevOps semantic search to find work items created by a specific user. Replace 'user name' with the actual name of the user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_1\n\nLANGUAGE: azure-devops-search\nCODE:\n```\nc: <user name>\n```\n\n----------------------------------------\n\nTITLE: Restoring Maven Dependencies\nDESCRIPTION: Command to install/restore Maven package dependencies defined in pom.xml\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/get-started-maven.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Sample Changeset Command Output in TFVC\nDESCRIPTION: Example output of the 'tf changeset' command showing changeset details including user, date, comment, affected items, associated work items, and check-in notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/changeset-command.md#2025-04-22_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nChangeset: 8675309\nUser: DOMAIN\\JohnG\nDate: 01/21/2004 21:03:45\nComment:  This check-in fixes issues in several features.  I also refactored some items in buf.c into a new file named bif.c because buf.c was too hard to parse.\nItems:\n    $/baz/proj/bif.c           Added\n    $/baz/proj/buf.c          Modified, Renamed\nWork Items:\n    34527     The \"Access Denied\" message isn't descriptive enough.\n    35628     The UI flickers when I press the '8', 'y', 'Ctrl', and 'End' buttons at the same time.\nCheck-in Notes:\n    Code Reviewer:  ShellM\n    Performance Reviewer: ShellM\n    Security Reviewer: ShellM\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Pass Rate Trend by Pipeline ID in Power BI\nDESCRIPTION: This Power BI query retrieves pipeline run data using a specific pipeline ID, calculates pass rates, and groups results by date. It's more stable than using pipeline names as it's not affected by pipeline renaming.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-pass-rate-trend.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"PipelineId eq {pipelineId} \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and CanceledCount ne 1 \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(CompletedOn/Date), \"\n                &\"aggregate \"\n                &\"($count as TotalCount, \"\n            &\"SucceededCount with sum as SucceededCount , \"\n                &\"FailedCount with sum as FailedCount, \"\n            &\"PartiallySucceededCount with sum as PartiallySucceededCount)) \"\n        &\"/compute( \"\n    &\"SucceededCount mul 100.0 div TotalCount as PassRate, \"\n    &\"FailedCount mul 100.0 div TotalCount as FailRate, \"\n    &\"PartiallySucceededCount mul 100.0 div TotalCount as PartiallySuccessfulRate) \"\n    &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Adding NuGet Package Source with PAT\nDESCRIPTION: CLI command to add a NuGet package source to the nuget.config file, including authentication with a Personal Access Token (PAT). This is used for publishing to feeds in different Azure DevOps organizations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/publish.md#2025-04-22_snippet_3\n\nLANGUAGE: CLI\nCODE:\n```\nnuget sources Add -Name <SOURCE_NAME> -Source https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json -UserName <USER_NAME> -Password <PERSONAL_ACCESS_TOKEN> -config <PATH_TO_NUGET_CONFIG_FILE>\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items Assigned to Specific User in OData\nDESCRIPTION: This query retrieves work items that were ever assigned to a specific user. It selects work item type, title, state, and expands assigned to and area fields. The results are ordered by work item type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam Fiber/_odata/v4.0-preview/WorkItems?\n  $select=WorkItemType, Title, State, \n  &$expand=AssignedTo($select=UserEmail), Area($select=AreaPath)\n  &$filter=(WorkItemType ne '' AND State ne '' AND Revisions/any(r:r/AssignedTo/UserEmail eq 'fabrikamfiber4@hotmail.com'))\n  &$orderby=WorkItemType asc\n```\n\n----------------------------------------\n\nTITLE: Listing Team Members with Azure CLI in Azure DevOps\nDESCRIPTION: This command lists the first five members of a specified team in Azure DevOps and displays the output in table format. It requires the team name and uses optional parameters for limiting results and setting output format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-users-team-project.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team list-member --team \"Fabrikam Team\" --top 5 --output table\n```\n\n----------------------------------------\n\nTITLE: Linking Azure Boards Project in Microsoft Teams\nDESCRIPTION: Command to link an Azure DevOps project URL to a Microsoft Teams channel using the Azure Boards app.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-teams.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n@azure boards link https://dev.azure.com/myorg/myproject/\n```\n\n----------------------------------------\n\nTITLE: Example JSON Response from Azure DevOps Approvals Query API\nDESCRIPTION: This JSON object represents a sample response from the Azure DevOps Approvals Query REST API. It shows a structure containing a count of approvals found and an array (`value`) of approval objects. Each approval object includes details like its ID, status (e.g., 'pending'), creation and modification timestamps, execution order, minimum required approvers, and links.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-224-update.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"count\": 2,\n    \"value\":\n    [\n        {\n            \"id\": \"87436c03-69a3-42c7-b5c2-6abfe049ee4c\",\n            \"steps\": [],\n            \"status\": \"pending\",\n            \"createdOn\": \"2023-06-27T13:58:07.417Z\",\n            \"lastModifiedOn\": \"2023-06-27T13:58:07.4164237Z\",\n            \"executionOrder\": \"anyOrder\",\n            \"minRequiredApprovers\": 1,\n            \"blockedApprovers\": [],\n            \"_links\":\n            {\n                \"self\":\n                {\n                    \"href\": \"https://dev.azure.com/fabrikamfiber/fabricam-chat/_apis/pipelines/approvals/87436c03-69a3-42c7-b5c2-6abfe049ee4c\"\n                }\n            }\n        },\n        {\n            \"id\": \"2549baca-104c-4a6f-b05f-bdc4065a53b7\",\n            \"steps\": [],\n            \"status\": \"pending\",\n            \"createdOn\": \"2023-06-27T13:58:07.417Z\",\n            \"lastModifiedOn\": \"2023-06-27T13:58:07.4164237Z\",\n            \"executionOrder\": \"anyOrder\",\n            \"minRequiredApprovers\": 1,\n            \"blockedApprovers\": [],\n            \"_links\":\n            {\n                \"self\":\n                {\n                    \"href\": \"https://dev.azure.com/fabrikamfiber/fabricam-chat/_apis/pipelines/approvals/2549baca-104c-4a6f-b05f-bdc4065a53b7\"\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Reasons for State Transitions in Azure DevOps Workflow XML\nDESCRIPTION: Example showing how to define multiple reasons when resolving a bug, including a default reason and additional options. This allows users to specify more specific reasons when changing a work item state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/change-workflow-wit.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<TRANSITION from=\"Active\" to=\"Resolved\">  \n      . . .  \n      <REASONS>  \n      <DEFAULTREASON value=\"Fixed\"/>  \n      <REASON value=\"Deferred\"/>  \n      <REASON value=\"Duplicate\"/>  \n      <REASON value=\"As Designed\"/>  \n      <REASON value=\"Unable to Reproduce\"/>  \n      <REASON value=\"Obsolete\"/>  \n      </REASONS>  \n      . . .  \n</TRANSITION>\n```\n\n----------------------------------------\n\nTITLE: Success Test Mock for Azure DevOps Pipeline Task\nDESCRIPTION: TypeScript code to simulate a successful run of an Azure DevOps pipeline task for unit testing purposes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_13\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport ma = require('azure-pipelines-task-lib/mock-answer');\nimport tmrm = require('azure-pipelines-task-lib/mock-run');\nimport path = require('path');\n\nlet taskPath = path.join(__dirname, '..', 'index.js');\nlet tmr: tmrm.TaskMockRunner = new tmrm.TaskMockRunner(taskPath);\n\ntmr.setInput('samplestring', 'human');\n\ntmr.run();\n```\n\n----------------------------------------\n\nTITLE: Prompting User Sign-in via Azure DevOps CLI Command - Azure CLI\nDESCRIPTION: Prompts the user interactively for a PAT token upon executing the Azure DevOps CLI login command. No external dependencies are required beyond the Azure CLI with the Azure DevOps extension. The 'Token:' prompt allows manual input of a PAT, and the '--organization' parameter specifies the Azure DevOps organization URL. Input is from the terminal and no output is generated until sign-in is successful. Suitable for interactive authentication where scripting is not required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/log-in-via-pat.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n$az devops login --organization https://dev.azure.com/contoso\nToken:\n```\n\n----------------------------------------\n\nTITLE: Initializing npm Package Configuration\nDESCRIPTION: This command initializes a new npm package by creating a package.json file. It's a prerequisite for publishing npm packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/npm/publish-restore.md#2025-04-22_snippet_0\n\nLANGUAGE: Command\nCODE:\n```\nnpm init\n```\n\n----------------------------------------\n\nTITLE: String Field Type Operators and Macros in Azure DevOps Queries\nDESCRIPTION: Operators and macros supported for String fields in Azure DevOps queries. String fields support short text up to 255 characters and include special macros for work item types and project fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n`= , <> , > , < , >= , <= , =[Field], <>[Field], >[Field], <[Field], >=[Field], <=[Field], Contains, Does Not Contain, In, Not In, In Group, Not In Group, Was Ever`  \n\n**Macros**: `[Any]`, valid with the **Work Item Type** field `@Project`, valid with the **Team Project** field.\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Execution in task.json for Azure Pipelines\nDESCRIPTION: This snippet demonstrates how to configure the execution section in task.json to support multiple Node versions. It allows Azure Pipeline agents to use Node 20 by default, with a fallback to Node 10 for older agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_24\n\nLANGUAGE: nodejs\nCODE:\n```\n\"execution\": {\n  \"Node10\": {\n    \"target\": \"bash.js\",\n    \"argumentFormat\": \"\"\n  },\n  \"Node20_1\": {\n    \"target\": \"bash.js\",\n    \"argumentFormat\": \"\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Query Settings Validation in JavaScript\nDESCRIPTION: Code that validates widget settings and handles the case when no query path is configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nvar settings = JSON.parse(widgetSettings.customSettings.data);\nif (!settings || !settings.queryPath) {\n    var $container = $('#query-info-container');\n    $container.empty();\n    $container.text(\"Sorry nothing to show, please configure a query path.\");\n\n    return WidgetHelpers.WidgetStatusHelper.Success();\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Artifacts Domain URLs\nDESCRIPTION: Domain URLs required for Azure Artifacts functionality including blob storage and deduplication services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://*.blob.core.windows.net\nhttps://*.visualstudio.com\nhttps://*.dedup.microsoft.com\n```\n\n----------------------------------------\n\nTITLE: Get Specific Version of File\nDESCRIPTION: Command to get a specific version (version 8) of a file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/get-command.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1>tf get program.cs;8\n```\n\n----------------------------------------\n\nTITLE: Renaming the trunk Branch to main in Git\nDESCRIPTION: Git command to rename the 'trunk' branch (SVN terminology) to 'main' (Git standard terminology) in the bare repository. This aligns the repository with Git conventions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncd c:\\new-bare.git\ngit branch -m svn/trunk main\n```\n\n----------------------------------------\n\nTITLE: Basic Changeset Command Syntax in TFVC\nDESCRIPTION: The complete syntax of the 'changeset' command in Team Foundation Version Control. It shows all available parameters and options for viewing or modifying changeset attributes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/changeset-command.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ntf changeset [/comment:(\"comment\"|@commentfile)] \n[/notes:(\"NoteFieldName\"=\"NoteFieldValue\"|@notefile)] [/noprompt][/collection:TeamProjectCollectionUrl]] \n[changesetnumber | /latest][/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Configuring Label Format with Variables in Azure DevOps Pipelines\nDESCRIPTION: Example of how to format source code labels using predefined and user-defined variables in Azure DevOps Pipelines. This snippet demonstrates combining built-in pipeline variables with custom variables to create unique identifiers for your source code versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/label-sources.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n$(Build.DefinitionName)_$(Build.DefinitionVersion)_$(Build.BuildId)_$(Build.BuildNumber)_$(My.Variable)\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic PR Triggers for Azure Pipelines in YAML\nDESCRIPTION: This snippet shows how to define PR triggers to validate pull requests targeting specific branches like 'main' and 'releases/*'. The pipeline will run when a new PR is created or updated targeting these branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n- main\n- releases/*\n```\n\n----------------------------------------\n\nTITLE: Using EVER Operator with Multiple Conditions in WIQL\nDESCRIPTION: Shows an alternate syntax for the EVER operator to check if a field has ever contained certain values, combined with OR operators for multiple conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_38\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE\n    [System.TeamProject] = @project\n    AND (\n        EVER [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\n        OR EVER [System.AssignedTo] = 'Raisa Pokrovskaya <fabrikamfiber5@hotmail.com>'\n        OR EVER [System.AssignedTo] = 'Christie Church <fabrikamfiber1@hotmail.com>'\n    )\n```\n\n----------------------------------------\n\nTITLE: Example of Updating Comment Resolution Policy in Azure DevOps\nDESCRIPTION: This example updates a comment resolution policy (ID 6) in the main branch of the Fabrikam repository to be blocking, meaning comments must be resolved before pull requests can merge. It uses the default organization and project configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy comment-required update --id 6 --blocking true --output table\n```\n\n----------------------------------------\n\nTITLE: Subscribing to All Pipelines in a Project using Teams Command\nDESCRIPTION: Command for subscribing to notifications for all pipelines in an Azure DevOps project using the Azure Pipelines Teams app.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/microsoft-teams.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n@azure pipelines subscribe https://dev.azure.com/myorg/myproject/\n```\n\n----------------------------------------\n\nTITLE: Configuring Project-Scoped Feed Authentication in .npmrc\nDESCRIPTION: This snippet configures authentication credentials for a project-scoped feed in the user-level .npmrc file. It includes placeholders for a Base64-encoded personal access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n; begin auth token\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/:username=[ENTER_ANY_VALUE_BUT_NOT_AN_EMPTY_STRING]\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/:_password=[BASE64_ENCODED_PERSONAL_ACCESS_TOKEN]\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/:email=npm requires email to be set but doesn't use the value\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/:username=[ENTER_ANY_VALUE_BUT_NOT_AN_EMPTY_STRING]\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/:_password=[BASE64_ENCODED_PERSONAL_ACCESS_TOKEN]\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/:email=npm requires email to be set but doesn't use the value\n; end auth token\n```\n\n----------------------------------------\n\nTITLE: Creating State Sort Order Column in Power BI Using DAX\nDESCRIPTION: This DAX code creates a calculated column to define a custom sort order for work item states based on their categories. It assigns numeric values to different state categories for proper sorting in visualizations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_1\n\nLANGUAGE: DAX\nCODE:\n```\nState Sort Order =  \nSWITCH (  \n    'View Name'[State Category],  \n    \"Proposed\", 1,  \n    \"InProgress\", 2,  \n    \"Resolved\", 3,  \n    4  \n)  \n```\n\n----------------------------------------\n\nTITLE: Executing PauseSearchIndexing.ps1 Script in PowerShell\nDESCRIPTION: This PowerShell script pauses all indexing operations. It's useful when experiencing high CPU utilization after configuring Search. The script requires information about the Azure DevOps Server configuration database.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/manage-search.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\nPauseSearchIndexing.ps1\n```\n\n----------------------------------------\n\nTITLE: Configuring Git for HTTPS authentication with Azure Repos using PAT\nDESCRIPTION: This Git configuration entry enables HTTPS authentication for private Azure Repos Git repositories using a Personal Access Token (PAT). It maps the standard URL to an authenticated URL format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/go-install.md#2025-04-22_snippet_4\n\nLANGUAGE: Git\nCODE:\n```\n[url \"https://<user>:<token>@dev.azure.com/<organization>/<project>/_git/<repo>\"]\n\tinsteadOf = https://dev.azure.com/<organization>/<project>/_git/<repo>\n```\n\n----------------------------------------\n\nTITLE: Displaying Detailed Repository Information in JSON Format\nDESCRIPTION: Example command showing how to retrieve comprehensive details about a repository in JSON format, including remote URLs, size, and project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos show --repository contosoREPO\n```\n\n----------------------------------------\n\nTITLE: Creating Team Dashboards Default Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`DashboardsPrivileges, Create`) represents the default permission allowing users (typically team administrators by default) to create new team dashboards within a project in Azure DevOps. This permission governs the ability to add dashboards for a specific team.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_26\n\nLANGUAGE: plaintext\nCODE:\n```\nDashboardsPrivileges, Create\n```\n\n----------------------------------------\n\nTITLE: Logging an Error using Task Command in Bash\nDESCRIPTION: Demonstrates how to log an error message using the task.logissue command in a Bash script, followed by exiting with a non-zero status code.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"##vso[task.logissue type=error]Something went very wrong.\"\nexit 1\n```\n\n----------------------------------------\n\nTITLE: Checking Extension Trial Expiration in Azure DevOps\nDESCRIPTION: This snippet outlines the steps to check if a free extension trial has expired in an Azure DevOps organization. It involves navigating to the Users section and examining the extension pane for expiration messages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/qa-no-access-extension-features.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. On your organization toolbar, go to **Users**.\n2. Go to the extension pane.\n3. Check for an expiration message to find if or when your extension expired.\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies with Post-Deployment Script in Azure App Service\nDESCRIPTION: Command to execute in a post-deployment script for installing Python dependencies from requirements.txt file when the automatic installation doesn't work during deployment to Azure App Service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/troubleshooting.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nD:\\home\\python364x64\\python.exe -m pip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Getting Detailed TF History\nDESCRIPTION: Demonstrates how to retrieve detailed version control history including full changeset information, with comments, items affected, check-in notes, and policy warnings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/history-command.md#2025-04-22_snippet_7\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history /noprompt * /recursive /v:D4/12/2012~D4/24/2012 /format:detailed\n```\n\nLANGUAGE: text\nCODE:\n```\n-------------------------------------------------------------------------------\nChangeset: 30\nUser: Raisa Pokrovskaya (Fabrikam)\nDate: Monday, April 23, 2012 1:23:05 PM\n\nComment:\n  Much better name for this file\n\nItems:\n  rename                $/SiteApp/Main/SolutionA/Project1/programBig.cs\n  delete, source rename $/SiteApp/Main/SolutionA/Project1/program3.cs;X15\n\n-------------------------------------------------------------------------------\nChangeset: 29\nUser: Raisa Pokrovskaya (Fabrikam)\nDate: Monday, April 23, 2012 1:03:13 PM\n\nComment:\n  Fix bug in new method\n\nItems:\n  edit $/SiteApp/Main/SolutionA/Project1/program1.cs\n  edit $/SiteApp/Main/SolutionA/Project1/program2.cs\n\n-------------------------------------------------------------------------------\nChangeset: 20\nUser: Raisa Pokrovskaya (Fabrikam)\nDate: Thursday, April 12, 2012 5:09:35 PM\n\nComment:\n  Add new method, add program2.cs to Project1\n\nItems:\n  add $/SiteApp/Main/SolutionA/Project1/program2.cs\n\nCheck-in Notes:\n  Documentation:\n    An important new part of our codebase.\n\nPolicy Warnings:\n  Override Reason:\n    Jamal agrees with me that we can bypass for this check-in.\n  Messages:\n    The Code Analysis Policy requires files to be checked in through Visual\nStudio with an open solution.\n```\n\n----------------------------------------\n\nTITLE: Registering Azure Stack Hub Environment with Azure CLI\nDESCRIPTION: Azure CLI command to register or update the Azure Stack Hub environment. This sets up the necessary endpoints and profile for interacting with Azure Stack Hub resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-stack.md#2025-04-22_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz cloud register \\\n    -n \"AzureStackUser\" \\\n    --endpoint-resource-manager \"https://management.<local>.<FQDN>\" \\\n    --suffix-storage-endpoint \".<local>.<FQDN>\" \\\n    --suffix-keyvault-dns \".vault.<local>.<FQDN>\" \\\n    --endpoint-active-directory-graph-resource-id \"https://graph.windows.net/\" \\\n    --endpoint-sql-management https://notsupported  \\\n    --profile 2019-03-01-hybrid\n```\n\n----------------------------------------\n\nTITLE: Accessing npm Package API Endpoint for Collection Scoped Feed in Azure DevOps Server\nDESCRIPTION: HTTP endpoint URL pattern for promoting npm packages in a collection scoped feed on an on-premises Azure DevOps Server 2022. This endpoint uses a different pattern with packagesbatch API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_14\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://{instance}/{collection}/_apis/packaging/feeds/{feedId}/npm/packagesbatch?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: TFVC File Check-in Command\nDESCRIPTION: Command to check in a modified file with a comment indicating file overwrite and permission changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/remove-access-version-control-files.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\ntf checkin /comment:\"Overwrote bad file and denied permissions.\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Agent with runAsAutoLogon using Batch Command\nDESCRIPTION: This command configures the Azure DevOps agent with the runAsAutoLogon option, specifying agent name, pool, organization URL, and Windows logon credentials. It should be run from the agent folder after removing the old configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/troubleshooting-autologon.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\n.\\config.cmd --unattended --agent '<agent-name>' --pool '<agent-pool-name>' --url '<azure-dev-ops-organization-url>' --auth 'PAT' --token '<token>' --runAsAutoLogon --windowsLogonAccount '<domain\\user-name>' --windowsLogonPassword '<windows-password>'\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Artifacts Keyring for Python\nDESCRIPTION: Command to install the Azure Artifacts keyring package for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/use-packages-from-pypi.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npip install keyring artifacts-keyring\n```\n\n----------------------------------------\n\nTITLE: Attaching Azure Container Registry to an AKS Cluster - Azure CLI\nDESCRIPTION: This command attaches an existing Azure Container Registry (ACR) to an Azure Kubernetes Service (AKS) cluster, enabling the cluster&rsquo;s Kubelet to pull images from the ACR without additional secrets. The placeholders for AKS cluster name, resource group, and ACR name should be replaced by the actual resource values. Requires az CLI, and proper RBAC permissions on Azure. It is necessary before scheduling containers from ACR on the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update -n \"<myAKSCluster>\" -g \"<myResourceGroup>\" --attach-acr \"<acr-name>\"\n```\n\n----------------------------------------\n\nTITLE: Converting MyGet Password to Secure String for Authentication\nDESCRIPTION: Command to convert a MyGet password into a secure string format for secure authentication during the migration process. This step is necessary only for private MyGet feeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/migrate-packages.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\n$password = ConvertTo-SecureString -String '<YOUR_PASSWORD>' -AsPlainText -Force\n```\n\n----------------------------------------\n\nTITLE: Updating Pipeline Variables with Azure CLI\nDESCRIPTION: Command syntax for updating variables in Azure DevOps pipelines including optional parameters for configuring variable properties like override settings, secrecy, and value updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable update --name\n                             [--allow-override {false, true}]\n                             [--new-name]\n                             [--org]\n                             [--pipeline-id]\n                             [--pipeline-name]\n                             [--project]\n                             [--prompt-value {false, true}]\n                             [--secret {false, true}]\n                             [--value]\n```\n\n----------------------------------------\n\nTITLE: Listing Recently Modified Items by Current User in Azure Boards (WIQL)\nDESCRIPTION: The snippet demonstrates using the `Changed By = @Me` and `Changed Date >= @Today-30` clauses to find work items modified in the last 30 days by the current user. The `@Today` macro ensures the date is dynamically calculated, and the clause restricts the search to recent activity by the querying identity. Inputs required are field access permissions; outputs are any work items changed by you in the last 30 days.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_3\n\nLANGUAGE: WIQL\nCODE:\n```\nChanged By = @Me\nAnd Changed Date >= @Today-30\n```\n\n----------------------------------------\n\nTITLE: Creating Dialog Content HTML (HTML/JavaScript)\nDESCRIPTION: Implements the HTML and JavaScript for the dialog content, including form fields and logic for form validation and data retrieval.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/using-host-dialog.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <script src=\"sdk/scripts/VSS.SDK.js\"></script>\n    </head>\n    <body>\n        <h2 id=\"header\">Register now</h2>\n        <p>\n            <label>Name:</label>\n            <input id=\"inpName\" />\n        </p>\n        <p>\n            <label>Date of birth:</label>\n            <input id=\"inpDob\" />\n        </p>\n        <p>\n            <label>Email address:</label>\n            <input id=\"inpEmail\" />\n        </p>\n        <script>\n            VSS.init();\n            var registrationForm = (function() {\n                var callbacks = [];\n                \n                function inputChanged() {\n                    // Execute registered callbacks\n                    for(var i = 0; i < callbacks.length; i++) {\n                        callbacks[i](isValid());\n                    }\n                }\n                \n                function isValid() {\n                    // Check whether form is valid or not\n                    return !!(name.value) && !!(dateOfBirth.value) && !!(email.value);\n                }\n                \n                function getFormData() {\n                    // Get form values\n                    return {\n                        name: name.value,\n                        dateOfBirth: dateOfBirth.value,\n                        email: email.value  \n                    };\n                }\n\n                var name = document.getElementById(\"inpName\");\n                var dateOfBirth = document.getElementById(\"inpDob\");\n                var email = document.getElementById(\"inpEmail\");\n                \n                name.addEventListener(\"change\", inputChanged);\n                dateOfBirth.addEventListener(\"change\", inputChanged);\n                email.addEventListener(\"change\", inputChanged);\n                \n                return {\n                    isFormValid: function() {\n                        return isValid();   \n                    },\n                    getFormData: function() {\n                        return getFormData();\n                    },\n                    attachFormChanged: function(cb) {\n                         callbacks.push(cb);\n                    }\n                };\n            })();\n            \n            // Register form object to be used across this extension\n            VSS.register(\"registration-form\", registrationForm);\n        </script>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Updating Sprint Dates in Azure DevOps CLI\nDESCRIPTION: Example showing how to update the start and end dates of an iteration (Sprint 3). The command sets August 1, 2019 as the start date and August 31, 2019 as the finish date for the sprint in the Fabrikam Fiber project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration project update --path \"\\Fabrikam Fiber\\Iteration\\Release 1\\Sprint 3\" --finish-date 2019-08-31 --start-date 2019-08-01 --project \"Fabrikam Fiber\" --output table\nID     Identifier                            Name      Start Date            Finish Date           Path                                          Has Children\n-----  ------------------------------------  --------  --------------------  --------------------  --------------------------------------------  --------------\n55340  862e961a-ac7a-4fcc-9ebc-8afd0c12fed5  Sprint 3  2019-08-01T00:00:00Z  2019-08-31T00:00:00Z  \\Fabrikam Fiber\\Iteration\\Release 1\\Sprint 3  False\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Organization and Project in Azure DevOps CLI\nDESCRIPTION: Sets the default Azure DevOps organization URL and project name for subsequent CLI commands. This avoids having to specify them repeatedly in each command. Replace the placeholder URL and project name with your actual values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/index.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops configure --defaults organization=https://dev.azure.com/contoso project=ContosoWebApp\n```\n\n----------------------------------------\n\nTITLE: Custom Fields Configuration in JSON\nDESCRIPTION: Example of how to specify custom fields to replace system fields in the dependency tracker.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/extensions/dependency-tracker.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n   title: \"Custom.Title\",\n   assignedTo: \"Custom.AssignedTo\" \n}\n```\n\n----------------------------------------\n\nTITLE: Trimming Whitespace from Parameters using trim Function in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet showcases the 'trim' expression function to sanitize stage names derived from a comma-separated string parameter ('regions'). It uses an 'each' loop to iterate through the split regions, applying 'trim' to remove leading/trailing whitespace before using the region name in the stage name, display name, and script arguments, enhancing resilience against malformed input.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-248-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\nparameters:\n- name: regions\n  type: string\n  default: '  wus1,   wus2, wus3,wus4'\n\nstages:\n- ${{ each region in split(parameters.regions, ',')}}:\n  - stage: stage_${{trim(region)}}\n    displayName: Deploy to ${{trim(region)}}\n    jobs:\n    - job: deploy\n      steps:\n      - script: ./deploy.sh ${{trim(region)}}\n```\n```\n\n----------------------------------------\n\nTITLE: Including Prerequisites Template in Markdown\nDESCRIPTION: Markdown include statement for prerequisites template used in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/manage-your-branches.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [azure-repos-prerequisites](includes/azure-repos-prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Listing Test Configurations with TCM Command Line\nDESCRIPTION: This command lists all test configurations available in a specific project using the Team Foundation Server Command Line Utility (TCM CLI). The command shows configuration IDs and names, which can be used in other test configuration operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/test-different-configurations.md#2025-04-22_snippet_0\n\nLANGUAGE: tcm\nCODE:\n```\ntcm configs /list [/querytext:query] /collection:teamprojectcollectionurl\n            /teamproject:project [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Updating ServiceNow Change Request in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to add a server job and UpdateServiceNowChangeRequest task to an Azure Pipelines YAML file. It includes stage and job definitions, and specifies inputs for the ServiceNow connection, new status, work notes, and other parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/approvals/servicenow.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: Stage1\n  jobs:\n  - deployment: DeployLatest\n    environment: <environment-name>\n  ...\n  - job: UpdateChangeRequest\n    steps:\n    - task: UpdateServiceNowChangeRequest@2\n      displayName: 'Update ServiceNow Change Request'\n      inputs:\n        ServiceNowConnection: '<service-connection-name>'\n        NewStatus: '<status-to-set>'\n        WorkNotes: '<work-notes-for-change-request>'\n        otherParameters: '{\"u_<field-name>\": \"<valid-value>\"}'\npool: server\n```\n\n----------------------------------------\n\nTITLE: Parallel Jobs in Azure DevOps Pipelines\nDESCRIPTION: Example of jobs running in parallel across different platforms. With no dependencies specified, these jobs will run concurrently on Windows, macOS, and Linux agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Windows\n  pool:\n    vmImage: 'windows-latest'\n  steps:\n  - script: echo hello from Windows\n- job: macOS\n  pool:\n    vmImage: 'macOS-latest'\n  steps:\n  - script: echo hello from macOS\n- job: Linux\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - script: echo hello from Linux\n```\n\n----------------------------------------\n\nTITLE: Extending a Template in Azure Pipelines\nDESCRIPTION: Example showing how to extend a template in a pipeline. The pipeline references the template from a repository and passes parameters to it, defining steps to be included in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n# azure-pipelines.yml\nresources:\n  repositories:\n  - repository: templates\n    type: git\n    name: MyProject/MyTemplates\n    ref: refs/tags/v1\n\nextends:\n  template: template.yml@templates\n  parameters:\n    usersteps:\n    - script: echo This is my first step\n    - script: echo This is my second step\n```\n\n----------------------------------------\n\nTITLE: Showing Permissions with Azure DevOps CLI\nDESCRIPTION: Command syntax for displaying the permissions for a specified token, namespace, and user or group. Required parameters include namespace ID, subject, and token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission show --id\n                                   --subject\n                                   --token\n```\n\n----------------------------------------\n\nTITLE: Displaying Agent Status Columns in Markdown\nDESCRIPTION: This markdown table lists and describes the columns shown in the Agents list of a Managed DevOps Pool, including Agent Machine Name, Image, Image version, and Status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/view-agents.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Description |\n|------|-------------|\n| **Agent Machine Name** | The name of the agent instance. |\n| **Image** | The name of the image. For more information, see [Configure images](configure-images.md). |\n| **Image version** | The version of the agent image. For more information, see [Configure images](configure-images.md). |\n| **Status** | The current status of the agent. See [Status](#status) for more information about each status type. |\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests by Test Owner with OData\nDESCRIPTION: OData query that retrieves failed test results filtered by test owner. This query groups results by test name and owner, aggregates test run counts, and calculates pass rates for tests that have at least one failure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_9\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tAnd Date/Date ge {startdate})\n/groupby((TestSK, Test/TestName, Test/TestOwner), \n\taggregate(\n\tResultCount with sum as TotalCount,\n\tResultPassCount with sum as PassedCount,\n\tResultFailCount with sum as FailedCount,\n\tResultNotExecutedCount with sum as NotExecutedCount,\n\tResultNotImpactedCount with sum as NotImpactedCount,\n\tResultFlakyCount with sum as FlakyCount))\n/filter(FailedCount gt 0)\n/compute(\niif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Generalizing a Windows VM using Sysprep\nDESCRIPTION: Executes the System Preparation (Sysprep) tool on a Windows VM to generalize it from an administrator console. The `/generalize` flag removes unique system information, `/oobe` prepares it for the Out-Of-Box Experience on next boot, and `/shutdown` shuts down the VM upon completion. This is a necessary step before capturing a custom Windows image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_13\n\nLANGUAGE: console\nCODE:\n```\nC:\\Windows\\System32\\sysprep\\sysprep.exe /generalize /oobe /shutdown\n```\n\n----------------------------------------\n\nTITLE: Example Task Template URL for Azure DevOps Server\nDESCRIPTION: Complete example of a task work item template URL for on-premises Azure DevOps with predefined values for Assigned To, Description, Tags, Activity, and Iteration Path fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/work-item-template.md#2025-04-22_snippet_3\n\nLANGUAGE: URL\nCODE:\n```\nhttp://{ServerName}:8080/tfs/DefaultCollection/{ProjectName}/_workItems/create/Task?\n[System.AssignedTo]=Jamal+Hartnett&\n[System.Description]=<p>Always+include+Remaining+Work+and+links+to+any+related+bugs+or+user+stories.</p>&\n[System.Tags]=Web;+Phone;+Service&\n[Microsoft.VSTS.Common.Activity]=Development&\n[System.IterationPath]=Fabrikam+Fiber%5CIteration+1\n```\n\n----------------------------------------\n\nTITLE: CLI Support Note Include\nDESCRIPTION: Include statement for CLI support notification, referenced from a template file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/view-add-work-items.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../../includes/note-cli-not-supported.md)]\n```\n\n----------------------------------------\n\nTITLE: Custom Macro Query Method in C#\nDESCRIPTION: Method signature for executing WIQL queries with custom macro support. The context parameter contains key-value pairs for macro substitution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_19\n\nLANGUAGE: csharp\nCODE:\n```\npublic WorkItemCollection Query(string wiql, IDictionary context)\n```\n\n----------------------------------------\n\nTITLE: Setting Variables with PowerShell in Azure DevOps\nDESCRIPTION: Sets regular and secret pipeline variables using PowerShell commands. Creates a 'sauce' variable and a secret 'secret.Sauce' variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/set-variables-in-scripts.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nWrite-Host \"##vso[task.setvariable variable=sauce]crushed tomatoes\"\nWrite-Host \"##vso[task.setvariable variable=secret.Sauce;issecret=true]crushed tomatoes with\n            garlic\"\n```\n\n----------------------------------------\n\nTITLE: Creating Widget Configuration HTML for Azure DevOps Dashboard\nDESCRIPTION: This HTML code defines the structure for a widget configuration page. It includes references to the VSS SDK and provides a dropdown menu for selecting a query from a predefined list which will be used by the configurable widget.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n    <!DOCTYPE html>\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>                          \n            <script src=\"sdk/scripts/VSS.SDK.min.js\"></script>              \n        </head>\n        <body>\n            <div class=\"container\">\n                <fieldset>\n                    <label class=\"label\">Query: </label>\n                    <select id=\"query-path-dropdown\" style=\"margin-top:10px\">\n                        <option value=\"\" selected disabled hidden>Please select a query</option>\n                        <option value=\"Shared Queries/Feedback\">Shared Queries/Feedback</option>\n                        <option value=\"Shared Queries/My Bugs\">Shared Queries/My Bugs</option>\n                        <option value=\"Shared Queries/My Tasks\">Shared Queries/My Tasks</option>                        \n                    </select>\n                </fieldset>             \n            </div>\n        </body>\n    </html>\n```\n\n----------------------------------------\n\nTITLE: Creating a Git Repository with Existing Code\nDESCRIPTION: Initialize a Git repository in an existing folder with code, adding all files and creating an initial commit. This sequence of commands sets up version control for an existing codebase.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit init foldername\ngit add --all\ngit commit -m \"Initial commit\"\n```\n\n----------------------------------------\n\nTITLE: Creating organization-scoped nuget.config file for Azure DevOps\nDESCRIPTION: XML configuration for connecting to an organization-scoped feed in Azure DevOps. This file specifies the package source URL for NuGet operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-exe.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<FEED_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Ccache Configuration in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to set up Ccache for C/C++ projects in Azure Pipelines. It installs Ccache, updates the PATH, and configures caching for the Ccache directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  CCACHE_DIR: $(Pipeline.Workspace)/ccache\n\nsteps:\n- bash: |\n    sudo apt-get install ccache -y    \n    echo \"##vso[task.prependpath]/usr/lib/ccache\"\n  displayName: Install ccache and update PATH to use linked versions of gcc, cc, etc\n\n- task: Cache@2\n  displayName: Ccache caching\n  inputs:\n    key: 'ccache | \"$(Agent.OS)\" | $(Build.SourceVersion)'\n    path: $(CCACHE_DIR)\n    restoreKeys: | \n      ccache | \"$(Agent.OS)\"\n```\n\n----------------------------------------\n\nTITLE: Showing Branch Policy Details with Azure CLI\nDESCRIPTION: Uses the Azure DevOps CLI to show detailed information about a specific branch policy. Requires specifying the policy ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy show --id\n```\n\n----------------------------------------\n\nTITLE: Retrieving Documents by ID in Azure DevOps Extension\nDESCRIPTION: Shows how to fetch a document from a collection using its identifier with the SDK data service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n    // Get data service\n    SDK.getService(SDK.getContributionId()).then(function(dataService) {\n        // Get document by id\n        dataService.getDocument(\"MyCollection\", \"MyDocumentId\").then(function(doc) {\n            // Assuming document has a property named foo\n            console.log(\"Doc foo: \" + doc.foo);\n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: TFVC Difference Command for Shelveset Comparison\nDESCRIPTION: Shows the syntax for comparing a shelveset item to its base version using the TFVC difference command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_2\n\nLANGUAGE: Command-line\nCODE:\n```\ntf diff[erence] [/shelveset:shelvesetname[;shelvesetowner]] \nshelveset_itemspec [/type:filetype] \n[/format: format] [/ignorespace] [/ignoreeol] [/ignorecase] \n[/recursive] [/options] [/noprompt][/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Creating Case Enforcement Policy with Azure CLI\nDESCRIPTION: This command creates a case enforcement policy in a Git repository to prevent case-sensitivity issues between different operating systems. It requires specifying whether the policy is blocking, enabled, and the target repository ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy case-enforcement create --blocking {false, true}\n                                        --enabled {false, true}\n                                        --repository-id\n                                        [--detect {false, true}]\n                                        [--org]\n                                        [--project]\n```\n\n----------------------------------------\n\nTITLE: Conditional Task Insertion in YAML\nDESCRIPTION: Shows how to conditionally add a task in a decorator based on whether a specific task ID already exists in the job steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/pipeline-decorator-context.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- ${{ if not(containsValue(job.steps.*.task.id, 'f3ab91e7-bed6-436a-b651-399a66fe6c2a')) }}:\n  - script: echo conditionally inserted\n```\n\n----------------------------------------\n\nTITLE: Display Azure DevOps Agent Configuration Help\nDESCRIPTION: PowerShell command to show help information about agent configuration options including authentication alternatives and unattended configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-windows-agent.md#2025-04-22_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n.\\config --help\n```\n\n----------------------------------------\n\nTITLE: Exporting Azure SQL Database to BACPAC Using SQLPackage\nDESCRIPTION: This command line instruction uses SQLPackage.exe to export a live Azure SQL Database to a BACPAC file, including both schema and data. It requires the target file path, source server name, database name, username, and password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_9\n\nLANGUAGE: Command Line\nCODE:\n```\nSqlPackage.exe /TargetFile:\"C:\\temp\\test.bacpac\" /Action:Export /SourceServerName:\"DemoSqlServer.database.windows.net.placeholder\"\n/SourceDatabaseName:\"Testdb\" /SourceUser:\"ajay\" /SourcePassword:\"SQLPassword\"\n```\n\n----------------------------------------\n\nTITLE: Defining a Dependent Required Field in XML Process\nDESCRIPTION: This XML snippet demonstrates how to make a field required based on another field's value. When the Customer Reported field is set to true, the Severity field becomes required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-samples.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<FIELDS>\n   ...\n   <FIELD refname=\"MyCorp.Severity\" name=\"Customer Severity\" type=\"String\">  \n       <ALLOWEDVALUES>  \n           <LISTITEM value=\"Blocking\" />  \n           <LISTITEM value=\"Major\" />  \n           <LISTITEM value=\"Minor\" />  \n       </ALLOWEDVALUES>  \n       <WHEN field=\"MyCorp.CustomerReported\" value=\"true\">  \n           <REQUIRED />  \n       </WHEN>  \n   </FIELD> \n   ...\n</FIELDS>\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration for Release Workflow in Power BI\nDESCRIPTION: This Power BI query fetches test duration data for a specific pipeline with a 'Release' workflow. It groups test results by workflow and calculates average duration metrics for each test.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_2\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And Date/Date ge {startdate}\"\n      &\")/groupby(\"\n      &\"(TestSK, Test/TestName, Workflow),\"\n      &\"aggregate(\"\n      &\"ResultCount with sum as TotalCount, \"\n      &\"ResultDurationSeconds with sum as TotalDuration\"\n      &\"))/compute(\"\n      &\"TotalDuration div TotalCount as AvgDuration\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Tag Using Tags Navigation Property in OData\nDESCRIPTION: Query to retrieve work items that have been tagged with a specific tag using the Tags navigation property. This approach provides better performance than using TagNames property with the contains function, especially when filtering by multiple tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_23\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=Tags/any(t:t/TagName eq '{tag}')\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Getting Latest Version in Git (Fetch and Merge)\nDESCRIPTION: An alternative to 'git pull', this two-step process first fetches changes from the remote repository and then merges them into your current branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_9\n\nLANGUAGE: console\nCODE:\n```\ngit fetch\n```\n\nLANGUAGE: console\nCODE:\n```\ngit merge FETCH_HEAD\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests for Build Workflow in Power BI\nDESCRIPTION: This Power BI M query retrieves failed test results for a specific build pipeline. It filters results by pipeline name, date range, and build workflow, then aggregates counts of test outcomes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate} \"\n        &\"And Workflow eq 'Build' \"\n        &\") \"\n            &\"/groupby( \"\n                &\"(TestSK, Test/TestName), \"\n                &\"aggregate( \"\n            &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n            &\"ResultFailCount with sum as FailedCount, \"\n        &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n    &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n    &\"ResultFlakyCount with sum as FlakyCount)) \"\n    &\"/filter(FailedCount gt 0) \"\n    &\"/compute( \"\n    &\"iif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Repository for Azure Artifacts in Older Gradle Versions\nDESCRIPTION: Maven repository configuration for connecting to Azure Artifacts feed with authentication for older Gradle versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/publish-with-gradle.md#2025-04-22_snippet_5\n\nLANGUAGE: groovy\nCODE:\n```\nmaven {\n    url 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1'        //for organization-scoped feeds use this format: 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/maven/v1'\n    name '<FEED_NAME>'\n    authentication {\n        basic(BasicAuthentication)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Reading Variables in Shell Script for Azure DevOps Pipelines\nDESCRIPTION: Shows how to read variables in a Shell script in Azure DevOps pipelines. The example demonstrates accessing environment variables with special handling for secret variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/set-variables-in-scripts.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"No problem reading $SAUCE\"\necho \"But I cannot read $SECRET_SAUCE\"\n```\n\n----------------------------------------\n\nTITLE: Amending a Git Commit\nDESCRIPTION: This snippet shows how to amend an existing commit with new changes and a different message. Amending a commit modifies the commit date while preserving the original author date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-dates.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho again > file.txt\ngit add *\ngit commit --amend -m \"An amended commit\"\n```\n\n----------------------------------------\n\nTITLE: Adding GitHub External Link Types in XML\nDESCRIPTION: XML snippet showing how to add GitHub Pull Request and Commit external link types to work item type definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/connect-to-github.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<ExternalLinkFilter Type=\"GitHub Pull Request\" />  \n<ExternalLinkFilter Type=\"GitHub Commit\" />\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Permission Requirements\nDESCRIPTION: Table showing required permissions and access levels for managing security groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-ad-aad-built-in-security-groups.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Permissions**| Member of the [Project Collection Administrators group]. Organization owners are automatically members of this group.|\n|**Access levels**| At least **Basic** access.|\n|**Organization connection**| Organization [connected to Microsoft Entra ID].|\n```\n\n----------------------------------------\n\nTITLE: Downloading Multiple Artifacts with Patterns using YAML in Azure DevOps\nDESCRIPTION: This YAML snippet shows how to download files from multiple artifacts using a file matching pattern. It downloads all .zip files from all artifacts in the current pipeline run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- download: current\n  patterns: '**/*.zip'\n```\n\n----------------------------------------\n\nTITLE: Running .NET Project using dotnet CLI (Shell)\nDESCRIPTION: This command runs the specified .NET project (`ADOGenerator.csproj`) using the .NET CLI. The `--project` flag indicates the path to the project file to run. This executes the application in the console.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/demo-gen/configure.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ndotnet run --project src/ADOGenerator/ADOGenerator.csproj\n```\n\n----------------------------------------\n\nTITLE: Accessing Cargo Package API Endpoint for Organization Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting Cargo packages in an organization scoped feed using the REST API. This preview API allows for view management of Rust packages stored in Azure Artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_8\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/_apis/packaging/feeds/{feedId}/cargo/packages/{packageName}/versions/{packageVersion}?api-version=7.2-preview.1\n```\n\n----------------------------------------\n\nTITLE: Deployment Strategy Configuration\nDESCRIPTION: Defines the deployment strategy using runOnce approach with deployment steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n```\n\n----------------------------------------\n\nTITLE: Sample Output of Deletion ID Listing\nDESCRIPTION: Example output showing multiple deletion IDs for the same file, each with a unique identifier (X10, X11) to distinguish between different deletion instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undelete-command.md#2025-04-22_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\n$/projects/math/314.cs;X10\n$/projects/math/314.cs;X11\n```\n\n----------------------------------------\n\nTITLE: Filtering Items by Past Board Column History in Azure DevOps Query\nDESCRIPTION: This query clause filters work items to show those that have, at any point in their history, been in the 'In Review' column on the board. It utilizes the 'Was Ever' operator with the Board Column field. This functionality might be specific to Azure DevOps versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_15\n\nLANGUAGE: azure-devops-query\nCODE:\n```\n`Board Column Was Ever In Review`\n```\n\n----------------------------------------\n\nTITLE: Moving and Renaming a File using TFVC Command Line\nDESCRIPTION: This command renames the file '314.cs' to '1254.cs' and moves it to the 'newdir' folder using the TFVC rename command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rename-command-team-foundation-version-control.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf rename 314.cs ..\\newdir\\1254.cs\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Get Command Syntax\nDESCRIPTION: The main syntax for the tf get command with all available parameters for downloading files from Azure DevOps Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/get-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf get [itemspec] [/version:versionspec] [/all] [/overwrite] [/force] [/remap]\n[/recursive] [/preview] [/noautoresolve] [/noprompt]\n[/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Filtering Tasks or Bugs in Azure Boards Query\nDESCRIPTION: This query clause filters work items to include only those of type 'Task' or 'Bug'. The 'In' operator is used to match against a list of specified work item types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-numeric.md#2025-04-22_snippet_1\n\nLANGUAGE: azure-boards-query\nCODE:\n```\nWork Item Type In Task,Bug\n```\n\n----------------------------------------\n\nTITLE: Markdown Visual Studio Version Include Statement\nDESCRIPTION: Markdown include statement for specifying Visual Studio version compatibility\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/organize-queries.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-vs-gt-eq-2019.md](../../includes/version-vs-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Complete Development Group XML Configuration\nDESCRIPTION: Full XML configuration for the Development group section including all supported external link types for work item forms.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/connect-on-premises-to-github.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<Group Label=\"Development\">  \n   <Control Type=\"LinksControl\" Name=\"Development\">  \n      <LinksControlOptions ViewMode=\"Dynamic\" ZeroDataExperience=\"Development\" ShowCallToAction=\"true\">  \n         <ListViewOptions GroupLinks=\"false\">   \n         </ListViewOptions>  \n         <LinkFilters>  \n             <ExternalLinkFilter Type=\"Build\" />  \n             <ExternalLinkFilter Type=\"Integrated in build\" />  \n             <ExternalLinkFilter Type=\"Pull Request\" />  \n             <ExternalLinkFilter Type=\"Branch\" />  \n             <ExternalLinkFilter Type=\"Fixed in Commit\" />  \n             <ExternalLinkFilter Type=\"Fixed in Changeset\" />  \n             <ExternalLinkFilter Type=\"Source Code File\" />  \n             <ExternalLinkFilter Type=\"Found in build\" />  \n             <ExternalLinkFilter Type=\"GitHub Pull Request\" />  \n             <ExternalLinkFilter Type=\"GitHub Commit\" />  \n         </LinkFilters>  \n      </LinksControlOptions>  \n   </Control>  \n</Group>  \n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Work Item Integration in YAML\nDESCRIPTION: Shows pipeline settings configuration options for enabling automatic work item linking in YAML pipelines. This allows work items to be automatically linked to builds when they are referenced in pull requests or commits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/configure-pipelines-work-tracking.md#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Complete build.gradle Configuration for Gradle 8.2+\nDESCRIPTION: Full example of a build.gradle file configured for both consuming dependencies from and publishing artifacts to an Azure DevOps feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/publish-with-gradle.md#2025-04-22_snippet_2\n\nLANGUAGE: groovy\nCODE:\n```\nrepositories {\n    mavenCentral()\n\n    maven {\n    url 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1'                //for organization-scoped feeds use this format: 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/maven/v1'\n    name '<FEED_NAME>'\n    credentials(PasswordCredentials)\n    authentication {\n        basic(BasicAuthentication)\n        }\n    }\n}\n\npublishing {\n    publications {\n        library(MavenPublication) {\n            from components.java\n        }\n    }\n\n    repositories {\n        maven {\n        url 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1'           //for organization-scoped feeds use this format: 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/maven/v1'\n        name '<FEED_NAME>'\n        credentials(PasswordCredentials)\n        authentication {\n            basic(BasicAuthentication)\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps and GitHub Feature Matrix - Current Version\nDESCRIPTION: A markdown table listing features and descriptions for Azure Pipelines integration with GitHub in the current Azure DevOps version. Includes details about build configurations, GitHub Enterprise support, service connections, and status tracking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cross-service/github-integration.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Feature** | **Description** |\n|-------------|------------------|\n| **Create GitHub repository and pull request builds** | - Automatically build your GitHub pull requests. After the build is done, status is reported back with a comment in your GitHub pull request. <br> - Manually run a pipeline or test suite triggered by a GitHub pull request comment. <br> - Configure draft PR validation for GitHub repository. Supports adding `drafts` to the `pr` trigger YAML syntax for GitHub draft pull requests. You can choose if you want your draft PRs to queue a build. The default option is true (a build is queued) like it currently is for GitHub PRs. <br> - Rebuild GitHub pull request builds upon failure. Provides support for queueing a failed build. <br> - Configure draft PR validation for GitHub repositories. <br> - Automatically build pull requests from repository forks to ensure changes successfully build and tests pass before they get merged. |\n```\n\n----------------------------------------\n\nTITLE: Viewing Git Log with Extended Date Information\nDESCRIPTION: This snippet demonstrates how to use the --pretty=fuller option with git log to display both author date and commit date. This is useful for seeing the difference between when a commit was created versus when it was modified.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-dates.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit log --pretty=fuller\n```\n\n----------------------------------------\n\nTITLE: Publishing a Local Branch to Remote Git Repository\nDESCRIPTION: Command to push a local branch to the remote repository for the first time, setting up tracking between local and remote branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_5\n\nLANGUAGE: console\nCODE:\n```\ngit push --set-upstream origin francis/demo-feature\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Area Path with Top and OrderBy\nDESCRIPTION: This query demonstrates combining multiple parameters to retrieve the top 5 work items under a specific Area Path, selecting only certain fields, and ordering the results by Work Item ID in ascending order.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_8\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/WorkItems?$top=5&$filter=Area/AreaPath eq 'Fabrikam Fiber\\Service Delivery\\Voice'&$select=WorkItemId, WorkItemType, Title, State&$orderby=WorkItemId asc\n\n@odata.context\t\"https://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/$metadata#WorkItems(WorkItemId,WorkItemType,Title,State)\"\nvalue\t\n  0\t\n     WorkItemId\t361\n     Title        \"Hello World Web Site\"\n     WorkItemType\t\"Product Backlog Item\"\n     State        \"Removed\"\n  1\t\n     WorkItemId\t362\n     Title        \"Resume\"\n     WorkItemType\t\"Product Backlog Item\"\n     State        \"New\"\n  2\t\n     WorkItemId\t363\n     Title        \"Welcome back page\"\n     WorkItemType\t\"Product Backlog Item\"\n     State        \"Done\"\n  3\t\n     WorkItemId\t365\n     Title        \"Pause\"\n     WorkItemType\t\"Feature\"\n     State        \"New\"\n  4\t\n     WorkItemId\t374\n     Title        \"Fix performance issues\"\n     WorkItemType\t\"Task\"\n     State        \"To Do\"\n```\n\n----------------------------------------\n\nTITLE: Adding a package source with credentials for a different organization\nDESCRIPTION: Command to add a package source with authentication credentials to the nuget.config file when publishing to a feed in a different Azure DevOps organization. This requires a personal access token with appropriate permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-exe.md#2025-04-22_snippet_4\n\nLANGUAGE: CLI\nCODE:\n```\ndotnet nuget add source https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json --name <SOURCE_NAME> --username <USER_NAME> --password <PERSONAL_ACCESS_TOKEN> --configfile <PATH_TO_NUGET_CONFIG_FILE>\n```\n\n----------------------------------------\n\nTITLE: Visual Studio Sign-in Authentication for Azure DevOps REST Services\nDESCRIPTION: Demonstrates authentication using Visual Studio sign-in prompt for Microsoft Account or Azure AD backed accounts. Only available for .NET Framework.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/client-libraries/samples.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\npublic static void MicrosoftAccountRestSample()\n{\n    VssConnection connection = new VssConnection(new Uri(collectionUri), new VssClientCredentials());\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Viewing Work Item with Azure DevOps CLI\nDESCRIPTION: Example showing how to use the Azure DevOps CLI to display a bug with ID 864 in both the web browser and the command line interface. The command outputs the result in table format showing the ID, Type, Title, Assigned To, and State fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/view-add-work-items.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item show --id 864  --open --output table\n\nID    Type    Title      Assigned To          State\n----  ------  ---------  -------------------  -------\n864   Bug     fix-issue  contoso@contoso.com  New\n```\n\n----------------------------------------\n\nTITLE: Getting Web Context in Azure DevOps Extension\nDESCRIPTION: Example of the JSON structure returned by SDK.getWebContext() API, showing organization, project and team information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/web-navigation.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"account\": {\n        \"name\": \"Fabrikam\",\n        \"id\": \"50e49b94-4bb6-40e7-8c85-a6d756d8a4d8\"\n    },\n    \"project\": {\n        \"name\": \"Fabrikam Dev\",\n        \"id\": \"049b1af2-fc87-4e50-95e4-151357f04b7f\"\n    },\n    \"team\": {\n        \"name\": \"Ops Team\",\n        \"id\": \"9b3a6b80-fe95-4c8c-8aa1-1e5d535d7af1\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Artifact Management Command Reference\nDESCRIPTION: Reference to the Azure CLI command 'az pipelines runs' for managing pipeline artifacts. This command allows users to download, upload, or list artifacts associated with specific pipeline runs from the command line interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/artifacts/sprint-152-update.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\naz pipelines runs\n```\n\n----------------------------------------\n\nTITLE: Selective Expansion with Field Selection\nDESCRIPTION: This example demonstrates how to use $expand with a nested $select to limit the fields returned from a related entity. It retrieves a work item and expands only specific iteration fields rather than all iteration data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_10\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\":\"https://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/$metadata#WorkItems(WorkItemId,WorkItemType,Title,State,Iteration,Iteration(Name,IterationPath))\",\n  \"value\":[\n    {\n      \"WorkItemId\":10000,\n      \"WorkItemType\":\"Task\",\n      \"Title\":\"Some title\",\n      \"State\":\"Completed\",\n      \"Iteration\":{\n        \"Name\":\"Sprint 55\",\n        \"IterationPath\":\"Fabrikam\\\\Sprints\\\\Sprint 55\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StringList Parameter in Azure Pipeline YAML for Multi-region Deployment\nDESCRIPTION: This YAML example demonstrates use of the 'stringList' parameter type to enable selection of multiple regions at queue time. Each region creates a deployment stage dynamically, and the associated script runs a custom deployment per region. Requires Azure DevOps Pipelines with YAML multi-stage support. Inputs are the YAML parameter list and user selection; outputs are one or more deployment jobs referencing the selected values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-253-update.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\\n- name: regions\\n  type: stringList\\n  displayName: Regions\\n  values:\\n    - WUS\\n    - CUS\\n    - EUS\\n\\nstages:\\n- ${{ each stage in parameters.regions}}:\\n  - stage: ${{stage}}\\n    displayName: Deploy to ${{stage}}\\n    jobs:\\n    - job:\\n      steps:\\n      - script: ./deploy ${{stage}}\n```\n\n----------------------------------------\n\nTITLE: Restoring npm Packages from Azure Artifacts\nDESCRIPTION: This command restores npm packages from Azure Artifacts. It installs all dependencies listed in the package.json file of the project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/npm/publish-restore.md#2025-04-22_snippet_2\n\nLANGUAGE: Command\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Querying Pull Requests with Label Inclusion in Azure DevOps API\nDESCRIPTION: Example of a JSON request payload for the Pull Request Query API. It demonstrates how to include labels for pull requests in the query response, with two query items: one including labels and another without.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/repos/sprint-254-update.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"queries\": [\n        {\n            \"type\": \"lastMergeCommit\",\n            \"include\": \"Labels\",\n            \"items\": [ \n                \"0d6c9b2b524113113fced41aecbf8631a4649dec\"\n            ]\n        },\n        {\n            \"type\": \"lastMergeCommit\",\n            \"items\": [\n                \"b524113113f0dd41aecbf8631a4649dec6c9b2ce\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Maven Dependencies from Command Line\nDESCRIPTION: Command to install Maven dependencies defined in the pom.xml file. This command downloads required packages and saves a copy in the Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/upstream-sources.md#2025-04-22_snippet_1\n\nLANGUAGE: command\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Querying Task Duration Trend by Pipeline ID in Power BI\nDESCRIPTION: Power BI query to get the 80th percentile task duration trend for a specific pipeline (using pipeline ID) and task, filtered by date range and successful runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_2\n\nLANGUAGE: Power Query M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineId eq {pipelineid} \"\n                &\"and TaskDisplayName eq '{taskname}' \"\n                &\"and PipelineRunCompletedOn/Date ge {startdate} \"\n        &\"and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded') \"\n        &\"and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1) \"\n            &\") \"\n                &\"/compute( \"\n                &\"percentile_cont(ActivityDurationSeconds, 0.8, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds) \"\n            &\"/groupby( \"\n                &\"(TaskDuration80thPercentileInSeconds, PipelineRunCompletedOn/Date)) \"\n            &\"&$orderby=PipelineRunCompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Linux/MacOS Agent Package Path Configuration\nDESCRIPTION: File system path where agent package files should be placed on Linux and macOS servers for local agent updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/qa-agent-version.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nusr/share/Microsoft/Azure DevOps/Agents\n```\n\n----------------------------------------\n\nTITLE: Searching by Type and Reason using Friendly and Reference Names\nDESCRIPTION: This alternative example shows searching for work items using the full friendly name for the type (`T=\"User Story\"`) and the reference name for the reason (`System.Reason`). The query `T=\"User Story\" System.Reason=Cut` achieves the same result as `T:Story Reason=Cut`, finding User Stories whose Reason field is 'Cut'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_12\n\nLANGUAGE: azure-devops-search\nCODE:\n```\nT=\"User Story\" System.Reason=Cut\n```\n\n----------------------------------------\n\nTITLE: Regenerating Maven Project Files with Dependencies\nDESCRIPTION: Command to regenerate Maven project files with source and Javadoc downloads. Useful when Maven is not downloading all dependencies correctly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/upstream-sources.md#2025-04-22_snippet_2\n\nLANGUAGE: command\nCODE:\n```\nmvn eclipse:eclipse -DdownloadSources=true -DdownloadJavadocs=true\n```\n\n----------------------------------------\n\nTITLE: Adding Page Contribution XML\nDESCRIPTION: XML configuration for adding a page contribution to the work item form.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/configure-workitemform-extensions.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<Page Id=\"Details\">\n<PageContribution Id=\"<page contribution id>\" />\n...\n```\n\n----------------------------------------\n\nTITLE: Structuring Widget Links with Icons and Text in HTML\nDESCRIPTION: This HTML snippet shows how to create a link within a widget that includes an icon, text, and subtext. It uses specific classes to achieve the desired layout and styling for the link components.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/styles-from-widget-sdk.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"widget\">\n    <h2 class=\"title\">Widget title</h2>\n\t<div class=\"content\">\n\t\t<p>Place your content here.</p>\n\t\t<a class=\"link-with-icon-text\" href=\"http://bing.com\" target=\"_blank\">\n\t\t\t<span class=\"icon-container\" style=\"background-color: #68217A\"></span>\n\t\t\t<div class=\"title\">\n\t\t\t\tPrimary link text\n\t\t\t\t<div class=\"subtitle\">Link subtext</div>\n\t\t\t</div>\n\t\t</a>\t\t\n\t</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group in Azure with Azure CLI\nDESCRIPTION: Azure CLI command to create a resource group that will contain the App Service instances for the pipeline deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group create --location eastus --name tailspin-space-game-rg\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Agent Environment Variables Configuration\nDESCRIPTION: Environment variable configuration format for individual agents using a .env file in the agent's root directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-windows-agent.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nMyEnv0=MyEnvValue0\nMyEnv1=MyEnvValue1\nMyEnv2=MyEnvValue2\nMyEnv3=MyEnvValue3\nMyEnv4=MyEnvValue4\n```\n\n----------------------------------------\n\nTITLE: Querying Area-to-Team Mapping in Power BI M Language\nDESCRIPTION: This query retrieves the mapping between areas and teams from Azure DevOps Analytics, expanding the Teams column to get TeamSK.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-team-filter.md#2025-04-22_snippet_2\n\nLANGUAGE: M\nCODE:\n```\nlet\n    #\"Get table\" = VSTS.Feed(\"https://analytics.dev.azure.com/{OrganizationName}/_odata/v2.0/Areas?$select=AreaSK&$expand=Teams($select=TeamSK)\"),\n    #\"Select columns\" = Table.SelectColumns(#\"Get table\", {\"AreaSK\", \"Teams\"}),\n    #\"Expand Teams\" = Table.ExpandTableColumn(#\"Select columns\", \"Teams\", {\"TeamSK\"}, {\"TeamSK\"})\nin\n    #\"Expand Teams\"\n```\n\n----------------------------------------\n\nTITLE: Removing Member from Security Group\nDESCRIPTION: Command to remove a member from a security group with optional confirmation skip.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group membership remove --group-id\n                                           --member-id\n                                           [--yes]\n```\n\n----------------------------------------\n\nTITLE: Configuring Cargo Credential Provider for Windows\nDESCRIPTION: TOML configuration to add to %USERPROFILE%\\.cargo\\config.toml to set up a credential provider for Cargo on Windows. This configures global credential providers to use both token and Windows Credential Manager.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[registry]\nglobal-credential-providers = [\"cargo:token\", \"cargo:wincred\"]\n```\n\n----------------------------------------\n\nTITLE: Agent Pool Job with Demands\nDESCRIPTION: YAML configuration showing how to specify agent pool and demands for job requirements\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  name: myPrivateAgents\n  demands: agent.os -equals Windows_NT\nsteps:\n- script: echo hello world\n```\n\n----------------------------------------\n\nTITLE: Cloning a Second Repository Using Git Command\nDESCRIPTION: Command to clone an additional public repository in your pipeline. This approach can be used when you need to include code from multiple repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\ngit clone https://github.com/Microsoft/TypeScript.git\n```\n\n----------------------------------------\n\nTITLE: Showing Pipeline Details with Azure CLI\nDESCRIPTION: This command displays detailed information about a specific Azure Pipeline identified by its ID (12 in this example). The `--id` parameter specifies the pipeline to show. The `--open` parameter automatically opens the pipeline's summary page in the default web browser. Requires Azure CLI with the Azure DevOps extension installed and configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/manage-pipelines-with-azure-cli.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines show --id 12 --open\n```\n\n----------------------------------------\n\nTITLE: Converting SVN Ignore Properties to .gitignore File\nDESCRIPTION: Git commands to convert Subversion's svn:ignore properties to a .gitignore file in the Git repository. This ensures that files ignored in SVN will continue to be ignored in Git.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd c:\\mytempdir\ngit svn show-ignore --id=origin/trunk > .gitignore\ngit add .gitignore\ngit commit -m 'Convert svn:ignore properties to .gitignore.'\n```\n\n----------------------------------------\n\nTITLE: Implementing Query Tab SDK Registration\nDESCRIPTION: JavaScript code that registers the custom tab with the Azure DevOps SDK. Defines tab behavior including title, context updates, visibility, and disabled state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-query-result-tabs.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nSDK.register(SDK.getContributionId(), {\n    pageTitle: function(state) {\n        return \"Hello\";\n    },\n    updateContext: function(tabContext) {\n    },\n    isInvisible: function(state) {\n        return false;\n    },\n    isDisabled: function(state) {\n        return false;\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Team Details with Azure DevOps CLI\nDESCRIPTION: This Azure CLI command allows you to update a team's name and description. It demonstrates how to rename the 'Account Management' team to 'Organization Management' and update its description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/rename-remove-team.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team update --team \"Account Management\" --name \"Organization Management\" --description \"Management team focused on creating and maintaining customer services for organizations\"\n```\n\n----------------------------------------\n\nTITLE: Using Git with PAT Authentication in IIS Basic Authentication Environment\nDESCRIPTION: A command format for using Git with a Personal Access Token when IIS Basic Authentication is enabled. It adds an extra HTTP header containing base64-encoded credentials in the format \"user:PAT\" to bypass authentication issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/use-personal-access-tokens-to-authenticate.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit -c http.extraheader='Authorization: Basic [base 64 encoding of \"user:password\"]' ls-remote http://tfsserver:8080/tfs/DefaultCollection/_git/projectName\n```\n\n----------------------------------------\n\nTITLE: Feature Comparison Table in Markdown\nDESCRIPTION: A markdown table comparing various features between Managed DevOps Pools and Azure virtual machine scale set agent pools, including pricing, hosting, scheduling, scaling, and more.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/migrate-from-scale-set-agents.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Feature | Managed DevOps Pools | Azure virtual machine scale set agent pools |\n|---------|----------------------|-----------------|\n| Pricing | Pricing is the same for Managed DevOps Pools and Scale set agents. See [Pricing](#pricing) for more information. | Same as Managed DevOps Pools pricing |\n| Virtual machine hosting | [Agents run on a Microsoft Azure subscription](./architecture-overview.md) | Agents run on your Azure subscription |\n| Standby agent schedule | Provides flexible scheduling options to configure the number of standby agents available at different times as well as an automatic standby agent option | Supports a single standby agent count setting (equivalent to Managed DevOps Pools [All Week Scheme](./configure-scaling.md#all-week-scheme)) |\n| Scaling granularity | Scale out is done in increments of one | Scale out is done in increments of a percentage of the maximum pool size, potentially resulting in extra idle agents for which you are billed |\n| Pool size | Support for thousands of agents | Support for hundreds of agents |\n| Multiple images | Support for multiple images in your pool | Supports only a single image |\n| Quota | Quota is dedicated to the Managed DevOps Pools resource and not shared with other services in your subscription | Uses Compute quota shared with other services in your subscription |\n| Virtual network support | Support for running in a private network or joining your existing virtual network | Supported |\n| Image support | [Azure Pipelines images (same as Microsoft-hosted agent images for Windows and Linux)](./configure-images.md#azure-pipelines-images), [selected Azure Marketplace images, Azure compute gallery images](./configure-images.md) | [Azure Marketplace images and custom images](/azure/devops/pipelines/agents/scale-set-agents#create-the-scale-set) |\n| VMSS extension scripts | Not supported, but you can configure your custom image with the required software | You can run a custom script on your agent before it starts running pipeline jobs |\n| Azure Key Vault integration | Download Azure Key Vault certificates to your agent automatically | Key vault certificates can be preinstalled on your custom images, or downloaded using tasks or VMSS extension scripts |\n| Multiple organizations | Support for using a pool in multiple Azure DevOps organizations, and optionally restrict the pool to certain projects | Supports a single Azure DevOps organization |\n| Stateless agents | Supported | [Supported on Windows Server and selected Linux images](/azure/devops/pipelines/agents/scale-set-agents#you-check-the-option-to-automatically-tear-down-virtual-machines-after-every-use-for-the-agent-pool-but-you-see-that-the-vms-arent-re-imaging-as-they-should-and-just-pick-up-new-jobs-as-theyre-queued) |\n| Stateful agents | Supported | Supported |\n| Spot Virtual Machine support | On product roadmap | Not supported |\n| Containers | Coming soon | Not supported |\n| BCDR | On product roadmap: You will have the ability to configure backup pools for your primary pools to automatically send requests to the backup pools when your primary pool's health degrades | [Supports availability sets and zones](/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-faq#do-scale-sets-work-with-azure-availability-sets-) |\n```\n\n----------------------------------------\n\nTITLE: Setting Variables in PowerShell for Azure DevOps Pipelines\nDESCRIPTION: Shows how to set regular and secret variables using PowerShell in Azure DevOps pipelines. The Write-Host cmdlet is used with the task.setvariable command to define variables for subsequent tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/set-variables-in-scripts.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nWrite-Host \"##vso[task.setvariable variable=sauce]crushed tomatoes\"\nWrite-Host \"##vso[task.setvariable variable=secret.Sauce;issecret=true]crushed tomatoes with\n            garlic\"\n```\n\n----------------------------------------\n\nTITLE: Allowing PendChange Permission for a Group on a Folder\nDESCRIPTION: Example showing how to allow members of a group to make pending changes to all items in a specific TFVC server folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/permission-command.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf permission /allow:PendChange /group:[teamproject]\\leads $/baseobjects\n```\n\n----------------------------------------\n\nTITLE: Creating VSS Extension Manifest JSON\nDESCRIPTION: Basic manifest configuration file (vss-extension.json) that defines core extension properties including ID, version, name, description, publisher and target platform.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-base-manifest.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"manifestVersion\": 1,\n    \"id\": \"sample-extension\",\n    \"version\": \"0.1.0\",\n    \"name\": \"My first sample extension\",\n    \"description\": \"A sample Visual Studio Services extension.\",\n    \"publisher\": \"fabrikam\",\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Comparing file contents with last commit in Git\nDESCRIPTION: This command shows the differences between the current version of a file and its version in the last commit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_19\n\nLANGUAGE: git\nCODE:\n```\ngit diff HEAD filename\n```\n\n----------------------------------------\n\nTITLE: Resetting a Vote on a Pull Request using Azure CLI\nDESCRIPTION: This example demonstrates how to remove your vote on pull request #21 using the Azure CLI. The command returns a table showing the updated voting status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/review-pull-requests.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr set-vote --id 21 --vote reset --output table\n```\n\n----------------------------------------\n\nTITLE: Specifying Docker Network MTU Parameter - Bash\nDESCRIPTION: This Docker command flag specifies the MTU (Maximum Transmission Unit) for a custom Docker network, with the value sourced from the AGENT_DOCKER_MTU_VALUE environment variable. Intended for troubleshooting networking issues with Docker-in-Docker, especially in Kubernetes clusters. Requires Docker Engine, and the variable must be set prior to executing Docker network-related commands. Affects only newly created Docker networks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n-o com.docker.network.driver.mtu=AGENT_DOCKER_MTU_VALUE\n```\n\n----------------------------------------\n\nTITLE: Attempting to Merge a Conflicting Branch\nDESCRIPTION: Demonstrates a merge conflict when trying to merge the 'fruit' branch that has conflicting changes to the same file. This sets up the scenario for history simplification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_5\n\nLANGUAGE: Git CLI\nCODE:\n```\n>git merge fruit\n    \n    Auto-merging test.txt\n    CONFLICT (content): Merge conflict in test.txt\n    Automatic merge failed; fix conflicts and then commit the result.\n```\n\n----------------------------------------\n\nTITLE: Setting Project Collection Administrators Permissions with TFSSecurity\nDESCRIPTION: Commands to fix missing permissions for Project Collection Administrators group using TFSSecurity.exe. These commands add Read, Write, Delete, and ManageMembership permissions for a specific scope.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_10\n\nLANGUAGE: cmdline\nCODE:\n```\nTFSSecurity.exe /a+ Identity \"{scope}\\\\\" Read sid:{Group SID} ALLOW /collection:{collectionUrl}\n\nTFSSecurity.exe /a+ Identity \"{scope}\\\\\" Write sid:{Group SID} ALLOW /collection:{collectionUrl}\n\nTFSSecurity.exe /a+ Identity \"{scope}\\\\\" Delete sid:{Group SID} ALLOW /collection:{collectionUrl}\n\nTFSSecurity.exe /a+ Identity \"{scope}\\\\\" ManageMembership sid:{Group SID} ALLOW /collection:{collectionUrl}\n```\n\n----------------------------------------\n\nTITLE: Downloading Single Artifact with Patterns using YAML in Azure DevOps\nDESCRIPTION: This YAML snippet shows how to download all .js files from a specific artifact named 'WebApp'. It uses the download keyword with a file matching pattern.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- download: current\n  artifact: WebApp\n  patterns: '**/*.js'\n```\n\n----------------------------------------\n\nTITLE: Staging Specific Files Using Git CLI\nDESCRIPTION: Command to stage changes for specific files in the Git repository\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/commits.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit add <file path>\n```\n\n----------------------------------------\n\nTITLE: Using ASOF Time Filter in WIQL Queries\nDESCRIPTION: Demonstrates using the ASOF operator to view work items as they were at a specific point in time, showing historical state rather than current state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_33\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT [System.Title] \nFROM workitems \nWHERE [System.IterationPath] = 'MyProject\\Beta' \nAND [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>' \nASOF '3/16/19 12:30'\n```\n\n----------------------------------------\n\nTITLE: Reading a Variable in Bash Script\nDESCRIPTION: Reads a previously set variable 'myVar' using macro syntax in a Bash script. This demonstrates how to access variables that were set in previous tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- bash: |\n    echo \"You can use macro syntax for variables: $(myVar)\"\n```\n\n----------------------------------------\n\nTITLE: TFVC Pipeline Error Example: Connection Closed\nDESCRIPTION: An example error message that occurs when there's an unexpected connection issue with the TFVC server. This is usually an intermittent error caused by service technical issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/tfvc.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`The underlying connection was closed: An unexpected error occurred on a receive.\n##[error]Exit code 100 returned from process: file name 'tf', arguments 'vc workspace /new /location:local /permission:Public`\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipeline Parameters with Different Access Levels\nDESCRIPTION: Demonstrates the configuration of pipeline parameters with different types (string, boolean, object) to show how the new 'Edit queue build configuration' permission affects access control. Shows parameter definitions that can be modified with basic Queue build permission versus those requiring elevated permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-237-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: Configuration\n  type: string\n  values:\n  - release\n  - debug\n  default: debug\n- name: UseNewDeploymentMethod\n  type: boolean\n  default: false\n- name: AzureSKU\n  type: object\n  default:\n    WUS1: Standard D2lds v5\n    WUS2: Standard D2lds v5\n    WUS3: Standard D2lds v5\n```\n\n----------------------------------------\n\nTITLE: Listing Orphan User Stories Query\nDESCRIPTION: This code snippet shows how to create a query to find unparented backlog items (orphan user stories) in Azure Boards. It demonstrates the query construction in the web portal interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/linking-attachments.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n:::image type=\"content\" source=\"media/link-attachments/unparented-work-items.png\" alt-text=\"Screenshot of Query Editor, Work items, and direct links, Web portal, unparented user stories.\":::\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Disk Type using Azure CLI for Managed DevOps Pools\nDESCRIPTION: This Azure CLI command creates a Managed DevOps Pool with a specified OS disk type. The disk type is defined in a separate JSON file (fabric-profile.json) which includes the 'osDiskStorageAccountType' property set to 'Standard'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --fabric-profile fabric-profile.json\n   # other parameters omitted for space\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vmss\": {\n    \"sku\": {...},\n    \"images\": [...],\n    \"osProfile\": {...},\n    \"storageProfile\": {\n      \"osDiskStorageAccountType\": \"Standard\",\n      \"dataDisks\": []\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Universal Package API Endpoint for Project Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting Universal Packages in a project scoped feed using the REST API. This requires a PATCH request with appropriate JSON Patch document to update package views.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_11\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/{project}/_apis/packaging/feeds/{feedId}/upack/packages/{packageName}/versions/{packageVersion}?api-version=7.1-preview.1\n```\n\n----------------------------------------\n\nTITLE: Viewing Another User's Workspace in TFVC\nDESCRIPTION: Opens the workspace properties for the 'Beta1' workspace owned by 'jenh'. With AdminWorkspaces permission, you can also modify the workspace properties and mappings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_11\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects> tf workspaces Beta1;jenh\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Release Deployment Started Event in Azure DevOps\nDESCRIPTION: JSON payload example for the ms.azure-devops-release.deployment-started-event which is triggered when a deployment starts. This includes environment details, release information, and project data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"00000000-0000-0000-0000-0000000000001f04688d-98bb-4206-850f-43389f4c8cb4\",\n    \"eventType\": \"ms.azure-devops-release.deployment-started-event\",\n    \"publisherId\": \"rm\",\n    \"message\": {\n        \"text\": \"Deployment of release Release-5 to stage Dev started.\",\n        \"html\": \"Deployment on stage <a href='http://fabfiber.visualstudio.com/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=1&definitionId=4'>Dev</a> started.\",\n        \"markdown\": \"Deployment on stage [Dev](https://fabfiber.visualstudio.com/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=1&definitionId=4) started.\"\n    },\n    \"detailedMessage\": {\n        \"text\": \"Deployment of release Release-5 on stage Dev started.\\r\\nTrigger: Manual\",\n        \"html\": \"Deployment on stage <a href='Dev'>http://fabfiber.visualstudio.com/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=1&definitionId=4</a> started.<br>Trigger: Manual\",\n        \"markdown\": \"Deployment on stage [Release-1](https://fabfiber.visualstudio.com/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=1&definitionId=4) started.\\r\\nTrigger: Dev\"\n    },\n    \"resource\": {\n        \"environment\": {\n            \"id\": 5,\n            \"releaseId\": 0,\n            \"name\": \"Dev\",\n            \"status\": \"queued\",\n            \"variables\": {},\n            \"variableGroups\": [],\n            \"preDeployApprovals\": [],\n            \"postDeployApprovals\": [],\n            \"preApprovalsSnapshot\": {\n                \"approvals\": [],\n                \"approvalOptions\": {\n                    \"requiredApproverCount\": 0,\n                    \"releaseCreatorCanBeApprover\": true,\n                    \"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped\": false,\n                    \"enforceIdentityRevalidation\": false,\n                    \"timeoutInMinutes\": 0,\n                    \"executionOrder\": \"beforeGates\"\n                }\n            },\n            \"postApprovalsSnapshot\": {\n                \"approvals\": []\n            },\n            \"deploySteps\": [],\n            \"rank\": 1,\n            \"definitionEnvironmentId\": 1,\n            \"queueId\": 1,\n            \"environmentOptions\": {\n                \"emailNotificationType\": \"OnlyOnFailure\",\n                \"emailRecipients\": \"release.environment.owner;release.creator\",\n                \"skipArtifactsDownload\": false,\n                \"timeoutInMinutes\": 0,\n                \"enableAccessToken\": false,\n                \"publishDeploymentStatus\": false,\n                \"badgeEnabled\": false,\n                \"autoLinkWorkItems\": false,\n                \"pullRequestDeploymentEnabled\": false\n            },\n            \"demands\": [],\n            \"conditions\": [],\n            \"modifiedOn\": \"2016-01-21T08:19:17.26Z\",\n            \"workflowTasks\": [],\n            \"deployPhasesSnapshot\": [],\n            \"owner\": {\n                \"displayName\": \"Chuck Reinhart\",\n                \"id\": \"00000000-0000-0000-0000-000000000000\"\n            },\n            \"scheduledDeploymentTime\": \"2016-01-21T08:19:17.26Z\",\n            \"schedules\": [],\n            \"release\": {\n                \"id\": 5,\n                \"name\": \"Release-5\",\n                \"_links\": {\n                    \"web\": {\n                        \"href\": \"https://fabfiber.visualstudio.com/Fabrikam-Fiber-Git/_release?releaseId=1&_a=release-summary\"\n                    }\n                }\n            },\n            \"preDeploymentGatesSnapshot\": {\n                \"id\": 0,\n                \"gatesOptions\": null,\n                \"gates\": []\n            },\n            \"postDeploymentGatesSnapshot\": {\n                \"id\": 0,\n                \"gatesOptions\": null,\n                \"gates\": []\n            }\n        },\n        \"release\": {\n            \"id\": 0,\n            \"name\": null,\n            \"status\": \"undefined\",\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"modifiedOn\": \"0001-01-01T00:00:00\",\n            \"modifiedBy\": null,\n            \"createdBy\": null,\n            \"environments\": [],\n            \"variables\": {},\n            \"variableGroups\": [],\n            \"artifacts\": [],\n            \"releaseDefinition\": {\n                \"id\": 1,\n                \"name\": \"Fabrikam.CD\",\n                \"projectReference\": null,\n                \"_links\": {}\n            },\n            \"releaseDefinitionRevision\": 0,\n            \"reason\": \"none\",\n            \"releaseNameFormat\": null,\n            \"keepForever\": false,\n            \"definitionSnapshotRevision\": 0,\n            \"logsContainerUrl\": null,\n            \"_links\": {},\n            \"tags\": [],\n            \"triggeringArtifactAlias\": null,\n            \"projectReference\": null\n        },\n        \"project\": {\n            \"id\": \"00000000-0000-0000-0000-00000000000000000000-0000-0000-0000-000000000000\",\n            \"name\": \"Fabrikam\"\n        }\n    },\n    \"resourceVersion\": \"3.0-preview.1\",\n    \"resourceContainers\": {\n        \"collection\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"account\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"project\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000\"\n        }\n    },\n    \"createdDate\": \"2019-10-10T17:49:39.157Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Building Gradle Projects\nDESCRIPTION: Command to build Gradle projects and download dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_17\n\nLANGUAGE: Command\nCODE:\n```\ngradle build\n```\n\n----------------------------------------\n\nTITLE: NuGet Package Restoration Configuration\nDESCRIPTION: YAML configuration for restoring NuGet packages from a project-scoped feed in Azure Artifacts\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/aspnet/build-aspnet-4.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetCommand@2\n  inputs:\n    command: 'restore'\n    feedsToUse: 'select'\n    vstsFeed: 'my-project/my-project-scoped-feed'\n    includeNuGetOrg: false\n    restoreSolution: '**/*.sln'\n```\n\n----------------------------------------\n\nTITLE: Force Pushing Branch in Git\nDESCRIPTION: Forces a push to a remote branch, overwriting its history with the local branch's history. This operation should be used with caution as it can lead to data loss.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_26\n\nLANGUAGE: git\nCODE:\n```\ngit push --force -u origin remote_branchname\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom Field in XML for Azure DevOps Work Item Types\nDESCRIPTION: This XML snippet shows how to define a custom field named 'Requestor' in a work item type definition. It includes allowed values and a default value for the field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-field.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Requestor\" refname=\"FabrikamFiber.MyTeam.Requestor\" type=\"String\" reportable=\"Dimension\">\n   <ALLOWEDVALUES>\n      <LISTITEM value=\"Customer\" />\n      <LISTITEM value=\"Executive Management\" />\n      <LISTITEM value=\"Other\" />\n      <LISTITEM value=\"Support\" />\n      <LISTITEM value=\"Team\" />\n      <LISTITEM value=\"Technicians\" />\n      <DEFAULTVALUE value=\"Customer\" />\n    </ALLOWEDVALUES>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Detailed Manual Standby Agent Configuration in ARM Template\nDESCRIPTION: This JSON snippet shows a more detailed configuration for manual standby agents, specifying a schedule for each day of the week.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"kind\": \"Stateless\",\n    \"resourcePredictions\": {\n        \"timeZone\": \"Eastern Standard Time\",\n        \"daysData\": [\n            {},\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {}\n        ]\n    },\n    \"resourcePredictionsProfile\": {\n        \"kind\": \"Manual\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Work Item Area Path with Azure CLI\nDESCRIPTION: This command updates a work item's properties including its Area Path to move it between teams. The command supports updating various fields such as area, iteration, assigned-to, state, and more.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/move-work-items.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item update --id\n                           [--area]\n                           [--assigned-to]\n                           [--description]\n                           [--discussion]\n                           [--fields]\n                           [--iteration]\n                           [--open]\n                           [--reason]\n                           [--state]\n                           [--title]\n```\n\n----------------------------------------\n\nTITLE: Example of Azure DevOps CLI Project Deletion\nDESCRIPTION: Practical example showing how to delete a team project using the Azure DevOps CLI with a specific project ID and the --yes flag to skip confirmation prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/delete-project.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops project delete --id 9a61d475-b1a7-4da7-b9db-80df15ac985c --yes\n```\n\n----------------------------------------\n\nTITLE: Querying Test Execution Status for Requirements in Azure DevOps\nDESCRIPTION: This query retrieves test execution status for requirements in the specified iteration and area. It aggregates the count of test points by their outcome (Passed, Failed, Blocked, etc.) and groups them by the associated requirement work item. This only works for test cases linked through Requirement-based test suites.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerBI M\nCODE:\n```\nlet \n    Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints? \n    $apply=filter(\n        (TestSuite/RequirementWorkItem/IterationSK eq {iterationSK} \n        and TestSuite/RequirementWorkItem/AreaSK eq {areaSK}\n        and TestSuite/RequirementWorkItem/Processes/any(p:p/BacklogType eq 'RequirementBacklog') \n        and TestSuite/RequirementWorkItem/Processes/all(p:p/IsBugType eq false)\n        )\n    )\n    /compute(TestSuite/RequirementWorkItem/WorkItemId as WorkItemId, TestSuite/RequirementWorkItem/Title as WorkItemTitle)\n    /groupby(\n        (WorkItemId, WorkItemTitle),\n        aggregate(\n            $count as TotalCount, \n            cast(LastResultOutcome eq 'Passed', Edm.Int32) with sum as PassedCount, \n            cast(LastResultOutcome eq 'Failed', Edm.Int32) with sum as FailedCount, \n            cast(LastResultOutcome eq 'Blocked', Edm.Int32) with sum as BlockedCount,\n            cast(LastResultOutcome eq 'NotApplicable', Edm.Int32) with sum as NotApplicableCount,\n            cast(LastResultOutcome eq 'None', Edm.Int32) with sum as NotRunCount, \n            cast(LastResultOutcome ne 'None', Edm.Int32) with sum as RunCount))\", null, [Implementation=\"2.0\"]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"TotalCount\", type number}, {\"PassedCount\", type number}, {\"FailedCount\", type number}, {\"BlockedCount\",type number}, {\"NotApplicableCount\", type number}, {\"NotRunCount\", type number}, {\"RunCount\", type number}})\nin\n    #\"Changed Type\"\n```\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints? \n$apply=filter(\n    (TestSuite/RequirementWorkItem/IterationSK eq {iterationSK} \n    and TestSuite/RequirementWorkItem/AreaSK eq {areaSK}\n    and TestSuite/RequirementWorkItem/Processes/any(p:p/BacklogType eq 'RequirementBacklog') \n    and TestSuite/RequirementWorkItem/Processes/all(p:p/IsBugType eq false)\n    )\n)\n/compute(TestSuite/RequirementWorkItem/WorkItemId as WorkItemId, TestSuite/RequirementWorkItem/Title as WorkItemTitle)\n/groupby(\n    (WorkItemId, WorkItemTitle),\n    aggregate(\n        $count as TotalCount, \n        cast(LastResultOutcome eq 'Passed', Edm.Int32) with sum as PassedCount, \n        cast(LastResultOutcome eq 'Failed', Edm.Int32) with sum as FailedCount, \n        cast(LastResultOutcome eq 'Blocked', Edm.Int32) with sum as BlockedCount,\n        cast(LastResultOutcome eq 'NotApplicable', Edm.Int32) with sum as NotApplicableCount,\n        cast(LastResultOutcome eq 'None', Edm.Int32) with sum as NotRunCount, \n        cast(LastResultOutcome ne 'None', Edm.Int32) with sum as RunCount\n    )\n)\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Task Duration with OData\nDESCRIPTION: OData query that retrieves task duration metrics from the Azure DevOps Analytics service. It calculates percentile durations for tasks in a pipeline, filtering by pipeline name, date, and outcome, with results sorted by the 50th percentile duration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelinename}'\n    and PipelineRunCompletedOn/Date ge {startdate}\n    and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded')\n    and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1)\n    )\n/compute(\n    percentile_cont(ActivityDurationSeconds, 0.5, TaskDisplayName) as TaskDuration50thPercentileInSeconds,\n    percentile_cont(ActivityDurationSeconds, 0.8, TaskDisplayName) as TaskDuration80thPercentileInSeconds,\n    percentile_cont(ActivityDurationSeconds, 0.95, TaskDisplayName) as TaskDuration95thPercentileInSeconds)\n/groupby(\n    (TaskDuration50thPercentileInSeconds, TaskDuration80thPercentileInSeconds,TaskDuration95thPercentileInSeconds, TaskDisplayName))\n&$orderby=TaskDuration50thPercentileInSeconds desc\n```\n\n----------------------------------------\n\nTITLE: Undoing Local Changes in Git\nDESCRIPTION: This series of commands resets your local repository to the latest version from the remote repository, discarding all local changes. It's similar to 'Get Latest Version' with overwrite options in TFVC.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_10\n\nLANGUAGE: console\nCODE:\n```\ngit reset --hard HEAD\n```\n\nLANGUAGE: console\nCODE:\n```\ngit pull origin\n```\n\nLANGUAGE: console\nCODE:\n```\ngit clean -xdf\n```\n\n----------------------------------------\n\nTITLE: Cloning Test Suite Using TCM CLI in Azure DevOps\nDESCRIPTION: This TCM command clones a test suite from one project to another, overriding certain fields. It specifies the source and destination suite IDs, project names, and field overrides for Area Path and Iteration Path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_7\n\nLANGUAGE: tcm\nCODE:\n```\ntcm suites /clone /collection:https://dev.azure.com/fabrikamprime /teamproject:\"Fabrikam Fiber\" /destinationteamproject:\"Fabrikam Git\" /suiteid:97 /destinationsuiteid:104 /overridefield:\"Iteration Path\"=\"Fabrikam Git\" /overridefield:\"Area Path\"=\"Fabrikam Git\"\n```\n\n----------------------------------------\n\nTITLE: Conditioning Cache Restoration in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to conditionally execute steps based on cache restoration status using the 'cacheHitVar' input in Azure Pipelines. It skips the 'install-deps.sh' step when the cache is restored.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/caching.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Cache@2\n  inputs:\n    key: mykey | mylockfile\n    restoreKeys: mykey\n    path: $(Pipeline.Workspace)/mycache\n    cacheHitVar: CACHE_RESTORED\n\n- script: install-deps.sh\n  condition: ne(variables.CACHE_RESTORED, 'true')\n\n- script: build.sh\n```\n\n----------------------------------------\n\nTITLE: Detailed daysData Configuration Example with Comments\nDESCRIPTION: JSON configuration with detailed comments explaining the structure of the daysData array and how each day's schedule works. Shows a weekday business hours example with comments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n\"daysData\": [\n    {}, # Schedule of standby agent count adjustments for Sunday\n    {   # Schedule of standby agent count adjustments for Monday\n        \"09:00:00\": 1, # Adjust standby agent count to 1\n        \"17:00:00\": 0  # Adjust standby agent count to 0\n    },\n    {  # Schedule of standby agent count adjustments for Tuesday\n        \"09:00:00\": 1,\n        \"17:00:00\": 0\n    },\n    {  # Schedule of standby agent count adjustments for Wednesday\n        \"09:00:00\": 1,\n        \"17:00:00\": 0\n    },\n    {  # Schedule of standby agent count adjustments for Thursday\n        \"09:00:00\": 1,\n        \"17:00:00\": 0\n    },\n    {  # Schedule of standby agent count adjustments for Friday\n        \"09:00:00\": 1,\n        \"17:00:00\": 0\n    },\n    {} # Schedule of standby agent count adjustments for Saturday\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Pipeline Tag Triggers\nDESCRIPTION: Demonstrates how to configure YAML pipeline triggers based on git tags, allowing inclusion and exclusion patterns for specific tag formats.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-143-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  tags:\n    include:\n    - releases/*\n    exclude:\n    - releases/old*\n```\n\n----------------------------------------\n\nTITLE: Registering Managed DevOps Pools Resource Provider using Azure CLI\nDESCRIPTION: This Azure CLI command registers the Microsoft.DevOpsInfrastructure and Microsoft.DevCenter resource providers in your Azure subscription, which are required for using Managed DevOps Pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/prerequisites.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz provider register --namespace 'Microsoft.DevOpsInfrastructure'\naz provider register --namespace 'Microsoft.DevCenter'\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration Data with OData\nDESCRIPTION: OData query to fetch test duration metrics, grouping by test and calculating average duration. Used for direct API access to test analytics data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analyics-test-duration-trend.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?$apply=filter(Pipeline/PipelineName eq '{pipelineName}' And Date/Date ge {startdate} And Workflow eq 'Build')/groupby((TestSK, Test/TestName), aggregate(ResultCount with sum as TotalCount,ResultDurationSeconds with sum as TotalDuration))/compute(TotalDuration div TotalCount as AvgDuration)\n```\n\n----------------------------------------\n\nTITLE: Querying Alert Summary via Azure DevOps Advanced Security API\nDESCRIPTION: This HTTP endpoint path is used to access the Azure DevOps REST API for retrieving a summary of alert criticality across all Advanced Security-enabled repositories within an organization. Making requests to this endpoint requires an Azure DevOps Personal Access Token (PAT) that has been granted the `vso.advsec` permission scope, which allows reading alerts and analysis results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/ghazdo/sprint-240-update.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\n/{organization}/_apis/reporting/summary/alerts\n```\n\n----------------------------------------\n\nTITLE: Configuring Organization-Scoped NuGet Feed Connection\nDESCRIPTION: XML configuration for connecting to an organization-scoped Azure Artifacts NuGet feed. Defines package source with organization-level feed URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/nuget-exe.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<SOURCE_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Adding Tasks in Azure DevOps - Scrum Process\nDESCRIPTION: Instructions for adding and managing tasks using the Scrum process template in Azure DevOps. Includes steps for creating tasks, marking them complete, reordering, and managing task details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/get-started/plan-track-work.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n1. To start adding tasks, select the actions icon for the story and select the Add Task option.  \n2. Enter a title for the task and type Enter when you're done.\n3. If you have many tasks to add, just keep entering your task titles and type Enter.\n4. You can mark a task as done, expand or collapse the task checklist, or reorder and reparent tasks.\n```\n\n----------------------------------------\n\nTITLE: Including Widget Styles in JavaScript\nDESCRIPTION: This snippet shows how to include the basic Widget SDK styles in your widget's JavaScript code. It should be added inside the VSS.require block.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/styles-from-widget-sdk.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nWidgetHelpers.IncludeWidgetStyles();\n```\n\n----------------------------------------\n\nTITLE: Adding Missing Category to Categories.xml (XML)\nDESCRIPTION: This example demonstrates how to add a missing category (Epic Category) to the Categories.xml file to resolve a reference error in ProcessConfiguration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n  <CATEGORY name=\"Epic Category\" refname=\"Microsoft.EpicCategory\">\n    <DEFAULTWORKITEMTYPE name=\"Epic\" />\n  </CATEGORY>\n```\n\n----------------------------------------\n\nTITLE: Advanced Dialog Handling (JavaScript)\nDESCRIPTION: Shows advanced dialog handling, including form validation, enabling/disabling the OK button, and processing dialog results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/using-host-dialog.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nVSS.getService(VSS.ServiceIds.Dialog).then(function(dialogService) {\n    var registrationForm;\n    var extensionCtx = VSS.getExtensionContext();\n    var contributionId = extensionCtx.publisherId + \".\" + extensionCtx.extensionId + \".registration-form\";\n\n    var dialogOptions = {\n        title: \"Registration Form\",\n        width: 800,\n        height: 600,\n        getDialogResult: function() {\n            // Get the result from registrationForm object\n            return registrationForm ? registrationForm.getFormData() : null;\n        },\n        okCallback: function (result) {\n            // Log the result to the console\n            console.log(JSON.stringify(result));\n        }\n    };\n\n    dialogService.openDialog(contributionId, dialogOptions).then(function(dialog) {\n        // Get registrationForm instance which is registered in registrationFormContent.html\n        dialog.getContributionInstance(\"registration-form\").then(function (registrationFormInstance) {\n        \n            // Keep a reference of registration form instance (to be used previously in dialog options)\n            registrationForm = registrationFormInstance;\n            \n            // Subscribe to form input changes and update the Ok enabled state\n            registrationForm.attachFormChanged(function(isValid) {\n                dialog.updateOkButton(isValid);\n            });\n            \n            // Set the initial ok enabled state\n            registrationForm.isFormValid().then(function (isValid) {\n                dialog.updateOkButton(isValid);\n            });\n        });                            \n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Exporting Work Items as CSV from Azure Boards\nDESCRIPTION: Example of exported CSV file structure from Azure Boards, including ID, Work Item Type, Title, Assigned To, State, and Tags fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/import-work-items-from-csv.md#2025-04-22_snippet_1\n\nLANGUAGE: csv\nCODE:\n```\nID,Work Item Type,Title,Assigned To,State,Tags\n\"272\",\"Issue\",\"Fix issues with code\",\"Active\",\"\",\n\"273\",\"Issue\",\"Merge testing modules\",\"Active\",\"\",\n\"274\",\"Issue\",\"Open private preview for select customers\",\"Active\",\"\",\n\"275\",\"Issue\",\"Enable feature for customer champs\",\"Active\",\"\",\n\"276\",\"Issue\",\"Remove old test code\",\"Active\",\"\",\n```\n\n----------------------------------------\n\nTITLE: Using EVER Operator in WIQL Queries\nDESCRIPTION: Shows how to use the EVER operator to find work items that were assigned to a particular user at any point in their history.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_30\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT [System.Id], [System.Title] \nFROM WorkItems \nWHERE [System.TeamProject] = @project \nAND [System.AssignedTo] EVER 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests by Test Owner with Power BI\nDESCRIPTION: Power BI query that retrieves failed test results filtered by test owner. This query groups results by test name and owner, aggregates test run counts, and calculates pass rates for tests that have at least one failure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_8\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate}) \"\n        &\"/groupby((TestSK, Test/TestName, Test/TestOwner), \"\n        &\"aggregate( \"\n            &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n                &\"ResultFailCount with sum as FailedCount, \"\n            &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n                &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n            &\"ResultFlakyCount with sum as FlakyCount)) \"\n        &\"/filter(FailedCount gt 0) \"\n    &\"/compute( \"\n    &\"iif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: TFVC Checkout Command Syntax\nDESCRIPTION: Basic syntax for the Team Foundation Version Control checkout command with optional lock, recursive, and login parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/use-team-foundation-version-control-commands.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntf checkout [/lock:( none|checkin|checkout)] [/recursive] <item-spec> [/login: <username>, [<password>]]\n```\n\n----------------------------------------\n\nTITLE: Aborting Test Runs with TCM Command-Line Interface\nDESCRIPTION: This command cancels a test run that is in progress. It requires the run ID, collection URL, and team project name to identify the specific test run to abort.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_6\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /abort /id:id /collection:teamprojectcollectionurl /teamproject:project [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Viewing Project Level Permissions in Azure Repos\nDESCRIPTION: This command displays project level permissions for the 'FabrikamFiber' project within the 'fabrikam-fiber' collection. It requires the collection URL, project name, and user login credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-permission-command.md#2025-04-22_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\ntf git permission /collection:https://dev.azure.com/fabrikam-fiber \n                  /teamproject:FabrikamFiber\n                  /login:FabrikamUser@hotmail.com,FabrikamPassword\n```\n\n----------------------------------------\n\nTITLE: Example of Updating Policy with Azure CLI\nDESCRIPTION: This example demonstrates how to update a policy with ID 7 using a policy.json configuration file. The command updates a minimum reviewers policy and outputs the results in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy update --config C:\\policies\\policy.json --id 7 --output table\n\nID    Name                         Is Blocking    Is Enabled    Branch\n----  ---------------------------  -------------  ------------  -----------------\n7     Minimum number of reviewers  False          True          refs/heads/main\n```\n\n----------------------------------------\n\nTITLE: Showing Security Permissions with Azure DevOps CLI\nDESCRIPTION: This command demonstrates how to view a token's permission details for a specific user in a given namespace using the Azure DevOps CLI. It displays the results in a table format, showing permission names, bits, descriptions, and values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission show --id 58450c49-b02d-465a-ab12-59ae512d6531 --subject contoso@contoso.com --token 0611925a-b287-4b0b-90a1-90f1a96e9f1f --output table\n```\n\n----------------------------------------\n\nTITLE: Querying Bug Trend Data from Azure DevOps Analytics using OData\nDESCRIPTION: OData query that retrieves bug data from Azure DevOps Analytics. It filters for active bugs in a specific area path, groups them by date, state, and other fields, and aggregates the count for trend analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-bugtrend.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \n        $apply=filter(\n            WorkItemType eq 'Bug'\n            and State ne 'Closed'\n            and startswith(Area/AreaPath,'{areapath}')\n            and DateValue ge {startdate}\n            and Date/DayOfMonth eq 1 \n        )\n        /groupby(\n            (DateValue,State,WorkItemType,Priority,Severity,Area/AreaPath,Iteration/IterationPath,AreaSK),\n            aggregate($count as Count)\n        )\n```\n\n----------------------------------------\n\nTITLE: Querying Test File-Filtered Flaky Tests in Power BI\nDESCRIPTION: Power BI query to analyze flaky tests filtered by test file container. Groups results by test name and container name, supporting container-based filtering.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-flaky-tests.md#2025-04-22_snippet_3\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate}) \"\n        &\"/groupby((TestSK, Test/TestName, Test/ContainerName), \"\n        &\"aggregate( \"\n                &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n                &\"ResultFailCount with sum as FailedCount, \"\n                &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n                &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n                &\"ResultFlakyCount with sum as FlakyCount)) \"\n        &\"/filter(FlakyCount gt 0) \"\n    &\"/compute( \"\n    &\"(FlakyCount div cast(TotalCount, Edm.Decimal)) mul 100 as FlakyRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Voting on a Pull Request using Azure CLI\nDESCRIPTION: This Azure CLI command allows voting on a pull request. It requires specifying the PR ID and vote option. Additional parameters can be used to detect the organization automatically or specify subscription details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/review-pull-requests.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr set-vote --id\n                     --vote {approve, approve-with-suggestions, reject, reset, wait-for-author}\n                     [--detect {false, true}]\n                     [--org]\n                     [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Azure DevOps Feed on Windows\nDESCRIPTION: Commands to log into Azure CLI and set default project and organization configuration for Windows users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/universal-packages/project-setup-universal-packages.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz login\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops configure --defaults project=<YOUR_PROJECT_NAME> organization=https://dev.azure.com/<YOUR_ORGANIZATION_NAME>\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension with API Version Demands\nDESCRIPTION: Example showing how to specify API version requirements using demands in an extension manifest\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services\"\n        }\n    ],\n    \"demands\": [\n        \"api-version/3.0\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Pipelines Agent Configuration Help in PowerShell\nDESCRIPTION: Shows the help information for the Azure Pipelines agent configuration command, providing details on available options including authentication alternatives and unattended configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/windows-agent.md#2025-04-22_snippet_6\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\config --help\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: Markdown include directive for next steps content section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-215-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Template\nDESCRIPTION: Front matter and main content structure for Azure DevOps security improvements documentation, including section headers, include statements, and formatting directives.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-199-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Improvements to strengthen security.\nauthor: gloridelmorales\nms.author: glmorale\nms.date: 2/9/2022\ndescription: With this update, we've included improvement to strengthen security in Azure DevOps. \n---\n\n# Improvements to strengthen security\n```\n\n----------------------------------------\n\nTITLE: Visualizing Maven Dependency Graph\nDESCRIPTION: A console representation of a Maven dependency graph showing how the 'nearest wins' algorithm works for version resolution. This illustrates how a direct dependency version can override a transitive dependency version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nyour-project --- A:1.0.0 --- B:2.0.0\n      \\\n       \\__ B:1.0.0\n```\n\n----------------------------------------\n\nTITLE: Selecting Azure AD Tenant Authority in Python Flask Application (Python)\nDESCRIPTION: This snippet demonstrates setting the AUTHORITY variable for either single-tenant or multi-tenant Azure AD authentication. The appropriate URL is chosen by inserting either a specific tenant GUID or a friendly tenant name. Inputs are strings for tenant configuration, no outputs beyond the constant.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/manage-personal-access-tokens-via-api.md#2025-04-22_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# For single-tenant app:\nAUTHORITY = \"https://login.microsoftonline.com/YOUR_AAD_TENANT_ID_HERE\"\n\n# For multi-tenant app:\nAUTHORITY = \"https://login.microsoftonline.com/Enter_the_Tenant_Name_Here\"\n\n```\n\n----------------------------------------\n\nTITLE: Querying Bug Trends Filtered by Team Name with OData\nDESCRIPTION: This OData query retrieves bug trend data filtered by team names rather than area path. It allows filtering by multiple team names along with a start date for trend analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-bugtrend.md#2025-04-22_snippet_3\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \n        $apply=filter(\n            WorkItemType eq 'Bug'\n            and State ne 'Closed'\n            and (Teams/any(x:x/TeamName eq '{teamname}' or Teams/any(x:x/TeamName eq '{teamname}' or Teams/any(x:x/TeamName eq '{teamname}')\n            and DateValue ge {startdate} \n            )\n        /groupby(\n            (DateValue,State,WorkItemType,Priority,Severity,Area/AreaPath,Iteration/IterationPath,AreaSK),\n            aggregate($count as Count)\n            )\n```\n\n----------------------------------------\n\nTITLE: Parameter Looping with PowerShell\nDESCRIPTION: Demonstrates how to loop through different parameter types and use them in PowerShell tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runtime-parameters.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: myStringName\n  type: string\n  default: a string value\n- name: myMultiString\n  type: string\n  default: default\n  values:\n  - default\n  - ubuntu\n- name: myNumber\n  type: number\n  default: 2\n  values:\n  - 1\n  - 2\n  - 4\n  - 8\n  - 16\n- name: myBoolean\n  type: boolean\n  default: true\n\nsteps: \n  - task: PowerShell@2\n    env:\n      ${{ each parameter in parameters }}:\n        ${{ parameter.Key }}: ${{ parameter.Value }}\n    inputs:\n      filePath: test_script.ps1\n      pwsh: true\n```\n\nLANGUAGE: powershell\nCODE:\n```\nWrite-Host \"Hello, World!\"\nWrite-Host $env:myStringName\n```\n\n----------------------------------------\n\nTITLE: Object Permissions Table for General Items\nDESCRIPTION: Markdown table showing permission settings for Dashboards, Wikis, and Analytic views\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-object-level-permissions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Object  |Default group membership  |How to access security|Inherited?  |\n|---------|---------|---------|----------|\n|[Dashboards](../../report/dashboards/dashboard-permissions.md)| Contributor  | Open **Dashboards**, select the area path, and then  **More** ... > **Security**. | ✔️ (project settings for team dashboard)|\n|[Wiki](../../project/wiki/manage-readme-wiki-permissions.md) |Contributor |Open the wiki, choose **More** ... > **Wiki security**. For more information, see [Manage Wiki permissions](../../project/wiki/manage-readme-wiki-permissions.md). | no        |\n|[Analytic views](../../report/powerbi/analytics-security.md) | Contributor & Basic|Open the analytic view, choose **More** ... > **Security**.  | no |\n```\n\n----------------------------------------\n\nTITLE: Query Macro Examples in Azure DevOps\nDESCRIPTION: Examples of common query macro usage in Azure DevOps, including work item filtering, date-based queries, and team-specific filtering. These macros are primarily used in the web portal for creating advanced work item queries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-operators-variables.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\nWork Item Type=[Any]\nCreated By=@Me\nIteration Path=@CurrentIteration\nArea Path=@TeamAreas [Fabrikam Fiber]\\Web\nCreated Date>=@Today-7\nClosed Date>=@StartOfDay-7\nChanged Date>=@StartOfWeek-2\nTarget Date>=@StartOfYear\nCreated Date>=@StartOfMonth-3\n```\n\n----------------------------------------\n\nTITLE: Defining Field Elements in AddPanel for Quick Add Experience\nDESCRIPTION: XML structure for defining a work item field to appear within the panel for the product backlog. The field reference name is specified as an attribute.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_7\n\nLANGUAGE: XML\nCODE:\n```\n<Field refname=\"FieldReferenceName\"/>\n```\n\n----------------------------------------\n\nTITLE: Removing All Permissions for a Group on a Folder\nDESCRIPTION: Example showing how to remove all permission-related settings from a TFVC folder for members of a specific group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/permission-command.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf permission /remove:* /group:developers $/baseobjects\n```\n\n----------------------------------------\n\nTITLE: Querying Current Sprint Closures\nDESCRIPTION: Query clause to find items closed during the current sprint using @CurrentIteration macro.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-date-or-current-iteration.md#2025-04-22_snippet_6\n\nLANGUAGE: WIQL\nCODE:\n```\nIteration Path = @CurrentIteration AND State = Done\n```\n\n----------------------------------------\n\nTITLE: Widget Categories Table in Markdown\nDESCRIPTION: Markdown table listing all available widget categories and their associated widgets in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/widget-catalog.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| **Category** | **Widgets** |\n|--------------|-------------|\n| **Boards** | - [Assigned to Me] (User) <br> - [Burndown] (Analytics, Project, Teams) <br> - [Burnup] (Analytics, Project, Teams) |\n```\n\n----------------------------------------\n\nTITLE: Listing Documentation Sections in Markdown\nDESCRIPTION: This snippet uses markdown syntax to list internal documentation links for the Azure DevOps Docs project. It is intended to serve as a navigation guide and references audit log details and pipeline grant changes. The snippet requires markdown support and does not have parameters or inputs; it is meant for inclusion in documentation files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-183-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n- [Approver details available in audit logs](#approver-details-available-in-audit-logs)\n- [Change in process for obtaining free pipelines grant in public projects](#change-in-process-for-obtaining-free-pipelines-grant-in-public-projects)\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Manifest for Custom Action\nDESCRIPTION: JSON configuration in extensions.json that defines the action's properties including its ID, title, icon, and handler information for the VSS work web interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-action-ts.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"contributions\": {\n    \"vss.work.web#queryActions\": [\n\t\t{\n\t\t\t\"id\": \"myAction\",\n\t\t\t\"title\": \"My Action\",\n\t\t\t\"text\": \"Do my action\",\n\t\t\t\"icon\": \"images/icon.png\",\n\t\t\t\"handler\": \"action.myAction\",\n\t\t\t\"groupId\": \"actions\",\n\t\t\t\"handlerUri\": \"action.html\",\n\t\t\t\"dynamicProperties\": false\n\t\t}\n\t],\n```\n\n----------------------------------------\n\nTITLE: Complete Pipeline with ARM Template Deployment\nDESCRIPTION: Full YAML pipeline configuration including variables, copy files, and ARM template deployment tasks\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  ARM_PASS: $(adminPass)\n\ntrigger:\n- none\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: CopyFiles@2\n  inputs:\n    SourceFolder: 'quickstarts/microsoft.web/webapp-linux-managed-mysql/'\n    Contents: '**'\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n\n- task: AzureResourceManagerTemplateDeployment@3\n  inputs:\n    deploymentScope: 'Resource Group'\n    azureResourceManagerConnection: '<your-resource-manager-connection>'\n    subscriptionId: '<your-subscription-id>'\n    action: 'Create Or Update Resource Group'\n    resourceGroupName: 'ARMPipelinesLAMP-rg'\n    location: '<your-closest-location>'\n    templateLocation: 'Linked artifact'\n    csmFile: '$(Build.ArtifactStagingDirectory)/azuredeploy.json'\n    csmParametersFile: '$(Build.ArtifactStagingDirectory)/azuredeploy.parameters.json'\n    overrideParameters: '-siteName $(siteName) -administratorLogin $(adminUser) -administratorLoginPassword $(ARM_PASS)'\n    deploymentMode: 'Incremental'\n```\n\n----------------------------------------\n\nTITLE: Publishing Local Git Repository to GitHub via Command Line\nDESCRIPTION: This code snippet shows the process of publishing a local Git repository to GitHub using Git commands. It includes adding a remote origin and pushing the main branch to the newly created GitHub repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/creatingrepo.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n> git remote add origin <clone URL>\n> git push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Creating Azure VM from Marketplace Image using Azure CLI\nDESCRIPTION: Creates a new Azure Virtual Machine within a specified resource group, using a base image from the Azure Marketplace (e.g., Win2019DataCenter, UbuntuLTS). Allows specifying the OS disk size and administrative credentials. This is the first step when customizing a VM image from an Azure base image for use in VMSS.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm create --resource-group <myResourceGroup> --name <MyVM> --image <myBaseImage> --os-disk-size-gb <myDiskSize>  --admin-username myUserName --admin-password myPassword\n```\n\n----------------------------------------\n\nTITLE: Example: Removing User from Security Group\nDESCRIPTION: Example showing how to remove a user from a security group without confirmation prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group membership remove --group-id vssgp.Uy0xLTktMTU1MTM3NDI0NS0yMjc3MTY5NTAtOTkzNjA1MTg2LTI1ODQxNTkyOTktMjYzMDUyNzA2OC0xLTQxNDY0Mzc4MzktMzgxMDM2MDM5MS0yNjE0MjU5MzI3LTI5MjI2MTc3OTA --member-id contoso@contoso.com --yes\n```\n\n----------------------------------------\n\nTITLE: Adding a Custom Field to the Work Item Form in Azure DevOps\nDESCRIPTION: This XML snippet demonstrates how to add a custom field to the work item form layout. It places the 'Requestor' field below the 'Reason' field in the Status group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-field.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<Column PercentWidth=\"50\">\n   <Group Label=\"Status\">\n      <Column PercentWidth=\"100\">\n         <Control FieldName=\"System.AssignedTo\" Type=\"FieldControl\" Label=\"Assi&amp;gned To:\" LabelPosition=\"Left\" />\n         <Control FieldName=\"System.State\" Type=\"FieldControl\" Label=\"&amp;State:\" LabelPosition=\"Left\" />\n         <Control FieldName=\"System.Reason\" Type=\"FieldControl\" Label=\"Reason:\" LabelPosition=\"Left\" ReadOnly=\"True\" />\n         <Control FieldName=\"FabrikamFiber.MyTeam.Requestor\" Type=\"FieldControl\" Label=\"Requestor:\" LabelPosition=\"Left\" ReadOnly=\"True\" />\n      </Column>\n   </Group>\n</Column>\n```\n\n----------------------------------------\n\nTITLE: String Split Function in YAML Template Expressions\nDESCRIPTION: Example of using the new string split function in YAML template expressions to iterate over environment names for deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-209-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  environments: integration1, integration2\n\njobs:\n  - job: Deploy\n    steps:\n    - ${{ each env in split(variables.environments, ', ') }}:\n      - script: ./deploy.sh -e ${{ env }}\n      - script: ./runTest.sh -e ${{ env }}\n```\n\n----------------------------------------\n\nTITLE: Adding Work Item Relationships with Azure CLI\nDESCRIPTION: Command syntax for adding relationships between work items with Azure CLI, including required parameters and options for specifying link types and target work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/add-link.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item relation add --id\n                                 --relation-type\n                                 [--detect {false, true}]\n                                 [--org]\n                                 [--target-id]\n                                 [--target-url]\n```\n\n----------------------------------------\n\nTITLE: Managing Azure DevOps Security Groups and Permissions Using CLI Command\nDESCRIPTION: Reference to the Azure CLI command for managing security groups and permissions in Azure DevOps. This command can be used to create scripts for standardizing security group creation and permission management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-153-update.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\naz devops security permission\n```\n\n----------------------------------------\n\nTITLE: Fully Abbreviated Push Command\nDESCRIPTION: The most concise push command that works when the current local branch tracks a remote branch on 'origin'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pushing.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ngit push\n```\n\n----------------------------------------\n\nTITLE: Adding a Menu Action to Work Item Form in JSON\nDESCRIPTION: This JSON snippet defines a contribution to add a custom menu action to the work item form toolbar. It specifies the action's text, icon, and URI for handling the action.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-workitem-extension.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\"contributions\": [\n    {  \n       \"id\": \"sample-work-item-menu\",  \n       \"type\": \"ms.vss-web.action\",  \n       \"description\": \"Sample toolbar item which updates the title of a work item\",  \n       \"targets\": [  \n           \"ms.vss-work-web.work-item-context-menu\"  \n       ],  \n       \"properties\": {  \n           \"text\": \"Try me!\",  \n           \"title\": \"Updates the title of the work item from the extension\",  \n           \"toolbarText\": \"Try me!\",  \n           \"icon\": \"images/show-properties.png\",  \n           \"uri\": \"menu-workItemToolbarButton.html\"  \n       }  \n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Setting .NET SDK Version and RollForward Behavior in global.json (JSON)\nDESCRIPTION: This JSON snippet demonstrates how to specify a .NET SDK version and explicitly set the 'rollForward' behavior in a global.json file, which is used to control SDK version selection during build execution. Required dependency: a .NET project root that consumes a global.json file. The key parameters are 'version', specifying the requested SDK version (in this example, 3.1.100), and 'rollForward', set to 'disable' to prevent forward patch selection. When placed in the repository root, this instructs tools to use only the specified SDK if available, otherwise the build will fail. Output: build behavior is dictated by the specified SDK version and rollForward property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-187-update.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\\n  \\\"sdk\\\": {\\n    \\\"version\\\": \\\"3.1.100\\\",\\n    \\\"rollForward\\\": \\\"disable\\\"\\n  }\\n}\n```\n\n----------------------------------------\n\nTITLE: Applying EMPTY Workflow Field Rules in XML for Azure DevOps\nDESCRIPTION: This XML snippet demonstrates how to apply the EMPTY rule to automatically nullify the Closed Date and Closed By fields when a work item state changes to Active. This is useful when reactivating a work item from a closed state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-wit.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<STATE value=\"Active\">\n   <FIELDS>\n. . .\n      <FIELD refname=\"Microsoft.VSTS.Common.ClosedDate\"><EMPTY/></FIELD>\n      <FIELD refname=\"Microsoft.VSTS.Common.ClosedBy\"><EMPTY/></FIELD>\n   </FIELDS>\n</STATE>  \n```\n\n----------------------------------------\n\nTITLE: Packaging an Integration into VSIX File\nDESCRIPTION: Command to package the integration manifest and assets into a VSIX file using the TFX-CLI tool. This creates the package that will be uploaded to the Visual Studio Marketplace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/integration.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntfx extension create --manifest-globs vss-extension.json\n```\n\n----------------------------------------\n\nTITLE: Listing Teams with Azure CLI in Azure DevOps\nDESCRIPTION: This Azure CLI command lists teams in the \"Fabrikam Fiber\" project. It demonstrates how to use the 'az devops team list' command to retrieve team information, including optional parameters for pagination.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/add-teams.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team list --project \"Fabrikam Fiber\" --output table\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Duration Trend for Specific Pipeline in Power BI\nDESCRIPTION: Power BI query to retrieve pipeline duration trend data for a specific pipeline. It filters runs by pipeline name, completion date, and success status, then computes the 80th percentile duration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration-trend.md#2025-04-22_snippet_3\n\nLANGUAGE: Power BI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and (SucceededCount eq 1 or PartiallySucceededCount eq 1) \"\n        &\") \"\n        &\"/compute( \"\n            &\"percentile_cont(TotalDurationSeconds, 0.8,BranchSK, CompletedDateSK) as Duration80thPercentileInSeconds) \"\n                &\"/groupby( \"\n                &\"(Duration80thPercentileInSeconds, Branch/BranchName, CompletedOn/Date)) \"\n            &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Configuring CreatorOnly Permissions in Organization Profile JSON for Azure CLI\nDESCRIPTION: This JSON snippet illustrates the structure of an `organization-profile.json` file for Azure CLI, configured for 'CreatorOnly' permissions. The `permissionProfile.kind` within the `AzureDevOps` object is set to `CreatorOnly`. This file is used with the `--organization-profile` parameter in `az mdp pool create`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"AzureDevOps\":\n  {\n    \"organizations\":  [...],\n    \"permissionProfile\": {\n        \"kind\": \"CreatorOnly\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Workfold Command Syntax for Local Folder Mapping\nDESCRIPTION: The basic syntax for the workfold command when specifying a local folder. This command displays the mapping information for the specified local folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntf workfold <local-folder> [/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Creating a New Git Branch with Command Line\nDESCRIPTION: Command to create and switch to a new topic branch in Git. The -b flag creates a new branch and immediately switches to it.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit checkout -b francis/demo-feature\n```\n\n----------------------------------------\n\nTITLE: Invoking REST APIs with Azure DevOps CLI\nDESCRIPTION: The 'az devops invoke' command allows calling any Azure DevOps REST API from the command line. This is useful for integrating API calls into automation scripts while leveraging CLI authorization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-152-update.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz devops invoke\n```\n\n----------------------------------------\n\nTITLE: Basic Pipeline Resource Variables\nDESCRIPTION: YAML variables that get set when a resource triggers a pipeline. These variables are only set when Build.Reason is ResourceTrigger.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nresources.triggeringAlias\nresources.triggeringCategory\n```\n\n----------------------------------------\n\nTITLE: Registering QEMU for Cross-Architecture Builds - Docker & Shell - Shell\nDESCRIPTION: This shell snippet runs a privileged Docker container that registers the QEMU emulator for use in cross-architecture builds. The command 'docker run --rm --privileged multiarch/qemu-user-static --reset -p yes' prepares the build environment to support emulation of diverse CPU architectures, such as ARM, on an x64 host. Dependency: Docker must be installed and the user must have permission to run privileged containers. Inputs: none; Output: host is set up for multi-arch image building. Running as part of a CI/CD pipeline step is typical. Some environments may restrict \\u0027--privileged\\u0027 mode.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/build-image.md#2025-04-22_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\n# register QEMU binary - this can be done by running the following image\\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\\n# build your image\n```\n\n----------------------------------------\n\nTITLE: Pulling and Merging Remote Changes with Git Command Line\nDESCRIPTION: Command to download and merge new commits from the Azure Repos Git repository into the current branch of your local repository. This synchronizes your local branch with its remote counterpart.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-vs.md#2025-04-22_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n> git pull\n```\n\n----------------------------------------\n\nTITLE: OData Query Using String Function in Filter Clause\nDESCRIPTION: This example demonstrates the use of an OData string function (toupper) in a $filter clause to perform case-insensitive comparison on work item titles.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-supported-features.md#2025-04-22_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\n/WorkItems?$filter=toupper(Title) eq 'HELP'\n```\n\n----------------------------------------\n\nTITLE: Changing Directory to Cloned Repository\nDESCRIPTION: This command changes the current working directory to the newly cloned repository folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-new-repo.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd fabrikam-fiber\n```\n\n----------------------------------------\n\nTITLE: Rollup Story Points to Features from User Stories by Team Name (Power BI Query)\nDESCRIPTION: Power BI M query that retrieves Features and rolls up Story Points from child User Stories, filtering by Team Name instead of Area Path. This query allows filtering for multiple teams in a single report.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_2\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n            &\"$filter=WorkItemType eq 'Feature'\"\n            &\" and State ne 'Cut'\"\n            &\" and (Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}'))\"\n            &\" and Descendants/any()\"    \n        &\"& $select=WorkItemId,Title,WorkItemType,State,AreaSK\"\n        &\"& $expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\"        \n            &\"Descendants(\"\n                &\"$apply=filter(WorkItemType eq 'User Story')\"\n                &\"/aggregate($count as CountOfUserStories, StoryPoints with sum as TotalStoryPoints)\"\n            &\")\", \n        null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Undoing Changes in Another User's TFVC Workspace\nDESCRIPTION: Command to undo pending changes in another user's Team Foundation Version Control workspace. Requires the workspace name, username, project path, and collection URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undo-changes-another-user-workspace.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ntf undo /workspace:<other-user-workspace>;<other-user> $/<project-path>/<file-name> /collection:<team-project-collection-url>\n```\n\n----------------------------------------\n\nTITLE: Configuring Organization-Scoped Feed in Cargo Config for Private Feed\nDESCRIPTION: TOML configuration to add to .cargo/config.toml for connecting to an organization-scoped private feed in Azure Artifacts. This configures the registry and replaces the default crates-io source with your feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[registries]\n<FEED_NAME> = { index = \"sparse+https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/Cargo/index/\" }\n\n[source.crates-io]\nreplace-with = \"<FEED_NAME>\"\n```\n\n----------------------------------------\n\nTITLE: Multiple Jobs Configuration\nDESCRIPTION: YAML configuration demonstrating how to define multiple jobs in a pipeline\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - bash: echo \"A\"\n\n- job: B\n  steps:\n  - bash: echo \"B\"\n```\n\n----------------------------------------\n\nTITLE: Configuring IP V4 Ranges for Outbound Connections in Azure DevOps\nDESCRIPTION: List of IP V4 address ranges that need to be allowed for outbound connections to Azure DevOps. These addresses must be allowed for connections from your organization's network to Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_0\n\nLANGUAGE: IP V4 ranges\nCODE:\n```\n13.107.6.0/24\n13.107.9.0/24\n13.107.42.0/24\n13.107.43.0/24\n150.171.22.0/24 \n150.171.23.0/24 \n150.171.73.0/24 \n150.171.74.0/24 \n150.171.75.0/24 \n150.171.76.0/24\n```\n\n----------------------------------------\n\nTITLE: Installing Go package from public Azure Repos Git repository\nDESCRIPTION: This snippet demonstrates the syntax for using go install to download and install a package from a public Azure Repos Git repository. It allows specifying the organization, project, repository, and version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/go-install.md#2025-04-22_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\ngo install dev.azure.com/<organization>/<project>/_git/<repo>.git@<version>\n```\n\n----------------------------------------\n\nTITLE: Querying Sprint Burndown for User Stories by Team in OData\nDESCRIPTION: This OData query creates a sprint burndown filtered by team name for the current iteration. It groups results by date, state, work item type, and other relevant fields, aggregating counts and story points.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-sprintburndown.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \n        $apply=filter(\n            WorkItemType eq 'User Story'\n            and (Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname})\n            and StateCategory ne 'Completed'\n            and DateValue ge Iteration/StartDate\n            and DateValue le Iteration/EndDate\n            and Iteration/StartDate le now() \n            and Iteration/EndDate ge now()\n        )\n        /groupby(\n            (DateValue,State,WorkItemType,Priority,Area/AreaPath,Iteration/IterationPath),\n            aggregate($count as Count, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Getting Current Hash Value in Azure DevOps Extension (JavaScript)\nDESCRIPTION: This snippet demonstrates how to use the HostNavigationService to retrieve the current hash value from the host URL in an Azure DevOps extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/host-navigation.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Get navigation service\nVSS.getService(VSS.ServiceIds.Navigation).then(function(navigationService) {\n    // Get current hash value from host url\n    navigationService.getHash().then(function (hash) {\n        console.log(\"Host hash value: \" + hash);                        \n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Basic TF Difference Command\nDESCRIPTION: The basic command to compare the local version of a file with the workspace version that was checked out from Azure DevOps server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf difference 314.cs\n```\n\n----------------------------------------\n\nTITLE: Manually Configuring TFVC Proxy with Specific URL\nDESCRIPTION: Example command that overrides any proxy records on Azure DevOps Server and forces a client computer to use a specific proxy URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/proxy-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf proxy /configure <Url>\n```\n\n----------------------------------------\n\nTITLE: Manage project properties Permission Reference\nDESCRIPTION: Permission that allows users to provide or edit metadata for a project. This can be done through the Set project properties REST API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, MANAGE_SYSTEM_PROPERTIES`\n```\n\n----------------------------------------\n\nTITLE: Running Script File for Java Build in Azure Pipelines\nDESCRIPTION: YAML configuration for executing a script file from your repository in Azure Pipelines. This example uses the ShellScript task to run a build.sh file, which can contain custom build commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: ShellScript@2\n  inputs:\n    scriptPath: 'build.sh'\n```\n\n----------------------------------------\n\nTITLE: Running witadmin Command to Destroy a Work Item Type\nDESCRIPTION: This command permanently removes a work item type and all associated work items from a project. It requires administrator permissions and removes all related entries in work item tables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin destroywitd /collection:CollectionURL /p:Project /n:TypeName [/noprompt]\n```\n\n----------------------------------------\n\nTITLE: Defining Deployment Group Roles in Azure DevOps using Markdown\nDESCRIPTION: A markdown table that defines the four roles available for deployment groups in Azure DevOps: Reader, Creator, User, and Administrator. Each role has specific permissions ranging from view-only access to full administrative control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/deployment-group-roles.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Role | Description |\n|------|---------|  \n| **Reader** | View deployment groups. |\n| **Creator** | View and create deployment groups. |\n| **User** | View and use deployment groups, but cannot manage or create them. |\n| **Administrator** | Administer roles, manage, view, and use deployment groups. |\n```\n\n----------------------------------------\n\nTITLE: Editing Current Workspace Properties in TFVC\nDESCRIPTION: Opens the workspace properties dialog for the current workspace, allowing you to modify properties and mappings for the workspace associated with your working directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_10\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf workspace\n```\n\n----------------------------------------\n\nTITLE: Comparing Git Diff Methods in Bash\nDESCRIPTION: This code snippet demonstrates the difference between two-dot and three-dot git diff commands, which explains the discrepancy between Azure DevOps Pull Request and Branch Compare views.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/review-pull-requests.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n      C---D---E branch\n     /\nA---B---F---G   master\n\nPull Requests: git diff branch...master\nBranch Compare: git diff branch..master\n```\n\n----------------------------------------\n\nTITLE: Configuring Weekly Schedule ARM Template\nDESCRIPTION: ARM template for deploying a managed agent pool with weekly schedule configuration. Defines a stateless agent profile with manual resource predictions for specific times during weekdays.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                \"agentProfile\": {\n                    \"kind\": \"Stateless\",\n                    \"resourcePredictionsProfile\": {\n                        \"kind\": \"Manual\"\n                    },\n                    \"resourcePredictions\": {\n                        \"timeZone\": \"Eastern Standard Time\",\n                        \"daysData\": [\n                            {},\n                            {\n                                \"09:00:00\": 4,\n                                \"17:00:00\": 0\n                            },\n                            {\n                                \"09:00:00\": 4,\n                                \"17:00:00\": 0\n                            },\n                            {\n                                \"09:00:00\": 4,\n                                \"17:00:00\": 0\n                            },\n                            {\n                                \"09:00:00\": 4,\n                                \"17:00:00\": 0\n                            },\n                            {\n                                \"09:00:00\": 4,\n                                \"17:00:00\": 0\n                            },\n                            {}\n                        ]\n                    }\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configure Azure DevOps Defaults with CLI\nDESCRIPTION: Sets the default organization and project configuration for Azure DevOps CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-cmdline.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz devops configure --defaults organization=https://dev.azure.com/contoso project=contoso\n```\n\n----------------------------------------\n\nTITLE: Configuring Standby Agent Mode using ARM Template\nDESCRIPTION: ARM template configuration for setting up standby agent mode with manual resource predictions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                \"agentProfile\": {\n                    \"kind\": \"Stateless\",\n                    \"resourcePredictionsProfile\": {\n                        \"kind\": \"Manual\"\n                    },\n                    \"resourcePredictions\": {...}\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading Pipeline Artifact using Azure CLI in Azure DevOps\nDESCRIPTION: This Azure CLI command shows how to download a pipeline artifact using the az pipelines runs artifact download command. It specifies the artifact name, path, and run ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines runs artifact download --artifact-name 'WebApp' --path $(System.DefaultWorkingDirectory)/bin/WebApp --run-id '<run id here>'\n```\n\n----------------------------------------\n\nTITLE: Adding Required ALLOWEDVALUES Rule to Support Activity Field\nDESCRIPTION: ProcessConfiguration.xml elements may require specific fields with ALLOWEDVALUES rules in work item types. This example shows how to add the Activity field with proper values to a Bug work item type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_36\n\nLANGUAGE: xml\nCODE:\n```\n      <FIELD name=\"Activity\" refname=\"Microsoft.AzureDevOps.Common.Activity\" type=\"String\" reportable=\"dimension\">\n        <HELPTEXT>Type of work involved</HELPTEXT>\n      </FIELD> \n```\n\nLANGUAGE: xml\nCODE:\n```\n      <FIELD name=\"Activity\" refname=\"Microsoft.AzureDevOps.Common.Activity\" type=\"String\" reportable=\"dimension\">\n        <HELPTEXT>Type of work involved</HELPTEXT>\n        <SUGGESTEDVALUES>\n          <LISTITEM value=\"Development\"/>\n          <LISTITEM value=\"Testing\"/>\n          <LISTITEM value=\"Requirements\"/>\n          <LISTITEM value=\"Design\"/>\n          <LISTITEM value=\"Deployment\"/>\n          <LISTITEM value=\"Documentation\"/>\n        </SUGGESTEDVALUES>\n      </FIELD>\n```\n\n----------------------------------------\n\nTITLE: Defining Styling Rules for Azure DevOps Board Cards\nDESCRIPTION: This markdown table provides examples of styling rules that can be applied to work items on Azure DevOps boards. It shows various criteria for highlighting different types of work items based on their attributes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/customize-cards.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-tdCol2BreakAll\"]\n> | Work items | Criteria |\n> |------------|------------|\n> | High priority items | `Priority = 1` |\n> | High effort items | `Effort 20` or `Story Points 20` |\n> | Stale items unchanged in the last 5 days | `Changed Date @Today-5` |\n> |Title contains a key word | `Title Contains Yes` |\n> |Severity 1 bugs | `Severity = 1 - Critical   AND   Work Item Type = Bug` |\n> |High value business items | `Business Value 50` |\n> |Items assigned to specific feature area  | `Area Path Under Fabrikam Fiber\\Phone` |\n> |Contains specific tag   | `Tags Contain RTM` |\n> |Blocked tasks (Scrum process only) | `Blocked = Yes` |\n```\n\n----------------------------------------\n\nTITLE: Viewing Resource Utilization Metrics in Azure Pipelines Logs\nDESCRIPTION: Example of the resource utilization metrics log entry that appears in verbose logs of Azure Pipelines. Shows the format of disk, memory, and CPU usage information captured by the agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n2024-02-28T17:41:15.1315148Z ##[debug]Agent environment resources - Disk: D:\\ Available 12342.00 MB out of 14333.00 MB, Memory: Used 1907.00 MB out of 7167.00 MB, CPU: Usage 17.23%\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Locking\nDESCRIPTION: Namespace identifier for locking items in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_36\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, Lock\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Table for User Acceptance Testing in Azure DevOps\nDESCRIPTION: Markdown table detailing the prerequisites for conducting user acceptance testing in Azure DevOps, including project access requirements, necessary access levels, permissions, and configuration needs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/user-acceptance-testing.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirement |\n|--------------|-------------|\n| **Project access** | [Project member](../organizations/security/add-users-team-project.md). |\n| **Access levels** | To request or provide feedback: At least **Stakeholder** access. |\n| **Permissions** | - To add or modify bugs or other work item types: **Edit work items in this node** permission set to **Allow** under the corresponding **Area Path**. <br> - To add new tags: **Create tag definition** permission set to **Allow**. <br> For more information, see [Set permissions and access for testing](../organizations/security/set-permissions-access-test.md). |\n|**Configuration**  |Work items and a test plan. If you don't have these, [create your backlog](../boards/backlogs/create-your-backlog.md) and [create a test plan](create-a-test-plan.md).|\n```\n\n----------------------------------------\n\nTITLE: Sample Payload JSON for Work Item Commented Event in Azure DevOps\nDESCRIPTION: This sample JSON payload shows the structure of a work item comment event in Azure DevOps Service Hooks. It includes the comment content, work item details, and relationship links.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_35\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000fb2617ed-60df-4518-81fa-749faa6c5cd6\",\n  \"eventType\": \"workitem.commented\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Bug #5 (Some great new idea!) commented on by Jamal Hartnett.\\r\\n(https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000)\",\n    \"html\": \"<a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=74e918bf-3376-436d-bd20-8e8c1287f465&amp;id=5\\\">Bug #5</a> (Some great new idea!) commented on by Jamal Hartnett.\",\n    \"markdown\": \"[Bug #5](https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000) (Some great new idea!) commented on by Jamal Hartnett.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Bug #5 (Some great new idea!) commented on by Jamal Hartnett.\\r\\n(https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000)\\r\\nThis is a great new idea\",\n    \"html\": \"<a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=74e918bf-3376-436d-bd20-8e8c1287f465&amp;id=5\\\">Bug #5</a> (Some great new idea!) commented on by Jamal Hartnett.<br/>This is a great new idea\",\n    \"markdown\": \"[Bug #5](https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000) (Some great new idea!) commented on by Jamal Hartnett.\\r\\nThis is a great new idea\"\n  },\n  \"resource\": {\n    \"id\": 5,\n    \"rev\": 4,\n    \"fields\": {\n      \"System.AreaPath\": \"FabrikamCloud\",\n      \"System.TeamProject\": \"FabrikamCloud\",\n      \"System.IterationPath\": \"FabrikamCloud\\\\Release 1\\\\Sprint 1\",\n      \"System.WorkItemType\": \"Bug\",\n      \"System.State\": \"New\",\n      \"System.Reason\": \"New defect reported\",\n      \"System.CreatedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.CreatedBy\": \"Jamal Hartnett\",\n      \"System.ChangedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.ChangedBy\": \"Jamal Hartnett\",\n      \"System.Title\": \"Some great new idea!\",\n      \"Microsoft.Azure DevOps Services.Common.Severity\": \"3 - Medium\",\n      \"WEF_EB329F44FE5F4A94ACB1DA153FDF38BA_Kanban.Column\": \"New\",\n      \"System.History\": \"This is a great new idea\"\n    },\n    \"_links\": {\n      \"self\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5\"\n      },\n      \"workItemUpdates\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/updates\"\n      },\n      \"workItemRevisions\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/revisions\"\n      },\n      \"workItemType\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/00-00-00/workItemTypes/Bug\"\n      },\n      \"fields\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/fields\"\n      }\n    },\n    \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:28.9695265Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Fabric Profile for Managed DevOps Pool\nDESCRIPTION: JSON configuration for the fabric profile, specifying VM image, OS, and storage settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vmss\": {\n    \"sku\": {\n      \"name\": \"Standard_D2as_v5\"\n    },\n    \"images\": [\n      {\n        \"aliases\": [\n          \"ubuntu-22.04\"\n        ],\n        \"buffer\": \"*\",\n        \"wellKnownImageName\": \"ubuntu-22.04/latest\"\n      }\n    ],\n    \"osProfile\": {\n      \"secretsManagementSettings\": {\n        \"observedCertificates\": [],\n        \"keyExportable\": false\n      },\n      \"logonType\": \"Service\"\n    },\n    \"storageProfile\": {\n      \"osDiskStorageAccountType\": \"Standard\",\n      \"dataDisks\": []\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Endpoint from Configuration - Azure DevOps CLI - Azure CLI\nDESCRIPTION: This Azure CLI snippet invokes the 'az devops service-endpoint create' command using a specified JSON configuration file to provision a new service connection. The '--service-endpoint-configuration' parameter is required and accepts a path to the configuration file. Optional flags allow setting file encoding, organization, and project context. The command outputs details of the created service endpoint if successful. Requires Azure DevOps CLI extensions and prior configuration of organization and project context if not provided.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz devops service-endpoint create --service-endpoint-configuration \\n                                  [--encoding {ascii, utf-16be, utf-16le, utf-8}]\\n                                  [--org]\\n                                  [--project]\n```\n\n----------------------------------------\n\nTITLE: Viewing Multiple Files with Wildcard Pattern\nDESCRIPTION: Example showing how to view the latest version of multiple files that match a wildcard pattern (*.cs) using the TFVC view command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/view-command.md#2025-04-22_snippet_4\n\nLANGUAGE: Batch\nCODE:\n```\nc:\\projects>tf view *.cs\n```\n\n----------------------------------------\n\nTITLE: Running Elasticsearch Service Manager in PowerShell for Azure DevOps Server\nDESCRIPTION: PowerShell command to run the Elasticsearch service manager for configuring Java settings in Azure DevOps Server. This is used when migrating between Java versions or when the configuration wizard doesn't detect existing Java installations correctly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/install-configure-search.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n& \"C:\\Program Files\\Azure DevOps Server XXX\\Search\\ES\\vX.XX\\bin\\elasticsearch-service.bat\" manager\n```\n\n----------------------------------------\n\nTITLE: Exporting Service Principal Key for Automation - Azure DevOps CLI - Bash\nDESCRIPTION: This Bash command exports the environment variable 'AZURE_DEVOPS_EXT_AZURE_RM_SERVICE_PRINCIPAL_KEY', which is required for Azure DevOps CLI automation when creating a service endpoint using a client secret. Set this variable with your actual service principal key to avoid interactive prompts when running CLI commands. Applies to Unix-based systems or compatible shells.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nexport AZURE_DEVOPS_EXT_AZURE_RM_SERVICE_PRINCIPAL_KEY=<your_secret_here>\n```\n\n----------------------------------------\n\nTITLE: OData Query for Task Duration by Branch\nDESCRIPTION: An OData query that retrieves the 80th percentile task duration for a specific pipeline task, grouped by branch name and completion date. Allows filtering task duration trends by branch in visualizations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_7\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelinename}'\n    and TaskDisplayName eq '{taskname}'\n    and PipelineRunCompletedOn/Date ge {startdate}\n    and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded')\n    and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1)\n    )\n/compute(\n    percentile_cont(ActivityDurationSeconds, 0.8, BranchSK, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds)\n/groupby(\n    (TaskDuration80thPercentileInSeconds, Branch/BranchName, PipelineRunCompletedOn/Date))\n&$orderby=PipelineRunCompletedOn/Date asc\n```\n\n----------------------------------------\n\nTITLE: Git Cherry-Pick Multiple Commits Command\nDESCRIPTION: Command to cherry-pick multiple specific commits from one branch to another using Git CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/cherry-pick.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit cherry-pick <commit1 ID> <commit2 ID> <commit3 ID>\n```\n\n----------------------------------------\n\nTITLE: Using OR Operator in WIQL Queries\nDESCRIPTION: Shows how to use the OR operator to filter work items where either condition is true, specifically finding items assigned to one of two users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_28\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT [System.Id], [System.Title] \nFROM WorkItems \nWHERE [System.TeamProject] = @project \nAND ( [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\nOR [System.AssignedTo] = ''Raisa Pokrovskaya <fabrikamfiber5@hotmail.com>' )\n```\n\n----------------------------------------\n\nTITLE: Setting Permissions on Work Item Query Folders in Azure DevOps\nDESCRIPTION: Example of an API call to set permissions on work item query folders in Azure DevOps, using a POST request to the security namespaces API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\nPOST https://dev.azure.com/{organization}/_apis/securitynamespaces/{namespaceId}/permissions?api-version=6.0 { \"token\": \"/{project_id}/{shared_queries_id}\", \"permissions\": { \"allow\": 1, \"deny\": 0 } }\n```\n\n----------------------------------------\n\nTITLE: Mapping Scale Set Agent Settings to Managed DevOps Pools in Markdown\nDESCRIPTION: A markdown table that maps Azure virtual machine scale set agent pool settings to their equivalent Managed DevOps Pools settings, helping users configure Managed DevOps Pools with similar behavior to their existing scale set agent pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/migrate-from-scale-set-agents.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Scale set agents setting | Managed DevOps Pools setting |\n|------------------|----------------------|\n| Automatically tear down virtual machines after every use | Choose [stateless pools](./configure-scaling.md#stateless-pools) for a fresh agent for every job (Automatically tear down virtual machines after every use), or [stateful pools](./configure-scaling.md#stateful-pools) for persistent agents |\n| Save an unhealthy agent for investigation | Not available in Managed DevOps Pools |\n| Maximum number of virtual machines in the scale set | [Maximum agents](./configure-pool-settings.md#maximum-agents) |\n| Number of agents to keep on standby | Choose [All week scheme](./configure-scaling.md#all-week-scheme) for the same behavior as scale set agents, configure a [flexible schedule](./configure-scaling.md#manual), or choose [Automatic standby agent scheduling](./configure-scaling.md#automatic) |\n| Delay in minutes before deleting excess idle agents | [Grace period for stateful pools](./configure-scaling.md#stateful-pools) |\n| Configure VMs to run interactive tests | [Enable Interactive Mode](./configure-security.md#configure-interactive-mode) |\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Resource Manager Service Endpoint - Azure DevOps CLI - Azure CLI\nDESCRIPTION: This Azure CLI command invokes 'az devops service-endpoint azurerm create' to configure a new Azure Resource Manager service connection. Required parameters include service principal ID, subscription ID and name, and tenant ID; authentication can be managed via secret or certificate. Optional flags allow for organization, project, and certificate path customizations. You must ensure the appropriate secret (AZURE_DEVOPS_EXT_AZURE_RM_SERVICE_PRINCIPAL_KEY) is provided for non-interactive automation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_6\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz devops service-endpoint azurerm create --azure-rm-service-principal-id\\n                                          --azure-rm-subscription-id\\n                                          --azure-rm-subscription-name\\n                                          --azure-rm-tenant-id\\n                                          --name\\n                                          [--azure-rm-service-principal-certificate-path] \\n                                          [--org]\\n                                          [--project]\n```\n\n----------------------------------------\n\nTITLE: Listing All Advanced Security Alerts Across All Branches via Azure DevOps REST API - HTTP\nDESCRIPTION: This HTTP request fetches all Advanced Security alerts for every branch within a specified Azure DevOps repository. Modify the URL with your organization, project, and repository names as needed, and set the URL query parameter criteria.onlyDefaultBranch=false to ensure the results include all branches. Authentication is required, matching the permissions necessary for security alert queries. Responses are in JSON and contain alert details across analyzed branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/ghazdo/sprint-244-update.md#2025-04-22_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET https://advsec.dev.azure.com/{organization}/{project}/_apis/alert/repositories/{repository}/alerts?api-version=7.2-preview.1&criteria.onlyDefaultBranch=false\n```\n\n----------------------------------------\n\nTITLE: Listing Users with Azure DevOps CLI\nDESCRIPTION: CLI command to list users in an Azure DevOps organization with pagination options. This command allows viewing user details including display name, email, license type, access level, and status. It does not apply to users added via Microsoft Entra groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/export-users-audit-log.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops user list [--org] [--skip] [--top]\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Artifacts Configuration\nDESCRIPTION: YAML configuration for publishing build artifacts in Azure Pipelines\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/aspnet/build-aspnet-4.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishPipelineArtifact@1\n  inputs:\n    targetPath: '$(Pipeline.Workspace)'\n    artifact: 'myartifact'\n    publishLocation: 'pipeline'\n```\n\n----------------------------------------\n\nTITLE: Testing SSH Connection to Azure DevOps\nDESCRIPTION: Command to test the SSH connection to Azure DevOps after configuring SSH keys. This verifies that your SSH authentication is properly set up and working.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nssh -T git@ssh.dev.azure.com\n```\n\n----------------------------------------\n\nTITLE: Configuring settings.xml for Authentication in Older Gradle Versions\nDESCRIPTION: Setting up the Maven settings.xml file with credentials for authenticating to Azure Artifacts feed using a personal access token with older Gradle versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/publish-with-gradle.md#2025-04-22_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<server>\n    <id>[FEED_NAME]</id>\n    <username>[ORGANIZATION_NAME]</username>\n    <password>[PERSONAL_ACCESS_TOKEN]</password>\n</server>\n```\n\n----------------------------------------\n\nTITLE: Command Line Task for NuGet Restore in Classic Pipeline\nDESCRIPTION: Command line script used in a Classic pipeline task to execute the NuGet restore operation for a solution. This should be added after configuring the NuGetAuthenticate and NuGetToolInstaller tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/packages/nuget-restore.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnuget.exe restore <SOLUTION_PATH>\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Completion Percentage for Features in Azure DevOps using OData\nDESCRIPTION: This OData query retrieves Feature work items from a specific iteration and area, and calculates the percentage of work completed based on the rollup of completed hours for all tasks linked to the requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview-rollup.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems? \n$filter=( \n    IterationSK eq {iterationSK}\n    and AreaSK eq {areaSK}\n    and WorkItemType eq 'Feature'\n)\n&$expand=Descendants( \n    $apply=filter( CompletedWork ne null or RemainingWork ne null ) \n    /aggregate( \n        iif(CompletedWork ne null, CompletedWork, 0) with sum as SumCompletedWork, \n        iif(RemainingWork ne null, RemainingWork, 0) with sum as SumRemainingWork \n    ) \n    /compute( \n        (SumCompletedWork add SumRemainingWork) as TotalWork, \n        SumCompletedWork as SumCompleted \n    ) \n    /compute( \n        iif(TotalWork gt 0,(SumCompleted div cast(TotalWork, Edm.Double) mul 100), 0) as PercCompletedWork \n    ) \n)\n&$select=WorkItemId, Title\n```\n\n----------------------------------------\n\nTITLE: Setting Ruby Version in VSTS Build Pipeline\nDESCRIPTION: This snippet shows how to set the Ruby version for a build pipeline using the 'Use Ruby Version' task. It allows specifying a version or version range to use from the agent's tool cache.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/may-07-vsts.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: UseRubyVersion@0\n  inputs:\n    versionSpec: '>= 2.4'\n```\n\n----------------------------------------\n\nTITLE: Displaying Service Hooks Namespace Permissions in Azure DevOps\nDESCRIPTION: Command to show detailed information about the Service Hooks security namespace, including all available permission types and their bit values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/view-permission.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n> az devops security permission namespace show --id cb594ebe-87dd-4fc9-ac2c-6a10a4c92046\n```\n\n----------------------------------------\n\nTITLE: Specifying Agent Version in Azure VM Extension using ARM Template - JSON\nDESCRIPTION: This JSON snippet illustrates how to specify a desired Azure Pipelines Agent major version in the properties section of a VM Extension when provisioning VMs for use in Deployment Groups via Azure ARM templates. The key parameter 'AgentMajorVersion' supports the values 'auto', '2', or '3', determining which major agent version is installed on the VM. Dependencies include Azure Resource Manager and appropriate permissions to deploy the VM extension, and constraints may apply based on agent feed availability or required agent features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-223-update.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n    \"properties\": {\n      ...\n      \"settings\": {\n        ...\n        \"AgentMajorVersion\": \"auto|2|3\",\n        ...\n      },\n      ...\n     }\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Historical Field Value in OData\nDESCRIPTION: This query filters work items based on a field having a specific value in its history. It's similar to using the 'Was Ever' operator in work item queries. The example retrieves work items of a specific type that were ever resolved by a particular user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_8\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?\n  $filter=WorkItemType eq '{Type}'\n     and Revisions/any(r:r/ResolvedBy/UserName eq '{User}') \n```\n\n----------------------------------------\n\nTITLE: Referencing Template Parameters in Pipeline File\nDESCRIPTION: Example of a pipeline file that references a template file with parameters, showing how parameter values are passed to the template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/conditions.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n# azure-pipeline.yml\nparameters:\n- name: doThing\n  default: true \n  type: boolean\n\ntrigger:\n- none\n\nextends:\n  template: parameters.yml\n```\n\n----------------------------------------\n\nTITLE: Restoring a Specific npm Package\nDESCRIPTION: Command to restore a specific npm package and save it to the project's dependencies in package.json.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/restore-npm-packages.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save <PACKAGE_NAME>\n```\n\n----------------------------------------\n\nTITLE: Creating Work Items with Azure DevOps CLI\nDESCRIPTION: This command allows you to create a new work item in Azure Boards using the CLI. It requires parameters for the title and type of work item, with multiple optional parameters to customize the work item's properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/add-work-items-cli.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item create --title '<title>' --type '<type>' \n                           [--area]\n                           [--assigned-to]\n                           [--description]\n                           [--discussion]\n                           [--fields]\n                           [--iteration]\n                           [--open]\n                           [--org]\n                           [--project]\n                           [--reason]\n```\n\n----------------------------------------\n\nTITLE: Adding Hub Contribution to Extension Manifest\nDESCRIPTION: Defines a hub contribution in the extension manifest that adds a 'Hello' hub to the Work hub group. Includes the required vso.work scope for accessing work items and specifies the hub's properties like name, order, and URI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-hub-manifest.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": \"Fabrikam.HelloWorld\",\n            \"type\": \"ms.vss-web.hub\",\n            \"description\": \"Adds a 'Hello' hub to the Work hub group.\",\n            \"targets\": [\n                \"ms.vss-work-web.work-hub-group\"\n            ],\n            \"properties\": {\n                \"name\": \"Hello\",\n                \"order\": 99,\n                \"uri\": \"hello-world.html\"\n            }\n        }\n    ],\n    \"scopes\": [\n        \"vso.work\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Fields Consistently Across Processes in Azure DevOps\nDESCRIPTION: Example of defining a custom field 'Foo' consistently across different processes (Process A and Process B) in Azure DevOps. Illustrates the need for consistent field definitions when importing multiple processes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_41\n\nLANGUAGE: XML\nCODE:\n```\nProcess A, Bug.xml:\n<FIELDS>\n  ...\n  <FIELD name=\"Foo\" refname=\"MyCompany.CustomFields.Foo\" type=\"String\" reportable=\"dimension\" />\n  ...\n</FIELDS>\n\nProcess B, Bug.xml:\n<FIELDS>\n  ...\n  <FIELD name=\"Foo\" refname=\"MyCompany.CustomFields.Foo\" type=\"String\" reportable=\"dimension\" />\n  ...\n</FIELDS>\n```\n\n----------------------------------------\n\nTITLE: Creating a new .NET 8 web application using dotnet CLI\nDESCRIPTION: Command to create a new ASP.NET Core web application targeting .NET 8.0 framework using the dotnet CLI. This creates the project files and structure needed for a web application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/dotnet-setup.md#2025-04-22_snippet_0\n\nLANGUAGE: dotnetcli\nCODE:\n```\ndotnet new webapp -f net8.0\n```\n\n----------------------------------------\n\nTITLE: Global List Management Commands for Azure DevOps\nDESCRIPTION: Commands for managing global lists in Azure DevOps, including destroying, exporting, importing, and listing global lists. These commands enable manipulation of pick lists shared across multiple work item types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-customize-and-manage-objects-for-tracking-work.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndestroygloballist\n```\n\nLANGUAGE: bash\nCODE:\n```\nexportgloballist\n```\n\nLANGUAGE: bash\nCODE:\n```\nimportgloballist\n```\n\nLANGUAGE: bash\nCODE:\n```\nlistgloballist\n```\n\n----------------------------------------\n\nTITLE: Searching by Changed Date using @Today Macro\nDESCRIPTION: This snippet demonstrates using the `@Today` macro in Azure DevOps search to filter work items based on date fields. The query `\"Changed Date\"=@Today` finds all work items that were modified today.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_15\n\nLANGUAGE: azure-devops-search\nCODE:\n```\n\"Changed Date\"=@Today\n```\n\n----------------------------------------\n\nTITLE: Installing Go package from subfolder in public Azure Repos Git repository\nDESCRIPTION: These examples show how to install Go packages from subfolders within a public Azure Repos Git repository using go install. It demonstrates the syntax for specifying subfolder paths.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/go-install.md#2025-04-22_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\ngo install dev.azure.com/<organization>/<project>/_git/<repo>.git/subfolder1@<version>\n\ngo install dev.azure.com/<organization>/<project>/_git/<repo>.git/subfolder1/subfolder2@<version>\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary by Branch in Power BI\nDESCRIPTION: Power BI query that retrieves test result summary data grouped by branch name. This query enables filtering test results by specific branches using Power BI slicers, providing a more detailed view of test performance across different branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_4\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/mseng/AzureDevOps/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And DateSK ge {startdate} \"\n      &\"And Workflow eq 'Build'\"\n      &\")/groupby(\"\n      &\"(Branch/BranchName),\"\n      &\"aggregate(\"\n      &\"ResultCount with sum as ResultCount, \"\n      &\"ResultPassCount with sum as ResultPassCount, \"\n      &\"ResultFailCount with sum as ResultFailCount, \"\n      &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n      &\"ResultNotImpactedCount with sum as ResultNotImpactedCount\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Rolling Back a Project to a Specific Date in TFVC\nDESCRIPTION: This command recursively changes the content of OurTeamProject to match the last changeset that was applied on or before midnight on August 31, 2009.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rollback-command-team-foundation-version-control.md#2025-04-22_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nc:\\workspace> tf rollback /toversion:D08/31/2009 /recursive $/OurTeamProject/\n```\n\n----------------------------------------\n\nTITLE: Tracking Clone Status using TCM CLI\nDESCRIPTION: Command to track the status of a test plan clone operation, useful for monitoring large test suite cloning operations that may take considerable time to complete.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_5\n\nLANGUAGE: tcm\nCODE:\n```\ntcm plans /clone\n           /status:cloneoperationid\n           /collection:teamprojectcollectionurl /teamproject:project\n           [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Using @Today Macro in Azure DevOps Work Item Search\nDESCRIPTION: Examples of using the @Today macro to filter work items based on date-related criteria in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\nResolved Date=@Today-1\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nSystem.ChangedDate=@Today-7\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nCreated Date=@Today-1 And Area Path=FabrikamFiber\\Phone Saver\n```\n\n----------------------------------------\n\nTITLE: Configuring Git-tf and Initial Checkin to TFVC\nDESCRIPTION: Configures Git-tf to connect to Azure Repos and performs an initial checkin of the local Git repository to TFVC.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/share-your-code-in-tfvc-xcode.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit tf configure https://fabrikamfiber.visualstudio.com $/FabrikamFiber \ngit tf checkin\n```\n\n----------------------------------------\n\nTITLE: Example of Publishing a Git Repository to Wiki using Azure CLI\nDESCRIPTION: This example shows how to create a code wiki named \"My New Wiki\" from the \"MyRepo\" repository, publishing from the \"/wikis\" folder in the main branch and displaying the result in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/publish-repo-to-wiki.md#2025-04-22_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz devops wiki create --name \"My New Wiki\" --type codewiki --repository MyRepo --mapped-path /wikis --version main --output table\n\nID                                    Name         Type\n------------------------------------  -----------  --------\n77abd847-31ec-45e9-8622-a190df8e5917  My New Wiki  codewiki\n```\n\n----------------------------------------\n\nTITLE: Displaying Organization URL in Azure Pipelines Task (PowerShell)\nDESCRIPTION: This PowerShell snippet demonstrates how to access and display the organization URL provided to an Azure Pipelines task via environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$orgUrl = $env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\nWrite-Host $orgUrl\n```\n\n----------------------------------------\n\nTITLE: Rebasing Branch in Git\nDESCRIPTION: Rebases the current branch onto the history of another branch. This operation rewrites the commit history to create a linear sequence of commits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_29\n\nLANGUAGE: git\nCODE:\n```\ngit rebase branchname\n```\n\n----------------------------------------\n\nTITLE: Updating Secret Variables in Azure DevOps CLI\nDESCRIPTION: Command to update a variable as secret in a variable group with a new value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group variable update --group-id 4\n                                            --name requires-login\n                                            --value false\n                                            --secret true\n                                            --output yaml\n```\n\n----------------------------------------\n\nTITLE: Creating a Pull Request Status Object for Azure DevOps\nDESCRIPTION: Builds the status object to post to a pull request, including state, description, target URL, and context information for categorizing the status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nvar prStatus = {\n    \"state\": \"succeeded\",\n    \"description\": \"Ready for review\",\n    \"targetUrl\": \"https://visualstudio.microsoft.com\",\n    \"context\": {\n        \"name\": \"wip-checker\",\n        \"genre\": \"continuous-integration\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Logging into Azure DevOps Organization using Azure CLI\nDESCRIPTION: Authenticates the Azure CLI session with a specific Azure DevOps organization. Replace `<yourorganizationname>` with the actual name of the target Azure DevOps organization. This step is necessary before running subsequent `az devops` or `az pipelines` commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops login --org https://dev.azure.com/<yourorganizationname>\n```\n\n----------------------------------------\n\nTITLE: Querying Lead and Cycle Time for User Stories by Team Name with OData\nDESCRIPTION: OData query that extracts completed user stories filtered by multiple team names with their lead time and cycle time metrics from Azure DevOps Analytics. This version provides the HTTP request format for team-based filtering.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-leadcycletime.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'User Story'\n            and StateCategory eq 'Completed'\n            and CompletedDate ge {startdate}\n            and (Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname})\n        &$select=WorkItemId,Title,WorkItemType,State,Priority,AreaSK\n            ,CycleTimeDays,LeadTimeDays,CompletedDateSK\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath)\n```\n\n----------------------------------------\n\nTITLE: Viewing Git Policy Details with Azure CLI\nDESCRIPTION: This command allows viewing the details of a specific policy in Azure DevOps repositories. It requires the policy ID and can be configured with various optional parameters like organization and project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy show --id\n                     [--detect {false, true}]\n                     [--org]\n                     [--project]\n                     [--query-examples]\n                     [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests in Pipeline with Power BI\nDESCRIPTION: Power BI query that retrieves failed test results from a specific pipeline. It groups results by test name and container, aggregates test run counts, and calculates pass rates for tests that have at least one failure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_6\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate}) \"\n        &\"/groupby((TestSK, Test/TestName, Test/ContainerName), \"\n        &\"aggregate( \"\n            &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n                &\"ResultFailCount with sum as FailedCount, \"\n            &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n                &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n            &\"ResultFlakyCount with sum as FlakyCount)) \"\n        &\"/filter(FailedCount gt 0) \"\n    &\"/compute( \"\n    &\"iif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Linux/macOS NPM Registry Configuration\nDESCRIPTION: Basic NPM registry configuration for Linux/macOS systems pointing to Azure DevOps Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nregistry=http://<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/\n\nalways-auth=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Visual Studio Services Target\nDESCRIPTION: Example showing how to use the Microsoft.VisualStudio.Services shortcut for Azure DevOps targeting\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a 1 GB Blocking Maximum File Size Policy Example\nDESCRIPTION: Example of creating a 1 GB blocking maximum file size policy in a specific repository using Azure DevOps CLI. This command sets up a policy that prevents files larger than 1 GB from being pushed to the repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy file-size create --blocking true --enabled true --maximum-git-blob-size 10485760 --repository-id d28cd374-e7f0-4b1f-ad60-f349f155d47c --use-uncompressed-size true --output table\n```\n\n----------------------------------------\n\nTITLE: Initializing Work Item Tracking Client in Azure DevOps (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize the work item tracking client using the VSS.require method. It requires the 'VSS/Service' and 'TFS/WorkItemTracking/RestClient' modules to create the client instance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/call-rest-api-js.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nVSS.require([\"VSS/Service\", \"TFS/WorkItemTracking/RestClient\"], function (VSS_Service, TFS_Wit_WebApi) {\n    // Get the REST client\n    var witClient = VSS_Service.getCollectionClient(TFS_Wit_WebApi.WorkItemTrackingHttpClient);\n    // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipeline for Windows-2025 Preview with PowerShell Steps using YAML\nDESCRIPTION: This YAML defines a pipeline job using the Windows-2025 image (in preview) and executes a PowerShell script. The script outputs the Windows product name and OS version using Get-ComputerInfo and the PowerShell version table. Requires Azure DevOps with preview access to the windows-2025 image. The steps run upon job execution and produce host/system information as output. Careful attention should be paid to escape sequences for embedded PowerShell in YAML.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-253-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- job: win2025\\n  pool:\\n    vmImage: 'windows-2025'\\n  steps:\\n  - pwsh: |\\n      Write-Host \\\"(Get-ComputerInfo).WindowsProductName\\\"\\n      Get-ComputerInfo | Select-Object WindowsProductName\\n      Write-Host \\\"`$PSVersionTable.OS\\\"\\n      $PSVersionTable.OS\n```\n\n----------------------------------------\n\nTITLE: Importing Automated Test Cases Using TCM Command-Line Utility\nDESCRIPTION: Command-line syntax for importing automated test cases to a test suite using the TCM utility. The command requires parameters like collection URL, team project, storage path for test assembly, and has optional parameters for specifying priorities, categories, and suite synchronization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/bulk-import-export-test-cases.md#2025-04-22_snippet_0\n\nLANGUAGE: tcm\nCODE:\n```\ntcm testcase /import /collection:teamprojectcollectionurl /teamproject:project\n             /storage:path\n             [/maxpriority:priority]\n             [/minpriority:priority]\n             [/category:filter]\n             [/syncsuite:id [/include]]\n             [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Azure DevOps Feed on Other Systems\nDESCRIPTION: Command to log into Azure DevOps using a Personal Access Token for non-Windows users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/universal-packages/project-setup-universal-packages.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops login --organization https://dev.azure.com/<YOUR_ORGANIZATION_NAME>\n```\n\n----------------------------------------\n\nTITLE: Publishing Extension with Personal Access Token using TFX CLI\nDESCRIPTION: Command to publish an Azure DevOps extension with a personal access token, including an option to share it with a specific account.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/command-line.md#2025-04-22_snippet_3\n\nLANGUAGE: Command\nCODE:\n```\ntfx extension publish --publisher <YOUR_PUBLISHER_ID> --manifest-js <YOUR_EXTENSION_MANIFEST> --share-with <ACCOUNT_NAME>\n```\n\n----------------------------------------\n\nTITLE: Running .NET Core CLI Command as Script in YAML Pipeline\nDESCRIPTION: Example of how to run a .NET Core CLI test command as a direct script in a YAML pipeline. This approach bypasses the DotNetCoreCLI task for simpler commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n# ...\n- script: dotnet test <test-project> \n```\n\n----------------------------------------\n\nTITLE: Defining View Project-Level Information Permission Token in Azure DevOps\nDESCRIPTION: Specifies the security token for the 'View project-level information' permission in Azure DevOps. This permission allows viewing project level group membership and permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, GENERIC_READ\n```\n\n----------------------------------------\n\nTITLE: Markdown Open Queries Include Statement\nDESCRIPTION: Markdown include statement for opening queries section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/organize-queries.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/open-queries.md)]\n```\n\n----------------------------------------\n\nTITLE: Visual Studio 2022 WITADMIN Path\nDESCRIPTION: File path for accessing the witadmin tool in Visual Studio 2022 installations. Supports Community, Professional, and Enterprise editions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/witadmin-run-tool.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n%programfiles(x86)%\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\n```\n\n----------------------------------------\n\nTITLE: Keyword Search in Azure DevOps Work Items\nDESCRIPTION: This example shows a basic keyword search in Azure DevOps. Entering `duplication` finds work items containing this keyword in the Title, Description, or Repro Steps fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_7\n\nLANGUAGE: azure-devops-search\nCODE:\n```\nduplication\n```\n\n----------------------------------------\n\nTITLE: Listing Security Namespaces in Azure DevOps CLI\nDESCRIPTION: Command to list all available security namespaces for an Azure DevOps organization. The command supports an optional --local-only parameter to retrieve only local security namespaces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission namespace list [--local-only]\n```\n\n----------------------------------------\n\nTITLE: Include Directives for Release Notes Content\nDESCRIPTION: Markdown include directives that pull in content from separate files for sprint updates and next steps sections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/ghazdo/sprint-248-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-248-update-links](../includes/ghazdo/sprint-248-update-links.md)]\n\n[!INCLUDE [sprint-248-update](../includes/ghazdo/sprint-248-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Setting Default Azure Region using Azure CLI\nDESCRIPTION: This Azure CLI command configures the default location (region) for subsequent Azure CLI operations. Replace 'westus2' with the desired Azure region name. This simplifies commands by avoiding the need to specify the location each time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/nodejs-tutorial.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz configure --defaults location=westus2\n```\n\n----------------------------------------\n\nTITLE: Creating a Pool with Agent Profile in Azure CLI\nDESCRIPTION: Command to create a managed pool in Azure DevOps with a specified agent profile using the Azure CLI. The agent profile is defined in a JSON file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --agent-profile agent-profile.json\n   # other parameters omitted for space\n```\n\n----------------------------------------\n\nTITLE: SSH Config for Key Exchange Algorithm Compatibility\nDESCRIPTION: SSH configuration to enable older diffie-hellman key exchange algorithms when connecting to Azure DevOps servers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nHost ssh.dev.azure.com vs-ssh.visualstudio.com\n  KexAlgorithms +diffie-hellman-group-exchange-sha256,+diffie-hellman-group14-sha1,+diffie-hellman-group1-sha1\n```\n\n----------------------------------------\n\nTITLE: Generating a Random Suffix for App Service Names in Azure CLI\nDESCRIPTION: Bash command to generate a random number that will be used as a suffix for App Service instance names to ensure uniqueness.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nwebappsuffix=$RANDOM\n```\n\n----------------------------------------\n\nTITLE: Git Pull from Remote Branch with Same Name\nDESCRIPTION: Simplified pull command when the remote repo has a branch with the same name as your current working branch. This automatically pulls from the matching remote branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pulling.md#2025-04-22_snippet_7\n\nLANGUAGE: console\nCODE:\n```\ngit pull <remote repo>\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Duration Trend for Specific Pipeline in OData\nDESCRIPTION: OData query to retrieve pipeline duration trend data for a specific pipeline. It filters runs by pipeline name, completion date, and success status, then computes the 80th percentile duration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration-trend.md#2025-04-22_snippet_4\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelinename}'\n    and CompletedDate ge {startdate}\n    and (SucceededCount eq 1 or PartiallySucceededCount eq 1)\n    )\n/compute(\n    percentile_cont(TotalDurationSeconds, 0.8,BranchSK, CompletedDateSK) as Duration80thPercentileInSeconds)\n/groupby(\n    (Duration80thPercentileInSeconds, Branch/BranchName, CompletedOn/Date))\n&$orderby=CompletedOn/Date asc\n```\n\n----------------------------------------\n\nTITLE: Compiling TypeScript to JavaScript for Azure DevOps Task\nDESCRIPTION: Compiles the index.ts file to index.js using the TypeScript compiler, preparing the task for execution in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_9\n\nLANGUAGE: PowerShell\nCODE:\n```\ntsc\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Sources for Organization-scoped Feed in XML\nDESCRIPTION: XML configuration for nuget.config file that connects to an organization-scoped feed in Azure DevOps. This file should be placed in the same folder as your project or solution file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/restore-nuget-packages-dotnet.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<FEED_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Configuring Dev Center Project in ARM Template\nDESCRIPTION: This JSON snippet shows how to specify the Dev Center project for a Managed DevOps Pool using an ARM template. It uses the 'devCenterProjectResourceId' property to set the project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"location\": \"eastus\",\n            \"tags\": {},\n            \"properties\": {\n                ...\n                \"devCenterProjectResourceId\": \"/subscriptions/subscription_id_placeholder/resourceGroups/fabrikam-managed-devops-pools/providers/Microsoft.DevCenter/projects/fabrikam-dev-center-project\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Performing Git Rebase Between Branches via Command Line\nDESCRIPTION: Command to rebase a target branch with changes from a source branch. This integrates commits from the source branch into the target branch, preserving a linear history.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pulling.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ngit rebase <source branch name> <target branch name>\n```\n\n----------------------------------------\n\nTITLE: Contributing a Custom Hub to Azure Repos\nDESCRIPTION: JSON configuration example showing how to contribute a custom hub to the Azure Repos Code hub group. This sample demonstrates the required structure and properties for extending Azure DevOps navigation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/reference/targets/overview.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    ...\n    \"contributions\": [\n        {\n            \"id\": \"my-custom-hub\",\n            \"type\": \"ms.vss-web.hub\",\n            \"targets\": [\n                \"ms.vss-code-web.code-hub-group\"\n            ],\n            \"properties\": {\n                \"name\": \"Code Hub\",\n                \"order\": 30,\n                \"uri\": \"/views/code/custom.html\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Remote Branch Using Git Command Line\nDESCRIPTION: Command to delete a remote Git branch using the git push command with the --delete option. This removes the branch from the remote repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/delete-git-branch.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit push origin --delete <branch_name>\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple PowerShell Module Function\nDESCRIPTION: A basic PowerShell function that outputs 'Hello World!' to demonstrate module creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nFunction PowerShell-Demo{\n    Write-Host \"Hello World!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Data Access Errors in Azure DevOps Extension\nDESCRIPTION: This JavaScript snippet demonstrates how to handle data access errors when using the extension data service in Azure DevOps, particularly for non-member users who may have limited access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/public-project.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nVSS.getService(VSS.ServiceIds.ExtensionData).then(function(dataService) {\n    dataService.getValue(\"someKey\").then(function(value) {\n         // do something with the value\n    }, function(error) {\n       if (error.name === \"AccessCheckException\") {\n           alert(error.message);\n       }\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Power BI OData Query Options for Azure DevOps Analytics\nDESCRIPTION: This code snippet shows the configuration options to set in Power BI's Advanced Editor when connecting to Azure DevOps Analytics via OData. It specifies the OData version and instructs the service to omit null values for improved performance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/odataquery-connect.md#2025-04-22_snippet_1\n\nLANGUAGE: powerquery\nCODE:\n```\n[Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resources in a Specific Group using Azure CLI\nDESCRIPTION: This Azure CLI command lists all resources within the Azure resource group specified by `<resource-group-name>`. The `--output table` argument formats the output for easy reading. This is used to verify resource deployment within the specified group after a Bicep deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz resource list --resource-group <resource-group-name> --output table\n```\n\n----------------------------------------\n\nTITLE: Removing Invalid Valid Users Group Membership\nDESCRIPTION: SQL command to remove nongroup identities from Valid Users groups by updating group membership in the configuration database.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_11\n\nLANGUAGE: sql\nCODE:\n```\nDECLARE @p6 dbo.typ_GroupMembershipTable\n\nINSERT into @p6 values('{GroupSid}','Microsoft.TeamFoundation.Identity','{MemberId}',0)\n \nEXEC prc_UpdateGroupMembership @partitionId=1,@scopeId='{ScopeId}',@idempotent=1,@incremental=1,@insertInactiveUpdates=0,@updates=@p6,@eventAuthor='9EE20697-5343-43FC-8FC5-3D5D455D21C5',@updateGroupAudit=0\n```\n\n----------------------------------------\n\nTITLE: Storage Profile Configuration in Azure CLI\nDESCRIPTION: JSON configuration for storage profile used with Azure CLI command to create a pool with a 10GB Standard_LRS data disk.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-storage.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vmss\": {\n    \"sku\": {...},\n    \"images\": [...],\n    \"osProfile\": {...},\n    \"storageProfile\": {\n      \"osDiskStorageAccountType\": \"Standard\",\n      \"dataDisks\": [\n        {\n          \"diskSizeGiB\": 10,\n          \"caching\": \"None\",\n          \"storageType\": \"Standard_LRS\",\n          \"driveLetter\": \"Q\"\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User License Type in Azure DevOps CLI\nDESCRIPTION: Command to update a user's license type in Azure DevOps. Shows how to change a user's license to stakeholder and display results in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/add-organization-users.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops user update --license-type stakeholder --user contoso@contoso.com --output table\n```\n\n----------------------------------------\n\nTITLE: Downloading Specific Files from Project-Scoped Feed\nDESCRIPTION: Azure CLI command to download specific files from a Universal Package in a project-scoped feed. It uses the --file-filter parameter to specify which files to download based on a match pattern.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/download-universal-packages.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz artifacts universal download --organization https://dev.azure.com/<YOUR_ORGANIZATION_NAME> --project <PROJECT_NAME> --scope project --feed <FEED_NAME> --name <PACKAGE_NAME> --version <PACKAGE_VERSION> --path <DOWNLOAD_PATH> --file-filter <MATCH_PATTERN>\n```\n\n----------------------------------------\n\nTITLE: Destroying Files While Retaining History in TFVC\nDESCRIPTION: This command destroys all files in a folder while retaining their history. It uses the /keephistory option to preserve historical information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/destroy-version-controlled-files.md#2025-04-22_snippet_2\n\nLANGUAGE: Batch\nCODE:\n```\ntf destroy /keephistory $/MyTeamProject/aFolder\n```\n\n----------------------------------------\n\nTITLE: Git Pull Using Origin Alias\nDESCRIPTION: Simplest form of the pull command utilizing the 'origin' alias that is automatically created when cloning a repository. This pulls from the default remote branch matching your current branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pulling.md#2025-04-22_snippet_8\n\nLANGUAGE: console\nCODE:\n```\ngit pull\n```\n\n----------------------------------------\n\nTITLE: Querying Task-wise Pipeline Failures in Power BI\nDESCRIPTION: Power BI query to analyze task-wise failures in a specific pipeline. Groups failure counts by date and task name for failed pipeline runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-stagewise-failures.md#2025-04-22_snippet_1\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and PipelineRunCompletedOn/Date ge {startdate} \"\n                &\"and PipelineRunOutcome eq 'Failed' \"\n        &\"and TaskOutcome eq 'Failed' \"\n        &\") \"\n            &\"/groupby( \"\n                &\"(PipelineRunCompletedOn/Date, TaskDisplayName), \"\n                &\"aggregate \"\n            &\"(FailedCount with sum as FailedCount)) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Filtering User Stories by Board Column (Not Done) in Azure DevOps Query\nDESCRIPTION: This set of query clauses filters work items to show only 'User Story' types that are currently in the 'Code' column on the board and are not marked as done (Board Column Done is False). It requires the Board Column and Board Column Done fields to be available.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_12\n\nLANGUAGE: azure-devops-query\nCODE:\n```\n`      Work Item Type = User Story`  \n`And` `Board Column = Code`   \n`And` `Board Column Done  = False`\n```\n\n----------------------------------------\n\nTITLE: Configuring Cargo Credential Provider for macOS\nDESCRIPTION: TOML configuration to add to ~/.cargo/config.toml to set up a credential provider for Cargo on macOS. This configures global credential providers to use both token and macOS Keychain.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[registry]\nglobal-credential-providers = [\"cargo:token\", \"cargo:macos-keychain\"]\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps CLI Extension (Bash)\nDESCRIPTION: YAML configuration for adding the Azure DevOps extension to an existing Azure CLI installation using Bash commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\n# Install Azure DevOps extension\n- bash: az extension add -n azure-devops\n  displayName: 'Install Azure DevOps extension'\n\n# Now you can make calls into Azure DevOps CLI\n# ...\n```\n\n----------------------------------------\n\nTITLE: Azure Boards Sign In Command\nDESCRIPTION: Command used to initiate sign-in to Azure Boards in Microsoft Teams as part of authentication troubleshooting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-teams.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n@azure boards signin\n```\n\n----------------------------------------\n\nTITLE: Generating Drift Report for Azure SQL Database Using SQLPackage\nDESCRIPTION: This command line instruction uses SQLPackage.exe to create an XML report of changes made to a registered Azure SQL Database since it was last registered. It requires the target server details and output path for the report.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_12\n\nLANGUAGE: Command Line\nCODE:\n```\nSqlPackage.exe /Action:DriftReport /TargetServerName:\"DemoSqlServer.database.windows.net.placeholder\" /TargetDatabaseName:\"Testdb\"\n/TargetUser:\"ajay\" /TargetPassword:\"SQLPassword\" /OutputPath:\"C:\\temp\\driftReport.xml\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Field with witadmin\nDESCRIPTION: Command to permanently delete a work item field from a collection. Requires confirmation before deletion is executed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nwitadmin deletefield /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:RefName\n```\n\n----------------------------------------\n\nTITLE: Exporting Work Item Type Definition with witadmin\nDESCRIPTION: Command to export the work item type definition XML file using the witadmin tool. Requires CollectionURL, Project name, and TypeName parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/configure-workitemform-extensions.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwitadmin exportwitd /collection:CollectionURL /p:Project /n:TypeName /f:FileName\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Azure DevOps Pipeline Task\nDESCRIPTION: PowerShell commands to compile TypeScript and run Mocha unit tests for an Azure DevOps pipeline task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_17\n\nLANGUAGE: PowerShell\nCODE:\n```\ntsc\nmocha tests/_suite.js\n```\n\n----------------------------------------\n\nTITLE: Configuring Organization Profile for Managed DevOps Pool\nDESCRIPTION: JSON configuration for the organization profile, specifying Azure DevOps organization access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"AzureDevOps\": {\n    \"organizations\": [\n      {\n        \"url\": \"https://dev.azure.com/<organization-name>\",\n        \"projects\": [],\n        \"parallelism\": 1\n      }\n    ],\n    \"permissionProfile\": {\n      \"kind\": \"CreatorOnly\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing VSTest Console Parallel Switch Documentation\nDESCRIPTION: This code snippet shows how to reference the documentation for the parallel switch option in VSTest console. It uses a markdown link format to point to the relevant documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/parallel-testing-vstest.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[/parallel switch](/visualstudio/test/vstest-console-options)\n```\n\n----------------------------------------\n\nTITLE: Accessing OAuth Token in Azure DevOps Pipeline\nDESCRIPTION: Example showing how to access the Azure DevOps OAuth token in a PowerShell script to authenticate with the Azure DevOps REST API. The token must be explicitly mapped into the task using the env section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- powershell: |\n    $url = \"$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/definitions/$($env:SYSTEM_DEFINITIONID)?api-version=4.1-preview\"\n    Write-Host \"URL: $url\"\n    $pipeline = Invoke-RestMethod -Uri $url -Headers @{\n      Authorization = \"Bearer $env:SYSTEM_ACCESSTOKEN\"\n    }\n    Write-Host \"Pipeline = $($pipeline | ConvertTo-Json -Depth 100)\"\n  env:\n    SYSTEM_ACCESSTOKEN: $(system.accesstoken)\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Service Connection Created Event in Azure DevOps\nDESCRIPTION: JSON payload structure for the serviceendpoint.created event in Azure DevOps. Includes details about the newly created service connection and project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_29\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"publisherId\": \"azure-devops\",\n    \"eventId\": \"serviceendpoint.created\",\n    \"resource\": {\n        \"serviceEndpoint\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000service-connection-id\",\n            \"name\": \"service-connection-name\",\n            \"type\": \"service-connection-type\",\n            \"url\": \"service-connection-url\",\n            \"project\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n                \"name\": \"project-name\"\n            }\n        }\n    },\n    \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Scenarios for Team/Group Recipient Expansion Logic\nDESCRIPTION: Illustrates how Azure DevOps expands team and group memberships to determine notification recipients using specific scenarios. It covers cases involving members with 'Do not deliver' preference, 'Deliver to individual members' preference, nested groups, and Microsoft Entra groups (which are not expanded). Symbols `I`, `T`, `A` represent individual users, nested teams/groups, and Azure AD groups, respectively.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/concepts-email-recipients.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n| Scenario | Example |\n|--|--|\n| A member with _Do not deliver_ preference | The team has members \\`I1\\`, \\`I2\\`, and \\`T1\\`. \\`T1\\`'s delivery preference is _Do not deliver_. What happens: only \\`I1\\` and \\`I2\\` get notified via their preferred email addresses. Members of \\`T1\\` aren't notified. |\n| A member with _Deliver to individual members_ preference | The team has members \\`I1\\`, \\`I2\\`, and \\`T1\\`. \\`T1\\`'s delivery preference is _Deliver to individual members_. \\`T1\\` has members \\`I2\\` and \\`I3\\`. What happens: \\`T1\\` is expanded (because of its delivery preference) and so \\`I1\\`, \\`I2\\`, and \\`I3\\` get notified via their preferred email addresses. |\n| A nested group | The team has members \\`I1\\`, \\`I2\\`, and \\`T1\\`. \\`T1\\` has members \\`I2\\`, \\`I3\\`, and \\`T2\\`. \\`T1\\`'s delivery preference is _Do not deliver_. \\`T2\\` has members \\`I4\\` and \\`I5\\`. \\`T2\\`'s delivery preference is _Deliver to individual members_. What happens: because \\`T1\\` isn't expanded (because its delivery preference is \\\"do not deliver\\\"), only \\`I1\\` and \\`I2\\` get notified via their preferred email addresses. |\n| A member that's a Microsoft Entra group | The team has members \\`I1\\`, \\`I2\\`, and \\`A1\\`. What happens: only \\`I1\\` and \\`I2\\` get notified via their preferred email addresses. Members of \\`A1\\` don't get notified, as Azure DevOps doesn't expand AD groups when delivering notifications. |\n```\n\n----------------------------------------\n\nTITLE: Creating a Shelveset with File Pattern and Recursion\nDESCRIPTION: This example creates a shelveset named 'HelloWorld_TestMe' that includes all pending changes to C# files in the C:\\projects folder and its subfolders using the /recursive option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelve-command.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects> tf shelve HelloWorld_TestMe c:\\projects\\*.cs /recursive\n```\n\n----------------------------------------\n\nTITLE: Showing Pull Request Details with Azure CLI\nDESCRIPTION: Command syntax for displaying details of a specific pull request using Azure DevOps CLI, including optional parameters for organization settings and output formatting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/view-pull-requests.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr show --id\n                 [--detect {false, true}]\n                 [--open]\n                 [--org]\n                 [--query-examples]\n                 [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Accessing NuGet Package API Endpoint for Collection Scoped Feed in Azure DevOps Server\nDESCRIPTION: HTTP endpoint URL pattern for promoting NuGet packages in a collection scoped feed on an on-premises Azure DevOps Server. This endpoint works with Azure DevOps Server 2022.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_12\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://{instance}/{collection}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: Filtering Closed Tasks by Target Date vs. Closed Date in Azure DevOps Query (WIQL)\nDESCRIPTION: This Azure DevOps query clause filters work items (typically Tasks) that are in the 'Closed' state and where the 'Target Date' is on or before the 'Closed Date'. It uses the '<=[Field]' comparison operator to compare two date/time fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-field-value.md#2025-04-22_snippet_2\n\nLANGUAGE: wiql\nCODE:\n```\nTarget Date <=[Field] Closed Date State = Closed\n```\n\n----------------------------------------\n\nTITLE: Logging Organization-Level Pipeline Setting Changes - Azure DevOps - JSON\nDESCRIPTION: Demonstrates the structure of an audit log event generated when an organization-level Azure Pipelines setting is modified. The JSON object records the action identifier and details of the change, clarifying what property was altered and its previous and new values. No additional dependencies are required, and key parameters include 'ActionId' (identifying the type of action) and 'Details' (describing the specific configuration change). Input is internal system logging; output is a structured JSON event compliant with Azure DevOps audit logging. Usage is limited to Azure DevOps environments that support these audit features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-221-update.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\\n  \\\"ActionId\\\": \\\"Pipelines.OrganizationSettings\\\"\\n}\n```\n\nLANGUAGE: JSON\nCODE:\n```\n{\\n  \\\"ActionId\\\": \\\"Pipelines.OrganizationSettings\\\",\\n  \\\"Details\\\": \\\"Pipelines setting \\\"EnforcesettableVar\\\" changed from \\\"True\\\" to \\\"False\\\" at organization level.\\\"\\n}\n```\n\n----------------------------------------\n\nTITLE: Hard Reset to Specific Commit\nDESCRIPTION: Command to reset a branch to a specific previous commit and discard all subsequent changes using Git reset with commit ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/undo.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ngit reset --hard <commit ID>\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Default Settings\nDESCRIPTION: Command to set the default organization and project for Azure DevOps commands. This eliminates the need to specify these parameters with each command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/prerequisites-cli.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz devops configure --defaults organization=https://dev.azure.com/your-organization project=your-project\n```\n\n----------------------------------------\n\nTITLE: API Rate Limit Response Headers\nDESCRIPTION: HTTP response headers returned by Azure DevOps API to indicate rate limiting status and remaining quota.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/rate-limits.md#2025-04-22_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nRetry-After: <seconds>\\nX-RateLimit-Resource: <resource>\\nX-RateLimit-Delay: <seconds>\\nX-RateLimit-Limit: <limit>\\nX-RateLimit-Remaining: <remaining>\\nX-RateLimit-Reset: <unix_epoch_time>\n```\n\n----------------------------------------\n\nTITLE: Creating Python Package Distributions\nDESCRIPTION: Command to create source and wheel distributions for the Python package that will be published.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/python-cli.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython setup.py sdist bdist_wheel\n```\n\n----------------------------------------\n\nTITLE: Azure Key Vault Public Network Access Error Message\nDESCRIPTION: Error message that appears when attempting to access an Azure Key Vault with disabled public access without proper private endpoint or trusted service configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nPublic network access is disabled and request is not from a trusted service nor via an approved private link.\n```\n\n----------------------------------------\n\nTITLE: Starting the Node.js PR Status Server\nDESCRIPTION: Starts the Node.js application that listens for webhook events and processes pull request statuses.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode app.js\n```\n\n----------------------------------------\n\nTITLE: Adding Work Item Types to Bug Category in XML Process Template\nDESCRIPTION: XML configuration example showing how to add new Work Item Types 'Service Bug' and 'Feedback' to the Bug Category definition. This allows these WITs to be treated as bugs within Azure DevOps project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_17\n\nLANGUAGE: XML\nCODE:\n```\n<CATEGORY name=\"Bug Category\" refname=\"Microsoft.BugCategory\">  \n   <DEFAULTWORKITEMTYPE name=\"Bug\" />  \n   <WORKITEMTYPE name=\"Service Bug\" />  \n   <WORKITEMTYPE name=\"Feedback\" />  \n</CATEGORY>\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Azure DevOps Organization in ARM Template\nDESCRIPTION: This JSON snippet demonstrates how to configure a Managed DevOps Pool for a single Azure DevOps organization using an ARM template. It sets the organization URL and parallelism.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                ...\n                \"organizationProfile\": {\n                    \"organizations\": [\n                        {\n                            \"url\": \"https://dev.azure.com/fabrikam-tailspin\",\n                            \"projects\": [],\n                            \"parallelism\": 4\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Resetting Permission Bits with Azure DevOps CLI\nDESCRIPTION: Command syntax for resetting specific permission bits for a user or group. Required parameters include namespace ID, permission bit to reset, subject, and token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission reset --id\n                                    --permission-bit\n                                    --subject\n                                    --token\n```\n\n----------------------------------------\n\nTITLE: Creating a Shelveset with Owner Reassignment\nDESCRIPTION: This example creates a new shelveset named 'Reflector_BuddyTest', assigns ownership to the user 'Pat', and uses the /move option to undo pending changes after shelving.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelve-command.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects> tf shelve Reflector_BuddyTest;Pat /move\n```\n\n----------------------------------------\n\nTITLE: Executing Re-IndexingRepository.ps1 Script in PowerShell\nDESCRIPTION: This PowerShell script reindexes a Git or TFVC repository. It requires several input parameters including the database information, repository type, collection name, and repository name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/manage-search.md#2025-04-22_snippet_4\n\nLANGUAGE: PowerShell\nCODE:\n```\nRe-IndexingRepository.ps1\n```\n\n----------------------------------------\n\nTITLE: Listing Banners with Azure CLI in Azure DevOps\nDESCRIPTION: This command lists all defined banners in Azure DevOps using the Azure CLI. It shows how to use the command without additional parameters to get JSON output.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-banners.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops admin banner list\n```\n\n----------------------------------------\n\nTITLE: Interactive Rebasing to Remove Large Binary Commits\nDESCRIPTION: Use git rebase with the interactive flag to modify commit history. This command starts an interactive session where specific commits can be removed from history.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/remove-binaries.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit rebase -i <SHA hash of desired new current branch>\n```\n\n----------------------------------------\n\nTITLE: Checking Git Repository Size Using count-objects Command\nDESCRIPTION: Command line example showing how to retrieve the size of a Git repository using git count-objects with verbose and human-readable output flags. The output shows various repository statistics including the total size in the size-pack field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/limits.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nD:\\my-repo>git count-objects -vH\n\ncount: 482\nsize: 551.67 KiB\nin-pack: 100365\npacks: 25\nsize-pack: 642.76 MiB   <-- size of repository\nprune-packable: 83\ngarbage: 0\nsize-garbage: 0 bytes\n```\n\n----------------------------------------\n\nTITLE: Publishing .NET Project using dotnet CLI (Shell)\nDESCRIPTION: This command publishes the specified .NET project (`ADOGenerator.csproj`) for deployment. `-c Release` specifies the Release build configuration. `-r win-x64` targets the Windows 64-bit runtime. `--self-contained` creates an application that includes the .NET runtime, so it doesn't need to be pre-installed on the target machine. The output will be placed in a publish directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/demo-gen/configure.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndotnet publish src/ADOGenerator/ADOGenerator.csproj -c Release -r win-x64 --self-contained\n```\n\n----------------------------------------\n\nTITLE: Displaying Pool Creation Error Codes in Markdown Table\nDESCRIPTION: A markdown table showing error codes and descriptions for common pool creation failures in Managed DevOps Pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/troubleshooting.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Error code | Description |\n|-------|------------------|\n| `PoolProvisioningFailed` | [Pool creation failure due to Azure DevOps organization permissions](#pool-creation-failure-due-to-azure-devops-organization-permissions) |\n| `UnauthorizedAccessToVirtualNetwork` | [Pool creation failure due to VNet permissions](#pool-creation-failure-due-to-vnet-permissions) |\n```\n\n----------------------------------------\n\nTITLE: Setting Azure DevOps Agent Configuration Environment Variable\nDESCRIPTION: Demonstrates how to set an environment variable for agent configuration instead of using a command-line parameter. This example shows setting the password using an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/unattended-config.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nVSTS_AGENT_INPUT_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Configuring Key Vault Integration in ARM Template (JSON)\nDESCRIPTION: This JSON snippet within an ARM template configures Azure Key Vault integration for a Managed DevOps Pool. It defines the `secretsManagementSettings` within `properties.fabricProfile.osProfile`, specifying the `certificateStoreLocation`, the Key Vault URIs of the certificates to observe (`observedCertificates`), and whether the keys are exportable (`keyExportable`). Requires the pool identity to have 'Key Vault Secrets User' role.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n            ...\n            \"fabricProfile\": {\n                \"sku\": {...},\n                \"images\": [...],\n                \"osProfile\": {\n                    \"secretsManagementSettings\": {\n                        \"certificateStoreLocation\": \"LocalMachine\",\n                        \"observedCertificates\": [\n                            \"https://<keyvault-uri>/secrets/<certificate-name>\"\n                        ],\n                        \"keyExportable\": false\n                    }\n                },\n                \"storageProfile\": {...},\n                \"kind\": \"Vmss\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Running witadmin Command to Import a Work Item Type Definition\nDESCRIPTION: This command imports work item types from an XML definition file into a project. It can create new work item types or overwrite existing ones. Includes an option to validate XML without importing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin importwitd /collection:CollectionURL [/p:Project] /f:FileName [/e:Encoding] [/v]\n```\n\n----------------------------------------\n\nTITLE: Selecting Specific Work Item Fields in Azure DevOps Analytics\nDESCRIPTION: OData query that returns specific work item properties (WorkItemId, WorkItemType, Title, and State) for the top three work items in a project. This demonstrates the $select and $top query options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_4\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam Fiber/_odata/v4.0-preview/WorkItems?$select=WorkItemId,WorkItemType,Title,State&$top=3\n```\n\n----------------------------------------\n\nTITLE: Opening a Specific Wiki using Azure DevOps CLI\nDESCRIPTION: Example command that opens a wiki named 'myprojectwiki' in the default web browser.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/includes/open-wiki-hub.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki show --wiki myprojectwiki --open\n```\n\n----------------------------------------\n\nTITLE: Displaying Git Checkout Error Log in Azure DevOps Pipeline\nDESCRIPTION: This log snippet shows a typical Git checkout error in an Azure DevOps pipeline. It indicates that the specified Git repository either doesn't exist or the user lacks necessary permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/azure-repos-git.md#2025-04-22_snippet_3\n\nLANGUAGE: log\nCODE:\n```\nremote: TF401019: The Git repository with name or identifier XYZ does not exist or you do not have permissions for the operation you are attempting.\nfatal: repository 'XYZ' not found\n##[error] Git fetch failed with exit code: 128\n```\n\n----------------------------------------\n\nTITLE: Counting Work Items by Type using OData Grouping\nDESCRIPTION: This OData query uses the groupby clause with the $apply extension to count work items grouped by their type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $apply=groupby((WorkItemType), aggregate($count as Count))\n```\n\n----------------------------------------\n\nTITLE: Querying User Stories with Related Links using OData in Azure DevOps\nDESCRIPTION: OData query that retrieves user stories that are not closed and belong to specific teams. The query includes related work items and selects specific fields including ID, title, type, state, and more.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'User Story'\n            and State ne 'Closed'\n            and (Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname})\n        &$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames,AreaSK\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\n                Links(\n                    $filter=LinkTypeName eq 'Related'\n                        and TargetWorkItem/WorkItemType eq 'User Story';\n                    $select=LinkTypeName;\n                    $expand=TargetWorkItem($select=WorkItemType,WorkItemId,Title,State)\n                )\n```\n\n----------------------------------------\n\nTITLE: Executing ExtensionInstallIndexingStatus.ps1 Script in PowerShell\nDESCRIPTION: This PowerShell script checks the indexing status after Search is configured or the extension is installed for a collection. It requires administrative privileges and several input parameters related to the Azure DevOps Server databases and collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/manage-search.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nExtensionInstallIndexingStatus.ps1\n```\n\n----------------------------------------\n\nTITLE: Validating Collection and Saving Process Templates (cmdline)\nDESCRIPTION: This command runs the `Migrator` tool's `validate` action with the `/SaveProcesses` parameter. In addition to performing validation checks specified by the collection URL (`/collection:`), tenant domain name (`/tenantDomainName:`), and target Azure region (`/region:`), it extracts the process template XML definition for each team project into a zip file located in the logs folder. This is useful for manual inspection and modification of process templates to fix validation errors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-validate.md#2025-04-22_snippet_2\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator validate /collection:{collection URL} /tenantDomainName:{name} /region:{region} /SaveProcesses \n```\n\n----------------------------------------\n\nTITLE: Defining Basic Extension Manifest in JSON\nDESCRIPTION: This snippet shows the basic structure of the vss-extension.json file, which defines the extension's metadata, including its ID, version, name, and description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/service-endpoints.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n\"manifestVersion\": 1,\n  \"id\": \"service-endpoint-tutorial\",\n  \"version\": \"0.1.1\",\n  \"name\": \"Sample extension that leverages a service endpoint\",\n  \"description\": \"A sample Azure DevOps extension which shows how to create a custom endpoint and dynamic build task parameters taking value from a REST API.\",\n  \"publisher\": \"francistotten\",\n  \"targets\": [\n    {\n      \"id\": \"Microsoft.VisualStudio.Services\"\n    }\n  ],  \n  \"files\": [\n    {\n      \"path\": \"BuildTaskFolder\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Git Checkout Configuration with Tag Control - YAML\nDESCRIPTION: YAML configuration for the checkout task with the new fetchTags option to control tag synchronization behavior.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-209-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self  # self represents the repo where the initial Pipelines YAML file was found\n  clean: boolean  # whether to fetch clean each time\n  fetchTags: boolean # whether to sync the tags\n  fetchDepth: number  # the depth of commits to ask Git to fetch\n  lfs: boolean  # whether to download Git-LFS files\n  submodules: boolean | recursive  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules\n  path: string  # path to check out source code, relative to the agent's build directory (e.g. \\_work\\1)\n  persistCredentials: boolean  # set to 'true' to leave the OAuth token in the Git config after the initial fetch\n```\n\n----------------------------------------\n\nTITLE: Accessing NuGet Package API Endpoint for Organization Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting NuGet packages in an organization scoped feed using the REST API. This requires a PATCH request with JSON Patch document to append the desired view to the package's views array.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_0\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Azure DevOps Prerequisites\nDESCRIPTION: Markdown table defining the prerequisites for using rollup functionality in Azure DevOps, including permissions, access levels, and technical requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/display-rollup.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Permissions** | To view delivery plans and rollup progress: Member of the **Project Collection Valid Users Group**. |\n| **Access levels** | One of the following access levels assigned: <br> - [**Basic:**](../../organizations/security/access-levels.md) Full access to all Azure Boards features, including viewing and modifying work items. <br> - **Stakeholder:** View and modify work items with limited features. |\n| **Use parent-child links** | Work items linked using parent-child relationships to support rollup. |\n| **Add required fields** | The fields you want to roll up are present in the work item types. |\n```\n\n----------------------------------------\n\nTITLE: Creating Wiki Page with Content Example\nDESCRIPTION: Example command for creating a wiki page with inline content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page create --path 'my page' --wiki myprojectwiki --content \"Hello World\"\n```\n\n----------------------------------------\n\nTITLE: Example: Updating Security Group Name\nDESCRIPTION: Example showing how to change a security group's name to 'Management Team' and display the result in YAML format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group update --id vssgp.Uy0xLTktMTU1MTM3NDI0NS0xODI5NDgwMzA1LTEzNjM2MTczNTEtMjI0NzE1OTUyMC03ODEzNDk2MjItMS0zNDU1MDI4NTE4LTI5Nzg5OTAxNTYtMjI4OTU2NzYyOS0xOTM2NDU3NTYw --name \"Management Team\" --output yaml\n```\n\n----------------------------------------\n\nTITLE: Token Validation in .NET Framework\nDESCRIPTION: C# code demonstrating how to validate JWT tokens issued by Azure DevOps extensions using System.IdentityModel.Tokens.Jwt package in .NET Framework.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/auth.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.IdentityModel.Tokens.Jwt;\nusing Microsoft.IdentityModel.Tokens;\n\nnamespace TokenSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string secret = \"\"; // Load your extension's secret\n            string issuedToken = \"\"; // Token you are validating\n                \n            var validationParameters = new TokenValidationParameters()\n            {\n                IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(secret)),\n                ValidateIssuer = false,\n                RequireSignedTokens = true,\n                RequireExpirationTime = true,\n                ValidateLifetime = true,\n                ValidateAudience = false,\n                ValidateActor = false\n            };\n\n            SecurityToken token = null;\n            var tokenHandler = new JwtSecurityTokenHandler();\n            var principal = tokenHandler.ValidateToken(issuedToken, validationParameters, out token);\n            \n            // Use the principal object as needed\n            Console.WriteLine(principal.Identity.Name);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Executing WITAdmin Import Command\nDESCRIPTION: Command line example showing how to import a modified work item type definition using the witadmin tool\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-wit.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nwitadmin importwitd /collection:CollectionURL /p:ProjectName /f:\"DirectoryPath/FileName.xml\"\n```\n\n----------------------------------------\n\nTITLE: Formatting HTML Fields in CSV for Azure DevOps Import\nDESCRIPTION: This CSV snippet demonstrates how to structure a work item entry for import into Azure DevOps when dealing with fields that support HTML rich text formatting, like the 'Description' field. HTML tags (e.g., `<p>`, `<strong>`, `<em>`, `<u>`) are included directly within the quoted field value to preserve formatting upon import. Note the use of `&nbsp;` for non-breaking spaces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/import-work-items-from-csv.md#2025-04-22_snippet_3\n\nLANGUAGE: csv\nCODE:\n```\nWork Item Type,Title,Description\n\"Product Backlog Item\",\"Hello World Web Site - 8\",\"<p><strong>&nbsp;You can include bold text</strong></p><p><em>&nbsp;And italic text</em></p><p><u>&nbsp;Underline text</u></p>\"\n```\n\n----------------------------------------\n\nTITLE: Querying Lead and Cycle Time for User Stories by Area Path in Power BI\nDESCRIPTION: Power BI query that retrieves completed user stories filtered by area path with their lead time and cycle time metrics from Azure DevOps Analytics. It selects relevant fields including work item details, timing metrics, and related entities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-leadcycletime.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'User Story' \"\n            &\"and StateCategory eq 'Completed' \"\n            &\"and CompletedDate ge {startdate} \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,Priority,AreaSK \"\n            &\",CycleTimeDays,LeadTimeDays,CompletedDateSK \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Using Checkout Command Syntax in TFVC\nDESCRIPTION: The basic syntax for the TFVC checkout/edit command, showing all available parameters including options for locking, recursion, encoding, and authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/checkout-or-edit-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf checkout [/lock:(none|checkin|checkout)] [/recursive] [/encoding:encoding] itemspec [/login: username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Listing Available Azure Regions using Azure CLI\nDESCRIPTION: This Azure CLI command lists all available Azure regions for the logged-in subscription, displaying the internal name and display name in a table format. This helps users select an appropriate region for resource deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/nodejs-tutorial.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz account list-locations \\\n  --query \"[].{Name: name, DisplayName: displayName}\" \\\n  --output table\n```\n\n----------------------------------------\n\nTITLE: First Working Square Root Implementation in C#\nDESCRIPTION: Initial working implementation of the square root calculation using iterative estimation approach.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-write-new-code-user-story.md#2025-04-22_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\npublic class LocalMath\n{\n    public double SquareRoot(double x)\n    {\n        double estimate = x;\n        double previousEstimate = -x;\n        while (System.Math.Abs(estimate - previousEstimate) > estimate / 1000)\n        {\n            previousEstimate = estimate;\n            estimate = (estimate * estimate - x) / (2 * estimate);\n        }\n        return estimate;\n    }\n```\n\n----------------------------------------\n\nTITLE: Example of Listing Project Iterations with Azure CLI\nDESCRIPTION: This example demonstrates using the Azure CLI to list iteration paths to a depth of 3 for the 'Fabrikam Fiber' project, outputting the results in a table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration project list --depth 3 --project \"Fabrikam Fiber\" --output table\n```\n\n----------------------------------------\n\nTITLE: Starting Azure Pipelines Linux Agent Service\nDESCRIPTION: Command to start the Azure Pipelines Linux agent service after it has been installed as a systemd service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh start\n```\n\n----------------------------------------\n\nTITLE: SSH Host Key Type Error Message\nDESCRIPTION: Error output when SSH client cannot negotiate with the server due to no matching host key types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_8\n\nLANGUAGE: output\nCODE:\n```\nUnable to negotiate with <IP> port 22: no matching host key type found. Their offer: ssh-rsa\n```\n\n----------------------------------------\n\nTITLE: Retrieving Test Results Summary with OData Query\nDESCRIPTION: OData query that extracts test result statistics grouped by test owner from Azure DevOps Analytics. It filters results by pipeline name, date, and workflow type, then aggregates various result counts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_11\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And DateSK ge {startdate} \n    And Workflow eq 'Build'\n)/groupby(\n    (Test/TestOwner),\n    aggregate(\n        ResultCount with sum as ResultCount,\n        ResultPassCount with sum as ResultPassCount,\n        ResultFailCount with sum as ResultFailCount,\n        ResultNotExecutedCount with sum as ResultNotExecutedCount,\n        ResultNotImpactedCount with sum as ResultNotImpactedCount\n    )\n)\n```\n\n----------------------------------------\n\nTITLE: Extracting SVN Authors in PowerShell with ASCII Encoding\nDESCRIPTION: PowerShell command to extract a list of all Subversion users from the repository logs and save them to an authors-transform.txt file with ASCII encoding. This alternative format may be preferred in some environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nsvn.exe log --quiet | ? { $_ -notlike '-*' } | % { \"{0} = {0} \" -f ($_ -split ' | ')[1] } | Select-Object -Unique | Sort-Object | Out-File 'authors-transform.txt' -Encoding ASCII\n```\n\n----------------------------------------\n\nTITLE: Creating Azure DevOps Project Iteration Paths with Azure DevOps CLI\nDESCRIPTION: Reference to the Azure DevOps CLI command used to create new Iteration Paths (sprints or program increments) at the project level. This command allows for the automation of time-box definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-configure-boards.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n- **Iteration Paths**: [Azure DevOps iteration project create](/cli/azure/boards/iteration/project#az-boards-iteration-project-create)\n```\n\n----------------------------------------\n\nTITLE: Configuring Integration with API Version Demands\nDESCRIPTION: Example showing how to configure an integration with specific API version requirements\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services.Integration\"\n        }\n    ],\n    \"demands\": [\n        \"api-version/2.0\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Test Execution Trend Data in Power BI\nDESCRIPTION: Power BI query that extracts test execution data from the TestPointHistorySnapshot entity set. It filters by test plan title and date range, then groups results by date, aggregating counts of different test outcomes (Passed, Failed, Blocked, etc.).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-execution-trend.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet \n    Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPointHistorySnapshot?\" \n        &\"$apply=filter((TestSuite/TestPlanTitle eq '{testPlanTitle}') and (DateSK ge {startDate} and DateSK le {endDate}))\" \n        &\"/groupby(\" \n            &\"(DateSK),\" \n            &\"aggregate(\" \n                &\"$count as TotalCount,\" \n                &\"cast(ResultOutcome  eq 'Passed', Edm.Int32) with sum as Passed,\" \n                &\"cast(ResultOutcome  eq 'Failed', Edm.Int32) with sum as Failed,\" \n                &\"cast(ResultOutcome eq 'Blocked', Edm.Int32) with sum as Blocked,\" \n                &\"cast(ResultOutcome eq 'NotApplicable', Edm.Int32) with sum as NotApplicable,\" \n                &\"cast(ResultOutcome eq 'None', Edm.Int32) with sum as NotExecuted,\" \n                &\"cast(ResultOutcome ne 'None', Edm.Int32) with sum as Executed \n            ) \n        )\", null, [Implementation=\"2.0\"]) \nin \n    Source\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kubernetes Service Account Secrets\nDESCRIPTION: Commands to fetch the service account secret name and the corresponding secret object for Kubernetes authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/service-endpoints.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get serviceAccounts <service-account-name> -n <namespace> -o 'jsonpath={.secrets[*].name}'\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secret <service-account-secret-name> -n <namespace> -o json\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet packages to a feed in another organization\nDESCRIPTION: Command to publish a NuGet package to a feed in a different Azure DevOps organization using a named source that was previously configured with credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-exe.md#2025-04-22_snippet_5\n\nLANGUAGE: CLI\nCODE:\n```\ndotnet nuget push --source <SOURCE_NAME> --api-key <ANY_STRING> <PACKAGE_PATH>\n```\n\n----------------------------------------\n\nTITLE: Code Coverage Configuration in Azure DevOps\nDESCRIPTION: YAML configuration file placed at the root of the repository to define code coverage thresholds for pull request policies. Used in conjunction with branch policies to enforce code coverage requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-155-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nazurepipelines-coverage.yml\n```\n\n----------------------------------------\n\nTITLE: SSH Key Exchange Error Message\nDESCRIPTION: Error output when SSH client cannot negotiate with the server due to no matching key exchange methods.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_12\n\nLANGUAGE: output\nCODE:\n```\nUnable to negotiate with <IP> 22: no matching key exchange method found. Their offer: diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha256\n```\n\n----------------------------------------\n\nTITLE: Full Access to Work Items Scope (`vso.work_full`)\nDESCRIPTION: Grants full access to work items, queries, backlogs, plans, and work item tracking metadata. Also provides the ability to receive notifications about work item events via service hooks. Depends on `vso.work_write`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_33\n\nLANGUAGE: text\nCODE:\n```\n`vso.work_full`\n```\n\n----------------------------------------\n\nTITLE: Markdown Text Emphasis\nDESCRIPTION: Demonstrates various ways to emphasize text using bold, italics, and strikethrough formatting\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nUse _emphasis_ in comments to express **strong** opinions and point out ~~corrections~~\n**_Bold, italicized text_**\n**~~Bold, strike-through text~~**\n```\n\n----------------------------------------\n\nTITLE: Filtering by State in Azure DevOps Search\nDESCRIPTION: This snippet illustrates the shortcut filter `s:` used in Azure DevOps semantic search to find work items that are in a specific state. Replace 'State' with the desired work item state (e.g., Active, Closed).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_2\n\nLANGUAGE: azure-devops-search\nCODE:\n```\ns: <State>\n```\n\n----------------------------------------\n\nTITLE: Running a Python Script Directly in Azure Pipelines YAML\nDESCRIPTION: Executes a Python script (src/example.py) in the pipeline using the script step. Assumes the given file exists in the repository. No extra dependencies beyond Python itself. Input is the script filename, and output is whatever the script prints or produces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- script: python src/example.py\n```\n\n----------------------------------------\n\nTITLE: Listing User Licensing Events for Azure DevOps Auditing\nDESCRIPTION: This table outlines Azure DevOps audit events concerning user licensing and access levels. It covers assigning, modifying, and removing access levels, as well as creating, modifying, and deleting group-based licensing rules, providing the `Action` identifier and a `Description` with placeholders for user/group identities and access levels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n### Licensing events\n\n| Action | Description |\n|--------|-------------|\n| `Licensing.Assigned` | {AccessLevel} access level assigned to \"{ResolveIdentity:UserIdentifier}\" {Optional:Reason}. |\n| `Licensing.GroupRuleCreated` | New group rule for the \"{ResolveIdentity:GroupIdentifier}\" group assigning the {AccessLevel} access level was added to the organization. |\n| `Licensing.GroupRuleDeleted` | Group rule for the \"{ResolveIdentity:GroupIdentifier}\" group assigning the {AccessLevel} access level was removed. |\n| `Licensing.GroupRuleModified` | Group rule access level modified from {PreviousAccessLevel} to {AccessLevel} for \"{ResolveIdentity:GroupIdentifier}\" group. |\n| `Licensing.Modified` | Access level modified from {PreviousAccessLevel} to {AccessLevel} for \"{ResolveIdentity:UserIdentifier}\" {Optional:Reason}. |\n| `Licensing.Removed` | {AccessLevel} access level removed from \"{ResolveIdentity:UserIdentifier}\". |\n```\n\n----------------------------------------\n\nTITLE: Container Resource Variables Example\nDESCRIPTION: Example showing how to access container resource variables in pipeline steps. Demonstrates accessing image metadata, registry details and connection information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: mycontainer\n    type: ACR\n    azureSubscription: arm-connection\n    resourceGroup: rg-storage-eastus\n    registry: mycontainerregistry\n    repository: hello-world\n    trigger:\n      tags:\n      - latest\n\nsteps:\n- script: echo |\n    echo $(resources.container.mycontainer.type)\n    echo $(resources.container.mycontainer.registry)\n    echo $(resources.container.mycontainer.repository)\n    echo $(resources.container.mycontainer.tag)\n    echo $(resources.container.mycontainer.digest)\n    echo $(resources.container.mycontainer.URI)\n    echo $(resources.container.mycontainer.location)\n```\n\n----------------------------------------\n\nTITLE: Adding Maven Publish Plugin to Gradle 8.2+ Projects\nDESCRIPTION: Configuration for adding the Maven publish plugin to a Gradle project to enable package publishing functionality.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/publish-with-gradle.md#2025-04-22_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\nplugins {\n  id 'maven-publish'\n}\n```\n\n----------------------------------------\n\nTITLE: Merging Branches Using Git Command Line\nDESCRIPTION: This command integrates commits from one or more source branches into the current local branch. For multiple source branches, separate their names with spaces. Git will notify if there are conflicts during the merge.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pulling.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ngit merge <source branch name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Repository for Azure Artifacts in Gradle 8.2+\nDESCRIPTION: Maven repository configuration for connecting to Azure Artifacts feed with authentication using personal access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/publish-with-gradle.md#2025-04-22_snippet_1\n\nLANGUAGE: groovy\nCODE:\n```\nmaven {\n    url 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1'            //for organization-scoped feeds use this format: 'https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/maven/v1'\n    name '<FEED_NAME>'\n    credentials(PasswordCredentials)\n    authentication {\n        basic(BasicAuthentication)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuration-based Job Selection\nDESCRIPTION: Example of using string parameters to determine which build configurations to execute in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runtime-parameters.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: configs\n  type: string\n  default: 'x86,x64'\n\ntrigger: none\n\njobs:\n- ${{ if contains(parameters.configs, 'x86') }}:\n  - job: x86\n    steps:\n    - script: echo Building x86...\n- ${{ if contains(parameters.configs, 'x64') }}:\n  - job: x64\n    steps:\n    - script: echo Building x64...\n- ${{ if contains(parameters.configs, 'arm') }}:\n  - job: arm\n    steps:\n    - script: echo Building arm...\n```\n\n----------------------------------------\n\nTITLE: Querying User Stories by Area and Iteration Path using OData\nDESCRIPTION: This OData query retrieves user stories filtered by a specific Area Path and Iteration Path. It selects relevant fields and expands related entities like AssignedTo, Iteration, and Area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-openbugs.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'User Story'\n            and startswith(Area/AreaPath,'{areapath}')\n            and startswith(Iteration/IterationPath,'{iterationpath}')\n        &$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames,AreaSK\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath)\n```\n\n----------------------------------------\n\nTITLE: Cloning Repository in Azure Cloud Shell using Bash\nDESCRIPTION: Clones the specified Git repository URL into the Azure Cloud Shell environment using Bash. This prepares the code within the cloud environment for deployment using Azure CLI commands. The `<repository-url>` placeholder must be replaced with the actual repository URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit clone <repository-url>\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Duration Percentiles by Pipeline ID in Power BI\nDESCRIPTION: Power BI query that calculates percentile durations for a pipeline specified by ID rather than name. This ensures reports don't break if a pipeline is renamed. The pipeline ID can be obtained from the pipeline runs page URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration.md#2025-04-22_snippet_2\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"PipelineId  eq {pipelineid} \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and (SucceededCount eq 1 or PartiallySucceededCount eq 1) \"\n        &\") \"\n        &\"/compute( \"\n            &\"percentile_cont(TotalDurationSeconds, 0.5) as Duration50thPercentileInSeconds, \"\n                &\"percentile_cont(TotalDurationSeconds, 0.8) as Duration80thPercentileInSeconds, \"\n                &\"percentile_cont(TotalDurationSeconds, 0.95) as Duration95thPercentileInSeconds) \"\n            &\"/groupby( \"\n                &\"(Duration50thPercentileInSeconds, Duration80thPercentileInSeconds,Duration95thPercentileInSeconds)) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Installing Mocha and Related Dependencies\nDESCRIPTION: Installs Mocha testing framework and related dependencies for developing and testing the custom Azure DevOps task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_4\n\nLANGUAGE: PowerShell\nCODE:\n```\nnpm install mocha --save-dev -g\nnpm install sync-request --save-dev\nnpm install @types/mocha --save-dev\n```\n\n----------------------------------------\n\nTITLE: Alternative Branch Creation\nDESCRIPTION: Alternative command to create and pull a new branch based on main in a single step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/code-with-git.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit pull origin main:users/jamal/feature1\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Release Deployment Completed Event in Azure DevOps\nDESCRIPTION: JSON payload example for the ms.azure-devops-release.deployment-completed-event which is triggered when a deployment completes. This includes deployment status, release details, and environment information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000c3e52c57-187a-45c4-abe2-184a48291bad\",\n  \"eventType\": \"ms.azure-devops-release.deployment-completed-event\",\n  \"publisherId\": \"rm\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Deployment of release Release-1 on environment Dev Succeeded.\",\n    \"html\": \"Deployment on environment <a href='http://fabfiber.visualstudio.com/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1'>Dev</a> Succeeded.\",\n    \"markdown\": \"Deployment on environment [Dev](http://fabfiber.visualstudio.com/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1) Succeeded.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Deployment of release Release-1 on environment Dev Succeeded. Time to deploy: 0.11 minutes.\",\n    \"html\": \"Deployment on environment <a href='http://fabfiber.visualstudio.com/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1'>Dev</a> Succeeded. Time to deploy: 0.11 minutes.\",\n    \"markdown\": \"Deployment on environment [Dev](http://fabfiber.visualstudio.com/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1) Succeeded. Time to deploy: 0.11 minutes.\"\n  },\n  \"resource\": {\n    \"deployment\": {\n      \"id\": 1,\n      \"status\": \"succeeded\",\n      \"release\": {\n        \"id\": 1,\n        \"name\": \"Release-1\",\n        \"releaseDefinition\": {\n          \"id\": 1,\n          \"name\": \"Release Definition\"\n        },\n        \"project\": {\n          \"id\": \"project-id\",\n          \"name\": \"project-name\"\n        }\n      },\n      \"environment\": {\n        \"id\": 8,\n        \"name\": \"Dev\"\n      }\n    }\n  },\n  \"createdDate\": \"2024-12-02T12:21:13.8866607Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning a Git Repository with Git Command Line\nDESCRIPTION: Basic command for cloning a Git repository using the Git command line. This command creates a local clone of a remote repository in the current directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/clone.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit clone <clone URL>\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Run State Changed Event (JSON)\nDESCRIPTION: This JSON object represents the sample payload for the 'ms.vss-pipelines.run-state-changed-event' in Azure DevOps Pipelines. It includes event details, publisher ID ('pipelines'), human-readable messages, and the core resource information containing the pipeline run details (links, pipeline ID/name, state, result, timestamps, URL). This payload is triggered when a pipeline run starts or transitions to a terminal state (canceled, failed, succeeded, etc.).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000000\",\n  \"eventType\": \"ms.vss-pipelines.run-state-changed-event\",\n  \"publisherId\": \"pipelines\",\n  \"message\": {\n    \"text\": \"Run 11 succeeded.\",\n    \"html\": \"Run <a href=\\\"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=11\\\">11</a> succeeded.\",\n    \"markdown\": \"Run [11](https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=11) succeeded.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Run 11 succeeded.\",\n    \"html\": \"Run <a href=\\\"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=11\\\">11</a> succeeded.\",\n    \"markdown\": \"Run [11](https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=11) succeeded.\"\n  },\n  \"resource\": {\n    \"run\": {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_apis/Pipelines/1/runs/11\"\n        },\n        \"web\": {\n          \"href\": \"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_build/results?buildId=11\"\n        }\n      },\n      \"pipeline\": {\n        \"id\": 1,\n        \"name\": \"Pipeline-Name\"\n      },\n      \"state\": \"completed\",\n      \"result\": \"succeeded\",\n      \"createdDate\": \"2024-07-17T21:34:22.338Z\",\n      \"finishedDate\": \"2024-07-17T21:45:22.338Z\",\n      \"url\": \"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_apis/Pipelines/1/runs/11\"\n    }\n  },\n  \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Build Global List to Field Definition in XML\nDESCRIPTION: XML snippet for enhancing a 'Found In' field with a GLOBALLIST element that provides a drop-down menu of builds for users to choose from. This automatically populates with builds from the project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/build-test-integration.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Found In\" refname=\"Microsoft.VSTS.Build.FoundIn\" type=\"String\" reportable=\"dimension\">\n    <HELPTEXT>Product build number (revision) in which this item was found</HELPTEXT>\n        <SUGGESTEDVALUES>\n          <LISTITEM value=\"&lt;None&gt;\" />\n        </SUGGESTEDVALUES>\n        <SUGGESTEDVALUES expanditems=\"true\" filteritems=\"excludegroups\">\n          <GLOBALLIST name=\"Builds - TeamProjectName\" />\n        </SUGGESTEDVALUES>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Default Permissions Table in Markdown\nDESCRIPTION: Markdown table showing the default Advanced Security permissions for different Azure DevOps user groups, including Contributors, Project administrators, and Project collection administrators.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Azure DevOps group  | Default permissions |\n| ----------- | ----------- |\n| Contributors | Advanced Security: Read alerts |\n| Project administrator | Advanced Security: Read alerts, manage and dismiss alerts |\n| Project collection administrator | Advanced Security: Read alerts, manage and dismiss alerts, manage settings |\n```\n\n----------------------------------------\n\nTITLE: Renaming a File with Lock Option using TFVC Command Line\nDESCRIPTION: This command changes the name of 'Form1.vb' to 'MainPage.vb' and applies a check-in lock using the TFVC rename command with the lock option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rename-command-team-foundation-version-control.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf rename Form1.vb MainPage.vb /lock:checkin\n```\n\n----------------------------------------\n\nTITLE: Creating Directory for Azure Pipelines Agent in Docker\nDESCRIPTION: Commands to create and navigate to a new directory for the Azure Pipelines agent Docker files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmkdir ~/azp-agent-in-docker/\ncd ~/azp-agent-in-docker/\n```\n\n----------------------------------------\n\nTITLE: Updating Work Item Linking Policy using Azure CLI\nDESCRIPTION: This command updates a work item linking policy for a repository or branches. It allows configuring various parameters like blocking status, branch matching, and enabling/disabling the policy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy work-item-linking update --id\n                                         [--blocking {false, true}]\n                                         [--branch]\n                                         [--branch-match-type {exact, prefix}]\n                                         [--detect {false, true}]\n                                         [--enabled {false, true}]\n                                         [--org]\n                                         [--project]\n                                         [--repository-id]\n                                         [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Querying Service Endpoints Scope (`vso.serviceendpoint_query`)\nDESCRIPTION: Grants the ability to read and query service endpoints. Depends on `vso.serviceendpoint`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n`vso.serviceendpoint_query`\n```\n\n----------------------------------------\n\nTITLE: Listing Azure DevOps Extensions via CLI\nDESCRIPTION: This command lists installed Azure DevOps extensions. It has optional parameters to include or exclude built-in and disabled extensions. The '--org' parameter is optional if a default organization is configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension list [--include-built-in {false, true}]\n                         [--include-disabled {false, true}]\n                         [--org]\n```\n\n----------------------------------------\n\nTITLE: Batch Configuration for CI Triggers in Azure DevOps YAML Pipelines\nDESCRIPTION: Configuration for batching CI runs to reduce the number of pipeline executions. When batch is set to true, the system waits for a running pipeline to complete before starting a new run with all accumulated changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ci-triggers1.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# specific branch build with batching\ntrigger:\n  batch: true\n  branches:\n    include:\n    - main\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Labeling\nDESCRIPTION: Namespace identifier for labeling items in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_35\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, Label\n```\n\n----------------------------------------\n\nTITLE: Removing Azure firewall rules using PowerShell (ARM)\nDESCRIPTION: This PowerShell script removes the firewall rules created for Azure SQL Database access. It uses Azure Resource Manager (ARM) cmdlets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n[CmdletBinding(DefaultParameterSetName = 'None')]\nparam\n(\n  [String] [Parameter(Mandatory = $true)] $ServerName,\n  [String] [Parameter(Mandatory = $true)] $ResourceGroupName,\n  [String] $FirewallRuleName = \"AzureWebAppFirewall\"\n)\nRemove-AzSqlServerFirewallRule -ServerName $ServerName -FirewallRuleName $FirewallRuleName -ResourceGroupName $ResourceGroupName\n```\n\n----------------------------------------\n\nTITLE: Viewing Collection Level Permissions in Azure Repos\nDESCRIPTION: This command lists the permissions for the 'fabrikam-fiber' collection in Azure DevOps. It requires the collection URL and user login credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-permission-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ntf git permission /collection:https://dev.azure.com/fabrikam-fiber \n                  /login:FabrikamUser@hotmail.com,FabrikamPassword\n```\n\n----------------------------------------\n\nTITLE: Sample Repository URLs for Test Parallelization\nDESCRIPTION: Repository URLs containing sample implementations of parallel testing for different technologies including .NET Core, Python, and JavaScript.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/parallel-testing-any-test-runner.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/idubnori/ParallelTestingSample-dotnet-core\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/PBoraMSFT/ParallelTestingSample-Python\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/PBoraMSFT/ParallelTestingSample-Mocha\n```\n\n----------------------------------------\n\nTITLE: Updating Maximum File Size Policy using Azure DevOps CLI\nDESCRIPTION: Updates an existing maximum file size policy for a Git repository using the Azure DevOps CLI. This command allows modification of policy settings such as blocking status, enabled status, and maximum file size limit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_19\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy file-size update --id\n                                 [--blocking {false, true}]\n                                 [--detect {false, true}]\n                                 [--enabled {false, true}]\n                                 [--maximum-git-blob-size]\n                                 [--org]\n                                 [--project]\n                                 [--repository-id]\n                                 [--subscription]\n                                 [--use-uncompressed-size {false, true}]\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items using SOAP Client in C#\nDESCRIPTION: This snippet demonstrates how to create a TfsTeamProjectCollection, access the WorkItemStore, create a new query, and execute it to retrieve work items. It uses the legacy SOAP-based client library for Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/client-libraries/soapSamples.md#2025-04-22_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\n// https://www.nuget.org/packages/Microsoft.TeamFoundationServer.ExtendedClient/\nusing Microsoft.TeamFoundation.Client;\nusing Microsoft.TeamFoundation.WorkItemTracking.Client;\n\n/// <summary>\n/// This sample creates a new work item query under 'MyQueries', runs the query, and then sends the results to the console.\n/// </summary>\npublic static void SampleSOAP()\n{\n    // create TfsTeamProjectCollection instance using default credentials\n    using (TfsTeamProjectCollection tpc = new TfsTeamProjectCollection(new Uri(collectionUri)))\n    {\n        // get the WorkItemStore service\n        WorkItemStore workItemStore = tpc.GetService<WorkItemStore>();\n\n        // get the project context for the work item store\n        Project workItemProject = workItemStore.Projects[teamProjectName];\n\n        // search for the 'My Queries' folder\n        QueryFolder myQueriesFolder = workItemProject.QueryHierarchy.FirstOrDefault(qh => qh is QueryFolder && qh.IsPersonal) as QueryFolder;\n        if (myQueriesFolder != null)\n        {\n            // search for the 'SOAP Sample' query\n            string queryName = \"SOAP Sample\";\n            QueryDefinition newBugsQuery = myQueriesFolder.FirstOrDefault(qi => qi is QueryDefinition && qi.Name.Equals(queryName)) as QueryDefinition;\n            if (newBugsQuery == null)\n            {\n                // if the 'SOAP Sample' query does not exist, create it.\n                newBugsQuery = new QueryDefinition(queryName, \"SELECT [System.Id],[System.WorkItemType],[System.Title],[System.AssignedTo],[System.State],[System.Tags] FROM WorkItems WHERE [System.WorkItemType] = 'Bug' AND [System.State] = 'New'\");\n                myQueriesFolder.Add(newBugsQuery);\n                workItemProject.QueryHierarchy.Save();\n            }\n\n            // run the 'SOAP Sample' query\n            WorkItemCollection workItems = workItemStore.Query(newBugsQuery.QueryText);\n            foreach (WorkItem workItem in workItems)\n            {\n                // write work item to console\n                Console.WriteLine(\"{0} {1}\", workItem.Id, workItem.Fields[\"System.Title\"].Value);\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Listing All PRs with Azure DevOps CLI\nDESCRIPTION: This example demonstrates listing all pull requests in a repository regardless of status using the Azure DevOps CLI, with output formatted as a table. It uses default organization and project configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/view-pull-requests.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr list --status all --output table\n\nID    Created     Creator              Title                                           Status     IsDraft    Repository\n----  ----------  -------------------  ----------------------------------------------  ---------  ---------  ------------\n11    2021-10-04  jamalh@fabrikam.com  Revert 'Updated parameterized-functions.md'     Completed  False      Fabrikam\n10    2021-10-04  jamalh@fabrikam.com  Updated parameterized-functions.md              Completed  False      Fabrikam\n9     2021-10-04  ke@fabrikam.com      New pull request                                Completed  False      Fabrikam\n8     2021-10-04  jamalh@fabrikam.com  Updated parameterized-functions.md              Abandoned  False      Fabrikam\n7     2021-09-30  jamalh@fabrikam.com  Added note-new-git-tool.md to /                 Completed  False      Fabrikam\n6     2021-09-29  jamalh@fabrikam.com  Revert 'Added parameterized-functions.md to /'  Abandoned  False      Fabrikam\n5     2021-09-29  jamalh@fabrikam.com  Updated README.md                               Completed  False      Fabrikam\n4     2021-09-29  jamalh@fabrikam.com  Added parameterized-functions.md to /           Completed  False      Fabrikam\n3     2021-09-28  jamalh@fabrikam.com  WIP New file                                    Abandoned  False      Fabrikam\n2     2021-09-28  jamalh@fabrikam.com  Update README.md                                Abandoned  False      Fabrikam\n1     2021-09-28  jamalh@fabrikam.com  Edit README.md                                  Completed  False      Fabrikam\n```\n\n----------------------------------------\n\nTITLE: SSH-RSA Unsupported Error Message\nDESCRIPTION: Error output when using the unsupported ssh-rsa algorithm that has been fully deprecated in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_7\n\nLANGUAGE: output\nCODE:\n```\nYou're using ssh-rsa that is unsupported. Please use rsa-sha2-256 or rsa-sha2-512 instead. For more details see https://devblogs.microsoft.com/devops/ssh-rsa-deprecation.\n```\n\n----------------------------------------\n\nTITLE: Folder Structure for Azure DevOps Widget Extension\nDESCRIPTION: Shows the organization of files for an Azure DevOps extension project, including HTML files, SDK references, and the extension manifest.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n|--- README.md\n|--- node_modules\n|--- SDK\n    |--- scripts\n        |--- VSS.SDK.min.js\n|--- img\n    |--- logo.png\n|--- scripts\n|--- hello-world.html               // html page to be used for your widget\n|--- hello-world2.html              // renamed copy of hello-world.html\n|--- vss-extension.json             // extension's manifest\n```\n\n----------------------------------------\n\nTITLE: Installing NPM Package Using Command Line\nDESCRIPTION: Command to install an npm package and save it as a dependency in package.json. This should be run from an elevated command prompt in the directory containing the package.json file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/npm/install.md#2025-04-22_snippet_0\n\nLANGUAGE: Command\nCODE:\n```\nnpm install --save <package>\n```\n\n----------------------------------------\n\nTITLE: Azure Service Bus Queue Configuration Settings\nDESCRIPTION: Settings for sending messages to Azure Service Bus Queue, including connection string, queue name, and message control options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/consumers.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"connectionString\": \"string\",\n  \"queueName\": \"string\",\n  \"resourceDetailsToSend\": \"string\",\n  \"messagesToSend\": \"string\",\n  \"detailedMessagesToSend\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Pipeline Approval Pending Event in Azure DevOps\nDESCRIPTION: JSON payload sample for the 'ms.vss-pipelinechecks-events.approval-pending' event that is triggered when an approval is pending for a pipeline run stage. The payload includes approval details, instructions, and pipeline context information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-00000000000055382df7-24fa-453c-9173-3369b2417a5b\",\n  \"eventType\": \"ms.vss-pipelinechecks-events.approval-pending\",\n  \"publisherId\": \"pipelines\",\n  \"message\": {\n    \"text\": \"Approval pending for deployment of pipeline run1 to environment env1.\",\n    \"html\": \"Approval pending for deployment of pipeline <a href=https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_build/results?buildId=2&view=results> run1 </a> to environment <a href=https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_environments/1?view=resources>env1</a>.\",\n    \"markdown\": \"Approval pending for deployment of pipeline [https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_build/results?buildId=2&view=results](run1) to environment [env1](https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_environments/1?view=resources)\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Approval pending for deployment of pipeline run1 to environment env1.\",\n    \"html\": \"Approval pending for deployment of pipeline <a href=https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_build/results?buildId=2&view=results> run1 </a> to environment <a href=https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_environments/1?view=resources>env1</a>.\",\n    \"markdown\": \"Approval pending for deployment of pipeline [https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_build/results?buildId=2&view=results](run1) to environment [env1](https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_environments/1?view=resources)\"\n  },\n  \"resource\": {\n    \"approval\": {\n      \"id\": \"00000000-0000-0000-0000-0000000000000f027b05-0942-4a35-9218-26fa07d8760a\",\n      \"steps\": [\n        {\n          \"assignedApprover\": {\n            \"displayName\": null,\n            \"id\": \"00000000-0000-0000-0000-000000000000743f73b7-cdeb-4de7-80b7-00cee17476b8\"\n          },\n          \"status\": \"pending\",\n          \"comment\": \"Sample comment\",\n          \"initiatedOn\": \"2019-12-13T06:14:11.642Z\"\n        }\n      ],\n      \"status\": \"pending\",\n      \"createdOn\": \"2019-12-13T06:14:11.642Z\",\n      \"lastModifiedOn\": \"2019-12-13T06:14:11.642Z\",\n      \"instructions\": \"Instructions\",\n      \"minRequiredApprovers\": 2,\n      \"blockedApprovers\": [\n        {\n          \"displayName\": null,\n          \"id\": \"00000000-0000-0000-0000-000000000000d651e716-a205-4b37-a803-e373df09fea6\"\n        }\n      ],\n      \"_links\": {}\n    },\n    \"projectId\": \"00000000-0000-0000-0000-000000000000\",\n    \"pipeline\": null,\n    \"stage\": null,\n    \"run\": null,\n    \"resource\": null,\n    \"id\": 0,\n    \"url\": null,\n    \"stageName\": null,\n    \"attemptId\": 0\n  },\n  \"resourceVersion\": \"5.1-preview.1\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2019-12-13T06:14:11.671Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Key Vault NSP Rules Error Message\nDESCRIPTION: Error message indicating that a request was blocked by Network Security Policy rules because the client address is not in the allowlist and bypass settings are set to None.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nRequest was not allowed by NSP rules and the client address is not authorized and caller was ignored because bypass is set to None Client address: <x.x.x.x>\n```\n\n----------------------------------------\n\nTITLE: OData Query for Outcome Summary of All Project Pipelines\nDESCRIPTION: OData query URL that retrieves pipeline run outcome summary data for all pipelines in a project. The query filters by completion date, groups by pipeline name, and aggregates counts for different outcome statuses.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    CompletedDate ge {startdate}\n    )\n/groupby(\n(Pipeline/PipelineName),\naggregate(\n    $count as TotalCount,\n    SucceededCount with sum as SucceededCount ,\n    FailedCount with sum as FailedCount,\n    PartiallySucceededCount with sum as PartiallySucceededCount ,\n    CanceledCount with sum as CanceledCount\n    ))\n```\n\n----------------------------------------\n\nTITLE: Configuring Webhook JSON Payload Example in Azure DevOps\nDESCRIPTION: This JSON example demonstrates the minimal payload structure sent by Azure DevOps webhooks. It includes the event type, message formats (text, HTML, markdown), and minimal resource details like ID, URL, and name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/services/webhooks.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"eventType\": \"git.push\",\n    ...\n    \"messages\": {\n        \"text\": \"...\",\n        \"html\": \"...\",\n        \"markdown\": \"...\"\n    },\n    \"detailedMessage\": {\n        \"text\": \"...\",\n        \"html\": \"...\",\n        \"markdown\": \"...\"\n    },\n    \"resource\": {\n        \"id\": \"...\",\n        \"url\": \"https://...\",\n        \"name\": \"...\",\n        \"field1:\": \"...\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Converting .pfx to .pem for Client Certificate Authentication - OpenSSL - Bash\nDESCRIPTION: This Bash command uses OpenSSL to convert a .pfx file containing a certificate and private key into a .pem file suitable for Azure DevOps CLI certificate-based authentication. The '-secret' flag specifies the password, and resulting .pem files can be referenced with '--azure-rm-service-principal-certificate-path'. Ensure 'openssl' is installed and paths are correct.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nopenssl pkcs12 -in file.pfx -out file.pem -nodes -secret pass:<secret_here>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Work Item Bulk Update - Markdown\nDESCRIPTION: Guidelines for performing bulk updates on work items using query lists in Excel, including tips for maintaining data synchronization and managing work item modifications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/office/bulk-add-modify-work-items-excel.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Update work items in bulk with a query list\n\nThe easiest way to bulk update multiple work items is to create a query for the work items you want to update, and then open that query in Excel.\n\n> [!TIP]\n> **Keep your work in sync with these tips:**\n> - Use ![Refresh icon in Excel on Team ribbon](media/bulk-modify-excel-refresh-inline.png) (**Refresh**) when you first open a saved worksheet to download the latest data from the data store.\n> - Add columns to the worksheet using ![Choose Column icon in Excel on Team ribbon](media/bulk-modify-excel-choose-columns-inline.png) (**Choose Columns**) to enter data for additional fields.\n> - Publish your additions and modifications often to avoid data conflicts.\n> - Save your workbook periodically to prevent data loss before you publish or refresh.\n```\n\n----------------------------------------\n\nTITLE: Setting Variables with Batch Script in Azure DevOps\nDESCRIPTION: Sets regular and secret pipeline variables using Batch script commands. Creates a 'sauce' variable and a secret 'secret.Sauce' variable with different visibility levels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/set-variables-in-scripts.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\n@echo ##vso[task.setvariable variable=sauce]crushed tomatoes\n@echo ##vso[task.setvariable variable=secret.Sauce;issecret=true]crushed tomatoes with garlic\n```\n\n----------------------------------------\n\nTITLE: Calculating Properties in OData with the Compute Function\nDESCRIPTION: This OData query demonstrates how to use the compute function to calculate a new property (completion percentage) based on aggregated values of completed and remaining work.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_11\n\nLANGUAGE: OData\nCODE:\n```\n/WorkItems?$apply=aggregate(CompletedWork with sum as SumOfCompletedWork, RemainingWork with sum as SumOfRemainingWork)/compute(SumOfCompletedWork div (SumOfCompletedWork add SumOfRemainingWork) as DonePercentage)\n```\n\n----------------------------------------\n\nTITLE: Defining View Audit Log Permission in Azure DevOps\nDESCRIPTION: Specifies the permission key for viewing and exporting audit logs in Azure DevOps. This permission allows users to access, export, and filter audit logs, which are currently in preview.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n`AuditLog, Read`\n```\n\n----------------------------------------\n\nTITLE: Creating Integration Manifest in JSON\nDESCRIPTION: A sample JSON manifest file (vss-integration.json) that defines an integration for the Visual Studio Marketplace. It includes basic metadata like ID, name, version, publisher information, and marketplace presentation details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/integration.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"manifestVersion\": 1,\n    \"id\": \"jenkins-integration\",\n    \"version\": \"0.1.1\",\n    \"name\": \"Jenkins for Azure DevOps\",\n    \"publisher\": \"your-publisher\",\n    \"description\": \"Track your Jenkins builds in Azure DevOps.\",\n    \"public\": false,\n    \"categories\": [\"Azure Repos\", \"Azure Boards\"],\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services.Integration\"\n        }\n    ],\n    \"icons\": {\n        \"default\": \"images/logo.png\"\n    },\n    \"content\": {\n        \"details\": {\n            \"path\": \"overview.md\"\n        }\n    },\n    \"links\": {\n        \"getstarted\": {\n            \"uri\": \"https://jenkins.io/\"\n        },\n        \"support\": {\n            \"uri\": \"https://jenkins.io/\"\n        }\n    },\n    \"screenshots\": [\n        {\n            \"path\": \"images/screenshot1.png\"\n        }\n    ]   \n}\n```\n\n----------------------------------------\n\nTITLE: Custom Test Field Structure in JSON\nDESCRIPTION: Example of the JSON structure used when sending or receiving custom field data through REST API. Each item contains a fieldname and value property, where the value matches the configured field type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/custom-fields.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"fieldname\": \"customFieldName\",\n  \"value\": \"fieldValue\"\n}\n```\n\n----------------------------------------\n\nTITLE: YAML Output from Work Item Update Command\nDESCRIPTION: Example YAML output showing the fields and relationships of a work item after moving it to a new area path. The output includes details like priority, state, assigned users, and related child work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/move-work-items.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nfields:\n  Microsoft.VSTS.Common.Priority: 2\n  Microsoft.VSTS.Common.StackRank: 1500000001.0\n  Microsoft.VSTS.Common.StateChangeDate: '2021-11-23T22:26:28.27Z'\n  Microsoft.VSTS.Common.ValueArea: Business\n  System.AreaPath: Fabrikam Fiber\\Production Planning\n  System.AssignedTo:\n    _links:\n      avatar:\n        href: https://fabrikamprime.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.NDEwY2FkMDQtOWQyOS03NDFlLTk2MmEtNGZlYmU2NGE1NTM4\n    descriptor: aad.NDEwY2FkMDQtOWQyOS03NDFlLTk2MmEtNGZlYmU2NGE1NTM4\n    displayName: Jamal Hartnett\n    id: d291b0c4-a05c-4ea6-8df1-4b41d5f39eff\n    imageUrl: https://fabrikamprime.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.NDEwY2FkMDQtOWQyOS03NDFlLTk2MmEtNGZlYmU2NGE1NTM4\n    uniqueName: fabrikamfiber4@hotmail.com\n    url: https://spsprodeus27.vssps.visualstudio.com/A5d5b8da6-3db7-4829-baf9-1e500c21cc12/_apis/Identities/d291b0c4-a05c-4ea6-8df1-4b41d5f39eff\n  System.BoardColumn: Backlog\n  System.ChangedBy:\n   _links:\n      avatar:\n        href: https://fabrikamprime.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.NDEwY2FkMDQtOWQyOS03NDFlLTk2MmEtNGZlYmU2NGE1NTM4\n    descriptor: aad.NDEwY2FkMDQtOWQyOS03NDFlLTk2MmEtNGZlYmU2NGE1NTM4\n    displayName: Jamal Hartnett\n    id: d291b0c4-a05c-4ea6-8df1-4b41d5f39eff\n    imageUrl: https://fabrikamprime.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.NDEwY2FkMDQtOWQyOS03NDFlLTk2MmEtNGZlYmU2NGE1NTM4\n    uniqueName: fabrikamfiber4@hotmail.com\n    url: https://spsprodeus27.vssps.visualstudio.com/A5d5b8da6-3db7-4829-baf9-1e500c21cc12/_apis/Identities/d291b0c4-a05c-4ea6-8df1-4b41d5f39eff\n  System.ChangedDate: '2022-05-19T22:58:52.93Z'\n  System.CommentCount: 0\n  System.CreatedBy:\n   _links:\n      avatar:\n        href: https://fabrikamprime.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.NDEwY2FkMDQtOWQyOS03NDFlLTk2MmEtNGZlYmU2NGE1NTM4\n    descriptor: aad.NDEwY2FkMDQtOWQyOS03NDFlLTk2MmEtNGZlYmU2NGE1NTM4\n    displayName: Jamal Hartnett\n    id: d291b0c4-a05c-4ea6-8df1-4b41d5f39eff\n    imageUrl: https://fabrikamprime.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.NDEwY2FkMDQtOWQyOS03NDFlLTk2MmEtNGZlYmU2NGE1NTM4\n    uniqueName: fabrikamfiber4@hotmail.com\n    url: https://spsprodeus27.vssps.visualstudio.com/A5d5b8da6-3db7-4829-baf9-1e500c21cc12/_apis/Identities/d291b0c4-a05c-4ea6-8df1-4b41d5f39eff\n  System.CreatedDate: '2021-11-23T22:26:28.27Z'\n  System.Description: <div>This user story is for documentation purposes.&nbsp; </div>\n  System.IterationPath: Fabrikam Fiber\\Release 2\\Sprint 1\n  System.Reason: New\n  System.State: New\n  System.TeamProject: Fabrikam Fiber\n  System.Title: Test the Request feedback functionality\n  System.WorkItemType: User Story\n  WEF_10182DA5BCCD4CE2A43629FFBD290EF2_Kanban.Column: Backlog\nid: 148\nrelations:\n- attributes:\n    isLocked: false\n    name: Child\n  rel: System.LinkTypes.Hierarchy-Forward\n  url: https://fabrikamprime.visualstudio.com/854a3f67-9962-43d1-a968-2e5f2eb66c99/_apis/wit/workItems/152\n- attributes:\n    isLocked: false\n    name: Child\n  rel: System.LinkTypes.Hierarchy-Forward\n  url: https://fabrikamprime.visualstudio.com/854a3f67-9962-43d1-a968-2e5f2eb66c99/_apis/wit/workItems/153\n- attributes:\n    isLocked: false\n    name: Child\n  rel: System.LinkTypes.Hierarchy-Forward\n  url: https://fabrikamprime.visualstudio.com/854a3f67-9962-43d1-a968-2e5f2eb66c99/_apis/wit/workItems/151\n- attributes:\n    isLocked: false\n    name: Child\n  rel: System.LinkTypes.Hierarchy-Forward\n  url: https://fabrikamprime.visualstudio.com/854a3f67-9962-43d1-a968-2e5f2eb66c99/_apis/wit/workItems/149\nrev: 5\nurl: https://fabrikamprime.visualstudio.com/854a3f67-9962-43d1-a968-2e5f2eb66c99/_apis/wit/workItems/148\n```\n\n----------------------------------------\n\nTITLE: Adding Field to Quick Add Panel in Process Configuration XML for Azure DevOps\nDESCRIPTION: XML snippet showing how to add a new field (Business Value) to the Quick Add panel in the process configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-process-configuration.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<AddPanel>  \n   <Fields>  \n      <Field refname=\"System.Title\" />  \n      <Field refname=\"Microsoft.VSTS.Common.BusinessValue\" />  \n   </Fields>  \n</AddPanel>\n```\n\n----------------------------------------\n\nTITLE: Installing Axios Package from npmjs.com\nDESCRIPTION: This command installs the Axios library for making HTTP requests from npmjs.com. It demonstrates how to use the npm client to install a package from an upstream source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/upstream-sources.md#2025-04-22_snippet_0\n\nLANGUAGE: Command\nCODE:\n```\nnpm install axios\n```\n\n----------------------------------------\n\nTITLE: Complex Bash Script with Build Reason Detection\nDESCRIPTION: Advanced Bash script that demonstrates conditional logic based on build triggers and environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/cross-platform-scripting.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n    batch: true\n    branches:\n        include:\n        - main\nsteps:\n- bash: |\n    echo \"Hello world from $AGENT_NAME running on $AGENT_OS\"\n    case $BUILD_REASON in\n            \"Manual\") echo \"$BUILD_REQUESTEDFOR manually queued the build.\" ;;\n            \"IndividualCI\") echo \"This is a CI build for $BUILD_REQUESTEDFOR.\" ;;\n            \"BatchedCI\") echo \"This is a batched CI build for $BUILD_REQUESTEDFOR.\" ;;\n        *) $BUILD_REASON ;;\n    esac\n  displayName: Hello world\n```\n\n----------------------------------------\n\nTITLE: Listing Local Security Namespaces with Azure DevOps CLI\nDESCRIPTION: This command lists only the local security namespaces for your organization and displays the results in table format. The output shows namespace IDs and their corresponding names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission namespace list --local-only --output table\n```\n\n----------------------------------------\n\nTITLE: Implementing No Authentication Schema in Azure DevOps\nDESCRIPTION: Configuration for endpoints that don't require authentication. Suitable for services that support anonymous access to resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/auth-schemes.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"endpoint-auth-scheme-none\",\n    \"description\": \"i18n:Creates an endpoint authentication scheme with no authentication.\",\n    \"type\": \"ms.vss-endpoint.endpoint-auth-scheme-none\",\n    \"targets\": [\n        \"ms.vss-endpoint.endpoint-auth-schemes\"\n    ],\n    \"properties\": {\n        \"name\": \"None\",\n        \"displayName\": \"i18n:No Authentication\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Restoring All npm Packages in a Project\nDESCRIPTION: Command to restore all npm packages defined in a project's package.json file after connecting to the feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/restore-npm-packages.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Web Portal List Navigation Shortcuts - Markdown Table\nDESCRIPTION: Markdown table showing keyboard shortcuts for navigating lists in the Azure DevOps web portal, including focus movement and item selection commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/navigation/keyboard-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|Tab|Move focus right|\n|Left arrow|Move focus left|\n|Right arrow|Move focus right|\n|Up arrow|Move focus up|\n|Down arrow|Move focus down|\n|Ctrl+Home|Move focus to top of list|\n|Ctrl+End|Move focus to bottom of list|\n|Ctrl+Up arrow|Move up item in the list|\n|Ctrl+Down arrow|Move item down in the list|\n|Shift+Up arrow|Highlight consecutive items above the current line or field|\n|Shift+Down arrow|Highlight consecutive items below the current line or field|\n|Menu|Open context menu|\n|Esc|Dismiss context menu|\n|Enter|Choose selected menu item|\n```\n\n----------------------------------------\n\nTITLE: Detecting Work In Progress PRs by Title in JavaScript\nDESCRIPTION: Checks if the pull request title contains \"WIP\" to indicate it is a work in progress, and updates the status object accordingly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nif (title.includes(\"WIP\")) {\n    prStatus.state = \"pending\"\n    prStatus.description = \"Work in progress\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Proxy Environment Variables for Azure DevOps Agent on Linux\nDESCRIPTION: These environment variables should be added to the /etc/environment file on Linux systems to configure the Azure DevOps Agent to run behind a proxy. They specify the proxy URL, username, and password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-networking.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nVSTS_AGENT_INPUT_PROXYURL=<proxy_url>\nVSTS_AGENT_INPUT_PROXYUSERNAME=<proxy_username>\nVSTS_AGENT_INPUT_PROXYPASSWORD=<proxy_password>\n```\n\n----------------------------------------\n\nTITLE: Creating a Managed Pool with Azure CLI\nDESCRIPTION: This snippet demonstrates how to create a managed pool using Azure CLI with an agent profile specified in a JSON file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --agent-profile agent-profile.json\n   # other parameters omitted for space\n```\n\n----------------------------------------\n\nTITLE: Showing Security Group Details in Azure DevOps CLI\nDESCRIPTION: Command syntax for displaying detailed information about a specific security group using its descriptor ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group show --id\n```\n\n----------------------------------------\n\nTITLE: Example Test Plan Clone Command\nDESCRIPTION: Example showing how to clone test plan 66 to a new test plan with specific iteration and area path overrides.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_6\n\nLANGUAGE: tcm\nCODE:\n```\ntcm plans /clone /sourceplanid:66 /destinationplanname:\"Test plan, Release 3\" /overridefield:\"Iteration Path\"=\"Fabrikam Fiber\\Release 3\" /overridefield:\"Area Path\"=\"Fabrikam Fiber\\Web\" /collection:https://dev.azure.com/fabrikamprime /teamproject:\"Fabrikam Fiber\"\n```\n\n----------------------------------------\n\nTITLE: Fixing pull request annotations with custom repository publishing\nDESCRIPTION: YAML configuration to ensure proper file paths for pull request annotations when using custom repository publishing settings, by setting the scanning source path to the system default working directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning-troubleshoot.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AdvancedSecurity-Dependency-Scanning@1\n  env:\n    DependencyScanning.SourcePath: $(System.DefaultWorkingDirectory)\n```\n\n----------------------------------------\n\nTITLE: Running Azure Boards Query by ID (Azure CLI)\nDESCRIPTION: This example executes an Azure Boards work item query using its specific ID (`--id 6c286d74-26a5-4cce-bfcf-bf9123495bfe`) via the Azure DevOps CLI. The `--output table` parameter formats the query results into a user-friendly table. This requires the Azure DevOps CLI extension and appropriate authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/view-run-query.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n```azurecli\naz boards query --id 6c286d74-26a5-4cce-bfcf-bf9123495bfe  --output table\n\nPriority    Node Name         Work Item Type    Title                             Remaining Work\n----------  ----------------  ----------------  --------------------------------  ----------------\n1           Voice             Bug               Apply fix elsewhere as needed\n2           CMMI              Bug               Slow response on form\n1           Fiber             Bug               Check issues with permissions     0\n2           Fiber             Bug               Voicemail hang issue              0\n2           FabrikamBB        Bug               Research slow response time\n1           FabrikamBB        Bug               Fix performance issues            0 \n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Project-Scoped Feed in Cargo Config for Private Feed\nDESCRIPTION: TOML configuration to add to .cargo/config.toml for connecting to a project-scoped private feed in Azure Artifacts. This configures the registry and replaces the default crates-io source with your feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[registries]\n<FEED_NAME> = { index = \"sparse+https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/Cargo/index/\" }\n\n[source.crates-io]\nreplace-with = \"<FEED_NAME>\"\n```\n\n----------------------------------------\n\nTITLE: NuGet Project with Dependency Resolution\nDESCRIPTION: Updated C# project file that overrides the vulnerable Microsoft.AspNetCore.Http.Connections dependency with a version range that includes the patched version, demonstrating NuGet's version range approach to dependency resolution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_13\n\nLANGUAGE: csharp\nCODE:\n```\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\n  <PropertyGroup>\n    <TargetFramework>netcoreapp3.1</TargetFramework>\n    <RootNamespace>NuGet.Dependencies</RootNamespace>\n  </PropertyGroup>\n  <ItemGroup>\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.2.8\" />\n  </ItemGroup>\n\n  <ItemGroup Label=\"Dependency Resolutions\">\n    <!-- Microsoft.AspNetCore.App -->\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Connections\" Version=\"[1.0.15,1.1.0)\" />\n  </ItemGroup>\n</Project>\n```\n\n----------------------------------------\n\nTITLE: Moniker Range Declaration for Azure DevOps\nDESCRIPTION: Markdown code block defining content visibility range for Azure DevOps specific documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/link-type-reference.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"azure-devops\"\n\n- [**Work link type**](#work-link-type): Links work items including select test case management work items\n- [**Hyperlink**](#hyperlink): Connects a work item to any URL or network share\n- [**External link type**](#external-link-type): Connects a work item to an external object, such as a code object, build, or wiki page\n- [**Remote work link type**](#remote-work-link-type): Connects work items that are defined in different organizations\n- [**GitHub link type**](#github-link-type): Connects a work item to a GitHub repository commit, issue, or pull request.\n\nA specific field maintains a count of links for the first four link types, such as *Related Link Count*, *Hyperlink Count*, *External Link Count*, and *Remote Link Count*.  \n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Number Format in YAML Pipeline\nDESCRIPTION: Shows how to customize the build/run number format in a YAML pipeline using the name property at the root level, which is necessary for the assembly versioning script example.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/powershell.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nname: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)\n```\n\n----------------------------------------\n\nTITLE: Signing in to Azure CLI\nDESCRIPTION: Commands to sign in to Azure CLI and set the default subscription.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz login\n```\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"My subscription name\"\n```\n\nLANGUAGE: bash\nCODE:\n```\naz account list -o table\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary by Branch with OData\nDESCRIPTION: OData query that retrieves test result summary data grouped by branch name. The query groups results by Branch/BranchName, allowing for analysis of test outcomes across different branches in a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_5\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And DateSK ge {startdate} \n    And Workflow eq 'Build'\n)/groupby(\n    (Branch/BranchName),\n    aggregate(\n        ResultCount with sum as ResultCount,\n        ResultPassCount with sum as ResultPassCount,\n        ResultFailCount with sum as ResultFailCount,\n        ResultNotExecutedCount with sum as ResultNotExecutedCount,\n        ResultNotImpactedCount with sum as ResultNotImpactedCount\n    )\n)\n```\n\n----------------------------------------\n\nTITLE: Identifier for Creating Test Runs Permission\nDESCRIPTION: The symbolic identifier `Project, PUBLISH_TEST_RESULTS` grants the ability to add and remove test results, as well as add or modify test runs within an Azure DevOps project. This is essential for users involved in executing and documenting test results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, PUBLISH_TEST_RESULTS\n```\n\n----------------------------------------\n\nTITLE: Power BI Query for All Pipeline Tasks Duration Trend\nDESCRIPTION: A Power BI query that calculates the 80th percentile task duration for all tasks in a specific pipeline. This enables comparing duration trends across multiple tasks using a slicer in the visualization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_8\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and PipelineRunCompletedOn/Date ge {startdate} \"\n                &\"and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded') \"\n        &\"and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1) \"\n        &\") \"\n            &\"/compute( \"\n                &\"percentile_cont(ActivityDurationSeconds, 0.8, TaskDisplayName, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds) \"\n                &\"/groupby( \"\n            &\"(TaskDuration80thPercentileInSeconds, TaskDisplayName, PipelineRunCompletedOn/Date)) \"\n                &\"&$orderby=PipelineRunCompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Reviewing unstaged changes in Git\nDESCRIPTION: This command shows the status of changes in the working directory and staging area, including untracked files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_15\n\nLANGUAGE: git\nCODE:\n```\ngit status --untracked\n```\n\n----------------------------------------\n\nTITLE: Installing Node CLI for Azure DevOps\nDESCRIPTION: Command to install tfx-cli globally using npm package manager.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/upload-tasks.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g tfx-cli\n```\n\n----------------------------------------\n\nTITLE: Executing RecentIndexingActivity.ps1 Script in PowerShell\nDESCRIPTION: This PowerShell script checks the recent indexing activity and progress. It takes the same parameters as the ExtensionInstallIndexingStatus.ps1 script and provides detailed information about the indexing status of repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/manage-search.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\nRecentIndexingActivity.ps1\n```\n\n----------------------------------------\n\nTITLE: Querying Bug Trends Filtered by Team Name in Power BI\nDESCRIPTION: This Power BI query retrieves bug trend data filtered by team names rather than area path. It allows filtering by multiple team names along with a start date for trend analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-bugtrend.md#2025-04-22_snippet_2\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \"\n        &\"$apply=filter( \"\n            &\"WorkItemType eq 'Bug' \"\n            &\"and State ne 'Closed' \"\n            &\"and (Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}')\"\n            &\"and DateValue ge {startdate}  \"\n            &\") \"\n        &\"/groupby( \"\n            &\"(DateValue,State,WorkItemType,Priority,Severity,Area/AreaPath,Iteration/IterationPath,AreaSK), \"\n            &\"aggregate($count as Count) \"\n            &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Setting Symbol Path in WinDbg for Azure Artifacts Symbol Server\nDESCRIPTION: Command to configure WinDbg to use the Azure Artifacts symbol server by adding it to the symbol search path. Requires replacing the placeholder with your organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/symbols/debug-with-symbols-windbg.md#2025-04-22_snippet_0\n\nLANGUAGE: Command\nCODE:\n```\n.sympath+ https://artifacts.dev.azure.com/<ORGANIZATION_NAME>/_apis/symbol/symsrv\n```\n\n----------------------------------------\n\nTITLE: Basic Syntax for TFVC Unshelve Command\nDESCRIPTION: The basic syntax for the unshelve command in Team Foundation Version Control, showing all available parameters and options for restoring shelved file revisions to a workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/unshelve-command.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\ntf unshelve [/move] [<shelveset-name>[;<owner-name>]] <item-spec> \n[/recursive] [/noprompt][/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Retrieving a File with Supplied Credentials in Azure Repos\nDESCRIPTION: Example of retrieving a file from the default branch in a Git repository with credentials supplied directly in the command, avoiding the credential prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-view-command.md#2025-04-22_snippet_2\n\nLANGUAGE: command-line\nCODE:\n```\ntf git view /collection:https://dev.azure.com/fabrikam-fiber \n            /teamproject:FabrikamProject \n            /repository:FabrikamRepo \n            /path:FabrikamApp/Global.asax.cs \n            /output:Global.asax.cs \n            /login:FabrikamUser@hotmail.com,FabrikamPassword\n```\n\n----------------------------------------\n\nTITLE: Registering an Organization-Scoped PowerShell Repository\nDESCRIPTION: Command to register an organization-scoped Azure Artifacts feed as a PowerShell repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\nRegister-PSResourceRepository -Name \"PowershellPSResourceRepository\" `\n    -Uri \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" `\n    -Trusted `\n    -CredentialInfo $CredentialInfo\n```\n\n----------------------------------------\n\nTITLE: Resetting All Permissions with Azure DevOps CLI\nDESCRIPTION: Command syntax for clearing all permissions of a token for a user or group. Required parameters include namespace ID, subject, and token. The --yes parameter suppresses confirmation prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission reset-all --id\n                                        --subject\n                                        --token\n                                        [--yes]\n```\n\n----------------------------------------\n\nTITLE: CMMI Discipline Definition - HTML Table Markup\nDESCRIPTION: HTML table row defining discipline options for CMMI process including Analysis, Development, Test, User Education, and User Experience.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/guidance/cmmi-process-workflow.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   [Discipline](../../queries/query-numeric.md)\n   :::column-end:::\n   :::column span=\"3\":::\n   Select the discipline this task represents when your team estimates sprint capacity by activity:\n   - **Analysis**\n   - **Development**\n   - **Test**\n   - **User Education**\n   - **User Experience**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Clearing Field Values When State Changes in Azure DevOps XML\nDESCRIPTION: XML configuration showing how to clear values from fields when a work item's state changes. This example clears the Closed Date and Closed By fields when a work item becomes Active, using the EMPTY element.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/change-workflow-wit.md#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<STATE value=\"Active\">  \n      <FIELDS>  \n. . .  \n      <FIELD refname=\"Microsoft.VSTS.Common.ClosedDate\"><EMPTY/></FIELD>  \n      <FIELD refname=\"Microsoft.VSTS.Common.ClosedBy\"><EMPTY/></FIELD>  \n      </FIELDS>  \n</STATE>\n```\n\n----------------------------------------\n\nTITLE: Example: Showing Details of Available Permissions for a Namespace\nDESCRIPTION: Example command that shows details of available permissions for a specified namespace ID in table format. Output displays permission names, descriptions, and bit values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission namespace show --namespace-id 58450c49-b02d-465a-ab12-59ae512d6531 --output table\n```\n\n----------------------------------------\n\nTITLE: Automating State Transitions with Actions in Azure DevOps XML\nDESCRIPTION: Example demonstrating how to define an ACTION element that automatically changes the state of a work item based on external events. This example shows how bugs can be automatically resolved when associated files are checked into version control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/change-workflow-wit.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<TRANSITION from=\"Active\" to=\"Resolved\">  \n      <ACTIONS>  \n      <ACTION value=\"Microsoft.VSTS.Actions.Checkin\"/>  \n      </ACTIONS>  \n. . .  \n</TRANSITION>\n```\n\n----------------------------------------\n\nTITLE: Applying Rich Text Formatting in Azure DevOps Wiki with HTML\nDESCRIPTION: This snippet demonstrates various HTML tags and attributes to apply rich text formatting in Azure DevOps wiki pages. It includes examples of strikethrough, insertion, teletype text, colored text, alignment, superscript, subscript, and text sizing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_22\n\nLANGUAGE: HTML\nCODE:\n```\n<p>This text needs to <del>strikethrough</del> <ins>since it is redundant</ins>!</p>\n<p><tt>This text is teletype text.</tt></p>\n<font color=\"blue\">Colored text</font>\n<center>This text is center-aligned.</center>\n<p>This text contains <sup>superscript</sup> text.</p>\n<p>This text contains <sub>subscript</sub> text.</p>\n<p>The project status is <span style=\"color:green;font-weight:bold\">GREEN</span> even though the bug count / developer may be in <span style=\"color:red;font-weight:bold\">red.</span> - Capability of span\n<p><small>Disclaimer: Wiki also supports showing small text</small></p>\n<p><big>Bigger text</big></p>\n```\n\n----------------------------------------\n\nTITLE: Creating Wiki Page with Azure CLI\nDESCRIPTION: This command creates a new wiki page using the Azure DevOps CLI. It allows specifying the page path, wiki name, content, and other optional parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-edit-wiki.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page create --path\n                           --wiki\n                           [--comment]\n                           [--content]\n                           [--encoding {ascii, utf-16be, utf-16le, utf-8}]\n                           [--file-path]\n                           [--project]\n                           [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Adding Advanced Security Dependency Scanning Task in YAML Pipeline\nDESCRIPTION: YAML snippet showing how to integrate the Advanced Security Dependency Scanning task into an Azure DevOps pipeline. The task (AdvancedSecurity-Dependency-Scanning@1) is used to scan for vulnerabilities in dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/configure-github-advanced-security-features.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nAdvancedSecurity-Dependency-Scanning@1\n```\n\n----------------------------------------\n\nTITLE: Combined Expand and Select Query Response in Azure DevOps Analytics\nDESCRIPTION: JSON response showing filtered results when combining $expand and $select statements in an OData query. Returns specific iteration fields (IterationId, IterationPath) along with nested project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_13\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\":\"https://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/$metadata#WorkItems(Iteration(IterationId,IterationPath,Project))\",\n  \"value\":[\n    {\n      \"WorkItemId\":10000,\n      \"Revision\":3,\n      \"Watermark\":283397,\n      \"Title\":\"Production deployment and testing for Entitlement API v2 and Subscriber database\",\"WorkItemType\":\"Task\",\n      \"ChangedDate\":\"2014-07-10T19:29:58.41Z\",\n      \"CreatedDate\":\"2014-04-19T22:44:58.31Z\",\n      \"State\":\"Completed\",\n      \"Reason\":\"Completed\",\n      \"Priority\":2,\n      \"CompletedWork\":10.0,\n      \"OriginalEstimate\":20.0,\n      \"Count\":1,\n      \"Iteration\":{\n        \"IterationId\":\"7a2c246e-fc62-41af-ad18-62332017bc46\",\"IterationPath\":\"Fabrikam\\\\Sprints\\\\Sprint 55\",\n        \"Project\":{\n          \"ProjectId\":\"b924d696-3eae-4116-8443-9a18392d8544\",\n          \"ProjectName\":\"Fabrikam\",\n          \"IsDeleted\":false\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sync Workspace to Labeled Version\nDESCRIPTION: Command to synchronize workspace to match items labeled as 'LastKnownGood'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/get-command.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf get /v:LLastKnownGood\n```\n\n----------------------------------------\n\nTITLE: Getting Sample Java SE Project URL\nDESCRIPTION: Provides the GitHub repository URL for the Spring PetClinic sample application, configured for deployment with Java SE. This code can be forked or cloned to follow the tutorial.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java-webapp.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/spring-projects/spring-petclinic\n```\n\n----------------------------------------\n\nTITLE: Filtering Active or Closed Items in Azure Boards Query\nDESCRIPTION: This query clause filters work items based on their state, selecting only items that are either 'Active' or 'Closed'. It utilizes the 'In' operator to check against multiple state values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-numeric.md#2025-04-22_snippet_2\n\nLANGUAGE: azure-boards-query\nCODE:\n```\nState In Active,Closed\n```\n\n----------------------------------------\n\nTITLE: Git Ignore Reference in Markdown\nDESCRIPTION: References the .gitignore functionality for preventing large binaries from being added to the repository. Links to GitHub documentation for further details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/remove-binaries.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n* Do consider using `.gitignore` for large binaries so that they aren't added to the repo in the first place - more information [here](https://help.github.com/articles/ignoring-files/).\n```\n\n----------------------------------------\n\nTITLE: Using Batch Endpoint for Long Queries with HTTP POST Request\nDESCRIPTION: When a query exceeds the 3,000 character limit for HTTP GET requests, use the OData batch endpoint with an HTTP POST request as a workaround. This example shows the HTTP 404 error received when exceeding the limit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_14\n\nLANGUAGE: HTTP\nCODE:\n```\nHTTP/1.1 404 Not Found\nContent-Length: 0\n```\n\n----------------------------------------\n\nTITLE: Synchronizing Local and Remote Branches in Git\nDESCRIPTION: Synchronizes a local branch with a remote branch by pulling remote changes and pushing local changes. This ensures both repositories are up-to-date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_25\n\nLANGUAGE: git\nCODE:\n```\ngit pull remote branchname\ngit push -u remote branchname\n```\n\n----------------------------------------\n\nTITLE: Displaying ACLs for a File in TFVC\nDESCRIPTION: Example showing how to display the access control lists for a specific file in Team Foundation Version Control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/permission-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf permission 314.cs\n```\n\n----------------------------------------\n\nTITLE: Constructing OData Query for Work Item Snapshot Data in Power BI\nDESCRIPTION: An OData query for Power BI that retrieves work item snapshot data from Azure DevOps Analytics. The query filters for bugs that aren't completed within a specific area path and date range, then groups the results by date, state, work item type, and area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-quick-report-odataq.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nlet\n   The query you provided has a syntax issue due to the placement of double quotes. Specifically, the `$apply` and `$orderby` parameters should be part of the URL string, but they are not correctly concatenated. Here is the corrected version:\n\n```markdown\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/WorkItemSnapshot?\"\n      &\"$apply=filter(\"\n      &\"WorkItemType eq 'Bug' \"\n      &\"AND StateCategory ne 'Completed' \"\n      &\"AND startswith(Area/AreaPath,'{areapath}') \"\n      &\"AND DateValue ge {startdate} )/\"\n      &\"groupby((DateValue,State,WorkItemType,Area/AreaPath), aggregate($count as Count))\"\n      &\"&$orderby=DateValue\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n```\n\n----------------------------------------\n\nTITLE: Updating Azure VMSS Image using Azure CLI\nDESCRIPTION: Updates an existing Azure Virtual Machine Scale Set to use a new custom VM image. The `--set` parameter targets the `imageReference.id` property within the VM profile's storage profile and assigns the URL (ID) of the new custom image. Future VMs created in the scale set will use this updated image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\naz vmss update --resource-group <myResourceGroup> --name <myScaleSet> --set virtualMachineProfile.storageProfile.imageReference.id=<id url>\n```\n\n----------------------------------------\n\nTITLE: Counting Work Items using OData Aggregation\nDESCRIPTION: This OData query demonstrates how to use the $apply extension to count all work items without grouping.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $apply=aggregate($count as Count)\n```\n\n----------------------------------------\n\nTITLE: Displaying Warning for Incompatible Operating Systems in Azure DevOps Agent\nDESCRIPTION: This snippet shows the warning message displayed when an operating system is not compatible with the .NET 6 based v3 agent. It informs users to upgrade their operating system to ensure compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v3-agent.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nThe operating system the agent is running on is <OS>, which will not be supported by the .NET 6 based v3 agent. Please upgrade the operating system of this host to ensure compatibility with the v3 agent. See https://aka.ms/azdo-pipeline-agent-version\n```\n\n----------------------------------------\n\nTITLE: Creating a Variable Group with Azure DevOps CLI\nDESCRIPTION: Command to create a new variable group with multiple variables using the Azure DevOps CLI. This example creates a group named 'home-office-config' with app location and app name variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group create --name home-office-config\n                                   --variables app-location=home-office app-name=contoso\n                                   --output yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Azure DevOps Project Area Paths with Azure DevOps CLI\nDESCRIPTION: Reference to the Azure DevOps CLI command for creating new Area Paths at the project level. This command facilitates the programmatic definition of work item classification areas.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-configure-boards.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n- **Area Paths**: [Azure DevOps area project create](/cli/azure/boards/area/project#az-boards-area-project-create)\n```\n\n----------------------------------------\n\nTITLE: Converting Travis Phases to Azure Pipelines Steps\nDESCRIPTION: Demonstration of how to convert Travis CI's named phase structure (before_install, install, script) to Azure Pipelines' more flexible step-based approach.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nbefore_install:\n    - npm install -g bower\ninstall:\n    - npm install\n    - bower install\nscript:\n    - npm run build\n    - npm test\n```\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- script: npm install -g bower\n- script: npm install\n- script: bower install\n- script: npm run build\n- script: npm test\n```\n\n----------------------------------------\n\nTITLE: SSL Certificate Verification Commands\nDESCRIPTION: Commands to verify SSL certificate installation across different operating systems.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/certificate.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nWindows: PowerShell Invoke-WebRequest -Uri https://corp.tfs.com/tfs -UseDefaultCredentials \nLinux: curl -v https://corp.tfs.com/tfs \nmacOS: curl -v https://corp.tfs.com/tfs\n```\n\n----------------------------------------\n\nTITLE: Committing Files to Local Git Repository\nDESCRIPTION: A Git command to commit the staged files with a commit message. This saves the staged files to your local Git repository with a descriptive message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-repo-intellij.md#2025-04-22_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\ngit commit -m \"Committing DeepSpace sample files\"\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Repository Renamed Event in Azure DevOps\nDESCRIPTION: JSON payload structure for the git.repository.renamed event in Azure DevOps. Includes details about the renamed repository, old and new names, and project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_27\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"publisherId\": \"azure-devops\",\n    \"eventId\": \"git.repository.renamed\",\n    \"resource\": {\n        \"repository\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000repository-id\",\n            \"oldName\": \"old-repository-name\",\n            \"newName\": \"new-repository-name\",\n            \"url\": \"repository-url\",\n            \"project\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n                \"name\": \"project-name\"\n            }\n        }\n    },\n    \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Inserting an Image in Markdown\nDESCRIPTION: This snippet demonstrates how to insert an image in a markdown document using the img tag with a specific CSS class for border styling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-155-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Listing Git Repository Events for Azure DevOps Auditing\nDESCRIPTION: This table outlines Azure DevOps audit events related to Git repository actions. It includes events for creation, deletion, destruction, renaming, forking, branch changes, policy bypasses, and enabling/disabling repositories, specifying the `Action` identifier and a `Description` with placeholders for repository names, project IDs, and branch names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Git licensing events\n\n| Action | Description |\n|--------|-------------|\n| `Git.RefUpdatePoliciesBypassed` | Policies on \"{FriendlyName}\" were bypassed in Git repository \"{RepoName}\" in project {ResolveProjectId:ProjectId}. |\n| `Git.RepositoryCreated` | Created Git repository \"{RepoName}\" in project {ResolveProjectId:ProjectId}. |\n| `Git.RepositoryDefaultBranchChanged` | Default branch of Git repository \"{RepoName}\" was changed to \"{DefaultBranch}\" in project {ResolveProjectId:ProjectId}. |\n| `Git.RepositoryDeleted` | Git repository \"{RepoName}\" was deleted from project {ResolveProjectId:ProjectId}. |\n| `Git.RepositoryDestroyed` | Git repository \"{RepoName}\" was destroyed in project {ResolveProjectId:ProjectId}. |\n| `Git.RepositoryDisabled` | Git repository \"{RepoName}\" was disabled in project {ResolveProjectId:ProjectId}. |\n| `Git.RepositoryEnabled` | Git repository \"{RepoName}\" was enabled in project {ResolveProjectId:ProjectId}. |\n| `Git.RepositoryForked` | Git repository \"{RepoName}\" in project {ResolveProjectId:ProjectId} was forked from \"{ParentRepoName}\" in project \"{ParentProjectName}\". |\n| `Git.RepositoryRenamed` | Git repository \"{PreviousRepoName}\" was renamed to \"{RepoName}\" in project {ResolveProjectId:ProjectId}. |\n| `Git.RepositoryUndeleted` | Git repository \"{RepoName}\" was undeleted in project {ResolveProjectId:ProjectId}. |\n```\n\n----------------------------------------\n\nTITLE: Central US Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps services in the Central US region. Includes multiple SharePoint (shprod) and Team Foundation Server (tfsprod) instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\ntfsprodcus1ip1\t 13.86.38.60\n\t\t\ntfsprodcus2ip1\t 13.86.33.223\n\t\t\nshprodcus1ip1\t 13.86.39.243\n\t\t\ntfsprodcus4ip1\t 52.158.209.56\n\t\t\ntfsprodcus5ip1\t 13.89.136.165\n\t\t\ntfsprodcus3ip1\t 13.86.36.181\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Budgets to Azure Boards Tags/Value Area in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Budgets' to Azure Boards 'Tags' or the 'Value Area' field for tracking work associated with budgets or value streams.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Budgets\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Tags, Value Area**](safe-concepts.md#tags). You can use tags or the *Value Area* field to track work associated with a specific budget or value stream. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Default Query Result Column Widths Configuration\nDESCRIPTION: Steps for setting and saving default column widths in work item query results. This includes opening the query, adjusting column widths, and saving the changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/using-queries.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. Open the query you want to modify.\n2. Manually adjust the column widths to your desired size by dragging the edges of the column headers.\n3. Select **Save** or **Save As** if you want to save it as a new query.\n4. Close and reopen the query to ensure that the column widths are retained.\n```\n\n----------------------------------------\n\nTITLE: SSH Connection Hosts\nDESCRIPTION: Host domains required for SSH connections to Git repositories on Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\nssh.dev.azure.com\nvs-ssh.visualstudio.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Project Properties in Azure DevOps Process Configuration XML\nDESCRIPTION: Example configuration for project properties including BugsBehavior (how bugs appear on backlogs and boards), HiddenBacklogs (which backlogs are hidden by default), StateColors (workflow state colors), and WorkItemTypeIcons (icons for work item types).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_15\n\nLANGUAGE: XML\nCODE:\n```\n<Properties>  \n     <Property name=\"BugsBehavior\" value=\"AsTasks\" />  \n     <Property name=\"HiddenBacklogs\" value=\"Microsoft.EpicCategory\" />  \n     <Property name=\"StateColors\" value=\"Active=#FF00FF00,Resolved=#FFFF0000\" />\n     <Property name=\"WorkItemTypeIcons\" value=\"Epic=Icon_Crown,Feature=Icon_Trophy,User Story=icon_book,\n       Task=icon_clipboard,Bug=icon_insect,Issue=icon_traffic_cone,\n       Test Plan=icon_test_plan,Test Suite=icon_test_suite,Test Case=icon_test_case,Shared Steps=icon_test_step,\n       Shared Parameter=icon_test_parameter\" />  \n </Properties>  \n```\n\n----------------------------------------\n\nTITLE: Failure Test Implementation for Azure DevOps Pipeline Task\nDESCRIPTION: TypeScript code implementing a failure test case for an Azure DevOps pipeline task using Mocha and the task mock runner.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_16\n\nLANGUAGE: TypeScript\nCODE:\n```\nit('should fail if tool returns 1', function(done: Mocha.Done) {\n    this.timeout(1000);\n\n    const tp = path.join(__dirname, 'failure.js');\n    const tr: ttm.MockTestRunner = new ttm.MockTestRunner(tp);\n\n    tr.runAsync().then(() => {\n        console.log(tr.succeeded);\n        assert.equal(tr.succeeded, false, 'should have failed');\n        assert.equal(tr.warningIssues.length, 0, 'should have no warnings');\n        assert.equal(tr.errorIssues.length, 1, 'should have 1 error issue');\n        assert.equal(tr.errorIssues[0], 'Bad input was given', 'error issue output');\n        assert.equal(tr.stdout.indexOf('Hello bad'), -1, 'Should not display Hello bad');\n        done();\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Azure DevOps SDK and Registering Work Item Event Handlers in HTML/JavaScript\nDESCRIPTION: This snippet shows how to set up a basic HTML page that initializes the Azure DevOps SDK and registers event handlers for various work item actions such as field changes, loading, unloading, saving, resetting, and refreshing. It uses the SDK.init() and SDK.register() methods to set up the extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-workitem-extension.md#2025-04-22_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Work item extension page sample</title>\n</head>\n\n<body>\n    <script src=\"sdk/scripts/SDK.js\"></script>\n\n    <script>\n        SDK.init({\n            usePlatformScripts: true\n        });\n        \n        SDK.ready(function () {\n             // Register a listener for the work item page contribution.\n            SDK.register(SDK.getContributionId(), function () {\n                return {\n                    // Called when the active work item is modified\n                    onFieldChanged: function(args) {\n                        \n                    },\n                    \n                    // Called when a new work item is being loaded in the UI\n                    onLoaded: function (args) {\n            \n                    },\n                    \n                    // Called when the active work item is being unloaded in the UI\n                    onUnloaded: function (args) {\n            \n                    },\n                    \n                    // Called after the work item has been saved\n                    onSaved: function (args) {\n            \n                    },\n                    \n                    // Called when the work item is reset to its unmodified state (undo)\n                    onReset: function (args) {\n            \n                    },\n                    \n                    // Called when the work item has been refreshed from the server\n                    onRefreshed: function (args) {\n            \n                    }\n                }\n            });    \n        });\n     </script>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Explicitly Addressing a Single Work Item Using Filter Clause\nDESCRIPTION: This example shows the recommended approach to query a single work item by its identifier. Instead of using entity keys in the resource path, it uses an explicit filter clause which is the preferred method for entity addressing in Analytics.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_10\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=WorkItemId eq {id}\n  &$select=WorkItemId, Title\n```\n\n----------------------------------------\n\nTITLE: Setting up Azure DevOps CLI Authentication\nDESCRIPTION: Commands to sign in to Azure DevOps, upgrade CLI tools, and configure default organization and project for Azure DevOps CLI usage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz login\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz upgrade\naz extension add --name azure-devops --upgrade\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops configure --defaults organization=<YourOrganizationURL> project=<Project Name or ID>\n```\n\n----------------------------------------\n\nTITLE: Querying Job-wise Pipeline Failures in Power BI\nDESCRIPTION: Power BI query to analyze job-wise failures in a specific pipeline. Groups failure counts by date and job name, calculating the number of failed jobs per day.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-stagewise-failures.md#2025-04-22_snippet_2\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and PipelineRunCompletedOn/Date ge {startdate} \"\n                &\"and PipelineRunOutcome eq 'Failed' \"\n        &\"and TaskOutcome eq 'Failed' \"\n        &\") \"\n            &\"/groupby( \"\n                &\"(PipelineRunCompletedOn/Date, PipelineRunId, PipelineJob/JobName ), \"\n                &\"aggregate (FailedCount with sum as FailedCount)) \"\n            &\"/groupby( \"\n                &\"(PipelineRunCompletedOn/Date, PipelineJob/JobName ), \"\n            &\"aggregate \"\n        &\"(cast(FailedCount gt 0, Edm.Int32) with sum as FailedJobCount)) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Updating Documents in Azure DevOps Extension\nDESCRIPTION: Demonstrates how to update an existing document in a collection using the SDK data service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n    // Get data service\n    SDK.getService(SDK.getContributionId()).then(function(dataService) {\n        var collection = \"MyCollection\";\n        var docId = \"1234-4567-8910\";\n        // Get document first\n        dataService.getDocument(collection, docId, { scopeType: \"User\" }).then(function(doc) {\n            // Update the document\n            doc.name = \"John Doe\";\n            dataService.updateDocument(collection, doc, { scopeType: \"User\" }).then(function(d) {\n                // Check the new version\n                console.log(\"Doc version: \" + d.__etag);\n            });\n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Page for Menu Action Handler (HTML)\nDESCRIPTION: This HTML snippet creates a basic page to handle the menu action. The content is not visible to the user and serves as a container for the JavaScript that handles the action.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-action.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Action Sample</title>\n</head>\n<body>\n    <div>\n        The end user doesn't see the content on this page.\n        It is only in the background to handle the contributed menu item being selected.\n    </div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Accessing npm Package API Endpoint for Project Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting npm packages in a project scoped feed using the REST API. This requires authentication with a Personal Access Token having Packaging read/write permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_3\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/{packageName}/versions/{packageVersion}?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: Moving a file in Git\nDESCRIPTION: These commands move a file to a new location in the Git repository and commit the move.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_17\n\nLANGUAGE: git\nCODE:\n```\ngit mv filename\ngit commit -m \"Moved filename\"\n```\n\n----------------------------------------\n\nTITLE: Querying Open Bugs Filtered by Area Path in Power BI\nDESCRIPTION: This Power BI query retrieves open bugs filtered by a specific area path. It selects relevant fields and expands related entities like AssignedTo, Iteration, and Area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-openbugs.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'Bug' \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames,AreaSK \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Subscribing to TFVC Repository Example in Slack\nDESCRIPTION: Example command showing how to subscribe to a Team Foundation Version Control repository for notifications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-slack.md#2025-04-22_snippet_3\n\nLANGUAGE: slash command\nCODE:\n```\n/azrepos subscribe https://dev.azure.com/myorg/myproject/_versionControl\n```\n\n----------------------------------------\n\nTITLE: Non-Interactive Comment Replacement in TFVC\nDESCRIPTION: Example showing how to replace a changeset comment without displaying the Visual Studio dialog by using the /noprompt option. The information is displayed directly in the command prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/changeset-command.md#2025-04-22_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf changeset /comment:\"This is an automatically generated comment.\" /noprompt 8675309\n```\n\n----------------------------------------\n\nTITLE: Defining Process Permissions in Azure DevOps\nDESCRIPTION: This snippet shows the permission structure for inherited processes in Azure DevOps, including Administer process permissions, Delete process, and Edit process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_47\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"2\":::\n   ### Permission (UI)   \n   `Namespace permission`  \n   :::column-end:::\n   :::column span=\"2\":::\n  ### Description \n   :::column-end:::\n:::row-end:::\n---\n:::row:::\n   :::column span=\"2\":::\n   <a id=\"admin-process-permission\"></a> Administer process permissions  \n   `Process, AdministerProcessPermissions`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can set or change the permissions for an inherited process.  \n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"2\":::\n   <a id=\"delete-process-permission\"></a> Delete process  \n   `Process, Delete`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can delete the inherited process.  \n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"2\":::\n   <a id=\"edit-process-permission\"></a> Edit process  \n   `Process, Edit`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can create an inherited process from a system process, or copy or modify an inherited process.  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Branching a Directory to a New Server Location\nDESCRIPTION: Copies all files without pending edits from the current workspace version of the testfiles folder to the testfiles_branch Azure DevOps Server folder, including all contained items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branch-command.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf branch C:\\testfiles $/testfiles_branch\n```\n\n----------------------------------------\n\nTITLE: Clearing Extended Attribute on macOS Agent Download\nDESCRIPTION: This bash command clears the extended attribute on the downloaded agent file for macOS to prevent Gatekeeper protection issues. It's followed by a command to unpack the gzip tar file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/agents.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nxattr -c vsts-agent-osx-x64-V.v.v.tar.gz  ## replace V.v.v with the version in the filename downloaded.\n\n# then unpack the gzip tar file normally:\n\ntar xvfz vsts-agent-osx-x64-V.v.v.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Creating Approver Count Policy with Azure DevOps CLI\nDESCRIPTION: Azure CLI command to create a branch policy that sets minimum required approvers for pull requests. The command allows configuration of various policy settings including minimum approver count, downvote handling, and vote reset behaviors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy approver-count create --allow-downvotes {false, true}\n                                      --blocking {false, true}\n                                      --branch\n                                      --creator-vote-counts {false, true}\n                                      --enabled {false, true}\n                                      --minimum-approver-count\n                                      --repository-id\n                                      --reset-on-source-push {false, true}\n                                      [--branch-match-type {exact, prefix}]\n                                      [--detect {false, true}]\n                                      [--org]\n                                      [--project]\n                                      [--subscription]\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy approver-count create --allow-downvotes true --blocking true --branch main --creator-vote-counts true --enabled true --minimum-approver-count 2 --repository-id d28cd374-e7f0-4b1f-ad60-f349f155d47c --reset-on-source-push false --output table\n```\n\n----------------------------------------\n\nTITLE: Nesting Markdown within HTML in Azure DevOps Wiki\nDESCRIPTION: This snippet demonstrates how to nest Markdown content within an HTML paragraph tag in an Azure DevOps wiki page. It requires a blank line between the HTML element and the Markdown content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_20\n\nLANGUAGE: HTML\nCODE:\n```\n<p>\n  \n  [A Markdown link](https://microsoft.com) \n</p>\n```\n\n----------------------------------------\n\nTITLE: Listing Test Runs with TCM Command-Line Tool\nDESCRIPTION: Use the TCM run /list command to view all test runs associated with a test plan in Azure DevOps. The command displays the ID, Title, Owner, and Date Completed for each test run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_0\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /list /collection:teamprojectcollectionurl /teamproject:project \n           [/planid:id  |  /querytext:query] [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Removing Azure DevOps Agent Configuration\nDESCRIPTION: Command to remove existing agent configuration using PAT authentication\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/troubleshooting-autologon.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\n.\\config.cmd remove --auth 'PAT' --token '<token>'\n```\n\n----------------------------------------\n\nTITLE: Generating Update Script for Azure SQL Database Using SQLPackage\nDESCRIPTION: This command line instruction uses SQLPackage.exe to create a Transact-SQL incremental update script that updates the schema of a target Azure SQL Database to match the schema of a source DACPAC. It requires the source DACPAC file, target server details, and output path for the script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_13\n\nLANGUAGE: Command Line\nCODE:\n```\nSqlPackage.exe /Action:Script /SourceFile:\"E:\\dacpac\\ajyadb.dacpac\" /TargetServerName:\"DemoSqlServer.database.windows.net.placeholder\"\n/TargetDatabaseName:\"Testdb\" /TargetUser:\"ajay\" /TargetPassword:\"SQLPassword\" /OutputPath:\"C:\\temp\\test.sql\"\n/Variables:StagingDatabase=\"Staging DB Variable value\"\n```\n\n----------------------------------------\n\nTITLE: Cleanup Azure Resource Group Using Azure CLI\nDESCRIPTION: Azure CLI command to delete the resource group created for the application. This command helps avoid incurring ongoing charges when the resources are no longer needed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name myapp-rg\n```\n\n----------------------------------------\n\nTITLE: Release Pipeline Integration with Azure Boards\nDESCRIPTION: Demonstrates configuration of release pipeline integration with Azure Boards including deployment status reporting and work item linking at the stage level.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/configure-pipelines-work-tracking.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Creating a Parallel Feature Branch with Different Changes\nDESCRIPTION: Creates a 'fruit' branch from main and adds different content to the same file. This creates a parallel history path that will be used in the merge conflict demonstration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_2\n\nLANGUAGE: Git CLI\nCODE:\n```\n> git checkout main -b fruit\n> echo \"bananas\" >> test.txt\n> git commit -am \"We have added a fruit\"\n```\n\n----------------------------------------\n\nTITLE: Complex Query for Work Items with Specific History and State Changes\nDESCRIPTION: This query finds items that contain the phrase \"stack traces\" in their History, were once closed, but are currently not closed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/history-and-auditing.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`History Contains Words stack traces`  `And State Was Ever Closed`  \n`And State <>  Closed`\n```\n\n----------------------------------------\n\nTITLE: Listing Pull Requests Using Azure CLI\nDESCRIPTION: Command to list pull request details using the Azure DevOps CLI. Shows how to filter PRs by creator and status, limiting results to the most recent PR.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/view-pull-requests.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr list --creator \"My Name\" --status all --top 1\n```\n\n----------------------------------------\n\nTITLE: Setting Default Azure Region in Azure CLI\nDESCRIPTION: Command to set the default region for Azure resources being created. This simplifies subsequent commands by not requiring the location parameter each time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-in-own-project.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz config set defaults.location=<your_region>\n```\n\n----------------------------------------\n\nTITLE: Querying Monthly Work Item Snapshots in OData\nDESCRIPTION: This query shows how to use the IsLastDayOfPeriod property to retrieve work item counts for the last day of each month. It demonstrates using enum flags with the 'has' operator for efficient filtering of snapshot data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_22\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItemSnapshot?\n  $apply=\n    filter(IsLastDayOfPeriod has Microsoft.VisualStudio.Services.Analytics.Model.Period'Month')/\n    groupby(\n      (DateValue), \n      aggregate($count as Count)\n    )\n```\n\n----------------------------------------\n\nTITLE: Adding Member to Security Group\nDESCRIPTION: Command to add a member to a security group using group and member descriptors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group membership add --group-id\n                                        --member-id\n```\n\n----------------------------------------\n\nTITLE: Creating a New Workspace with Default Settings in TFVC\nDESCRIPTION: Opens the Add Workspace dialog box to create a new workspace by specifying the collection URL. This command allows you to edit the source control folder, owner, computer, comment, and local folders through the dialog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf workspace /new /collection:https://myserver:8080/tfs/DefaultCollection\n```\n\n----------------------------------------\n\nTITLE: Filtering User Stories by Iteration Path in Azure DevOps Analytics\nDESCRIPTION: Power BI query that filters User Stories by a specific iteration path and area path, excluding completed items, within a date range. Results are grouped by date, state category, state, and area path with count and story point calculations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_6\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\"\n        &\"$apply=filter(WorkItemType eq 'User Story' \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and startswith(Iteration/IterationPath,'{iterationpath}') \"\n            &\"and DateValue ge {startdate} \"\n            &\"and DateValue le {enddate} \"\n            &\") \"\n        &\"/groupby ( \"\n            &\"(DateValue,StateCategory,State,Area/AreaPath,AreaSK), \"\n            &\"aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Using a Job Template with Custom Steps in YAML\nDESCRIPTION: This example demonstrates how to use a job template and insert custom steps at specific points.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-expressions.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# File: .vsts.ci.yml\n\njobs:\n- template: jobs/build.yml\n  parameters:\n    preBuild:\n    - script: echo hello from pre-build\n    preTest:\n    - script: echo hello from pre-test\n```\n\n----------------------------------------\n\nTITLE: Force Pushing Git Changes to Remote Repository\nDESCRIPTION: Use the force push command to override the remote repository with local changes. This updates the server repository to match the local state after removing large binaries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/remove-binaries.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit push --force\n```\n\n----------------------------------------\n\nTITLE: Changing Directory to Cloned Repository\nDESCRIPTION: A command to navigate to the cloned repository directory. This is used after cloning to position your command line in the repository folder for subsequent Git commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-repo-intellij.md#2025-04-22_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\ncd DeepSpace\n```\n\n----------------------------------------\n\nTITLE: Publishing Code Coverage Results in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to publish code coverage results to the server using the PublishCodeCoverageResults task in an Azure Pipelines YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_23\n\nLANGUAGE: YAML\nCODE:\n```\n- task: PublishCodeCoverageResults@1\n  inputs: \n    codeCoverageTool: Cobertura\n    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'\n    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'\n```\n\n----------------------------------------\n\nTITLE: Using Placeholders in Trello Card Names with Azure DevOps\nDESCRIPTION: Example of using placeholders to dynamically generate Trello card names based on Azure DevOps work item information. This snippet demonstrates how to include work item type, ID, and title in the card name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/services/trello.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n{{workitem.workItemType}} #{{workitem.id}}: {{workitem.title}}\n```\n\n----------------------------------------\n\nTITLE: Merging Specific Files in Azure DevOps (Batch)\nDESCRIPTION: This command merges a specific file (Util.cs) from $/BranchA/ to $/BranchB/. It's used to merge changes made to a particular file between branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rollback-command-team-foundation-version-control.md#2025-04-22_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nc:\\workspace> tf merge $/BranchA/Util.cs $/BranchB/Util.cs\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Extension Unpublish/Remove Requirements\nDESCRIPTION: Table showing the criteria for unpublishing or removing extensions from the Visual Studio Marketplace. Defines requirements for both free and paid extensions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/overview.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Action    | Requirements                                                  |\n|-----------|---------------------------------------------------------------|\n| Unpublish | Only **free extensions** might be unpublished.                  |\n| Remove    | Your extension must have **zero (0)** installs to be removed. |\n```\n\n----------------------------------------\n\nTITLE: Starting macOS Agent Service\nDESCRIPTION: Command to start the macOS agent service after it has been installed as a launchd service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh start\n```\n\n----------------------------------------\n\nTITLE: Cleaning Workspace Excluding Ignored Items with TFVC Reconcile\nDESCRIPTION: Cleans all local items except those ignored by version control using the TFVC reconcile command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/reconcile-command.md#2025-04-22_snippet_1\n\nLANGUAGE: Batch\nCODE:\n```\ntf reconcile /clean /ignore\n```\n\n----------------------------------------\n\nTITLE: Work Items Count Query\nDESCRIPTION: OData query to return the count of work items for a specific project in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/account-scoped-queries.md#2025-04-22_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/v1.0/WorkItems/$count\n```\n\n----------------------------------------\n\nTITLE: Installing Python Packages from Azure Artifacts\nDESCRIPTION: Commands to install Python packages from Azure Artifacts feed\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/python-packages.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npip install\npip install <PACKAGE_NAME>\n```\n\n----------------------------------------\n\nTITLE: Importing Automated Test Cases using TCM Command-line Tool in PowerShell\nDESCRIPTION: This PowerShell command uses the TCM tool to import automated test cases from a specified test assembly into Azure DevOps. It allows for optional parameters to filter tests based on priority, category, and sync with a specific test suite.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_9\n\nLANGUAGE: PowerShell\nCODE:\n```\ntcm testcase /import /collection:teamprojectcollectionurl /teamproject:project\n             /storage:path\n             [/maxpriority:priority]\n             [/minpriority:priority]\n             [/category:filter]\n             [/syncsuite:id [/include]]\n             [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Updating Wiki Page with Azure CLI\nDESCRIPTION: This command updates an existing wiki page using the Azure DevOps CLI. It requires the page path, version, and wiki name, along with the new content or file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-edit-wiki.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page update --path\n                           --version\n                           --wiki\n                           [--comment]\n                           [--content]\n                           [--file-path]\n                           [--project]\n                           [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Source Branch Reference Examples\nDESCRIPTION: Examples of Build.SourceBranch variable values for different repository types and scenarios in Azure DevOps pipelines\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_23\n\nLANGUAGE: plaintext\nCODE:\n```\nrefs/heads/main\nrefs/pull/1/merge\n$/teamproject/main\nGated_2016-06-06_05.20.51.4369;username@live.com\nmyshelveset;username@live.com\nrefs/tags/your-tag-name\n```\n\n----------------------------------------\n\nTITLE: Accessing Universal Package API Endpoint for Organization Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting Universal Packages in an organization scoped feed using the REST API. This preview API allows for updating the views array of a Universal Package version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_10\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/_apis/packaging/feeds/{feedId}/upack/packages/{packageName}/versions/{packageVersion}?api-version=7.1-preview.1\n```\n\n----------------------------------------\n\nTITLE: Extension Icon Configuration in Manifest\nDESCRIPTION: Configuration for adding an extension icon that will be displayed in the Marketplace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-widget-manifest.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"icons\": {\n        \"default\": \"img/logo.png\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Dependency Chain with Yarn CLI\nDESCRIPTION: Demonstrates how to use the 'yarn why' command to find the complete dependency chain for a package. This example shows the dependency chain for the 'acorn' package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n> $ yarn why acorn\n yarn why v1.22.4\n [1/4] Why do we have the module \"acorn\"...?\n [2/4] Initialising dependency graph...\n [3/4] Finding dependency...\n [4/4] Calculating file sizes...\n => Found \"acorn@6.4.0\"\n info Reasons this module exists\n   - \"eslint#espree\" depends on it\n   - Hoisted from \"eslint#espree#acorn\"\n info Disk size without dependencies: \"1.09MB\"\n info Disk size with unique dependencies: \"1.09MB\"\n info Disk size with transitive dependencies: \"1.09MB\"\n info Number of shared dependencies: 0\n Done in 0.30s.\n```\n\n----------------------------------------\n\nTITLE: Checking Build Pipeline Authorization Scope - Azure DevOps Post-2020\nDESCRIPTION: Instructions for determining job authorization scope in versions after Azure DevOps 2020 for private projects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/access-tokens.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* If the pipeline is in a private project, check the Pipeline settings under your Azure DevOps **Organization settings**:\n  * If **Limit job authorization scope to current project for non-release pipelines** is enabled, then the scope is **project**.\n  * If **Limit job authorization scope to current project for non-release pipelines** is not enabled, then check the Pipeline settings under your **Project settings** in Azure DevOps:\n    * If **Limit job authorization scope to current project for non-release pipelines** is enabled, then the scope is **project**.\n    * If **Limit job authorization scope to current project for non-release pipelines** is not enabled, open the editor for the pipeline, and navigate to the **Options** tab.\n      * If the **Build job authorization scope** is **Current project**, then scope is **project**.\n      * Or else, scope is **collection**.\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary Trend for Build Workflow in Power BI\nDESCRIPTION: This Power BI query retrieves test run data for a specific pipeline's build workflow, aggregating results by date and calculating the pass rate.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_0\n\nLANGUAGE: Power Query M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestRuns?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"and CompletedOn/Date ge {startdate} \"\n                &\"and Workflow eq 'Build' \"\n            &\") \"\n        &\"/groupby( \"\n          &\"(CompletedOn/Date), \"\n          &\"aggregate( \"\n            &\"ResultCount with sum as ResultCount, \"\n            &\"ResultPassCount with sum as ResultPassCount, \"\n            &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n            &\"ResultNotImpactedCount with sum as ResultNotImpactedCount, \"\n            &\"ResultFailCount with sum as ResultFailCount \"\n         &\")) \"\n       &\"/compute( \"\n       &\"iif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Setting Default Field Value in XML Process\nDESCRIPTION: Defines a default priority value of 'P3' for a work item field with allowed values of P1, P2, and P3.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"MyCorp.Priority\" name=\"Priority\" type=\"String\">\n<HELPTEXT>Specify the severity of the problem</HELPTEXT>\n   <ALLOWEDVALUES>\n      <LISTITEM value=\"P1\"/>\n      <LISTITEM value=\"P2\"/>\n      <LISTITEM value=\"P3\"/>\n   </ALLOWEDVALUES>\n<DEFAULT from=\"value\" value=\"P3\"/>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Exporting Functions in PowerShell Manifest\nDESCRIPTION: Configuration setting that specifies which functions are accessible to users when they import the module.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nFunctionsToExport = @('PowerShell-Demo')\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Backlog State Mappings in ProcessConfiguration XML\nDESCRIPTION: XML configuration that maps the New, Active, and Closed states for the Task Category in the ProcessConfiguration file. This defines how work item states are tracked in the task backlog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/set-up-your-backlog.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n  <TaskBacklog category=\"Microsoft.TaskCategory\" pluralName=\"Tasks\" singularName=\"Task\" workItemCountLimit=\"1000\">\n    <States>\n      <State value=\"New\" type=\"Proposed\" />\n      <State value=\"Active\" type=\"InProgress\" />\n      <State value=\"Closed\" type=\"Complete\" />\n    </States>\n. . .\n  </TaskBacklog>\n```\n\n----------------------------------------\n\nTITLE: Filtering by Work Item Type in Azure DevOps Search\nDESCRIPTION: This snippet demonstrates the shortcut filter `t:` used in Azure DevOps semantic search to find work items of a specific type. Replace 'Work item type' with the desired type (e.g., Bug, Task, User Story).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_3\n\nLANGUAGE: azure-devops-search\nCODE:\n```\nt: <Work item type>\n```\n\n----------------------------------------\n\nTITLE: OData Query for User Story Burndown in Azure DevOps Analytics\nDESCRIPTION: This OData query filters user stories that aren't completed, within a specific iteration timeframe starting from 2022-01-01. It groups the results by date, iteration, area path and other fields, aggregating the count and sum of story points.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-sprintburndown.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \n        $apply=filter(\n            WorkItemType eq 'User Story'\n            and startswith(Area/AreaPath,'{areapath}')\n            and StateCategory ne 'Completed'\n            and DateValue ge Iteration/StartDate\n            and DateValue le Iteration/EndDate\n            and Iteration/StartDate ge 2022-01-01Z\n        )\n        /groupby(\n            (DateValue,Iteration/EndDate,Area/AreaPath,Iteration/IterationPath,State,WorkItemType,Priority,AreaSK),\n            aggregate($count as Count, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Reading Transformed Secrets in Azure DevOps Pipelines with Bash\nDESCRIPTION: Shows how a transformed secret (registered using task.setsecret) is automatically masked when output to the console in a Bash task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\n- bash: |\n    echo \"Transformed and derived secrets will be masked: $(echo $OLDSECRET|base64)\"\n  env:\n    OLDSECRET: \"SeCrEtVaLuE\"\n```\n\n----------------------------------------\n\nTITLE: Targeted VM Deployment Pipeline Configuration in YAML\nDESCRIPTION: YAML configuration that targets a specific VM resource within an environment for deployment using the resourceName property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/environments-virtual-machines.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: \n- main\n\npool: \n   vmImage: ubuntu-latest\n\njobs:\n- deployment: VMDeploy\n  displayName: Deploy to VM\n  environment: \n    name: VMenv\n    resourceType: virtualMachine\n    resourceName: RESOURCE-PC\n  strategy:\n    runOnce:\n      deploy:   \n          steps:\n          - script: echo \"Hello world\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Docker Host Service Connection Parameters\nDESCRIPTION: Table defining the configuration parameters needed to set up a Docker Host service connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/service-endpoints.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Parameter | Description |\n| --------- | ----------- |\n| Server URL | Required. The URL of the Docker host. |\n| CA certificate | Required. A trusted certificate authority certificate to use to authenticate with the host. |\n| Certificate | Required. A client certificate to use to authenticate with the host. |\n| Key | Required. The key specified in the Docker key.pem file. |\n| Service connection name | Name for the service connection |\n| Connection name | Required. The name you use to refer to the service connection in task properties. If you're using YAML, use the name as the **azureSubscription** or the equivalent subscription name value in the script. |\n| Description | Optional. The description of the service connection. |\n| Security | Optional. Select **Grant access permission to all pipelines** to allow all pipelines to use this connection. If you don't select this option, you must explicitly authorize the service connection for each pipeline that uses it. |\n```\n\n----------------------------------------\n\nTITLE: Retrieving Work Items with Bug Relationships Using OData Query\nDESCRIPTION: This OData query retrieves requirement work items from Azure DevOps Analytics and expands their links to bug work items. It filters by iteration and area path, includes only requirement backlog items while excluding bugs, and groups the bug links by state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $filter=(\n        IterationSK eq {iterationSK}  \n        and AreaSK eq {areaSK} \n        and Processes/any(p:p/BacklogType eq 'RequirementBacklog') \n        and Processes/all(p:p/IsBugType eq false)\n    )\n&$expand=Links(\n    $apply=filter(\n        (LinkTypeName eq 'Child' or LinkTypeName eq 'Related')\n        and TargetWorkItem/WorkItemType eq 'Bug'\n    )\n    /groupby(\n        (TargetWorkItem/State),\n        aggregate($count as Count)\n    )\n)&$select=WorkItemId,Title\n```\n\n----------------------------------------\n\nTITLE: SSH-RSA Deprecation Warning Message (Blocked)\nDESCRIPTION: Example output showing the error message when using the deprecated ssh-rsa algorithm with Azure DevOps, where the connection is intentionally blocked with information about random brownouts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_5\n\nLANGUAGE: output\nCODE:\n```\nYou're using ssh-rsa that is about to be deprecated and your request has been blocked intentionally. Any SSH session using ssh-rsa is subject to brown out (failure during random time periods). Please use rsa-sha2-256 or rsa-sha2-512 instead. For more details see https://devblogs.microsoft.com/devops/ssh-rsa-deprecation.\n```\n\n----------------------------------------\n\nTITLE: Capturing PerfView Traces for Visual Studio Build in Azure DevOps\nDESCRIPTION: A series of PowerShell tasks that download and use PerfView to capture performance traces during a Visual Studio build. The script starts tracing before the build, stops it after, and uploads the resulting trace files as pipeline artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: PowerShell@2 # download the perfview exe\n  inputs:\n    targetType: 'inline'\n    script: |\n      invoke-webrequest https://github.com/microsoft/perfview/releases/download/v3.1.7/PerfView.exe -OutFile PerfView.exe\n\n- task: PowerShell@2\n  inputs:\n    targetType: 'inline' # start perfview to capture the traces before build build task\n    script: '$(System.DefaultWorkingDirectory)\\PerfView.exe \"/DataFile:PerfViewData.etl\" /accepteula /BufferSizeMB:512 /StackCompression /CircularMB:5000 /Providers:\"Microsoft-Windows-IIS\" /logfile:\"PerfView.log\" /zip:true /norundown start'\n\n- task: VSBuild@1\n  displayName: '$(solution)' # build of the solution, note the msbuildargs might be different for your scenario\n  inputs:\n    solution: '$(solution)'\n    clean: true\n    msbuildArgs: '/p:DeployOnBuild=true /p:PrecompileBeforePublish=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(Build.ArtifactStagingDirectory)\" /p:TransformWebConfigEnabled=false /p:AutoParameterizationWebConfigConnectionStrings=false /p:MarkWebConfigAssistFilesAsExclude=false /p:ProfileTransformWebConfigEnabled=false /p:IsTransformWebConfigDisabled=true'\n    platform: '$(buildPlatform)'\n    configuration: '$(buildConfiguration)'\n\n- task: PowerShell@2 # stop the perfview tracing\n  inputs:\n    targetType: 'inline' \n    script: |\n      $(System.DefaultWorkingDirectory)\\perfview.exe /accepteula /logfile:\"PerfView.log\" stop\n\n- task: PowerShell@2 # abort perfview, it seems required.\n  inputs:\n    targetType: 'inline'\n    script: '$(System.DefaultWorkingDirectory)\\perfview.exe /accepteula /logfile:\"PerfView.log\" abort'\n\n- task: PowerShell@2 # add a sleep of 5 mins, to give it time for required traces to be complete\n  inputs:\n    targetType: 'inline'\n    script: 'Start-Sleep -Seconds 300'\n\n- task: PublishPipelineArtifact@1 # upload the traces\n  displayName: 'Publish Pipeline Artifact'\n  inputs:\n    artifactName: webapp\n```\n\n----------------------------------------\n\nTITLE: Searching by Type and Reason using Shortcut and Friendly Name\nDESCRIPTION: This example demonstrates searching for work items using a combination of the type shortcut (`T:`) and a field's friendly name (`Reason`). The query `T:Story Reason=Cut` finds User Stories whose Reason field is set to 'Cut'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_11\n\nLANGUAGE: azure-devops-search\nCODE:\n```\nT:Story Reason=Cut\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization URL Format\nDESCRIPTION: The URL format for accessing an Azure DevOps organization. Replace {Your_Organization} with your organization name to access your Azure DevOps instance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/sign-up-msft-account.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}\n```\n\n----------------------------------------\n\nTITLE: Installing IIS, ASP.NET 4.5, and .NET Framework Features with PowerShell\nDESCRIPTION: This PowerShell command installs the Windows IIS web server along with ASP.NET 4.5 and .NET Framework features. It should be run in an elevated PowerShell command prompt to ensure proper installation with administrative privileges.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/includes/prepare-aspnet-windows-vm.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nInstall-WindowsFeature Web-Server,Web-Asp-Net45,NET-Framework-Features\n```\n\n----------------------------------------\n\nTITLE: OData Query with Parameter Aliases\nDESCRIPTION: Example showing how to use parameter aliases to separate dynamic values from the main query text, specifically filtering work items by creation date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_33\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=CreatedDateSK ge @createdDateSK\n  &$select=WorkItemId, Title, State\n  &@createdDateSK=20200101\n```\n\n----------------------------------------\n\nTITLE: Deleting npm Package Versions Using CLI\nDESCRIPTION: Command to delete a specific version of an npm package. This removes the package from the feed but does not delete all versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/how-to/delete-and-recover-packages.md#2025-04-22_snippet_2\n\nLANGUAGE: Command\nCODE:\n```\nnpm unpublish <package>@<version>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Shelveset in TFVC\nDESCRIPTION: This example demonstrates how to delete a shelveset named 'HelloWorld_24' from the Azure DevOps server using the /delete option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelve-command.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects> tf shelve HelloWorld_24 /delete\n```\n\n----------------------------------------\n\nTITLE: Rolling Back Changes Without /keepmergehistory in Azure DevOps (Batch)\nDESCRIPTION: This command rolls back the changes made in changeset 314 without using the /keepmergehistory option. This allows the rolled-back changes to be reapplied in future merges.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rollback-command-team-foundation-version-control.md#2025-04-22_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\nc:\\workspace> tf rollback /changeset:314\n```\n\n----------------------------------------\n\nTITLE: Creating Secure Personal Access Token in PowerShell\nDESCRIPTION: This snippet demonstrates how to create a secure string from a personal access token and create a PSCredential object for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/powershell-upstream-source.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$patToken = \"<YOUR_PERSONAL_ACCESS_TOKEN>\" | ConvertTo-SecureString -AsPlainText -Force\n```\n\nLANGUAGE: powershell\nCODE:\n```\n$myCredentialsObject = New-Object System.Management.Automation.PSCredential(\"<USER_NAME>\", $patToken)\n```\n\n----------------------------------------\n\nTITLE: Adding a Banner with Azure CLI in Azure DevOps\nDESCRIPTION: This command adds an information banner with a message, expiration date, and type using the Azure CLI. It demonstrates how to include a hyperlink in the message and handle special characters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-banners.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops admin banner add --message \"INFORMATION: Network domain updates will occur on September 3. <a href='https://example.org?page=network-updates&amp;anchor=september-3-2019'>More information</a>\" --expiration  2019-09-04 --type  info\n```\n\n----------------------------------------\n\nTITLE: Defining Initiative Work Item Type XML Structure\nDESCRIPTION: XML structure for the Initiative work item type definition, showing the basic structure with renamed elements. This is created by copying and modifying the Epic work item type definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-portfolio-backlogs.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<WORKITEMTYPE name=\"Initiative\" >\n  <DESCRIPTION>Initiatives help program managers to effectively manage and organize work across several teams ></DESCRIPTION>\n. . .\n</WORKITEMTYPE>\n```\n\n----------------------------------------\n\nTITLE: Listing Extension Events for Azure DevOps Auditing\nDESCRIPTION: This table details Azure DevOps audit events concerning extension management. It covers actions like enabling, disabling, installing, uninstalling, and updating extensions, listing the `Action` identifier and a `Description` containing placeholders for extension name, publisher, and version information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Extension events\n\n| Action | Description |\n|--------|-------------|\n| `Extension.Disabled` | Extension \"{ExtensionName}\" from publisher \"{PublisherName}\" was disabled. |\n| `Extension.Enabled` | Extension \"{ExtensionName}\" from publisher \"{PublisherName}\" was enabled. |\n| `Extension.Installed` | Extension \"{ExtensionName}\" from publisher \"{PublisherName}\" was installed - Version \"{Version}\". |\n| `Extension.Uninstalled` | Extension \"{ExtensionName}\" from publisher \"{PublisherName}\" was uninstalled. |\n| `Extension.VersionUpdated` | Extension \"{ExtensionName}\" from publisher \"{PublisherName}\" was updated from version \"{FromVersion}\" to version \"{Version}\". |\n```\n\n----------------------------------------\n\nTITLE: YAML Output for Team Creation in Azure DevOps\nDESCRIPTION: This YAML output shows the detailed attributes of the newly created team, including its ID, identity information, properties, and associated URLs. It provides a comprehensive view of the team's configuration within Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/add-teams.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nid: d3ee0804-601e-459b-ba31-c70d0153ee6b\nidentity:\n  descriptor: Microsoft.TeamFoundation.Identity;S-1-9-1551374245-1732201093-1654247747-2842177119-783707289-1-3902693433-3854875975-3003387648-1936292500\n  id: d3ee0804-601e-459b-ba31-c70d0153ee6b\n  isActive: true\n  isContainer: true\n  masterId: d3ee0804-601e-459b-ba31-c70d0153ee6b\n  memberOf: []\n  members: []\n  metaTypeId: 255\n  properties:\n    Account:\n      $type: System.String\n      $value: Production Planning\n    Description:\n      $type: System.String\n      $value: Team tasked with planning operations and new processes.\n    Domain:\n      $type: System.String\n      $value: vstfs:///Classification/TeamProject/854a3f67-9962-43d1-a968-2e5f2eb66c99\n    LocalScopeId:\n      $type: System.String\n      $value: 854a3f67-9962-43d1-a968-2e5f2eb66c99\n    Microsoft.TeamFoundation.Team:\n      $type: System.Boolean\n      $value: true\n    SchemaClassName:\n      $type: System.String\n      $value: Group\n    ScopeId:\n      $type: System.String\n      $value: f0bedec1-eaee-4e51-ba15-01716ab2095e\n    ScopeName:\n      $type: System.String\n      $value: Fabrikam Fiber\n    ScopeType:\n      $type: System.String\n      $value: TeamProject\n    SecuringHostId:\n      $type: System.String\n      $value: 5d5b8da6-3db7-4829-baf9-1e500c21cc12\n    SecurityGroup:\n      $type: System.String\n      $value: SecurityGroup\n    SpecialType:\n      $type: System.String\n      $value: Generic\n    VirtualPlugin:\n      $type: System.String\n      $value: ''\n  providerDisplayName: '[Fabrikam Fiber]\\Production Planning'\n  resourceVersion: 2\n  subjectDescriptor: vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzMyMjAxMDkzLTE2NTQyNDc3NDctMjg0MjE3NzExOS03ODM3MDcyODktMS0zOTAyNjkzNDMzLTM4NTQ4NzU5NzUtMzAwMzM4NzY0OC0xOTM2MjkyNTAw\nidentityUrl: https://spsprodeus27.vssps.visualstudio.com/A5d5b8da6-3db7-4829-baf9-1e500c21cc12/_apis/Identities/d3ee0804-601e-459b-ba31-c70d0153ee6b\nname: Production Plan\nprojectId: 854a3f67-9962-43d1-a968-2e5f2eb66c99\nprojectName: Fabrikam Fiber\nurl: https://fabrikamprime.visualstudio.com/_apis/projects/854a3f67-9962-43d1-a968-2e5f2eb66c99/teams/d3ee0804-601e-459b-ba31-c70d0153ee6b\n```\n\n----------------------------------------\n\nTITLE: Azure Key Vault Issuer URL Configuration\nDESCRIPTION: URL format for configuring the issuer in federated credentials. Requires replacing the placeholder with the organization's tenant ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://login.microsoftonline.com/<TENANT_ID>/v2.0\n```\n\n----------------------------------------\n\nTITLE: Definition of SourceWorkflow Enumerated Type in Azure DevOps\nDESCRIPTION: This table defines the members of the SourceWorkflow enumerated type in Azure DevOps, which represents different pipeline workflow types including Build, Release, and Manual.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| Display name | Member name  | Value        | \n|--------------|--------------|--------------| \n|Build          |`Build`     | 1            |\n|Release        |`Release`   | 2            |       \n|Manual         |`Manual`    | 3            | \n```\n\n----------------------------------------\n\nTITLE: Updating Wiki Page with Content from File\nDESCRIPTION: This example shows how to update a wiki page using content from a file with the Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-edit-wiki.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page update --path 'my page' --wiki myprojectwiki --file-path a.txt --encoding utf-8 --version 4ae78ad5835cb7dd55072fe210c9ee7eb6d6413b\n```\n\n----------------------------------------\n\nTITLE: Querying Projects in Azure DevOps Services (Cloud)\nDESCRIPTION: This example demonstrates how to query the Projects entity set to retrieve project names in an Azure DevOps Services organization. It uses the $select operator to return only the ProjectName field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/_odata/v4.0-preview/Projects?$select=ProjectName\n```\n\n----------------------------------------\n\nTITLE: Linking Work Items to Git Commits Using Commit Comments\nDESCRIPTION: Use the git-commit command with a work item ID in the comment to create a link between the commit and the work item. When pushed, the system automatically creates a Commit link.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/add-link.md#2025-04-22_snippet_0\n\nLANGUAGE: Git\nCODE:\n```\n#35 Catch null exception\n```\n\n----------------------------------------\n\nTITLE: Querying Teams Data in Power BI M Language\nDESCRIPTION: This query retrieves team data from Azure DevOps Analytics, selecting TeamName and TeamSK fields for specified teams.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-team-filter.md#2025-04-22_snippet_0\n\nLANGUAGE: M\nCODE:\n```\nlet\n    #\"Get table\" = VSTS.Feed(\"https://analytics.dev.azure.com/{OrganizationName}/_odata/v2.0/Teams?$select=TeamName,TeamSK&$filter=TeamName eq '{TeamName1}' or TeamName eq '{TeamName2}'\"),\n    #\"Select columns\" = Table.SelectColumns(#\"Get table\", {\"TeamName\", \"TeamSK\"})\nin\n    #\"Select columns\"\n```\n\n----------------------------------------\n\nTITLE: Project DELETE Permission\nDESCRIPTION: Permission namespace definition for deleting a team project from an organization or project collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nProject, DELETE\n```\n\n----------------------------------------\n\nTITLE: Using @StartOf Date Macros in Azure Boards Queries\nDESCRIPTION: Example of using @StartOf macros to query work items for a specific time period. These macros include @StartOfYear, @StartOfMonth, @StartOfWeek, and @StartOfDay, which can be combined with modifiers to create flexible date-based queries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/boards/sprint-150-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nState Change Date >= @StartOfYear and State Change Date <= @StartOfYear(\"+3M\")\n```\n\n----------------------------------------\n\nTITLE: Creating and Switching to a New Git Branch\nDESCRIPTION: This command creates a new branch named 'cool-new-feature' and immediately switches to it. It's a shortcut combining branch creation and checkout operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/history.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b cool-new-feature\n```\n\n----------------------------------------\n\nTITLE: Querying Iteration Capacity with Azure DevOps REST API\nDESCRIPTION: Introduces the new `Iterationcapacities` REST API endpoint used to retrieve the total capacity for all teams associated with a specific iteration. Providing the `iterationId` returns the capacity for each team and an overall total, simplifying increment capacity planning. Refer to the linked documentation for full API details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/boards/sprint-187-update.md#2025-04-22_snippet_0\n\nLANGUAGE: rest-api\nCODE:\n```\nIterationcapacities\n```\n\n----------------------------------------\n\nTITLE: Setting Git Cryptographic Network Provider via Command Line\nDESCRIPTION: This command sets the SSL backend for Git's HTTP operations. It corresponds to the Cryptographic network provider setting in Visual Studio's Git Global Settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/git-config-cryptographic-provider.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit config http.sslBackend\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® ART to Azure Boards Teams in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® term 'Agile Release Train (ART)' to Azure Boards 'Teams'. It explains that Agile teams manage deliverables and utilize Azure Boards Agile tools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Agile Release Train (ART) \n   :::column-end:::\n   :::column span=\"3\":::\n       [**Teams**](safe-concepts.md#teams). Agile teams manage the work of deliverables for a set of Features. Each Agile team has a [set of Agile tools](../../organizations/settings/about-teams-and-settings.md) to support the flow of work and review progress and deliverables. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Creating an App Service Plan in Azure with Azure CLI\nDESCRIPTION: Azure CLI command to create a Linux-based App Service plan that will host the web applications for development and staging environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_3\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz appservice plan create \\\n  --name tailspin-space-game-asp \\\n  --resource-group tailspin-space-game-rg \\\n  --sku B1 \\\n  --is-linux\n```\n\n----------------------------------------\n\nTITLE: Filtering by Iteration Path in OData\nDESCRIPTION: This query shows how to filter work items based on a specific iteration path. It demonstrates how to reference navigation properties in filter clauses by using the property name followed by the field to filter on.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?$filter=Iteration/IterationPath eq 'Project Name\\Iteration 1'\n```\n\n----------------------------------------\n\nTITLE: Versioning NuGet Packages using NuGetCommand@2 in YAML\nDESCRIPTION: Demonstrates using the `NuGetCommand@2` task in Azure Pipelines YAML to pack a NuGet package. It employs the `byPrereleaseNumber` versioning scheme, automatically generating a pre-release version based on the current date and time appended to the specified Major, Minor, and Patch versions defined in pipeline variables (`$(Major)`, `$(Minor)`, `$(Patch)`).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/nuget.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  Major: '1'\n  Minor: '0'\n  Patch: '0'\n\nsteps:\n- task: NuGetCommand@2\n  inputs:\n    command: pack\n    versioningScheme: byPrereleaseNumber\n    majorVersion: '$(Major)'\n    minorVersion: '$(Minor)'\n    patchVersion: '$(Patch)'\n```\n\n----------------------------------------\n\nTITLE: Documentation Note Block in Markdown\nDESCRIPTION: Markdown formatted note block explaining that UI images show the New Boards Hub feature enabled by default, with a reference link to feature management documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/note-new-boards-hub-default-images.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\n> The following images display the user interface with the **New Boards Hub** feature enabled by default. For more information, see [Manage or enable features](../../project/navigation/preview-features.md).\n```\n\n----------------------------------------\n\nTITLE: Deleting a Variable Group with Azure DevOps CLI\nDESCRIPTION: Command to delete a variable group using its ID without requiring confirmation. This example deletes the variable group with ID 1.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group delete --group-id 1 --yes\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Project Permissions Markdown Documentation\nDESCRIPTION: Markdown documentation showing how to manage project-level permissions in Azure DevOps, including steps for both preview and current page interfaces. Contains detailed instructions and UI references for modifying group and individual user permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/change-project-level-permissions.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n#### [Current page](#tab/current-page) \n\n1. Open the **Security** page as described in the previous section, [Add a user or group to the Project Administrators group](#add-user-group). \n\n1. From the **Security** page, choose the group whose permissions you want to change. \n\n    For example, we grant permission to the **Contributors** group to **Delete and restore work items**.  \n\n    > [!div class=\"mx-imgBorder\"]  \n    > ![Screenshot of Contributors group, permissions, current page.](media/project-level-permissions-contributors-group.png)  \n\n2. Select **Save changes**.   \n\n* * *\n```\n\n----------------------------------------\n\nTITLE: OData Query for Task Burndown with Remaining Work in Azure DevOps\nDESCRIPTION: This OData query retrieves task work items that aren't completed in the current iteration. It filters by area path and groups results by date, state, and other fields, aggregating the count and total remaining work for burndown reporting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-sprintburndown.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \n        $apply=filter(\n            startswith(Area/AreaPath,'{project}')\n            and StateCategory ne 'Completed'\n            and DateValue ge Iteration/StartDate\n            and DateValue le Iteration/EndDate\n            and Iteration/StartDate le now() \n            and Iteration/EndDate ge now()\n            and WorkItemType eq 'Task'\n        )\n            /groupby(\n            (DateValue,State,WorkItemType,Activity,Priority,Area/AreaPath,Iteration/IterationPath,AreaSK),\n            aggregate($count as Count, RemainingWork with sum as TotalRemainingWork)\n        )\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 221 Azure Boards Update Links (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/boards/sprint-221-update-links.md`), likely containing links related to the Azure Boards updates in Sprint 221. It's used to modularize documentation within the Azure documentation system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-221-update-links](includes/boards/sprint-221-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 177 Update Details (Markdown)\nDESCRIPTION: Uses a Markdown include directive to embed the detailed feature descriptions for Azure Pipelines released in Sprint 177, sourced from the specified markdown file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-177-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-177-update](includes/pipelines/sprint-177-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Moniker Range Conditional Block\nDESCRIPTION: Markdown conditional block that displays content only for Azure DevOps 2020 and newer versions using moniker range syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/quick-ref.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\">= azure-devops-2020\"\n- [Define a work item template](../backlogs/work-item-template.md)\n- [Delete work item tags](../queries/add-tags-to-work-items.md#delete-remove-or-manage-tags)  \n- [Delete work items](../backlogs/remove-delete-work-items.md)  \n- [Display rollup](../backlogs/display-rollup.md)  \n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items Assigned to Team Group in Azure DevOps\nDESCRIPTION: This snippet demonstrates how to create a query in Azure DevOps that finds work items assigned to members of a specific team group. The query uses the 'In Group' operator with the team group name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/about-teams-and-settings.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Web portal, Queries page, Query that uses In Group operator and team group name](../../boards/plans/media/query-in-group-email-team-work-in-progress.png)\n```\n\n----------------------------------------\n\nTITLE: Using Build.DefinitionVersion Variable in Azure DevOps Pipelines\nDESCRIPTION: Indicates the version of the build pipeline definition. It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_9\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.DefinitionVersion\n```\n\n----------------------------------------\n\nTITLE: Deleting Labels in TFVC\nDESCRIPTION: Command syntax for removing a label from the TFVC system, which deletes the label entirely rather than just removing it from specific items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/label-command-team-foundation-version-control.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ntf label /delete labelname[@scope] \nitemspec [/login:username,[password]] [/collection:TeamProjectCollectionUrl]\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Node Versions with Separate Entry Points in task.json\nDESCRIPTION: This snippet shows how to configure the execution section in task.json to support multiple Node versions with separate entry points. It allows for optimized targets for each supported Node version (10, 16, and 20).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_25\n\nLANGUAGE: nodejs\nCODE:\n```\n\"execution\": {\n  \"Node10\": {\n    \"target\": \"bash10.js\",\n    \"argumentFormat\": \"\"\n  },\n  \"Node16\": {\n    \"target\": \"bash16.js\",\n    \"argumentFormat\": \"\"\n  },\n  \"Node20_1\": {\n    \"target\": \"bash20.js\",\n    \"argumentFormat\": \"\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Only Folders in TFVC Root\nDESCRIPTION: Example demonstrating how to display only folders in the root of the TFVC server using the /folders option and specifying the server path directly with $/.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/dir-command.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf dir /folders $/\n```\n\n----------------------------------------\n\nTITLE: Operating System Matrix in Travis CI\nDESCRIPTION: Travis CI configuration that creates a build matrix to run the same script across multiple operating systems (Linux, Windows, and macOS). This uses Travis CI's built-in OS support.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix:\n  include:\n  - os: linux\n  - os: windows\n  - os: osx\nscript: echo Hello, world!\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension for Azure DevOps with Version Support\nDESCRIPTION: Example demonstrating how to configure an extension to work with Azure DevOps cloud and specific server versions\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services.Cloud\"\n        },\n        {\n            \"id\": \"Microsoft.TeamFoundation.Server\",\n            \"version\": \"[15.0,)\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Query-Based Test Suites in Azure DevOps\nDESCRIPTION: Query clause to filter for query-based test suites by combining work item type and test suite type conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/build-test-integration.md#2025-04-22_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nWork Item Type = Test Suite And Test Suite Type = Query Based\n```\n\n----------------------------------------\n\nTITLE: Selecting macOS Agent Pool in Azure Pipelines YAML\nDESCRIPTION: Configures the pipeline to run on a Microsoft-hosted agent using the latest available macOS virtual machine image. This is necessary for executing Xcode builds which require a macOS environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/xcode.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'macOS-latest'\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Runs Filtered by Branch in Power BI\nDESCRIPTION: Power BI query that retrieves pipeline run outcomes grouped by branch name, allowing for branch-specific outcome analysis with a slicer to filter results by branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_4\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\") \"\n        &\"/groupby( \"\n        &\"(Branch/BranchName), \"\n            &\"aggregate( \"\n                &\"$count as TotalCount, \"\n                &\"SucceededCount with sum as SucceededCount , \"\n            &\"FailedCount with sum as FailedCount, \"\n                &\"PartiallySucceededCount with sum as PartiallySucceededCount , \"\n            &\"CanceledCount with sum as CanceledCount \"\n        &\")) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Resolving 'TF400499' Error in Azure DevOps CLI Team Area Management (Azure CLI)\nDESCRIPTION: Addresses the `TF400499` error that occurs when adding, removing, or updating a team area via Azure DevOps CLI. The error stems from including the `Area` keyword in the `--path` parameter. The correct path format should be `\\ProjectName\\RootAreaName\\ChildArea1`, omitting the intermediate `Area` segment. This applies to commands like `az boards area team add`, `remove`, or `update`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/troubleshooting.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nTF400499: You have not set your team field.\n```\n\nLANGUAGE: text\nCODE:\n```\n\\ProjectName\\RootAreaName\\ChildArea1\n```\n\nLANGUAGE: text\nCODE:\n```\n\\ProjectName\\Area\\RootAreaName\\ChildArea1\n```\n\n----------------------------------------\n\nTITLE: Setting Server Default Values in Transition\nDESCRIPTION: Shows how to set server default values during work item transition, including copying current user and server clock values to fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<TRANSITION from=\"New\" to=\"Active\">\n   <ACTIONS>\n      <ACTION value=\"Microsoft.VSTS.Actions.StartWork\" />\n   </ACTIONS>\n   <REASONS>\n      <DEFAULTREASON value=\"Work started\" />\n   </REASONS>\n   <FIELDS>\n      <FIELD refname=\"Microsoft.VSTS.Common.ActivatedBy\">\n            <COPY from=\"currentuser\" />\n            <VALIDUSER />\n            <REQUIRED />\n      </FIELD>\n      <FIELD refname=\"Microsoft.VSTS.Common.ActivatedDate\">\n         <SERVERDEFAULT from=\"clock\" />\n      </FIELD>\n      <FIELD refname=\"System.AssignedTo\">\n      <DEFAULT from=\"currentuser\" />\n      </FIELD>\n   </FIELDS>\n</TRANSITION>\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group using Azure CLI\nDESCRIPTION: This Azure CLI command deletes the resource group and all its associated resources created during the tutorial. It's part of the cleanup process after completing the Azure Key Vault integration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/azure-key-vault.md#2025-04-22_snippet_6\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group delete --name <YOUR_RESOURCE_GROUP_NAME>\n```\n\n----------------------------------------\n\nTITLE: SSH Config for Host Key Algorithm Compatibility\nDESCRIPTION: SSH configuration to downgrade security settings by enabling ssh-rsa host key algorithm when connecting to Azure DevOps servers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nHost ssh.dev.azure.com vs-ssh.visualstudio.com\n  HostkeyAlgorithms +ssh-rsa\n```\n\n----------------------------------------\n\nTITLE: Staging All Changes Using Git CLI\nDESCRIPTION: Command to stage all tracked and untracked files that have changed since the last commit, excluding ignored files\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/commits.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit add --all\n```\n\n----------------------------------------\n\nTITLE: Configuring IP V6 Ranges for Azure Pipelines Firewall Access\nDESCRIPTION: This code snippet provides the IP V6 ranges that need to be allow-listed in firewalls or IP restrictions to ensure proper functioning of Azure Pipelines. These ranges should be added to existing allow-listed IPs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/web-proxy-bypass.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n2620:1ec:4::/48\n2620:1ec:a92::/48\n2620:1ec:21::/48\n2620:1ec:22::/48\n2620:1ec:50::/48 \n2620:1ec:51::/48 \n2603:1061:10::/48\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Repository Permissions Matrix in Markdown\nDESCRIPTION: A structured markdown table showing the permission levels for different user roles in Azure DevOps Repositories. Shows detailed breakdown of access rights from basic read operations to advanced administrative functions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/code-git.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"2\":::\n      **Permission** \n   :::column-end:::\n   :::column span=\"1\":::\n     **Readers**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Contributors**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Build Admins**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Project Admins**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Adding Local Items to Version Control with TFVC Reconcile\nDESCRIPTION: Adds all locally created items to version control pending changes without opening the Promote Candidate Changes dialog box.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/reconcile-command.md#2025-04-22_snippet_6\n\nLANGUAGE: Batch\nCODE:\n```\ntf reconcile /promote /adds /noprompt\n```\n\n----------------------------------------\n\nTITLE: Disconnecting from Remote Desktop using tscon command in Windows\nDESCRIPTION: This Windows command is used to disconnect from a Remote Desktop session without locking the computer, which is useful for running UI tests on an agent with autologon enabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/agents.md#2025-04-22_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\n%windir%\\System32\\tscon.exe 1 /dest:console\n```\n\n----------------------------------------\n\nTITLE: Listing Security Groups in Azure DevOps CLI\nDESCRIPTION: Command syntax for listing all security groups in a project or organization. Includes optional parameters for pagination, project scope, and filtering by subject types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group list [--continuation-token]\n                              [--project]\n                              [--scope {organization, project}]\n                              [--subject-types]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Navigation Link in Markdown\nDESCRIPTION: Markdown link directing users to Azure DevOps portal with campaign tracking\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/artifacts/sprint-147-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Restoring a Deleted Project with REST API in Azure DevOps\nDESCRIPTION: HTTP PATCH request to restore a specific deleted project in Azure DevOps. This request changes the project state to 'wellFormed' to restore it.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/delete-project.md#2025-04-22_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPATCH http://ServerName:8080/tfs/DefaultCollection/_apis/projects/{projectId}?\napi-version=5.0-preview.3\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n \"state\" : \"wellFormed\"\n}\n```\n\n----------------------------------------\n\nTITLE: Complex OData Query with Aggregation Extensions\nDESCRIPTION: This query showcases the use of OData aggregation extensions. It filters work items, groups them by type and state, then applies additional filtering and grouping.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-supported-features.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nWorkitems?$apply=filter(State ne 'Closed')/groupby((WorkItemType, State), aggregate($count as Count))/filter(Count gt 100)/groupby((State),aggregate(Count with max as MaxCount))\n```\n\n----------------------------------------\n\nTITLE: Adding a Cargo Dependency to Your Project\nDESCRIPTION: Command to add a crate dependency (serde in this example) to your Cargo.toml file. This automatically updates your project's dependencies list.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncargo add serde\n```\n\n----------------------------------------\n\nTITLE: Skipping CI for Individual Pushes\nDESCRIPTION: This snippet demonstrates various commit message formats that can be used to skip running CI pipelines for specific pushes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/azure-repos-git.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n[skip ci] or [ci skip]\nskip-checks: true or skip-checks:true\n[skip azurepipelines] or [azurepipelines skip]\n[skip azpipelines] or [azpipelines skip]\n[skip azp] or [azp skip]\n***NO_CI***\n```\n\n----------------------------------------\n\nTITLE: Piping PAT Token to Azure DevOps CLI Login from File - Azure CLI\nDESCRIPTION: Facilitates secure, non-interactive login by reading a PAT token from a file and piping it into the Azure DevOps CLI login command. This is tailored for automation where tokens are stored separately and injected at runtime. The file ('my_pat_token.txt') must contain the PAT, and the Azure CLI with the Azure DevOps extension is required. Input is read from the specified file and output depends on sign-in success. Useful in scripts where secrets must not be exposed in environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/log-in-via-pat.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\ncat my_pat_token.txt | az devops login --organization https://dev.azure.com/contoso/\n```\n\n----------------------------------------\n\nTITLE: Merging a Feature Branch into Main\nDESCRIPTION: Merges the 'animals' branch back into main branch. This is the first merge operation in our history simplification example.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_3\n\nLANGUAGE: Git CLI\nCODE:\n```\n> git checkout main\n> git merge animals\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items Not Containing Specific Words in History\nDESCRIPTION: This query clause filters for work items whose History field does not contain the word \"beta\".\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/history-and-auditing.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`History Does Not Contain Words beta`\n```\n\n----------------------------------------\n\nTITLE: Listing Pull Requests Using Azure DevOps CLI\nDESCRIPTION: This command lists all pull requests in a repository with their details using the Azure DevOps CLI. It supports filtering by creator, repository, branch, status and other parameters. The example shows output formatted as a table.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/view-pull-requests.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr list [--creator]\n                 [--detect {false, true}]\n                 [--include-links]\n                 [--org]\n                 [--project]\n                 [--query-examples]\n                 [--repository]\n                 [--reviewer]\n                 [--skip]\n                 [--source-branch]\n                 [--status {abandoned, active, all, completed}]\n                 [--subscription]\n                 [--target-branch]\n                 [--top]\n```\n\n----------------------------------------\n\nTITLE: Configuring Sequential Lock Behavior in Azure DevOps YAML Pipelines - YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the exclusive lock behavior on an individual pipeline stage using the 'lockBehavior' property. Setting 'lockBehavior: sequential' ensures that all pipeline runs targeting the protected resource acquire the lock in order, preventing concurrent deployments. There are no additional dependencies beyond Azure DevOps YAML pipeline support, and the snippet assumes a valid pipeline context. Key parameters: 'stages', 'stage', 'lockBehavior', 'jobs', 'steps', and the sample script step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-190-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  lockBehavior: sequential\n  jobs:\n  - job: Job\n    steps:\n    - script: Hey!\n```\n\n----------------------------------------\n\nTITLE: Power BI Query for Task Burndown with Remaining Work in Azure DevOps\nDESCRIPTION: This Power BI M query connects to Azure DevOps Analytics and filters tasks that aren't completed in the current iteration. It groups results by date, state, work item type and other fields, aggregating the count and remaining work for burndown reporting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-sprintburndown.md#2025-04-22_snippet_6\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \"\n        &\"$apply=filter( \"\n            &\"startswith(Area/AreaPath,'{project}') \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and DateValue ge Iteration/StartDate \"\n            &\"and DateValue le Iteration/EndDate \"\n            &\"and Iteration/StartDate le now()  \"\n            &\"and Iteration/EndDate ge now() \"\n            &\"and WorkItemType eq 'Task' \"\n        &\") \"\n            &\"/groupby( \"\n            &\"(DateValue,State,WorkItemType,Activity,Priority,Area/AreaPath,Iteration/IterationPath,AreaSK), \"\n            &\"aggregate($count as Count, RemainingWork with sum as TotalRemainingWork) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Power BI Query for Team-Area Path Mapping\nDESCRIPTION: Query that retrieves the mapping between teams and Area Paths from Azure DevOps Analytics. Requires organization name, project name, and area path parameters. Returns AreaSK, AreaPath and associated TeamName fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-teamslicer.md#2025-04-22_snippet_0\n\nLANGUAGE: powerbi-query\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v1.0/Areas?\"\n        &\"$filter=startswith(AreaPath,'{areapath}') \"\n            &\"&$select=AreaSK,AreaPath \"\n            &\"&$expand=Teams($select=TeamName) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Counting Bugs Rolled Up to Features in OData\nDESCRIPTION: This OData query retrieves Features with a count of their child Bugs. It filters Features that aren't removed, are in a specific area path, and have descendants. The query expands related entities and counts how many Bugs are children of each Feature.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_9\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $filter=WorkItemType eq 'Feature'\n        and State ne 'Removed'\n        and startswith(Area/AreaPath,'{areapath}')\n        and Descendants/any()\n    &$select=WorkItemId,Title,WorkItemType,State,AreaSK\n    &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\n        Descendants(\n        $apply=filter(WorkItemType eq 'Bug')\n        /aggregate($count as CountOfBugs)\n        )\n```\n\n----------------------------------------\n\nTITLE: String Comparison in WIQL Queries\nDESCRIPTION: Shows how to compare string field values using equality and inequality operators with quoted string literals.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_34\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE [Custom.Blocking] = 'Not Blocking'\nWHERE [Custom.Blocking] <> 'Blocked'\n```\n\n----------------------------------------\n\nTITLE: Installing Microsoft.TeamFoundationServer.ExtendedClient NuGet Package\nDESCRIPTION: PowerShell command to install the Microsoft.TeamFoundationServer.ExtendedClient NuGet package using the Package Manager console in Visual Studio.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/dotnet-client-libraries.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nPM> Install-Package Microsoft.TeamFoundationServer.ExtendedClient\n```\n\n----------------------------------------\n\nTITLE: Signing in to Azure Repos from Microsoft Teams\nDESCRIPTION: Command to sign in to Azure Repos from a Microsoft Teams channel, which is required before creating subscriptions or using other Azure Repos features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-teams.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\n@azure repos signin\n```\n\n----------------------------------------\n\nTITLE: Including General Sprint 224 Updates\nDESCRIPTION: This directive includes content from a shared file containing general updates introduced in Sprint 224.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-224-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-224-update](includes/general/sprint-224-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating and Uploading a Dotnet Process Memory Dump Using ProcDump in Azure DevOps\nDESCRIPTION: A PowerShell script that downloads and uses ProcDump to create memory dumps of all dotnet processes after a test execution crash. The script compresses the dump files and uploads them to the pipeline for later analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# Run this task after your test execution crashes\n# with a condition of alway() so that it always runs\n- pwsh: |\n    Invoke-WebRequest https://download.sysinternals.com/files/Procdump.zip -OutFile $(Agent.TempDirectory)\\Procdump.zip\n    mkdir $(Agent.TempDirectory)\\Procdump\n    unzip $(Agent.TempDirectory)\\Procdump.zip -d Procdump\n    cd $(Agent.TempDirectory)\\Procdump\n    Get-Process dotnet | % { $(Agent.TempDirectory)\\procdump.exe -accepteula -ma $_.Id dotnet-$($_.Id).dmp }\n    Compress-Archive *.dmp -DestinationPath $(Agent.TempDirectory)\\dump_files.zip\n    Write-Host \"##vso[task.uploadfile]$(Agent.TempDirectory)\\dump_files.zip\"\n  condition: always()\n  displayName: 'Create and upload a dotnet process memory dump'\n```\n\n----------------------------------------\n\nTITLE: Bulk Unsubscribing Azure Pipelines Notifications in Teams/Slack\nDESCRIPTION: This command is executed within the Azure Pipelines app for Microsoft Teams or Slack to remove all subscriptions associated with a specific Azure DevOps project within the current channel. It requires the Azure Pipelines app to be installed and configured, and the correct project URL (e.g., `https://dev.azure.com/myorg/myproject`) must be provided.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/general/sprint-163-update.md#2025-04-22_snippet_0\n\nLANGUAGE: cli\nCODE:\n```\n@azure pipelines unsubscribe all https://dev.azure.com/myorg/myproject\n```\n\n----------------------------------------\n\nTITLE: Merging Changes Up to Specific Changeset in TFVC\nDESCRIPTION: Merges all changesets up to changeset 137 from branch1 to branch2.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merge-command.md#2025-04-22_snippet_3\n\nLANGUAGE: cmd\nCODE:\n```\nc:\\projects>tf merge /version:C137 branch1 branch2 /recursive\n```\n\n----------------------------------------\n\nTITLE: Disabling Azure DevOps Extension via CLI\nDESCRIPTION: This command disables an Azure DevOps extension. It requires the extension name and publisher name. The '--org' parameter is optional if a default organization is configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension disable --extension-name\n                            --publisher-name\n                            [--org]\n```\n\n----------------------------------------\n\nTITLE: Configuring All Week Scheme ARM Template\nDESCRIPTION: ARM template for deploying a managed agent pool with 24/7 availability configuration. Sets up a stateless agent profile with continuous agent availability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                \"agentProfile\": {\n                    \"kind\": \"Stateless\",\n                    \"resourcePredictionsProfile\": {\n                        \"kind\": \"Manual\"\n                    },\n                    \"resourcePredictions\": {\n                        \"timeZone\": \"Eastern Standard Time\",\n                        \"daysData\": [\n                            {\n                                \"00:00:00\": 1\n                            }\n                        ]\n                    }\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Extension Manifest Configuration for Azure DevOps\nDESCRIPTION: Required attributes for the extension manifest including version, name, description, publisher and target platform configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-widget-manifest.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"manifestVersion\": 1,\n    \"id\": \"vsts-extensions-myExtensions\",\n    \"version\": \"1.0.0\",\n    \"name\": \"My First Set of Widgets\",\n    \"description\": \"Samples containing different widgets extending dashboards\",\n    \"publisher\": \"fabrikam\",\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Labels by Name Pattern\nDESCRIPTION: Illustrates how to use the tf labels command to list all labels that begin with 'build' and are owned by the current user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/labels-command.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nc:\\projects> tf labels build*\n```\n\n----------------------------------------\n\nTITLE: Expanding Related Data with Iteration Information\nDESCRIPTION: This query shows how to expand a navigation property to include related data. It retrieves a specific work item by ID and includes all the iteration information associated with it using the $expand parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/WorkItems?$filter=WorkItemId eq 480&$select=WorkItemId,WorkItemType,Title,State&&$expand=Iteration\n\t\n@odata.context\t\"https://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/$metadata#WorkItems(WorkItemId,WorkItemType,Title,State,Iteration)\"\nvalue\t\n  0\t\n      WorkItemId           480\n      Title                \"Customer Phone - Phase 1\"\n      WorkItemType\t       \"Feature\"\n      State\t               \"In Progress\"\n      Iteration\t\n          ProjectSK\t       \"56af920d-393b-4236-9a07-24439ccaa85c\"\n          IterationSK\t       \"c7063041-ff3a-4d7f-bb46-c433c7030d59\"\n          IterationId\t       \"c7063041-ff3a-4d7f-bb46-c433c7030d59\"\n          IterationName\t   \"Sprint 1\"\n          Number\t            55297\n          IterationPath\t    \"Fabrikam Fiber\\\\Release 1\\\\Sprint 1\"\n          StartDate\t        \"2022-01-17T00:00:00-08:00\"\n          EndDate\t            \"2022-02-04T23:59:59.999-08:00\"\n          IterationLevel1\t    \"Fabrikam Fiber\"\n          IterationLevel2\t    \"Release 1\"\n          IterationLevel3\t    \"Sprint 1\"\n          IterationLevel4\t    null\n          IterationLevel5\t    null\n          IterationLevel6\t    null\n          IterationLevel7\t    null\n          IterationLevel8\t    null\n          IterationLevel9\t    null\n          IterationLevel10\tnull\n          IterationLevel11\tnull\n          IterationLevel12\tnull\n          IterationLevel13\tnull\n          IterationLevel14\tnull\n          Depth\t            2\n          IsEnded\t        \ttrue\n      AnalyticsUpdatedDate\t\"2022-01-18T22:18:58.17Z\"\n```\n\n----------------------------------------\n\nTITLE: Executing Test Runs with TCM Command-Line Interface\nDESCRIPTION: This command initiates a test run using its ID. The run ID corresponds to the work item ID defined when the run was created. The command requires the run ID, collection URL, and team project name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_4\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /execute /id:id /collection:teamprojectcollectionurl /teamproject:project [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Creating Wiki Page with Content from File\nDESCRIPTION: This example shows how to create a wiki page using content from a file with the Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-edit-wiki.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page update --path 'my page' --wiki myprojectwiki --file-path a.txt --encoding utf-8\n```\n\n----------------------------------------\n\nTITLE: Including Wiki Feature Details for Sprint 146 Update\nDESCRIPTION: This Markdown directive includes a file containing the details of Wiki features introduced in the Azure DevOps Sprint 146 update. It is used to embed feature-specific content within the broader release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update](includes/wiki/sprint-146-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding Azure Artifacts Dependency to Maven POM File\nDESCRIPTION: This snippet demonstrates how to add a dependency for an Azure Artifacts package to a Maven project's pom.xml file. The <dependency> tag should be pasted inside the <dependencies> section of the pom.xml file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/maven/install.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<dependencies>\n    <!-- Paste your <dependency> snippet here -->\n</dependencies>\n```\n\n----------------------------------------\n\nTITLE: Displaying Collection Settings Options in Markdown\nDESCRIPTION: Markdown code to display an image of Collection settings options for Azure DevOps Server 2022 version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/about-settings.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:::image type=\"content\" source=\"media/about/collection-settings-2022.png\" alt-text=\"Screenshot of Collection settings options, Azure DevOps Server 2022.\":::\n```\n\n----------------------------------------\n\nTITLE: Unsetting Global http.postBuffer in Git Configuration\nDESCRIPTION: Command to remove the http.postBuffer setting from the global Git configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/rpc-failures-http-postbuffer.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global --unset http.postBuffer\n```\n\n----------------------------------------\n\nTITLE: Updating Azure DevOps Security Group\nDESCRIPTION: Command to update the name and description of a security group using the Azure DevOps CLI. Requires either a new name or description parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group update --id\n                                [--description]\n                                [--name]\n```\n\n----------------------------------------\n\nTITLE: Querying Test Pass Rate Trend Data with Power BI M Query\nDESCRIPTION: This Power BI M query retrieves test results data from Azure DevOps Analytics to track the pass rate trend of a specific test in a pipeline. It filters by pipeline name, test name, and date range, then calculates pass rates by grouping results by date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-pass-rate-trend-test.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI M Query\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate} \"\n        &\"And Test/TestName eq '{testName}' \"\n        &\"And Workflow eq 'Build') \"\n            &\"/groupby((Date/Date), \"\n                &\"aggregate( \"\n                &\"ResultCount with sum as TotalCount, \"\n            &\"ResultPassCount with sum as ResultPassCount, \"\n                &\"ResultFailCount with sum as ResultFailCount, \"\n            &\"ResultAbortedCount with sum as ResultAbortedCount, \"\n        &\"ResultErrorCount with sum as ResultErrorCount, \"\n    &\"ResultInconclusiveCount with sum as ResultInconclusiveCount, \"\n    &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n    &\"ResultNotImpactedCount with sum as ResultNotImpactedCount)) \"\n    &\"/filter(ResultFailCount gt 0) \"\n    &\"/compute( \"\n    &\"iif(TotalCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(TotalCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Displaying Wiki Page Content using Azure DevOps CLI\nDESCRIPTION: Command to retrieve the content of a specific wiki page. Parameters allow specifying the page path, wiki name, and whether to include page content or open in browser.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/includes/open-wiki-hub.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page show --path\n                         --wiki\n                         [--include-content]\n                         [--open]\n                         [--project]\n                         [--subscription]\n                         [--version]\n```\n\n----------------------------------------\n\nTITLE: Installing Python Packages with pip\nDESCRIPTION: pip command to install Python packages defined in requirements.txt using the configured feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_8\n\nLANGUAGE: command\nCODE:\n```\npip install\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Revisions with OData in Azure DevOps Analytics\nDESCRIPTION: This OData query snippet filters work item revisions to include only those since a specified start date. It uses the RevisedDateSK property for optimal performance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-boards.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nRevisedDateSK eq null or RevisedDateSK gt {startDateSK}\n```\n\n----------------------------------------\n\nTITLE: Publishing Cargo Package Using Command Line\nDESCRIPTION: Command to publish a Cargo package to an Azure Artifacts feed. Requires prior authentication and project setup with the appropriate registry configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-publish.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncargo publish\n```\n\n----------------------------------------\n\nTITLE: Example Git Command with PAT Authentication Header\nDESCRIPTION: A concrete example of a Git command with an HTTP extra header containing base64-encoded credentials for authenticating with Azure DevOps Server when IIS Basic Authentication is enabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/use-personal-access-tokens-to-authenticate.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit -c http.extraheader='Authorization: Basic a2FzYW50aGE6bzN3cDVndmw2YXRkajJkam83Znd4N2k3NDdhbGxjNXp4bnc3b3o0dGQycmd3d2M1eTdjYQ==' ls-remote http://tfsserver:8080/tfs/DefaultCollection/_git/projectName\n```\n\n----------------------------------------\n\nTITLE: Basic Extension Directory Structure\nDESCRIPTION: Shows the recommended folder and file structure for an Azure DevOps extension that implements a custom hub.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-hub.md#2025-04-22_snippet_0\n\nLANGUAGE: no-highlight\nCODE:\n```\n|--- README.md\n|--- sdk    \n\t|--- node_modules           \n\t|--- scripts\n\t\t|--- SDK.js       \n|--- images                        \n\t|--- icon.png                           \n|--- scripts                        \t// not used in this tutorial\n|--- hello-world.html\t\t\t\t// html page to be used for your hub  \n|--- vss-extension.json\t\t\t\t// extension's manifest\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Variables in Jenkins and Azure Pipelines\nDESCRIPTION: Compares how to define global environment variables in Jenkins and Azure Pipelines, showing the difference in syntax between the two systems.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-jenkins.md#2025-04-22_snippet_4\n\nLANGUAGE: groovy\nCODE:\n```\npipeline {\n    environment {\n        CONFIGURATION = 'debug'\n        PLATFORM      = 'x64'\n    }\n}\n```\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  configuration: debug\n  platform: x64\n```\n\n----------------------------------------\n\nTITLE: Querying Board Column Order in OData\nDESCRIPTION: OData query that retrieves the column order configuration for a team's Stories board to enable proper sorting of the CFD visualization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-cfd.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/V3.0-preview/BoardLocations?\n        $apply=filter(\n            Team/TeamName eq '{teamname}' \n            and BoardName eq 'Stories' \n            and IsCurrent eq true\n        )\n        /groupby ((ColumnName,ColumnOrder))\n```\n\n----------------------------------------\n\nTITLE: Querying Linked User Stories Filtered by Teams in Power BI\nDESCRIPTION: This Power BI query retrieves User Stories and their related User Stories, filtered by team names instead of Area Path. It expands the Links entity to include details of the related User Stories and allows filtering for multiple team names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_4\n\nLANGUAGE: Power BI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'User Story' \"\n            &\"and State ne 'Closed' \"\n            &\"and (Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames,AreaSK \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath), \"\n                &\"Links( \"\n                    &\"$filter=LinkTypeName eq 'Related' \"\n                        &\"and TargetWorkItem/WorkItemType eq 'User Story'; \"\n                    &\"$select=LinkTypeName; \"\n                    &\"$expand=TargetWorkItem($select=WorkItemType,WorkItemId,Title,State) \"\n                &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Creating Dev Center and Project\nDESCRIPTION: Creates a dev center and dev center project using Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz devcenter admin devcenter create -n $DEV_CENTER_NAME \\\n    -g $RESOURCE_GROUP_NAME \\\n    -l $REGION\n\nDEVCID=$( \\\n    az devcenter admin devcenter show -n $DEV_CENTER_NAME \\\n    -g $RESOURCE_GROUP_NAME \\\n    --query id -o tsv)\n\naz devcenter admin project create -n $DEV_CENTER_PROJECT_NAME \\\n    --description \"My dev center project.\" \\\n    -g $RESOURCE_GROUP_NAME \\\n    -l $REGION \\\n    --dev-center-id $DEVCID\n\nDEVCPID=$( \\\n    az devcenter admin project show -n $DEV_CENTER_PROJECT_NAME \\\n    -g $RESOURCE_GROUP_NAME \\\n    --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating a branch using Git command line\nDESCRIPTION: Commands to create a new Git branch using the command line. The first command creates a branch but doesn't switch to it, while the second command switches to an existing branch. The third command creates and switches to a new branch in one step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-branch.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit branch <new branch name>\n```\n\nLANGUAGE: console\nCODE:\n```\ngit checkout <existing branch name>\n```\n\nLANGUAGE: console\nCODE:\n```\ngit checkout -b <new branch name>\n```\n\n----------------------------------------\n\nTITLE: Setting Image Version Override in Azure Pipeline\nDESCRIPTION: Demonstrates how to specify a particular version of an Azure Compute Gallery or Azure Marketplace image using the ImageVersionOverride demand.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/demands.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: fabrikam-dev-pool # Name of Managed DevOps Pool\n  demands:\n  - ImageVersionOverride -equals 2.0.0\n```\n\n----------------------------------------\n\nTITLE: Filtering Items by Partial Board Swimlane Name in Azure DevOps Query\nDESCRIPTION: This query clause filters work items to show those located in any swimlane whose name contains the word 'Test'. It uses the 'Contains' operator with the Board Lane field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_14\n\nLANGUAGE: azure-devops-query\nCODE:\n```\n`Board Lane Contains Test`\n```\n\n----------------------------------------\n\nTITLE: Warning for Database Metadata Size Approaching Limit (cmdline)\nDESCRIPTION: This command-line output is a warning message from the Data Migration Tool indicating that the database metadata size is larger than recommended, though not exceeding the maximum limit. It suggests cleaning up older data to reduce size and potentially speed up migration, providing a link to cleanup instructions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_2\n\nLANGUAGE: cmdline\nCODE:\n```\nThe database metadata size is currently {Metadata Size}GBs. This is above the recommended size of {Warning Size}GBs. It's recommended that you consider cleaning up older data as described in [Cleaning up old data](/azure/devops/server/upgrade/clean-up-data).\n```\n\n----------------------------------------\n\nTITLE: URI Query Parameter API Version Format\nDESCRIPTION: Example demonstrating the URI format for specifying API version as a query parameter. Shows the standard URL structure for Azure DevOps REST API calls including organization, area, and resource components.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/rest-api-versioning.md#2025-04-22_snippet_1\n\nLANGUAGE: http\nCODE:\n```\n[scheme\"://\"][host[':'port]]\"/v\" major-version '/'namespace '/'resource ('/'resource)* '?' query\n\ni.e. GET https://dev.azure.com/v1.0/{organization}/_apis/{area}/{resource}?some-query=1000\n```\n\n----------------------------------------\n\nTITLE: Weekday Business Hours Agent Provisioning Scheme\nDESCRIPTION: JSON configuration for a weekday business hours provisioning scheme. It schedules one standby agent Monday through Friday from 9:00 AM to 5:00 PM Eastern Standard Time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Stateless\": {},\n    \"resourcePredictionsProfile\": {\n        \"Manual\": {}\n    },\n    \"resourcePredictions\": {\n        \"timeZone\": \"Eastern Standard Time\",\n        \"daysData\": [\n            {},\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {\n                \"09:00:00\": 1,\n                \"17:00:00\": 0\n            },\n            {}\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Workspace with Specific Owner in TFVC\nDESCRIPTION: Creates a new workspace named 'Beta1' with 'jenh' as the owner. This requires the AdminWorkspaces permission to assign ownership to another user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_7\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf workspace /new Beta1;jenh\n```\n\n----------------------------------------\n\nTITLE: TFVC Checkin Shelveset Syntax\nDESCRIPTION: Alternative syntax for checking in shelvesets, including options for specifying shelveset name, owner, and collection URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/checkin-command.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ntf checkin /shelveset:shelvesetname[;shelvesetowner] [/bypass] [/noprompt] [/login:username,[password]] [/collection:TeamProjectCollectionUrl][/author:author name] [/force]\n```\n\n----------------------------------------\n\nTITLE: Microsoft Entra OAuth Token Authentication in PowerShell\nDESCRIPTION: Script to obtain a one-time access token from Azure CLI for Git operations. Uses Microsoft Entra authentication to generate a bearer token for repository access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/auth-overview.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$accessToken = az account get-access-token --resource 499b84ac-1321-427f-aa17-267ca6975798 --query \"accessToken\" --output tsv\ngit -c http.extraheader=\"AUTHORIZATION: bearer $accessToken\" clone https://dev.azure.com/{yourOrgName}/{yourProjectName}/_git/{yourRepoName}\n```\n\n----------------------------------------\n\nTITLE: Correcting Work Item Type Reference Name in XML Definition\nDESCRIPTION: Work item type reference names must contain only letters, no spaces, and at least one period. This example shows how to fix a WIT definition with an invalid reference name format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_33\n\nLANGUAGE: xml\nCODE:\n```\n<WORKITEMTYPE name=\"Bug\" refname=\"MyCompanyBug32\">\n```\n\nLANGUAGE: xml\nCODE:\n```\n<WORKITEMTYPE name=\"Bug\" refname=\"MyCompany.Bug\">\n```\n\n----------------------------------------\n\nTITLE: Querying Flaky Tests for Release Workflow in Power BI\nDESCRIPTION: Power BI query to retrieve flaky test data for release workflows. Groups results by test name and workflow, calculating flaky rates for tests with flaky occurrences.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-flaky-tests.md#2025-04-22_snippet_1\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate}) \"\n        &\"/groupby((TestSK, Test/TestName, Workflow), \"\n        &\"aggregate( \"\n                &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n                &\"ResultFailCount with sum as FailedCount, \"\n                &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n                &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n                &\"ResultFlakyCount with sum as FlakyCount)) \"\n        &\"/filter(FlakyCount gt 0) \"\n    &\"/compute( \"\n    &\"(FlakyCount div cast(TotalCount, Edm.Decimal)) mul 100 as FlakyRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Using Checks.StageAttempt Variable in Azure DevOps\nDESCRIPTION: The Checks.StageAttempt variable tracks stage retry attempts, starting at 1 and incrementing with each retry. This variable can only be used within approval or check contexts for an environment, such as in an Invoke REST API check.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_28\n\nLANGUAGE: markdown\nCODE:\n```\n$(Checks.StageAttempt)\n```\n\n----------------------------------------\n\nTITLE: Creating Merge Strategy Policy in Azure DevOps using CLI\nDESCRIPTION: This command creates a merge strategy policy that defines which merge types are allowed for pull requests. Parameters include blocking status, branch specification, repository ID, and options for various merge strategies including squash, rebase, and fast-forward.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy merge-strategy create --blocking {false, true}\n                                      --branch\n                                      --enabled {false, true}\n                                      --repository-id\n                                      [--allow-no-fast-forward {false, true}]\n                                      [--allow-rebase {false, true}]\n                                      [--allow-rebase-merge {false, true}]\n                                      [--allow-squash {false, true}]\n                                      [--branch-match-type {exact, prefix}]\n                                      [--detect {false, true}]\n                                      [--org]\n                                      [--project]\n                                      [--subscription]\n                                      [--use-squash-merge {false, true}]\n```\n\n----------------------------------------\n\nTITLE: Pipeline Test Container Query - Power BI\nDESCRIPTION: Power BI query to retrieve test run data grouped by test container name and date. Calculates pass rates and aggregates test result counts across different outcome categories. Requires organization name, project name, pipeline name and start date parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_6\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestRuns?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"and CompletedOn/Date ge {startdate} \"\n                &\"and Workflow eq 'Build' \"\n            &\") \"\n        &\"/groupby((Test/ContainerName, Date/Date), \"\n          &\"aggregate( \"\n            &\"ResultCount with sum as ResultCount, \"\n            &\"ResultPassCount with sum as ResultPassCount, \"\n            &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n            &\"ResultNotImpactedCount with sum as ResultNotImpactedCount, \"\n            &\"ResultFailCount with sum as ResultFailCount \"\n         &\")) \"\n       &\"/compute( \"\n       &\"iif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Displaying Customized Error Message in Azure DevOps\nDESCRIPTION: This markdown snippet shows an image of the customized error message that appears when a user attempts to create an organization and is restricted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/azure-ad-tenant-policy-restrict-org-creation.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n![Screenshot shows customized error message.](media/azure-ad-tenant-policy/error-message-example-ui.png)\n```\n\n----------------------------------------\n\nTITLE: Setting a Custom Home Page in .order File\nDESCRIPTION: Example of an .order file configured to set a custom home page by placing the desired page name at the first position. The home page is the first file that appears when someone selects Wiki in the web portal.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/publish-repo-to-wiki.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNew home page name here\npage-2\npage-3\nPage-4\nREADME\nMisc content\n```\n\n----------------------------------------\n\nTITLE: Branching a File from a Labeled Version\nDESCRIPTION: Branches the version of 314.cs that has the 'Beta1' label applied to it, naming the new branch 314_Beta1branch and saving it to both the current directory and the mapped Azure DevOps Server folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branch-command.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf branch 314.cs;LBeta1 314_Beta1branch\n```\n\n----------------------------------------\n\nTITLE: Viewing WorkItem Entity Metadata in XML\nDESCRIPTION: This XML snippet shows a partial view of the metadata for the WorkItem entity in Analytics. It displays the key properties, fields, and navigation properties that can be used in OData queries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<Key>\n   <PropertyRef Name=\"WorkItemId\"/>\n</Key>\n<Property Name=\"WorkItemId\" Type=\"Edm.Int32\" Nullable=\"false\">\n   <Annotation Term=\"Ref.ReferenceName\" String=\"System.Id\"/>\n   <Annotation Term=\"Display.DisplayName\" String=\"Work Item Id\"/>\n</Property>\n<Property Name=\"InProgressDate\" Type=\"Edm.DateTimeOffset\">\n   <Annotation Term=\"Display.DisplayName\" String=\"InProgress Date\"/>\n   </Property>\n<Property Name=\"CompletedDate\" Type=\"Edm.DateTimeOffset\">\n   <Annotation Term=\"Display.DisplayName\" String=\"Completed Date\"/>\n   </Property>\n<Property Name=\"LeadTimeDays\" Type=\"Edm.Double\">\n   <Annotation Term=\"Display.DisplayName\" String=\"Lead Time Days\"/>\n</Property>\n<Property Name=\"CycleTimeDays\" Type=\"Edm.Double\">\n   <Annotation Term=\"Display.DisplayName\" String=\"Cycle Time Days\"/>\n</Property>\n<Property Name=\"InProgressDateSK\" Type=\"Edm.Int32\"/>\n<Property Name=\"CompletedDateSK\" Type=\"Edm.Int32\"/>\n<Property Name=\"AnalyticsUpdatedDate\" Type=\"Edm.DateTimeOffset\"/>\n<Property Name=\"ProjectSK\" Type=\"Edm.Guid\" Nullable=\"false\"/>\n<Property Name=\"WorkItemRevisionSK\" Type=\"Edm.Int32\" Nullable=\"false\"/>\n...\n<NavigationProperty Name=\"BoardLocations\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.BoardLocation)\"/>\n<NavigationProperty Name=\"Teams\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.Team)\"/>\n<NavigationProperty Name=\"InProgressOn\" Type=\"Microsoft.VisualStudio.Services.Analytics.Model.CalendarDate\">\n<ReferentialConstraint Property=\"InProgressDateSK\" ReferencedProperty=\"DateSK\"/>\n</NavigationProperty>\n<NavigationProperty Name=\"CompletedOn\" Type=\"Microsoft.VisualStudio.Services.Analytics.Model.CalendarDate\">\n<ReferentialConstraint Property=\"CompletedDateSK\" ReferencedProperty=\"DateSK\"/>\n</NavigationProperty>\n<NavigationProperty Name=\"Revisions\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.WorkItemRevision)\"/>\n<NavigationProperty Name=\"Links\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.WorkItemLink)\"/>\n<NavigationProperty Name=\"Children\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.WorkItem)\"/>\n<NavigationProperty Name=\"Parent\" Type=\"Microsoft.VisualStudio.Services.Analytics.Model.WorkItem\">\n<ReferentialConstraint Property=\"ParentWorkItemId\" ReferencedProperty=\"WorkItemId\"/>\n</NavigationProperty>\n<NavigationProperty Name=\"Processes\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.Process)\"/>\n<NavigationProperty Name=\"Descendants\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.WorkItem)\"/>\n<NavigationProperty Name=\"Project\" Type=\"Microsoft.VisualStudio.Services.Analytics.Model.Project\" Nullable=\"false\">\n<ReferentialConstraint Property=\"ProjectSK\" ReferencedProperty=\"ProjectSK\"/>\n<Annotation Term=\"Display.DisplayName\" String=\"Project\"/>\n...\n```\n\n----------------------------------------\n\nTITLE: Query for Priority 1 Bugs\nDESCRIPTION: Creates a query to find all Priority 1 bugs where the Priority field is of type Integer.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/planning-ranking-priorities.md#2025-04-22_snippet_1\n\nLANGUAGE: Azure DevOps Query\nCODE:\n```\nWork Item Type In Bug\nAnd Priority = 1\n```\n\n----------------------------------------\n\nTITLE: Calculating State Rework Time in Days with DAX\nDESCRIPTION: DAX formula that calculates rework time for work items after they first reach Completed state. The formula sums days spent in non-completed states after a work item has been marked complete at least once, requiring customization based on your specific workflow states.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_15\n\nLANGUAGE: DAX\nCODE:\n```\nState Rework Time in Days = \nIF (\n    ISBLANK ( 'View Name'[State Change Count - First Completed] ),\n    0,\n    CALCULATE (\n        SUM ( 'View Name'[Date Diff in Days] ),\n        ALLEXCEPT ( 'View Name', 'View Name'[Work Item Id] ),\n        'View Name'[Date] <= EARLIER ( 'View Name'[Date] ),\n        'View Name'[State Change Count] <= EARLIER ( 'View Name'[State Change Count - First Completed] ),\n        'View Name'[State] IN {\"Completed\", \"Closed\", \"Cut\" } = FALSE()\n    ) + 0\n)\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration Data with Power BI\nDESCRIPTION: Power BI query to fetch test duration metrics from TestResultsDaily entity set. Filters by pipeline name, date range and groups results by test to calculate average duration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analyics-test-duration-trend.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?$apply=filter(Pipeline/PipelineName eq '{pipelineName}' And Date/Date ge {startdate} And Workflow eq 'Build')/groupby((TestSK, Test/TestName, Date/Date), aggregate(ResultCount with sum as TotalCount,ResultDurationSeconds with sum as TotalDuration))/compute(TotalDuration div TotalCount as AvgDuration)\n```\n\n----------------------------------------\n\nTITLE: Listing Library Management Events for Azure DevOps Auditing\nDESCRIPTION: This table details Azure DevOps audit events related to Library items like Agent Pools, Service Connections, and Variable Groups. It includes actions for creation, deletion, modification, and sharing of these resources, specifying the `Action` identifier and a `Description` with placeholders for names, types, and project IDs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Library events\n\n| Action | Description |\n|--------|-------------|\n| `Library.AgentAdded` | Added agent {AgentName} to pool {AgentPoolName}. |\n| `Library.AgentDeleted` | Removed agent {AgentName} from pool {AgentPoolName}. |\n| `Library.AgentPoolCreated` | Created agent pool {AgentPoolName}. |\n| `Library.AgentPoolDeleted` | Deleted agent pool {AgentPoolName}. |\n| `Library.AgentsDeleted` | Removed multiple agents from pool {AgentPoolName}. |\n| `Library.ServiceConnectionCreated` | Created Service Connection \"{ConnectionName}\" of type {ConnectionType}. |\n| `Library.ServiceConnectionCreatedForMultipleProjects` | Created Service Connection \"{ConnectionName}\" of type {ConnectionType} for multiple projects. |\n| `Library.ServiceConnectionDeleted` | Deleted Service Connection \"{ConnectionName}\" of type {ConnectionType} from project {ResolveProjectId:ProjectId}. |\n| `Library.ServiceConnectionDeletedFromMultipleProjects` | Deleted Service Connection \"{ConnectionName}\" of type {ConnectionType} from multiple projects. |\n| `Library.ServiceConnectionForProjectModified` | Modified Service Connection \"{ConnectionName}\" in project {ResolveProjectId:ProjectId}. |\n| `Library.ServiceConnectionModified` | Modified Service Connection \"{ConnectionName}\" of type {ConnectionType}. |\n| `Library.ServiceConnectionPropertyChanged` | One or more properties of Service Connection \"{ConnectionName}\" of type {ConnectionType} were changed: IsDisabled = {IsDisabled}. |\n| `Library.ServiceConnectionShared` | Shared Service Connection \"{ConnectionName}\" of type {ConnectionType} with project {ResolveProjectId:ProjectId}. |\n| `Library.ServiceConnectionSharedWithMultipleProjects` | Shared Service Connection \"{ConnectionName}\" of type {ConnectionType} with multiple projects. |\n| `Library.VariableGroupCreated` | Created Variable Group \"{VariableGroupName}\" in project {ResolveProjectId:ProjectId}. |\n| `Library.VariableGroupCreatedForProjects` | Created Variable Group \"{VariableGroupName}\" for multiple projects. |\n| `Library.VariableGroupDeleted` | Deleted Variable Group \"{VariableGroupName}\" in project {ResolveProjectId:ProjectId}. |\n| `Library.VariableGroupDeletedFromProjects` | Deleted Variable Group \"{VariableGroupName}\" from multiple projects. |\n| `Library.VariableGroupModified` | Modified Variable Group \"{VariableGroupName}\" in project {ResolveProjectId:ProjectId}. |\n| `Library.VariableGroupModifiedForProjects` | Modified Variable Group \"{VariableGroupName}\" for multiple projects. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipelines PR Trigger with Path Filters in YAML\nDESCRIPTION: Defines an Azure Pipeline in YAML that triggers on pull requests targeting the 'main' branch. It specifically includes changes within the 'code' path while excluding changes in the 'docs' path using 'paths.include' and 'paths.exclude'. This configuration demonstrates how to control pipeline execution based on file paths modified in a pull request, relevant to the context of posting a 'neutral' status to GitHub when builds are skipped due to such exclusions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-194-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\ntrigger: none\n\npr:\n branches:\n   include:\n     - main\n paths:\n   include:\n     - code\n   exclude:\n     - docs\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n- script: echo Hello, world!\n  displayName: 'Run a one-line script'\n\n```\n```\n\n----------------------------------------\n\nTITLE: Git SSL Configuration\nDESCRIPTION: Git configuration command to specify SSL certificate for HTTPS connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/certificate.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global http.\"https://tfs.com/\".sslCAInfo certificate.pem\n```\n\n----------------------------------------\n\nTITLE: Base TCM Command Structure\nDESCRIPTION: Basic command structure for TCM showing required parameters for collection URL, team project, and optional login credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/test-case-managment-reference.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntcm.exe /collection:CollectionURL /teamproject:project [/login:username,password]\n```\n\n----------------------------------------\n\nTITLE: Filtering Active Items Assigned to Current User in Azure Boards Queries (WIQL)\nDESCRIPTION: This snippet shows how to construct a query in WIQL to filter for active work items assigned to the current user by using `Assigned To @Me` and `State = Active`. It requires Azure Boards and appropriate query permissions. The query uses the identity macro `@Me` and the literal value for Active state, and will return work items currently assigned to the querying user that are in the 'Active' workflow state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_0\n\nLANGUAGE: WIQL\nCODE:\n```\nAssigned To @Me\nAnd State = Active\n```\n\n----------------------------------------\n\nTITLE: Installing Go package from private Azure Repos Git repository using HTTPS\nDESCRIPTION: This command shows how to use go install with HTTPS authentication to install a package from a private Azure Repos Git repository, specifying the version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/go-install.md#2025-04-22_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\ngo install dev.azure.com/<organization>/<project>/_git/<repo>.git@<version>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Notification Delivery Logs in Azure DevOps\nDESCRIPTION: This URL request retrieves notification delivery logs for a specific time frame by specifying organization, date range, and event ID for work items, Git, or other event types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/use-subscription-logging.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{organization}/_apis/notification/DiagnosticLogs/{event ID}/entries?startTime={date}&endTime={date}\n```\n\n----------------------------------------\n\nTITLE: Valid Git Prune Setting Values in Visual Studio\nDESCRIPTION: Lists the valid values for the 'Prune remote branches during fetch' configuration option in Visual Studio. The recommended setting is 'True', while 'Unset' is the default value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/git-config-prune-remote-branches.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `True` (recommended)\n- `False`\n- `Unset` (default)\n```\n\n----------------------------------------\n\nTITLE: Filtering Closed Items Ever Assigned to Current User in Azure Boards Queries (WIQL)\nDESCRIPTION: This code snippet demonstrates using the `Was Ever` operator in WIQL to list closed work items that at any time were assigned to the current user. The fields `Assigned To Was Ever @Me` and `State = Closed` ensure the results include items previously, not just currently, assigned to the querying user and now in the 'Closed' state. This query requires access to identity fields and is used for historical assignment tracking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_1\n\nLANGUAGE: WIQL\nCODE:\n```\nAssigned To Was Ever @Me\nAnd State = Closed\n```\n\n----------------------------------------\n\nTITLE: Listing Work Items Moved Out of a Sprint - Azure DevOps WIQL - WIQL\nDESCRIPTION: This WIQL query lists User Story and Bug work items that were originally planned for the current sprint but were subsequently moved out, focusing on a specific team and area path. It leverages iteration-based macros, the `EVER` operator, and date conditions to track items not completed and now assigned to the next sprint within the last 30 days. Prerequisites include appropriate team and iteration paths, and using the WIQL Editor extension in Azure DevOps as the clause cannot be created through the standard Query Editor. Parameters such as @project and dynamic macros must be set correctly; outputs are filtered lists of work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-date-or-current-iteration.md#2025-04-22_snippet_7\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT\n    [System.Id],\n    [System.WorkItemType],\n    [System.AssignedTo],\n    [System.Title],\n    [System.State],\n    [System.Tags],\n    [System.IterationPath],\n    [System.AreaPath]\nFROM workitems\nWHERE\n    [System.TeamProject] = @project\n    AND [System.WorkItemType] IN ('User Story', 'Bug')\n    AND [System.AreaPath] UNDER 'FabrikamFiber\\\\Web'\n    AND NOT [System.State] IN ('Completed', 'Closed', 'Cut', 'Resolved')\n    AND NOT [System.IterationPath] = @currentIteration('[FabrikamFiber]\\\\Web <id:cdf5e823-1179-4503-9fb1-a45e2c1bc6d4>')\n    AND (\n        EVER (\n            [System.IterationPath] = @currentIteration('[FabrikamFiber]\\\\Web <id:cdf5e823-1179-4503-9fb1-a45e2c1bc6d4>')\n        )\n        AND [System.IterationPath] = @currentIteration('[FabrikamFiber]\\\\Web <id:cdf5e823-1179-4503-9fb1-a45e2c1bc6d4>') + 1\n        AND [System.ChangedDate] >= @today - 30\n    )\nORDER BY [System.Id]\n```\n\n----------------------------------------\n\nTITLE: Allowing Branch Creation in Feature and User Folders\nDESCRIPTION: Grants CreateBranch permission to contributors for the features/ and users/ folders to allow branch creation in these specific locations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-permission-command.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ntf git permission /allow:CreateBranch \n                  /group:[FabrikamProject]\\Contributors \n                  /collection:https://dev.azure.com/fabrikam-fiber/ \n                  /teamproject:FabrikamProject \n                  /repository:FabrikamRepo \n                  /branch:features\n\ntf git permission /allow:CreateBranch \n                  /group:[FabrikamProject]\\Contributors \n                  /collection:https://dev.azure.com/fabrikam-fiber/ \n                  /teamproject:FabrikamProject \n                  /repository:FabrikamRepo \n                  /branch:users\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Synchronization in YAML Pipeline\nDESCRIPTION: YAML configuration to control whether tags are synchronized when checking out a repository. This feature can reduce checkout time for repositories with many tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/source-options.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self\n  fetchTags: true\n```\n\n----------------------------------------\n\nTITLE: Workfold Command Syntax for Mapping Folders\nDESCRIPTION: Syntax for explicitly mapping a server folder to a local folder, with optional parameters for collection, workspace, and authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ntf workfold [/map <server-folder> <local-folder>] [/collection:<team-project-collection-url>] \n[/workspace:<workspace-name>][/login:<username>,[<password>]\n```\n\n----------------------------------------\n\nTITLE: Example Azure CLI Command for Listing Pool Agents\nDESCRIPTION: A practical example of using the Azure CLI to list all agents in pool ID 4 with formatted table output. Shows how to retrieve agent information such as name, status, and version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/agents.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines agent list --pool-id 4 --output table\n\nID    Name          Is Enabled    Status    Version\n----  ------------  ------------  --------  ---------\n3     Hosted Agent  True          offline   2.155.1\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Read Access\nDESCRIPTION: Namespace identifier for read access in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_39\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, Read\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes\nDESCRIPTION: Command to push local commits to the remote repository branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/code-with-git.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit push origin users/jamal/feature1\n```\n\n----------------------------------------\n\nTITLE: Merging Branches in Git\nDESCRIPTION: Merges one branch into the current branch, combining their histories. This is used to integrate changes from one branch into another.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_27\n\nLANGUAGE: git\nCODE:\n```\ngit merge branchname\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Board Snapshot Data in Power BI\nDESCRIPTION: Power BI query that retrieves cumulative flow data for user stories from a specified team. Returns data grouped by date, column name, lane name, state, work item type, assigned user, and area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-cfd.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/V3.0-preview/WorkItemBoardSnapshot?\"\n        &\"$apply=filter( \"\n            &\"Team/TeamName eq '{teamname}' \"\n            &\"and BoardName eq 'Stories'  \"\n            &\"and DateValue ge {startdate} \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(DateValue,ColumnName,LaneName,State,WorkItemType,AssignedTo/UserName,Area/AreaPath),  \"\n            &\"aggregate($count as Count) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Displaying Team Settings Screenshot in Markdown\nDESCRIPTION: This snippet shows how to embed a screenshot of the Team Settings interface in Markdown format, specifically highlighting the Automation Rules tab.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/boards/sprint-228-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Screenshots of Team Settings.](../../media/228-boards-01.png \"Screenshots of Team Settings.\")\n```\n\n----------------------------------------\n\nTITLE: Including Pipelines Update Links using Markdown Directive\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/pipelines/sprint-217-update-links.md`), likely containing links related to Azure Pipelines updates for Sprint 217. It's used within the Azure DevOps documentation build system (Microsoft Docs).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-217-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update-links](includes/pipelines/sprint-217-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 158 Signer Information in Markdown\nDESCRIPTION: This snippet includes a markdown file containing signer information for the Sprint 158 update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-158-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-158](../includes/signer/sprint-158.md)]\n```\n\n----------------------------------------\n\nTITLE: Querying Bug Trends Filtered by Area Path with OData\nDESCRIPTION: This OData query retrieves bug trend data filtered by area path and start date. It returns counts of non-closed bugs grouped by date, state, work item type, and other fields to support trend analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-bugtrend.md#2025-04-22_snippet_1\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \n        $apply=filter(\n            WorkItemType eq 'Bug'\n            and State ne 'Closed'\n            and startswith(Area/AreaPath,'{areapath}')\n            and DateValue ge {startdate} \n            )\n        /groupby(\n            (DateValue,State,WorkItemType,Priority,Severity,Area/AreaPath,Iteration/IterationPath,AreaSK),\n            aggregate($count as Count)\n            )\n```\n\n----------------------------------------\n\nTITLE: Displaying Version-Specific Unsupported Customizations in Markdown\nDESCRIPTION: This snippet shows how to use moniker ranges to display version-specific unsupported customizations for Azure DevOps backlogs and boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/process-customize-backlogs.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\">= azure-devops-2020\"\n\n- **Removing an inherited portfolio level:**\n  - While you can't directly remove an inherited portfolio level from a product, you have a couple of options:\n    - **Rename the portfolio level:** You can rename the inherited portfolio level to better suit your needs.\n    - **Disable an inherited WIT:** If the inherited portfolio level includes WITs that you don't want to use, you can disable them. This action prevents teams from creating new work items of those types.\n- **Inserting a backlog level:**\n  - You can't insert a new backlog level within the existing set of defined backlogs. The predefined backlog levels are typically fixed (for example, Epics, Features, User Stories, Tasks), and you can't add custom ones in between.\n- **Reordering backlog levels:**\n  - Unfortunately, you can't reorder the backlog levels. They usually follow a predefined hierarchy, and changing their order isn't supported.\n- **Adding a WIT to multiple backlog levels:**\n  - Each WIT can only belong to one backlog level. You can't add a WIT to two different backlog levels simultaneously.\n- **Creating a custom task backlog level:**\n  - Although you can't create a custom task-specific backlog level, you can still add custom WITs to the iteration backlog. For example, you could create a custom WIT called \"Enhancement\" or \"Maintenance\" and associate it with the iteration backlog.\n- **Managing bugs:**\n  - The Bug WIT doesn't belong to any specific backlog level by default. Instead, each team can decide how they want to manage bugs. You can choose to [show bugs on backlogs and boards or handle them separately](../show-bugs-on-backlog.md).\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Workfold Command Syntax for Unmapping Folders\nDESCRIPTION: Syntax for removing a mapping between a server folder and a local folder, with the option to perform the operation recursively.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ntf workfold /unmap [/collection:<team-project-collection-url>] [/workspace:<workspace-name>] \n[/recursive] (<server-folder>|<local-folder>) [/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Adding Azure Artifacts Feed Locator for Organization Scoped Feed\nDESCRIPTION: Format for specifying an Azure Artifacts feed locator for an organization scoped feed when adding it as an upstream source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/how-to/set-up-upstream-sources.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nazure-feed://ORGANIZATION_NAME/FEED_NAME@VIEW\n```\n\n----------------------------------------\n\nTITLE: Creating Test Runs with TCM Command-Line Interface\nDESCRIPTION: This command creates a test run associated with a specified test plan. It requires a title, plan ID, collection URL, team project, and either suite ID with config ID or a query text to select tests. Additional optional parameters allow for customizing test settings, owner, build directory, test environment, and inclusion criteria.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_2\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /create /title:title /planid:id /collection:CollectionURL /teamproject:project \n            (suiteid:id /configid:configid | /querytext:query) \n            [/settingsname:name] [/owner:owner] [/builddir:directory]  \n            [/testenvironment:name] [/login:username,[password]] [/include]\n```\n\n----------------------------------------\n\nTITLE: Inspecting File Layout on Linux/macOS Agent in Azure DevOps\nDESCRIPTION: A YAML pipeline script for Linux and macOS that helps inspect the directory and file layout on an Azure DevOps hosted agent. This script searches for files in directories listed in the PATH environment variable, which can help troubleshoot missing files during builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/troubleshooting.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Script for Linux and macOS\npool: { vmImage: ubuntu-latest } # or whatever pool you use\nsteps:\n- checkout: none\n- bash: |\n    SEARCH_PATH=$PATH  # or any colon-delimited list of paths\n    IFS=':' read -r -a PathDirs <<< \"$SEARCH_PATH\"\n    echo \"##[debug] Found directories\"\n    for element in \"${PathDirs[@]}\"; do\n        echo \"$element\"\n    done;\n    echo;\n    echo;  \n    echo \"##[debug] Found files\"\n    for element in \"${PathDirs[@]}\"; do\n        find \"$element\" -type f\n    done\n```\n\n----------------------------------------\n\nTITLE: Release Pipeline Authorization Scope - Current Azure DevOps\nDESCRIPTION: Instructions for determining job authorization scope for release pipelines in current Azure DevOps version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/access-tokens.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n* If the pipeline is in a public project, then the job authorization scope is **project** regardless of any other settings.\n```\n\n----------------------------------------\n\nTITLE: Listing Team Iterations with Azure DevOps CLI\nDESCRIPTION: This command lists the iteration paths defined for a specific team using the Azure DevOps CLI. It allows filtering by project and timeframe.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration team list --team\n                              [--project]\n                              [--timeframe]\n```\n\n----------------------------------------\n\nTITLE: Listing Registered PowerShell Repositories\nDESCRIPTION: Command to verify repository registration by listing all registered PowerShell repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\nGet-PSResourceRepository\n```\n\n----------------------------------------\n\nTITLE: Accessing NuGet Package API Endpoint for Project Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting NuGet packages in a project scoped feed using the REST API. This requires a PATCH request with appropriate authorization to update package views.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_1\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: Showing Pipeline Run Details with Azure DevOps CLI\nDESCRIPTION: Displays details for a specific pipeline run ID, opens the results in a web browser, and outputs the information in table format showing run details including ID, status, result, pipeline information, and timing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runs.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz pipelines runs show --id 122 --open --output table\n```\n\n----------------------------------------\n\nTITLE: Installing Go package from private Azure Repos Git repository using SSH\nDESCRIPTION: This command demonstrates how to use go install with SSH authentication to install a package from a private Azure Repos Git repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/go-install.md#2025-04-22_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\ngo install dev.azure.com/<organization>/<project>/<repo>.git\n```\n\n----------------------------------------\n\nTITLE: Publishing npm Packages in Azure Artifacts\nDESCRIPTION: This command publishes npm packages to the connected Azure Artifacts feed. It should be run in the project directory containing the package.json file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/get-started-npm.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Running Python Scripts in VSTS Pipeline\nDESCRIPTION: The Python Script task allows execution of Python scripts either from .py files in the repository or inline scripts defined in the task settings. The task can use the system Python or a specified Python interpreter path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/may-30-vsts.md#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Reinstalling Search during Azure DevOps Server 2019 Update 1 Upgrade\nDESCRIPTION: PowerShell commands to remove the existing Search configuration and reinstall it when upgrading from TFS 2018 Update 2 (or higher) to Azure DevOps Server 2019 Update 1 with search configured on a separate server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/install-configure-search.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\nConfigure-TFSSearch.ps1 -Operation remove\nConfigure-TFSSearch.ps1 -Operation install -TFSSearchInstallPath <install location> -TFSSearchIndexPath $env:SEARCH_ES_INDEX_PATH\n```\n\n----------------------------------------\n\nTITLE: Get Latest Version of Specific File Types\nDESCRIPTION: Command to get the latest version of all C# files in a specific project folder recursively.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/get-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1>tf get *.cs /recursive\n```\n\n----------------------------------------\n\nTITLE: Using Build.Repository.Name Variable in Azure DevOps Pipelines\nDESCRIPTION: Indicates the name of the repository that triggered the build. It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_16\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.Repository.Name\n```\n\n----------------------------------------\n\nTITLE: Showing Work Item Relations Command Structure in Azure CLI\nDESCRIPTION: Command structure for viewing work item relations using az boards work-item relation show command. The command requires a work item ID and supports optional parameters for organization and detection settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/add-link.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item relation show --id\n                                  [--detect {false, true}]\n                                  [--org]\n```\n\n----------------------------------------\n\nTITLE: Adding Thank You and Sign-off Section - Markdown\nDESCRIPTION: This snippet adds a thank you section and embeds an additional include for the sprint sign-off using Azure DevOps INCLUDE syntax. It draws content from a shared markdown file, maintaining consistent sign-offs across update files. The key dependency is the referenced sign-off markdown file. No parameters are needed, and the block is intended for static documentation display.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/pipelines/sprint-163-update.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\nThanks,\n\n[!INCLUDE [sprint-163](../includes/signer/sprint-163.md)]\n\n```\n\n----------------------------------------\n\nTITLE: Comparing File Versions Between Changesets\nDESCRIPTION: Command to display the differences between changeset 3 and changeset 8 of a specific file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf difference /version:C3~C8 1254.cs\n```\n\n----------------------------------------\n\nTITLE: Adding Test Plans Integration Fields to Work Item Types in XML\nDESCRIPTION: XML snippet for adding 'System Info' and 'Repro Steps' fields to work item types used for tracking defects. These fields enable integration with Test Plans to capture system information and reproduction steps when creating bugs from test failures.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/build-test-integration.md#2025-04-22_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"System Info\" refname=\"Microsoft.VSTS.TCM.SystemInfo\" type=\"HTML\" />\n<FIELD name=\"Repro Steps\" refname=\"Microsoft.VSTS.TCM.ReproSteps\" type=\"HTML\" />\n```\n\n----------------------------------------\n\nTITLE: Deleting a Project using Azure DevOps CLI\nDESCRIPTION: Command for deleting an Azure DevOps project using the CLI. The command requires specifying the project ID and includes optional parameters for the organization URL and to skip confirmation prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/delete-project.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops project delete --id\n                         [--org]\n                         [--yes]\n```\n\n----------------------------------------\n\nTITLE: Logging into Cargo Registry with PAT using PowerShell\nDESCRIPTION: PowerShell command to log into a Cargo registry using a Personal Access Token (PAT). This command converts the PAT to a Base64-encoded value for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\n\"Basic \" + [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes(\"PAT:\" + (Read-Host -MaskInput \"Enter PAT\"))) | cargo login --registry <FEED_NAME>\n```\n\n----------------------------------------\n\nTITLE: Setting Pipeline Variable for AGENT_ACKNOWLEDGE_NO_UPDATES in Azure DevOps YAML Pipeline (YAML)\nDESCRIPTION: Demonstrates how to define the AGENT_ACKNOWLEDGE_NO_UPDATES pipeline variable directly in a YAML pipeline job. This ensures pipeline jobs do not fail on agents running unsupported operating systems when using agent v2.218 or later. This snippet is compatible with Azure DevOps YAML-based pipelines. It requires no external dependencies; variables are provided as key-value pairs under the 'variables' section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-219-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: 'agentWithVariables'\n  displayName: 'Agent with variables'\n\n  variables:\n    AGENT_ACKNOWLEDGE_NO_UPDATES: 'true' # Required to not fail job on operating system that is not supported by .NET 6\n```\n\n----------------------------------------\n\nTITLE: Creating and Switching Branch\nDESCRIPTION: Command to create a new branch and immediately switch to it\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_8\n\nLANGUAGE: git\nCODE:\n```\ngit checkout -b branchname\n```\n\n----------------------------------------\n\nTITLE: Installing macOS Agent as launchd Service\nDESCRIPTION: Command to install the macOS agent as a launchd LaunchAgent service. This creates a launchd plist file pointing to the runsvc.sh script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh install\n```\n\n----------------------------------------\n\nTITLE: Connect and Push to Azure Repos\nDESCRIPTION: Connects local repository to Azure Repos and pushes code to the main branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-cmdline.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add origin https://dev.azure.com/fabrikops2/Fabrikam/_git/FabrikamApp\ngit push origin main\n```\n\n----------------------------------------\n\nTITLE: TFVC Multiple Item Checkout\nDESCRIPTION: Example showing how to check out multiple files in a single command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/use-team-foundation-version-control-commands.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1\\>tf checkout program1.cs program2.c\n```\n\n----------------------------------------\n\nTITLE: Job Context Structure in JavaScript\nDESCRIPTION: Illustrates the structure of the job context object, which includes details about the steps in the job, such as inputs, task information, and conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/pipeline-decorator-context.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\njob = \n{\n\t\"steps\": [\n\t\t{\n\t\t\t\"environment\": null,\n\t\t\t\"inputs\": {\n\t\t\t\t\"script\": \"echo hi\"\n\t\t\t},\n\t\t\t\"type\": \"Task\",\n\t\t\t\"task\": {\n\t\t\t\t\"id\": \"d9bafed4-0b18-4f58-968d-86655b4d2ce9\",\n\t\t\t\t\"name\": \"CmdLine\",\n\t\t\t\t\"version\": \"2.146.1\"\n\t\t\t},\n\t\t\t\"condition\": null,\n\t\t\t\"continueOnError\": false,\n\t\t\t\"timeoutInMinutes\": 0,\n\t\t\t\"id\": \"5c09f0b5-9bc3-401f-8cfb-09c716403f48\",\n\t\t\t\"name\": \"CmdLine\",\n\t\t\t\"displayName\": \"CmdLine\",\n\t\t\t\"enabled\": true\n\t\t}\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: OData Query for Filtering User Stories by Custom Field Value in Azure DevOps Analytics\nDESCRIPTION: OData query that filters User Stories by a custom field value, area path, and date range, excluding completed items. The custom field parameter must be replaced with the actual field name as found in the Analytics metadata reference.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\n        $apply=filter(WorkItemType eq 'User Story'\n            and StateCategory ne 'Completed'\n            and startswith(Area/AreaPath,'{areapath}')\n            and {customfieldname} eq '{releasevalue}'\n            and DateValue ge {startdate}\n            and DateValue le {enddate}\n            )\n        /groupby (\n            (DateValue,StateCategory,State,Area/AreaPath,AreaSK),\n            aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Converting Azure Resource Manager Service Connections to Workload Identity Federation - PowerShell\nDESCRIPTION: This PowerShell script automates the conversion of multiple Azure Resource Manager (azurerm) service connections in Azure DevOps to use workload identity federation instead of expiring secrets. It requires Azure CLI, PowerShell 7.3+, and access to the relevant Azure DevOps organization/project. The script logs into Azure, retrieves convertible service connections, and iteratively prompts the user to confirm each conversion, altering authentication schemes via REST API calls. Mandatory parameters include the project name and organization URL. It handles both shared and non-shared service connections and provides debug outputs. Inputs are project and organization URLs; outputs are the updated service connection configurations. Limitations: the user must have proper permissions and ensure that prerequisites (CLI, REST API access) are met.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-234-update.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n#!/usr/bin/env pwsh\\n<# \\n.SYNOPSIS \\n    Convert multiple Azure Resource Manager service connection(s) to use Workload identity federation\\n\\n.LINK\\n    https://aka.ms/azdo-rm-workload-identity-conversion\\n\\n.EXAMPLE\\n    ./convert_azurerm_service_connection_to_oidc_simple.ps1 -Project <project> -OrganizationUrl https://dev.azure.com/<organization>\\n#> \\n#Requires -Version 7.3\\n\\nparam ( \\n    [parameter(Mandatory=$true,HelpMessage=\\\"Name of the Azure DevOps Project\\\")]\\n    [string]\\n    [ValidateNotNullOrEmpty()]\\n    $Project,\\n\\n    [parameter(Mandatory=$true,HelpMessage=\\\"Url of the Azure DevOps Organization\\\")]\\n    [uri]\\n    [ValidateNotNullOrEmpty()]\\n    $OrganizationUrl\\n) \\n$apiVersion = \\\"7.1\\\"\\n$PSNativeCommandArgumentPassing = \\\"Standard\\\" \\n\\n#-----------------------------------------------------------\\n# Log in to Azure\\n$azdoResource = \\\"499b84ac-1321-427f-aa17-267ca6975798\\\"\\naz login --allow-no-subscriptions --scope ${azdoResource}/.default\\n$OrganizationUrl = $OrganizationUrl.ToString().Trim('/')\\n\\n#-----------------------------------------------------------\\n# Retrieve the service connection\\n$getApiUrl = \\\"${OrganizationUrl}/${Project}/_apis/serviceendpoint/endpoints?authSchemes=ServicePrincipal&type=azurerm&includeFailed=false&includeDetails=true&api-version=${apiVersion}\\\"\\naz rest --resource $azdoResource -u \\\"${getApiUrl} \\\" -m GET --query \\\"sort_by(value[?authorization.scheme=='ServicePrincipal' && data.creationMode=='Automatic' && !(isShared && serviceEndpointProjectReferences[0].projectReference.name!='${Project}')],&name)\\\" -o json `\\n        | Tee-Object -Variable rawResponse | ConvertFrom-Json | Tee-Object -Variable serviceEndpoints | Format-List | Out-String | Write-Debug\\nif (!$serviceEndpoints -or ($serviceEndpoints.count-eq 0)) {\\n    Write-Warning \\\"No convertible service connections found\\\"\\n    exit 1\\n}\\n\\nforeach ($serviceEndpoint in $serviceEndpoints) {\\n    # Prompt user to confirm conversion\\n    $choices = @(\\n        [System.Management.Automation.Host.ChoiceDescription]::new(\"&Convert\", \"Converting service connection '$($serviceEndpoint.name)'...\")\\n        [System.Management.Automation.Host.ChoiceDescription]::new(\"&Skip\", \"Skipping service connection '$($serviceEndpoint.name)'...\")\\n        [System.Management.Automation.Host.ChoiceDescription]::new(\"&Exit\", \"Exit script\")\\n    )\\n    $prompt = $serviceEndpoint.isShared ? \"Convert shared service connection '$($serviceEndpoint.name)'?\" : \"Convert service connection '$($serviceEndpoint.name)'?\"\\n    $decision = $Host.UI.PromptForChoice([string]::Empty, $prompt, $choices, $serviceEndpoint.isShared ? 1 : 0)\\n\\n    if ($decision -eq 0) {\\n\\n        Write-Host \"$($choices[$decision].HelpMessage)\"\\n    } elseif ($decision -eq 1) {\\n        Write-Host \"$($PSStyle.Formatting.Warning)$($choices[$decision].HelpMessage)$($PSStyle.Reset)\"\\n        continue \\n    } elseif ($decision -ge 2) {\\n        Write-Host \"$($PSStyle.Formatting.Warning)$($choices[$decision].HelpMessage)$($PSStyle.Reset)\"\\n        exit \\n    }\\n\\n    # Prepare request body\\n    $serviceEndpoint.authorization.scheme = \"WorkloadIdentityFederation\"\\n    $serviceEndpoint.data.PSObject.Properties.Remove('revertSchemeDeadline')\\n    $serviceEndpoint | ConvertTo-Json -Depth 4 | Write-Debug\\n    $serviceEndpoint | ConvertTo-Json -Depth 4 -Compress | Set-Variable serviceEndpointRequest\\n    $putApiUrl = \"${OrganizationUrl}/${Project}/_apis/serviceendpoint/endpoints/$($serviceEndpoint.id)?operation=ConvertAuthenticationScheme&api-version=${apiVersion}\"\\n    # Convert service connection\\n    az rest -u \"${putApiUrl} \" -m PUT -b $serviceEndpointRequest --headers content-type=application/json --resource $azdoResource -o json `\\n            | ConvertFrom-Json | Set-Variable updatedServiceEndpoint\\n    \\n    $updatedServiceEndpoint | ConvertTo-Json -Depth 4 | Write-Debug\\n    if (!$updatedServiceEndpoint) {\\n        Write-Debug \"Empty response\"\\n        Write-Error \"Failed to convert service connection '$($serviceEndpoint.name)'\"\\n        exit 1\\n    }\\n    Write-Host \"Successfully converted service connection '$($serviceEndpoint.name)'\"\\n}\n```\n\n----------------------------------------\n\nTITLE: Query Macro Example - Date Range\nDESCRIPTION: Example showing how to find work items closed within the last 7 days using @StartOfDay macro\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/feature-matrix-query-macros.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nClosed Date>=@StartOfDay-7\n```\n\n----------------------------------------\n\nTITLE: Authenticating twine Uploads with Azure Pipelines YAML\nDESCRIPTION: Runs TwineAuthenticate@0 to set up the necessary credentials for uploading Python packages to artifact feeds or external repositories via twine. Requires Azure Artifacts and/or service connection details. Inputs should include feed and service connection names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-python.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n- task: TwineAuthenticate@0\\n  inputs:\\n    artifactFeed: '<Azure Artifacts feed name>'\\n    pythonUploadServiceConnection: '<twine service connection from external organization>'\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Organization Profile Configuration\nDESCRIPTION: Example of configuring organization profile using Azure CLI for a single organization with all projects access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --organization-profile organization-profile.json\n   # other parameters omitted for space\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"AzureDevOps\":\n  {\n      \"organizations\": [\n      {\n          \"url\": \"https://dev.azure.com/fabrikam-tailspin\",\n          \"projects\": [],\n          \"parallelism\": 1\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 164 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links to Sprint 164 updates for Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/general/sprint-164-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-164-update-links](../includes/general/sprint-164-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Publishing Package to NuGet.org using dotnet CLI\nDESCRIPTION: Command to publish a NuGet package to NuGet.org using the dotnet CLI. Requires the package name (.nupkg file), your NuGet.org API key, and specifies the official NuGet package source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/publish-to-nuget-org.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndotnet nuget push <packageName> --api-key <APIKey> --source https://api.nuget.org/v3/index.json\n```\n\n----------------------------------------\n\nTITLE: Adding Initiative Category to Categories XML\nDESCRIPTION: XML snippet that defines a new Initiative Category in the Categories.xml file. This is required to make the Initiative work item type available as a portfolio backlog level.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-portfolio-backlogs.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<CATEGORY name=\"Initiative Category\" refname=\"FabrikamFiber.InitiativeCategory\">\n  <DEFAULTWORKITEMTYPE name=\"Initiative\" />\n</CATEGORY>\n```\n\n----------------------------------------\n\nTITLE: Unshelve and Delete a Shelveset in TFVC\nDESCRIPTION: Command to unshelve a specific shelveset (buddytest_1256) into the current workspace and remove it from Azure DevOps Server using the /move option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/unshelve-command.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\>tf unshelve /move buddytest_1256\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Duration Percentiles by Pipeline ID with OData\nDESCRIPTION: OData query that calculates percentile durations for a pipeline specified by ID rather than name. This ensures reports don't break if a pipeline is renamed. The pipeline ID can be obtained from the pipeline runs page URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration.md#2025-04-22_snippet_3\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    PipelineId  eq {pipelineid}\n    and CompletedDate ge {startdate}\n    and (SucceededCount eq 1 or PartiallySucceededCount eq 1)\n    )\n/compute(\n    percentile_cont(TotalDurationSeconds, 0.5) as Duration50thPercentileInSeconds,\n    percentile_cont(TotalDurationSeconds, 0.8) as Duration80thPercentileInSeconds,\n    percentile_cont(TotalDurationSeconds, 0.95) as Duration95thPercentileInSeconds)\n/groupby(\n(Duration50thPercentileInSeconds, Duration80thPercentileInSeconds,Duration95thPercentileInSeconds))\n```\n\n----------------------------------------\n\nTITLE: Parsing Azure DevOps Build Completion Event JSON Payload\nDESCRIPTION: This JSON payload represents the data structure sent by Azure DevOps when a build is completed. It includes details about the build, project, and associated resources. The payload contains information such as build status, result, timestamps, and links to related resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"subscriptionId\": \"aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e\",\n  \"notificationId\": 1,\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"eventType\": \"build.complete\",\n  \"publisherId\": \"azure-devops\",\n  \"message\": {\n    \"text\": \"Build 20241202.1 succeeded\",\n    \"html\": \"Build <a href=\\\"https://dev.azure.com/FabrikamFiber/web/build.aspx?pcguid=54d02617-2ebd-42b0-b1e2-257059c4c03d&amp;builduri=azure-devops%3a%2f%2f%2fBuild%2fBuild%2f2727068\\\">20241202.1</a> succeeded\",\n    \"markdown\": \"Build [20241202.1](https://dev.azure.com/FabrikamFiber/web/build.aspx?pcguid=54d02617-2ebd-42b0-b1e2-257059c4c03d&builduri=azure-devops%3a%2f%2f%2fBuild%2fBuild%2f2727068) succeeded\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Build 20241202.1 succeeded\",\n    \"html\": \"Build <a href=\\\"https://dev.azure.com/FabrikamFiber/web/build.aspx?pcguid=54d02617-2ebd-42b0-b1e2-257059c4c03d&amp;builduri=azure-devops%3a%2f%2f%2fBuild%2fBuild%2f2727068\\\">20241202.1</a> succeeded\",\n    \"markdown\": \"Build [20241202.1](https://dev.azure.com/FabrikamFiber/web/build.aspx?pcguid=54d02617-2ebd-42b0-b1e2-257059c4c03d&builduri=azure-devops%3a%2f%2f%2fBuild%2fBuild%2f2727068) succeeded\"\n  },\n  \"resource\": {\n    \"id\": 2727068,\n    \"buildNumber\": \"20241202.1\",\n    \"status\": \"completed\",\n    \"result\": \"succeeded\",\n    \"url\": \"https://dev.azure.com/FabrikamFiber/web/build.aspx?pcguid=54d02617-2ebd-42b0-b1e2-257059c4c03d&builduri=azure-devops%3a%2f%2f%2fBuild%2fBuild%2f2727068\",\n    \"definition\": {\n      \"id\": 1,\n      \"name\": \"FabrikamFiber CI\"\n    },\n    \"project\": {\n      \"id\": \"54d02617-2ebd-42b0-b1e2-257059c4c03d\",\n      \"name\": \"FabrikamFiber\"\n    }\n  },\n  \"createdDate\": \"2024-12-02T12:21:13.8866607Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Lead Time or Cycle Time Widget via REST API in Azure DevOps\nDESCRIPTION: HTTP POST request to programmatically add a Lead Time or Cycle Time widget to an Azure DevOps dashboard. This endpoint allows for automated dashboard configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/cycle-time-and-lead-time.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST https://dev.azure.com/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets?api-version=7.1-preview.2\n```\n\n----------------------------------------\n\nTITLE: Creating Widget Title with Subtitle in HTML\nDESCRIPTION: This HTML structure demonstrates how to create a widget title with a subtitle. It uses specific classes to ensure proper font sizes, colors, and margins for the title and subtitle combination.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/styles-from-widget-sdk.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"widget\">\n    <h2 class=\"title\">\n\t\t<div class=\"inner-title\">Widget title</div>\n\t\t<div class=\"subtitle\">Widget subtitle</div>\n\t</h2>\n\t<div class=\"content\">\n\t\tPlace widget content here.  \n\t</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Branching a Single File in Azure DevOps Server\nDESCRIPTION: Creates a branch file containing the latest workspace version of 314.cs, naming it 314_branch, and saving it to both the current directory and the Azure DevOps Server folder to which it maps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branch-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf branch 314.cs 314_branch\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps CLI Extension\nDESCRIPTION: Commands to install or update the Azure DevOps extension for Azure CLI, which is required for managing Azure DevOps services from the command line.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/universal-packages/project-setup-universal-packages.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name azure-devops\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name azure-devops\n```\n\n----------------------------------------\n\nTITLE: Listing Tags for Pipeline Runs with Azure DevOps CLI\nDESCRIPTION: Lists all tags associated with a specific pipeline run using the Azure DevOps CLI. The command shows tags for run ID 123 and outputs the results in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runs.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz pipelines runs tag list --run-id 123 --output table\n```\n\n----------------------------------------\n\nTITLE: Inserting an Image with Border in Markdown\nDESCRIPTION: This snippet inserts an image with a border showing how to make a suggestion, using Markdown syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/wiki/sprint-146-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Make a suggestion](../../media/help-make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Publishing Test Runs in Azure DevOps with tcm\nDESCRIPTION: Command syntax for publishing results from a Visual Studio test run results file to a specified test plan using the tcm command-line tool. Includes all available parameters for configuring the test run publication process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_12\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /publish /suiteid:id /configid:id /resultowner:owner /resultsfile:path \n            /collection:teamprojectcollectionurl /teamproject:project [/title:runtitle] \n            [/runowner:owner] [/build:buildnumber /builddefinition:builddefinition] \n            [/flavor:flavor] [/platform:platform] [/assignfailurestouser:user] \n            [/login:username,[password]] [/buildverification]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 162 Update Content for Reporting in Markdown\nDESCRIPTION: This snippet includes the full content of Reporting updates for Sprint 162 using a Markdown include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-162-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-162-update](includes/reporting/sprint-162-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Merging Changes Between Branches in TFVC\nDESCRIPTION: Basic recursive merge from MyFile_beta1 to MyFile_RTM, merging all unmerged changes between the branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merge-command.md#2025-04-22_snippet_1\n\nLANGUAGE: cmd\nCODE:\n```\nc:\\projects>tf merge MyFile_beta1 MyFile_RTM /recursive\n```\n\n----------------------------------------\n\nTITLE: Undoing Changes in a Remote Workspace\nDESCRIPTION: Example demonstrating how to undo pending changes in a remote workspace by specifying the collection URL and workspace details. This is useful for managing changes on inaccessible development machines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undo-command.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nc:\\>tf undo /collection:https://fabrikam-3:8080/tfs/DefaultCollection\n/workspace:FABRIKAM-1;PatI $/SiteApp/Main/SolutionA/Project1/program.cs\n```\n\n----------------------------------------\n\nTITLE: Pipeline Test Container Query - OData\nDESCRIPTION: OData REST query to retrieve test run data grouped by test container name and date. Provides the same functionality as the Power BI query but in OData URL format for direct API access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tand CompletedOn/Date ge {startdate}\n\tAnd Workflow eq 'Build')\n/groupby((Test/ContainerName, Date/Date), \n\taggregate(\n\tResultPassCount with sum as ResultPassCount,\n\tResultNotExecutedCount with sum as ResultNotExecutedCount,\n\tResultCount with sum as ResultCount,\n\tResultNotImpactedCount with sum as ResultNotImpactedCount,\n\tResultFailCount with sum as ResultFailCount))\n/compute(\niif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Listing Organization Wikis Example\nDESCRIPTION: Example command for listing all wikis in an organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki list --scope organization\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps PAT API Endpoint in Python Flask Application (Python)\nDESCRIPTION: This snippet shows how to set the ENDPOINT variable in the config file to direct the Python Flask app to the Azure DevOps PAT Lifecycle Management API. A placeholder is provided for the collection name parameter. The configuration assumes the endpoint will be populated with the correct organization or collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/manage-personal-access-tokens-via-api.md#2025-04-22_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n# Fill in the url to the user's ADO collection + the PAT lifecycle management API endpoint here\n\nENDPOINT = 'https://vssps.dev.azure.com/{YOUR_COLLECTION_NAME_HERE}/_apis/Tokens/Pats?api-version=6.1-preview'\n\n```\n\n----------------------------------------\n\nTITLE: Example of Creating a Wiki with Azure DevOps CLI\nDESCRIPTION: This example demonstrates how to use the Azure DevOps CLI to create a wiki named \"Fabrikam Fiber\" and display the output in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/wiki-create-repo.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki create --name \"Fabrikam Fiber\" --output table\n```\n\n----------------------------------------\n\nTITLE: Querying Related Links OData Request\nDESCRIPTION: OData query that retrieves work item details and expands Related links for work item 103. The query selects specific fields and filters for Related link types only.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/work-item-links.md#2025-04-22_snippet_4\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam Fiber/_odata/v4.0-preview/WorkItems?$select=WorkItemId,Title,WorkItemType,State&$filter=WorkItemId eq 103&$expand=Links($select=SourceWorkItemId,TargetWorkItemId,LinkTypeName;$filter=LinkTypeName eq 'Related';$expand=TargetWorkItem($select=WorkItemId,Title,State))\n```\n\n----------------------------------------\n\nTITLE: Query Pipeline Duration 80th Percentile Trend\nDESCRIPTION: PowerBI query to get the 80th percentile duration trend for a specified pipeline. Filters for successful or partially successful runs and groups results by completion date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration-trend.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and (SucceededCount eq 1 or PartiallySucceededCount eq 1) \"\n        &\") \"\n        &\"/compute( \"\n            &\"percentile_cont(TotalDurationSeconds, 0.8,CompletedDateSK) as Duration80thPercentileInSeconds) \"\n                &\"/groupby( \"\n                &\"(Duration80thPercentileInSeconds, CompletedOn/Date)) \"\n            &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Adding a Backlog Priority Field Control for Scrum to a Work Item Form - Azure DevOps XML\nDESCRIPTION: This XML snippet is used to add a Backlog Priority field control to a Scrum process work item form in Azure DevOps (on-premises XML process). It should be placed in the form definition of the appropriate work item type XML. The field is linked via 'Microsoft.VSTS.Common.BacklogPriority' and is labeled as 'Stack Rank' for user clarity. The configuration requires access to the WIT XML and ensures users can view and edit backlog priority directly on the form. Key parameters include binding to the backlog priority double-type field, used specifically for item ordering in Scrum.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/planning-ranking-priorities.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<Control FieldName=\\\"Microsoft.VSTS.Common.BacklogPriority\\\" Type=\\\"FieldControl\\\" Label=\\\"Stack Rank\\\" LabelPosition=\\\"Left\\\" />\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Authentication Token\nDESCRIPTION: Creates an environment variable for the Personal Access Token (PAT) which will be used for authenticating with Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nsetx TOKEN \"yourtokengoeshere\"\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Commands for Work Item Relationships\nDESCRIPTION: Basic Azure CLI commands for managing work item relationships including adding, removing, and showing links between work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/add-link.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item relation add\naz boards work-item relation remove\naz boards work-item relation show\n```\n\n----------------------------------------\n\nTITLE: Querying Test Points for Progress Status in Power BI\nDESCRIPTION: This Power BI query retrieves test point data for a specific test plan, aggregating counts for different test outcomes and computing execution percentages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-progress-status.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI\nCODE:\n```\nlet \n    Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints?\" \n        &\"$apply=filter(TestSuite/TestPlanTitle eq '{testPlanTitle}')\" \n        &\"/aggregate(\" \n            &\"$count as TotalCount,\" \n            &\"cast(LastResultOutcome eq 'Passed', Edm.Int32) with sum as Passed,\" \n            &\"cast(LastResultOutcome eq 'Failed', Edm.Int32) with sum as Failed,\" \n            &\"cast(LastResultOutcome eq 'Blocked', Edm.Int32) with sum as Blocked,\" \n            &\"cast(LastResultOutcome eq 'NotApplicable', Edm.Int32) with sum as NotApplicable,\" \n            &\"cast(LastResultOutcome eq 'None', Edm.Int32) with sum as NotExecuted,\" \n            &\"cast(LastResultOutcome ne 'None', Edm.Int32) with sum as Executed\" \n        &\")/compute(\" \n            &\"Executed mul 100 div TotalCount as ExecPct,\" \n            &\"iif(TotalCount gt NotExecuted, Passed mul 100 div Executed,0) as PassedPct\" \n        &\")\", null, [Implementation=\"2.0\"]) \nin \n    Source\n```\n\n----------------------------------------\n\nTITLE: Required URLs for Azure DevOps Domain Access\nDESCRIPTION: List of URLs that need to be accessible through the proxy for organizations using the dev.azure.com domain. These endpoints are required for the Azure Pipeline agent to communicate with Azure DevOps services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/web-proxy-bypass.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com\nhttps://*.dev.azure.com\nhttps://login.microsoftonline.com\nhttps://management.core.windows.net\nhttps://vstsagentpackage.azureedge.net\nhttps://download.agent.dev.azure.com\nhttps://vssps.dev.azure.com\n```\n\n----------------------------------------\n\nTITLE: Aggregating Work Item Snapshot Data by Date\nDESCRIPTION: This query demonstrates the proper way to use snapshot entities by applying aggregation. It counts work items by date to observe growth trends over time, using the $apply operator with filter and groupby clauses.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItemSnapshot?\n  $apply=\n    filter(DateSK ge 20200101 and DateSK le 20200131)/\n    groupby((DateSK), aggregate($count as Count))\n```\n\n----------------------------------------\n\nTITLE: Adding Area Paths in Slack\nDESCRIPTION: Commands to add area paths from Azure Boards project to Slack channel for work item creation and subscriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-slack.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n/azboards addAreapath [area path]\n```\n\nLANGUAGE: bash\nCODE:\n```\n/azboards addAreapath myproject\\fabrikam\n```\n\n----------------------------------------\n\nTITLE: Searching by Attached File Count using Reference Name\nDESCRIPTION: This snippet shows how to search for work items based on the value of a specific field using its reference name. The query `System.AttachedFileCount=1` finds all work items that have exactly one attached file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_10\n\nLANGUAGE: azure-devops-search\nCODE:\n```\nSystem.AttachedFileCount=1\n```\n\n----------------------------------------\n\nTITLE: Fixing Missing Permissions with TFSSecurity (cmdline)\nDESCRIPTION: This command-line snippet shows the syntax for using the TFSSecurity.exe tool to add a missing 'Read' permission for a specific group SID within a given scope in an Azure DevOps collection. This is used to resolve ISVError:100014 related to missing permissions for system groups like 'Project Collection Valid Users'. The user needs to replace the placeholders '{scope}', '{Group SID}', and '{collectionUrl}' with values from the specific error message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_7\n\nLANGUAGE: cmdline\nCODE:\n```\nTFSSecurity.exe /a+ Identity \"{scope}\\\\\" Read sid:{Group SID} ALLOW /collection:{collectionUrl}\n```\n\n----------------------------------------\n\nTITLE: Creating Git Branch\nDESCRIPTION: Command to create a new Git branch from the current branch\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_6\n\nLANGUAGE: git\nCODE:\n```\ngit branch branchname\n```\n\n----------------------------------------\n\nTITLE: QLPack Configuration File in YAML\nDESCRIPTION: Example of a qlpack.yml file used to declare a CodeQL pack and its dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-code-scanning-queries.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: 1.0.1\ndependencies:\n  codeql/javascript-all: \"*\"\n  codeql/javascript-queries: \"*\"\n```\n\n----------------------------------------\n\nTITLE: Example: Cloaking a Folder\nDESCRIPTION: Demonstrates how to cloak the c:\\projects\\lib folder, which excludes it from version control operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_8\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf workfold /cloak c:\\projects\\lib\n```\n\n----------------------------------------\n\nTITLE: Promoting Deleted Items with TFVC Reconcile Command\nDESCRIPTION: Adds all locally deleted items to version control pending changes without opening the Promote Candidate Changes dialog box.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/reconcile-command.md#2025-04-22_snippet_7\n\nLANGUAGE: Batch\nCODE:\n```\ntf reconcile /promote /deletes /noprompt\n```\n\n----------------------------------------\n\nTITLE: Linking Work Items in Commit Messages with Git Command Line\nDESCRIPTION: Commands to create a commit with a message that links to a work item using the #ID syntax, then push the commit. This creates a traceable connection between code changes and work items in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-vs.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n> git commit -am \"Fix bug #<work item ID>\"\n> git push\n```\n\n----------------------------------------\n\nTITLE: Applying Version-Specific Label in TFVC\nDESCRIPTION: Example of applying the 'goodbuild' label to a specific version (version 3) of a file in the TFVC server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/label-command-team-foundation-version-control.md#2025-04-22_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf label goodbuild /version:3 $/src/314.cs\n```\n\n----------------------------------------\n\nTITLE: Creating Task Lists in Markdown for Azure DevOps\nDESCRIPTION: Demonstrates how to create lightweight task lists with checkboxes in pull request descriptions or wiki pages. Uses square brackets with optional 'x' to indicate completion status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n- [ ] A  \n- [ ] B  \n- [ ] C  \n- [x] A  \n- [x] B  \n- [x] C  \n```\n\n----------------------------------------\n\nTITLE: Including a Note About Analytics Image Differences in Markdown\nDESCRIPTION: This snippet demonstrates how to include a predefined note about differences in Analytics images in a Markdown file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/what-are-analytics-views.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [labels for default analytics differences](../includes/analytics-image-differences.md)]\n```\n\n----------------------------------------\n\nTITLE: Using Build.Repository.LocalPath Variable in Azure DevOps Pipelines\nDESCRIPTION: Specifies the local path on the agent where source code files are downloaded (e.g., c:\\agent_work\\1\\s). Behavior varies with single vs. multiple repository checkouts and custom paths. It's agent-scoped, usable as an environment variable or task parameter, but not in build numbers or version control tags. Not available in templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_14\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.Repository.LocalPath\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Specific Version and Redirecting to a New File\nDESCRIPTION: Example demonstrating how to retrieve version 5 of a file and redirect the output to create a new file with a different name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/view-command.md#2025-04-22_snippet_3\n\nLANGUAGE: Batch\nCODE:\n```\nc:\\projects>tf view /version:5 314.cs > 314.old\n```\n\n----------------------------------------\n\nTITLE: Moniker Range Code Block for Azure DevOps 2022+\nDESCRIPTION: Markdown code block showing configuration instructions for Azure Boards-GitHub integration on Azure DevOps versions after 2022, supporting up to 1,000 GitHub repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/index.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::moniker range=\"> azure-devops-2022\"\nAzure Boards and Azure DevOps support integration with GitHub.com and GitHub Enterprise Server repositories.\n\nYou can start from either Azure Boards or GitHub to integrate and connect up to 1,000 GitHub repositories to an Azure Boards project. \n\n- [Install and configure the Azure Boards app for GitHub](install-github-app.md)\n- [Connect an Azure Boards project to one or more GitHub repositories](connect-to-github.md)\n\n:::moniker-end\n```\n\n----------------------------------------\n\nTITLE: Complete Extension Manifest with Scopes\nDESCRIPTION: A more complete example of an extension manifest file that includes the vso.work scope along with other required properties like name, publisher, and version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"example-widget\",\n    \"publisher\": \"example-publisher\",\n    \"version\": \"1.0.0\",\n    \"scopes\": [\n        \"vso.work\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Analytics Views History Options Table\nDESCRIPTION: Markdown table defining the different history options available when configuring an Analytics view, including Current only, Rolling period, Date range, and All history options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/analytics-views-create.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|  Option  | Description |\n|------|---------|\n| **Current only** | Choose this option when you want a snapshot of work item status. Generates a single row per work item matching the work item's latest values in the Analytics data store. |\n| **Rolling period** | Choose this option and enter the number of days previous to the current day to include in the dataset. The sliding window changes each time you refresh your report. |\n| **Date range** | Choose this option and select a specific start and end date to include in the dataset, or select  **to present** to specify a rolling window with no fixed end date. When you select **to present**, the end date corresponds to the day the reports is refreshed. If you unselect it, the end date is always the date selected on the end date field. |\n| **All history** | Choose this option to include the complete history for all work items you selected in your filter criteria. If you have a significant history, specify a **Weekly** or **Monthly** granularity.|\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items with Power BI\nDESCRIPTION: Power BI query that retrieves Feature work items and their Bug descendants, aggregating bug counts by state. The query filters by iteration and area, expands descendants, and performs data transformations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview-rollup.md#2025-04-22_snippet_4\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $filter=(\n        IterationSK eq {iterationSK}\n        and AreaSK eq {areaSK}\n        and WorkItemType eq 'Feature'\n    )\n&$expand=Descendants(\n    $apply=filter(\n        WorkItemType eq 'Bug'\n    )\n    /groupby(\n        (State),\n        aggregate($count as Count)\n    )\n)\n&$select=WorkItemId,Title\", null, [Implementation=\"2.0\"]),\n    #\"Expanded Descendants\" = Table.ExpandTableColumn(Source, \"Descendants\", {\"State\", \"Count\"}, {\"Descendants.State\", \"Descendants.Count\"}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded Descendants\", each [Descendants.Count] <> null and [Descendants.Count] <> \"\"),\n    #\"Pivoted Column\" = Table.Pivot(#\"Filtered Rows\", List.Distinct(#\"Filtered Rows\"[Descendants.State]), \"Descendants.State\", \"Descendants.Count\", List.Sum),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Pivoted Column\",{{\"Active\", type number}, {\"Closed\", type number}})\nin\n    #\"Changed Type\"\n```\n\n----------------------------------------\n\nTITLE: Using the 'Not In' Operator with TreePath Fields in Azure Boards Queries\nDESCRIPTION: Demonstrates the `Not In` operator used in Azure Boards queries for TreePath fields (Area Path, Iteration Path). This operator allows specifying multiple values to exclude from the query results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-operators-variables.md#2025-04-22_snippet_4\n\nLANGUAGE: wiql\nCODE:\n```\nNot In\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration Filtered by Branch in Power BI\nDESCRIPTION: This Power BI query fetches test duration data filtered by branch name. It includes branch information in the grouping to enable slicing the report by specific branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_4\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And Date/Date ge {startdate} \"\n      &\"And Workflow eq 'Build'\"\n      &\")/groupby(\"\n      &\"(TestSK, Test/TestName, Branch/BranchName),\"\n      &\"aggregate(\"\n      &\"ResultCount with sum as TotalCount, \"\n      &\"ResultDurationSeconds with sum as TotalDuration\"\n      &\"))/compute(\"\n      &\"TotalDuration div TotalCount as AvgDuration\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Including Microsoft Entra PAT reduction content in Azure DevOps documentation\nDESCRIPTION: This snippet shows how to include predefined content about using Microsoft Entra to reduce PAT usage in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/manage-pats-with-policies-for-administrators.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [use-microsoft-entra-reduce-pats](../../includes/use-microsoft-entra-reduce-pats.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating and Modifying a File in a Feature Branch\nDESCRIPTION: Creates an 'animals' branch and appends content to the test file. This creates a divergent history that will later be simplified by Git.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_1\n\nLANGUAGE: Git CLI\nCODE:\n```\n> git checkout -b animals\n> echo \"donkeys\" >> test.txt\n> git commit -am \"We have added an animal\"\n```\n\n----------------------------------------\n\nTITLE: Granting Key Vault Permissions using Azure CLI\nDESCRIPTION: These Azure CLI commands are used to authorize an application to access keys or secrets in Azure Key Vault. They set the subscription, log in, retrieve the service principal object ID, and set the key vault policy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/azure-key-vault.md#2025-04-22_snippet_7\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz account set --subscription <YOUR_SUBSCRIPTION_ID>\n\naz login\n\n$spnObjectId = az ad sp show --id <YOUR_SERVICE_PRINCIPAL_ID>\n\naz keyvault set-policy --name <YOUR_KEY_VAULT_NAME> --object-id $spnObjectId --secret-permissions get list\n```\n\n----------------------------------------\n\nTITLE: Stopping Linux Agent Service for Azure DevOps\nDESCRIPTION: This command stops the Azure DevOps agent service on a Linux system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh stop\n```\n\n----------------------------------------\n\nTITLE: Deleting Work Items Using Azure CLI\nDESCRIPTION: Command syntax for deleting or destroying work items using Azure DevOps CLI. Includes required and optional parameters for work item deletion, with support for permanent deletion through the --destroy flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/remove-delete-work-items.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item delete --id\n                           [--destroy]\n                           [--org]\n                           [--project]\n                           [--yes] \n```\n\n----------------------------------------\n\nTITLE: Allowing Administrators to Create Main Branch\nDESCRIPTION: TF Git command to allow Project Administrators to create a branch named 'main' at the repository root, ensuring main can be recreated if accidentally deleted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/require-branch-folders.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ntf git permission /allow:CreateBranch /group:\"[FabrikamProject]\\Project Administrators\" /collection:https://dev.azure.com/fabrikam-fiber/ /teamproject:FabrikamProject /repository:FabrikamRepo /branch:main\n```\n\n----------------------------------------\n\nTITLE: Querying Items Closed in Time Period\nDESCRIPTION: Query clause that finds work items closed within a specified date range.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-date-or-current-iteration.md#2025-04-22_snippet_3\n\nLANGUAGE: WIQL\nCODE:\n```\nClosed Date >= 1/1/2023 AND Closed Date <= 1/31/2023\n```\n\n----------------------------------------\n\nTITLE: Allowing Contributors to Create Branches in Users Folder\nDESCRIPTION: TF Git command to allow Contributors to create branches within the 'users' folder, providing a location for personal or user-specific branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/require-branch-folders.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntf git permission /allow:CreateBranch /group:[FabrikamProject]\\Contributors /collection:https://dev.azure.com/fabrikam-fiber/ /teamproject:FabrikamProject /repository:FabrikamRepo /branch:users\n```\n\n----------------------------------------\n\nTITLE: Retrieving Bugs without Duplicate Links using OData Query in Azure DevOps\nDESCRIPTION: OData query that retrieves bugs that do not have a Duplicate link to another bug. The query filters by work item type, state, area path, and the absence of a Duplicate link.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'Bug'\n                and State ne 'Closed'\n                and startswith(Area/AreaPath,'{areapath}')\n                and not (Links/any(x:x/LinkTypeName eq 'Duplicate' and x/TargetWorkItem/WorkItemType eq 'Bug'))\n        &$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath)\n```\n\n----------------------------------------\n\nTITLE: Auto Detection Overriding Default Configuration in Azure DevOps CLI\nDESCRIPTION: Example showing how git context auto-detection overrides configured defaults when running commands within a git repository directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/auto-detect-and-git-aliases.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\n~/contosoTest/portal$ az devops configure --defaults organization=https://dev.azure.com/contoso project=webApp\n~/contosoTest/portal$ az repos list\n```\n\n----------------------------------------\n\nTITLE: Adding HTML Guidance to a Rich-Text Field in Azure Boards Work Item Templates\nDESCRIPTION: HTML syntax that can be added to a rich-text field (like 'Repos Steps') to provide structured guidance for bug reporting. It includes sections for steps to reproduce, expected behavior, affected branch, and affected build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/work-item-template-examples.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p><b>Steps to reproduce:</b><br>1.&nbsp; <br><br><b>Expected Behavior:</b><br>1. <br><br><b>Affected Branch:</b> <br> <b>Affected Build:</b><br></p>\n```\n\n----------------------------------------\n\nTITLE: Configuring SMTP Server for Azure DevOps Server Notifications\nDESCRIPTION: This snippet provides a note for on-premises Azure DevOps Server administrators to configure an SMTP server for team members to receive notifications. It includes a link to the setup documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/discussion-tip-azure-devops.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!IMPORTANT]  \n> For on-premises Azure DevOps Server, [configure an SMTP server](/azure/devops/server/admin/setup-customize-alerts) for team members to receive notifications.\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 209 Update Content in Markdown Documentation\nDESCRIPTION: Markdown include directive to import the main Azure Boards Sprint 209 update content from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-209-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-209-update](../includes/boards/sprint-209-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Referencing Date Properties in Azure DevOps Analytics Queries\nDESCRIPTION: Example of how to reference properties from the Date entity in groupby statements for Azure DevOps Analytics queries. This is commonly used for fields like RevisedOn, ResolvedOn, and StateChangeOn.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-boards.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n```groupby```\n```\n\n----------------------------------------\n\nTITLE: Passing Arguments to PowerShell Script in Azure DevOps Build Pipeline\nDESCRIPTION: Arguments to pass to a PowerShell script in an Azure DevOps build pipeline that reference build variables. The example passes the requester's name and build trigger reason to the script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_13\n\nLANGUAGE: PowerShell\nCODE:\n```\n-greeter \"$(Build.RequestedFor)\" -trigger \"$(Build.Reason)\"\n```\n\n----------------------------------------\n\nTITLE: Repository Health Links and References\nDESCRIPTION: External resource links referenced in the documentation for managing repository health\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repo-health.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[Git-LFS](https://git-lfs.com/)\n[Scalar](https://git-scm.com/docs/scalar)\n[Azure Artifacts](https://azure.microsoft.com/products/devops/artifacts)\n[Git-Internals-Git-Objects](https://git-scm.com/book/en/v2/Git-Internals-Git-Objects)\n[Limited Refs](/previous-versions/azure/devops/all/git/limited-refs)\n[REST Pushes](/rest/api/azure/devops/git/pushes/create)\n```\n\n----------------------------------------\n\nTITLE: Accessing npm Package API Endpoint for Project Scoped Feed in Azure DevOps Server\nDESCRIPTION: HTTP endpoint URL pattern for promoting npm packages in a project scoped feed on an on-premises Azure DevOps Server 2022. This uses the packagesbatch API for batch operations on npm packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_15\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://{instance}/{collection}/{project}/_apis/packaging/feeds/{feedId}/npm/packagesbatch?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: Updating a Build Validation Policy with Azure CLI\nDESCRIPTION: This command updates an existing build validation policy. It requires the policy ID and offers optional parameters to modify any aspect of the policy configuration including branch settings, blocking status, and build definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy build update --id\n                             [--blocking {false, true}]\n                             [--branch]\n                             [--branch-match-type {exact, prefix}]\n                             [--build-definition-id]\n                             [--detect {false, true}]\n                             [--display-name]\n                             [--enabled {false, true}]\n                             [--manual-queue-only {false, true}]\n                             [--org]\n                             [--path-filter]\n                             [--project]\n                             [--queue-on-source-update-only {false, true}]\n                             [--repository-id]\n                             [--subscription]\n                             [--valid-duration]\n```\n\n----------------------------------------\n\nTITLE: Checking YAML Trigger Override Settings in Azure DevOps UI\nDESCRIPTION: This snippet demonstrates how to access the pipeline settings UI to check if YAML CI or PR triggers are being overridden. It involves navigating through the pipeline options menu and verifying the 'Override the YAML trigger from here' setting for different trigger types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/qa2.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# No actual code snippet provided, but the process involves UI interactions:\n# 1. Edit your pipeline\n# 2. Choose \"...\" and then \"Triggers\"\n# 3. Check the \"Override the YAML trigger from here\" setting for:\n#    - Continuous integration\n#    - Pull request validation\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Configuration List for Azure Boards Delivery Plans\nDESCRIPTION: Markdown table outlining the permissions and configuration requirements needed to use dependency tracking in Delivery Plans.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/track-dependencies.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Permissions** | - To view a Delivery Plan: Member of the **Project Collection Valid Users** group. Users granted **Stakeholder** access for a private project can view plans. Users granted **Stakeholder** access for a public project can add and view plans.<br> - To open or modify a work item or add work items: **Edit work items in this node** permission set to **Allow** for the Area Paths assigned to the work item. |\n| **Configuration** |- For work items and dependency lines to appear on the plan: [Enable a team product or portfolio backlog](../../organizations/settings/select-backlog-navigation-levels.md) to select it for a plan.<br> - Work items belong to a team's [product backlog](../backlogs/create-your-backlog.md) or [portfolio backlog](../backlogs/define-features-epics.md). Only work items belonging to a category selected for viewing on a team's backlog and meet any [field criteria defined for the plan](add-edit-delivery-plan.md#field-criteria) appear on the plan. <br> - [Sprints selected for each team](../../organizations/settings/set-iteration-paths-sprints.md#select-team-sprints-and-set-the-default-iteration-path) defined in the plan.<br> - [Start and end dates](../../organizations/settings/set-iteration-paths-sprints.md#add-iterations-and-set-iteration-dates) defined for each project iteration.<br> - [**Iteration Paths**](../sprints/assign-work-sprint.md) or [**Start Date/Target Date**](../queries/query-by-date-or-current-iteration.md#date-and-iteration-path-fields) defined for each work item. When defined, **Start Date/Target Date** overrides the sprint assigned to a work item.<br> - To show dependency icons and lines:  [Work items](../backlogs/add-link.md) linked using **Predecessor-Successor** link type.<br> - Team expanded to view dependency icons and dependency lines. |\n```\n\n----------------------------------------\n\nTITLE: Creating Iteration Path with Azure DevOps CLI\nDESCRIPTION: This command creates a new iteration path for a project using the Azure DevOps CLI. It allows specifying the name, start date, finish date, and path of the iteration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration project create --name\n                                   [--finish-date]\n                                   [--path]\n                                   [--project]\n                                   [--start-date]\n```\n\n----------------------------------------\n\nTITLE: Adding Maven Dependency for Kotlinx Datetime in XML\nDESCRIPTION: XML dependency snippet for adding the Kotlinx Datetime library to a Maven project's pom.xml file. This example shows how to specify the group ID, artifact ID, version, and scope for the dependency.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/upstream-sources.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>org.jetbrains.kotlinx</groupId>\n    <artifactId>kotlinx-datetime-jvm</artifactId>\n    <version>0.4.1</version>\n    <scope>runtime</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Building Python Package Distribution\nDESCRIPTION: Commands to build wheel and source distribution for a Python package using the build module\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/python-packages.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install --upgrade build\npython -m build\n```\n\n----------------------------------------\n\nTITLE: Multiple Aggregations in a Single OData Query\nDESCRIPTION: This OData query demonstrates how to generate multiple aggregations in a single call, calculating both the sum of completed work and the sum of remaining work.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\n/WorkItems?$apply=aggregate(CompletedWork with sum as SumOfCompletedWork, RemainingWork with sum as SumOfRemainingWork)\n```\n\n----------------------------------------\n\nTITLE: TFVC Localversions Basic File Version Check\nDESCRIPTION: Example showing how to check the version of a specific file (ControllerBase.cs) in the current workspace directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/localversions-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\workspaces\\FeatureA\\catalog\\controller>tf localversions ControllerBase.cs\n```\n\n----------------------------------------\n\nTITLE: Displaying Files in a Specific Server Path in TFVC\nDESCRIPTION: Example demonstrating how to display TFVC server files at a specific path (314dir). The subfolder doesn't need to exist locally.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/dir-command.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf dir 314dir\n```\n\n----------------------------------------\n\nTITLE: Common Domain URLs for Azure DevOps\nDESCRIPTION: Essential domain URLs required for basic Azure DevOps functionality, including sign-in, licensing connections, and agent software downloads.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com\nhttps://*.dev.azure.com\nhttps://aex.dev.azure.com\nhttps://aexprodea1.vsaex.visualstudio.com\nhttps://*vstmrblob.vsassets.io\nhttps://amp.azure.net\nhttps://app.vssps.dev.azure.com\nhttps://app.vssps.visualstudio.com\nhttps://*.vsblob.visualstudio.com\nhttps://*.vssps.visualstudio.com\nhttps://*.vstmr.visualstudio.com\nhttps://azure.microsoft.com\nhttps://go.microsoft.com\nhttps://graph.microsoft.com\nhttps://login.microsoftonline.com\nhttps://management.azure.com\nhttps://management.core.windows.net\nhttps://microsoft.com\nhttps://microsoftonline.com\nhttps://static2.sharepointonline.com\nhttps://visualstudio.com\nhttps://vsrm.dev.azure.com\nhttps://*.windows.net\nhttps://{organization_name}.visualstudio.com\nhttps://{organization_name}.vsrm.visualstudio.com\nhttps://{organization_name}.vstmr.visualstudio.com\nhttps://{organization_name}.pkgs.visualstudio.com\nhttps://{organization_name}.vssps.visualstudio.com\n\nAzure DevOps uses the following URLs to provide the agent software for download for self-hosted agents.\nhttps://vstsagentpackage.azureedge.net\nhttps://download.agent.dev.azure.com\n\nAzure DevOps uses content delivery network (CDN) to serve static content. The following URLs are part of that. \nhttps://cdn.vsassets.io\nhttps://*.vsassets.io\nhttps://*gallerycdn.vsassets.io\nhttps://aadcdn.msauth.net\nhttps://aadcdn.msftauth.net\nhttps://amcdn.msftauth.net\nhttps://azurecomcdn.azureedge.net\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Changed Date Using OData Analytics in Azure DevOps\nDESCRIPTION: This query returns Product Backlog Items, Bugs, and Features with a Changed Date greater than a specific date. It demonstrates how to filter by work item type and date, select specific fields, expand related entities, and order results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/v1.0/WorkItems?\n  $select=WorkItemId, WorkItemType, Title, State \n  &$expand=AssignedTo($select=UserEmail)\n  &$filter=(Project/ProjectName eq 'Fabrikam Fiber'\n    AND (WorkItemType eq 'Product Backlog Item' or WorkItemType eq 'Bug' or WorkItemType eq 'Feature')\n    AND ChangedOn/Date ge 2021-12-16T23:44:15.619Z)\n  &$orderby=WorkItemType desc\n```\n\n----------------------------------------\n\nTITLE: Using AB# Syntax to Link GitHub Elements to Azure Boards Work Items\nDESCRIPTION: This syntax creates a link between a GitHub element (commit, PR, or issue) and an Azure Boards work item. When included in commit messages, PR titles/descriptions, or issue content, it creates a bidirectional link.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/link-to-from-github.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nAB#{ID}\n```\n\n----------------------------------------\n\nTITLE: Executing TriggerCollectionIndexing.ps1 Script in PowerShell\nDESCRIPTION: This PowerShell script reindexes a collection. It requires input parameters including database information, collection name, and the entities to reindex (All, Code, WorkItem, or Wiki).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/manage-search.md#2025-04-22_snippet_5\n\nLANGUAGE: PowerShell\nCODE:\n```\nTriggerCollectionIndexing.ps1\n```\n\n----------------------------------------\n\nTITLE: Comparing File Versions Using Label and Changeset\nDESCRIPTION: Two equivalent commands to display the differences between a labeled version of a file and a specific changeset version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf difference 314.cs;Lrelease 314.cs;C3200\n```\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf difference 314.cs;Lrelease~C3200\n```\n\n----------------------------------------\n\nTITLE: Branching a File from a Specific Changeset\nDESCRIPTION: Creates a branch of 314.cs as it existed in changeset #4, naming the new branch file csharp_branch and creating it in both the working folder and on the Azure DevOps server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branch-command.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf branch C:\\314.cs;C4 csharp_branch\n```\n\n----------------------------------------\n\nTITLE: Building Python Package in Classic Pipeline\nDESCRIPTION: This command line script builds a Python package using the 'build' module in a Classic pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pypi.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npython -m build -w\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Link for Azure Repos Bulk Subscriptions Section\nDESCRIPTION: This markdown snippet creates a link to a section about creating bulk subscriptions in the Azure Repos app for Slack and Microsoft Teams. It uses the standard markdown link syntax with a hash symbol for internal page navigation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-161-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Create bulk subscriptions in Azure Repos app for Slack and Microsoft Teams](#create-bulk-subscriptions-in-azure-repos-app-for-slack-and-microsoft-teams)\n```\n\n----------------------------------------\n\nTITLE: Unlinking Azure Boards Project Command\nDESCRIPTION: Command to unlink an Azure Boards project from a Microsoft Teams channel, which removes all project subscriptions and area paths.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-teams.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n@azure boards unlink\n```\n\n----------------------------------------\n\nTITLE: Merging Specific Changeset in TFVC\nDESCRIPTION: Merges a specific changeset (137) from branch1 to branch2 using the /version parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merge-command.md#2025-04-22_snippet_2\n\nLANGUAGE: cmd\nCODE:\n```\nc:\\projects>tf merge /version:C137~C137 branch1 branch2 /recursive\n```\n\n----------------------------------------\n\nTITLE: Setting Shallow Fetch Depth in Azure DevOps Pipeline\nDESCRIPTION: Demonstrates how to set the shallow fetch depth using the Agent.Source.Git.ShallowFetchDepth variable in an Azure DevOps pipeline. This variable overrides the checkbox controls in the UI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n> [!TIP]\n> The `Agent.Source.Git.ShallowFetchDepth` variable mentioned below also works and overrides the check box controls. This way you can modify the setting when you queue the build.\n```\n\n----------------------------------------\n\nTITLE: Adding Individual Files to TFVC Repository\nDESCRIPTION: Example of adding specific files (program1.cs and program2.cs) to a TFVC repository using the 'add' command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/add-command.md#2025-04-22_snippet_3\n\nLANGUAGE: Batch\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf add program1.cs program2.cs\n```\n\n----------------------------------------\n\nTITLE: Registering Handler for Azure DevOps Extension Action\nDESCRIPTION: This JavaScript snippet initializes the VSS SDK and registers a handler object for the custom action. The handler object implements the IContributedMenuSource contract and defines an execute function that is invoked when the menu item is selected.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-action-js.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"sdk/scripts/VSS.SDK.js\"></script>\n<script>\n     VSS.init();\n\n     // Use an IIFE to create an object that satisfies the IContributedMenuSource contract\n     var menuContributionHandler = (function () {\n        \"use strict\";\n        return {\n            // This is a callback that gets invoked when a user selects the newly contributed menu item\n            // The actionContext parameter contains context data surrounding the circumstances of this\n            // action getting invoked.\n            execute: function (actionContext) {\n                alert(\"Hello, world\");\n            }\n        };\n    }());\n\n    // Associate the menuContributionHandler object with the \"myAction\" menu contribution from the manifest.\n    VSS.register(\"myAction\", menuContributionHandler);\n</script>\n```\n\n----------------------------------------\n\nTITLE: Completing a Task with Success Status\nDESCRIPTION: Demonstrates how to use the task.complete command to mark a task as succeeded in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n##vso[task.complete result=Succeeded;]DONE\n```\n\n----------------------------------------\n\nTITLE: Signing in to Azure CLI\nDESCRIPTION: Commands to sign in to Azure CLI and set the default subscription. This is necessary before creating Azure resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-arm-template.md#2025-04-22_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz login\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz account set --subscription \"My subscription name\"\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz account list -o table\n```\n\n----------------------------------------\n\nTITLE: Setting the Root Module in PowerShell Manifest\nDESCRIPTION: Configuration snippet showing how to specify the main script file that PowerShell loads when importing the module.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nRootModule = 'PowerShell-Demo.psm1'\n```\n\n----------------------------------------\n\nTITLE: Adding Sprint 36 Iteration Path Example\nDESCRIPTION: This example demonstrates creating a new iteration path named 'Sprint 36' with specific start and end dates using the Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration project create --name \"Sprint 36\" --start-date 2019-09-01 --finish-date 2019-09-30\n```\n\n----------------------------------------\n\nTITLE: Shelve Command with Item Specification in TFVC\nDESCRIPTION: This syntax allows specifying which files or folders to include in the shelveset, with options for moving or replacing existing shelvesets and adding recursive operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelve-command.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ntf shelve [/move] [/replace] [/comment:(\"comment\"|@commentfile)] \n[/recursive] [shelvesetname] itemspec [/validate] [/noprompt] [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Fetching Remote Changes with Git Command Line\nDESCRIPTION: Command to download new commits from the Azure Repos Git repository without merging them into your local repository. This allows you to see what changes exist before integrating them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-vs.md#2025-04-22_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n> git fetch\n```\n\n----------------------------------------\n\nTITLE: Returning the Sum of All Remaining Work using OData\nDESCRIPTION: This OData query uses the $apply extension with the aggregate function to calculate the sum of all remaining work across work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $apply=aggregate(RemainingWork with sum as SumOfRemainingWork)\n```\n\n----------------------------------------\n\nTITLE: Extracting Pull Request Details from Webhook Payload\nDESCRIPTION: Reads the repository ID, pull request ID, and title from the service hook payload received from Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nvar repoId = req.body.resource.repository.id\nvar pullRequestId = req.body.resource.pullRequestId\nvar title = req.body.resource.title\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Widget List in Markdown\nDESCRIPTION: Markdown formatted list of standard dashboard widgets available in Azure DevOps, including work item tracking, code management, and sprint management widgets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/includes/unavailable-widgets.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* Assigned to me\n* Code tile\n* New work item\n* Pull request\n* Query results\n* Requirements quality\n* Sprint burndown\n* Sprint capacity\n* Sprint overview\n* Team members\n* Welcome\n* Work links\n* Other links\n```\n\n----------------------------------------\n\nTITLE: Power BI Query for User Stories Burndown by Team\nDESCRIPTION: Power BI M query that returns historical burndown data filtered by team name instead of area path. Groups and aggregates data similarly to the area path query.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_2\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\"\n        &\"$apply=filter(WorkItemType eq 'User Story' \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and (Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}') \"\n            &\"and Tags/any(x:x/TagName eq '{tagname}') \"\n            &\"and DateValue ge {startdate} \"\n            &\"and DateValue le {enddate} \"\n        &\") \"\n        &\"/groupby ( \"\n            &\"(DateValue,State,Area/AreaPath), \"\n            &\"aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Querying Task Duration Trend by Pipeline Name in Power BI\nDESCRIPTION: Power BI query to get the 80th percentile task duration trend for a specific pipeline and task, filtered by date range and successful runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_0\n\nLANGUAGE: Power Query M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and TaskDisplayName eq '{taskname}' \"\n                &\"and PipelineRunCompletedOn/Date ge {startdate} \"\n        &\"and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded') \"\n        &\"and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1) \"\n            &\"    ) \"\n                &\"/compute( \"\n                &\"percentile_cont(ActivityDurationSeconds, 0.8, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds) \"\n            &\"/groupby( \"\n                &\"(TaskDuration80thPercentileInSeconds, PipelineRunCompletedOn/Date)) \"\n            &\"&$orderby=PipelineRunCompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Project Access Requirements Table\nDESCRIPTION: Markdown table defining project access requirements and permissions for Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/add-run-update-tests.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Project access** | [Project member](../../organizations/security/add-users-team-project.md). |\n| **Access levels** |To add work items, view or run tests, and use all boards features: At least [**Basic** access](../../organizations/security/access-levels.md). Users with **Stakeholder** access can't view or run tests.|\n|**Permissions**|- To view or modify work items: **View work items in this node** and **Edit work items in this node** permissions set to **Allow**. By default, the **Contributors** group has these permissions. For more information, see [Set permissions and access for work tracking](../../organizations/security/set-permissions-access-work-tracking.md).|\n```\n\n----------------------------------------\n\nTITLE: Configuring Pool in YAML Pipeline\nDESCRIPTION: This YAML snippet shows how to configure a pipeline to use a Managed DevOps Pool instead of the default Microsoft-hosted Linux agent. It demonstrates replacing the default pool configuration with a custom pool name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-portal.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  name: fabrikam-managed-pool\n```\n\n----------------------------------------\n\nTITLE: Listing Agent Queues in Azure Pipelines using Azure CLI\nDESCRIPTION: Azure CLI command to list all agent queues in an Azure DevOps project. It demonstrates using default organization and project configurations, and outputs the results in a table format showing queue ID, name, pool hosting status, and pool type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/pools-queues.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines queue list --output table\n```\n\n----------------------------------------\n\nTITLE: Overriding Package Versions in npm\nDESCRIPTION: Demonstrates how to use the 'overrides' field in npm's package.json to override specific transitive dependencies. This example shows how to override the 'acorn' package version used by 'espree' in 'eslint'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"name\": \"npm-overrides\",\n  \"version\": \"1.0.0\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"axios\": \"0.19.2\",\n    \"eslint\": \"5.16.0\"\n  },\n   \"overrides\":{\n       \"eslint\": {\n        \"espree\": {\n          \"acorn\": \"6.4.1\"\n        }\n    }\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Selected Marketplace Image in JSON (ARM/Azure CLI)\nDESCRIPTION: This JSON snippet shows how to specify a selected marketplace image using the 'resourceId' property in the images array. It provides an example resource ID for an Ubuntu 20.04 LTS image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-images.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n\"images\": [\n    {\n        \"resourceId\": \"/subscriptions/subscription_id_placeholder/Providers/Microsoft.Compute/Locations/eastus/publishers/canonical/artifacttypes/vmimage/offers/0001-com-ubuntu-server-focal/skus/20_04-lts-gen2/versions/latest\"\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Setting Service Principal Key Environment Variable - Azure DevOps CLI - PowerShell\nDESCRIPTION: This PowerShell command sets the 'AZURE_DEVOPS_EXT_AZURE_RM_SERVICE_PRINCIPAL_KEY' environment variable, which automates secret input when creating Azure Resource Manager service connections through the Azure DevOps CLI. Used in Windows or PowerShell-based automation environments where interactive input is not desirable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\n$env:AZURE_DEVOPS_EXT_AZURE_RM_SERVICE_PRINCIPAL_KEY=<your_secret_here>\n```\n\n----------------------------------------\n\nTITLE: Server-Side Paging Response Example in Azure DevOps Analytics\nDESCRIPTION: Example JSON response showing how Analytics enforces paging when query results exceed 10000 records. The response includes the first page of data and a nextLink for pagination.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"@odata.context\":\"https://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/$metadata#WorkItems\",\n  \"value\":[\n   // 10000 values here\n  ],\n  \"@odata.nextLink\":\"https://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?$skiptoken=10000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Security Group in Azure DevOps CLI\nDESCRIPTION: Command syntax for deleting a security group using its descriptor ID. Includes an optional parameter to skip confirmation prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group delete --id\n                                [--yes]\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Advanced Security Sprint 251 Update Links (Markdown)\nDESCRIPTION: This Markdown snippet uses the `[!INCLUDE ...]` directive to embed content from the specified file, specifically inserting links related to GitHub Advanced Security updates for Sprint 251.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update-links](includes/ghazdo/sprint-251-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Managing Azure Boards Iteration and Area Paths Using CLI Commands\nDESCRIPTION: Azure DevOps CLI commands for managing iteration and area paths. These commands allow for interactive setup and management or automated configuration through scripting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/boards/sprint-154-update.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\naz boards iteration\naz boards area\n```\n\n----------------------------------------\n\nTITLE: Auto-Merge TFVC Resolve Example\nDESCRIPTION: Example showing how to automatically resolve all conflicts using the automerge option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/resolve-command.md#2025-04-22_snippet_2\n\nLANGUAGE: Command Line\nCODE:\n```\ntf resolve /auto:automerge\n```\n\n----------------------------------------\n\nTITLE: Subscribing to an Azure DevOps Project in Slack\nDESCRIPTION: Command to start monitoring all Git repositories in a project. This creates default subscriptions for pull request created events on the main branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-slack.md#2025-04-22_snippet_0\n\nLANGUAGE: slash command\nCODE:\n```\n/azrepos subscribe [project url]\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Pipelines using Azure CLI\nDESCRIPTION: Shows the syntax for the `az pipelines list` command in Azure CLI. This command is used to retrieve a list of pipelines within an Azure DevOps organization and project, with options to filter by folder, name, repository, and control the output order. Requires the Azure DevOps extension for Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/create-first-pipeline-next-steps.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n```azurecli\naz pipelines list [--detect {false, true}]\n                  [--folder-path]\n                  [--name]\n                  [--org]\n                  [--project]\n                  [--query-order {ModifiedAsc, ModifiedDesc, NameAsc, NameDesc, None}]\n                  [--repository]\n                  [--repository-type {bitbucket, git, github, githubenterprise, svn, tfsgit, tfsversioncontrol}]\n                  [--top]\n```\n```\n\n----------------------------------------\n\nTITLE: Example of Listing Test Suites with TCM CLI\nDESCRIPTION: Example showing how to list test suites for the Fabrikam Fiber project. The output shows the test suite IDs and hierarchical names, with arrows indicating parent-child relationships between test suites.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_3\n\nLANGUAGE: tcm\nCODE:\n```\ntcm suites /list /collection:https://dev.azure.com/fabrikamprime /teamproject:\"Fabrikam Fiber\" \n\nId        Name\n------***----------------------------------------------------------------\n67        Sprint 1\n68        Sprint 1 -> 33 : Change initial view\n69        Sprint 1 -> 34 : Welcome back page\n70        Sprint 1 -> 43 : Cancel order form\n73        All sprints\n74        All sprints -> Suite 01\n75        All sprints -> Suite 01 -> Sub Suite 01\n78        Sprint 2\n87        Hello World Test\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Advanced Security Sprint 251 Update Details (Markdown)\nDESCRIPTION: This Markdown snippet utilizes the `[!INCLUDE ...]` directive to include the detailed content about GitHub Advanced Security updates for Sprint 251 from the linked file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update](includes/ghazdo/sprint-251-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Example TFVC Undo Command\nDESCRIPTION: Example implementation of the tf undo command showing how to undo changes in a specific file within another user's workspace on a TFS server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undo-changes-another-user-workspace.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\ntf undo /workspace:OtherUserWorkspace;OtherUser $/TeamProject/MyFile.cs /collection:https://YourTFSServer:8080/tfs/YourCollection\n```\n\n----------------------------------------\n\nTITLE: Pulling Latest Changes from TFVC using Git-tf\nDESCRIPTION: Retrieves the latest changes from the TFVC repository and applies them to the local Git repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/share-your-code-in-tfvc-xcode.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngit tf pull\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Express Web Server\nDESCRIPTION: Basic Node.js web server implementation using Express framework to listen on port 3000 and respond with 'Hello World!' to GET requests.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst express = require('express')\nconst app = express()\n\napp.get('/', function (req, res) {\nres.send('Hello World!')\n})\n\napp.listen(3000, function () {\nconsole.log('Example app listening on port 3000!')\n})\n```\n\n----------------------------------------\n\nTITLE: Example Task Template URL for Azure DevOps Cloud\nDESCRIPTION: Complete example of a task work item template URL with predefined values for Title, Assigned To, Description, Tags, Activity, and Iteration Path fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/work-item-template.md#2025-04-22_snippet_2\n\nLANGUAGE: URL\nCODE:\n```\nhttps://dev.azure.com/{OrganizationName}/{ProjectName}/_workItems/create/Task?\n[System.Title]=TaskTitle&\n[System.AssignedTo]=Jamal+Hartnett&\n[System.Description]=<p>Always+include+Remaining+Work+and+links+to+any+related+bugs+or+user+stories.</p>&\n[System.Tags]=Web;+Phone;+Service&\n[Microsoft.VSTS.Common.Activity]=Development&\n[System.IterationPath]=Fabrikam+Fiber%5CIteration+1\n```\n\n----------------------------------------\n\nTITLE: Creating an empty database using SQL script\nDESCRIPTION: This SQL script creates an empty database named 'DatabaseExample' if it doesn't already exist. It's a simple example of using SQL scripts for database deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n  USE [main]\n  GO\n  IF NOT EXISTS (SELECT name FROM main.sys.databases WHERE name = N'DatabaseExample')\n  CREATE DATABASE [DatabaseExample]\n  GO\n```\n\n----------------------------------------\n\nTITLE: Linking Work Items to Pull Requests using Azure DevOps CLI\nDESCRIPTION: This snippet demonstrates how to create a new pull request and link work items to it using the Azure DevOps CLI. It creates a PR in the 'Fabrikam' repository from the 'new' branch and links work items #63 and #64.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pull-requests.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr create --repository Fabrikam --source-branch new --work-items 63 64\n```\n\n----------------------------------------\n\nTITLE: Listing Field Attributes - WitAdmin Command\nDESCRIPTION: Command-line example using witadmin to list attributes for a specific field in Azure DevOps Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/work-item-fields.md#2025-04-22_snippet_6\n\nLANGUAGE: CMD\nCODE:\n```\nwitadmin listfields /collection:http://fabrikam:8080/tfs/DefaultCollection /n:Microsoft.VSTS.Common.Issue\n```\n\n----------------------------------------\n\nTITLE: Power BI Query for Test Points Data\nDESCRIPTION: Power BI query that retrieves test points data grouped by tester and outcome from Azure DevOps Analytics. The query filters by test plan title and aggregates counts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-tester-by-outcome.md#2025-04-22_snippet_0\n\nLANGUAGE: powerbi\nCODE:\n```\nlet \n    Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints?\" \n        &\"$apply=filter((TestSuite/TestPlanTitle eq '{testPlanTitle}'))\" \n        &\"/groupby((Tester/UserName, LastResultOutcome),\" \n             &\"aggregate($count as Count)\" \n        &\")\", null, [Implementation=\"2.0\"]) \nin \n    Source\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Count in Azure DevOps Server (On-premises)\nDESCRIPTION: This example shows an OData query that returns the count of work items in the Fabrikam project from an on-premises Azure DevOps Server. It uses the $apply operator with aggregate function to count work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://fabrikam/DefaultCollection/Fabrikam/_odata/v4.0-preview/WorkItems?%20$apply=aggregate($count%20as%20Count)\n```\n\n----------------------------------------\n\nTITLE: Azure Storage Queue Configuration Settings\nDESCRIPTION: Settings for inserting messages into Azure Storage Queue, including account credentials, queue name, and message timeout settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/consumers.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"accountName\": \"string\",\n  \"accountKey\": \"string\",\n  \"queueName\": \"string\",\n  \"visiTimeout\": \"number\",\n  \"ttl\": \"number\",\n  \"resourceDetailsToSend\": \"string\",\n  \"messagesToSend\": \"string\",\n  \"detailedMessagesToSend\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Out Pull Request Branch with Azure CLI\nDESCRIPTION: Command syntax for checking out a pull request branch locally using Azure DevOps CLI, with parameters for remote name and subscription settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/view-pull-requests.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr checkout --id\n                     [--remote-name]\n                     [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Defining Work Item Query Folder Permissions in Azure DevOps\nDESCRIPTION: This snippet shows the permission structure for work item query folders in Azure DevOps, including Contribute, Delete, Manage permissions, and Read access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_45\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"2\":::\n   ### Permission (UI)   \n   `Namespace permission`  \n   :::column-end:::\n   :::column span=\"2\":::\n  ### Description \n   :::column-end:::\n:::row-end:::\n---\n:::row:::\n   :::column span=\"2\":::\n   <a id=\"workitemqueryfolders-contribute-permission\"></a> Contribute  \n   `WorkItemQueryFolders, Contribute`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can view and modify the query folder or save queries within the folder. \n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"2\":::\n   <a id=\"workitemqueryfolders-delete-permission\"></a> Delete  \n   `WorkItemQueryFolders, Delete`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can delete a query or query folder and its contents.\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"2\":::\n   <a id=\"workitemqueryfolders-manage-permissions-permission\"></a> Manage permissions  \n   `WorkItemQueryFolders, ManagePermissions`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can manage the permissions for this query or query folder.\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"2\":::\n   <a id=\"workitemqueryfolders-read-permission\"></a> Read  \n   `WorkItemQueryFolders, Read`  \n   :::column-end:::\n   :::column span=\"2\"::: \n   Can view and use the query or the queries in a folder,\n   but can't modify the query or query folder contents.\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Querying Items Created in Last 30 Days\nDESCRIPTION: Query clause to find work items created within the last 30 days using the Created Date field and @Today macro.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-date-or-current-iteration.md#2025-04-22_snippet_0\n\nLANGUAGE: WIQL\nCODE:\n```\nCreated Date >= @Today - 30\n```\n\n----------------------------------------\n\nTITLE: Retrieving Non-hierarchical Links for a Work Item in Azure DevOps Analytics\nDESCRIPTION: This OData query shows how to retrieve all links (such as Related or Tested By) associated with a specific work item. It expands the Links property to include source ID, target ID, and link type information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/work-item-links.md#2025-04-22_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam Fiber/_odata/v4.0-preview/WorkItems?$select=WorkItemId,Title,WorkItemType,State&$filter=WorkItemId%20eq%20363&$expand=Links($select=SourceWorkItemId,TargetWorkItemId,LinkTypeName)\n```\n\n----------------------------------------\n\nTITLE: Defining Agent Status Types in Markdown\nDESCRIPTION: This markdown table defines and explains the various status types that agents can have in the Agents list, including Ready, NotReady, Allocated, PendingReimage, Reimaging, Starting, PendingReturn, and Returned.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/view-agents.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Status | Description |\n|--------|-------------|\n| **Ready**  | The agent is online and is ready to accept jobs. You can expect to see this status if you have standby agents configured or stateful pools with a grace period. |\n| **NotReady** | A stateful agent job is complete, but the agent not ready to accept a new job. |\n| **Allocated** | The agent is running a job. |\n| **PendingReimage** | The agent job is complete and the agent is ready to be reimaged. This status is typical if you have you have your pool configured for stateless agents with standby agent mode enabled. |\n| **Reimaging** | The agent is being prepared with a fresh image. This status is typical for stateless agents with standby agent mode enabled. |\n| **Starting** | The agent is starting up and should be ready to accept jobs when it completes starting. |\n| **PendingReturn** | The agent is preparing to be shut down. This status is typical for stateless agents with standby agent mode disabled. |\n| **Returned** | The agent is shut down and will be removed from the **Agents** list in a few moments. This status is typical for stateless agents with standby agent mode disabled after they run a job. |\n```\n\n----------------------------------------\n\nTITLE: Displaying New Team Project Creation from Inherited Process in Azure DevOps\nDESCRIPTION: Markdown code for embedding an image that shows how to create a new team project from an inherited process in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/customize-process.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\">= azure-devops-2020\"\n> [!div class=\"mx-imgBorder\"]  \n> ![Create a project from the selected process](media/process/new-team-project-from-inherited-process-menu.png) \n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Process Model Documentation Structure\nDESCRIPTION: Markdown structure showing the organization of process model documentation with moniker-based content filtering for different Azure DevOps versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/quick-ref.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker-end\n\n::: moniker range=\">= azure-devops-2020\"\n---\n:::row:::\n   :::column span=\"2\":::\n      - [Add a checkbox (Boolean) field](../../organizations/settings/work/customize-process-field.md#boolean-field)  \n      [...]\n   :::column-end:::\n:::\n```\n\n----------------------------------------\n\nTITLE: Deleting an Iteration Path with Azure DevOps CLI\nDESCRIPTION: Command for deleting an iteration path from a project. This command removes the specified iteration path, requiring the absolute path of the iteration to be deleted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration project delete --path\n                                   [--project]\n                                   [--yes]\n```\n\n----------------------------------------\n\nTITLE: Displaying VS403379 Error Message for Azure DevOps Data Migration\nDESCRIPTION: This code snippet shows the error message VS403379, which occurs when attempting data migration with soft-deleted projects in the collection. It explains that the migration will fail and advises to restore or permanently delete soft-deleted projects before proceeding.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\nVS403379: Data migration will fail as one or more projects found in this collection are in the soft-deleted stage. Please restore the soft-deleted project(s) or delete them permanently before running the data migration.\n```\n\n----------------------------------------\n\nTITLE: Lock Command Syntax in TFVC\nDESCRIPTION: The basic syntax for the TFVC lock command showing required parameters and optional arguments to lock or unlock files or folders.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/lock-command.md#2025-04-22_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\ntf lock itemspec /lock:(none|checkout|checkin) \n[/workspace:workspacename] [/recursive] [/login:username,[password]] [/collection:TeamProjectCollectionUrl]\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Fetch Prune Setting via Command Line\nDESCRIPTION: Sets the fetch.prune option to true at the global level to automatically remove tracking references to remote branches that no longer exist when fetching from a remote repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_6\n\nLANGUAGE: console\nCODE:\n```\ngit config --global fetch.prune true\n```\n\n----------------------------------------\n\nTITLE: Unstaging Files with Git Reset Mixed\nDESCRIPTION: Command to revert staging of files while keeping file changes using Git's reset with the mixed flag. This moves changes from staging back to the working directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\ngit reset --mixed HEAD\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Info Command Syntax\nDESCRIPTION: The base syntax for the tf info command showing all possible parameters and options for retrieving information about version controlled items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/properties-or-info-command.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ntf info [/collection:TeamProjectCollectionUrl] [/recursive] [/login:username,[password]] itemspec [/version:versionspec] [/workspace]\n```\n\n----------------------------------------\n\nTITLE: Pulling Changes from Remote Git Repository\nDESCRIPTION: This command pulls the latest commits from the main branch of the remote repository (origin) to the local main branch. It synchronizes the local repository with the remote one.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/history.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit pull origin main\n```\n\n----------------------------------------\n\nTITLE: Example of Using TFVC Delete Command\nDESCRIPTION: A simple example that demonstrates how to delete a file named 314.cs. This command removes the file from disk in the local workspace and marks it for deletion in version control. The deletion is completed when changes are checked in.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/delete-command-team-foundation-version-control.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\ntf delete 314.cs\n```\n\n----------------------------------------\n\nTITLE: Suggesting Code Change in Python\nDESCRIPTION: This code snippet shows a suggested change for a Python for loop, demonstrating the use of the suggestion feature in pull requests.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n  for i in range(A, B+100, C):\n```\n\n----------------------------------------\n\nTITLE: Filtering Items with Defined (Non-Blank) Field Values in Azure Boards Query\nDESCRIPTION: This query filter finds work items where a specific numeric field has an assigned value (is not blank). It uses the not equals operator (<>) with a blank value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-numeric.md#2025-04-22_snippet_6\n\nLANGUAGE: azure-boards-query\nCODE:\n```\n// Example using the not equals operator (<>) and leaving the Value blank\n// Field <> (leave Value field blank)\n// For instance, to find work items with assigned Story Points:\n// Story Points <> (leave Value field blank)\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Permission Command Syntax\nDESCRIPTION: The full syntax for the tf permission command showing all available options for modifying user access control lists and displaying authorization settings for TFVC items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/permission-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf permission [/allow:(* |perm1[,perm2,...]] \n[/deny:(* |perm1[,perm2,...])] [/remove:(* |perm1[,perm2,...])] \n[/inherit:yes|no] [/user:username1[,username2,...]] \n[/group:groupname1[,groupname2,...]] [/collection:TeamProjectCollectionUrl] \n[/recursive] itemspec [/global][/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Basic Syntax for TFVC Configure Command\nDESCRIPTION: The basic syntax for the 'tf configure' command which allows administrators to modify project configuration settings in TFVC. The command supports specifying a project path, collection URL, and login credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/configure-command.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ntf configure [PathOfTeamProject] [/collection:TeamProjectCollectionUrl][/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Customizing the scanning directory path\nDESCRIPTION: YAML configuration to set a specific directory path for dependency scanning using the DependencyScanning.SourcePath environment variable instead of the default Agent.BuildDirectory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning-troubleshoot.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AdvancedSecurity-Dependency-Scanning@1\n  env:\n    DependencyScanning.SourcePath: scan/code/path\n```\n\n----------------------------------------\n\nTITLE: Create test runs Permission Reference\nDESCRIPTION: Permission that allows users to add and remove test results and add or modify test runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, PUBLISH_TEST_RESULTS`\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary Trend for Release Workflow in Power BI\nDESCRIPTION: This Power BI query retrieves test run data for a specific pipeline's release workflow, aggregating results by date and calculating the pass rate.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_2\n\nLANGUAGE: Power Query M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestRuns?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"and CompletedOn/Date ge {startdate} \"\n                &\"and Workflow eq 'Release' \"\n            &\") \"\n        &\"/groupby( \"\n          &\"(CompletedOn/Date), \"\n          &\"aggregate( \"\n            &\"ResultCount with sum as ResultCount, \"\n            &\"ResultPassCount with sum as ResultPassCount, \"\n            &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n            &\"ResultNotImpactedCount with sum as ResultNotImpactedCount, \"\n            &\"ResultFailCount with sum as ResultFailCount \"\n         &\")) \"\n       &\"/compute( \"\n       &\"iif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Deployment Group Agent Configuration\nDESCRIPTION: Shows the command-line options for configuring an agent as part of a deployment group, including specifying the group name, project, and tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/unattended-config.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n--deploymentGroup --deploymentGroupName <name> --projectName <name> --addDeploymentGroupTags --deploymentGroupTags <tags>\n```\n\n----------------------------------------\n\nTITLE: Querying Projects in Azure DevOps Services using cURL\nDESCRIPTION: Shows how to use cURL to fetch a list of projects from an Azure DevOps Services organization using a personal access token for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/how-to/call-rest-api.md#2025-04-22_snippet_1\n\nLANGUAGE: dos\nCODE:\n```\ncurl -u {username}:{personalaccesstoken} https://dev.azure.com/{organization}/_apis/projects?api-version=2.0\n```\n\n----------------------------------------\n\nTITLE: Filtering Tasks by Original Estimate vs. Completed Work in Azure DevOps Query (WIQL)\nDESCRIPTION: This Azure DevOps query clause filters work items (typically Tasks) to find those where the 'Original Estimate' field value is less than or equal to the 'Completed Work' field value. It employs the '<=[Field]' comparison operator for numeric field comparison.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-field-value.md#2025-04-22_snippet_1\n\nLANGUAGE: wiql\nCODE:\n```\nOriginal Estimate <=[Field] Completed Work\n```\n\n----------------------------------------\n\nTITLE: Testing Microsoft Entra ID Connection with PowerShell\nDESCRIPTION: PowerShell commands to test Microsoft Entra ID connectivity by installing required modules and retrieving user information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_13\n\nLANGUAGE: powershell\nCODE:\n```\n# Install the Microsoft Graph PowerShell module - ensuring to select Yes to All\nInstall-Module Microsoft.Graph \n\n# Import Users module\nImport-Module Microsoft.Graph.Users\n\n# Connect to Microsoft Entra and use your Microsoft Entra ID credentials (someone@somecompany.com) to login when the pop-up appears\nConnect-MgGraph  -Scopes 'User.Read.All'\n\n# Try to retrieve information on a user from your Microsoft Entra\nGet-MgUser -Filter \"UserPrincipalName eq 'someone@somecompany.com'\"\n```\n\n----------------------------------------\n\nTITLE: Programmatic Access Level Mapping\nDESCRIPTION: Table showing the mapping between UI access levels and API parameters including accountLicenseType, licensingSource, and msdnLicenseType.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/access-levels.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Access level (user interface) | accountLicenseType | licensingSource | msdnLicenseType |\n| Basic | express | account | none |\n| Basic + Test Plans | advanced | account | none |\n| Visual Studio Subscriber | none | msdn | eligible |\n| Stakeholder | stakeholder | account | none |\n| Visual Studio Enterprise | none | msdn | enterprise |\n```\n\n----------------------------------------\n\nTITLE: Accessing On-Premises Collection-Level Notifications URL in Azure DevOps Server\nDESCRIPTION: URL pattern to directly access the collection-level notifications settings page in on-premises Azure DevOps Server. Replace ServerName and CollectionName with your actual server and collection names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/navigating-the-ui.md#2025-04-22_snippet_2\n\nLANGUAGE: URL\nCODE:\n```\nhttp://ServerName/CollectionName/_settings/notifications?view=defaultSubscriptions\n```\n\n----------------------------------------\n\nTITLE: Enabling Compatibility for Azure PowerShell Az Module in PowerShell\nDESCRIPTION: This command enables compatibility mode for the Azure PowerShell Az module, allowing the use of old cmdlet names with the new Az module. This is useful when migrating existing scripts from AzureRM to Az module.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-150-update.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nEnable-AzureRmAlias\n```\n\n----------------------------------------\n\nTITLE: Listing Azure DevOps Extensions Example\nDESCRIPTION: This example shows how to list extensions in an organization, excluding disabled and built-in extensions, and displaying the results in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension list --include-built-in false --include-disabled false -output table\n```\n\n----------------------------------------\n\nTITLE: Pipeline Permission Include Statements\nDESCRIPTION: Include statements for pipeline-related permissions\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-access.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/pipelines-cloud.md)]\n[!INCLUDE [temp](includes/pipelines-build.md)]\n[!INCLUDE [temp](includes/pipelines-release.md)]\n[!INCLUDE [temp](includes/task-groups.md)]\n```\n\n----------------------------------------\n\nTITLE: Example: Resetting a Specific Permission Bit for a User\nDESCRIPTION: Example command that resets a token's permission bit 8 for a specific user in the specified namespace. The output shows the permission details after resetting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission reset --id 58450c49-b02d-465a-ab12-59ae512d6531 --permission-bit 8 --subject contoso@contoso.com --token 0611925a-b287-4b0b-90a1-90f1a96e9f1f --output table\n```\n\n----------------------------------------\n\nTITLE: Running macOS Agent Interactively\nDESCRIPTION: Command to run the macOS agent interactively after configuration. This allows the agent to accept and process jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh\n```\n\n----------------------------------------\n\nTITLE: Variable Group List Command Output in Table Format\nDESCRIPTION: Sample table output from listing variable groups, showing IDs, names, types, and the number of variables in each group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nID    Name               Type    Number of Variables\n----  -----------------  ------  ---------------------\n1     myvariables        Vsts    2\n2     newvariables       Vsts    4\n3     new-app-variables  Vsts    3\n```\n\n----------------------------------------\n\nTITLE: Building Maven Project\nDESCRIPTION: Maven command to install dependencies and build the project, which will populate the Azure Artifacts feed with copies of upstream packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_9\n\nLANGUAGE: command\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items with Multiple OData Clauses\nDESCRIPTION: This OData query demonstrates the use of multiple clauses to filter, group, aggregate, sort, and limit work item data. It returns the top five work item types used at least 100 times.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-supported-features.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nWorkItems?$filter=Count ge 100&$apply=groupby((WorkItemType), aggregate($count as Count))&$orderby=Count&top=5\n```\n\n----------------------------------------\n\nTITLE: Example of Removing a Child Link between Work Items with Azure CLI\nDESCRIPTION: Practical example showing how to remove a Child relationship between two work items using Azure CLI with output displaying remaining relationships for the work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/add-link.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item relation remove --id 2794 --relation-type Child --target-id 2807 --output table\nAre you sure you want to remove this relation(s)? (y/n): y\nRelation Type    Url\n---------------  -------------------------------------------------------------------------------------------------\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2850\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2808\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2820\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2856\nParent           https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2811\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2876\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2801\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2877\nChild            https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2805 \n```\n\n----------------------------------------\n\nTITLE: Fetching Latest Branches via Command Line\nDESCRIPTION: Git commands to fetch the latest branches from the remote repository before performing branch renaming operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/require-branch-folders.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncd {your_repo}\ngit fetch\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Agent for Single Job on Windows\nDESCRIPTION: Execute the agent to accept and process only one job before exiting, useful for containerized environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/windows-agent.md#2025-04-22_snippet_3\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\run.cmd --once\n```\n\n----------------------------------------\n\nTITLE: Work Item Field Explorer Interface (Markdown)\nDESCRIPTION: This snippet displays the interface of the Work Item Field Explorer tool, which is used to look up assignments of field attributes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/work-item-fields.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n![Screenshot of Work item field explorer.](media/fields/work-item-field-explorer.png)\n```\n\n----------------------------------------\n\nTITLE: Including sprint-202 update links for Azure Pipelines section\nDESCRIPTION: Markdown include directive for Azure Pipelines sprint 202 update links\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-202-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update-links](includes/pipelines/sprint-202-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directives for Sprint 252 Documentation\nDESCRIPTION: Markdown include statements that pull in content sections for Sprint 252 release notes, including update links, feature details, and next steps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/ghazdo/sprint-252-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-252-update-links](../includes/ghazdo/sprint-252-update-links.md)]\n\n[!INCLUDE [sprint-252-update](../includes/ghazdo/sprint-252-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Analytics Information in Markdown\nDESCRIPTION: This snippet demonstrates how to include external analytics-related content in a Markdown file using the INCLUDE directive, specifically for Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-access.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/analytics.md)]\n```\n\n----------------------------------------\n\nTITLE: Publishing npm Packages in Azure Pipelines (YAML)\nDESCRIPTION: YAML configuration for publishing npm packages using Azure Pipelines. This snippet is referenced but not explicitly shown in the document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/artifacts-overview.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Example YAML for publishing npm packages\n- task: Npm@1\n  inputs:\n    command: 'publish'\n    publishRegistry: 'useFeed'\n    publishFeed: 'your-feed-name'\n```\n\n----------------------------------------\n\nTITLE: Managing Service Endpoints Scope (`vso.serviceendpoint_manage`)\nDESCRIPTION: Grants the ability to read, query, and manage service endpoints. Requires full access. Depends on `vso.serviceendpoint_query`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n`vso.serviceendpoint_manage`\n```\n\n----------------------------------------\n\nTITLE: Merging Remote Branch in Git\nDESCRIPTION: Merges a remote branch into the current local branch. This is typically used to integrate changes from a remote repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_28\n\nLANGUAGE: git\nCODE:\n```\ngit pull origin branchname\n```\n\n----------------------------------------\n\nTITLE: Setting Workspace Cleaning for a Deployment Job\nDESCRIPTION: Example of configuring a deployment job with the 'clean: all' option to delete the entire Pipeline.Workspace directory before running the job. Uses Ubuntu latest image in a Microsoft-hosted agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\n  jobs:\n  - deployment: MyDeploy\n    pool:\n      vmImage: 'ubuntu-latest'\n    workspace:\n      clean: all\n    environment: staging\n```\n\n----------------------------------------\n\nTITLE: Using Build.Repository.Tfvc.Workspace Variable in Azure DevOps Pipelines\nDESCRIPTION: Defined for TFVC repositories, providing the name of the TFVC workspace used by the build agent (e.g., ws_12_8). It's agent-scoped, usable as an environment variable or task parameter, but not in build numbers or version control tags. Not available in templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_18\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.Repository.Tfvc.Workspace\n```\n\n----------------------------------------\n\nTITLE: Conditional WHEN Rule Example in XML Process\nDESCRIPTION: Example of using a WHEN conditional rule that empties the MyCorp.SubStatus field when MyCorp.Status equals 'Approve'. The rule triggers with each keystroke, which can lead to unexpected behavior when typing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_20\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD refname=\"MyCorp.SubStatus\" />\n   <WHEN field=\"MyCorp.Status\" value=\"Approve\" >\n      <EMPTY />\n   </WHEN>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Configuring pip for Project-Scoped Feed\nDESCRIPTION: Configuration snippet for pip.ini or pip.conf file to authenticate with a project-scoped Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/use-packages-from-pypi.md#2025-04-22_snippet_3\n\nLANGUAGE: ini\nCODE:\n```\n[global]\nextra-index-url=https://<FEED_NAME>:<YOUR_PERSONAL_ACCESS_TOKEN>@pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/pypi/simple/\n```\n\n----------------------------------------\n\nTITLE: Expanded Children Query with Project Filter\nDESCRIPTION: OData query demonstrating how to expand child work items with proper project filtering for security.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/account-scoped-queries.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?$filter=Project/ProjectName eq '{ProjectName}'&$expand=Children($filter=Project/ProjectName eq '{ProjectName}')\n```\n\n----------------------------------------\n\nTITLE: Clearing and Restoring NuGet Packages\nDESCRIPTION: Two-step process to clear NuGet local cache and restore packages for the project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_13\n\nLANGUAGE: Command\nCODE:\n```\nnuget locals -clear all\n```\n\nLANGUAGE: Command\nCODE:\n```\nnuget.exe restore\n```\n\n----------------------------------------\n\nTITLE: Listing Installed Python Packages\nDESCRIPTION: Command to list all installed Python packages in the current environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/use-packages-from-pypi.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\npip list\n```\n\n----------------------------------------\n\nTITLE: Configure Command with Project and Collection Parameters\nDESCRIPTION: An example showing how to use the 'tf configure' command with specific project path and collection URL parameters to display settings for the 'myproj' project in a specific collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/configure-command.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf configure $/myproj / http://myserver:8080/tfs/DefaultCollection\n```\n\n----------------------------------------\n\nTITLE: Display Specific Workspace Details Example\nDESCRIPTION: Command example showing how to display detailed information about a specific workspace including mappings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspaces-command.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf workspaces /format:detailed /collection:https://myserver:8080/tfs/DefaultCollection WS1\n```\n\n----------------------------------------\n\nTITLE: Implementing Policy Migration Interface\nDESCRIPTION: Shows how to implement the IPolicyMigration interface to enable policy migration functionality.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/tfvc-check-in-policy-migrate-guide.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\n[Serializable]\npublic class Simple : PolicyBase, IPolicyMigration\n{\n    ...\n    public CheckinPolicyBase ToNewPolicyType()\n    {\n        return new SimpleNew();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Agent Configuration Script on Windows VM\nDESCRIPTION: This PowerShell script, generated by Azure Pipelines, downloads and configures an agent on a Windows VM. It sets up the VM to receive and apply web deployment packages to IIS. The script is run in an Administrator PowerShell console on the target VM.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/includes/create-deployment-group.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n# Script content is not provided in the input, but would be pasted and run here\n```\n\n----------------------------------------\n\nTITLE: Uninstalling macOS Agent Service\nDESCRIPTION: Command to uninstall the macOS agent launchd service. The service should be stopped before uninstalling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh uninstall\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Delete Command Syntax\nDESCRIPTION: The basic syntax for the tf delete command, which removes files and folders from Azure DevOps server and deletes them from disk. The command supports options for locking, recursive deletion, and login credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/delete-command-team-foundation-version-control.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ntf delete [/lock:(none|checkin|checkout)] [/recursive] [/login:username,[password]] itemspec\n```\n\n----------------------------------------\n\nTITLE: Queuing Migration with Data Migration Tool in Bash\nDESCRIPTION: This command uses the Data Migration Tool to queue the migration process. It requires a completed migration specification file located at the specified path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-migrate.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nMigration /importFile:C:\\TFSDataImportFiles\\import.json\n```\n\n----------------------------------------\n\nTITLE: Checking http.postBuffer Configuration in Git\nDESCRIPTION: Command to view the current http.postBuffer settings in Git configuration including the origin of the setting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/rpc-failures-http-postbuffer.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit config --show-origin --get-all http.postBuffer\n```\n\n----------------------------------------\n\nTITLE: Adding Form Controls for Scrum Work Item Type in Azure DevOps\nDESCRIPTION: XML definition for the required form controls in Scrum process template, including Effort and Value Area fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_7\n\nLANGUAGE: XML\nCODE:\n```\n<Control FieldName=\"Microsoft.VSTS.Scheduling.Effort\" Type=\"FieldControl\" Label=\"Effort\" LabelPosition=\"Left\" />  \n<Control FieldName=\"Microsoft.VSTS.Common.ValueArea\" Type=\"FieldControl\" Label=\"Value area\" LabelPosition=\"Left\" />  \n```\n\n----------------------------------------\n\nTITLE: Listing Shelvesets by Owner\nDESCRIPTION: This example shows how to list all shelvesets owned by a specific user named 'Pat'. This is useful when you need to find shelvesets created by a particular team member.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelvesets-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf shelvesets /owner:Pat\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Integration with Azure DevOps Extension SDK\nDESCRIPTION: HTML template demonstrating the integration of Azure DevOps Extension SDK, including initialization and load notification. The page includes necessary SDK script references and basic implementation of SDK.init() and SDK.notifyLoadSucceeded() methods.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-web-page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n\t<title>Hello World</title>\n\t<script src=\"sdk/scripts/SDK.js\"></script>\n</head>\n<body>\n\t<script type=\"text/javascript\">SDK.init();</script>\n\t<h1>Hello World</h1>\n\t<script type=\"text/javascript\">SDK.notifyLoadSucceeded();</script>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Querying Items Resolved Today\nDESCRIPTION: Query clause to find work items that were resolved on the current day using the @Today macro.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-date-or-current-iteration.md#2025-04-22_snippet_2\n\nLANGUAGE: WIQL\nCODE:\n```\nResolved Date = @Today\n```\n\n----------------------------------------\n\nTITLE: Show Azure DevOps Repository Details Command\nDESCRIPTION: Azure CLI command to display repository information. Shows the syntax for az repos show command with various optional parameters including default-branch, detect, name, organization, project, and subscription settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/azure-repos-update.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos show --repository\n                [--default-branch]\n                [--detect {false, true}]\n                [--name]\n                [--org]\n                [--project]\n                [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Query Hyperlink Syntax\nDESCRIPTION: URL syntax pattern for creating query hyperlinks in Azure DevOps cloud version. The WIQL portion must be URL encoded and should not exceed 32K characters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/using-queries.md#2025-04-22_snippet_3\n\nLANGUAGE: txt\nCODE:\n```\nhttps://dev.azure.com/OrganizationName/ProjectName/_workitems?_a=query&wiql={Encoded WorkItemQueryLanguage}\n```\n\n----------------------------------------\n\nTITLE: Destroying Files with Specific History Retention in TFVC\nDESCRIPTION: This command destroys all files in a project while retaining history up to a specific date. It uses the /keephistory and /stopat options to specify the cutoff date for history retention.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/destroy-version-controlled-files.md#2025-04-22_snippet_3\n\nLANGUAGE: Batch\nCODE:\n```\ntf destroy $/MyTeamProject /keephistory /stopat:D10/23/2005\n```\n\n----------------------------------------\n\nTITLE: Initialize Local Git Repository\nDESCRIPTION: Creates and initializes a new Git repository in the current directory and commits initial code.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-cmdline.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd /home/fabrikam/fiber\ngit init .\ngit add --all\ngit commit -m \"first commit of my code\"\n```\n\n----------------------------------------\n\nTITLE: Widget Contribution Configuration in Manifest\nDESCRIPTION: Detailed configuration for widget contribution including ID, type, targets, and properties like supported sizes and scopes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-widget-manifest.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": \"HelloWorldWidget\",\n            \"type\": \"ms.vss-dashboards-web.widget\",\n            \"targets\": [\n                \"ms.vss-dashboards-web.widget-catalog\"\n            ],\n            \"properties\": {\n                \"name\": \"Hello World Widget\",\n                \"description\": \"My first widget\",\n                \"catalogIconUrl:\": \"img/CatalogIcon.png\",\n                \"previewImageUrl\": \"img/preview.png\",\n                \"uri\": \"hello-world.html\",\n                \"supportedSizes\": [\n                    {\n                        \"rowSpan\": 1,\n                        \"columnSpan\": 2\n                    }\n                ],\n                \"supportedScopes\": [\"project_team\"]\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Identifier for Deleting Test Runs Permission\nDESCRIPTION: The symbolic identifier `Project, DELETE_TEST_RESULTS` allows users to delete test runs within an Azure DevOps project. This permission is typically granted to leads or administrators responsible for managing test artifact lifecycle.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, DELETE_TEST_RESULTS\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkout Options in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to configure various checkout options in an Azure Pipeline, including clean build, fetch depth, LFS, submodules, checkout path, and credential persistence.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/source-options.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self  # self represents the repo where the initial Pipelines YAML file was found\n  clean: boolean  # whether to fetch clean each time\n  fetchDepth: number  # the depth of commits to ask Git to fetch\n  lfs: boolean  # whether to download Git-LFS files\n  submodules: true | recursive  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules\n  path: string  # path to check out source code, relative to the agent's build directory (e.g. \\_work\\1)\n  persistCredentials: boolean  # set to 'true' to leave the OAuth token in the Git config after the initial fetch\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Query Operators\nDESCRIPTION: Table showing supported operators for Area Path and Iteration Path queries in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-area-iteration-path.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Operator     | Use when you want to...| \n|-------------|--------------|  \n| `=`           | Specify one specific area or iteration path  |  \n| `<>`          | Filter out one, specific area or iteration path. |  \n| `In`          | Filter for a set of area or iteration paths.  |  \n| `Not In`      | Exclude items that are assigned to a set of area or iteration paths. |  \n| `Under`       | Specify all paths under a select area or iteration path. |  \n| `Not Under`   | Exclude items assigned under a specific area or iteration path.  |\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Agent Interactively in PowerShell\nDESCRIPTION: Command to run the Azure Pipelines agent interactively after configuration. This allows the agent to accept and process jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-windows-agent.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\run.cmd\n```\n\n----------------------------------------\n\nTITLE: Complete witadmin Commands for Process Template Customization\nDESCRIPTION: Collection of witadmin commands for exporting and importing various process template definition files including Work Item Types, categories, and process configuration. These commands support the overall workflow of customizing Azure DevOps process templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_22\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin exportwitd /collection:CollectionURL /p:\"ProjectName\" /n:TypeName /f:\"DirectoryPath\\WITDefinitionFile.xml\"  \nwitadmin importwitd /collection:CollectionURL /p:\"ProjectName\" /f:\"DirectoryPath\\WITDefinitionFile.xml\"  \nwitadmin exportcategories /collection:\"CollectionURL\" /p:\"ProjectName\" /f:\"DirectoryPath/categories.xml\"  \nwitadmin importcategories /collection:\"CollectionURL\" /p:\"ProjectName\" /f:\"DirectoryPath/categories.xml\"   \nwitadmin exportprocessconfig /collection:\"CollectionURL\" /p:\"ProjectName\" /f:\"DirectoryPath/ProcessConfiguration.xml\"  \nwitadmin importprocessconfig /collection:\"CollectionURL\" /p:\"ProjectName\" /f:\"DirectoryPath/ProcessConfiguration.xml\"\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Runs Filtered by Branch with OData\nDESCRIPTION: OData query that retrieves pipeline run outcomes grouped by branch name, allowing for filtering and analysis of pipeline success rates by specific branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelinename}'\n    and CompletedDate ge {startdate}\n    )\n/groupby(\n(Branch/BranchName),\naggregate(\n    $count as TotalCount,\n    SucceededCount with sum as SucceededCount ,\n    FailedCount with sum as FailedCount,\n    PartiallySucceededCount with sum as PartiallySucceededCount ,\n    CanceledCount with sum as CanceledCount\n    ))\n```\n\n----------------------------------------\n\nTITLE: Installing Test Tools for Azure DevOps Task Development\nDESCRIPTION: Commands to install Mocha and other dependencies for unit testing Azure DevOps pipeline tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_11\n\nLANGUAGE: PowerShell\nCODE:\n```\nnpm install mocha --save-dev -g\nnpm install sync-request --save-dev\nnpm install @types/mocha --save-dev\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Authority Host for China Cloud Configuration\nDESCRIPTION: Sets the AZURE_AUTHORITY_HOST environment variable to the Azure Public Cloud login URL when configuring an agent from Azure China Cloud to an Azure DevOps organization in Azure Public Cloud using a service principal.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/service-principal-agent-registration.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$AZURE_AUTHORITY_HOST=https://login.microsoftonline.com\n```\n\n----------------------------------------\n\nTITLE: JSON Response Format for Iteration-Based Query\nDESCRIPTION: Example JSON response showing bug counts aggregated by state and date within a specific iteration period.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/querying-for-trend-data.md#2025-04-22_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\": \"https://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}//$metadata#WorkItemSnapshot(DateValue,State,Count)\",\n  \"value\": [\n    {\n      \"@odata.id\": null,\n      \"State\": \"Active\",\n      \"DateValue\": \"2016-04-04T00:00:00-07:00\",\n      \"Count\": 320\n    },\n    {\n      \"@odata.id\": null,\n      \"State\": \"Closed\",\n      \"DateValue\": \"2016-04-04T00:00:00-07:00\",\n      \"Count\": 38\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Token for Project-Level Build Permissions in Azure DevOps\nDESCRIPTION: Shows the token format for setting project-level build permissions in Azure DevOps. It includes only the project ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nPROJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Constructing OData Query URL for Azure DevOps Server (On-premises)\nDESCRIPTION: This snippet shows the URL structure for querying Analytics metadata in an on-premises Azure DevOps Server. It includes placeholders for server name, collection name, and project name, along with the OData version specification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://{ServerName}/{CollectionName}/{ProjectName}/_odata/version/$metadata\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directives for Sprint 159 Documentation\nDESCRIPTION: A series of markdown include directives that combine multiple content files to build the complete Sprint 159 documentation, including update links, feature details, next steps and signature blocks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-159-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-159-update-links](../includes/pipelines/sprint-159-update-links.md)]\n\n[!INCLUDE [sprint-159-update](../includes/pipelines/sprint-159-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n\n[!INCLUDE [sprint-159](../includes/signer/sprint-159.md)]\n```\n\n----------------------------------------\n\nTITLE: Deleting Label in TFVC\nDESCRIPTION: Shows how to delete the 'badbuild' label from all items in the TFVC server using the delete option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/label-command-team-foundation-version-control.md#2025-04-22_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf label /delete badbuild\n```\n\n----------------------------------------\n\nTITLE: Configuring PR Triggers for Bitbucket Cloud in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to set up pull request triggers for specific branches in an Azure Pipelines configuration. It targets the 'main' branch and all 'releases/*' branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/bitbucket.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n- main\n- releases/*\n```\n\n----------------------------------------\n\nTITLE: HTTP Method Override for Proxy Compatibility\nDESCRIPTION: Demonstrates how to use the X-HTTP-Method-Override header to send PATCH requests through proxies that only support GET and POST methods.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/how-to/call-rest-api.md#2025-04-22_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nPOST https://dev.azure.com/fabrikam-fiber-inc/_apis/wit/workitems/3\nX-HTTP-Method-Override: PATCH\n\n{\n   (PATCH request body)\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Azure DevOps Project with CLI\nDESCRIPTION: Command to create a new Azure DevOps project named MyFirstProject with Agile process and Git source control. Shows output in table format with project ID, name, visibility and other details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/create-project.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops project create --name MyFirstProject --description \"Test project 1\" --org https://dev.azure.com/fabrikam/ --process Agile --source-control  git --output table\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 225 Update Content in Markdown\nDESCRIPTION: This snippet includes a markdown file containing the main content of the Sprint 225 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-225-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-225-update](../includes/boards/sprint-225-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Migrating NuGet Packages from Private MyGet Feed to Azure Artifacts\nDESCRIPTION: PowerShell command to migrate NuGet packages from a private MyGet feed to an Azure Artifacts feed. This requires source credentials and an Azure DevOps personal access token for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/migrate-packages.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\nMove-MyGetNuGetPackages -SourceIndexUrl '<MYGET_SOURCE_URL>' -DestinationIndexUrl '<ARTIFACTS_FEED_SOURCE_URL>' -DestinationPAT '<AZURE_DEVOPS_PAT>' -DestinationFeedName '<ARTIFACTS_FEED_NAME>' -SourceUsername '<MYGET_USERNAME>' -SourcePassword $password -Verbose\n```\n\n----------------------------------------\n\nTITLE: Deprecating npm Packages Using CLI\nDESCRIPTION: Command to deprecate an npm package by adding a warning message to its metadata, which will be displayed when the package is viewed or installed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/how-to/delete-and-recover-packages.md#2025-04-22_snippet_1\n\nLANGUAGE: Command\nCODE:\n```\nnpm deprecate <package>[@<version>] <message>\n```\n\n----------------------------------------\n\nTITLE: Creating a Data Grid with VSS Controls\nDESCRIPTION: Requires VSS Controls modules and creates a grid with sample data. The grid has two columns for property keys and values, and is populated with a simple data source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/use-a-control-ts.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n...\nVSS.require([\"VSS/Controls\", \"VSS/Controls/Grids\"], function (Controls, Grids) {\n\n    var dataSource = [];\n    dataSource.push({key: \"key\", value: \"value\"});\n\n    Controls.create(Grids.Grid, $(\"#grid-container\"), {\n        height: \"1000px\",\n        columns: [\n            { text: \"Property key\", index: \"key\", width: 150 },\n            { text: \"Property value\", index: \"value\", width: 600 }\n        ],\n        source: dataSource\n    });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Setting Work Item State in Pull Request Description\nDESCRIPTION: This snippet demonstrates how to set the state of linked work items directly in a pull request description. Using the syntax '{state value}: #ID', you can automatically update work item states when the pull request is merged.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/manage-bugs.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{state value}: #ID\n```\n\n----------------------------------------\n\nTITLE: Modifying Hub Contribution to Use Custom Hub Group in Azure DevOps Extension\nDESCRIPTION: This JSON snippet updates an existing hub contribution to target the newly created 'Samples' hub group. It specifies the hub's name, order, and URI within the custom group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-hub-group.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"Fabrikam.HelloWorld\",\n    \"type\": \"ms.vss-web.hub\",\n    \"description\": \"Adds a 'Hello' hub to the Work hub group.\",\n    \"targets\": [\n        \".sample-hub-group\"\n    ],\n    \"properties\": {\n        \"name\": \"Hello\",\n        \"order\": 99,\n        \"uri\": \"hello-world.html\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Refresh Date to Power BI Query for Shared Analytics View\nDESCRIPTION: This PowerQuery code modifies an existing Azure DevOps Analytics shared view query to add a column showing the current refresh date using DateTimeZone.FixedUtcNow(), which provides UTC time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/add-last-refresh-time.md#2025-04-22_snippet_1\n\nLANGUAGE: M\nCODE:\n```\nlet\n    Source = AzureDevOps.AnalyticsViews(\"{OrganizationName}\", \"{ProjectName}\", []),\n    #\"{AnalyticsViewsID_Table}\" = Source{[Id=\"{AnalyticsViewsID}\",Kind=\"Table\"]}[Data],\n    #\"Added Refresh Date\" = Table.AddColumn(#\"{AnalyticsViewsID_Table}\", \"Refresh Date\", each DateTimeZone.FixedUtcNow(), type datetimezone)\nin\n    #\"Added Refresh Date\"\n```\n\n----------------------------------------\n\nTITLE: Specifying API Version in HTTP Request Header for Azure DevOps REST API\nDESCRIPTION: This HTTP header example shows how to specify the API version when making a request to the Azure DevOps REST API. The API version is included in the Accept header.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/how-to/call-rest-api.md#2025-04-22_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nAccept: application/json;api-version=1.0\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Links Using Project-Scoped OData Endpoint\nDESCRIPTION: This example demonstrates how to query work item links using the project-scoped OData endpoint, which simplifies queries by implicitly filtering data to a single project. This approach avoids complex filtering requirements and improves query efficiency.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}//WorkItemLinks?\n  &$select=LinkTypeReferenceName, SourceWorkItemId, TargetWorkItemId\n  &$expand=TargetWorkItem($select=WorkItemId, Title)\n```\n\n----------------------------------------\n\nTITLE: Opting Out of PR Validation in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to completely opt out of pull request validation in Azure Pipelines by setting the 'pr' trigger to 'none'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/bitbucket.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\npr: none\n```\n\n----------------------------------------\n\nTITLE: Formatting Token for Specific Build Definition Permissions in Azure DevOps\nDESCRIPTION: Illustrates the token format for setting permissions on a specific build definition in Azure DevOps. It includes the project ID and the build definition ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nPROJECT_ID/12\n```\n\n----------------------------------------\n\nTITLE: Update project visibility Permission Reference\nDESCRIPTION: Permission that allows users to change the project visibility from private to public or public to private. This applies to Azure DevOps Services only.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, UPDATE_VISIBILITY`\n```\n\n----------------------------------------\n\nTITLE: Viewing Full File History with --full-history Flag\nDESCRIPTION: Demonstrates how to view the complete file history by using the --full-history flag, which disables Git's history simplification and shows all commits affecting the file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_8\n\nLANGUAGE: Git CLI\nCODE:\n```\n> git log --full-history test.txt\n```\n\n----------------------------------------\n\nTITLE: Tagging a commit in Git\nDESCRIPTION: This command creates an annotated tag with a name and description, typically used to mark release points.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_18\n\nLANGUAGE: git\nCODE:\n```\ngit tag -a tagname -m \"description\"\n```\n\n----------------------------------------\n\nTITLE: Amending Commit Author Information\nDESCRIPTION: This Git command allows you to amend the author information for the most recent commit. It's useful for correcting author details on a single, local commit before pushing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-names.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit commit --amend --author=\"Frances L. Totten <frances_t@fabrikam.com>\"\n```\n\n----------------------------------------\n\nTITLE: Filtering for Resolved User Stories in Azure Boards (WIQL)\nDESCRIPTION: This code shows how to query for work items of type User Story that are in the Resolved state by specifying `Work Item Type  = User Story` and `State = Resolved`. It is used to track items that have reached the 'Resolved' stage. Required context is the presence of a Resolved state in your process. The query returns resolved stories as output.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_5\n\nLANGUAGE: WIQL\nCODE:\n```\nWork Item Type  = User Story\nAnd State = Resolved\n```\n\n----------------------------------------\n\nTITLE: Example: Adding User to Security Group\nDESCRIPTION: Example demonstrating how to add a user by email to a security group with table output format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group membership add --group-id vssgp.Uy0xLTktMTU1MTM3NDI0NS0yMjc3MTY5NTAtOTkzNjA1MTg2LTI1ODQxNTkyOTktMjYzMDUyNzA2OC0xLTQxNDY0Mzc4MzktMzgxMDM2MDM5MS0yNjE0MjU5MzI3LTI5MjI2MTc3OTA --member-id contoso@contoso.com --output table\n```\n\n----------------------------------------\n\nTITLE: Defining CANNOTLOSEVALUE Rule for Work Item Field in XML\nDESCRIPTION: This XML snippet demonstrates how to use the CANNOTLOSEVALUE element to prevent users from clearing a field value once it has been specified.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"MyCorp.Priority\" name=\"Management Priority\" type=\"String\">\n    <CANNOTLOSEVALUE /> \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Shelveset in TFVC\nDESCRIPTION: The syntax for deleting an existing shelveset from the Azure DevOps server. This requires specifying the shelveset name and optionally the owner.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelve-command.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ntf shelve /delete shelvesetname[;owner] [/login:username,[password]] [/collection:TeamProjectCollectionUrl]\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps Extension for Azure CLI\nDESCRIPTION: Command to add the Azure DevOps extension to the Azure CLI. This extension is required for interacting with Azure DevOps services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/prerequisites-cli.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz extension add --name azure-devops\n```\n\n----------------------------------------\n\nTITLE: Git Log Command for Viewing Commits\nDESCRIPTION: Command to view commit history in abbreviated format using Git CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/cherry-pick.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ngit log --oneline <source branch>\n```\n\n----------------------------------------\n\nTITLE: Generating Method Stub in C# for Azure DevOps\nDESCRIPTION: This code snippet demonstrates a generated method stub for the SquareRoot function. It shows the basic structure of a method that needs to be implemented, throwing a NotImplementedException as a placeholder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-write-new-code-user-story.md#2025-04-22_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\npublic double SquareRoot(double p)\n{\n    throw new NotImplementedException();\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing All Git Configuration Settings via Command Line\nDESCRIPTION: This command displays all Git configuration settings across system, global, and local levels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit config --list\n```\n\n----------------------------------------\n\nTITLE: Creating Grid Container Element in HTML\nDESCRIPTION: Adds a container div element to the page that will hold the grid control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/use-a-control-js.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"grid-container\"></div>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Work Item Tree List Management - Markdown\nDESCRIPTION: Instructions for importing work items as a hierarchical tree list in Azure DevOps using Excel, including setting up parent-child relationships and managing work item hierarchies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/office/bulk-add-modify-work-items-excel.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Import work items as a tree list\n\nYou can add a hierarchy of work items linked using parent-child links or other tree topology link type. \n\n> [!IMPORTANT]\n> Avoid sorting a tree list, as it can alter the hierarchical link relationships.\n```\n\n----------------------------------------\n\nTITLE: Finding Workspace Owner Information in Shell\nDESCRIPTION: Command to retrieve workspace owner information by querying all workspaces across computers and owners in XML format, which is needed before deleting a workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nc:\\projects>tf workspaces /computer:* /owner:* /collection:`<team-project-collection-url>` /format:xml\n```\n\n----------------------------------------\n\nTITLE: Work Item Reference Syntax in Git Commit Messages\nDESCRIPTION: Shows the syntax for linking work items to Git commits by including #ID in the commit message. When pushed to Azure Repos, this automatically creates a link between the work item and commit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/share-code-link-work-items.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n#ID\n```\n\n----------------------------------------\n\nTITLE: Example Azure DevOps PAT API Endpoint with Collection (Python)\nDESCRIPTION: This snippet provides a concrete example of setting ENDPOINT in 'app_config.py' using a real collection name ('testCollection'). It is intended to guide the user in formatting for their own Azure DevOps collection. No dependencies are required beyond string replacement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/manage-personal-access-tokens-via-api.md#2025-04-22_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nENDPOINT = 'https://vssps.dev.azure.com/testCollection/_apis/Tokens/Pats?api-version=6.1-preview'\n\n```\n\n----------------------------------------\n\nTITLE: Opening Process Settings in Azure DevOps\nDESCRIPTION: Markdown instructions for accessing process settings in Azure DevOps, including both cloud (azure-devops) and on-premises environments. Details steps for navigating to the Process settings page through organization/collection settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/open-process-admin-context-ts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"azure-devops\"\n\n1. Sign in to your organization (`https://dev.azure.com/{yourorganization}`).\n1. Select :::image type=\"icon\" source=\"../../../media/icons/gear-icon.png\"::: **Organization settings**.\n  \n   :::image type=\"content\" source=\"../../../media/settings/open-admin-settings-vert.png\" alt-text=\"Screenshot showing Organization settings button for selection.\":::\n\n1. Select **Process**.\n\n   :::image type=\"content\" source=\"../work/media/process/open-process-page-s150.png\" alt-text=\"Screenshot showing highlighted Process button for selection.\":::\n\n::: moniker-end\n\n::: moniker range=\"< azure-devops\"\n\n1. Sign in to your collection (`https://dev.azure.com/{Your_Collection}`).\n1. Select **Collection Settings** or **Admin settings**.\n1. Select **Process**.\n\n   :::image type=\"content\" source=\"../work/media/process/open-process-2020.png\" alt-text=\"Screenshot showing highlighted Process button in Collection settings.\":::\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Adding Files to TFVC Repository using 'add' Command\nDESCRIPTION: The 'add' command syntax for Team Foundation Version Control. It includes various optional parameters for controlling the addition process, such as locking, encoding, and recursive addition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/add-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Batch\nCODE:\n```\ntf add itemspec [/lock:(none|checkin|checkout)] [/encoding:filetype] \n[/noprompt] [/recursive] [/noignore] [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Implementing Widget Reload Functionality\nDESCRIPTION: JavaScript code that implements the IConfigurableWidget interface with load and reload methods for handling widget updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nreturn {\n    load: function (widgetSettings) {\n        // Set your title\n        var $title = $('h2.title');\n        $title.text('Hello World');\n\n        return getQueryInfo(widgetSettings);\n    },\n    reload: function (widgetSettings) {\n        return getQueryInfo(widgetSettings);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Common Access Issues Table in Markdown\nDESCRIPTION: Markdown table listing common access and permission issues with their corresponding troubleshooting actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/troubleshoot-permissions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|**Issue**  |**Troubleshooting action**  |\n|---------|----------|\n|Their access level doesn't support access to the service or feature.     | To determine whether it's the cause, [determine the user's access level and subscription status](#determine-a-users-access-level-and-subscription-status).        |\n|Their membership within a security group doesn't support access to a feature or they were explicitly denied permission to a feature.   | To determine whether it's the cause, [trace a permission](#trace-a-permission).         |\n```\n\n----------------------------------------\n\nTITLE: Handling Database Size Exceeding DACPAC Recommendation (cmdline)\nDESCRIPTION: This command-line output is a warning message from the Data Migration Tool indicating that the collection database size exceeds the recommended limit for using the DACPAC migration method. It advises using the SQL Azure VM method instead and provides a link for instructions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_0\n\nLANGUAGE: cmdline\nCODE:\n```\nThe database is currently {Database Size}GBs. This is above the recommended size of {DACPAC Size Limit}GBs to use the DACPAC migration method. Please see the following page to learn how to migration using a SQL Azure VM: https://aka.ms/AzureDevOpsImportLargeCollection\n```\n\n----------------------------------------\n\nTITLE: Navigating to Azure DevOps Organization Portal URL - Plaintext\nDESCRIPTION: Shows the format of the Azure DevOps organization portal URL that customers should use to sign in. This URL template requires the user to substitute `{yourorganization}` with their actual organization name. No special dependencies are required. The URL is intended for browser access and is used to navigate to the relevant Azure DevOps organization context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/billing/csp/buy-csp-azure-devops.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Setting Field Values When State Changes to Active in Azure DevOps XML\nDESCRIPTION: XML configuration that automatically sets the Activated By, Activated Date, and Assigned To fields when a work item's state changes to Active. This shows how to use COPY, SERVERDEFAULT and DEFAULT elements to update fields during state transitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/change-workflow-wit.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<STATE value=\"Active\">  \n<FIELDS>  \n      <FIELD refname=\"Microsoft.VSTS.Common.ActivatedBy\">  \n      <COPY from=\"currentuser\"/>  \n      <VALIDUSER/>  \n      <REQUIRED/>  \n      </FIELD>  \n      <FIELD refname=\"Microsoft.VSTS.Common.ActivatedDate\">  \n      <SERVERDEFAULT from=\"clock\"/></FIELD>  \n      <FIELD refname=\"System.AssignedTo\">  \n      <DEFAULT from=\"currentuser\"/>  \n      </FIELD>  \n. . .  \n</FIELDS>  \n</STATE>\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Data Factory Resources\nDESCRIPTION: Commands to install Data Factory extension and create development and test data factories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name datafactory\n\naz datafactory create \\\n    --name data-factory-cicd-dev \\\n    --resource-group $rgName\n\naz datafactory create \\\n    --name data-factory-cicd-test \\\n    --resource-group $rgName\n```\n\n----------------------------------------\n\nTITLE: Publishing a scoped npm package\nDESCRIPTION: Command to publish a scoped npm package to the configured registry. This command should be run from the project directory containing the package.json file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/scopes.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Importing GitHub Repository URL to Azure Repos\nDESCRIPTION: The Git repository URL for a sample ASP.NET Core application that will be imported into Azure Repos. This repository contains a basic application that can be used for CI/CD pipeline setup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/aspnet/includes/import-code-aspnet-core-vsts.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/MicrosoftDocs/pipelines-dotnet-core\n```\n\n----------------------------------------\n\nTITLE: Setting Documents in Azure DevOps Extension\nDESCRIPTION: Shows how to perform an upsert operation on a document using setDocument method.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n    // Get data service\n    SDK.getService(SDK.getContributionId()).then(function(dataService) {\n        // Prepare document first\n        var myDoc = {\n            id: 1,\n            fullScreen: false,\n            screenWidth: 500\n        };\n\n        dataService.setDocument(\"MyCollection\", myDoc).then(function(doc) {\n            console.log(\"Doc id: \" + doc.id);\n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Classification Fields\nDESCRIPTION: Reference table for classification fields in Azure DevOps work items\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-area-iteration-path.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n|**Field name**|**Description**|**Reference name**|\n|---|---|---|\n|**Area Path**|Groups work items into product feature or team areas. The area must be a valid node in the project hierarchy.|System.AreaPath |\n|**Iteration Path**|Groups work items by named sprints or time periods. The iteration must be a valid node in the project hierarchy.|System.IterationPath |\n```\n\n----------------------------------------\n\nTITLE: Cleaning All Items Including Unmapped with TFVC Reconcile\nDESCRIPTION: Cleans all local items, including unmapped and cloaked items, using the TFVC reconcile command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/reconcile-command.md#2025-04-22_snippet_2\n\nLANGUAGE: Batch\nCODE:\n```\ntf reconcile /clean /unmapped\n```\n\n----------------------------------------\n\nTITLE: TestRuns Entity Properties Table\nDESCRIPTION: Markdown table defining the properties, data types, and descriptions for the TestRuns entity set. Includes test run metadata and result metrics.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n|**Display name** | **Name** | **Data type** | **Description** | \n|-----------------|--------------------|---------------|--------------------------------------|\n|                 |`AnalyticsUpdatedDate` | DateTime | Watermark that indicates the last time the Analytics data was updated.  |\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Project URL\nDESCRIPTION: This snippet demonstrates the URL structure for signing into an Azure DevOps project. It includes placeholders for the organization and project names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/open-kanban-board.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}/{Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Git Line Ending Configuration for Cross-Platform Compatibility\nDESCRIPTION: A .gitattributes configuration entry that normalizes line endings to LF for all text files, preventing issues when running pipelines across different platforms with different line ending conventions (CRLF on Windows, LF on Linux/macOS).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/troubleshooting.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n* text eol=lf\n```\n\n----------------------------------------\n\nTITLE: Filtering Requirement Category Items in Azure Boards Query\nDESCRIPTION: This query clause filters work items that belong to the 'Microsoft.RequirementCategory' group. This is useful for targeting backlog items like User Stories, Product Backlog Items, or Requirements depending on the process template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-numeric.md#2025-04-22_snippet_3\n\nLANGUAGE: azure-boards-query\nCODE:\n```\nWork Item Type In Group Microsoft.RequirementCategory\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Question Mark Pattern Matching in File Names\nDESCRIPTION: Examples showing how the question mark (?) wildcard matches any single character in file names, including matching log files with single-digit numbers and image files with three-character extensions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/tasks/file-matching-patterns.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nlog1.log\nlog2.log\nlog3.log\nscript.sh\n```\n\nLANGUAGE: text\nCODE:\n```\nimage.tiff\nimage.png\nimage.ico\n```\n\n----------------------------------------\n\nTITLE: Checking User Permissions for Queueing Builds in Azure DevOps\nDESCRIPTION: This JavaScript snippet shows how to use the Security REST client to check if the current user has permissions to queue builds in the current project in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/public-project.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nVSS.require([\"VSS/Service\", \"VSS/security/RestClient\"], function(VSS_Service, Security_RestClient) {\n   var client = VSS_Service.getCollectionClient(Security_RestClient.SecurityHttpClient3);\n \n   var securityToken = VSS.getWebContext().project.id;\n \n   client.hasPermissionsBatch({\n    evaluations: [\n       {\n           \"securityNamespaceId\": \"33344D9C-FC72-4d6f-ABA5-FA317101A7E9\",\n           \"token\": securityToken,\n           \"permissions\": 128 /* queue builds */\n       }\n    ],\n    alwaysAllowAdministrators: true\n}\n).then(function(response) {\n     console.log(\"Can user queue builds in this project? \" + response.evaluations[0].value);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Update Links (Markdown)\nDESCRIPTION: Uses a Markdown include directive to insert the content of 'sprint-214-update-links.md' located in the 'includes/boards/' path. This file likely contains a list of links related to Azure Boards updates introduced in Sprint 214.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-214-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-214-update-links](includes/boards/sprint-214-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Access Level Requirements Table in Markdown\nDESCRIPTION: Markdown table showing prerequisites and permission requirements for managing access in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/troubleshoot-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Permissions** | To manage permissions or groups at the organization or collection level: Member of the [**Project Collection Administrators** security group](look-up-project-collection-administrators.md). If you created the organization or collection, you're automatically a member of this group. |\n| **Recommendation** | Before using this guide, we recommend getting familiar with the following content: <br>- [Get started with permissions, access, and security groups](about-permissions.md) <br>- [Default permissions and access quick reference](permissions-access.md). |\n```\n\n----------------------------------------\n\nTITLE: Agent SSL Skip Validation Configuration\nDESCRIPTION: Command to configure agent to skip SSL certificate validation (not recommended for production).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/certificate.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./config.cmd/sh --sslskipcertvalidation\n```\n\n----------------------------------------\n\nTITLE: Configuring IP V4 Ranges for Azure Pipelines Firewall Access\nDESCRIPTION: This code snippet provides the IP V4 ranges that need to be allow-listed in firewalls or IP restrictions to ensure proper functioning of Azure Pipelines. These ranges should be added to existing allow-listed IPs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/web-proxy-bypass.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n13.107.6.0/24\n13.107.9.0/24\n13.107.42.0/24\n13.107.43.0/24\n150.171.22.0/24 \n150.171.23.0/24 \n150.171.73.0/24 \n150.171.74.0/24 \n150.171.75.0/24 \n150.171.76.0/24\n```\n\n----------------------------------------\n\nTITLE: Pulling Remote Changes in Git\nDESCRIPTION: Merges updates from a remote repository into the local repository. This command combines fetching and merging in one step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_23\n\nLANGUAGE: git\nCODE:\n```\ngit pull remote branchname\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Runs Data with OData URL\nDESCRIPTION: This OData URL query retrieves pipeline run data from Azure DevOps Analytics, grouping results by pipeline name and aggregating counts for different outcome types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-allpipelines.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?%20\n$apply=filter(\n\tCompletedDate ge {startdate}\n\t)\n/groupby(\n(Pipeline/PipelineName), \naggregate(\n\t$count as TotalCount,\n\tSucceededCount with sum as SucceededCount,\n\tFailedCount with sum as FailedCount,\n\tPartiallySucceededCount with sum as PartiallySucceededCount,\n\tCanceledCount with sum as CanceledCount\n))\n```\n\n----------------------------------------\n\nTITLE: Creating Bash Variables for Resource Names\nDESCRIPTION: Bash commands to generate unique resource names using random numbers for storage and key vault resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nresourceSuffix=$RANDOM\nstorageName=\"datacicd${resourceSuffix}\"\nkeyVault=\"keyvault${resourceSuffix}\"\nrgName='data-pipeline-cicd-rg'\nregion='<REGION>'\ndatafactorydev='data-factory-cicd-dev'\ndatafactorytest='data-factory-cicd-test'\ndatabricksname='databricks-cicd-ws'\n```\n\n----------------------------------------\n\nTITLE: Workfold Command Syntax for Decloaking Folders\nDESCRIPTION: Syntax for decloaking a previously cloaked server folder, allowing it to be included in version control operations again.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ntf workfold /decloak <server-folder>\n[/workspace:<workspace-name>] [/collection:<team-project-collection-url>][/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Creating a Branch in Git Command Line\nDESCRIPTION: Command to create a new branch in Git. Choose a descriptive branch name that represents the work being done in the branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/gitquickstart.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n> git branch ReadMeFix\n```\n\n----------------------------------------\n\nTITLE: Using DateTime Format in WIQL Queries\nDESCRIPTION: Shows how to specify a date-time filter in a WIQL query using the UTC format with Z appended to the date-time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_26\n\nLANGUAGE: WIQL\nCODE:\n```\nAND [System.ChangedDate] >= '1/1/2019 00:00:00Z'\n```\n\n----------------------------------------\n\nTITLE: Querying User Stories by Area and Iteration Path in Power BI\nDESCRIPTION: This Power BI query retrieves user stories filtered by a specific Area Path and Iteration Path. It selects relevant fields and expands related entities like AssignedTo, Iteration, and Area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-openbugs.md#2025-04-22_snippet_4\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'User Story' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and startswith(Iteration/IterationPath,'{iterationpath}') \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames,AreaSK \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Creating Mermaid Gantt Charts in Azure DevOps Wiki\nDESCRIPTION: Demonstrates how to create Gantt charts to represent project schedules with task bars, date formats, and exclusions in Azure DevOps wiki pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n::: mermaid\ngantt\n    title A Gantt chart\n    dateFormat YYYY-MM-DD\n    excludes 2022-03-16,2022-03-18,2022-03-19\n    section Section\n\n    A task          :a1, 2022-03-07, 7d\n    Another task    :after a1 , 5d\n:::\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Checkin Command Syntax\nDESCRIPTION: Primary syntax for the checkin command with all available parameters for checking in pending changes directly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/checkin-command.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntf checkin [/author:author name] [/comment:(\"comment\"|@comment file)] \n[/noprompt] [/notes:(\"Note Name\"=\"note text\"|@notefile)] \n[/override:(reason|@reasonfile)] [/recursive] [/saved] [/validate] [itemspec] [/bypass] [/force] [/noautoresolve] [/login:username,[password]] [/new]\n```\n\n----------------------------------------\n\nTITLE: Searching by Created Date and Activity using Macro and Field\nDESCRIPTION: This example combines multiple criteria: a date macro with an offset (`@Today-1` for yesterday) applied to the 'Created Date' field, and a filter on the 'Activity' field. The query `\"Created Date\"=@Today-1 Activity=Test` finds work items created yesterday with the Activity field set to 'Test'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_16\n\nLANGUAGE: azure-devops-search\nCODE:\n```\n\"Created Date\"=@Today-1 Activity=Test\n```\n\n----------------------------------------\n\nTITLE: Example of Completed Data Migration Tool Import Command\nDESCRIPTION: This is an example of a completed import command for the Data Migration Tool, specifying the path to the migration specification file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_18\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator import /importFile:C:\\DataMigrationToolFiles\\migration.json\n```\n\n----------------------------------------\n\nTITLE: Searching for Timetracker Extension Example\nDESCRIPTION: This example shows how to search for the 'Timetracker' extension in the Azure DevOps marketplace using the Azure CLI. It outputs the results in a table format, displaying the Publisher ID and Extension ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension search --search-query Timetracker --output table\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Organization URL (Admin is Member)\nDESCRIPTION: Specifies the URL format for an Azure DevOps Administrator, who is already a member of the organization, to sign in and initiate the ownership change process via the organization settings. Replace `{yourorganization}` with the actual organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/resolve-orphaned-organization.md#2025-04-22_snippet_0\n\nLANGUAGE: url\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Pushing Commits to Azure DevOps Repository\nDESCRIPTION: A Git command to push local commits to the remote repository in Azure DevOps. This uploads your local changes to the server so they are available to other team members.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-repo-intellij.md#2025-04-22_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\ngit push\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for Data Migration Tool Import Command\nDESCRIPTION: This command displays the help text and guidance for the import command of the Data Migration Tool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_16\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator import /help\n```\n\n----------------------------------------\n\nTITLE: Initializing AMD Module Loading with VSS.require\nDESCRIPTION: Example showing how to load AMD modules in an Azure DevOps extension using VSS.require. Demonstrates loading multiple modules and handling them in a callback function.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/extend/reference/client/api/vss/sdk/vss_sdk/VSS.md#2025-04-22_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nVSS.require([\"VSS/Controls\", \"VSS/Controls/Grids\"], function(Controls, Grids) {\n   ...\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Manage Audit Streams Permission in Azure DevOps\nDESCRIPTION: Specifies the permission key for managing audit streams in Azure DevOps. This permission allows users to add an audit stream, which is currently in preview.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n`AuditLog, Manage_Streams`\n```\n\n----------------------------------------\n\nTITLE: Immediate Cleanup of Destroyed Files in TFVC\nDESCRIPTION: This command destroys all files in a folder and immediately cleans up the TFVC metadata. It uses the /startcleanup option to initiate immediate cleanup instead of waiting for the scheduled maintenance process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/destroy-version-controlled-files.md#2025-04-22_snippet_4\n\nLANGUAGE: Batch\nCODE:\n```\ntf destroy /startcleanup $/MyTeamProject/aFolder\n```\n\n----------------------------------------\n\nTITLE: Defining Reserved Field in XML for Azure DevOps Work Item Type\nDESCRIPTION: Example of defining a reserved field 'Repro Steps' in the Bug.xml file for an Azure DevOps work item type. Shows the correct naming and typing required for system fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_39\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Repro Steps\" refname=\"Microsoft.AzureDevOps.TCM.ReproSteps\" type=\"HTML\">\n  <HELPTEXT>How to see the bug. End by contrasting expected with actual behavior.</HELPTEXT>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Multiple Organizations Azure CLI Configuration\nDESCRIPTION: Azure CLI configuration for multiple organizations with specific project access and parallelism settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --organization-profile organization-profile.json\n   # other parameters omitted for space\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"AzureDevOps\":\n  {\n      \"organizations\": [\n        {\n            \"url\": \"https://dev.azure.com/fabrikam-tailspin\",\n            \"projects\": [],\n            \"parallelism\": 2\n        },\n        {\n            \"url\": \"https://dev.azure.com/fabrikam-prime\",\n            \"projects\": [ \"fabrikam-dev\", \"fabrikam-test\" ],\n            \"parallelism\": 2\n        }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items in Split Columns using Board Column Done Field\nDESCRIPTION: This snippet demonstrates how to query for work items in split columns of a Kanban board using the Board Column Done field. The field takes a value of False for items in the 'Doing' column and True for items in the 'Done' column.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/add-columns.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nYou can query for work items in a split column using the **Board Column Done** field. This field takes of a value of False when in the *Doing* column and True when in the *Done* column.\n```\n\n----------------------------------------\n\nTITLE: Edit project-level information Permission Reference\nDESCRIPTION: Permission that allows users to edit project level permissions for users and groups, project description, and project services visibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, MANAGE_PROPERTIES`\n```\n\n----------------------------------------\n\nTITLE: Denying PendChange Permission for a User on a File\nDESCRIPTION: Example showing how to deny a specific user the ability to make pending changes to their local copy of a file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/permission-command.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf permission /deny:PendChange /user:somealias $/testproject/1256.cs\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Release Approval Pending Event Payload in JSON\nDESCRIPTION: This JSON payload represents an Azure DevOps release approval pending event. It includes details about the release, environment, approval status, and associated messages in various formats (text, HTML, and markdown).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000a73e7272-e96d-4249-93ac-7404eacd6801\",\n  \"eventType\": \"ms.azure-devops-release.deployment-approval-pending-event\",\n  \"publisherId\": \"rm\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Pre deployment approval pending for release Release-1 on environment Dev.\",\n    \"html\": \"Pre deployment approval pending for release <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1'>Release-1</a> on environment <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1'>Dev</a>.\",\n    \"markdown\": \"Pre deployment approval pending for release [Release-1](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1) on environment [Dev](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1).\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Pre deployment approval pending for release Release-1 on environment Dev.\\r\\nPending on: Chuck Reinhart\\r\\nPending since: 09 May 2016 12:09:29 (UTC)\",\n    \"html\": \"Pre deployment approval pending for release <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1'>Release-1</a> on environment <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1'>Dev</a>.<br>Pending on: Chuck Reinhart<br>Pending since: 09 May 2016 12:09:29 (UTC)\",\n    \"markdown\": \"Pre deployment approval pending for release [Release-1](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1) on environment [Dev](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1).\\r\\nPending on: Chuck Reinhart\\r\\nPending since: 09 May 2016 12:09:29 (UTC)\"\n  },\n  \"resource\": {\n    \"approval\": {\n      \"id\": 1,\n      \"revision\": 1,\n      \"approvalType\": \"preDeploy\",\n      \"status\": \"pending\",\n      \"createdOn\": \"2016-05-09T12:09:29Z\",\n      \"modifiedOn\": \"2016-05-09T12:09:29Z\",\n      \"isAutomated\": false,\n      \"isNotificationOn\": false,\n      \"trialNumber\": 1,\n      \"attempt\": 1,\n      \"approver\": {\n        \"displayName\": \"Chuck Reinhart\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"environment\": {\n      \"id\": 8,\n      \"name\": \"Dev\"\n    },\n    \"release\": {\n      \"id\": 1,\n      \"name\": \"Release-1\",\n      \"releaseDefinition\": {\n        \"id\": 1,\n        \"name\": \"Release Definition\"\n      },\n      \"project\": {\n        \"id\": \"project-id\",\n        \"name\": \"project-name\"\n      }\n    }\n  },\n  \"createdDate\": \"2016-05-09T12:09:29Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Location of Generated LaunchAgent .plist File (plaintext)\nDESCRIPTION: This snippet shows the file path where the agent's launchd .plist service file is created on macOS. These files are used by the launchctl system to manage background services. The path contains placeholders to be replaced with actual tfs and agent names; no dependencies are needed beyond a functioning agent installation. The file itself does not require input and is referenced by other components for startup and management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\n~/Library/LaunchAgents/vsts.agent.{tfs-name}.{agent-name}.plist\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Aliases in JSON (ARM/Azure CLI)\nDESCRIPTION: This JSON snippet demonstrates how to configure aliases for an image in the images array. It includes an example of setting an alias 'ubuntu-20.04-gen2' for a specific Ubuntu image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-images.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n\"images\": [\n    {\n        \"resourceId\": \"/subscriptions/subscription_id_placeholder/Providers/Microsoft.Compute/Locations/eastus/publishers/canonical/artifacttypes/vmimage/offers/0001-com-ubuntu-server-focal/skus/20_04-lts-gen2/versions/latest\",\n        \"aliases\": [\n            \"ubuntu-20.04-gen2\"\n        ]\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Referencing ServiceHooks Namespace Permissions in Azure DevOps Markdown\nDESCRIPTION: This snippet lists permission tokens (`ViewSubscriptions`, `EditSubscriptions`, `DeleteSubscriptions`, `PublishEvents`) for managing service hooks in Azure DevOps. These tokens are used to define or document access to subscription management and event publishing settings. The namespace is identified by a UUID, which is used in configuration or API contexts. The permissions are assigned to roles or users administratively.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n`ViewSubscriptions`\n`EditSubscriptions`\n`DeleteSubscriptions`\n`PublishEvents`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`cb594ebe-87dd-4fc9-ac2c-6a10a4c92046`\n```\n\n----------------------------------------\n\nTITLE: Checking macOS Agent Service Status\nDESCRIPTION: Command to check the status of the macOS agent running as a launchd service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh status\n```\n\n----------------------------------------\n\nTITLE: Changing Field Attributes with witadmin in Azure DevOps\nDESCRIPTION: This command uses witadmin to change the friendly name of a custom field 'MyCompany.Type' to 'Evaluation Method' in a specific Azure DevOps collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-field.md#2025-04-22_snippet_6\n\nLANGUAGE: Command-line\nCODE:\n```\nwitadmin changefield /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:MyCompany.Type /name:\"Evaluation Method\"\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 231 Azure Pipelines Update Details\nDESCRIPTION: This snippet uses a Markdown include directive specific to the Microsoft Docs platform to insert content from another file. It includes the detailed updates for Azure Pipelines corresponding to Sprint 231.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-231-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-231-update](includes/pipelines/sprint-231-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Azure Pipelines in Slack\nDESCRIPTION: Commands for subscribing to pipeline notifications in Slack channels. Users can monitor all pipelines in a project or a specific pipeline by providing the appropriate URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/slack.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n/azpipelines subscribe <project url>\n```\n\nLANGUAGE: bash\nCODE:\n```\n/azpipelines subscribe https://dev.azure.com/myorg/myproject/_build?definitionId=123\n```\n\nLANGUAGE: bash\nCODE:\n```\n/azpipelines subscribe https://dev.azure.com/myorg/myproject/_release?definitionId=123&view=mine&_a=releases\n```\n\n----------------------------------------\n\nTITLE: Basic Power BI Query Setup\nDESCRIPTION: Example showing how to set up a blank query in Power BI and access the Advanced Editor for OData query integration. Query requires replacing placeholder values like {organization} and {project} with actual values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-odata-overview.md#2025-04-22_snippet_0\n\nLANGUAGE: powerbi\nCODE:\n```\n// Replace contents with sample query\n// Required replacements:\n// {organization} - Organization name\n// {project} - Team project name\n// Optional:\n// {areapath} - Area path (Format: Project\\Level1\\Level2)\n// {iterationpath} - Iteration path (Format: Project\\Level1\\Level2)\n// {startdate} - Start date (Format: YYYY-MM-DDZ)\n```\n\n----------------------------------------\n\nTITLE: Creating Managed DevOps Pool with Azure CLI\nDESCRIPTION: This Azure CLI command creates a Managed DevOps Pool, specifying the Dev Center project ID using the 'devcenter-project-id' parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz mdp pool create \\\n   --devcenter-project-id /subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/resourceGroupName/providers/Microsoft.DevCenter/projects/devCenterProjectName\n   # other parameters omitted for space\n```\n\n----------------------------------------\n\nTITLE: Process Object Limits Table for Azure DevOps Services\nDESCRIPTION: Markdown table showing maximum limits for various process objects in Azure DevOps Services, comparing Inheritance and Hosted XML process models.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/object-limits.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Object                                              | Inheritance | Hosted XML |\n| --------------------------------------------------- | ----------: | ---------: |\n| Number of processes you can have in an organization |          128|         64 |\n| Work item types defined for a process               |          64 |         64 |\n| Fields defined for an organization                  |        8192 |       8192 |\n| Fields defined for a process                        |        1024 |       1024 |\n```\n\n----------------------------------------\n\nTITLE: Calculating Rework with State Restart Time in Azure DevOps Analytics\nDESCRIPTION: This complex formula calculates the total time spent in active states before the most recent 'Proposed' state, which indicates rework. It sums days for states before 'Proposed' but only counting days prior to the last time the item was in a proposed state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_13\n\nLANGUAGE: DAX\nCODE:\n```\nState Restart Time in Days = \nCALCULATE (\n    SUM ( 'View Name'[Date Diff in Days] ),\n    ALLEXCEPT ( 'View Name', 'View Name'[Work Item Id] ),\n    'View Name'[Date] <= EARLIER ( 'View Name'[Date] ),\n    'View Name'[State Change Count] < EARLIER('View Name'[State Change Count - Last Proposed] ),\n    'View Name'[State] <\"Proposed\"\n) + 0\n```\n\n----------------------------------------\n\nTITLE: Displaying TFVC Labels Command Syntax\nDESCRIPTION: Shows the full syntax for the tf labels command, including optional parameters for filtering by owner, specifying output format, and authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/labels-command.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntf labels [/owner:ownername] [/format:(brief|detailed)] \n[/collection:TeamProjectCollectionUrl] [labelname] [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Permission Settings Table in Markdown\nDESCRIPTION: Markdown table showing different roles and their associated permissions in Azure DevOps, including development leads, team administrators, contributors, and project managers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/restrict-access.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   **Role**\n   :::column-end:::\n   :::column span=\"1\":::\n   **Tasks to perform**\n   :::column-end:::\n   :::column span=\"2\":::\n   **Permissions to set to Allow**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Destroying a File in TFVC using tf destroy Command\nDESCRIPTION: This command permanently destroys a specific file in TFVC. It uses the /i (non-interactive) option to bypass confirmation prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/destroy-version-controlled-files.md#2025-04-22_snippet_1\n\nLANGUAGE: Batch\nCODE:\n```\ntf destroy /i $/MyTeamProject/aFile.cs\n```\n\n----------------------------------------\n\nTITLE: Using Type-Safe Parameters in an Extending Pipeline\nDESCRIPTION: A pipeline that extends a template with type-safe parameters, showing how to specify one of the allowed pool values. This demonstrates parameter validation in templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/templates.md#2025-04-22_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\n# azure-pipelines.yml\nextends:\n  template: template.yml\n  parameters:\n    userpool: private-pool-1\n```\n\n----------------------------------------\n\nTITLE: Filtering by Assigned User in Azure DevOps Search\nDESCRIPTION: This snippet demonstrates the shortcut filter `a:` used in Azure DevOps semantic search to find work items assigned to a specific user. Replace 'user name' with the actual name of the user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_0\n\nLANGUAGE: azure-devops-search\nCODE:\n```\na: <user name>\n```\n\n----------------------------------------\n\nTITLE: Listing Security Groups in Azure DevOps Project with Azure CLI\nDESCRIPTION: Command to list all security groups in an Azure DevOps project, displaying their names and descriptors in a table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/view-permission.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n> az devops security group list --project ac515e82-560c-4af8-845b-9f7f968d8e7b --output table\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 147 Update Links in Markdown\nDESCRIPTION: Markdown include directive for Sprint 147 update links content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-147-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-147-update-links](../includes/repos/sprint-147-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Handling Largest Table Size Exceeding DACPAC Recommendation (cmdline)\nDESCRIPTION: This command-line output is a warning from the Data Migration Tool indicating that the size of the largest table in the collection database exceeds the recommended limit for the DACPAC migration method. It recommends using the SQL Azure VM method and provides a link for guidance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_1\n\nLANGUAGE: cmdline\nCODE:\n```\nThe largest table size is currently {Table size}GBs. This is above the recommended size of {Size limit}GBs to use the DACPAC migration method. Please see the following page to learn how to migration using a SQL Azure VM: https://aka.ms/AzureDevOpsImportLargeCollection  \n```\n\n----------------------------------------\n\nTITLE: Initiating Field Search Suggestions in Azure DevOps\nDESCRIPTION: This snippet shows an example of typing the beginning of a field name (`ta`) in the Azure DevOps search box. This action triggers a dropdown list suggesting matching work item field names (like 'Tags'), helping users complete their field-specific searches faster.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_4\n\nLANGUAGE: azure-devops-search\nCODE:\n```\nta\n```\n\n----------------------------------------\n\nTITLE: Token Validation in .NET Core WebAPI - Startup Configuration\nDESCRIPTION: C# code showing JWT authentication setup in ASP.NET Core WebAPI startup class using Microsoft.AspNetCore.Authentication.JwtBearer package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/auth.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.Text;\nusing Microsoft.AspNetCore.Authentication.JwtBearer;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.IdentityModel.Tokens;\n\nnamespace TokenSample.Core.API\n{\n    public class Startup\n    {\n        public Startup(IConfiguration configuration)\n        {\n            Configuration = configuration;\n        }\n\n        public IConfiguration Configuration { get; }\n\n        public void ConfigureServices(IServiceCollection services)\n        {\n            services.AddControllers();\n\n            string _secret = \"ey9asfasdmax..<the secret key downloaded from the Azure DevOps Services publisher page>.9faf7eh\";\n        \n            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n                    .AddJwtBearer((o) =>\n                    {\n                        o.TokenValidationParameters = new TokenValidationParameters()\n                        {\n                            IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_secret)),\n                            ValidateIssuer = false,\n                            ValidateAudience = false,\n                            ValidateActor = false,\n                            RequireSignedTokens = true,\n                            RequireExpirationTime = true,\n                            ValidateLifetime = true\n                        };    \n                    });\n        }\n\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n        {\n            if (env.IsDevelopment())\n            {\n                app.UseDeveloperExceptionPage();\n            }\n\n            app.UseAuthentication();\n            app.UseAuthorization();\n            app.UseRouting();\n            app.UseStaticFiles();\n\n            app.UseEndpoints(endpoints =>\n            {\n                endpoints.MapControllers();\n            });\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Integer Field Type Operators and Macros in Azure DevOps Queries\nDESCRIPTION: Operators and macros supported for Integer fields in Azure DevOps queries. Integer fields store 32-bit signed integers and support various comparison operators and special macros when used with the ID field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n`= , <> , > , < , >= , <= , =[Field], <>[Field], >[Field], <[Field], >=[Field], <=[Field], In, Not In, Was Ever`  \n\n**Macros**: `@Follows`, `@MyRecentActivity`, `@RecentMentions`, and `@RecentProjectActivity`, valid when used with the **ID** field.\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow States for Bug Category Work Items in ProcessConfiguration\nDESCRIPTION: XML snippet showing how to map workflow states for a bug-type Work Item in ProcessConfiguration. Maps states to Proposed, InProgress, and Complete types to ensure proper visualization on boards and backlogs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_18\n\nLANGUAGE: XML\nCODE:\n```\n<States>  \n <State value=\"New\" type=\"Proposed\" />  \n <State value=\"Active\" type=\"InProgress\" />  \n <State value=\"Investigate\" type=\"InProgress\" />  \n <State value=\"Resolved\" type=\"InProgress\" />  \n <State value=\"Closed\" type=\"Complete\" />  \n</States>\n```\n\n----------------------------------------\n\nTITLE: OData Query for Team-Area Path Mapping\nDESCRIPTION: Direct OData query to Azure DevOps Analytics API that retrieves team and area path mapping data. Used to establish relationships for team-based filtering in Power BI reports.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-teamslicer.md#2025-04-22_snippet_1\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v1.0/Areas?\n        $filter=startswith(AreaPath,'{areapath}')\n            &$select=AreaSK,AreaPath\n            &$expand=Teams($select=TeamName)\n```\n\n----------------------------------------\n\nTITLE: Importing Work Item Type Definition with witadmin\nDESCRIPTION: Command to import the modified work item type definition XML file using the witadmin tool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/configure-workitemform-extensions.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nwitadmin importwitd /collection:CollectionURL /p:Project /f:FileName\n```\n\n----------------------------------------\n\nTITLE: Work Item Count Query Response in Azure DevOps Server\nDESCRIPTION: This snippet shows the JSON response from the Analytics service after querying for work item count in an on-premises Azure DevOps Server. It includes the OData context and the count value in the results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_8\n\nLANGUAGE: OData\nCODE:\n```\n{\n\"@odata.context\": \"http://fabrikam/DefaultCollection/Fabrikam/_odata/v4.0-preview/$metadata#WorkItems(Count)\",\n\"value\": [\n   {\n      \"@odata.id\": null,\n      \"Count\": 44\n   }\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Resolved Items Failing Acceptance Tests in Azure Boards (WIQL)\nDESCRIPTION: This snippet filters for resolved work items where the resolved reason is that acceptance tests failed by querying `Resolved Reason = Acceptance tests fail`. The field must be present in your process's workflow. Outputs are work items closed for this specific failure reason.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_8\n\nLANGUAGE: WIQL\nCODE:\n```\nResolved Reason = Acceptance tests fail\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Team Backlog to Azure Boards Stories Backlog in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Team Backlog' to the Azure Boards 'Stories backlog'. It explains this backlog lists User Stories associated with the team's area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_27\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Team Backlog\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Stories backlog**](safe-concepts.md#backlogs-boards). The Stories backlog lists the User Stories assigned to the area path associated with the team.   \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Removing a Banner in Azure DevOps using CLI\nDESCRIPTION: This command removes a banner from Azure DevOps. It requires the banner ID as a parameter, which can be obtained by listing the banners.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-banners.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops admin banner remove --id\n```\n\n----------------------------------------\n\nTITLE: Bypass rules on work item updates Permission Reference\nDESCRIPTION: Permission that allows users to save work items while ignoring defined rules. This can be implemented through the Work Items update REST API with bypassRules parameter or through the client object model.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, BYPASS_RULES`\n```\n\n----------------------------------------\n\nTITLE: Retrieving History for All Items in a Folder in TFVC\nDESCRIPTION: Shows how to display changes made to all items in a folder, including those in subfolders, using the tf history command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/history-command.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history * /recursive\n```\n\n----------------------------------------\n\nTITLE: Adding a Remote to a Git Repository\nDESCRIPTION: Add a remote repository reference to your local Git repository. This allows you to fetch from and push to the remote repository using the specified name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add name url\n```\n\n----------------------------------------\n\nTITLE: Adding Stack Rank Field for Agile/CMMI Work Item Type in Azure DevOps\nDESCRIPTION: XML definition for the Stack Rank field used in Agile and CMMI process templates. This field tracks item priority with lower values indicating higher priority work items that should be addressed first.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Stack Rank\" refname=\"Microsoft.VSTS.Common.StackRank\" type=\"Double\" reportable=\"dimension\">     \n  <HELPTEXT>Work first on items with lower-valued stack rank. Set in triage. \n  </HELPTEXT>      \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Making an Entire Widget Clickable in HTML\nDESCRIPTION: This HTML snippet shows how to make an entire widget clickable by wrapping its content in an anchor tag. It uses the 'clickable' class to ensure proper styling and behavior when the widget is interacted with.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/styles-from-widget-sdk.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"widget clickable\">\n    <a href=\"https://bing.com\"  target=\"_blank\">\n\t\t<h2 class=\"title\">Counter widget</h2>\n\t\t<div class=\"big-count\">223</div>\n\t\t<div>Click me!</div>\n\t</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Running witadmin Command to List Work Item Types\nDESCRIPTION: This command displays the names of all work item types defined in a specified project in the Command Prompt window.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin listwitd /collection:CollectionURL /p:Project\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests for Build Workflow with OData\nDESCRIPTION: This OData query retrieves failed test results for a specific build pipeline. It filters results by pipeline name, date range, and build workflow, then aggregates counts of test outcomes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tAnd Date/Date ge {startdate}\n\tAnd Workflow eq 'Build'\n\t)\n/groupby(\n\t(TestSK, Test/TestName), \n\taggregate(\n\tResultCount with sum as TotalCount,\n\tResultPassCount with sum as PassedCount,\n\tResultFailCount with sum as FailedCount,\n\tResultNotExecutedCount with sum as NotExecutedCount,\n\tResultNotImpactedCount with sum as NotImpactedCount,\n\tResultFlakyCount with sum as FlakyCount))\n/filter(FailedCount gt 0)\n/compute(\niif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Localversions Command Syntax\nDESCRIPTION: Defines the basic syntax pattern for the localversions command with optional parameters for recursive operations, format specification, workspace selection, and collection URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/localversions-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf localversions ItemSpec\n[/recursive] [/format:brief|detailed]\n[/workspace:WorkspaceName[;WorkspaceOwner]] [/collection:TeamProjectCollectionUrl]\n```\n\n----------------------------------------\n\nTITLE: Configuring CreatorOnly Permissions in ARM Template (JSON)\nDESCRIPTION: This JSON snippet shows how to configure pool administration permissions to 'CreatorOnly' within an ARM template. This is done by setting the `kind` property within `properties.organizationProfile.permissionProfile` to `CreatorOnly`. This setting grants administrator role only to the pool creator and disables inheritance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n\"organizationProfile\": {\n    \"organizations\": [...],\n    \"permissionProfile\": {\n        \"kind\": \"CreatorOnly\"\n    },\n    \"kind\": \"AzureDevOps\"\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps CLI Team Update Command Syntax\nDESCRIPTION: This snippet shows the full syntax for the 'az devops team update' command, including all available parameters for updating team details in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/rename-remove-team.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team update --team\n                      [--description]\n                      [--name]\n                      [--org]\n                      [--project]\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration for Build Workflow in Power BI\nDESCRIPTION: This Power BI query fetches test duration data for a specific pipeline with a 'Build' workflow. It calculates the total count of test executions, total duration, and average duration for each test.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And Date/Date ge {startdate} \"\n      &\"And Workflow eq 'Build'\"\n      &\")/groupby(\"\n      &\"(TestSK, Test/TestName),\"\n      &\"aggregate(\"\n      &\"ResultCount with sum as TotalCount, \"\n      &\"ResultDurationSeconds with sum as TotalDuration\"\n      &\"))/compute(\"\n      &\"TotalDuration div TotalCount as AvgDuration\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Viewing Simplified File History After Conflict Resolution\nDESCRIPTION: Shows how Git simplifies the file history after the merge conflict resolution. Notice that the 'animals' branch changes and merge commit are not shown in the default log view.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_7\n\nLANGUAGE: Git CLI\nCODE:\n```\n> git log test.txt\n    \n    commit fdd4dfd816c4efebc5bdb240f49e934e299db581\n        Date:   Mon Feb 15 10:51:06 2016 -0500\n\n        We have added a fruit\n\n    commit 206613ccd9a54b055b184c7b6c16f2ece8067e51\n        Date:   Mon Feb 15 10:44:18 2016 -0500\n\n        Initial commit\n```\n\n----------------------------------------\n\nTITLE: Querying Flaky Tests for Build Workflow in Power BI\nDESCRIPTION: Power BI query to retrieve flaky test data for build workflows. Aggregates test results and calculates flaky rate for tests with flaky count greater than 0.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-flaky-tests.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName} \"\n                &\"And Date/Date ge {startdate} \"\n                &\"And Workflow eq 'Build') \"\n        &\"/groupby((TestSK, Test/TestName), \"\n            &\"aggregate( \"\n                &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n                &\"ResultFailCount with sum as FailedCount, \"\n                &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n                &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n                &\"ResultFlakyCount with sum as FlakyCount)) \"\n    &\"/filter(FlakyCount gt 0) \"\n    &\"/compute( \"\n    &\"(FlakyCount div cast(TotalCount, Edm.Decimal)) mul 100 as FlaykRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Comparison Table of Inherited vs Hosted XML Process Models in Markdown\nDESCRIPTION: A markdown table comparing various features and capabilities of the Inherited and Hosted XML process models in Azure DevOps. It covers aspects like process administration, security, custom work item types, fields, lists, rules, and more.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/inheritance-versus-hosted-xml.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Item                                 | Inherited                                                                                                      | Hosted XML                    |\n| ------------------------------------ | -------------------------------------------------------------------------------------------------------------- | ----------------------------- |\n| Process administration               | Web ui and REST API                                                                                            | XML and import through web ui |\n| Process security                     | Supported                                                                                                      | Collection admin only         |\n| Custom work item types               | Supported                                                                                                      | Supported                     |\n| Custom fields                        | Supported                                                                                                      | Supported                     |\n| Custom lists                         | Supported                                                                                                      | Supported                     |\n| Global lists                         | Shared picklist                                                                                                | Supported                     |\n| Cascading picklists                  | [With extension](https://marketplace.visualstudio.com/items?itemName=ms-devlabs.cascading-picklists-extension) | Supported                     |\n| Custom values in system fields       | Supported                                                                                                      | Supported                     |\n| Custom reason field values & rules   | Supported with work around                                                                                     | Supported                     |\n| Custom states                        | Supported                                                                                                      | Supported                     |\n| Custom rules                         | Supported                                                                                                      | Supported                     |\n| for / not rules                      | Not supported                                                                                                  | Not supported                 |\n| Disable system rules                 | Not supported                                                                                                  | Supported (not recommended)   |\n| Customize layout                     | Supported                                                                                                      | Supported                     |\n| Portfolio backlog levels              | Supported                                                                                                      | Supported                     |\n| Move projects to a different process | Supported                                                                                                      | Not supported                 |\n| Clone process                        | Supported                                                                                                      | Not supported                 |\n| Disable process                      | Supported                                                                                                      | Supported                     |\n| REST API                             | Supported                                                                                                      | Not supported                 |\n| Work item extensions                 | Supported                                                                                                      | Supported                     |\n| Steps (for other than Test Case)     | Not supported                                                        | Supported                     |\n```\n\n----------------------------------------\n\nTITLE: List Current User Workspaces Example\nDESCRIPTION: Command example showing how to list all workspaces for the current user on the current computer.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspaces-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf workspaces\n```\n\n----------------------------------------\n\nTITLE: Creating and Switching Branches\nDESCRIPTION: Commands to create a new feature branch and switch to it for development work.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/code-with-git.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit branch users/jamal/feature1\ngit checkout users/jamal/feature1\n```\n\n----------------------------------------\n\nTITLE: Configuring Work Item Types for Different Process Templates in Azure Boards\nDESCRIPTION: A comparison table of the available work item types across different process templates (Basic, Agile, Scrum, CMMI) in Azure Boards. It shows the equivalent work item types for requirements, tasks, bugs, and features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/best-practices-agile-project-management.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [work item types](includes/work-item-types.md)]\n```\n\n----------------------------------------\n\nTITLE: Accessing Cargo Package API Endpoint for Project Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting Cargo packages in a project scoped feed using the REST API. The endpoint supports PATCH operations to update views for Rust packages in project-specific feeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_9\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/{project}/_apis/packaging/feeds/{feedId}/cargo/packages/{packageName}/versions/{packageVersion}?api-version=7.2-preview.1\n```\n\n----------------------------------------\n\nTITLE: Resolving Work Items during Checkin with Git-tf\nDESCRIPTION: Checks in changes to TFVC and resolves a linked work item using the --resolve flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/share-your-code-in-tfvc-xcode.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit tf checkin --resolve=21972\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription Using PowerShell\nDESCRIPTION: Command to set the correct Azure subscription for the signed-in user using Azure PowerShell. The subscription ID must be associated with the tenant connected to the Azure DevOps organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/entra.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nSet-AzContext -Subscription <subscriptionID>\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Manifest for Query Tab\nDESCRIPTION: JSON configuration for the extension manifest that defines a custom query results tab. Specifies the contribution type, targets, properties, required scopes, and addressable files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-query-result-tabs.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": \"Fabrikam.HelloTab.Query.Tabs\",\n            \"type\": \"ms.vss-web.tab\",\n            \"description\": \"Adds a 'Hello' tab to the query results\",\n            \"targets\": [\n                \"ms.vss-work-web.query-tabs\"\n            ],\n            \"properties\": {\n                \"uri\": \"hello-query-tab.html\",\n                \"title\": \"Hello\",\n                \"name\": \"Hello\"\n            }\n        }\n    ],\n    \"scopes\": [\n        \"vso.work\"\n    ],\n    \"files\": [\n        {\n            \"path\": \"hello-query-tab.html\", \"addressable\": true\n        },\n        {\n            \"path\": \"scripts\", \"addressable\": true\n        },\n        {\n            \"path\": \"sdk/scripts\", \"addressable\": true\n        },\n        {\n            \"path\": \"images/logo.png\", \"addressable\": true\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting @mention using Markdown in Azure DevOps Comments\nDESCRIPTION: This Markdown snippet shows the syntax for creating an `@mention` in the newer Markdown comment editor available in Azure DevOps. Simply prefixing the user's ID with `@<` and suffixing with `>` (`@<userID>`) triggers the mention functionality, linking the user and sending a notification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/at-mentions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n```markdown\n@<userID>\n```\n```\n\n----------------------------------------\n\nTITLE: Filtering by Static Date Value Equivalent of Offset @Today Macro - WIQL\nDESCRIPTION: This WIQL snippet shows a query that is functionally equivalent to the previous macro-based query, but uses an explicit static date string. Used for illustration and comparison only; not dynamic.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_13\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE  \n   [System.CreatedDate] > '01-01-2019'\n```\n\n----------------------------------------\n\nTITLE: Git Tool Note Markdown Block\nDESCRIPTION: Markdown include statement for a note about the new Git tool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/work-team-explorer.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../repos/git/includes/note-new-git-tool.md)]\n```\n\n----------------------------------------\n\nTITLE: Writing Test Management Scope (`vso.test_write`)\nDESCRIPTION: Grants the ability to read, create, and update test plans, cases, results and other test management related artifacts. Depends on `vso.test`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_20\n\nLANGUAGE: text\nCODE:\n```\n`vso.test_write`\n```\n\n----------------------------------------\n\nTITLE: Check-in Notes File Format Example in TFVC\nDESCRIPTION: Sample format for a notes.txt file that can be used with the /notes:@notefile parameter. Shows how to format multiple fields including multi-line values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/changeset-command.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nfield1=value1;\nfield2=value that\nspans multiple\nlines;\nfield3 = value3;\n```\n\n----------------------------------------\n\nTITLE: Listing Unmerged Changesets Backward in TFVC\nDESCRIPTION: Lists all changesets in branch2 that haven't been merged back into branch1 using the /candidate option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merge-command.md#2025-04-22_snippet_5\n\nLANGUAGE: cmd\nCODE:\n```\nc:\\projects>tf merge /candidate branch2 branch1 /recursive\n```\n\n----------------------------------------\n\nTITLE: Running Git Merge without Automatic Commit\nDESCRIPTION: Git command syntax used when the 'Commit changes after merge by default' setting is disabled in Visual Studio. This prevents automatic commit creation and fast-forward merges.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_15\n\nLANGUAGE: git\nCODE:\n```\ngit merge --no-commit --no-ff\n```\n\n----------------------------------------\n\nTITLE: Legacy Azure DevOps Deployment Configuration\nDESCRIPTION: Configures a deployment job for older versions of Azure DevOps, specifying a named pool instead of a VM image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\n  - deployment: DeploymentJob\n    pool:\n      name: <your-pool-name>\n    environment: $(environmentName)\n```\n\n----------------------------------------\n\nTITLE: Applying Process Template Changes using ConformProject Script (PowerShell)\nDESCRIPTION: This command executes the `conformproject.ps1` PowerShell script. The script automates applying modified process template XML files (located in `<process template folder>`) back to the specified `<project name>` within the target `<collection url>`. It uses `witadmin` commands internally to apply these changes, simplifying the process of fixing template errors identified during validation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-validate.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n.\\conformproject.ps1 \"<collection url>\" \"<project name>\" \"<process template folder>\" \n```\n\n----------------------------------------\n\nTITLE: Clearing NuGet Local Cache\nDESCRIPTION: NuGet command to clear all local caches before restoring packages to ensure fresh copies are downloaded from the feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_5\n\nLANGUAGE: command\nCODE:\n```\nnuget locals -clear all\n```\n\n----------------------------------------\n\nTITLE: Discarding Uncommitted Changes Using Git Checkout\nDESCRIPTION: Command to discard uncommitted changes to a file and revert it to its last committed version using Git checkout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/undo.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit checkout <file>\n```\n\n----------------------------------------\n\nTITLE: Installation Targets Configuration\nDESCRIPTION: Examples of configuring installation targets to specify where an extension can be installed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.VisualStudio.Services\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Items by Specific Board Swimlane in Azure DevOps Query\nDESCRIPTION: This query clause filters work items to show only those currently located in the 'Expedite' swimlane on the board. It depends on the Board Lane field being configured and populated.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_13\n\nLANGUAGE: azure-devops-query\nCODE:\n```\n`Board Lane = Expedite`\n```\n\n----------------------------------------\n\nTITLE: XML Example of WorkItemRevision Entity Type Definition\nDESCRIPTION: This XML snippet shows the key structure of the WorkItemRevision entity type, highlighting that WorkItemId and Revision are the key properties for this entity type. This information is useful when constructing filters for querying work item revisions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_11\n\nLANGUAGE: XML\nCODE:\n```\n<EntityType Name=\"WorkItemRevision\">\n  <Key>\n    <PropertyRef Name=\"WorkItemId\"/>\n    <PropertyRef Name=\"Revision\"/>\n  </Key>\n  [...]\n</EntityType>\n```\n\n----------------------------------------\n\nTITLE: Removing Locks from Files in TFVC\nDESCRIPTION: Example of removing all locks from a folder, making all files available for checkout and checkin by other users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/lock-command.md#2025-04-22_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf lock /lock:none $/src\n```\n\n----------------------------------------\n\nTITLE: Creating Python Virtual Environment\nDESCRIPTION: Command to create a new Python virtual environment for package isolation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/use-packages-from-pypi.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npython -m venv <VIRTUAL_ENVIRONMENT_NAME>\n```\n\n----------------------------------------\n\nTITLE: Using UNDER Operator for Area and Iteration Paths\nDESCRIPTION: Shows how to use the UNDER operator specifically for classification fields like Area Path and Iteration Path to find items within a subtree.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_36\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE [System.AreaPath] UNDER 'MyProject\\Server\\Administration'\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure DevOps API Version Parameter\nDESCRIPTION: Defines the API version parameter required for Azure DevOps REST API calls. Uses preview version 4.0-preview.2 which indicates this is a pre-release API version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version4-0-preview2.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\napi-version = 4.0-preview.2\n```\n\n----------------------------------------\n\nTITLE: Referencing Local Path for Source Code in Azure DevOps Pipelines\nDESCRIPTION: Demonstrates the format of the local path where source code files are downloaded on an Azure DevOps Pipeline agent. This path can be used in scripts or build tasks but has limitations for build numbers and version control tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-build-sources-directory.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nc:\\agent_work\\1\\s\n```\n\n----------------------------------------\n\nTITLE: Listing Azure DevOps Pipelines Audit Events in Markdown\nDESCRIPTION: A structured markdown table documenting all available audit events for Azure Pipelines, including event actions and their corresponding description messages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n### Pipelines events\n\n| Action | Description |\n|--------|-------------|\n| `Pipelines.DeploymentJobCompleted` | Deployment for run \"{RunName}\" on pipeline \"{PipelineName}\" to environment \"{EnvironmentName}\" {DeploymentResult}. |\n| `Pipelines.PipelineCreated` | Created pipeline \"{PipelineName}\" in project {ResolveProjectId:ProjectId}. |\n| `Pipelines.PipelineDeleted` | Deleted pipeline \"{PipelineName}\" in project {ResolveProjectId:ProjectId}. |\n| `Pipelines.PipelineModified` | Modified pipeline \"{PipelineName}\" in project {ResolveProjectId:ProjectId}. |\n| `Pipelines.PipelineRetentionSettingChanged` | Pipelines retention \"{SettingName}\" changed from {OldValue} to {NewValue} in {ProjectName} project. |\n| `Pipelines.ResourceAuthorizedForPipeline` | Successfully authorized {ResourceType} resource {ResourceId} for pipeline ID {PipelineId}. |\n| `Pipelines.ResourceAuthorizedForProject` | Successfully authorized {ResourceType} resource {ResourceId} for the project. |\n| `Pipelines.ResourceNotAuthorizedForPipeline` | Didn't authorize {ResourceType} resource {ResourceId} for pipeline ID {PipelineId}. The resource doesn't exist or the user doesn't have permission. |\n| `Pipelines.ResourceNotAuthorizedForProject` | Didn't authorize {ResourceType} resource {ResourceId} for the project. The resource doesn't exist or the user doesn't have permission. |\n| `Pipelines.ResourceUnauthorizedForPipeline` | Successfully unauthorized {ResourceType} resource {ResourceId} for pipeline ID {PipelineId}. |\n| `Pipelines.ResourceUnauthorizedForProject` | Successfully unauthorized {ResourceType} resource {ResourceId} for the project. |\n| `Pipelines.RunRetained` | Pipeline run \"{RunName}\" in project {ResolveProjectId:ProjectId} granted lease ID {RetentionLeaseId} to {RetentionOwnerId}. |\n| `Pipelines.RunUnretained` | Pipeline run \"{RunName}\" in project {ResolveProjectId:ProjectId} no longer retained. |\n| `Pipelines.ProjectSettings` | Pipelines setting \"{SettingName}\" changed from \"{OldValue}\" to \"{NewValue}\" in \"{ProjectName}\" project. |\n| `Pipelines.OAuthConfigurationCreated` | Created OAuth configuration '{ConfigName}' for '{SourceType}'. |\n| `Pipelines.OAuthConfigurationDeleted` | Updated OAuth configuration '{ConfigName}' for '{SourceType}'. |\n| `Pipelines.OAuthConfigurationUpdated` | Deleted OAuth configuration '{ConfigName}' for '{SourceType}'. |\n| `Pipelines.OrganizationSettings` | Pipelines setting \"{SettingName}\" changed from \"{OldValue}\" to \"{NewValue}\" at organization level. |\n```\n\n----------------------------------------\n\nTITLE: Building Azure Pipelines Agent Docker Image\nDESCRIPTION: Command to build the Docker image for the Azure Pipelines agent using the specified Dockerfile.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker build --tag \"azp-agent:linux\" --file \"./azp-agent-linux.dockerfile\" .\n```\n\n----------------------------------------\n\nTITLE: Including Help and Support Footer in Azure DevOps Documentation\nDESCRIPTION: This code snippet demonstrates how to include a help and support footer in Azure DevOps documentation. It uses a markdown include statement to insert the content of a separate file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/parallel-testing-vstest.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [help-and-support-footer](includes/help-and-support-footer.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Links and Lists in Azure DevOps Documentation\nDESCRIPTION: A structured markdown document containing links to various Azure DevOps configuration guides and best practices for sprint planning and team management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/team-velocity.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Required tasks\n\n- [**Define iteration paths (sprints) and configure team iterations**](../../organizations/settings/set-iteration-paths-sprints.md). Ensure sprints are of the same duration. \n- [**Define and estimate backlog items**](../../boards/backlogs/create-your-backlog.md#estimates). Items created from the team's backlog are automatically assigned to the current sprint and the team's default Area Path.  \n- **Update the status of backlog items when work starts and completes**. Only items with a State of *In Progress* or *Done* appear on the Velocity chart or widget.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### Recommended tasks\n\n- **[Define and size backlog items](../dashboards/team-velocity.md)** for minimized variability.\n- **Decide how your team [treats bugs](../../organizations/settings/show-bugs-on-backlog.md)**. If treated like requirements, bugs appear on the backlog and are included in the Velocity chart and forecasting.\n- **[Set your team's area path](../../organizations/settings/set-area-paths.md)**. The forecast tool uses these settings to include or exclude items in area paths under the team's default.\n```\n\n----------------------------------------\n\nTITLE: Inline Kubernetes Deployment Configuration\nDESCRIPTION: This example shows how to use the new inline configuration option in the Deploy to Kubernetes task, allowing users to specify the deployment configuration directly in the task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-146-update.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: KubernetesManifest@0\n  inputs:\n    action: 'deploy'\n    manifests: |\n      apiVersion: apps/v1\n      kind: Deployment\n      metadata:\n        name: nginx-deployment\n      spec:\n        replicas: 3\n```\n\n----------------------------------------\n\nTITLE: List Agent Pools using Azure CLI\nDESCRIPTION: Azure CLI command to list all agent pools with optional filtering parameters\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/pools-queues.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines pool list [--action {manage, none, use}]\n                       [--detect {false, true}]\n                       [--org]\n                       [--pool-name]\n                       [--pool-type {automation, deployment}]\n```\n\n----------------------------------------\n\nTITLE: Field Definition Uniqueness Fix\nDESCRIPTION: Demonstrates how to correct duplicate field names by ensuring unique friendly names across field definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_49\n\nLANGUAGE: xml\nCODE:\n```\n  <FIELD name=\"Foo\" refname=\"MyCompany.CustomFields.Foo\" type=\"String\" reportable=\"dimension\" />\n  <FIELD name=\"Foo\" refname=\"MyCompany.CustomFields.Bar\" type=\"String\" reportable=\"dimension\" />\n```\n\nLANGUAGE: xml\nCODE:\n```\n  <FIELD name=\"Foo\" refname=\"MyCompany.CustomFields.Foo\" type=\"String\" reportable=\"dimension\" />\n  <FIELD name=\"Bar\" refname=\"MyCompany.CustomFields.Bar\" type=\"String\" reportable=\"dimension\" />\n```\n\n----------------------------------------\n\nTITLE: Publishing Extension with a Service Principal using TFX CLI\nDESCRIPTION: Command to publish an Azure DevOps extension using TFX CLI with a Microsoft Entra token for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/command-line.md#2025-04-22_snippet_2\n\nLANGUAGE: Command\nCODE:\n```\ntfx extension publish --publisher my-publisher --vsix my-publisher.my-extension-1.0.0.vsix --auth-type pat -t <ENTRA_TOKEN>\n```\n\n----------------------------------------\n\nTITLE: Migrating NuGet Packages from Public MyGet Feed to Azure Artifacts\nDESCRIPTION: PowerShell command to migrate NuGet packages from a public MyGet feed to an Azure Artifacts feed. This only requires destination credentials since the source feed is publicly accessible.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/migrate-packages.md#2025-04-22_snippet_3\n\nLANGUAGE: PowerShell\nCODE:\n```\nMove-MyGetNuGetPackages -SourceIndexUrl '<MYGET_SOURCE_URL>' -DestinationIndexUrl '<ARTIFACTS_FEED_SOURCE_URL>' -DestinationPAT '<AZURE_DEVOPS_PAT>' -DestinationFeedName '<ARTIFACTS_FEED_NAME>' -Verbose\n```\n\n----------------------------------------\n\nTITLE: Finding Workspace Name Information in Shell\nDESCRIPTION: Command to retrieve workspace names for a specific owner across all computers, using the owner ID obtained from the previous command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nc:\\projects>tf workspaces /owner:<workspace-owner> /computer:* /collection:`<team-project-collection-url>`\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Fabric Profile Configuration\nDESCRIPTION: Azure CLI command and JSON configuration for setting up images in a Managed DevOps Pool using a fabric profile.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-images.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --fabric-profile fabric-profile.json\n   # other parameters omitted for space\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vmss\": {\n    \"sku\": {...},\n    \"images\": [\n        {\n            \"resourceId\": \"/subscriptions/subscription_id_placeholder/Providers/Microsoft.Compute/Locations/eastus/publishers/canonical/artifacttypes/vmimage/offers/0001-com-ubuntu-server-focal/skus/20_04-lts-gen2/versions/latest\",\n            \"aliases\": [\n                \"ubuntu-20.04-gen2\"\n            ],\n            \"buffer\": \"0\"\n        },\n        {\n            \"buffer\": \"100\",\n            \"wellKnownImageName\": \"windows-2022\"\n        },\n        {\n            \"buffer\": \"0\",\n            \"wellKnownImageName\": \"ubuntu-22.04\"\n        }\n    ],\n    \"osProfile\": {...},\n    \"storageProfile\": {...}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Remove Label Recursively from Collection\nDESCRIPTION: Example demonstrating how to recursively remove a label named 'Beta1' from all files and folders in a specific collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/unlabel-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf unlabel Beta1 $/ /collection:https://myserver:8080/tfs/DefaultCollection /recursive\n```\n\n----------------------------------------\n\nTITLE: Creating Publisher with Azure DevOps CLI\nDESCRIPTION: This command creates a new publisher for Azure DevOps extensions using the Cross-platform CLI. The user needs to provide the publisher name, display name, and description when prompted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/command-line-create-publisher.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntfx extension publisher create\n```\n\n----------------------------------------\n\nTITLE: Query Pipeline Duration by ID\nDESCRIPTION: PowerBI query to get pipeline duration trend using pipeline ID instead of name for more stable reporting when pipelines are renamed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration-trend.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"PipelineId eq {pipelineId} \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and (SucceededCount eq 1 or PartiallySucceededCount eq 1) \"\n        &\") \"\n        &\"/compute( \"\n            &\"percentile_cont(TotalDurationSeconds, 0.8,CompletedDateSK) as Duration80thPercentileInSeconds) \"\n                &\"/groupby( \"\n                &\"(Duration80thPercentileInSeconds, CompletedOn/Date)) \"\n            &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Placeholder Example for Azure DevOps Build Events in Trello\nDESCRIPTION: Demonstration of using placeholders to create dynamic Trello card names for build events in Azure DevOps. This example shows how to include build ID and finish time in the card name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/services/trello.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nBuild {{build.id}} completed at {{build.finishTime}}\n```\n\n----------------------------------------\n\nTITLE: Deleting Project Dashboard Permission Identifier (Plaintext)\nDESCRIPTION: The identifier (`DashboardsPrivileges, Delete`) represents the permission required to delete a specific project-level dashboard in Azure DevOps. This applies only to dashboards created at the project scope (Azure DevOps Services only).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_23\n\nLANGUAGE: plaintext\nCODE:\n```\nDashboardsPrivileges, Delete\n```\n\n----------------------------------------\n\nTITLE: Deleting a Git Repository with Azure DevOps CLI\nDESCRIPTION: Command for deleting an Azure DevOps Git repository using the Azure CLI. This command requires the repository ID parameter and includes optional parameters for organization, project, and confirmation settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/delete-existing-repo.md#2025-04-22_snippet_0\n\nLANGUAGE: CLI\nCODE:\n```\naz repos delete --id\n                     [--detect {false, true}]\n                     [--org]\n                     [--project]\n                     [--subscription]\n                     [--yes] \n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Branch Management\nDESCRIPTION: Namespace identifier for managing branches in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_37\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, ManageBranch\n```\n\n----------------------------------------\n\nTITLE: Importing Azure DevOps Extension SDK using ES Modules in JavaScript\nDESCRIPTION: Demonstrates how to import the Azure DevOps Extension SDK using ES module syntax. This new approach provides performance improvements and reduces application size.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/general/sprint-230-update.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as SDK from 'azure-devops-extension-sdk';\n// Use the module here\n```\n\n----------------------------------------\n\nTITLE: Example of Deleting a Team in Azure DevOps\nDESCRIPTION: Practical example showing how to delete a team by its ID in a specific project. This example includes the confirmation prompt that appears when executing the command without the --yes parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/rename-remove-team.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team delete --id 5385556a-254d-4ad4-bd11-71955e3a7070 --project \"Fabrikam Fiber\"\nAre you sure you want to delete this team? (y/n): y\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Git Push Event in Azure DevOps\nDESCRIPTION: This JSON payload represents a Git push event in Azure DevOps. It includes details about the commit, repository, and user who performed the push.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-0000000000000\",\n  \"eventType\": \"git.push\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Jamal Hartnett pushed updates to branch master of repository Fabrikam-Fiber-Git.\",\n    \"html\": \"Jamal Hartnett pushed updates to branch master of repository Fabrikam-Fiber-Git.\",\n    \"markdown\": \"Jamal Hartnett pushed updates to branch `master` of repository `Fabrikam-Fiber-Git`.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Jamal Hartnett pushed 1 commit to branch master of repository Fabrikam-Fiber-Git.\\n - Fixed bug in web.config file 33b55f7c\",\n    \"html\": \"Jamal Hartnett pushed 1 commit to branch <a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_git/Fabrikam-Fiber-Git/#version=GBmaster\\\">master</a> of repository <a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_git/Fabrikam-Fiber-Git/\\\">Fabrikam-Fiber-Git</a>.\\n<ul>\\n- Fixed bug in web.config file <a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_git/Fabrikam-Fiber-Git/commit/00000000-0000-0000-0000-000000000000\\\">33b55f7c</a>\\n</ul>\",\n    \"markdown\": \"Jamal Hartnett pushed 1 commit to branch [master](https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_git/Fabrikam-Fiber-Git/#version=GBmaster) of repository [Fabrikam-Fiber-Git](https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_git/Fabrikam-Fiber-Git/).\\n* Fixed bug in web.config file [33b55f7c](https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_git/Fabrikam-Fiber-Git/commit/00000000-0000-0000-0000-000000000000)\"\n  },\n  \"resource\": {\n    \"commits\": [\n      {\n        \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n        \"author\": {\n          \"name\": \"Jamal Hartnett\",\n          \"email\": \"fabrikamfiber4@hotmail.com\",\n          \"date\": \"2024-02-25T19:01:00Z\"\n        },\n        \"committer\": {\n          \"name\": \"Jamal Hartnett\",\n          \"email\": \"fabrikamfiber4@hotmail.com\",\n          \"date\": \"2024-02-25T19:01:00Z\"\n        },\n        \"comment\": \"Fixed bug in web.config file\",\n        \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_git/Fabrikam-Fiber-Git/commit/00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"refUpdates\": [\n      {\n        \"name\": \"refs/heads/main\",\n        \"oldObjectId\": \"aad331d8d3b131fa9ae03cf5e53965b51942618a\",\n        \"newObjectId\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"repository\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"name\": \"Fabrikam-Fiber-Git\",\n      \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/repos/git/repositories/abcd-1234-efgh-5678\",\n      \"project\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Fabrikam-Fiber-Git\",\n        \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/projects/abcd-1234-efgh-5678\",\n        \"state\": \"wellFormed\"\n      },\n      \"defaultBranch\": \"refs/heads/main\",\n      \"remoteUrl\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_git/Fabrikam-Fiber-Git\"\n    },\n    \"pushedBy\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000@Live.com\",\n      \"displayName\": \"Jamal Hartnett\",\n      \"uniqueName\": \"Windows Live ID\\\\fabrikamfiber4@hotmail.com\"\n    },\n    \"pushId\": 14,\n    \"date\": \"2014-05-02T19:17:13.3309587Z\",\n    \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/repos/git/repositories/abcd-1234-efgh-5678/pushes/14\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:27.0379153Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing and Importing AzureArtifactsPackageMigration PowerShell Module\nDESCRIPTION: Commands to install the AzureArtifactsPackageMigration PowerShell module and import it into the current session. This module is essential for the NuGet package migration process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/migrate-packages.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nInstall-Module -Name AzureArtifactsPackageMigration -Scope CurrentUser -Force\nImport-Module -Name AzureArtifactsPackageMigration\n```\n\n----------------------------------------\n\nTITLE: Opening Host Dialog in Azure DevOps Extension using JavaScript\nDESCRIPTION: Shows how to open a dialog window in an Azure DevOps extension using the VSS.ServiceIds.Dialog service. The code gets the dialog service, builds a contribution ID from extension context, and configures dialog options including title, width and height before opening the dialog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/extend/reference/samples/client-services/HostDialogService.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n    VSS.getService(VSS.ServiceIds.Dialog).then(function(dialogService) {\n        var extensionCtx = VSS.getExtensionContext();\n        // Build absolute contribution ID for dialogContent\n        var contributionId = extensionCtx.publisherId + \".\" + extensionCtx.extensionId + \".dialogContent\";\n\n        // Show dialog\n        var dialogOptions = {\n            title: \"My Dialog Title\",\n            width: 800,\n            height: 600\n        };\n\n        dialogService.openDialog(contributionId, dialogOptions);\n    });\n```\n\n----------------------------------------\n\nTITLE: Listing View Permissions in Azure DevOps with Markdown\nDESCRIPTION: This markdown snippet lists various view permissions in Azure DevOps, including analytics, audit log, builds, releases, and system information. It uses a moniker range to specify the applicable Azure DevOps versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-lookup-guide.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<=azure-devops\"\n- [View analytics (Project)](permissions.md#view-analytics-permission)\n- [View audit log (Collection)](permissions.md#view-audit-log-permission)\n- [View build resources (Collection)](change-organization-collection-level-permissions.md)\n- [View builds (Object)](../../pipelines/policies/permissions.md#pipeline-permissions)\n- [View release pipeline (Object)](../../pipelines/policies/permissions.md#release-pipeline-permissions)\n- [View releases (Object)](../../pipelines/policies/permissions.md#release-pipeline-permissions)\n- [View instance-level information (Collection)](change-organization-collection-level-permissions.md)\n- [View project-level information (Project)](change-project-level-permissions.md)\n- [View shared Analytics views (Object)](../../report/powerbi/analytics-security.md)\n- [View system synchronization information (Collection)](change-organization-collection-level-permissions.md)\n- [View test runs (Project)](change-project-level-permissions.md)\n- [View work items in this node (Area Path, Object)](set-permissions-access-work-tracking.md#set-permissions-area-path)\n- [View permissions for this node (Area Path, Object)](set-permissions-access-work-tracking.md#set-permissions-area-path)\n- [View permissions for this node (Iteration Path, Object)](set-permissions-access-work-tracking.md#set-permissions-area-path)\n- [View system synchronization information (Collection)](change-organization-collection-level-permissions.md)\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Simplified Git Rebase from Current Branch\nDESCRIPTION: Simplified rebase command when the current local branch is the target branch. This merges changes from the specified source branch into your current branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pulling.md#2025-04-22_snippet_5\n\nLANGUAGE: console\nCODE:\n```\ngit rebase <source branch name>\n```\n\n----------------------------------------\n\nTITLE: Using witadmin Commands for Field Management in Azure DevOps\nDESCRIPTION: Syntax for witadmin commands to change field attributes, delete fields, or list fields in a project collection. These commands allow administrators to modify field properties such as data type, friendly name, reporting attributes, and synchronization settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nwitadmin changefield /collection:CollectionURL /n:RefName   [/name:NewName]    [/syncnamechanges:true | false]   [/reportingname:ReportingName]    [/reportingrefname:ReportingRefName]   [/reportingtype:Type]   [/reportingformula:Formula]   [/type:PlainText | HTML]   [/noprompt]  \n\nwitadmin deletefield /collection:CollectionURL /n:RefName [/noprompt]  \n  \nwitadmin listfields /collection:CollectionURL /n:RefName [/unused]  \n```\n\n----------------------------------------\n\nTITLE: Portfolio Backlog Parent-Child Configuration\nDESCRIPTION: Example of incorrect and corrected portfolio backlog parent-child relationships in process configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_31\n\nLANGUAGE: xml\nCODE:\n```\n  <PortfolioBacklog category=\"Microsoft.EpicCategory\" parent=\"Microsoft.InitiativeCategory\" pluralName=\"Epics\" singularName=\"Epic\">\n    ...\n  </PortfolioBacklog>\n\n  <PortfolioBacklog category=\"Microsoft.FeatureCategory\" parent=\"Microsoft.EpicCategory\" pluralName=\"Features\" singularName=\"Feature\">\n    ...\n  </PortfolioBacklog>\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Type and State in OData\nDESCRIPTION: This query demonstrates how to use a filter clause to retrieve only Feature work items that are in the 'In Progress' state. It uses the $filter parameter to specify criteria and $select to return specific fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam Fiber/_odata/v4.0-preview/WorkItems?$filter=WorkItemType eq 'Feature' and State eq 'In Progress'&$select=WorkItemId,Title,AssignedTo,State\n```\n\n----------------------------------------\n\nTITLE: Adding User to Contributors Security Group in Azure DevOps CLI\nDESCRIPTION: Command to add a user to the project-level Contributors security group in Azure DevOps using their email address.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/add-organization-users.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group membership --group-id vssgp.Uy0xLTktMTU1MTM3NDI0NS0xMTM1NzQ1NzUzLTExNDI0NTQwOTQtMjQ4MjkwODAwNS0xNDU4NjAwODE1LTEtMTY5NTI2NTAyNi00MjM0Mzc1NS0yMTY5ODM4OTczLTI0NDk3NzU5NDE --member-id contoso@contoso.com\n```\n\n----------------------------------------\n\nTITLE: Defining ResolvedDate Field in Work Item Type XML Definition\nDESCRIPTION: XML snippet demonstrating how to include the ResolvedDate field within the FIELDS definition of a work item type when transitioning to a Resolved state. The server automatically populates this date field from the system clock when the workflow transition occurs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-date-or-current-iteration.md#2025-04-22_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD refname=\"Microsoft.VSTS.Common.ResolvedDate\" />  \n   <SERVERDEFAULT from=\"clock\"  />  \n</FIELD >  \n```\n\n----------------------------------------\n\nTITLE: Delivery Options for Custom Team/Group Subscriptions\nDESCRIPTION: Outlines the delivery options available when configuring a custom notification subscription for a team or group in Azure DevOps. These options determine the specific recipients based on roles, team settings, custom emails, team membership, or SOAP integration. Note that the default delivery setting of each member, including nested groups, is honored.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/concepts-email-recipients.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n* **Members of team by role:** recipients are members of the team or group that have one of the selected roles (for example, work item assignee)\n* **Team preference:** recipients are determined by the delivery setting of the team or group (_Do not deliver_, _preferred email address_, or _members of team_) \n* **Custom email address:** recipient is the specified email address\n* **Members of team:** recipients are all members of the team or group, except members who have opted out of the subscription. \n* **SOAP:** similar to API Management, recipients are specified by adding their email addresses (subscribing) to the SOAP service.\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Release Deployment Approval Completed Event Payload\nDESCRIPTION: Sample JSON payload for a completed deployment approval event in Azure DevOps. Shows the structure of the event notification when a pre-deployment approval is completed, including approval details, environment information, and release metadata.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000106acb39-c61e-4efd-995e-a9f5e71ba3cd\",\n  \"eventType\": \"ms.azure-devops-release.deployment-approval-completed-event\",\n  \"publisherId\": \"rm\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Pre Deployment approval for deployment of release Release-1 on environment Dev Succeeded.\",\n    \"html\": \"Pre Deployment approval for release <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1'>Release-1</a> on environment <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/definitions/1'>Dev</a> Succeeded.\",\n    \"markdown\": \"Pre Deployment approval for deployment of release [Release-1](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1) on environment [Dev](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/definitions/1) Succeeded.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Pre Deployment approval for release Release-1 on environment Dev Succeeded.\\r\\nApprover: Chuck Reinhart\\r\\nComment: Approving\",\n    \"html\": \"Pre Deployment approval for release <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1'>Release-1</a> on environment <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/definitions/1'>Dev</a> Succeeded.<br>Approver: Chuck Reinhart<br>Comment: Approving\",\n    \"markdown\": \"Pre Deployment approval for release [Release-1](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1) on environment [Dev](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/definitions/1) Succeeded.\\r\\nApprover: Chuck Reinhart\\r\\nComment: Approving\"\n  },\n  \"resource\": {\n    \"approval\": {\n      \"id\": 1,\n      \"revision\": 1,\n      \"approvalType\": \"preDeploy\",\n      \"status\": \"approved\",\n      \"createdOn\": \"2024-12-02T12:21:13.8866607Z\",\n      \"modifiedOn\": \"2024-12-02T12:21:13.8866607Z\",\n      \"comments\": \"Approving\",\n      \"isAutomated\": false,\n      \"isNotificationOn\": false,\n      \"trialNumber\": 1,\n      \"attempt\": 1,\n      \"approver\": {\n        \"displayName\": \"Chuck Reinhart\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"environment\": {\n      \"id\": 1,\n      \"name\": \"Dev\"\n    },\n    \"release\": {\n      \"id\": 1,\n      \"name\": \"Release-1\",\n      \"releaseDefinition\": {\n        \"id\": 1,\n        \"name\": \"Release Definition\"\n      },\n      \"project\": {\n        \"id\": \"project-id\",\n        \"name\": \"project-name\"\n      }\n    }\n  },\n  \"createdDate\": \"2024-12-02T12:21:13.8866607Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Requirements Table (Current Version)\nDESCRIPTION: Markdown table defining the access requirements for current Azure DevOps version, including project access, permissions, access levels, and iteration requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/prerequisites.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Project access** | [Project member](../../organizations/security/add-users-team-project.md). |\n| **Permissions** | - Member of the **Contributors** or **Project Administrators** security group. <br> - To view or modify work items: **View work items in this node** and **Edit work items in this node** permissions set to **Allow**. By default, the **Contributors** group has this permission set to **Allow**. For more information, see [Set work tracking permissions](../../organizations/security/set-permissions-access-work-tracking.md). |\n| **Access levels** | To add or modify work items: At least [**Basic** access](../../organizations/security/stakeholder-access.md). Users with **Stakeholder** access for public projects have full access to backlog and board features, like users with **Basic** access. For more information, see [Stakeholder access quick reference](../../organizations/security/stakeholder-access.md). |\n| **Defined iterations** | To use the **Planning** pane: Ensure your team administrator [defined iteration (sprint) paths and configure team iterations](../../organizations/settings/set-iteration-paths-sprints.md). |\n```\n\n----------------------------------------\n\nTITLE: Listing Work Item Relation Types in Table Format - Azure DevOps CLI - azurecli\nDESCRIPTION: This command lists all defined work item link types for the specified Azure DevOps organization and displays them in table format. The --org parameter sets the organization name, while --output table chooses a human-readable table output. The Azure DevOps CLI extension must be installed. Organization must be accessible; results include name, reference name, enabled status, and usage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/link-type-reference.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item relation list-type --org fabrikam --output table\nName                  ReferenceName                                                Enabled    Usage\n--------------------  -----------------------------------------------------------  ---------  ------------\nProduces For          System.LinkTypes.Remote.Dependency-Forward                   True       workItemLink\nConsumes From         System.LinkTypes.Remote.Dependency-Reverse                   True       workItemLink\nDuplicate             System.LinkTypes.Duplicate-Forward                           True       workItemLink\nDuplicate Of          System.LinkTypes.Duplicate-Reverse                           True       workItemLink\nReferenced By         Microsoft.VSTS.TestCase.SharedParameterReferencedBy-Forward  True       workItemLink\nReferences            Microsoft.VSTS.TestCase.SharedParameterReferencedBy-Reverse  True       workItemLink\nTested By             Microsoft.VSTS.Common.TestedBy-Forward                       True       workItemLink\nTests                 Microsoft.VSTS.Common.TestedBy-Reverse                       True       workItemLink\nTest Case             Microsoft.VSTS.TestCase.SharedStepReferencedBy-Forward       True       workItemLink\nShared Steps          Microsoft.VSTS.TestCase.SharedStepReferencedBy-Reverse       True       workItemLink\nSuccessor             System.LinkTypes.Dependency-Forward                          True       workItemLink\nPredecessor           System.LinkTypes.Dependency-Reverse                          True       workItemLink\nChild                 System.LinkTypes.Hierarchy-Forward                           True       workItemLink\nParent                System.LinkTypes.Hierarchy-Reverse                           True       workItemLink\nRelated               System.LinkTypes.Related                                     True       workItemLink\nRemote Related        System.LinkTypes.Remote.Related                              True       workItemLink\nAttached File         AttachedFile                                                 True       resourceLink\nHyperlink             Hyperlink                                                    True       resourceLink\nArtifact Link         ArtifactLink                                                 True       resourceLink\n```\n\n----------------------------------------\n\nTITLE: MSA Authentication Domain URLs\nDESCRIPTION: Domain URLs required for authenticating Azure DevOps organizations using Microsoft Account (MSA).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://live.com \nhttps://login.live.com \n```\n\n----------------------------------------\n\nTITLE: Creating a Managed DevOps Pool using Azure CLI\nDESCRIPTION: This command creates a new Managed DevOps Pool using the 'az mdp pool create' command. It specifies the pool name, resource group, location, and various configuration options including maximum concurrency and profile settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create -n $POOL_NAME \\\n   -g $RESOURCE_GROUP_NAME \\\n   -l $REGION \\\n   --devcenter-project-id $DEVCPID \\\n   --maximum-concurrency 1 \\\n   --agent-profile agent-profile.json \\\n   --fabric-profile fabric-profile.json \\\n   --organization-profile organization-profile.json\n```\n\n----------------------------------------\n\nTITLE: Showing Namespace Permission Details with Azure DevOps CLI\nDESCRIPTION: Command syntax for displaying details of permissions available in a security namespace. The namespace-id parameter specifies which namespace to examine.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission namespace show --namespace-id <NAMESPACE_ID>\n```\n\n----------------------------------------\n\nTITLE: Parametrized Template Branch Selection at Queue-Time\nDESCRIPTION: YAML pipeline that allows selecting which branch of a template repository to use at build queue-time through a parameter. This enables extending templates from different branches without changing the pipeline code.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-212-update.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n  - name: branch\n    default: main\n\nresources:\n  repositories:\n    - repository: templates\n      type: git\n      name: Templates\n      ref: ${{ parameters.branch }}\n\nextends:\n  template: template.yml@templates\n  parameters:\n    steps:\n      - script: echo ./build.sh\n      - script: echo ./test.sh\n```\n\n----------------------------------------\n\nTITLE: Running Published .NET Executable (Shell)\nDESCRIPTION: These commands navigate to the directory where the project was published (specifically for a Release build targeting net8.0 on win-x64) and then execute the generated application executable (`ADOGenerator.exe`). This runs the self-contained application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/demo-gen/configure.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncd src/ADOGenerator/bin/Release/net8.0/win-x64/publish\n./ADOGenerator.exe\n```\n\n----------------------------------------\n\nTITLE: Creating Work Items Count Measure in Power BI using DAX\nDESCRIPTION: This DAX measure calculates the count of distinct work items based on the last day entry for each work item. It uses the CALCULATE, COUNTROWS, and LASTDATE functions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_0\n\nLANGUAGE: DAX\nCODE:\n```\nWork Items Count=CALCULATE(COUNTROWS ('View Name'),LASTDATE ('View Name'[Date]))\n```\n\n----------------------------------------\n\nTITLE: Listing Iterations for Service Delivery Team Example\nDESCRIPTION: This example shows how to list the iteration paths for the 'Service Delivery' team in the 'Fabrikam Fiber' project using the Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration team list  --team \"Service Delivery\"  --project \"Fabrikam Fiber\" --output table\n```\n\n----------------------------------------\n\nTITLE: Process Object Limits Table for On-premises\nDESCRIPTION: Markdown table showing maximum limits for various process objects in on-premises Azure DevOps, comparing Inheritance and On-premises XML process models.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/object-limits.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Object                                              | Inheritance | On-premises XML |\n| --------------------------------------------------- | ----------: | ---------: |\n| Number of processes you can have in an organization |          64 |         64 |\n| Work item types defined for a process               |          64 |         64 |\n| Fields defined for a collection                     |        8192 |       1024 |\n```\n\n----------------------------------------\n\nTITLE: PlainText Field Type Operators in Azure DevOps Queries\nDESCRIPTION: Operators supported for PlainText fields in Azure DevOps queries. PlainText fields support multi-line text strings for long descriptions and are indexed for full-text search.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n`Contains Words`, `Does Not Contain Words`, `Is Empty`, `Is Not Empty`\n```\n\n----------------------------------------\n\nTITLE: Publishing a PowerShell Module with Verbose Output\nDESCRIPTION: Example of publishing a PowerShell module with verbose output showing the full process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_12\n\nLANGUAGE: powershell\nCODE:\n```\nPS C:\\AzureDevOps\\Demos\\PowerShellDemo> Publish-PSResource -Path .\\scripts\\ -Repository FabrikamFiberFeed -Credential $credentials -ApiKey az -verbose\nVERBOSE: Performing the operation \"Publish-PSResource\" on target \"Publish resource\n'C:\\AzureDevOps\\Demos\\PowerShellDemo\\scripts\\' from the machine\".\nVERBOSE: The newly created nuspec is:\nC:\\Users\\xxxx\\AppData\\Local\\Temp\\xxxxxxxxx\\PowerShell-Demo.nuspec\nVERBOSE: credential successfully read from vault and set for repository: FabrikamFiberFeed\nVERBOSE: Successfully packed the resource into a .nupkg\nVERBOSE: Successfully published the resource to\n'https://pkgs.dev.azure.com/ramiMSFTDevOps/DemoProject/_packaging/FabrikamFiberFeed/nuget/v3/index.json'\nVERBOSE: Deleting temporary directory 'C:\\Users\\xxxx\\AppData\\Local\\Temp\\xxxxxxx'\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Page for Azure DevOps Extension Action\nDESCRIPTION: This HTML snippet creates a basic page to handle the custom action. The content of this page is not visible to the end user and serves as a background handler for the contributed menu item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-action-js.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Action Sample</title>\n</head>\n<body>\n    <div>\n        The end user doesn't see the content on this page.\n        It is only in the background to handle the contributed menu item being selected.\n    </div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Response from Service Hook Subscription Creation in JavaScript\nDESCRIPTION: The JSON response returned when successfully creating a service hook subscription. It includes the subscription ID, URL, and all configured parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/create-subscription.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"id\": \"aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e\",\n    \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/hooks/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e\",\n    \"publisherId\": \"tfs\",\n    \"eventType\": \"build.complete\",\n    \"resourceVersion\": \"1.0\",\n    \"consumerId\": \"webHooks\",\n    \"consumerActionId\": \"httpRequest\",\n    \"createdBy\": {\n        \"id\": \"00ca946b-2fe9-4f2a-ae2f-40d5c48001bc\"\n    },\n    \"createdDate\": \"2014-03-28T16:10:06.523Z\",\n    \"modifiedBy\": {\n        \"id\": \"1c4978ae-7cc9-4efa-8649-5547304a8438\"\n    },\n    \"modifiedDate\": \"2014-04-25T18:15:26.053Z\",\n    \"publisherInputs\": {\n        \"buildStatus\": \"failed\",\n        \"definitionName\": \"WebSite.CI\",\n        \"hostId\": \"17f27955-99bb-4861-9550-f2c669d64fc9\",\n        \"projectId\": \"56479caf-1eeb-4bca-86ab-aaa6f29399d9\",\n        \"tfsSubscriptionId\": \"29cde8b4-f37e-4ef9-a6d4-d57d526d82cc\"\n    },\n    \"consumerInputs\": {\n        \"url\": \"http://myservice/event\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Install Git on Ubuntu Linux\nDESCRIPTION: Installs Git on Ubuntu Linux using apt package manager.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-cmdline.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install git\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Settings API Endpoint\nDESCRIPTION: REST API endpoint for retrieving extension settings from the Data Storage Service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_9\n\nLANGUAGE: httprequest\nCODE:\n```\nGET _apis/ExtensionManagement/InstalledExtensions/{publisherName}/{extensionName}/Data/Scopes/User/Me/Collections/%24settings/Documents\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Check In\nDESCRIPTION: Namespace identifier for check-in permissions in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_32\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, Checkin\n```\n\n----------------------------------------\n\nTITLE: Changing Field Name with witadmin for TF402556 Error Resolution\nDESCRIPTION: Command to address the TF402556 error by changing a field's name using the witadmin changefield command, which helps align fields with Azure DevOps Services requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-validate.md#2025-04-22_snippet_7\n\nLANGUAGE: cmdline\nCODE:\n```\nwitadmin changefield /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:fieldname /name:newname\n```\n\n----------------------------------------\n\nTITLE: Deleting a TFVC Workspace with Owner Information in Shell\nDESCRIPTION: Command to delete a TFVC workspace using both the workspace name and owner information retrieved from previous commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nc:\\projects>tf workspace /delete <workspace-name>;<workspace-owner> /collection:<team-project-collection-url>`\n```\n\n----------------------------------------\n\nTITLE: Git Commands for Repository Management in Markdown\nDESCRIPTION: Demonstrates essential Git commands referenced in the best practices guide, including committing, pushing, and rebasing. These commands are mentioned in the context of maintaining a clean repository history.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/remove-binaries.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n* Do remember to push your changes. `Commit != Checkin`. `(Commit + Push) == Checkin`.\n```\n\nLANGUAGE: markdown\nCODE:\n```\nYou can do this by getting your local repository in order using the `git rebase` command, then using the `git push --force` command to overwrite the server repository with your local repository.\n```\n\n----------------------------------------\n\nTITLE: Querying Weekly Bug Trends (Friday Snapshots) in Power BI\nDESCRIPTION: This Power BI query retrieves bug trend data with weekly snapshots taken every Friday. This reduces the data volume and improves query performance while still providing meaningful trend information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-bugtrend.md#2025-04-22_snippet_4\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \"\n        &\"$apply=filter( \"\n            &\"WorkItemType eq 'Bug' \"\n            &\"and State ne 'Closed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and DateValue ge {startdate} \"\n            &\"and Date/DayName eq 'Friday'  \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(DateValue,State,WorkItemType,Priority,Severity,Area/AreaPath,Iteration/IterationPath,AreaSK), \"\n            &\"aggregate($count as Count) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Windows Agent Working Directory Configuration\nDESCRIPTION: YAML configuration for specifying a custom work folder on a Windows agent's data disk using WorkFolder demand.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-storage.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: fabrikam-managed-pool # Name of Managed DevOps Pool\n  demands:\n  - WorkFolder -equals f:\\custom-work-folder # Windows agent example\n```\n\n----------------------------------------\n\nTITLE: Defining an Implicit Stage with Multiple Jobs in Azure Pipelines\nDESCRIPTION: A pipeline example with one implicit stage and multiple explicit jobs. The jobs run two separate bash commands and don't require explicit stage definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# this pipeline has one implicit stage\njobs:\n- job: A\n  steps:\n  - bash: echo \"A\"\n\n- job: B\n  steps:\n  - bash: echo \"B\"\n```\n\n----------------------------------------\n\nTITLE: Multiple Organizations ARM Template Configuration\nDESCRIPTION: ARM template configuration for setting up multiple organizations with different project access and parallelism settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"organizationProfile\": {\n    \"organizations\": [\n        {\n            \"url\": \"https://dev.azure.com/fabrikam-tailspin\",\n            \"projects\": [],\n            \"parallelism\": 2\n        },\n        {\n            \"url\": \"https://dev.azure.com/fabrikam-prime\",\n            \"projects\": [ \"fabrikam-dev\", \"fabrikam-test\" ],\n            \"parallelism\": 2\n        }\n    ],\n    \"permissionProfile\": {\n        \"kind\": \"CreatorOnly\"\n    },\n    \"kind\": \"AzureDevOps\"\n}\n```\n\n----------------------------------------\n\nTITLE: Counting State Changes with DAX in Azure DevOps Analytics\nDESCRIPTION: This calculation counts the number of state changes that have occurred for a work item up to each date point. It filters rows where 'State Changed' is true and counts only those that occurred on or before the current date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_11\n\nLANGUAGE: DAX\nCODE:\n```\nState Change Count = \nCALCULATE (\n    COUNTROWS ( 'View Name' ),\n    ALLEXCEPT ( 'View Name', 'View Name'[Work Item Id] ),\n    'View Name'[Date] <= EARLIER ( 'View Name'[Date] ),\n    'View Name'[State Changed]\n) + 0\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Completion Percentage with OData for Azure DevOps\nDESCRIPTION: This query retrieves requirements (User Stories, Product Backlog Items, etc.) from the specified iteration and area, and calculates the percentage of work completed based on the sum of completed and remaining work hours. It works specifically with the Agile process that defines 'Remaining Work' and 'Completed Work' fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerBI M\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems? \n    $filter=(\n        IterationSK eq {iterationSK}\n        and AreaSK eq {areaSK}\n        and Processes/any(p:p/BacklogType eq 'RequirementBacklog') \n        and Processes/all(p:p/IsBugType eq false)\n    )\n    &$expand=Descendants(\n        $apply=filter(\n            CompletedWork ne null \n            or RemainingWork ne null\n        )\n        /aggregate(\n            iif(CompletedWork ne null, CompletedWork, 0) with sum as SumCompletedWork, \n            iif(RemainingWork ne null, RemainingWork, 0) with sum as SumRemainingWork\n        )/compute(\n            (SumCompletedWork add SumRemainingWork) as TotalWork, \n            SumCompletedWork as SumCompleted\n        )/compute(\n            iif(TotalWork gt 0,(SumCompleted div cast(TotalWork, Edm.Double) mul 100), 0) as PercCompletedWork\n        )\n)&$select=WorkItemId, Title\", null, [Implementation=\"2.0\"]),\n    #\"Expanded Descendants\" = Table.ExpandTableColumn(Source, \"Descendants\", {\"SumCompletedWork\", \"SumRemainingWork\", \"TotalWork\", \"SumCompleted\", \"PercCompletedWork\"}, {\"Descendants.SumCompletedWork\", \"Descendants.SumRemainingWork\", \"Descendants.TotalWork\", \"Descendants.SumCompleted\", \"Descendants.PercCompletedWork\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Descendants\",{{\"Descendants.SumCompletedWork\", type number}, {\"Descendants.SumRemainingWork\", type number}, {\"Descendants.TotalWork\", type number}, {\"Descendants.SumCompleted\", type number}, {\"Descendants.PercCompletedWork\", type number}})\nin\n    #\"Changed Type\"\n```\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems? \n$filter=(\n    IterationSK eq {iterationSK}\n    and AreaSK eq {areaSK}\n    and Processes/any(p:p/BacklogType eq 'RequirementBacklog') \n    and Processes/all(p:p/IsBugType eq false)\n)\n&$expand=Descendants(\n    $apply=filter(\n        CompletedWork ne null \n        or RemainingWork ne null\n    )\n    /aggregate(\n        iif(CompletedWork ne null, CompletedWork, 0) with sum as SumCompletedWork, \n        iif(RemainingWork ne null, RemainingWork, 0) with sum as SumRemainingWork\n    )\n    /compute(\n        (SumCompletedWork add SumRemainingWork) as TotalWork, \n        SumCompletedWork as SumCompleted\n    )\n    /compute(\n        iif(TotalWork gt 0,(SumCompleted div cast(TotalWork, Edm.Double) mul 100), 0) as PercCompletedWork\n    )\n)&$select=WorkItemId, Title\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Pick List in Azure DevOps Work Item Type\nDESCRIPTION: XML definition for creating a custom Resolution field with predefined pick list values. Shows how to define allowed values for a String type field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-field.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Resolution\" refname=\"MyCompany.Resolution\" type=\"String\">\n   <ALLOWEDVALUES>\n      <LISTITEM value=\"By Design\" />\n      <LISTITEM value=\"Duplicate\" />\n      <LISTITEM value=\"External\" />\n      <LISTITEM value=\"Fixed\" />\n      <LISTITEM value=\"Not Repro\" />\n      <LISTITEM value=\"Postponed\" />\n      <LISTITEM value=\"Won't Fix\" />\n   </ALLOWEDVALUES>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Label Administration\nDESCRIPTION: Namespace identifier for administering labels in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_31\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, LabelOther\n```\n\n----------------------------------------\n\nTITLE: Using the Label Command in TFVC\nDESCRIPTION: Command syntax for applying, modifying, or removing labels from versions of files or folders in Team Foundation Version Control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/label-command-team-foundation-version-control.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ntf label labelname[@scope] [/owner:ownername] \nitemspec [/version:versionspec] [/comment:(\"comment\"|@commentfile)] \n[/child:(replace|merge)] [/recursive] [/login:username,[password]] [/collection:TeamProjectCollectionUrl]\n```\n\n----------------------------------------\n\nTITLE: Deleting a TFVC Workspace with Command-Line Syntax in Batch\nDESCRIPTION: Command syntax for deleting an existing TFVC workspace, requiring the workspace name and owner information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_1\n\nLANGUAGE: Batch\nCODE:\n```\ntf workspace /delete [/collection:<team-project-collection-url>] <workspace-name>[;<workspace-owner>] [/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Listing All Pending Changes in Current Workspace\nDESCRIPTION: A simple example of using the status command to list all pending changes in the current workspace without any additional parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/status-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\>tf stat\n```\n\n----------------------------------------\n\nTITLE: Hub HTML Page Implementation\nDESCRIPTION: Sample HTML implementation for the hub page, including SDK initialization and load notification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-hub.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n\t<title>Hello World</title>\n\t<script src=\"sdk/scripts/SDK.js\"></script>\n</head>\n<body>\n\t<script type=\"text/javascript\">SDK.init();</script>\n\t<h1>Hello World</h1>\n\t<script type=\"text/javascript\">SDK.notifyLoadSucceeded();</script>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Installing Python Packages with pip\nDESCRIPTION: Command to run in your project directory to install packages from your configured Azure Artifacts feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/install-python-packages.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install\n```\n\n----------------------------------------\n\nTITLE: Querying Test Execution Status for Requirements in Azure DevOps using Power BI\nDESCRIPTION: This Power BI query retrieves test points data for requirements within a specific iteration and area, grouped by parent work item. It calculates total tests and their execution status (passed, failed, blocked, not applicable, not run, run) for each parent requirement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview-rollup.md#2025-04-22_snippet_2\n\nLANGUAGE: Power BI\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints? \n\t$apply=filter(\n\t    (TestSuite/RequirementWorkItem/IterationSK eq {iterationSK}\n    and TestSuite/RequirementWorkItem/AreaSK eq {areaSK}\n    and TestSuite/RequirementWorkItem/Processes/any(p:p/BacklogType eq 'RequirementBacklog')\n    and TestSuite/RequirementWorkItem/Processes/all(p:p/IsBugType eq false)\n\t))\n\t/compute(iif(TestSuite/RequirementWorkItem/Parent ne null, TestSuite/RequirementWorkItem/Parent/WorkItemId, 0) as ParentWorkItemId, \n\tiif(TestSuite/RequirementWorkItem/Parent ne null, TestSuite/RequirementWorkItem/Parent/Title, 'Unparented') as ParentWorkItemTitle\n\t)/groupby(\n\t    (ParentWorkItemId, ParentWorkItemTitle), \n\t    aggregate(\n\t        $count as TotalCount, \n\t        cast(LastResultOutcome eq 'Passed', Edm.Int32) with sum as PassedCount, \n\t        cast(LastResultOutcome eq 'Failed', Edm.Int32) with sum as FailedCount, \n            cast(LastResultOutcome eq 'Blocked', Edm.Int32) with sum as BlockedCount,\n            cast(LastResultOutcome eq 'NotApplicable', Edm.Int32) with sum as NotApplicableCount,\n\t        cast(LastResultOutcome eq 'None', Edm.Int32) with sum as NotRunCount, \n\t        cast(LastResultOutcome ne 'None', Edm.Int32) with sum as RunCount))\", null, [Implementation=\"2.0\"]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Source\",{{\"TotalCount\", type number}, {\"PassedCount\", type number}, {\"FailedCount\", type number}, {\"BlockedCount\", type number}, {\"NotApplicableCount\", type number}, {\"NotRunCount\", type number}, {\"RunCount\", type number}})\nin\n    #\"Changed Type\"\n```\n\n----------------------------------------\n\nTITLE: Note on Git Tag Deletion Warning\nDESCRIPTION: Important warning message about the implications of deleting tags that have been pushed to remote repositories\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-tags.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n>[!IMPORTANT]\\n>If your tag has already been pushed to the remote repo, you should not delete it. If the repo has been pulled, forked, or cloned by another user, the tag will still exist in their copy of the repo. You should only delete local tags.\n```\n\n----------------------------------------\n\nTITLE: Checking macOS Agent Service Status\nDESCRIPTION: Command to check the status of the macOS agent service, showing whether it is running and its process ID if active.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh status\n```\n\n----------------------------------------\n\nTITLE: Listing Wikis Command Syntax\nDESCRIPTION: Command syntax for listing all wikis in a project or organization with optional parameters for scope and project specification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki list \n                    [--project]\n                    [--scope {organization, project}]\n                    [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Querying Feature Progress Based on Area Path in Power BI\nDESCRIPTION: This Power Query retrieves Feature work items and their User Story descendants, aggregating Story Points by State Category. It filters by Area Path and excludes removed items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-featureprogress.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerQuery\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'Feature' \"\n            &\"and State ne 'Removed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and Descendants/any()\"\n            &\"&$select=WorkItemId,Title,Area,Iteration,AssignedTo,WorkItemType,State,AreaSK\"\n            &\"&$expand=Descendants( \"\n            &\"$apply=filter(WorkItemType eq 'User Story') \" \n                &\"/groupby((StateCategory), \"\n                &\"aggregate(StoryPoints with sum as TotalStoryPoints)) \"\n            &\")  \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Retrieving a File from Specific Commit in Azure Repos\nDESCRIPTION: Example of retrieving a file from a specific commit in a Git repository by providing the commit ID along with the required parameters and credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-view-command.md#2025-04-22_snippet_3\n\nLANGUAGE: command-line\nCODE:\n```\ntf git view /collection:https://dev.azure.com/fabrikam-fiber \n            /teamproject:FabrikamProject \n            /repository:FabrikamRepo \n            /path:FabrikamApp/Global.asax.cs \n            /commitID:a2db383ffefa46a6f6638605a806925ea7c16ad9 \n            /output:Global.asax.cs \n            /login:FabrikamUser@hotmail.com,FabrikamPassword\n```\n\n----------------------------------------\n\nTITLE: Analytics Views Granularity Options Table\nDESCRIPTION: Markdown table defining the granularity options available when configuring an Analytics view, including Daily, Weekly, and Monthly settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/analytics-views-create.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|  Option  | Description |\n|------|---------|\n| **Daily** | Generates a row per work item showing the latest data for each day. |\n| **Weekly** | Generates a row per work item showing the data per week taken on the day that represents the week. The value defaults to Saturday. |\n| **Monthly** | Generates a row per work item showing the data for the last day of each month. |\n```\n\n----------------------------------------\n\nTITLE: Setting Azure DevOps API Version Parameter\nDESCRIPTION: Specifies the API version parameter for Azure DevOps REST API calls. Uses version 3.2-preview which indicates this is a preview API version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version3-2-preview.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\napi-version = 3.2-preview\n```\n\n----------------------------------------\n\nTITLE: Adding WorkItemTracking Plugin to ProcessTemplate.xml (XML)\nDESCRIPTION: This snippet shows how to add the missing Microsoft.ProjectCreationWizard.WorkItemTracking plugin to the plugins section of the ProcessTemplate.xml file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n   <plugins>\n      <plugin name=\"Microsoft.ProjectCreationWizard.Classification\" wizardPage=\"false\" />\n      <plugin name=\"Microsoft.ProjectCreationWizard.Reporting\" wizardPage=\"false\" />\n      <plugin name=\"Microsoft.ProjectCreationWizard.Portal\" wizardPage=\"true\" />\n      <plugin name=\"Microsoft.ProjectCreationWizard.Groups\" wizardPage=\"false\" />\n      <plugin name=\"Microsoft.ProjectCreationWizard.WorkItemTracking\" wizardPage=\"false\" />\n      <plugin name=\"Microsoft.ProjectCreationWizard.VersionControl\" wizardPage=\"true\" />\n      <plugin name=\"Microsoft.ProjectCreationWizard.TestManagement\" wizardPage=\"false\" />\n      <plugin name=\"Microsoft.ProjectCreationWizard.Build\" wizardPage=\"false\" />\n      <plugin name=\"Microsoft.ProjectCreationWizard.Lab\" wizardPage=\"false\" />\n    </plugins>\n```\n\n----------------------------------------\n\nTITLE: Managing Users with Azure DevOps CLI\nDESCRIPTION: Administrators can use Azure DevOps CLI commands to create standardized scripts for user management tasks such as enlisting, adding, and updating users. This reduces manual effort and potential errors in user management processes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-152-update.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz devops user\n```\n\n----------------------------------------\n\nTITLE: Publishing Package to NuGet.org using nuget.exe\nDESCRIPTION: Command to publish a NuGet package to NuGet.org using the nuget.exe CLI. Requires the package name (.nupkg file), your NuGet.org API key, and specifies the official NuGet package source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/publish-to-nuget-org.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnuget push <packageName> <APIKey> -Source https://api.nuget.org/v3/index.json\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® PI Iteration Path to Azure Boards Iteration Path in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Program Increment (PI) Iteration Path' to the Azure Boards 'Iteration Path'. It explains that Iteration Paths define time boxes with start/end dates, ranging from weeks to longer periods.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Program Increment (PI) Iteration Path\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Iteration Path**](safe-concepts.md#iterations). Iteration Paths define a time box for a project with start and end dates. Iteration Paths can be defined from one week to 12 weeks or longer.\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Running the MigrateToVSTSWiki Tool in Command Prompt\nDESCRIPTION: Command to execute the migration tool for copying wiki pages from the extension repository to a temporary location. The tool converts the content to be compliant with Azure DevOps wiki format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/migrate-extension-wiki-pages.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nMigrateToVSTSWiki.exe /source:LocationB /destination:LocationC\n```\n\n----------------------------------------\n\nTITLE: Displaying Repository Information in Table Format\nDESCRIPTION: Example showing how to list details of a specific repository in a tabular format using the repository name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos show --repository contosoREPO --output table\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Manifest for Azure DevOps Backlog Tabs\nDESCRIPTION: JSON configuration for the extension manifest that defines a custom tab contribution for Product and Iteration backlog pages. Specifies the contribution properties, required scopes, and addressable files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-backlog-tabs.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": \"Fabrikam.HelloWorld.Backlog.Tabs\",\n            \"type\": \"ms.vss-web.tab\",\n            \"description\": \"Adds a 'Hello' tab to the Product and Iteration backlog tabs.\",\n            \"targets\": [\n                \"ms.vss-work-web.product-backlog-tabs\",\n                \"ms.vss-work-web.iteration-backlog-tabs\"\n            ],\n            \"properties\": {\n                \"name\": \"Hello\",\n                \"uri\": \"hello-world.html\",\n                \"registeredObjectId\": \"backlogTabObject\"\n            }\n        }\n    ],\n    \"scopes\": [\n        \"vso.work\"\n    ],\n    \"files\": [\n        {\n            \"path\": \"hello-world.html\", \"addressable\": true\n        },\n        {\n            \"path\": \"scripts\", \"addressable\": true\n        },\n        {\n            \"path\": \"sdk/scripts\", \"addressable\": true\n        },\n        {\n            \"path\": \"images/logo.png\", \"addressable\": true\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom Rule in Azure DevOps Inheritance Process\nDESCRIPTION: This snippet demonstrates how to define a custom rule in the Azure DevOps Inheritance process. It shows the structure of conditions and actions for making a field required based on specific criteria.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n(Condition) When a work item State is Active\n(Condition) And when the value of Value Area = Business\n(Action) Then make required Story Points\n```\n\n----------------------------------------\n\nTITLE: Listing Work Item Relations Example in Azure CLI\nDESCRIPTION: Example command showing how to list work item relation details for a specific work item ID (2931) in table format. The output displays different types of relations including Related, Successor, Remote Related, Parent, Predecessor, and Attached File links with their corresponding URLs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/add-link.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item relation show --id 2931 --output table\nRelation Type    Url\n---------------  -----------------------------------------------------------------------------------------------------------------------------------\nRelated          https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2932\nSuccessor        https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2932\nRemote Related   https://dev.azure.com/fabrikam-fiber5/bbbbbbbb-1111-2222-3333-cccccccccccc/_apis/wit/workItems/1777\nParent           https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2930\nPredecessor      https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/workItems/2933\nAttached File    https://dev.azure.com/fabrikam/aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb/_apis/wit/attachments/1cc6c026-b4ed-420c-bfe6-065be726cba7\n```\n\n----------------------------------------\n\nTITLE: Risk Graph Configuration\nDESCRIPTION: Configuration for mapping workflow states to risk areas in the graph visualization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/extensions/dependency-tracker.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n\"atRisk\": [\n\"Removed\"\n],\n\"neutral\": [\n\"New\"\n],\n\"onTrack\": [\n\"Active\",\n\"Resolved\",\n\"Closed\",\n \"Other\"\n]\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing a Specific Changeset Version of a File\nDESCRIPTION: Example showing how to view a file at a specific changeset version (C1999) using the TFVC view command with the /version parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/view-command.md#2025-04-22_snippet_2\n\nLANGUAGE: Batch\nCODE:\n```\nc:\\projects>tf view /version:C1999 314.cs\n```\n\n----------------------------------------\n\nTITLE: Adding a Global Proxy Record for TFVC\nDESCRIPTION: Example command that adds a global proxy record to Azure DevOps Server, which will redirect all developer requests to the specified proxy on their first get operation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/proxy-command.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf proxy /add http://server:8081 /default:global /collection:http://tfsserver:8080/\n```\n\n----------------------------------------\n\nTITLE: Project-Scoped Feed NPM Authentication Configuration\nDESCRIPTION: NPM registry authentication configuration for project-scoped feeds in Azure DevOps. Includes username, password (base64 encoded PAT), and email settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\n; begin auth token\n//<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/:username=[ENTER_ANY_VALUE_BUT_NOT_AN_EMPTY_STRING]\n//<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/:_password=[BASE64_ENCODED_PERSONAL_ACCESS_TOKEN]\n//<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/registry/:email=npm requires email to be set but doesn't use the value\n//<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/:username=[ENTER_ANY_VALUE_BUT_NOT_AN_EMPTY_STRING]\n//<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/:_password=[BASE64_ENCODED_PERSONAL_ACCESS_TOKEN]\n//<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/npm/:email=npm requires email to be set but doesn't use the value\n; end auth token\n```\n\n----------------------------------------\n\nTITLE: Control Link Element Fix in XML\nDESCRIPTION: Shows the correct way to include Link elements within Control elements in work item form layout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_48\n\nLANGUAGE: xml\nCODE:\n```\n  <Control Type=\"FieldControl\" FieldName=\"customfield.foo\" Label=\"Foo\" LabelPosition=\"Left\">\n    <Link UrlRoot=\"http://www.visualstudio.microsoft.com/team-services/\" />\n  </Control>\n```\n\nLANGUAGE: xml\nCODE:\n```\n  <Control Type=\"FieldControl\" FieldName=\"System.Title\" LabelPosition=\"Left\" Label=\"Title 1\"  \n    <LabelText>  \n        <Text>  \n          <Link UrlRoot=\"http://www.visualstudio.microsoft.com/team-services/\" />  \n              Title 2  \n        </Text>  \n    </LabelText>  \n  </Control>  \n```\n\n----------------------------------------\n\nTITLE: Allowing PendChange Permission for a User on a File\nDESCRIPTION: Example showing how to allow a specific user to make pending changes to their local copy of a file in their workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/permission-command.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf permission /allow:PendChange /user:somealias $/testproject/314.cs.\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items with Positive Time Zone Offset in OData\nDESCRIPTION: Query that filters work items created since the beginning of 2020 with a positive time zone offset (UTC+08:00). The '+' character must be URL-encoded as '%2B' to avoid parsing errors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_16\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=CreatedDate ge 2020-01-01T00:00:00%2B08:00\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Correcting Unit Tests for Floating-Point Equality in C#\nDESCRIPTION: The revised unit test that properly accounts for the fact that allowable error should be proportional to the value being tested, not a constant. This test multiplies the error by the value to create a more accurate test.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-suspend-work-fix-bug-conduct-code-review.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\n// We allow a rounding error of 1 in 1000000\n// as a fraction of the value:\nTestEqual(1, 1e-7, true); // Less than allowed error\nTestEqual(1, 1e-5, false); // More than allowed error\nTestEqual(1000, 1000*1e-7, true); // Less than allowed error\nTestEqual(1000, 1000*1e-5, false); // More than allowed error\n```\n\n----------------------------------------\n\nTITLE: Creating a Repository and Initial File in Git\nDESCRIPTION: Creates a new Git repository and adds a text file with initial content. This forms the starting point for demonstrating Git history simplification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_0\n\nLANGUAGE: Git CLI\nCODE:\n```\n> cd sample\n> git init\n> echo \"some content\" > test.txt\n> git add test.txt\n> git commit -m \"Initial commit\"\n```\n\n----------------------------------------\n\nTITLE: Including Modular Documentation Content in Azure DevOps Docs - Markdown\nDESCRIPTION: Uses Markdown include directives to insert reusable content sections for update links, main update details, and next steps. These directives depend on Azure DevOps' custom Markdown rendering engine and require corresponding include files in the documentation repository. Include paths must be correct, and included files should be maintained for up-to-date content modularization. No dynamic parameters are passed; inputs are the file paths, and output is expanded content at build/render time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/pipelines/sprint-170-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-170-update-links](../includes/pipelines/sprint-170-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-170-update](../includes/pipelines/sprint-170-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding SQL Connection Properties to Migration Specification (JSON)\nDESCRIPTION: This snippet shows how to add the Properties object with a ConnectionString to the source object in the migration specification file. It includes the necessary parameters for connecting to a SQL Azure VM.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n\"Properties\":\n{\n    \"ConnectionString\": \"Data Source={SQL Azure VM Public IP};Initial Catalog={Database Name};Integrated Security=False;User ID={SQL Login Username};Password={SQL Login Password};Encrypt=True;TrustServerCertificate=True\" \n}\n```\n\n----------------------------------------\n\nTITLE: Querying Azure Monitor Alerts\nDESCRIPTION: This snippet demonstrates the use of the updated Query Azure Monitors task, which now supports querying alerts on the unified monitoring experience introduced by Azure Monitor.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-146-update.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureMonitorAlerts@0\n  inputs:\n    azureSubscription: '<Azure service connection>'\n    ResourceGroupName: '<Resource group name>'\n    ResourceType: 'Microsoft.Insights/metricAlerts'\n```\n\n----------------------------------------\n\nTITLE: Defining Azure App Service Deployment in YAML\nDESCRIPTION: This example shows the optimized YAML syntax for deploying to Azure App Services, including WebApps, FunctionApps, and their container versions on both Windows and Linux platforms.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-146-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureWebApp@1\n  inputs:\n    azureSubscription: '<Azure service connection>'\n    appName: '<Name of web app>'\n    appType: webApp\n```\n\n----------------------------------------\n\nTITLE: Process Configuration XML - Corrected Metastate Mapping\nDESCRIPTION: Corrected version showing proper metastate mapping with no duplicates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_28\n\nLANGUAGE: xml\nCODE:\n```\n<RequirementBacklog category=\"Microsoft.RequirementCategory\" pluralName=\"Stories\" singularName=\"Story\">\n   <States>\n      <State value=\"New\" type=\"Proposed\" />\n      <State value=\"Active\" type=\"InProgress\" />\n      <State value=\"Resolved\" type=\"InProgress\" />\n      <State value=\"Closed\" type=\"Complete\" />\n   </States>\n . . .\n</RequirementBacklog >\n```\n\n----------------------------------------\n\nTITLE: Reloading Host Page in Azure DevOps Extension (JavaScript)\nDESCRIPTION: This code demonstrates how to reload the entire host page using the HostNavigationService in an Azure DevOps extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/host-navigation.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Get navigation service\nVSS.getService(VSS.ServiceIds.Navigation).then(function(navigationService) {\n    // Reload whole page\n    navigationService.reload();\n});\n```\n\n----------------------------------------\n\nTITLE: Installing vsts-npm-auth Tool for Windows\nDESCRIPTION: Command to install the vsts-npm-auth tool globally on Windows systems for authenticating with Azure DevOps npm feeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/publish.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g vsts-npm-auth --registry https://registry.npmjs.com --always-auth false\n```\n\n----------------------------------------\n\nTITLE: Initializing VSS Module in HTML\nDESCRIPTION: Initializes the VSS module with explicit load notification and module loader setup. This must be placed in the body of the HTML page before other VSS operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/use-a-control-ts.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script>\nVSS.init({\n    explicitNotifyLoaded: true,\n    setupModuleLoader: true\n});\n</script>\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure DevOps Extension via CLI\nDESCRIPTION: This command enables an Azure DevOps extension. It requires the extension name and publisher name. The '--org' parameter is optional if a default organization is configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension enable --extension-name\n                           --publisher-name\n                           [--org]\n```\n\n----------------------------------------\n\nTITLE: Configuring Work Item Workflow Fields in Azure DevOps (XML)\nDESCRIPTION: This snippet demonstrates how to automate the assignment of the ResolvedDate field in a Work Item Type (WIT) definition using XML. It leverages the <SERVERDEFAULT> tag with the from=\\\"clock\\\" attribute to set the current time automatically when entering a specific workflow state (e.g., Resolved). Prerequisites include access to and familiarity with WIT XML schema, and deployment via Azure DevOps process templates. The key input is the field definition itself, and the output is automated timestamping during workflow transitions; manual edits are not supported.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/history-and-auditing.md#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD refname=\\\"Microsoft.VSTS.Common.ResolvedDate\\\">\\n   <SERVERDEFAULT from=\\\"clock\\\" />\\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Displaying Merge History Between Branches (Batch)\nDESCRIPTION: Shows an example of using the tf merges command to display information about all merge operations done between two specific branches (Beta1_branch and RTM_branch) with the /recursive option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merges-command.md#2025-04-22_snippet_1\n\nLANGUAGE: Batch\nCODE:\n```\nc:\\projects>tf merges /recursive Beta1_branch RTM_branch\n```\n\n----------------------------------------\n\nTITLE: Reading Variable Groups Scope (`vso.variablegroups_read`)\nDESCRIPTION: Grants the ability to read variable groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_26\n\nLANGUAGE: text\nCODE:\n```\n`vso.variablegroups_read`\n```\n\n----------------------------------------\n\nTITLE: Writing Task Groups Scope (`vso.taskgroups_write`)\nDESCRIPTION: Grants the ability to read and create task groups. Depends on `vso.taskgroups_read`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_15\n\nLANGUAGE: text\nCODE:\n```\n`vso.taskgroups_write`\n```\n\n----------------------------------------\n\nTITLE: Updating Project Visibility Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`Project, UPDATE_VISIBILITY`) represents the permission required to change an Azure DevOps project's visibility between private and public. This functionality applies specifically to Azure DevOps Services and is typically granted to users or service accounts needing to manage project access levels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_16\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, UPDATE_VISIBILITY\n```\n\n----------------------------------------\n\nTITLE: Response from Projects REST API (JavaScript)\nDESCRIPTION: This JavaScript object represents the response from the Projects REST API, showing how URLs in the response match the format of the request URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"e4e4e4e4-ffff-aaaa-bbbb-c5c5c5c5c5c5\",\n  \"name\": \"MyProject\",\n  \"url\": \"https://Fabrikam.visualstudio.com/_apis/projects/MyProject\"\n}\n```\n\n----------------------------------------\n\nTITLE: Value Range Test for Square Root in C#\nDESCRIPTION: Comprehensive test verifying square root calculation across a wide range of input values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-write-new-code-user-story.md#2025-04-22_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\n[TestMethod]\npublic void SqRtValueRange()\n{\n    LocalMath math = new LocalMath();\n    for (double expectedResult = 1e-8;\n        expectedResult < 1e+8;\n        expectedResult = expectedResult * 3.2)\n    {\n        VerifyOneRootValue(math, expectedResult);\n    }\n}\nprivate void VerifyOneRootValue(LocalMath math, double expectedResult)\n{\n    double input = expectedResult * expectedResult;\n    double actualResult = math.SquareRoot(input);\n    Assert.AreEqual(expectedResult, actualResult, expectedResult / 1e6);\n}\n```\n\n----------------------------------------\n\nTITLE: Comparing changes between two branches in Git\nDESCRIPTION: This command shows the differences between two specified branches, useful for reviewing changes before merging.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_21\n\nLANGUAGE: git\nCODE:\n```\ngit diff branchname1 branchname2\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps OAuth 2.0 Refresh Token Request Body\nDESCRIPTION: This code snippet shows the structure of the HTTP request body used to refresh an expired access token using a refresh token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_6\n\nLANGUAGE: no-highlight\nCODE:\n```\nclient_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&client_assertion={0}&grant_type=refresh_token&assertion={1}&redirect_uri={2}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Azure DevOps Organization with Azure CLI - azurecli\nDESCRIPTION: Sets the default Azure DevOps organization context for subsequent CLI operations using 'az devops configure --defaults'. Requires the Azure DevOps CLI extension and a valid organization URL. Replace '{My_Organization}' with your actual organization name. No output is displayed if successful; subsequent Azure DevOps CLI commands will use this organization by default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/get-list-of-organizations-connected-to-azure-active-directory.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops configure --defaults organization=https://dev.azure.com/{My_Organization}/\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Action to Azure DevOps Extension Manifest\nDESCRIPTION: This JSON snippet defines a custom action in the contributions section of an Azure DevOps extension manifest. It specifies the action's properties including text, title, icon, and target.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-action-js.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"contributions\": [\n    {\n        \"id\": \"myAction\",\n        \"type\": \"ms.vss-web.action\",\n        \"description\": \"Run in Hello hub action\",\n        \"targets\": [\n            \"ms.vss-work-web.work-item-query-menu\"\n        ],\n        \"properties\": {\n            \"text\": \"Run in Hello hub\",\n            \"title\": \"Run in Hello hub\",\n            \"icon\": \"images/icon.png\",\n            \"groupId\": \"actions\",\n            \"uri\": \"action.html\"\n        }\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Release Abandoned Event in Azure DevOps\nDESCRIPTION: This JSON sample demonstrates the payload structure when a release is abandoned in Azure DevOps. It includes identifiers for the release, definition, and project along with status information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"eventType\": \"ms.azure-devops-release.release-abandoned-event\",\n  \"publisherId\": \"rm\",\n  \"scope\": \"all\",\n  \"resource\": {\n    \"release\": {\n      \"id\": \"release-id\",\n      \"name\": \"release-name\",\n      \"status\": \"abandoned\",\n      \"releaseDefinition\": {\n        \"id\": \"release-definition-id\",\n        \"name\": \"release-definition-name\"\n      },\n      \"project\": {\n        \"id\": \"project-id\",\n        \"name\": \"project-name\"\n      }\n    }\n  },\n  \"createdDate\": \"2024-12-02T12:21:13.8866607Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Checking PowerShell Version in Bash\nDESCRIPTION: This command displays the installed PowerShell version on the system. It uses the $PSVersionTable.PSVersion variable to retrieve the version information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/qa-windows-agent-powershell-version.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$PSVersionTable.PSVersion\n```\n\n----------------------------------------\n\nTITLE: Showing the Dialog (JavaScript)\nDESCRIPTION: Demonstrates how to show the dialog using the HostDialogService, including setting dialog options and handling the dialog result.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/using-host-dialog.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nVSS.getService(VSS.ServiceIds.Dialog).then(function(dialogService) {\n    var extensionCtx = VSS.getExtensionContext();\n    // Build absolute contribution ID for dialogContent\n    var contributionId = extensionCtx.publisherId + \".\" + extensionCtx.extensionId + \".registration-form\";\n\n    // Show dialog\n    var dialogOptions = {\n        title: \"My Dialog\",\n        width: 800,\n        height: 600\n    };\n\n    dialogService.openDialog(contributionId, dialogOptions);\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Authentication Login Example\nDESCRIPTION: Interactive login process using basic authentication, showing prompts for service URL, username, and password\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/auth/tfs-basic-auth.md#2025-04-22_snippet_2\n\nLANGUAGE: no-highlight\nCODE:\n```\n> tfx login --auth-type basic\nCopyright Microsoft Corporation\n\nEnter service url > http://localhost:8080/tfs/defaultcollection\nEnter username > fabfiber\\peter\nEnter password > *******\nlogged in successfully\n```\n\n----------------------------------------\n\nTITLE: Fixing Duplicate CATEGORIES Statements in WorkItems.xml (XML)\nDESCRIPTION: This snippet demonstrates how to resolve the issue of multiple CATEGORIES statements in the WorkItems.xml file. It shows the error and the corrected version with only one CATEGORIES statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n  <task id=\"Categories\" name=\"Categories definitions\" plugin=\"Microsoft.ProjectCreationWizard.WorkItemTracking\" completionMessage=\"Work item type categories created\">\n    <dependencies>\n      <dependency taskId=\"WITs\" />\n    </dependencies>\n    <taskXml>\n      <CATEGORIES fileName=\"WorkItem Tracking\\Custom_Categories.xml\" />\n    </taskXml>\n  </task>\n```\n\n----------------------------------------\n\nTITLE: Updating Extension Manifest JSON for Multiple Widgets in Azure DevOps\nDESCRIPTION: This JSON snippet shows how to modify the extension manifest to include a second widget contribution. It adds a new entry to the contributions array and updates the files property to include the new HTML file and preview image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n    ...,\n    \"contributions\": [\n        ...,\n        {\n            \"id\": \"HelloWorldWidget2\",\n            \"type\": \"ms.vss-dashboards-web.widget\",\n            \"targets\": [\n                \"ms.vss-dashboards-web.widget-catalog\"\n            ],\n            \"properties\": {\n                \"name\": \"Hello World Widget 2 (with API)\",\n                \"description\": \"My second widget\",\n                \"previewImageUrl\": \"img/preview2.png\",\n                \"uri\": \"hello-world2.html\",\n                \"supportedSizes\": [\n                    {\n                        \"rowSpan\": 1,\n                        \"columnSpan\": 2\n                    }\n                ],\n                \"supportedScopes\": [\"project_team\"]\n            }\n        }\n    ],\n    \"files\": [\n        {\n            \"path\": \"hello-world.html\",\n            \"addressable\": true\n        },\n        {\n            \"path\": \"hello-world2.html\",\n            \"addressable\": true\n        },\n        {\n            \"path\": \"sdk/scripts\",\n            \"addressable\": true\n        },\n        {\n            \"path\": \"img\",\n            \"addressable\": true\n        }\n    ],\n    \"scopes\": [\n        \"vso.work\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Denying Branch Creation at Root Level\nDESCRIPTION: Blocks the CreateBranch permission at the repository root for project contributors to enforce branch folder structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-permission-command.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntf git permission /deny:CreateBranch \n                  /group:[FabrikamProject]\\Contributors \n                  /collection:https://dev.azure.com/fabrikam-fiber/ \n                  /teamproject:FabrikamProject \n                  /repository:FabrikamRepo\n```\n\n----------------------------------------\n\nTITLE: Changing Hash Value in Azure DevOps Extension (JavaScript)\nDESCRIPTION: This snippet illustrates how to change the hash value of the host page URL using the HostNavigationService in an Azure DevOps extension. It uses the setHash method, which adds a new entry to the browser history.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/host-navigation.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Get navigation service\nVSS.getService(VSS.ServiceIds.Navigation).then(function(navigationService) {\n    // Adds a new entry to browser history\n    navigationService.setHash(\"new-hash-value\");\n});\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Check In Others\nDESCRIPTION: Namespace identifier for checking in other users' changes in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_33\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, CheckinOther\n```\n\n----------------------------------------\n\nTITLE: Detailed Work Item Field Access in Azure DevOps Placeholders\nDESCRIPTION: Example of accessing specific work item fields using the full path in Azure DevOps event placeholders. This demonstrates how to reference System and custom fields in detail.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/services/trello.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n{{workitem.fields[\"System.workItemType\"]}} #{{workitem.fields[\"System.id\"]}}: {{workitem.fields[\"System.title\"]}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Requirement Backlog States in XML\nDESCRIPTION: Example of correct metastate mapping for requirement backlog configuration, showing state transitions from New to Closed with appropriate type mappings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_29\n\nLANGUAGE: xml\nCODE:\n```\n<RequirementBacklog category=\"Microsoft.RequirementCategory\" pluralName=\"Stories\" singularName=\"Story\">\n   <States>\n      <State value=\"New\" type=\"Proposed\" />\n      <State value=\"Active\" type=\"InProgress\" />\n      <State value=\"Resolved\" type=\"InProgress\" />\n      <State value=\"Closed\" type=\"Complete\" />\n   </States>\n . . .\n</RequirementBacklog >\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for Virtual Machine Scale Set\nDESCRIPTION: Azure CLI command to create a new resource group for hosting the Virtual Machine Scale Set.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group create \\\n--location westus \\\n--name vmssagents\n```\n\n----------------------------------------\n\nTITLE: Requirement Backlog Configuration in Azure DevOps XML\nDESCRIPTION: XML structure for configuring the product backlog, including state mappings, columns and add panel settings. Specifies category, naming and work item count limits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<RequirementBacklog category=\"RequirementCategory\"  \n         pluralName=\"PluralName\" singularName=\"SingleName\"   \n         workItemCountLimit=\"MaximumLimit\" >  \n         <States> . . . </States>\n         <Columns> . . . </Columns>\n         <AddPanel> . . . </ AddPanel>\n</RequirementBacklog >\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for Migrator Validate Command (cmdline)\nDESCRIPTION: This command invokes the Data Migration Tool (`Migrator`) with the `validate` action and the `/help` switch. It is used to display detailed help information, including available command-line arguments and options specifically for the validation phase of the migration process. This helps users understand the various parameters available for the validation command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-validate.md#2025-04-22_snippet_0\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator validate /help\n```\n\n----------------------------------------\n\nTITLE: OData Query with Mixed Apply and Filter\nDESCRIPTION: Example demonstrating why mixing $apply and $filter clauses should be avoided, as it can lead to unexpected results due to evaluation order.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_34\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=StoryPoints gt 2\n  $apply=\n    filter(StoryPoints gt 5)/\n    groupby(\n      (Area/AreaPath),\n      aggregate(StoryPoints with sum as StoryPoints)\n    )\n```\n\n----------------------------------------\n\nTITLE: Publishing a Git Repository to Wiki using Azure CLI\nDESCRIPTION: This Azure CLI command creates a code wiki from a Git repository. It requires specifying the wiki name, repository, mapped path, and branch version from which to publish.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/publish-repo-to-wiki.md#2025-04-22_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz devops wiki create [--mapped-path]\n                      [--name]\n                      [--org]\n                      [--project]\n                      [--repository]\n                      [--type {codewiki, projectwiki}]\n                      [--version]\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items by Date Range\nDESCRIPTION: These examples show how to filter work items based on date ranges. The first query retrieves items changed on or after January 1, 2021, while the second query retrieves items changed within a specific week in April 2021.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_11\n\nLANGUAGE: JSON\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?$select=WorkItemId,WorkItemType,Title,State&$filter=ChangedDate ge 2021-01-01Z\n```\n\nLANGUAGE: JSON\nCODE:\n```\nhttps://analytics.dev.azure.com{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?$select=WorkItemId,WorkItemType,Title,State&$filter=ChangedDate ge 2021-04-26Z&ChangedDate le 2021-04-30Z\n```\n\n----------------------------------------\n\nTITLE: Filtering by Current User with the @Me Macro - WIQL\nDESCRIPTION: This WIQL query uses the @Me macro to automatically substitute the current authenticated user's alias in the AssignedTo field. It is ideal for constructing reusable queries that filter work items assigned to whoever runs the query. The macro requires Azure DevOps support for WIQL variables; input is implicit from the logged-in user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_9\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE  \n   [System.AssignedTo] = @Me \n```\n\n----------------------------------------\n\nTITLE: Getting Sample Tomcat Project URL\nDESCRIPTION: Provides the GitHub repository URL for the Spring PetClinic sample application, configured for deployment with Tomcat. This code can be forked or cloned to follow the tutorial.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java-webapp.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/spring-petclinic/spring-framework-petclinic\n```\n\n----------------------------------------\n\nTITLE: Multi-day Agent Scheduling\nDESCRIPTION: JSON configuration demonstrating how to schedule an agent across multiple days. This example provisions an agent starting at 9:00 AM on one day and stopping at 5:00 PM the following day.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"09:00:00\": `1`\n},\n{\n    \"17:00:00\": 0\n}\n```\n\n----------------------------------------\n\nTITLE: Encoding Certificate for Service Fabric Authentication in PowerShell\nDESCRIPTION: PowerShell command to convert a certificate file to Base64 encoding for use in Service Fabric service connections. This encoding is required when setting up certificate-based authentication with Service Fabric clusters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/service-endpoints.md#2025-04-22_snippet_6\n\nLANGUAGE: PowerShell\nCODE:\n```\n[System.Convert]::ToBase64String([System.IO.File]::ReadAllBytes(\"C:\\path\\to\\certificate.pfx\"))\n```\n\n----------------------------------------\n\nTITLE: Managing Team Iterations with Azure DevOps CLI\nDESCRIPTION: Azure DevOps CLI commands for adding iterations to teams, setting the default iteration, and setting the backlog iteration. These commands help configure sprints and iteration paths for teams in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-iteration-paths-sprints.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards iteration team add --id --team\n                             [--project]\n\naz boards iteration team set-default-iteration --team\n                                               [--default-iteration-macro]\n                                               [--id]\n                                               [--project]\n\naz boards iteration team set-backlog-iteration --id --team\n                                               [--project]\n```\n\n----------------------------------------\n\nTITLE: Filtering work items with spaces in path names in Azure DevOps\nDESCRIPTION: Example of using double quotes with the 'path' filter when the path contains spaces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/functional-work-item-search.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nWiki path:\"Contoso/Windows Phones and Devices/Services\"\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization URL Format\nDESCRIPTION: The URL format for accessing an Azure DevOps organization's settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/invite-teammates.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Check Updated Event in Azure DevOps Pipeline\nDESCRIPTION: JSON payload example for the check.updated event which is triggered when a check is updated. This includes check ID, type, status, and project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"publisherId\": \"azure-devops\",\n  \"eventId\": \"check.updated\",\n  \"resource\": {\n    \"check\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000check-id\",\n      \"type\": \"check-type\",\n      \"status\": \"check-status\",\n      \"project\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n        \"name\": \"project-name\"\n      }\n    }\n  },\n  \"updatedDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Changing Process Version Information in ProcessTemplate.xml\nDESCRIPTION: Example showing how to modify the version type, major, and minor numbers in ProcessTemplate.xml. A distinct GUID should be provided for the type attribute.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/customize-process.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<version type=\"F50EFC58-C2FC-4C66-9814-E395D90778A3\" major=\"1\" minor=\"1\"/>\n```\n\n----------------------------------------\n\nTITLE: Identifier for Viewing Test Runs Permission\nDESCRIPTION: The symbolic identifier `Project, VIEW_TEST_RESULTS` grants the ability to view test plans and their associated runs under a specific project area path in Azure DevOps. This is a fundamental read-only permission for stakeholders needing visibility into test progress.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, VIEW_TEST_RESULTS\n```\n\n----------------------------------------\n\nTITLE: Settings Document Structure\nDESCRIPTION: JSON structure showing the format of a settings document with id, etag, and value fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n                \"id\": \"myKey\",\n                \"__etag\": -1,\n                \"value\": \"myValue\"\n}\n```\n\n----------------------------------------\n\nTITLE: Permission Tables Include Statements\nDESCRIPTION: Collection of markdown include statements for various permission tables\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-access.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/boards-work-items.md)]\n[!INCLUDE [temp](includes/boards-boards.md)]\n[!INCLUDE [temp](includes/boards-backlogs.md)]\n[!INCLUDE [temp](includes/boards-sprints.md)]\n[!INCLUDE [temp](includes/boards-queries.md)]\n[!INCLUDE [temp](includes/boards-plans.md)]\n```\n\n----------------------------------------\n\nTITLE: Running Validation on a Team Project Collection (cmdline)\nDESCRIPTION: This command executes the `Migrator` tool's `validate` action against the specified team project collection URL (`/collection:`). It performs checks on database size, collation, identities, and process template customizations to ensure compatibility for migration to Azure DevOps Services. The example uses a local server URL `http://localhost:8080/tfs/DefaultCollection`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-validate.md#2025-04-22_snippet_1\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator validate /collection:http://localhost:8080/tfs/DefaultCollection\n```\n\n----------------------------------------\n\nTITLE: Highlighting Text with HTML in Azure DevOps Wiki\nDESCRIPTION: Illustrates the use of the 'mark' HTML tag to highlight important text in wiki pages, drawing readers' attention to specific content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-152-update.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nThis is <mark>highlighted</mark> text.\n```\n\n----------------------------------------\n\nTITLE: Reverting File to Specific Commit Version\nDESCRIPTION: Command to revert a file to a specific previous version using a commit ID with Git checkout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/undo.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit checkout <commit ID> <file>\n```\n\n----------------------------------------\n\nTITLE: Querying Board Column Order in Power BI\nDESCRIPTION: Power BI query that retrieves the column order configuration for a team's Stories board to enable proper sorting of the CFD visualization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-cfd.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/V3.0-preview/BoardLocations?\"\n        &\"$apply=filter( \"\n            &\"Team/TeamName eq '{teamname}'  \"\n            &\"and BoardName eq 'Stories'  \"\n            &\"and IsCurrent eq true \"\n        &\") \"\n        &\"/groupby ((ColumnName,ColumnOrder)) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Batch Script Using Variable in MSBuild Command\nDESCRIPTION: Example showing potential security risk with unvalidated variables in a batch script command for MSBuild execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/security/inputs.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nmsbuild.exe myproj.proj -property:Configuration=$(MyConfig)\n```\n\n----------------------------------------\n\nTITLE: Setting a Basic Variable in Bash Script\nDESCRIPTION: Sets a variable named 'myVar' with the value 'foo' using the task.setvariable logging command in a Bash script. This variable will be available to subsequent tasks in the same job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- bash: |\n    echo \"##vso[task.setvariable variable=myVar;]foo\"\n```\n\n----------------------------------------\n\nTITLE: Merging a Feature Branch into Main Branch in Git\nDESCRIPTION: This command merges the 'cool-feature' branch into the 'main' branch. It creates a new merge commit if there are no conflicts, or includes conflict resolutions if any exist.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/history.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit merge cool-feature main\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Services Collection URL Format\nDESCRIPTION: Example format for specifying the collection URL parameter when using Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/test-case-managment-reference.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nhttp://dev.azure.com/OrganizationName\n```\n\n----------------------------------------\n\nTITLE: Querying Open Bugs Filtered by Teams using OData\nDESCRIPTION: This OData query retrieves open bugs filtered by specific team names. It allows filtering by multiple teams and selects relevant fields including AssignedTo, Iteration, and Area information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-openbugs.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'Bug'\n            and StateCategory ne 'Completed'\n            and (Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}'))\n        &$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames,AreaSK\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath)\n```\n\n----------------------------------------\n\nTITLE: Publishing npm Packages to Azure Artifacts\nDESCRIPTION: This command publishes the npm package to Azure Artifacts. It should be run in the project directory containing the package.json file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/npm/publish-restore.md#2025-04-22_snippet_1\n\nLANGUAGE: Command\nCODE:\n```\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Phrase Search in Azure DevOps Work Items\nDESCRIPTION: This example demonstrates searching for an exact phrase in Azure DevOps work items. Enclosing the phrase `\"Getting Started\"` in quotation marks ensures that only work items containing this exact phrase in the Title, Description, or Repro Steps fields are returned.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_8\n\nLANGUAGE: azure-devops-search\nCODE:\n```\n\"Getting Started\"\n```\n\n----------------------------------------\n\nTITLE: Running Maven Install Command for Azure Artifacts Package\nDESCRIPTION: This command runs the Maven install process to download and install the Azure Artifacts package specified in the pom.xml file. It should be executed from the same directory as the pom.xml file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/maven/install.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Field Reference Names Examples in Azure DevOps\nDESCRIPTION: This table shows examples of valid field reference names in various namespaces including System, Microsoft, and custom namespaces. It demonstrates how system fields, Microsoft-defined fields, and customer-defined fields should be structured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/naming-restrictions.md#2025-04-22_snippet_0\n\nLANGUAGE: md\nCODE:\n```\n|System namespace examples |Microsoft namespace examples |Other namespace examples|\n|---------|---------|----------|\n|System.Id, System.Title, System.CreatedBy, System.CreatedDate, System.ChangedBy, System.ChangedDate, System.State, System.Reason | Microsoft.VSTS.Build.FoundIn, Microsoft.VSTS.Common.Activity, Microsoft.VSTS.Common.Discipline, Microsoft.VSTS.Common.Priority, Microsoft.VSTS.CMMI.TaskType, Microsoft.VSTS.TCM.AutomationStatus, Microsoft.VSTS.TCM.TestSuiteType  | The fictitious company, Fabrikam Fiber, might define the following custom work item fields:<br>FabrikamFiber.Common.Severity, FabrikamFiber.Common.Phase, FabrikamFiber.RiskManagement.RiskType, FabrikamFiber.RiskManagement.Resolution<br><br>The fictitious software company Contoso Corporation might define the following work item fields:<br>Contoso.Common.BusinessPriority, Contoso.Bug.FoundInPhase, Contoso.Bug.FixInPhase    |\n```\n\n----------------------------------------\n\nTITLE: Adding Form Controls for Agile Work Item Type in Azure DevOps\nDESCRIPTION: XML definition for the required form controls in Agile process template, including Story Points and Value Area fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<Control FieldName=\"Microsoft.VSTS.Scheduling.StoryPoints\" Type=\"FieldControl\" Label=\"Story Points\" LabelPosition=\"Left\" />  \n<Control FieldName=\"Microsoft.VSTS.Common.ValueArea\" Type=\"FieldControl\" Label=\"Value area\" LabelPosition=\"Left\" />  \n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Undelete Command Syntax\nDESCRIPTION: The basic syntax for the Team Foundation Version Control undelete command, showing all available options and parameters for restoring deleted items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undelete-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ntf undelete [/noget] [/lock:(none|checkin|checkout)] \n[/recursive] <item-specification>[;<deletion-ID>] [/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Defining Delivery Plan Permissions in Azure DevOps\nDESCRIPTION: This snippet outlines the permission structure for delivery plans in Azure DevOps, including Delete, Edit, Manage, and View access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_46\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   ### Permission (UI)   \n   `Namespace permission`  \n   :::column-end:::\n   :::column span=\"2\":::\n  ### Description \n   :::column-end:::\n:::row-end:::\n---\n:::row:::\n   :::column span=\"1\":::\n   <a id=\"delete-plan-permission\"></a> Delete  \n   `Plan, Delete`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can delete the selected plan.\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"1\":::\n   <a id=\"edit-plan-permission\"></a> Edit  \n   `Plan, Edit`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can edit the configuration and settings defined for the selected plan.\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"1\":::\n   <a id=\"manage-plan-permission\"></a> Manage  \n   `Plan, Manage`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can manage the permissions for the selected plan.\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"1\":::\n   <a id=\"view-plan-permission\"></a> View  \n   `Plan, View`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can view the lists of plans, open, and interact with a plan, but can't modify the plan configuration or settings.\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Performing Interactive Rebase to Edit Commits in Git\nDESCRIPTION: This snippet shows how to use interactive rebase in Git to edit commits that are further back in history. It includes identifying the commit to edit, performing the rebase, and amending the commit to remove the secret.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-secret-scanning.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit rebase -i [commit ID before credential introduction]~1\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit commit --amend\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit rebase --continue\n```\n\n----------------------------------------\n\nTITLE: Running npm audit locally\nDESCRIPTION: Commands to run npm audit and npm audit fix locally in a project directory. npm audit scans for vulnerabilities, while npm audit fix attempts to upgrade to non-vulnerable package versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npm-audit.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm audit\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm audit fix\n```\n\n----------------------------------------\n\nTITLE: Querying TF History by Date Range\nDESCRIPTION: Shows how to get version control history for all items in a solution between specific dates. Uses the /noprompt flag for non-interactive output and /recursive for including subfolders.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/history-command.md#2025-04-22_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history /noprompt * /recursive /v:D4/12/2012~D4/24/2012\n```\n\nLANGUAGE: text\nCODE:\n```\nChangeset User              Date       Comment\n--------- ----------------- ---------- ----------------------------------------\n30        Raisa Pokrovskaya 4/23/2012\n29        Jamal Hartnett    4/23/2012  Fix bug in new method\n20        Raisa Pokrovskaya 4/12/2012  Add new method, add program2.cs to \n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from All Project Repositories in Slack\nDESCRIPTION: Command to remove all repositories and their associated subscriptions from a project. This can only be executed by project administrators.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-slack.md#2025-04-22_snippet_5\n\nLANGUAGE: slash command\nCODE:\n```\n/azrepos unsubscribe all [project url]\n```\n\n----------------------------------------\n\nTITLE: Verifying Field Usage Status with witadmin\nDESCRIPTION: Command to check if a work item field is in use within a collection. Returns field information including usage status, type, and reporting attributes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nwitadmin listfields /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:MyCompany.MyProcess.MyField\n```\n\n----------------------------------------\n\nTITLE: Updating Subpage .order File in Markdown\nDESCRIPTION: Example of updating the .order file in a subfolder of the wiki Git repository to specify the order of subpages under a parent page.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/wiki-update-offline.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nRequest-extensions  \nLicensing  \nSmoke-test  \nCoding-guidelines  \n```\n\n----------------------------------------\n\nTITLE: Configure Project Scoped Feed in nuget.config\nDESCRIPTION: XML configuration for setting up a project-scoped feed in nuget.config file. The configuration should be placed in the same folder as the .csproj or .sln file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/move-from-fileshares.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\n    <configuration>\n      <packageSources>\n        <clear />\n        <add key=\\\"<FEED_NAME>\\\" value=\\\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\\\" />\n      </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Remove Cached Workspaces Example\nDESCRIPTION: Command example showing how to remove all cached workspaces from a specific collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspaces-command.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf workspaces /remove:* /collection:https://myserver:8080/tfs/DefaultCollection\n```\n\n----------------------------------------\n\nTITLE: Listing Hierarchical Items in Tree View Query\nDESCRIPTION: This code snippet shows how to construct a Tree Query in Azure Boards to display work items in a hierarchical structure. It demonstrates the query editor interface for both the web browser and Visual Studio 2015.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/linking-attachments.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n#### [Browser](#tab/browser/)\n\n:::image type=\"content\" source=\"media/query-link-attach-all-items-tree-query.png\" alt-text=\"Screenshot of Query Editor, Tree Query, web portal.\":::\n\n#### [Visual Studio 2015](#tab/visual-studio/)\n\n:::image type=\"content\" source=\"media/link-attachments/tree-query-te.png\" alt-text=\"Screenshot of Query Editor, Tree Query, Team Explorer.\":::\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory\nDESCRIPTION: Command to change directory to the demo project folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/code-with-git.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd contoso-demo\n```\n\n----------------------------------------\n\nTITLE: Process Configuration XML - Corrected Requirement Backlog States\nDESCRIPTION: Corrected version of ProcessConfiguration.xml with complete metastate mappings for the RequirementBacklog element.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_26\n\nLANGUAGE: xml\nCODE:\n```\n<RequirementBacklog category=\"Microsoft.RequirementCategory\" pluralName=\"Backlog items\" singularName=\"Backlog item\">\n   <States>\n      <State value=\"New\" type=\"Proposed\" />\n      <State value=\"Committed\" type=\"InProgress\" />\n      <State value=\"Done\" type=\"Complete\" />\n   </States>\n . . .\n</RequirementBacklog >\n```\n\n----------------------------------------\n\nTITLE: Unsetting Local http.postBuffer in Git Configuration\nDESCRIPTION: Command to remove the http.postBuffer setting from the repository-specific Git configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/rpc-failures-http-postbuffer.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit config --local --unset http.postBuffer\n```\n\n----------------------------------------\n\nTITLE: Configuring Organization-scoped Feed in nuget.config\nDESCRIPTION: XML configuration for connecting to an organization-scoped feed in Azure DevOps. This configuration should be placed in a nuget.config file in the same directory as your project file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/restore-nuget-packages-nuget-exe.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<SOURCE_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Milestones to Azure Boards Milestones/Events in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Milestones' to Azure Boards 'Milestones and key events'. It notes that milestones often occur at iteration ends and custom fields/tags can also be used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Milestones\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Milestones and key events**](safe-concepts.md#milestones). Milestones occur at the end of each iteration. Custom fields and tags can also be used to associate work with milestones and key events.   \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom Identity Field in XML for Azure DevOps\nDESCRIPTION: This XML snippet demonstrates how to define a custom identity field for a work item type in Azure DevOps. It includes the necessary attributes and child elements to specify an identity field with group validation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/customize-process.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Project Manager\" refname=\"Fabrikam.ProgramManager\" type=\"String\" reportable=\"dimension\" syncnamechanges=\"true\">\n    <ALLOWEXISTINGVALUE />\n    <VALIDUSER group=\"[PROJECT]\\Program Manager Group\" />\n    <HELPTEXT>The program manager responsible for signing off on the user story.</HELPTEXT>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: OData Error Response Format\nDESCRIPTION: Example of an OData error response JSON showing the format of error messages when a query violates an error rule, resulting in a 400 Bad Request status code.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_2\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"error\": {\n  \"code\": \"0\",\n  \"message\": \"The query specified in the URI is not valid. The Snapshot tables in Analytics are intended to be used only in an aggregation.\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Git Commands for Migrating Wiki Content\nDESCRIPTION: Series of Git commands to stage, commit, and push the migrated wiki content to the Azure DevOps wiki repository. This includes adding all files, committing changes, and force pushing to the wikiMain branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/migrate-extension-wiki-pages.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit add .\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -m <commit message>\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit push origin wikiMain -f\n```\n\n----------------------------------------\n\nTITLE: Example of Executing a Test Run with TCM\nDESCRIPTION: This example demonstrates executing a test run with ID 1000082 for the Fabrikam Fiber project in the fabrikamprime organization. The command returns a summary of the test results showing total, passed, failed, and inconclusive test counts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_5\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /execute /id:1000082 /collection:https://fabrikamprime.visualstudio.com /teamproject:\"Fabrikam Fiber\"\n\nExecuting run: MyTestRun\n\nResults\n------------------------\nTotal:                   2\nPassed:                  1\nFailed:                  1\nInconclusive:            0\n```\n\n----------------------------------------\n\nTITLE: Retrieving Teams using Azure DevOps REST API\nDESCRIPTION: JavaScript function demonstrating how to fetch teams for the current project using the Teams REST API client.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/web-navigation.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { getClient } from \"azure-devops-extension-api\";\nimport { CoreRestClient } from \"azure-devops-extension-api/Core\";\nimport * as SDK from \"azure-devops-extension-sdk\";\n\nprivate async getTeams() {\n    const client = getClient(CoreRestClient);\n    \n    client.getTeams(SDK.getWebContext().project.id).then(\n        function(teams) {\n            console.log(teams);\n        }\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Version Control Include Statement in Markdown\nDESCRIPTION: Markdown include statement for specifying Azure DevOps version compatibility\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-plan-track-boards.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 215 Update Links in Markdown\nDESCRIPTION: Uses a Microsoft Docs specific Markdown include directive to embed the content of 'includes/pipelines/sprint-215-update-links.md'. This snippet inserts links related to the Azure Pipelines updates for Sprint 215.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-215-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update-links](includes/pipelines/sprint-215-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Querying Open Items\nDESCRIPTION: Query clause to find items that haven't been closed by checking for null Closed Date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-date-or-current-iteration.md#2025-04-22_snippet_4\n\nLANGUAGE: WIQL\nCODE:\n```\nClosed Date = null\n```\n\n----------------------------------------\n\nTITLE: Rolling Back a Changeset for a Specific File in TFVC\nDESCRIPTION: This command negates the effect of changeset 23 on only the file a.txt. Other files modified in changeset 23 remain unchanged.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rollback-command-team-foundation-version-control.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nc:\\workspace> tf rollback /changeset:C23 a.txt\n```\n\n----------------------------------------\n\nTITLE: SSH Config for MAC Algorithm Compatibility\nDESCRIPTION: SSH configuration to enable hmac-sha2-512 and hmac-sha2-256 MAC algorithms when connecting to Azure DevOps servers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nHost ssh.dev.azure.com vs-ssh.visualstudio.com\n  MACs +hmac-sha2-512,+hmac-sha2-256\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Container in YAML Pipeline\nDESCRIPTION: This snippet demonstrates how to include a redis service container in a YAML pipeline for integration testing. The agent automatically manages the container lifecycle and networking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-146-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  redis:\n    image: redis\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Sources for Project-scoped Feed in XML\nDESCRIPTION: XML configuration for nuget.config file that connects to a project-scoped feed in Azure DevOps. This file should be placed in the same folder as your project or solution file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/restore-nuget-packages-dotnet.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<FEED_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Example JSON Output from az ad sp create-for-rbac Command\nDESCRIPTION: Displays a sample JSON object representing the output of the `az ad sp create-for-rbac` Azure CLI command. This output contains the essential credentials for the newly created service principal, including the client ID, client secret, subscription ID, and tenant ID, which are needed to configure authentication for Azure DevOps service connections. Placeholders indicate where specific values will appear.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"clientId\": \"<client GUID>\",\n  \"clientSecret\": \"<string-value>\",\n  \"subscriptionId\": \"<subscription GUID>\",\n  \"tenantId\": \"<tenant GUID>\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Work Item Type Inclusion Syntax\nDESCRIPTION: Markdown include statement for displaying work item type information\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-concepts.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/work-item-types.md)]\n```\n\n----------------------------------------\n\nTITLE: Implementing Certificate-Based Authentication Schema in Azure DevOps\nDESCRIPTION: Configuration for certificate-based authentication endpoint scheme. Requires certificate content to be provided in a text area input. The certificate is treated as confidential information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/auth-schemes.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"endpoint-auth-scheme-cert\",\n    \"description\": \"i18n:Creates a certificate-based endpoint authentication scheme\",\n    \"type\": \"ms.vss-endpoint.service-endpoint-type\",\n    \"targets\": [\n        \"ms.vss-endpoint.endpoint-types\"\n    ],\n    \"properties\": {\n        \"name\": \"Certificate\",\n        \"displayName\": \"i18n:Certificate Based\",\n        \"authenticationSchemes\": [\n            {\n                \"type\": \"ms.vss-endpoint.endpoint-auth-scheme-cert\",\n                \"inputDescriptors\": [\n                    {\n                        \"id\": \"certificate\",\n                        \"name\": \"i18n:Certificate\",\n                        \"description\": \"Content of the certificate\",\n                        \"inputMode\": \"TextArea\",\n                        \"isConfidential\": true,\n                        \"validation\": {\n                            \"isRequired\": true,\n                            \"dataType\": \"string\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Portfolio Kanban to Azure Boards Epics Board in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Portfolio Kanban' to the Azure Boards 'Portfolio Epics board'. It describes the board as an interactive, configurable display of the Epics backlog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Portfolio Kanban\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Portfolio Epics board**](safe-plan-track-boards.md#portfolio-team-board). The Portfolio team's board displays the Epics backlog as cards in an interactive, configurable, and filterable board.  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Team Using OData Analytics in Azure DevOps\nDESCRIPTION: This query retrieves work items associated with a specific team. It uses the 'any' operator to filter the collection of teams associated with each work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?\n  $filter=Teams/any(d:d/TeamName eq '{team name}')\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins XML System Property for Git Notifications\nDESCRIPTION: XML configuration snippet for setting up the Git notification access control in Jenkins. This configuration disables the commit access control by adding a system property to the Jenkins arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/services/jenkins.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n-Dhudson.plugins.git.GitStatus.NOTIFY_COMMIT_ACCESS_CONTROL=disabled\n```\n\n----------------------------------------\n\nTITLE: Writing Symbols Scope (`vso.symbols_write`)\nDESCRIPTION: Grants the ability to read and write symbols. Depends on `vso.symbols`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n`vso.symbols_write`\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 222 Update Links (Markdown)\nDESCRIPTION: This directive uses the Microsoft Docs Markdown syntax `[!INCLUDE ...]` to embed the content of another Markdown file. It specifically includes links related to Azure Pipelines updates for Sprint 222.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update-links](includes/pipelines/sprint-222-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Archiving and Uploading Python Web App for Deployment\nDESCRIPTION: Archives the Python application files into a ZIP package and uploads it as a pipeline artifact named 'drop'. This package will be used in the deployment stage to deploy the application to Azure App Service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\n       - task: ArchiveFiles@2\n         displayName: 'Archive files'\n         inputs:\n           rootFolderOrFile: '$(projectRoot)'\n           includeRootFolder: false\n           archiveType: zip\n           archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n           replaceExistingArchive: true\n    \n       - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\n         displayName: 'Upload package'\n         artifact: drop\n```\n\n----------------------------------------\n\nTITLE: Embedding YouTube Video in Markdown\nDESCRIPTION: This snippet demonstrates how to embed a YouTube video in a markdown document using an iframe syntax specific to Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-157-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!VIDEO https://youtube.com/embed/ID-AxX5NFPk]\n```\n\n----------------------------------------\n\nTITLE: JSON Response Format for Work Item Board Snapshot\nDESCRIPTION: Example JSON response showing the structure of work item board snapshot data, including date values, counts, and column names for each data point.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_14\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\": \"https://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}//$metadata#WorkItemBoardSnapshot(DateValue,ColumnName,Count)\",\n  \"value\": [\n    {\n      \"@odata.id\": null,\n      \"DateValue\": \"2015-07-16T00:00:00-07:00\",\n      \"Count\": 324,\n       \"ColumnName\": \"Completed\"\n    },\n    {\n      \"@odata.id\": null,\n      \"DateValue\": \"2015-07-16T00:00:00-07:00\",\n      \"Count\": 5,\n      \"ColumnName\": \"In Progress\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Release Notes Table Structure in HTML\nDESCRIPTION: HTML table structure documenting Azure DevOps feature releases and their corresponding versions. The table includes release dates, feature names, and version numbers where features were implemented.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<td>Delivery Plans general availability</td>\n<td></td><td>2017.2</td>\n</tr>\n<tr>\n<td>Work item search general availability</td>\n<td></td><td>2017.2</td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 200 Update Links for Azure Artifacts in Markdown\nDESCRIPTION: Includes a markdown file containing links related to the Sprint 200 update for Azure Artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/artifacts/sprint-200-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-200-update-links](../includes/artifacts/sprint-200-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Incorrect Custom Identity Field Definition in XML for Azure DevOps\nDESCRIPTION: This XML snippet shows an incorrect way to define a custom identity field for a work item type. It includes invalid elements like ALLOWEDVALUES and a DEFAULT value that is not an identity, which are not allowed for identity fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/customize-process.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Project Manager\" refname=\"Fabrikam.ProgramManager\" type=\"String\" reportable=\"dimension\" syncnamechanges=\"true\">\n    <ALLOWEXISTINGVALUE />\n    <ALLOWEDVALUES>\n      <LISTITEM value=\"[PROJECT]\\Program Manager Group\" />\n      <LISTITEM value=\"Not Assigned\" />\n    </ALLOWEDVALUES>\n    <DEFAULT from=\"value\" value=\"Not Assigned\" />\n    <VALIDUSER />\n    <HELPTEXT>The program manager responsible for signing off on the user story.</HELPTEXT>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: OData Query for Filtering User Stories by Tag in Azure DevOps Analytics\nDESCRIPTION: OData query that filters User Stories by a specific tag, excluding completed items, within a specific area path and date range. The query returns data grouped by date, state, and area path with count and story point aggregations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\n        $apply=filter(WorkItemType eq 'User Story'\n            and StateCategory ne 'Completed'\n            and startswith(Area/AreaPath,'{areapath}')\n            and Tags/any(x:x/TagName eq '{tagname}')\n            and DateValue ge {startdate}\n            and DateValue le {enddate}\n            and Date/DayName eq 'Friday'\n        )\n        /groupby (\n            (DateValue,State,Area/AreaPath,AreaSK),\n            aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints)\n        )\n```\n\n----------------------------------------\n\nTITLE: Subject Identifier Configuration for Federated Credentials\nDESCRIPTION: URL format for configuring the subject identifier in federated credentials. Requires replacing placeholders with organization name, project name, and service connection name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nENTRA_PREFIX/sc/ORGANIZATION_NAME/PROJECT_NAME/SERVICE_CONNECTION_NAME\n```\n\n----------------------------------------\n\nTITLE: Referencing SearchSecurity Namespace Permissions in Azure DevOps Markdown\nDESCRIPTION: These code snippets illustrate the use of permission tokens for the SearchSecurity namespace in Azure DevOps, such as `ReadMembers` and `ReadAnonymous`. They are used to control access related to user validation (anonymous or member). The namespace ID is provided for precise reference in REST API or script contexts. These are literal strings used in security configuration or documentation, with no dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n`ReadMembers`\n`ReadAnonymous`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`ca535e7e-67ce-457f-93fe-6e53aa4e4160`\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Iteration Path Using OData Analytics in Azure DevOps\nDESCRIPTION: This query filters work items based on a specific Iteration Path. It demonstrates how to select specific fields and expand related entities to get iteration information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/WorkItems?\n  $filter=Iteration/IterationPath eq '{iteration path}'\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Filtering work items by iteration path in Azure DevOps\nDESCRIPTION: Example of using the 'iteration' filter to find work items containing 'Wiki' in the Contoso/Sprint101 iteration path and its subpaths.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/functional-work-item-search.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nWiki iteration:Contoso/Sprint101\n```\n\n----------------------------------------\n\nTITLE: Merging Branches After Rollback in Azure DevOps (Batch)\nDESCRIPTION: This command merges $/BranchA/ into $/BranchB/ after a rollback operation. The behavior of this merge depends on whether the /keepmergehistory option was used during the previous rollback.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rollback-command-team-foundation-version-control.md#2025-04-22_snippet_8\n\nLANGUAGE: batch\nCODE:\n```\nc:\\workspace> tf merge $/BranchA $/BranchB\n```\n\n----------------------------------------\n\nTITLE: Constructing Security Token for Release Definition Permissions in Azure DevOps\nDESCRIPTION: Examples of constructing security tokens for managing release definition permissions at project level and for specific release definitions, including those in folders.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nPROJECT_ID\nxxxxxxxx-a1de-4bc8-b751-188eea17c3ba\n\nPROJECT_ID/12\nxxxxxxxx-a1de-4bc8-b751-188eea17c3ba/12\n\nPROJECT_ID/{folderName}/12\n\nPROJECT_ID/{folderName}/{DefinitionId}/Environment/{EnvironmentId}\n```\n\n----------------------------------------\n\nTITLE: Creating Basic PowerShell Module Function\nDESCRIPTION: Simple PowerShell function that writes 'Hello Azure DevOps!' to the host\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_15\n\nLANGUAGE: powershell\nCODE:\n```\nFunction Get-Hello{\n    Write-Host \"Hello Azure DevOps!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Token for Git Repository Permissions in Azure DevOps\nDESCRIPTION: Shows the token format for setting Git repository permissions at the project level and repository level in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nrepoV2/PROJECT_ID\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nrepoV2/PROJECT_ID/REPO_ID\n```\n\n----------------------------------------\n\nTITLE: Querying the Resource Areas REST API for URL Resolution in Azure DevOps\nDESCRIPTION: HTTP GET request to retrieve the correct base URL for the Release Management REST API. The request uses the organization URL and the resource area ID for Release Management services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET https://dev.azure.com/Fabrikam/_apis/resourceAreas/efc2f575-36ef-48e9-b672-0c6fb4a48ac5?api-version=5.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: Negative Input Test for Square Root in C#\nDESCRIPTION: Test case verifying proper exception handling for negative input values with timeout constraint.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-write-new-code-user-story.md#2025-04-22_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\n[TestMethod, Timeout(1000)]\npublic void RootTestNegativeInput()\n{\n    LocalMath math = new LocalMath();\n    try\n    {\n        math.SquareRoot(-10.0);\n    }\n    catch (ArgumentOutOfRangeException)\n    {\n        return;\n    }\n    catch\n    {\n        Assert.Fail(\"Wrong exception on negative input\");\n        return;\n    }\n    Assert.Fail(\"No exception on negative input\");\n}\n```\n\n----------------------------------------\n\nTITLE: Staging all file changes in Git\nDESCRIPTION: This command stages all changes in the working directory for the next commit. It includes new, modified, and deleted files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_13\n\nLANGUAGE: git\nCODE:\n```\ngit add --all\n```\n\n----------------------------------------\n\nTITLE: Using witadmin to Import Work Item Type Definition\nDESCRIPTION: Command-line example showing how to use witadmin to import a Work Item Type definition XML file into an Azure DevOps project. Specifies the collection URL, project name, and file path parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_20\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin importwitd /collection:CollectionURL /p:\"ProjectName\" /f:\"DirectoryPath\\WITDefinitionFile.xml\"\n```\n\n----------------------------------------\n\nTITLE: Confirming Azure DevOps Extension Installation\nDESCRIPTION: Command to verify that the Azure DevOps extension is properly installed in Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/prerequisites-cli.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz extension show --name azure-devops\n```\n\n----------------------------------------\n\nTITLE: Querying Feature Progress for a Team in Power BI\nDESCRIPTION: This Power Query retrieves Feature work items and their User Story descendants for specific teams, aggregating Story Points by State Category. It filters by Team Name and excludes cut items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-featureprogress.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerQuery\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'Feature' \"\n            &\"and State ne 'Cut' \"\n            &\"and (Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) \"\n            &\"and Descendants/any() \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,AreaSK \"\n        &\"&$expand=Descendants( \"\n            &\"$apply=filter(WorkItemType eq 'User Story') \"\n                &\"/groupby((StateCategory), \"\n                &\"aggregate(StoryPoints with sum as TotalStoryPoints)) \"\n            &\")  \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Customizing Quick Add Panel Configuration for Work Items\nDESCRIPTION: This snippet demonstrates the default configuration for the quick add panel in Visual Studio Scrum and MSF for Agile process templates. It shows how to specify which fields (in this case, only System.Title) appear in the quick add panel when creating new work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n<AddPanel>\n      <Fields>\n      <Field refname=\"System.Title\" />\n      </Fields>\n</AddPanel>\n```\n\n----------------------------------------\n\nTITLE: Reporting Flaky Tests in Azure DevOps Test Summary\nDESCRIPTION: This snippet illustrates how flaky tests are reported in the Azure DevOps Test Summary. It shows how flaky tests can be excluded from the pass percentage and listed under 'Tests not reported'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/flaky-test-management.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Flaky Reporting](media/flaky-test-management/flaky_reporting.png)\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Authentication with PAT in C# using HttpClient\nDESCRIPTION: This C# code snippet demonstrates how to authenticate REST API requests to Azure DevOps using a Personal Access Token. It converts the PAT to Base64 format and includes it in the authorization header to retrieve build information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/personal-access-tokens.md#2025-04-22_snippet_0\n\nLANGUAGE: cs\nCODE:\n```\npublic static async void GetBuilds()\n{\n    try\n    {\n        var personalaccesstoken = \"PATFROMWEB\";\n\n        using (HttpClient client = new HttpClient())\n        {\n            client.DefaultRequestHeaders.Accept.Add(\n                new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue(\"application/json\"));\n\n            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\",\n                Convert.ToBase64String(\n                    System.Text.ASCIIEncoding.ASCII.GetBytes(\n                        string.Format(\"{0}:{1}\", \"\", personalaccesstoken))));\n\n            using (HttpResponseMessage response = client.GetAsync(\n                        \"https://dev.azure.com/{organization}/{project}/_apis/build/builds?api-version=5.0\").Result)\n            {\n                response.EnsureSuccessStatusCode();\n                string responseBody = await response.Content.ReadAsStringAsync();\n                Console.WriteLine(responseBody);\n            }\n        }\n    }\n    catch (Exception ex)\n    {\n        Console.WriteLine(ex.ToString());\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Job with VM Image in Azure DevOps\nDESCRIPTION: Defines a build job that runs on the operating system specified in the vmImageName variable. This configuration is used in Azure DevOps Services for building Python web applications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\n  - job: BuildJob\n    pool:\n      vmImage: $(vmImageName)\n```\n\n----------------------------------------\n\nTITLE: Listing Azure DevOps Projects via REST API and Azure CLI - azurerestapi\nDESCRIPTION: Retrieves a list of projects (as a proxy for organizations) from a specified Azure DevOps organization using the REST API via the Azure CLI 'az rest' command. Requires an Azure DevOps Personal Access Token (PAT) for authorization, which should be substituted in the request headers. Replace '{My_Organization}' with your organization and '{PAT}' with your token. Outputs the raw JSON response of projects associated with the organization; the command is constrained by the permissions of the PAT and requires API version 6.0 or later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/get-list-of-organizations-connected-to-azure-active-directory.md#2025-04-22_snippet_2\n\nLANGUAGE: azurerestapi\nCODE:\n```\naz rest --method get --uri https://dev.azure.com/{My_Organization}/_apis/projects?api-version=6.0 --headers \"Authorization=Bearer {PAT}\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Work Item Selection Event Handling in Azure DevOps Extension\nDESCRIPTION: JavaScript interface for handling work item selection events in a custom backlog panel. This snippet shows the structure for implementing the IContributedPanel interface to receive information about selected work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-backlog-panel.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nIContributedPanel {\n    workItemSelectionChanged: (selectedWorkItems: WorkItem[]) => void;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing TFX-CLI Tool via NPM\nDESCRIPTION: Command to install the Cross-platform CLI for Azure DevOps (tfx-cli) using npm. This tool is required for packaging the integration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/integration.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g tfx-cli\n```\n\n----------------------------------------\n\nTITLE: Detailed Azure DevOps Release Approval Pending Event Payload in JSON\nDESCRIPTION: This JSON payload provides a more detailed representation of an Azure DevOps release approval pending event. It includes additional information about the release, environments, approvals, and associated tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000a73e7272-e96d-4249-93ac-7404eacd6801\",\n  \"eventType\": \"ms.azure-devops-release.deployment-approval-pending-event\",\n  \"publisherId\": \"rm\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Pre deployment approval pending for release Release-1 on environment Dev.\",\n    \"html\": \"Pre deployment approval pending for release <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1'>Release-1</a> on environment <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1'>Dev</a>.\",\n    \"markdown\": \"Pre deployment approval pending for release [Release-1](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1) on environment [Dev](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1).\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Pre deployment approval pending for release Release-1 on environment Dev.\\\\r\\\\nPending on: Chuck Reinhart\\\\r\\\\nPending since: 09 May 2016 12:09:29 (UTC)\",\n    \"html\": \"Pre deployment approval pending of release <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1'>Release-1</a> on environment <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1'>Dev</a>.\\\\r\\\\nPending on: Chuck Reinhart\\\\r\\\\nPending  since: 09 May 2016 12:09:29 (UTC)\",\n    \"markdown\": \"Pre deployment approval pending for release [Release-1](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1) on environment [Dev](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apps/hub/ms.azure-devops-releaseManagement-web.hub-explorer?_a=environment-summary&definitionEnvironmentId=8&definitionId=1).\\\\r\\\\nPending on: Chuck Reinhart\\\\r\\\\nPending  since: 09 May 2016 12:09:29 (UTC)\"\n  },\n  \"resource\": {\n    \"approval\": {\n      \"id\": 0,\n      \"revision\": 0,\n      \"approver\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"displayName\": \"Chuck Reinhart\"\n      },\n      \"approvalType\": \"preDeploy\",\n      \"createdOn\": \"2016-01-21T08:19:17.26Z\",\n      \"modifiedOn\": \"2016-01-21T08:19:17.26Z\",\n      \"status\": \"pending\",\n      \"comments\": \"\",\n      \"isAutomated\": false,\n      \"isNotificationOn\": true,\n      \"trialNumber\": 1,\n      \"attempt\": 0,\n      \"rank\": 1,\n      \"release\": {\n        \"id\": 1,\n        \"name\": \"Release-1\"\n      },\n      \"releaseDefinition\": {\n        \"id\": 1,\n        \"name\": \"Fabrikam.CD\",\n        \"url\": \"http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/definitions/1\"\n      },\n      \"releaseEnvironment\": {\n        \"id\": 8,\n        \"name\": \"Dev\"\n      }\n    },\n    \"release\": {\n      \"id\": 1,\n      \"name\": \"Release-1\",\n      \"status\": \"active\",\n      \"createdOn\": \"2016-01-21T08:19:17.26Z\",\n      \"modifiedOn\": \"2016-01-21T08:19:17.26Z\",\n      \"modifiedBy\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"displayName\": \"Chuck Reinhart\"\n      },\n      \"createdBy\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"displayName\": \"Chuck Reinhart\"\n      },\n      \"environments\": [\n        {\n          \"id\": 5,\n          \"releaseId\": 0,\n          \"name\": \"Dev\",\n          \"status\": \"succeeded\",\n          \"variables\": {},\n          \"preDeployApprovals\": [],\n          \"postDeployApprovals\": [],\n          \"preApprovalsSnapshot\": {\n            \"approvals\": [],\n            \"approvalOptions\": {\n              \"requiredApproverCount\": 0,\n              \"releaseCreatorCanBeApprover\": true\n            }\n          },\n          \"postApprovalsSnapshot\": {\n            \"approvals\": []\n          },\n          \"deploySteps\": [],\n          \"rank\": 1,\n          \"definitionEnvironmentId\": 1,\n          \"queueId\": 1,\n          \"environmentOptions\": {\n            \"emailNotificationType\": \"OnlyOnFailure\",\n            \"emailRecipients\": \"release.environment.owner;release.creator\",\n            \"skipArtifactsDownload\": false,\n            \"timeoutInMinutes\": 0,\n            \"enableAccessToken\": false\n          },\n          \"demands\": [],\n          \"conditions\": [],\n          \"modifiedOn\": \"2016-01-21T08:19:17.26Z\",\n          \"workflowTasks\": [\n            {\n              \"taskId\": \"00000000-0000-0000-0000-000000000000\",\n              \"version\": \"*\",\n              \"name\": \"Deploy Website to Azure\",\n              \"enabled\": true,\n              \"alwaysRun\": false,\n              \"continueOnError\": false,\n              \"timeoutInMinutes\": 0,\n              \"definitionType\": null,\n              \"inputs\": {\n                \"ConnectedServiceName\": \"b460b0f8-fe23-4dc2-a99c-fd8b0633fe1c\",\n                \"WebSiteName\": \"$(webAppName)\",\n                \"WebSiteLocation\": \"Southeast Asia\",\n                \"Slot\": \"\",\n                \"Package\": \"$(System.DefaultWorkingDirectory)\\\\**\\\\*.zip\"\n              }\n            }\n          ],\n          \"deployPhasesSnapshot\": [],\n          \"owner\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\n            \"displayName\": \"Chuck Reinhart\"\n          },\n          \"scheduledDeploymentTime\": \"2016-01-21T08:19:17.26Z\",\n          \"schedules\": [],\n          \"release\": {\n            \"id\": 1,\n            \"name\": \"Release-1\",\n            \"url\": \"http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/1\"\n          }\n        }\n      ],\n      \"variables\": {},\n      \"artifacts\": [\n        {\n          \"sourceId\": \"31419848-1780-4137-b7e3-62092e986fd6:1\",\n          \"type\": \"Build\",\n          \"alias\": \"Fabrikam.CI\",\n          \"definitionReference\": {\n            \"Definition\": {\n              \"id\": \"00000000-0000-0000-0000-0000000000001\",\n              \"name\": \"Fabrikam.CI\"\n            },\n            \"Project\": {\n              \"id\": \"00000000-0000-0000-0000-00000000000031419848-1780-4137-b7e3-62092e986fd6\",\n              \"name\": \"Fabrikam\"\n            }\n          },\n          \"isPrimary\": true\n        }\n      ],\n      \"releaseDefinition\": {\n        \"id\": 1,\n        \"name\": \"Fabrikam.CD\",\n        \"url\": \"http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/definitions/1\"\n      },\n      \"description\": \"QFE release for fixing title\",\n      \"reason\": \"continuousIntegration\",\n      \"releaseNameFormat\": \"Release-$(rev:r)\",\n      \"keepForever\": false,\n      \"definitionSnapshotRevision\": 0,\n      \"comment\": \"\",\n      \"logsContainerUrl\": null,\n      \"_links\": {}\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-00000000000000000000-0000-0000-0000-000000000000\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Run Outcomes Filtered by Build Reason in Power BI\nDESCRIPTION: Power BI query that fetches pipeline run outcome data filtered by pipeline name, build reason, and completion date. The query groups results by RunReason and aggregates counts for different outcome statuses (Succeeded, Failed, PartiallySucceeded, Canceled).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_6\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\") \"\n        &\"/groupby( \"\n        &\"(RunReason), \"\n            &\"aggregate( \"\n                &\"$count as TotalCount, \"\n                &\"SucceededCount with sum as SucceededCount , \"\n            &\"FailedCount with sum as FailedCount, \"\n                &\"PartiallySucceededCount with sum as PartiallySucceededCount , \"\n            &\"CanceledCount with sum as CanceledCount \"\n        &\")) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Extension Files Configuration in Manifest\nDESCRIPTION: Configuration for including files and folders in the extension package with addressable paths.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-widget-manifest.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"files\": [\n        {\n            \"path\": \"hello-world.html\", \"addressable\": true\n        },\n        {\n            \"path\": \"sdk/scripts\", \"addressable\": true\n        },\n        {\n            \"path\": \"img\", \"addressable\": true\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Azure DevOps Extension using Azure CLI\nDESCRIPTION: Installs the `azure-devops` extension for the Azure Command-Line Interface (CLI). This extension is required to interact with Azure DevOps services like Pipelines and Repos from the command line.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name azure-devops \n```\n\n----------------------------------------\n\nTITLE: Managing Iterations and Areas in Azure DevOps\nDESCRIPTION: This code snippet shows the HTML for an image that highlights the 'Iterations and Areas' section in Azure DevOps team management interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-teams.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n:::image type=\"content\" source=\"media/manage-iterations-areas.png\" alt-text=\"Screenshot of Iterations and areas highlighted.\":::\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Table in Markdown\nDESCRIPTION: Markdown table defining permission requirements for setting object-level permissions\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-object-level-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Permissions** | Member of the **Project Administrators** group or explicit permissions through the individual object security dialog.|\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Scaling ARM Template\nDESCRIPTION: ARM template for deploying a managed agent pool with automatic scaling configuration. Implements automatic prediction with balanced performance preference.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                \"agentProfile\": {\n                    \"kind\": \"Stateless\",\n                    \"resourcePredictionsProfile\": {\n                        \"predictionPreference\": \"Balanced\",\n                        \"kind\": \"Automatic\"\n                    }\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing Repository Level Permissions in Azure Repos\nDESCRIPTION: This command shows repository level permissions for the 'FabrikamFiber' repository within the 'FabrikamFiber' project. It requires the collection URL, project name, repository name, and user login credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-permission-command.md#2025-04-22_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\ntf git permission /collection:https://dev.azure.com/fabrikam-fiber \n                  /teamproject:FabrikamFiber \n                  /repository:FabrikamFiber \n                  /login:FabrikamUser@hotmail.com,FabrikamPassword\n```\n\n----------------------------------------\n\nTITLE: Making a Field Read-Only Except for a Security Group in Azure DevOps - XML\nDESCRIPTION: This XML snippet restricts modification of the \"Triage Description\" field by making it read-only for all users except those in the \"Triage Committee\" group. It uses the <READONLY> element with the 'not' attribute to specify the exception group. The snippet assumes the existence of the \"[Project]\\Triage Committee\" group and should be included within an XML work item type definition. Users outside the group will be unable to edit this field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_14\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\\\"Triage Description\\\">\\n   <READONLY not=\\\"[Project]\\\\Triage Committee\\\" />\\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Example: Clearing All Permissions for a User\nDESCRIPTION: Example command that clears all permissions for a specific user in the specified namespace without requiring confirmation. The output shows a simple True/False result.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission reset-all --id 58450c49-b02d-465a-ab12-59ae512d6531 --subject contoso@contoso.com --token 0611925a-b287-4b0b-90a1-90f1a96e9f1f --yes --output table\n```\n\n----------------------------------------\n\nTITLE: Embedding Video in Azure DevOps Wiki using HTML\nDESCRIPTION: This example shows how to embed a video in an Azure DevOps wiki page using the HTML video tag. It includes attributes for setting the video source, width, and controls.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_21\n\nLANGUAGE: HTML\nCODE:\n```\n<video src=\"path of the video file\" width=400 controls>\n</video>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<video src=\"https://sec.ch9.ms/ch9/7247/7c8ddc1a-348b-4ba9-ab61-51fded6e7247/vstswiki_high.mp4\" width=400 controls>\n</video>\n```\n\n----------------------------------------\n\nTITLE: Correcting Duplicate ProjectConfiguration Statements (XML)\nDESCRIPTION: This example shows how to fix the issue of duplicate ProjectConfiguration statements in the WorkItems.xml file. It provides the error example and the resolution with a single ProjectConfiguration statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n    <taskXml>\n      <PROCESSCONFIGURATION>\n        <ProjectConfiguration fileName=\"WorkItem Tracking\\Process\\ProcessConfiguration.xml\"/>\n      </PROCESSCONFIGURATION>\n    </taskXml>\n```\n\n----------------------------------------\n\nTITLE: Basic Syntax for tf git view Command in Azure Repos\nDESCRIPTION: The basic syntax for the tf git view command which retrieves a file from a Git repository to a temporary location and displays it. The command requires collection URL, team project identifier, repository identifier, and either a blob ID or file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-view-command.md#2025-04-22_snippet_0\n\nLANGUAGE: command-line\nCODE:\n```\ntf git view /collection:TeamProjectCollectionUrl\n            /teamproject:TeamProjectIdentifier\n            /repository:RepositoryIdentifier\n            (/blobId:blobId | /path:path [/commitId:commitId])\n            [/output:localfile]\n            [/console]\n            [/login:username[,password]]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization URL Structure\nDESCRIPTION: Shows the URL pattern for accessing an Azure DevOps organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/wiki-view-history.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Organization with ARM Template\nDESCRIPTION: ARM template configuration for setting up a Managed DevOps Pool with single organization access. Includes organization profile configuration with URL, projects, and parallelism settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n            ...\n            \"organizationProfile\": {\n                \"organizations\": [\n                    {\n                        \"url\": \"https://dev.azure.com/fabrikam-tailspin\",\n                        \"projects\": [],\n                        \"parallelism\": 4\n                    }\n                ],\n                \"permissionProfile\": {\n                    \"kind\": \"CreatorOnly\"\n                },\n                \"kind\": \"AzureDevOps\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Work Item Type using witadmin Command\nDESCRIPTION: Command line instruction to permanently remove a Work Item Type and all associated work items from a project using the witadmin destroywitd command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_13\n\nLANGUAGE: Shell\nCODE:\n```\nwitadmin destroywitd /collection:\"http://FabrikamPrime:8080/tfs/DefaultCollection\" /p:\"Fabrikam Web Site\" /n:\"Impediment\"\n```\n\n----------------------------------------\n\nTITLE: Defining Work Item Tag Permissions in Azure DevOps\nDESCRIPTION: This snippet outlines the permission structure for work item tags in Azure DevOps, including Create tag definition, Delete tag definition, Enumerate tag definition, and Update tag definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_48\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   ### Permission (UI)   \n   `Namespace permission`  \n   :::column-end:::\n   :::column span=\"2\":::\n   ### Description \n   :::column-end:::\n:::row-end:::\n---\n:::row:::\n   :::column span=\"1\":::\n   <a id=\"create-tag-definition-permission\"></a> Create tag definition  \n   `Tagging, Create`  \n   :::column-end:::\n   :::column span=\"2\":::\n   \n   [Can create new tags and apply them to work items.](../../boards/queries/add-tags-to-work-items.md)\n   Users without this permission can only select from the existing set of tags for the project.\n\n   By default, Contributors are assigned the **Create tag definition** permission. Although the **Create tag definition** permission appears in the security settings at the project-level, tagging permissions are actually collection-level permissions that are scoped at the project level when they appear in the user interface. To scope tagging permissions to a single project when you're using a command-line tool, you must provide the GUID for the project as part of the command syntax. Otherwise, your change applies to the entire collection. Keep this in mind when changing or setting these permissions.\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"1\":::\n   <a id=\"delete-tag-definition-permission\"></a> Delete tag definition  \n   `Tagging, Delete`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can remove a tag from the list of available tags for that project.\n   \n   This permission doesn't appear in the UI. You can only set it by using a command-line tool. There's also no UI to explicitly delete a tag. Instead, when a tag has not been in use for three days, the system automatically deletes it.\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"1\":::\n   <a id=\"enumerate-tag-definition-permission\"></a> Enumerate tag definition  \n   `Tagging, Enumerate`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can view a list of tags available for the work item within the project.\n   Users without this permission don't have a list of available tags\n   from which to choose in the work item form or in the query editor.\n \n   This permission doesn't appear in the UI. It can only be set by using a command-line tool. The **View project-level information** implicitly allows users to view existing tags.\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"1\":::\n   <a id=\"update-tag-definition-permission\"></a> Update tag definition  \n   `Tagging, Update`  \n   :::column-end:::\n   :::column span=\"2\":::\n   Can rename a tag by using the REST API.\n   \n   This permission doesn't appear in the UI. It can only be set by using a command-line tool. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Viewing Build Resources Permission Code in Azure DevOps\nDESCRIPTION: Permission code for viewing build resources in Azure DevOps. This allows users to view, but not use, build controllers and build agents configured for an organization or project collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/collection-level-permissions-reference-table.md#2025-04-22_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\nBuildAdministration, ViewBuildResources\n```\n\n----------------------------------------\n\nTITLE: Filtering URLs with Special Characters in Azure DevOps Queries (Value)\nDESCRIPTION: This snippet shows the string value used in an Azure DevOps query (like `Title ~ \"...\"`) to filter for a work item title containing a specific URL. Special characters like forward slashes (`/`) must be escaped using a backslash (`\\`) within the query value string.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/titles-ids-descriptions.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n\"https:\\/\\/example.com\\/path-to-resource\"\n```\n\n----------------------------------------\n\nTITLE: List All Collection Fields Command\nDESCRIPTION: Lists all fields defined for a project collection using witadmin listfields command\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_2\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin listfields /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection\n```\n\n----------------------------------------\n\nTITLE: Retrieving Bugs without Duplicate Links using Power BI Query in Azure DevOps\nDESCRIPTION: Power BI M query that retrieves bugs that do not have a Duplicate link to another bug. The query filters by work item type, state, area path, and the absence of a Duplicate link.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_8\n\nLANGUAGE: PowerBI M Query\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'Bug' \"\n                &\"and State ne 'Closed' \"\n                &\"and startswith(Area/AreaPath,'{areapath}') \"\n                &\"and not (Links/any(x:x/LinkTypeName eq 'Duplicate' and x/TargetWorkItem/WorkItemType eq 'Bug')) \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Overriding Package Versions in Yarn\nDESCRIPTION: Shows three different methods to override a package version using Yarn's selective dependency resolutions feature. The example demonstrates overriding the 'acorn' package version in different scopes, from least to most specific.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"name\": \"yarn-resolutions\",\n  \"version\": \"1.0.0\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"axios\": \"0.19.2\",\n    \"eslint\": \"5.16.0\"\n  },\n  \"resolutions\": {\n    // DO NOT USE!\n    \"**/acorn\": \"6.4.1\",\n    // BETTER\n    \"eslint/**/acorn\": \"6.4.1\",\n    // BEST\n    \"eslint/espree/acorn\": \"6.4.1\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Query Dropdown Change Handler in JavaScript\nDESCRIPTION: Code that handles changes to the query dropdown selection and notifies the widget framework of configuration changes using the WidgetHelpers API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n $queryDropdown.on(\"change\", function () {\n     var customSettings = {\n        data: JSON.stringify({\n                queryPath: $queryDropdown.val()\n            })\n     };\n     var eventName = WidgetHelpers.WidgetEvent.ConfigurationChange;\n     var eventArgs = WidgetHelpers.WidgetEvent.Args(customSettings);\n     widgetConfigurationContext.notify(eventName, eventArgs);\n });\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Multiple Tags (OR) in OData\nDESCRIPTION: Query to retrieve work items that have been tagged with either of two specified tags using an OR condition. This demonstrates how to use the Tags navigation property with multiple tag filtering options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_24\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=Tags/any(t:t/TagName eq {tag1} or t/TagName eq {tag2})\n  &$select=WorkItemId, Title, State\n```\n\n----------------------------------------\n\nTITLE: Using the Branch Command in TFVC\nDESCRIPTION: The basic syntax for the TFVC branch command. This command copies items with their metadata and version control history between locations in Azure DevOps and the local workspace. Changes aren't reflected on the server until check-in.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branch-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf branch olditem newitem [/version:versionspec] [/noget] [/lock:(none|checkin|checkout)] [/noprompt] [/silent] [/checkin] [/comment:(\"comment\"|@commentfile)] [/author:authorname] [/login:username, [password]] [/recursive]\n```\n\n----------------------------------------\n\nTITLE: Work Item Restored Event Payload in Azure DevOps\nDESCRIPTION: Sample JSON payload for a work item restoration event in Azure DevOps. Shows event details, message formatting options, and work item data after restoration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_33\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-0000000000001ca023d6-6cff-49dd-b3d1-302b69311810\",\n  \"eventType\": \"workitem.restored\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Bug #5 (Some great new idea!) restored by Jamal Hartnett.\\r\\n(https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000)\",\n    \"html\": \"<a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=74e918bf-3376-436d-bd20-8e8c1287f465&amp;id=5\\\">Bug #5</a> (Some great new idea!) restored by Jamal Hartnett.\",\n    \"markdown\": \"[Bug #5](https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000) (Some great new idea!) restored by Jamal Hartnett.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Bug #5 (Some great new idea!) restored by Jamal Hartnett.\\r\\n(https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000)\\r\\n\\r\\n- Area: FabrikamCloud\\r\\n- Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1\\r\\n- State: New\\r\\n- Severity: 3 - Medium\\r\\n\",\n    \"html\": \"<a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=74e918bf-3376-436d-bd20-8e8c1287f465&amp;id=5\\\">Bug #5</a> (Some great new idea!) restored by Jamal Hartnett.<ul>\\r\\n- Area: FabrikamCloud</br>\\r\\n- Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1</br>\\r\\n- State: New</br>Severity: 3 - Medium</br></ul>\",\n    \"markdown\": \"[Bug #5](https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000) (Some great new idea!) restored by Jamal Hartnett.\\r\\n\\r\\n* Area: FabrikamCloud\\r\\n* Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1\\r\\n* State: New\\r\\n* Severity: 3 - Medium\\r\\n\"\n  },\n  \"resource\": {\n    \"id\": 5,\n    \"rev\": 1,\n    \"fields\": {\n      \"System.AreaPath\": \"FabrikamCloud\",\n      \"System.TeamProject\": \"FabrikamCloud\",\n      \"System.IterationPath\": \"FabrikamCloud\\\\Release 1\\\\Sprint 1\",\n      \"System.WorkItemType\": \"Bug\",\n      \"System.State\": \"New\",\n      \"System.Reason\": \"New defect reported\",\n      \"System.CreatedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.CreatedBy\": \"Jamal Hartnett\",\n      \"System.ChangedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.ChangedBy\": \"Jamal Hartnett\",\n      \"System.Title\": \"Some great new idea!\",\n      \"Microsoft.Azure DevOps Services.Common.Severity\": \"3 - Medium\",\n      \"WEF_EB329F44FE5F4A94ACB1DA153FDF38BA_Kanban.Column\": \"New\"\n    },\n    \"_links\": {\n      \"self\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5\"\n      },\n      \"workItemUpdates\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/updates\"\n      },\n      \"workItemRevisions\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/revisions\"\n      },\n      \"workItemType\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/ea830882-2a3c-4095-a53f-972f9a376f6e/workItemTypes/Bug\"\n      },\n      \"fields\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/fields\"\n      },\n      \"html\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=d81542e4-cdfa-4333-b082-1ae2d6c3ad16&id=5\"\n      },\n      \"workItemHistory\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/history\"\n      }\n    },\n    \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:30.1456784Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Searching by Resolved By using Reference Name\nDESCRIPTION: This example shows searching for work items using the reference name of the 'Resolved By' field. The query `Microsoft.VSTS.Common.ResolvedBy:Peter` finds work items resolved by 'Peter', providing an alternative to using the friendly name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_14\n\nLANGUAGE: azure-devops-search\nCODE:\n```\nMicrosoft.VSTS.Common.ResolvedBy:Peter\n```\n\n----------------------------------------\n\nTITLE: Displaying Error State for Rollup Data in Azure DevOps\nDESCRIPTION: This markdown snippet shows an image of an error state when retrieving rollup data in Azure DevOps. It demonstrates how the system displays an info icon and empty rows when there's an error in data retrieval.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/display-rollup.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Screenshot showing Error getting data.](media/rollup/error-getting-data.png)\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items Associated with the Current User\nDESCRIPTION: This query finds items that either mention the user's name in the History or were ever assigned to the current user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/history-and-auditing.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n`History Contains Words MyName`  \n`Or Assigned To Was Ever _ @Me`\n```\n\n----------------------------------------\n\nTITLE: Running witadmin Command to Rename a Work Item Type\nDESCRIPTION: This command changes the display name of a work item type within a specific project. After running this command, existing work items will show the new name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin renamewitd /collection:CollectionURL /p:Project /n:TypeName /new:NewName [/noprompt]\n```\n\n----------------------------------------\n\nTITLE: Correcting Path in Classification Properties - Azure DevOps XML\nDESCRIPTION: This shows a properties block in Classification.xml where file paths or template names may be misspelled. The resolution snippet corrects a template value to match expected names. All property attributes must be correctly named and point to actual files in the specified path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_18\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\\n <property name=\\\"MSPROJ\\\" value=\\\"Classification\\\\Fabrikam_FileMapping.xml\\\" isFile=\\\"true\\\" />\\n <property name=\\\"Process Template\\\" value=\\\"Agile\\\"/>\\n</properties>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\\n  <property name=\\\"MSPROJ\\\" value=\\\"Classification\\\\Fabrikam_FileMapping.xml\\\" isFile=\\\"true\\\" />\\n  <property name=\\\"Process Template\\\" value=\\\"Fabrikam Agile\\\"/>\\n</properties>\n```\n\n----------------------------------------\n\nTITLE: Listing Changes Recursively in a Folder\nDESCRIPTION: Example demonstrating how to recursively list pending changes in a folder and all its subfolders by combining wildcard notation with the /recursive flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/status-command.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf stat SolutionA\\* /recursive\n```\n\n----------------------------------------\n\nTITLE: Restoring Specific npm Package in Azure Artifacts\nDESCRIPTION: This command restores a specific npm package and saves it to the project's dependencies. Replace <PACKAGE_NAME> with the desired package name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/get-started-npm.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save <PACKAGE_NAME>\n```\n\n----------------------------------------\n\nTITLE: JSON Response from Work Item Count Query in Azure DevOps Analytics\nDESCRIPTION: This JSON snippet shows the response format when querying for a work item count using OData in Azure DevOps Analytics. The response contains the context information and the count value in the results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-best-practices.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\": \"https://analytics.dev.azure.com/fabrikam/Fabrikam Fbier/_odata/v4.0-preview/$metadata#WorkItems(Count)\",\n   \"value\": [\n  {\n     \"@odata.id\": null,\n   \"Count\": 1415\n  }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Package Search Results using Azure DevOps REST API\nDESCRIPTION: This snippet demonstrates how to use the Azure DevOps REST API to search for packages in a specific organization. It shows the HTTP POST request format and the JSON body structure for the search query.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/functional-package-search.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST https://almsearch.dev.azure.com/ORGANIZATION_NAME/_apis/search/packagesearchresults?api-version=7.0\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$orderBy\": null,\n  \"$top\": 100,\n  \"$skip\": 0,\n  \"searchText\": \"react-calendar\",\n  \"filters\": {\n    \"ProtocolType\": \"Npm\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Deletion IDs for Multiple Deleted Items\nDESCRIPTION: Command that displays deletion IDs for all deleted items on the server, useful when multiple versions of the same file have been deleted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undelete-command.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\nc:\\projects>tf dir $/ /deleted\n```\n\n----------------------------------------\n\nTITLE: Deleting a Wiki Page using Azure CLI\nDESCRIPTION: This command deletes a wiki page with the specified path in a named wiki project. It uses the Azure CLI to interact with Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-edit-wiki.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page delete --path 'my wiki' --wiki 'myprojectwiki'\n```\n\n----------------------------------------\n\nTITLE: Adding Requirement Type Field for CMMI Work Item Type in Azure DevOps\nDESCRIPTION: XML definition for the Requirement Type field specific to the CMMI process template. This field classifies requirements into different categories like Functional, Security, Interface, etc.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Requirement Type\" refname=\"Microsoft.VSTS.CMMI.RequirementType\" type=\"String\" reportable=\"dimension\">  \n<REQUIRED />  \n<ALLOWEDVALUES>  \n   <LISTITEM value=\"Scenario\" />  \n   <LISTITEM value=\"Quality of Service\" />  \n   <LISTITEM value=\"Functional\" /> \n   <LISTITEM value=\"Operational\" />  \n   <LISTITEM value=\"Interface\" />  \n   <LISTITEM value=\"Security\" />  \n   <LISTITEM value=\"Safety\" />  \n   <LISTITEM value=\"Business Objective\" />  \n   <LISTITEM value=\"Feature\" />  \n</ALLOWEDVALUES> \n<DEFAULT from=\"value\" value=\"Functional\" />  \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Listing Items Based on Linked Dependents Query\nDESCRIPTION: This code snippet demonstrates how to create a query that returns work items with dependencies on work managed by other teams and projects. It shows the query construction for both the web browser and Visual Studio 2015 interfaces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/linking-attachments.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n#### [Browser](#tab/browser/)\n\nThe following query finds work items in all projects that are linked to work items under the **Fabrikam** area path and project using Predecessor and Successor link types.\n\n:::image type=\"content\" source=\"media/link-attachments/direct-links-query-web-portal.png\" alt-text=\"Screenshot of Query Editor, Work items, and direct links, Web portal.\":::\n\n#### [Visual Studio 2015](#tab/visual-studio/)\n\nUse this type of query to list all dependent work items that link to active Product Backlog Items or Bugs that aren't removed, closed, or completed. Only those dependent work items that are under a product area other than the **Phone Save\\Phone Customers** are returned.\n\n![Work Items and Dependent Links Query](media/example-work-item-queries/IC588290.png)\n```\n\n----------------------------------------\n\nTITLE: Accessing NuGet Package API Endpoint for Project Scoped Feed in Azure DevOps Server\nDESCRIPTION: HTTP endpoint URL pattern for promoting NuGet packages in a project scoped feed on an on-premises Azure DevOps Server 2022. This requires appropriate permissions to update package views.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_13\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://{instance}/{collection}/{project}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: Conditional Field Requirement Based on Multiple Groups in Azure DevOps - XML\nDESCRIPTION: This XML snippet demonstrates the simultaneous application and exclusion of a required field rule for different groups. The \"Severity\" field is required for users in the \"Project Members\" group (using the 'for' attribute) and not required for those in \"Project Admins\" (using the 'not' attribute). If users belong to both groups, the \"for\" restriction takes precedence, making the field required for them. Dependencies include at least two Azure DevOps groups: \"[Project]\\Project Members\" and \"[Global]\\Project Admins\". This must be placed in the work item type XML definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_15\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\\\"Severity\\\">\\n   <REQUIRED for=\\\"[Project]\\\\Project Members\\\" not=\\\"[Global]\\\\Project Admins\\\"/>\\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Referencing Visual Studio Test Task in Azure DevOps Pipelines\nDESCRIPTION: This code snippet demonstrates how to reference the Visual Studio Test task in an Azure DevOps pipeline. It uses a markdown link format to point to the task's reference documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/parallel-testing-vstest.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[Visual Studio Test task](/azure/devops/pipelines/tasks/reference/vstest-v2)\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group\nDESCRIPTION: Creates a resource group to contain the resources used in the quickstart.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name $RESOURCE_GROUP_NAME --location $REGION\n```\n\n----------------------------------------\n\nTITLE: Exporting Process Configuration XML with witadmin in Azure DevOps\nDESCRIPTION: Command to export the process configuration definition to an XML file using the witadmin tool. Requires specifying the collection URL and project name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-process-configuration.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nwitadmin exportprocessconfig /collection:CollectionURL /p:ProjectName [/f:FileName] [/e:encoding]\n```\n\n----------------------------------------\n\nTITLE: Updating Extension Manifest for Azure Web App in JSON\nDESCRIPTION: This snippet shows how to modify the extension manifest to use an Azure web app URL instead of localhost. The 'baseUri' property is updated with the Azure web app URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/publish-azure.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"baseUri\": \"https://fabrikam-vso-extensions.azurewebsites.net/\",\n```\n\n----------------------------------------\n\nTITLE: Filtering Unestimated User Stories (Non-Blank Story Points) in Azure Boards Query\nDESCRIPTION: This query clause filters for work items where the 'Story Points' field has a value (is not blank or undefined). It uses the not equals operator (<>) with a blank value comparison.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-numeric.md#2025-04-22_snippet_4\n\nLANGUAGE: azure-boards-query\nCODE:\n```\nStory Points <> (leave Value field blank)\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Chef Service Connection Parameters\nDESCRIPTION: Table defining the configuration parameters needed to set up a Chef service connection for automation servers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/service-endpoints.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Parameter | Description |\n| --------- | ----------- |\n| Server URL | Required. The URL of the Chef automation server. |\n| Node Name (Username) | Required. The name of the node to connect to. Typically this parameter is your username. |\n| Client Key | Required. The key specified in the Chef .pem file. |\n| Service connection name | Name for the service connection |\n| Connection name | Required. The name you use to refer to the service connection in task properties. If you're using YAML, use the name as the **azureSubscription** or the equivalent subscription name value in the script. |\n| Description | Optional. The description of the service connection. |\n| Security | Optional. Select **Grant access permission to all pipelines** to allow all pipelines to use this connection. If you don't select this option, you must explicitly authorize the service connection for each pipeline that uses it. |\n```\n\n----------------------------------------\n\nTITLE: Resolving Duplicate TaskList Statements in WorkItemTracking Group (XML)\nDESCRIPTION: This snippet shows how to correct the WorkItemTracking group in a process template by removing duplicate taskList statements. It demonstrates the error and resolution examples.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n    <group id=\"WorkItemTracking\" description=\"Workitem definitions uploading.\" completionMessage=\"Work item tracking tasks completed.\">\n      <dependencies>\n        <dependency groupId=\"Classification\" />\n        <dependency groupId=\"Groups\" />\n      </dependencies>\n      <taskList filename=\"WorkItem Tracking\\FabrikamWorkItems.xml\" />\n    </group>\n```\n\n----------------------------------------\n\nTITLE: Executing ResumeIndexing.ps1 Script in PowerShell\nDESCRIPTION: This PowerShell script resumes indexing operations after they have been paused. It requires information about the Azure DevOps Server configuration database.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/manage-search.md#2025-04-22_snippet_3\n\nLANGUAGE: PowerShell\nCODE:\n```\nResumeIndexing.ps1\n```\n\n----------------------------------------\n\nTITLE: Deleting Test Runs with TCM Command-Line Interface\nDESCRIPTION: This command removes a test run from a test plan. It requires the run ID, collection URL, and team project name. An optional parameter allows suppressing the confirmation prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_8\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /delete /id:id [/noprompt] /collection:teamprojectcollectionurl /teamproject:project [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Installing TypeScript Type Definitions\nDESCRIPTION: Installs TypeScript type definitions for Node.js and Q, enabling better type checking and IntelliSense in the task development process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\nnpm install @types/node --save-dev\nnpm install @types/q --save-dev\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Agile Areas\nDESCRIPTION: Markdown table defining key areas for enterprise alignment and team autonomy in Agile culture\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/agile-culture.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n      **Area**\n   :::column-end:::\n   :::column span=\"2\":::\n      **Create alignment**\n   :::column-end:::\n   :::column span=\"2\":::\n      **Support autonomy**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Running TFSConfig ChangeServerID Command for GUID Conflicts\nDESCRIPTION: This command resolves TF31002 errors that occur when users connect to different versions of Azure DevOps Server from Visual Studio. It helps when the GUIDs for different versions are the same, causing local client cache confusion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/troubleshoot-connection.md#2025-04-22_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\nTFSConfig ChangeServerID\n```\n\n----------------------------------------\n\nTITLE: Updating Existing Work Items with CSV in Azure Boards\nDESCRIPTION: Example CSV file structure for updating existing work items in Azure Boards. Includes ID, Work Item Type, Title, Assigned To, State, and Tags fields with updated values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/import-work-items-from-csv.md#2025-04-22_snippet_2\n\nLANGUAGE: csv\nCODE:\n```\nID,Work Item Type,Title,Assigned To,State,Tags\n\"272\",\"Issue\",\"Fix issues with code\",\"Jamal Hartnett <fabrikamfiber4@hotmail.com>\",\"Active\",\n\"273\",\"Issue\",\"Merge testing modules\",\"Jamal Hartnett <fabrikamfiber4@hotmail.com>\",\"Active\",\n\"274\",\"Issue\",\"Open private preview for select customers\",\"Raisa Pokrovskaya <fabrikamfiber5@hotmail.com>\",\"Active\",\n\"275\",\"Issue\",\"Enable feature for customer champs\",\"Raisa Pokrovskaya <fabrikamfiber5@hotmail.com>\",\"Active\",\n\"276\",\"Issue\",\"Remove old test code\",\"Christie Church <fabrikamfiber1@hotmail.com>\",\"Active\",\n```\n\n----------------------------------------\n\nTITLE: SSH Config for Disabling Deprecated SSH-RSA\nDESCRIPTION: SSH configuration that should be removed because it downgrades security by enabling the deprecated ssh-rsa host key algorithm.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nHost ssh.dev.azure.com vs-ssh.visualstudio.com\n  HostkeyAlgorithms +ssh-rsa\n```\n\n----------------------------------------\n\nTITLE: Creating Account Management Security Group Example\nDESCRIPTION: Example showing how to create an 'Account Management' security group in a project named 'MyFirstProject' with a description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group create --name \"Account Management\" --project MyFirstProject --description \"Management team focused on creating and maintaining customer services\" --output table\n```\n\n----------------------------------------\n\nTITLE: State Categories Table in Markdown\nDESCRIPTION: Markdown table describing default user story state categories and their meanings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/add-columns.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|State category  |Description  |\n|---------|----------|\n|Proposed   | The first board column is automatically mapped to the default state for each work item. |\n|In Progress | Work flow state must be specified for each work item type and column.       |\n|Completed  | Can only map to the last board column.      |\n|Removed     | Workflow state doesn't need to be specified.     |\n```\n\n----------------------------------------\n\nTITLE: Task Backlog Configuration in Azure DevOps XML\nDESCRIPTION: XML structure for customizing sprint backlogs layout. Defines category, plural/singular naming and work item count limits for tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<TaskBacklog category=\"Microsoft.TaskCategory\" pluralName=\"Tasks\" \nsingularName=\"Task workItemCountLimit=\"MaximumLimit\">\n. . . \n</TaskBacklog >\n```\n\n----------------------------------------\n\nTITLE: OData Batch Request Example with User Query\nDESCRIPTION: A complete example of a batch request that queries for a specific user by email address. The example shows the multipart format required for batch requests, including headers and body structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-batch.md#2025-04-22_snippet_2\n\nLANGUAGE: HTTP\nCODE:\n```\n--batch_1af9a11e-9dec-4266-a3ab-0db9d10fb55a\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET https://{OrganizationName}.analytics.vsts.me/_odata/{version}/Users?$filter=UserEmail eq 'john.smith@contoso.com'&$select=UserId,UserSK,UserName HTTP/1.1\nAccept: application/json\n\n--batch_1af9a11e-9dec-4266-a3ab-0db9d10fb55a\n```\n\n----------------------------------------\n\nTITLE: Object Permissions Table for Repos Items\nDESCRIPTION: Markdown table showing permission settings for repository-related objects\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-object-level-permissions.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Object | Default group membership | How to access security | Inherited? |\n|--|--|--|--|\n| [Repos](../../repos/git/set-git-repository-permissions.md#open-security-for-a-repository) | [Project Administrator](../../organizations/security/permissions.md#project-level-groups) | Open **Project settings**, **Repositories** > highlight your repo > **Security**. | ✔️  |\n| [Git repository](../../repos/git/set-git-repository-permissions.md) |[Project Administrator](../security/change-project-level-permissions.md)  | Open **Project settings** > **Repositories** and the Git repository. | ✔️ (from project settings for Git repository) |\n```\n\n----------------------------------------\n\nTITLE: Interacting with Service Hooks Scope (`vso.hooks_interact`)\nDESCRIPTION: Grants the ability to interact and perform actions on events received via service hooks. (No longer public.) Depends on `vso.profile`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_8\n\nLANGUAGE: text\nCODE:\n```\n`vso.hooks_interact`\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Azure Boards Documentation\nDESCRIPTION: Markdown include statement that references the next steps section. This pulls in standardized content about how to proceed after reading the Sprint 202 update notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-202-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring IP V6 Ranges for Outbound Connections in Azure DevOps\nDESCRIPTION: List of IP V6 address ranges that need to be allowed for outbound connections to Azure DevOps. These addresses must be allowed for connections from your organization's network to Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_1\n\nLANGUAGE: IP V6 ranges\nCODE:\n```\n2620:1ec:4::/48\n2620:1ec:a92::/48\n2620:1ec:21::/48\n2620:1ec:22::/48\n2620:1ec:50::/48 \n2620:1ec:51::/48 \n2603:1061:10::/48\n```\n\n----------------------------------------\n\nTITLE: Updating TFX CLI to Latest Version\nDESCRIPTION: Command to update an existing TFX CLI installation to the latest version available on npm. This ensures you have access to the newest features and bug fixes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/acquire-tfx-cli.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm up -g tfx-cli\n```\n\n----------------------------------------\n\nTITLE: Retrieving Agent Details Using Azure DevOps CLI\nDESCRIPTION: Azure CLI command syntax for showing detailed information about a specific agent in a pool, including options to include capabilities and work request information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/agents.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines agent show --agent-id\n                        --pool-id\n                        [--detect {false, true}]\n                        [--include-assigned-request {false, true}]\n                        [--include-capabilities {false, true}]\n                        [--include-last-completed-request {false, true}]\n                        [--org]\n                        [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Request Body for Restoring Projects in Azure DevOps\nDESCRIPTION: JSON request body for the PATCH request to restore a deleted project. The body specifies the desired state as 'wellFormed' to indicate the project should be restored to its normal operational state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-144-update.md#2025-04-22_snippet_6\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"state\" : \"wellFormed\"\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML Table for Azure DevOps Release Notes\nDESCRIPTION: This HTML snippet renders a table containing release notes for Azure DevOps features. It includes columns for feature names, release dates, and availability in different versions of TFS/Azure DevOps Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<tr>\n    <td>Show/hide work item field borders</td>\n    <td></td><td>Future</td>\n</tr>\n<tr>\n    <td>Allow extensions to block work item save</td>\n    <td></td><td><a href=\"/visualstudio/releasenotes/tfs2018-relnotes\" data-raw-source=\"[2018](/visualstudio/releasenotes/tfs2018-relnotes)\">2018</a></td>\n</tr>\n<tr>\n    <td>Collapsible pull request comments</td>\n    <td></td><td><a href=\"/visualstudio/releasenotes/tfs2018-relnotes\" data-raw-source=\"[2018](/visualstudio/releasenotes/tfs2018-relnotes)\">2018</a></td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Migrating Basic Policy Class Implementation\nDESCRIPTION: Shows the transition from obsolete PolicyBase class to the new CheckinPolicyBase class implementation with basic policy structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/tfvc-check-in-policy-migrate-guide.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\n[Serializable]\npublic class Simple : PolicyBase\n{\n   public override string Description => \"SimplePolicyDescription\";\n   ...\n}\n```\n\nLANGUAGE: csharp\nCODE:\n```\n[Serializable]\npublic class SimpleNew : CheckinPolicyBase\n{\n    public override string Description => \"SimplePolicyDescription\";\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using Build.Repository.Uri Variable in Azure DevOps Pipelines\nDESCRIPTION: Provides the URL for the triggering repository (e.g., Git or TFVC URL). Cannot be used in build numbers or version control tags. It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_19\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.Repository.Uri\n```\n\n----------------------------------------\n\nTITLE: Defining an Azure Pipelines Decorator Extension in JSON\nDESCRIPTION: Provides a JSON example for defining an Azure DevOps extension contribution that implements a pipeline decorator. This decorator targets 'ms.azure-pipelines-agent-job.pre-task-tasks' to inject the task defined in 'my-decorator.yml' before every execution of the target task identified by the GUID 'ECDC45F6-832D-4AD9-B52B-EE49E94659BE' (which corresponds to the PublishPipelineArtifacts task). Requires the Azure DevOps extension SDK and understanding of pipeline decorators.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-194-update.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n```json\n{\n    \"manifestVersion\": 1,\n    \"contributions\": [\n        {\n            \"id\": \"my-required-task\",\n            \"type\": \"ms.azure-pipelines.pipeline-decorator\",\n            \"targets\": [\n                \"ms.azure-pipelines-agent-job.pre-task-tasks\"\n            ],\n            \"properties\": {\n                \"template\": \"my-decorator.yml\",\n                \"targettask\": \"ECDC45F6-832D-4AD9-B52B-EE49E94659BE\"\n            }\n        }\n    ],\n    \"files\": [\n        {\n            \"path\": \"my-decorator.yml\",\n            \"addressable\": true,\n            \"contentType\": \"text/plain\"\n        }\n    ]\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Storing Git-tf Credentials in Git Configuration\nDESCRIPTION: Saves the username and password for Git-tf in the Git configuration to avoid repeated credential prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/share-your-code-in-tfvc-xcode.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit config git-tf.server.username fabrikamfiber4@hotmail.com \ngit config git-tf.server.password mypassword\n```\n\n----------------------------------------\n\nTITLE: Adding Check-in Notes with Spaces in TFVC\nDESCRIPTION: Example demonstrating how to add check-in notes with spaces in both field names and values to changeset 8675309. Double quotes are used to properly handle the spaces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/changeset-command.md#2025-04-22_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf changeset /notes:\"Code Reviewer\"=\"John Smith\";\"Security Reviewer\"=\"Chen Yang\" 8675309\n```\n\n----------------------------------------\n\nTITLE: SSH-RSA Deprecation Warning Message (Throttled)\nDESCRIPTION: Example output showing the warning message when using the deprecated ssh-rsa algorithm with Azure DevOps, where the connection is throttled but allowed to continue with a warning.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_4\n\nLANGUAGE: output\nCODE:\n```\nssh-rsa is about to be deprecated and your request has been throttled. Please use rsa-sha2-256 or rsa-sha2-512 instead. Your session will continue automatically. For more details see https://devblogs.microsoft.com/devops/ssh-rsa-deprecation.\n```\n\n----------------------------------------\n\nTITLE: Example of Opening a Visual Studio Solution\nDESCRIPTION: Example command for opening a specific Visual Studio solution file. This command opens the FiberTests.sln file located in the C:\\Repos\\FiberTests directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/clone.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nstart C:\\Repos\\FiberTests\\FiberTests.sln\n```\n\n----------------------------------------\n\nTITLE: Adding Account to Azure DevOps Service Accounts Group using TFSSecurity\nDESCRIPTION: This command demonstrates how to add an account to the Azure DevOps Service Accounts group after installing Azure DevOps Server. It uses the TFSSecurity.exe utility located in the Tools subfolder of the on-premises installation directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nTFSSecurity /g+ \"[TEAM FOUNDATION]\\Team Foundation Service Accounts\" n:domain\\username /server:http(s)://azuredevopsservername\n```\n\n----------------------------------------\n\nTITLE: Setting PowerShell Module Root\nDESCRIPTION: Configuration for the main script file in module manifest\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_17\n\nLANGUAGE: powershell\nCODE:\n```\nRootModule = 'Get-Hello.psm1'\n```\n\n----------------------------------------\n\nTITLE: Work Item Layout Group Control Fix\nDESCRIPTION: Demonstrates how to correctly structure HTML field controls within groups in work item layout XML, ensuring only one HTML control per group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_47\n\nLANGUAGE: xml\nCODE:\n```\n<Section>\n    <Group Label=\"Description:\">\n        <Control Label=\"Reason For Request:\" Type=\"HtmlFieldControl\" FieldName=\"System.Description\" />\n        <Control Label=\"Business Case For Request:\" Type=\"HtmlFieldControl\" FieldName=\"MB.BusinessCase\" />\n    </Group>\n</Section>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<Section>\n    <Group Label=\"Reason for Request\">\n        <Control Label=\"Reason For Request:\" Type=\"HtmlFieldControl\" FieldName=\"System.Description\" />       \n    </Group>\n    <Group Label=\"Business Case\">\n        <Control Label=\"Business Case For Request\" Type=\"HtmlFieldControl\" FieldName=\"Custom.BusinessCase\" />       \n    </Group>\n</Section>\n```\n\n----------------------------------------\n\nTITLE: Creating Work Items via Command\nDESCRIPTION: Commands to create work items directly in Azure Boards from Slack using work item type and title parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-slack.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n/azboards create [work item type] [work item title]\n```\n\nLANGUAGE: bash\nCODE:\n```\n/azboards create 'user story' Push cloud monitoring alerts to mobile devices\n```\n\n----------------------------------------\n\nTITLE: Filtering by Static Date Value Equivalent of @Today Macro - WIQL\nDESCRIPTION: This WIQL snippet is equivalent to using the @today macro but with a hardcoded date value. This is used for documentation and comparison only; in practice, the value must be updated as time passes. No dependencies apart from WIQL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_11\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE  \n   [System.CreatedDate] = '01-03-2019'\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 149 Update Links in Markdown\nDESCRIPTION: Markdown include directive for Sprint 149 update links related to reporting features\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/reporting/sprint-149-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-149-update-links](../includes/reporting/sprint-149-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: TFVC Difference Command for Comparing Two Items\nDESCRIPTION: Demonstrates the syntax for comparing two specific items using the TFVC difference command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_1\n\nLANGUAGE: Command-line\nCODE:\n```\ntf diff[erence] itemspec itemspec2 [/type:filetype] [/format: format] \n[/ignorespace] [/ignoreeol] [/ignorecase] [/recursive] [/options] [/noprompt][/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Example witadmin Command for Importing ServiceApp Work Item Type\nDESCRIPTION: Specific example of a witadmin command to import the ServiceApp Work Item Type definition into a project named MyProject in the DefaultCollection. Shows the exact syntax with server and path information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_21\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin importwitd /collection:\"http://MyServer:8080/tfs/DefaultCollection\"/p:MyProject /f:\"DirectoryPath/ServiceApp.xml\"\n```\n\n----------------------------------------\n\nTITLE: Installing TFX CLI Extension Packaging Tool\nDESCRIPTION: Command to install the TFX (Team Foundation Extensions) Command Line Interface globally using npm for packaging Azure DevOps extensions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/includes/before-publishing.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g tfx-cli\n```\n\n----------------------------------------\n\nTITLE: Expanding Children with Project Filter\nDESCRIPTION: OData query that returns work items from a project along with their children that belong to the same project, demonstrating proper filtering in collection property expansion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_6\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=ProjectSK eq {projectSK}\n  &$select=WorkItemId, Title\n  &$expand=Children($filter=ProjectSK eq {projectSK}; $select=WorkItemId, Title)\n```\n\n----------------------------------------\n\nTITLE: Default Authorization Scope - Azure DevOps 2022 and Later\nDESCRIPTION: Default job authorization scope settings for new classic pipelines in Azure DevOps 2022 and later versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/access-tokens.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nWhen creating a new classic pipeline, the *job authorization scope* is set to **current project** and the *build job authorization scope* is set to **project** by default.\n```\n\n----------------------------------------\n\nTITLE: Work Item Type File Reference\nDESCRIPTION: Example showing how to reference a work item type definition file in the process template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_7\n\nLANGUAGE: XML\nCODE:\n```\n<WORKITEMTYPE fileName=\"WorkItem Tracking\\TypeDefinitions\\Epic.xml\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Impact Data Collector in XML RunSettings File\nDESCRIPTION: This XML snippet demonstrates how to configure the Test Impact data collector in a .runsettings file. It enables IIS data collection, sets the impact level to file, and specifies services to instrument.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/test-impact-analysis.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RunSettings>\n  <DataCollectionRunSettings>\n    <DataCollectors>\n      <!-- This is the TestImpact data collector.-->\n      <DataCollector uri=\"datacollector://microsoft/TestImpact/1.0\" assemblyQualifiedName=\"Microsoft.VisualStudio.TraceCollector.TestImpactDataCollector, Microsoft.VisualStudio.TraceCollector, Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" friendlyName=\"Test Impact\">\n        <Configuration>\n          <!-- enable IIS data collection-->\n          <InstrumentIIS>True</InstrumentIIS>\n          <!-- file level data collection -->\n          <ImpactLevel>file</ImpactLevel>\n          <!-- any job agent related executable or any other service that the test is using needs to be profiled. -->\n          <ServicesToInstrument>\n            <Name>TeamFoundationSshService</Name>\n          </ServicesToInstrument>\n        </Configuration>\n      </DataCollector>\n    </DataCollectors>\n  </DataCollectionRunSettings>\n</RunSettings>\n```\n\n----------------------------------------\n\nTITLE: Deleting Shared Analytics Views Permission Identifier (Plaintext)\nDESCRIPTION: The identifier (`AnalyticsViews, Delete`) represents the object-level permission required to delete a specific shared Analytics view in Azure DevOps. This permission is managed per individual shared view.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_20\n\nLANGUAGE: plaintext\nCODE:\n```\nAnalyticsViews, Delete\n```\n\n----------------------------------------\n\nTITLE: Registering a Project-Scoped PowerShell Repository\nDESCRIPTION: Command to register a project-scoped Azure Artifacts feed as a PowerShell repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\nRegister-PSResourceRepository -Name \"PowershellPSResourceRepository\" `\n    -Uri \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" `\n    -Trusted `\n    -CredentialInfo $CredentialInfo\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps OAuth Scope in Python Flask Application (Python)\nDESCRIPTION: This snippet updates the SCOPE variable to request access to all scopes of the Azure DevOps API resource when obtaining tokens from AAD. The value is a list containing the resource ID plus the '.default' postfix. This enables broad API access and is crucial for interacting with Azure DevOps REST APIs. No dependencies required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/manage-personal-access-tokens-via-api.md#2025-04-22_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nSCOPE = [\"499b84ac-1321-427f-aa17-267ca6975798/.default\"]\n\n```\n\n----------------------------------------\n\nTITLE: Project RENAME Permission\nDESCRIPTION: Permission namespace for renaming a project within Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_9\n\nLANGUAGE: text\nCODE:\n```\nProject, RENAME\n```\n\n----------------------------------------\n\nTITLE: Iteration Path Permission Codes\nDESCRIPTION: Iteration namespace permission codes for managing iteration path access control in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_44\n\nLANGUAGE: Iteration\nCODE:\n```\nCREATE_CHILDREN\nDELETE\nGENERIC_WRITE\nGENERIC_READ\n```\n\n----------------------------------------\n\nTITLE: Viewing Service Hooks Namespace JSON Structure in Azure DevOps\nDESCRIPTION: JSON output showing the Service Hooks namespace structure including available actions, their bit values, and display names which define possible permissions that can be granted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/view-permission.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"actions\": [\n      {\n        \"bit\": 1,\n        \"displayName\": \"View Subscriptions\",\n        \"name\": \"ViewSubscriptions\",\n        \"namespaceId\": \"cb594ebe-87dd-4fc9-ac2c-6a10a4c92046\"\n      },\n      {\n        \"bit\": 2,\n        \"displayName\": \"Edit Subscription\",\n        \"name\": \"EditSubscriptions\",\n        \"namespaceId\": \"cb594ebe-87dd-4fc9-ac2c-6a10a4c92046\"\n      },\n      {\n        \"bit\": 4,\n        \"displayName\": \"Delete Subscriptions\",\n        \"name\": \"DeleteSubscriptions\",\n        \"namespaceId\": \"cb594ebe-87dd-4fc9-ac2c-6a10a4c92046\"\n      },\n      {\n        \"bit\": 8,\n        \"displayName\": \"Publish Events\",\n        \"name\": \"PublishEvents\",\n        \"namespaceId\": \"cb594ebe-87dd-4fc9-ac2c-6a10a4c92046\"\n      }\n    ],\n    \"dataspaceCategory\": \"Default\",\n    \"displayName\": \"ServiceHooks\",\n    \"elementLength\": -1,\n    \"extensionType\": null,\n    \"isRemotable\": true,\n    \"name\": \"ServiceHooks\",\n    \"namespaceId\": \"cb594ebe-87dd-4fc9-ac2c-6a10a4c92046\",\n    \"readPermission\": 1,\n    \"separatorValue\": \"/\",\n    \"structureValue\": 1,\n    \"systemBitMask\": 0,\n    \"useTokenTranslator\": true,\n    \"writePermission\": 7\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Querying Outcome Summary for All Project Pipelines in Power BI\nDESCRIPTION: Power BI query that retrieves pipeline run outcome summary data for all pipelines in a project. Results are grouped by pipeline name and include aggregated counts for different outcome statuses (Succeeded, Failed, PartiallySucceeded, Canceled).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_8\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"CompletedDate ge {startdate} \"\n                &\") \"\n                &\"/groupby( \"\n        &\"(Pipeline/PipelineName), \"\n        &\"aggregate( \"\n            &\"$count as TotalCount, \"\n                &\"SucceededCount with sum as SucceededCount , \"\n                &\"FailedCount with sum as FailedCount, \"\n            &\"PartiallySucceededCount with sum as PartiallySucceededCount , \"\n                &\"CanceledCount with sum as CanceledCount \"\n            &\")) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Reading Symbols Scope (`vso.symbols`)\nDESCRIPTION: Grants the ability to read symbols. Depends on `vso.profile`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n`vso.symbols`\n```\n\n----------------------------------------\n\nTITLE: Sequential Lock Behavior Stage Configuration in Azure Pipelines\nDESCRIPTION: YAML configuration showing how to set sequential lock behavior at the stage level in Azure Pipelines to control resource access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/approvals.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  lockBehavior: sequential\n  jobs:\n  - job: Job\n    steps:\n    - script: Hey!\n```\n\n----------------------------------------\n\nTITLE: Displaying Moniker-Specific Permission List in Markdown\nDESCRIPTION: This snippet uses a moniker range to conditionally display a list of permissions specific to Azure DevOps versions. It includes permissions related to builds, project visibility, and tag definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-lookup-guide.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<=azure-devops\"\n- [Update build information (Object)](../../pipelines/policies/permissions.md#pipeline-permissions)\n- [Update build queue (Object)](../../pipelines/policies/permissions.md#pipeline-permissions)\n- [Update project visibility (Project)](change-project-level-permissions.md)\n- [Update tag definition (Project)](permissions.md#work-item-tags) \n- [Use build resources (Collection)](change-organization-collection-level-permissions.md)\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Configuring timeout for dependency scanning task\nDESCRIPTION: YAML configuration to increase the timeout for the dependency scanning task by setting the DependencyScanning.Timeout environment variable to a value in seconds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning-troubleshoot.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AdvancedSecurity-Dependency-Scanning@1\n  env:\n    DependencyScanning.Timeout: 600\n```\n\n----------------------------------------\n\nTITLE: Showing Azure DevOps Extension Details via CLI\nDESCRIPTION: This command shows detailed information about a specific Azure DevOps extension. It requires the extension name and publisher name. The '--org' parameter is optional if a default organization is configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension show --extension-name\n                         --publisher-name\n                         [--org]\n```\n\n----------------------------------------\n\nTITLE: Requiring a Field Value Upon State Change in XML Process\nDESCRIPTION: This XML snippet shows how to require the Remaining Work field when a task's State changes to Active, using workflow state configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-samples.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<WORKFLOW>\n. . .  \n    <STATE value=\"Active\">\n        <FIELDS>\n            <FIELD refname=\"Microsoft.VSTS.Scheduling.RemainingWork\">\n              <REQUIRED />\n            </FIELD>\n        </FIELDS>\n    </STATE>\n. . .  \n</WORKFLOW>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Work Items Using Azure DevOps REST API (JavaScript)\nDESCRIPTION: This snippet shows how to use the initialized work item tracking client to retrieve work items. It calls the getWorkItems method with an array of work item IDs and specifies the fields to retrieve. The results are then logged to the console.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/call-rest-api-js.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nwitClient.getWorkItems(/* some work item IDs */ [1,2,3,4], [\"System.Title\"]).then(\n    function(workItems) {\n    \tconsole.log(JSON.stringify(workItems));\n    });\n```\n\n----------------------------------------\n\nTITLE: Creating Pie Charts with Mermaid in Azure DevOps Wiki\nDESCRIPTION: This snippet shows how to create a pie chart using Mermaid syntax in Azure DevOps Wiki. The chart visualizes the distribution of fishermen across different countries (Norway, Sweden, Switzerland) with their respective counts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_18\n\nLANGUAGE: mermaid\nCODE:\n```\n:::mermaid\npie title Fishermans in countries\n    \"Norway\" : 684\n    \"Sweeden\" : 234\n    \"Switzerland\" : 10\n:::\n```\n\n----------------------------------------\n\nTITLE: Locating Team Project Creation Log File Path in Windows\nDESCRIPTION: The path where team project creation log files are stored in Windows. The log file follows a naming convention that includes the date and time of creation and contains details about wizard actions and errors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/create-project.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n$:\\Users\\*user name*\\AppData\\Local\\Temp and labeled vso\\_TeamProjectCreation\\_*yyyy\\_mm\\_dd\\_hh\\_mm\\_ss*.log\n```\n\n----------------------------------------\n\nTITLE: TFVC History Command with Date Range\nDESCRIPTION: Example of using the history command with a date range version specification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/use-team-foundation-version-control-commands.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history /noprompt * /recursive /v:D4/12/2022~D4/24/2022\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription\nDESCRIPTION: Azure CLI command to set the default subscription for subsequent operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/azure-key-vault.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription <YOUR_SUBSCRIPTION_NAME_OR_ID>\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Field with Allowed Values in Azure DevOps Work Item Type\nDESCRIPTION: Example of defining a custom field 'Favorite Color' with a list of allowed values in an Azure DevOps work item type. Demonstrates how to specify a pick list for a field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_43\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Favorite Color\" refname=\"MyCompany.CustomFields.FavColor\" type=\"String\" reportable=\"dimension\">\n  <ALLOWEDVALUES>\n    <LISTITEM value=\"Color1\" />\n    <LISTITEM value=\"Color2\" />\n    <LISTITEM value=\"Color3\" />\n    . . . \n  </ALLOWEDVALUES>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Exporting Work Tracking Definition Files in Azure DevOps\nDESCRIPTION: Command for exporting work tracking definition files from an Azure DevOps project, including the WIT to be added and the ProcessConfiguration file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nwitadmin exportwitd /collection:CollectionURL /p:ProjectName /n:TypeName /f:FileName.xml\nwitadmin exportcategories /collection:CollectionURL /p:ProjectName /f:categories.xml\nwitadmin exportprocessconfig /collection:CollectionURL /p:ProjectName /f:ProcessConfiguration.xml\n```\n\n----------------------------------------\n\nTITLE: Logging into Cargo Registry with PAT using Bash\nDESCRIPTION: Bash command to log into a Cargo registry using a Personal Access Token (PAT). This command reads the PAT interactively and converts it to a Base64-encoded value for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nread -p \"Enter PAT: \" PAT; echo Basic $(echo -n PAT:$PAT | base64) | cargo login --registry <FEED_NAME>\n```\n\n----------------------------------------\n\nTITLE: Grouping Areas by Project using OData\nDESCRIPTION: This OData query demonstrates how to group areas by project name, which returns projects with a count of areas for each project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/Areas?\n  $apply=groupby((Project/ProjectName), aggregate($count as Count))\n```\n\n----------------------------------------\n\nTITLE: SAFe Team Structure and Area Path Mapping\nDESCRIPTION: Markdown code block showing the mapping between SAFe team hierarchy and Azure Boards area paths for shared services team configuration\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-concepts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Shared services area path and team structure](media/safe/shared-services-team-structure.png)\n```\n\n----------------------------------------\n\nTITLE: Basic WIQL Query with Priority Filter\nDESCRIPTION: Simple WIQL query example that selects work items with Priority=1, returning ID and Title columns sorted by ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_25\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT\n    [System.Id],\n    [System.Title],\n    [System.State],\n    [System.IterationPath]\nFROM workitems\nWHERE\n    [System.TeamProject] = @project\n    AND [Microsoft.VSTS.Common.Priority] <> ''\nORDER BY [System.Id]\n```\n\n----------------------------------------\n\nTITLE: JSON Response After Setting View Permission for Service Hooks\nDESCRIPTION: JSON output showing the updated permission settings after granting 'View Subscriptions' permission to a group, including the effective permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/view-permission.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"acesDictionary\": {\n      \"Microsoft.TeamFoundation.Identity;S-1-9-1551374245-1204400969-2402986413-2179408616-3-3954173786-1521081925-2540508263-3348164168\": {\n        \"allow\": 1,\n        \"deny\": 0,\n        \"descriptor\": \"Microsoft.TeamFoundation.Identity;S-1-9-1551374245-1204400969-2402986413-2179408616-3-3954173786-1521081925-2540508263-3348164168\",\n        \"extendedInfo\": {\n          \"effectiveAllow\": 1\n        },\n        \"resolvedPermissions\": [\n          {\n            \"bit\": 1,\n            \"displayName\": \"View Subscriptions\",\n            \"effectivePermission\": \"Allow\",\n            \"name\": \"ViewSubscriptions\"\n          }\n        ]\n      }\n    },\n    \"includeExtendedInfo\": true,\n    \"inheritPermissions\": true,\n    \"token\": \"PublisherSecurity/ac515e82-560c-4af8-845b-9f7f968d8e7b\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Maven Project with Dependency Resolution\nDESCRIPTION: Updated Maven POM file that overrides the vulnerable jackson-databind dependency with a direct dependency on a patched version, demonstrating the 'nearest wins' resolution strategy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_10\n\nLANGUAGE: java\nCODE:\n```\n<project>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.microsoft.customer360</groupId>\n  <artifactId>maven-dependencies</artifactId>\n  <packaging>jar</packaging>\n  <version>1.0-SNAPSHOT</version>\n  <name>maven-dependencies</name>\n  <url>http://maven.apache.org</url>\n  <dependencies>\n    <dependency>\n      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n      <artifactId>jackson-jaxrs-json-provider</artifactId>\n      <version>2.10.3</version>\n    </dependency>\n    <!-- Dependency resolutions -->\n    <!-- jackson-jaxrs-json-provider -->\n    <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-databind</artifactId>\n      <version>2.9.10.4</version>\n    </dependency>\n  </dependencies>\n</project>\n```\n\n----------------------------------------\n\nTITLE: Generating OAuth 2.0 Request Body in C#\nDESCRIPTION: This C# function demonstrates how to generate the request body for obtaining an access token and refresh token in Azure DevOps OAuth 2.0.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\npublic string GenerateRequestPostData(string appSecret, string authCode, string callbackUrl)\n{\n   return String.Format(\"client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&client_assertion={0}&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion={1}&redirect_uri={2}\",\n               HttpUtility.UrlEncode(appSecret),\n               HttpUtility.UrlEncode(authCode),\n               callbackUrl\n        );\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing Project Analytics Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`AnalyticsViews, Read`) grants access to data available from the Azure DevOps Analytics service at the project level. Users with this permission can query and view analytics data for the entire project. Refer to Analytics service documentation for specific requirements and data scope.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\nAnalyticsViews, Read\n```\n\n----------------------------------------\n\nTITLE: Replacing an Existing Shelveset in TFVC\nDESCRIPTION: This example replaces an existing shelveset named 'new-feature' with a new one containing the current pending changes while retaining the changes in the workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelve-command.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects> tf shelve new-feature /replace\n```\n\n----------------------------------------\n\nTITLE: Previewing File Destruction in TFVC using tf destroy Command\nDESCRIPTION: This command previews the destruction of a specific file in TFVC without actually destroying it. It uses the /preview and /i (non-interactive) options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/destroy-version-controlled-files.md#2025-04-22_snippet_0\n\nLANGUAGE: Batch\nCODE:\n```\ntf destroy /preview /i $/MyTeamProject/aFile.cs\n```\n\n----------------------------------------\n\nTITLE: Rollup Story Points to Features from User Stories by Area Path (Power BI Query)\nDESCRIPTION: Power BI M query that retrieves Features and rolls up Story Points from child User Stories, filtering by Area Path. The query counts User Stories and sums Story Points for each Feature in the specified area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n    Source = OData.Feed(\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n            &\"$filter=WorkItemType eq 'Feature'\"\n            &\" and State ne 'Cut'\"\n            &\" and startswith(Area/AreaPath,'{areapath}')\"\n            &\" and Descendants/any()\"    \n        &\"& $select=WorkItemId,Title,WorkItemType,State,AreaSK\"\n        &\"& $expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\"        \n            &\"Descendants(\"\n                &\"$apply=filter(WorkItemType eq 'User Story')\"\n                &\"/aggregate($count as CountOfUserStories, StoryPoints with sum as TotalStoryPoints)\"\n            &\")\", \n        null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4])  \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Adding an Event Observer to Work Item Form in JSON\nDESCRIPTION: This JSON snippet defines a contribution to add an event observer to the work item form. It specifies the URI for the script that will handle the events.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-workitem-extension.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n\"contributions\": [\n    {  \n        \"id\": \"sample-work-item-form-observer\",\n        \"type\": \"ms.vss-work-web.work-item-notifications\",\n        \"description\": \"Gets events about the current work item form for the 'Try Me!' toolbar button\",\n        \"targets\": [\n            \"ms.vss-work-web.work-item-form\"\n        ],\n        \"properties\": {\n            \"uri\": \"myformobserver.html\"\n        }\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Listing Specific Banner Details in Azure DevOps using CLI\nDESCRIPTION: This example shows how to list details for a specific banner by providing its ID. The response includes the expiration date, level, and message of the banner.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-banners.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops admin banner show --id 7653f414-3c01-424f-8f84-e51aa99b797c\n{\n  \"7653f414-3c01-424f-8f84-e51aa99b797c\": {\n    \"expirationDate\": \"2024-09-04T07:00:00+00:00\",\n    \"level\": \"info\",\n    \"message\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Diff and Merge Tools via Command Line\nDESCRIPTION: Sets the diff.tool and merge.tool options to specify which tools Git will use to display diffs or resolve merge conflicts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_10\n\nLANGUAGE: console\nCODE:\n```\ngit config --global diff.tool <diff tool>\ngit config --global merge.tool <merge tool>\n```\n\n----------------------------------------\n\nTITLE: Example: Exporting a Work Item Type Definition\nDESCRIPTION: This example shows how to export the definition of a custom work item type named 'myworkitem' to an XML file. It uses the default UTF-8 encoding.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin exportwitd /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /p:AdventureWorks /f:myworkitems.xml /n:myworkitem\n```\n\n----------------------------------------\n\nTITLE: Resolving Field Friendly Name Conflict in WIT Definition (XML)\nDESCRIPTION: This example shows how to resolve a conflict where multiple fields use the same friendly name across different processes. It demonstrates updating a UserStory WIT definition to match an existing field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n      <FIELD name=\"Product\" refname=\"Fabrikam.Product.Versions\" type=\"String\" reportable=\"dimension\">\n        <HELPTEXT>Enter the name of the product version for this story or feature.</HELPTEXT>\n      </FIELD>\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Resolve Example\nDESCRIPTION: Simple example showing how to open the Resolve Conflicts dialog in Visual Studio.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/resolve-command.md#2025-04-22_snippet_1\n\nLANGUAGE: Command Line\nCODE:\n```\ntf resolve\n```\n\n----------------------------------------\n\nTITLE: Mapping Workflow States to Metastates for Test Plans and Test Suites\nDESCRIPTION: XML configuration that maps custom workflow states to metastates for Test Plans and Test Suites, required for backward compatibility with Test Manager based on Visual Studio 2013.2 or earlier versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-process-configuration.md#2025-04-22_snippet_7\n\nLANGUAGE: XML\nCODE:\n```\n<TestPlanWorkItems category=\"Microsoft.TestPlanCategory\" pluralName=\"Test Plans\" singularName=\"Test Plan\">\n    <States>\n      <State type=\"InProgress\" value=\"Design\" />\n      <State type=\"InProgress\" value=\"Testing\" />\n      <State type=\"Complete\" value=\"Signed Off\" />\n    </States>\n  </TestPlanWorkItems>\n<TestSuiteWorkItems category=\"Microsoft.TestSuiteCategory\" pluralName=\"Test Suites\" singularName=\"Test Suite\">\n    <States>\n      <State type=\"Proposed\" value=\"In Planning\" />\n      <State type=\"InProgress\" value=\"In Progress\" />\n      <State type=\"Complete\" value=\"Completed\" />\n    </States>\n  </TestSuiteWorkItems>\n```\n\n----------------------------------------\n\nTITLE: Cleaning Workspace with Exclusions and No Prompt in TFVC\nDESCRIPTION: Cleans all items except specified files and directories without displaying the Clean Workspace dialog box.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/reconcile-command.md#2025-04-22_snippet_3\n\nLANGUAGE: Batch\nCODE:\n```\ntf reconcile /clean /noprompt /recursive /exclude:file1.txt,dir1\n```\n\n----------------------------------------\n\nTITLE: Getting Organization URL Using Generic C# Code\nDESCRIPTION: This C# code snippet shows how to get the base URL for an Azure DevOps organization using generic HTTP requests without the official client library.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Net;\nusing System.Net.Http;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json.Linq;\n```\n\nLANGUAGE: csharp\nCODE:\n```\nstatic readonly HttpClient s_client = new HttpClient();\nstatic readonly string s_locationServiceUrl = \"https://dev.azure.com\";\nstatic readonly Guid s_defaultResourceAreaId = Guid.Parse(\"79134C72-4A58-4B42-976C-04E7115F32BF\");\n\npublic async Task<Uri> GetOrganizationUrl(string organizationName)\n{\n    string requestUrl = $\"{s_locationServiceUrl}/_apis/resourceAreas/{s_defaultResourceAreaId}?accountName={organizationName}&api-version=5.0-preview.1\";\n\n    HttpResponseMessage response = await s_client.GetAsync(requestUrl);\n\n    if (response.StatusCode == HttpStatusCode.OK)\n    {\n        var resourceArea = await response.Content.ReadAsAsync<JObject>();\n\n        if (resourceArea != null)\n        {\n            return new Uri(resourceArea[\"locationUrl\"].ToString());\n        }\n    }\n    \n    return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Rolling Back a File to a Specific Version in TFVC\nDESCRIPTION: This command changes the content of a.txt to match the version that was checked in with changeset 23. It negates all changes made to the file after that changeset.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rollback-command-team-foundation-version-control.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\workspace> tf rollback /toversion:C23 a.txt\n```\n\n----------------------------------------\n\nTITLE: Creating Wiki Page with Inline Content\nDESCRIPTION: This example demonstrates creating a new wiki page with inline content using the Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-edit-wiki.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page update --path 'my page' --wiki myprojectwiki --content \"Hello World\"\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps CLI Tool\nDESCRIPTION: Command to install the tfx-cli globally using npm package manager\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/auth/tfs-basic-auth.md#2025-04-22_snippet_0\n\nLANGUAGE: no-highlight\nCODE:\n```\nnpm i -g tfx-cli\n```\n\n----------------------------------------\n\nTITLE: Exporting Work Items as CSV in Azure DevOps\nDESCRIPTION: This snippet explains how to export a list of work items as a CSV file from any query in Azure DevOps. It involves using the actions icon and selecting 'Export to CSV'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/email-work-items.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nFrom any query, you can export a list of work items as a comma-delimited list. Open the query, choose the :::image type=\"icon\" source=\"../../media/icons/actions-icon.png\" border=\"false\"::: actions icon, and choose <strong>Export to CSV</strong>. For more information, see [Bulk import or update work items using CSV files](../queries/import-work-items-from-csv.md).\n```\n\n----------------------------------------\n\nTITLE: Object-Level Permissions Reference Table in Markdown\nDESCRIPTION: Markdown table showing different areas and their corresponding permission-related tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/view-permissions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   **Area**\n   :::column-end:::\n   :::column span=\"1\":::\n   **Task**\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"1\":::\n   Wiki & dashboard permissions\n   :::column-end:::\n   :::column span=\"1\":::   \n   - [README & wiki](../../project/wiki/manage-readme-wiki-permissions.md)\n   - [Dashboards](../../report/dashboards/dashboard-permissions.md)\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Requiring Field Completion for a Security Group in Azure DevOps - XML\nDESCRIPTION: This XML snippet defines a rule that requires users in the specified \"Junior Analysts\" Azure DevOps group to complete the \"Second Approver\" field on a work item. It uses the <REQUIRED> element with the 'for' attribute to target the group. Prerequisites include an existing security group named \"Example1\\Junior Analysts\". The snippet should be placed within a work item type definition XML file, and it applies strictly to users in the configured group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_13\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\\\"Second Approver\\\">\\n  <REQUIRED for=\\\"Example1\\\\Junior Analysts\\\"/>\\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Creating Managed DevOps Pool with ARM Template\nDESCRIPTION: Azure CLI commands to navigate to the directory containing the ARM template files and deploy the Managed DevOps Pool using the template and parameters files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-arm-template.md#2025-04-22_snippet_3\n\nLANGUAGE: Azure CLI\nCODE:\n```\ncd c:\\examples\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz deployment group create --resource-group <resourceGroupName> --template-file mdp-azure-deploy.json --parameters mdp-azure-deploy-parameters.json\n```\n\n----------------------------------------\n\nTITLE: Discarding Multiple Changesets from Merge Candidates in TFVC\nDESCRIPTION: Removes all changesets up to changeset 137 as candidates for merging from branch1 to branch2.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merge-command.md#2025-04-22_snippet_7\n\nLANGUAGE: cmd\nCODE:\n```\nc:\\projects>tf merge /discard /version:C137 branch1 branch2 /recursive\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of npm Overrides\nDESCRIPTION: Illustrates an incorrect way of using npm overrides, which will result in an EOVERRIDE error. This example attempts to override a direct dependency, which is not recommended.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"name\": \"npm-overrides\",\n  \"version\": \"1.0.0\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"axios\": \"0.18.0\"\n  },\n  \"overrides\": {\n    // BAD, will throw an EOVERRIDE error\n    // \"axios\": \"0.19.2\",\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TreePath Field Type Operators and Macros in Azure DevOps Queries\nDESCRIPTION: Operators and macros supported for TreePath fields in Azure DevOps queries. TreePath fields support Area Path and Iteration Path fields with hierarchical path operators and special iteration macros.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n`Under`, `Not Under`, `=`, `<>`, `In`, `Not In`  \n\n**Macros**: `@TeamAreas`<sup>3</sup>, valid with **Area Path** field  \n`@CurrentIteration` and `@CurrentIteration+/- n`<sup>4</sup> valid with the **Iteration Path** field\n```\n\n----------------------------------------\n\nTITLE: Listing Azure DevOps Process Audit Events in Markdown\nDESCRIPTION: A comprehensive markdown table of all audit events related to Process customization in Azure DevOps, including work item types, fields, states, and other process elements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n### Process events\n\n| Action | Description |\n|--------|-------------|\n| `Process.Behavior.Add` | Work item type \"{WorkItemTypeReferenceName}\" created and portfolio backlog \"{BehaviorName}\" created. |\n| `Process.Behavior.Create` | Portfolio backlog \"{BehaviorName}\" created for process \"{ProcessName}\". |\n| `Process.Behavior.Delete` | Portfolio backlog \"{BehaviorName}\" deleted for process \"{ProcessName}\". |\n| `Process.Behavior.Edit` | Portfolio backlog \"{BehaviorName}\" edited for process \"{ProcessName}\". |\n| `Process.Behavior.Remove` | Portfolio backlog \"{BehaviorReferenceName}\" removed from work item type. |\n| `Process.Behavior.Update` | Portfolio backlog \"{BehaviorName}\" changed for {WorkItemTypeReferenceName}. |\n| `Process.Control.Create` | Control \"{ControlLabel}\" created for work item type \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.Control.CreateWithoutLabel` | Control created for work item type \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.Control.Delete` | A control was deleted for work item type \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.Control.Update` | Control \"{ControlLabel}\" updated for work item type \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.Field.Add` | Field \"{FieldReferenceName}\" created on work item type \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.Field.Create` | Field \"{FieldName}\" created for process \"{ProcessName}\". |\n| `Process.Field.Delete` | Field \"{FieldReferenceName}\" deleted. |\n| `Process.Field.Edit` | Field \"{FieldName}\" edited for process \"{ProcessName}\". |\n| `Process.Field.Remove` | Field \"{FieldReferenceName}\" removed from work item type \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.Field.Update` | Field \"{FieldReferenceName}\" updated in work item type \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.Group.Add` | New group \"{GroupLabel}\" added to {WorkItemTypeReferenceName} in process \"{ProcessName}\". |\n| `Process.Group.Update` | Group \"{GroupLabel}\" updated for work item type \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.List.Create` | The picklist \"{PicklistName}\" was created. |\n| `Process.List.Delete` | The picklist \"{PicklistName}\" was deleted. |\n| `Process.List.ListAddValue` | Picklist value {PicklistValue} was added. |\n| `Process.List.ListRemoveValue` | Picklist value {PicklistValue} was removed. |\n| `Process.List.Update` | The picklist \"{PicklistName}\" was updated. |\n| `Process.Page.Add` | Page \"{PageName}\" added to work item type \"{WorkItemTypeReferenceName}\". |\n| `Process.Page.Delete` | Page \"{PageName}\" deleted from work item type \"{WorkItemTypeReferenceName}\". |\n| `Process.Page.Update` | Page \"{PageName}\" updated for work item type \"{WorkItemTypeReferenceName}\". |\n| `Process.Process.CloneXmlToInherited` | The process \"{ParentProcessName}\" was cloned to an inherited process called \"{TargetProcessName}\". |\n| `Process.Process.Delete` | Process \"{ProcessName}\" was set as deleted. |\n| `Process.Process.Edit` | Process with the name \"{OldProcessName}\" was modified, and has the following name {NewProcessInformation}. |\n| `Process.Process.EditWithoutNewInformation` | Process with the name \"{OldProcessName}\" was modified. |\n| `Process.Process.Import` | New process \"{ProcessName}\" was imported. |\n| `Process.Process.MigrateXmlToInherited` | Process for project \"{ProjectName}\" was changed from \"{OldProcess}\" to \"{NewProcess}\". |\n| `Process.Rule.Add` | Rule \"{RuleName}\" added to \"{WorkItemReferenceName}\" for process \"{ProcessName}\". |\n| `Process.Rule.Delete` | Rule \"{RuleName}\" deleted from \"{WorkItemTypeReferenceName}\" for process \"{ProcessName}\". |\n| `Process.Rule.Update` | Rule \"{RuleName}\" updated in \"{WorkItemTypeReferenceName}\" for process \"{ProcessName}\". |\n| `Process.State.Create` | State \"{StateName}\" added to \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.State.Delete` | State \"{StateName}\" deleted from \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.State.Update` | State \"{StateName}\" updated in \"{WorkItemTypeReferenceName}\" in process \"{ProcessName}\". |\n| `Process.SystemControl.Update` | SystemControl \"{ControlId}\" updated in \"{WorkItemTypeReferenceName}\" for process \"{ProcessName}\". |\n| `Process.WorkItemType.Create` | New work item type \"{WorkItemTypeName}\" created for process \"{ProcessName}\". |\n| `Process.WorkItemType.Delete` | Work item type \"{WorkItemTypeReferenceName}\" deleted from process \"{ProcessName}\". |\n| `Process.WorkItemType.Update` | Work item type \"{WorkItemTypeReferenceName}\" updated for process \"{ProcessName}\". |\n```\n\n----------------------------------------\n\nTITLE: Restoring All npm Packages in Azure Artifacts\nDESCRIPTION: This command restores all npm packages defined in the project's package.json file. It should be run in the project directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/get-started-npm.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: TFVC Pipeline Error Example: Shelveset Not Found\nDESCRIPTION: An example error message that occurs when there's an issue with finding a shelveset during a gated check-in process. This typically happens when the job authorization scope is limited to the current project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/tfvc.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`The shelveset <xyz> could not be found for check-in`\n```\n\n----------------------------------------\n\nTITLE: Adding Azure Artifacts Feed Locator for Project Scoped Feed\nDESCRIPTION: Format for specifying an Azure Artifacts feed locator for a project scoped feed when adding it as an upstream source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/how-to/set-up-upstream-sources.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nazure-feed://ORGANIZATION_NAME/PROJECT_NAME/FEED_NAME@VIEW\n```\n\n----------------------------------------\n\nTITLE: Setting User Name and Email in Local Git Config\nDESCRIPTION: These commands set the user name and email in the local Git configuration file for the current repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ngit config user.name \"<user name>\"\ngit config user.email \"<email>\"\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure DevOps CLI\nDESCRIPTION: Command to login to Azure DevOps using tfx-cli. Requires a Personal Access Token (PAT) with Environment Read & Write permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/upload-tasks.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n~$ tfx login\n```\n\n----------------------------------------\n\nTITLE: Example: Listing Tokens for a User in a Specific Namespace\nDESCRIPTION: Example command that lists the tokens in table format for a specified Analytics namespace associated with a specific user. Output shows tokens and their effective allow/deny permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/manage-tokens-namespaces.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security permission list --id 58450c49-b02d-465a-ab12-59ae512d6531 --subject contoso@contoso.com --output table\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML configuration metadata for the documentation page, defining title, date, topic, manager, and other page settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/mar-05-vsts.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Work Items hub and VM-based Azure DevOps Project – VSTS Sprint 131 Update\nms.date: 3/5/2018\nms.topic: article\nms.manager: jillfra\ndescription: In the Sprint 131 Update of Visual Studio Team Services (VSTS), there are a few features that have received a large amount of feedback and activity on UserVoice, including Work Items hub.\nhide_comments: true\n---\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Server Collection URL Format\nDESCRIPTION: Example format for specifying the collection URL parameter when using Azure DevOps Server with and without virtual directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/test-case-managment-reference.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nhttp://ServerName:Port/VirtualDirectoryName/CollectionName\nhttp://ServerName:Port/CollectionName\n```\n\n----------------------------------------\n\nTITLE: Defining a Query Clause in Azure DevOps\nDESCRIPTION: This snippet shows the structure of a sample query clause in Azure DevOps, demonstrating how to filter work items assigned to the current user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/using-queries.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|And/Or|Field|Operator|Value|\n|------|-----|--------|-----|\n|**And**|**Assigned To**|**=**|**&#64;Me**|\n```\n\n----------------------------------------\n\nTITLE: Configuring Manual TEE Plugin Installation for TFVC\nDESCRIPTION: Details the components and steps required for manually installing the Team Explorer Everywhere (TEE) plugin for TFVC support on self-hosted agents, bypassing automatic download. Set the `DISABLE_TEE_PLUGIN_REMOVAL` environment variable to `true` to prevent removal after checkout, manually download `TEE-CLC version 14.135.0`, and extract its contents to the specified agent directory path. Access to `https://vstsagenttools.blob.core.windows.net/` might be needed if not manually placing files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n# Set environment or pipeline variable\nDISABLE_TEE_PLUGIN_REMOVAL=true\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nTEE-CLC version 14.135.0\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n<agent_directory>/externals/tee\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items with OData\nDESCRIPTION: OData query that retrieves Feature work items and their Bug descendants from Azure DevOps Analytics. The query filters by iteration and area, and groups bug counts by state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-stories-overview-rollup.md#2025-04-22_snippet_5\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $filter=(\n        IterationSK eq {iterationSK}\n        and AreaSK eq {areaSK}\n        and WorkItemType eq 'Feature'\n    )\n&$expand=Descendants(\n    $apply=filter(\n        WorkItemType eq 'Bug'\n    )\n    /groupby(\n        (State),\n        aggregate($count as Count)\n    )\n)\n&$select=WorkItemId,Title\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 164 Update Details in Markdown\nDESCRIPTION: This snippet includes a markdown file containing detailed information about Sprint 164 updates for Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/general/sprint-164-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-164-update](../includes/general/sprint-164-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Installing Python Packages\nDESCRIPTION: Command to install Python packages using pip package manager.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_15\n\nLANGUAGE: Command\nCODE:\n```\npip install\n```\n\n----------------------------------------\n\nTITLE: Searching by Tags in Azure DevOps\nDESCRIPTION: This example demonstrates how to use Azure DevOps semantic search to find all work items tagged with a specific value. The syntax `tags:Critical` searches for items having the tag 'Critical'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_5\n\nLANGUAGE: azure-devops-search\nCODE:\n```\ntags:Critical\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Program Backlog to Azure Boards Feature Backlog in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Program Backlog' to the Azure Boards 'Feature backlog'. It describes this backlog as listing Features with options to show child Stories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Program Backlog\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Feature backlog**](safe-concepts.md#backlogs-boards). A Feature backlog lists the Features associated with a program with the option to expand and display the child Stories.  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Configuring Work Item Type Access Control\nDESCRIPTION: XML configuration that defines allowed and disallowed groups for creating work items of a specific type using workflow field rules.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_12\n\nLANGUAGE: XML\nCODE:\n```\n<TRANSITION from=\" \" to=\"New\">  \n   <FIELDS>  \n     <FIELD refname=\"System.CreatedBy\">  \n         <VALIDUSER for=\"Allowed Group\" not=\"Disallowed Group\" />  \n     </FIELD>  \n   </FIELDS>  \n</TRANSITION>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Kanban Concepts and Terms\nDESCRIPTION: Detailed table outlining key Kanban terminology and concepts used in Azure DevOps boards, including definitions for blockers, bottlenecks, WIP limits, and workflow states.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/kanban-overview.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Concept or term |Description |\n|---------|---------|\n```\n\n----------------------------------------\n\nTITLE: Key Definition in Entity Model\nDESCRIPTION: Example of how keys are defined in the entity model to enable navigation properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-metadata.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<Key>\n   <PropertyRef Name=\"ProjectSK\"/>\n</Key>\n```\n\n----------------------------------------\n\nTITLE: Definition of TestOutcome Enumerated Type in Azure DevOps\nDESCRIPTION: This table defines the 15 possible outcomes for a test in Azure DevOps using the TestOutcome enumerated type. Each outcome has a member name, numeric value, display name, and description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Member name          | Value        | Display name        |  Description | \n|----------------------|--------------|---------------------| ---------------------|  \n|`Unspecified`           | 0          | Unspecified         |                            | \n|`None`                  | 1          | None                |                            |  \n|`Passed`                | 2          | Passed              | Test executed successfully. |  \n|`Failed`                | 3          | Failed              | Test not meeting the desired outcome. |  \n|`Inconclusive`          | 4          | Inconclusive        | Test without a definitive outcome. |   \n|`Timeout`               | 5          | Timeout             | Test execution duration exceeding the specified threshold. |                  \n|`Aborted`               | 6          | Aborted             | Test execution terminated abruptly due to internal or external factors, for example, bad code, environment issues. |\n|`Blocked`               | 7          | Blocked             |                            |                  \n|`NotExecuted`           | 8          | Not Executed        |  Test marked as skipped for execution. | \n|`Warning`               | 9          | Warning             |                            |   \n|`Error`                 | 10         | Error               |                            |    \n|`NotApplicable`         | 11         | Not Applicable      |                           |      \n|`Paused`                | 12         | Paused              |                           |  \n|`InProgress`            | 13         | In Progress          |                           |      \n|`NotImpacted`           | 14         | Not Impacted         | Test not impacted by the code change that triggered the pipeline. |     \n```\n\n----------------------------------------\n\nTITLE: Git Config Options for Rebasing When Pulling\nDESCRIPTION: Lists the valid values for the `git config pull.rebase` setting, including True (rebase on top of remote), False (merge remote into current), Merges (rebase while preserving merge commits), and Unset (default behavior).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/git-config-rebase-local-branch.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `True`: rebase the current branch on top of the remote branch after fetch.\n- `False`: merge the remote branch into the current branch.\n- `Merges`: rebase without flattening locally created merge commits.\n- `Unset` (default): unless specified otherwise in a Git configuration file, merge the remote branch into the current branch.\n```\n\n----------------------------------------\n\nTITLE: Adding a Git Remote Repository via Command Line\nDESCRIPTION: Uses the git remote add command to create an alias 'upstream' for a remote repository, typically the original repository that was forked. This allows easy referencing in Git commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_11\n\nLANGUAGE: console\nCODE:\n```\ngit remote add upstream <clone URL>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Documentation Page Structure in Markdown\nDESCRIPTION: Markdown structure for an Azure DevOps documentation page showing the standard layout including frontmatter metadata, sections with includes, and signature block.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/reporting/sprint-162-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Reporting - Sprint 162 Update\ndescription: See the Sprint 162 feature updates for Azure reporting, including next steps.\nauthor: gloridelmorales\nms.author: glmorale\nms.date: 12/16/2019\n---\n\n# Reporting - Sprint 162 Update\n\n## Features\n\n[!INCLUDE [sprint-162-update-links](../includes/reporting/sprint-162-update-links.md)]\n\n[!INCLUDE [sprint-162-update](../includes/reporting/sprint-162-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n\nThanks,\n\n[!INCLUDE [sprint-162](../includes/signer/sprint-162.md)]\n```\n\n----------------------------------------\n\nTITLE: Data Migration Domain URL\nDESCRIPTION: URL required for migrating from Azure DevOps server to cloud service using the data migration tool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dataimport.dev.azure.com\n```\n\n----------------------------------------\n\nTITLE: Process Configuration Management Commands for Azure DevOps\nDESCRIPTION: Commands for managing process configuration in Azure DevOps. Process configuration defines default settings and functional capabilities for Azure Boards, determining which work item types appear on backlogs, boards, and taskboards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-customize-and-manage-objects-for-tracking-work.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexportprocessconfig\n```\n\nLANGUAGE: bash\nCODE:\n```\nimportprocessconfig\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Link with Auto-suggestion for Wiki Pages\nDESCRIPTION: This snippet demonstrates the syntax for creating a link to another wiki page using Markdown. When typing the opening square bracket and forward slash, VSTS will provide auto-suggestions for other wiki pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/apr-16-vsts.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[link name](/\n```\n\n----------------------------------------\n\nTITLE: Importing Azure DevOps Extension SDK using AMD Modules in JavaScript\nDESCRIPTION: Shows how to import the Azure DevOps Extension SDK using AMD module syntax with the require function. This method maintains backward compatibility for projects using AMD modules.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/general/sprint-230-update.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nrequire(['azure-devops-extension-sdk'], function(SDK) {\n\n  // Use the module here\n});\n```\n\n----------------------------------------\n\nTITLE: TFVC Lock Command with Login\nDESCRIPTION: Example of using the lock command with user credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/use-team-foundation-version-control-commands.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main> tf lock /lock:none program.cs /login:<username>,<password>\n```\n\n----------------------------------------\n\nTITLE: Defining Job-Specific Variables in Azure Pipelines\nDESCRIPTION: Demonstrates how to define variables that are scoped to specific jobs in Azure Pipelines, allowing different configurations for different build jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-jenkins.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: debug build\n  variables:\n    configuration: debug\n  steps:\n  - script: ./build.sh $(configuration)\n- job: release build\n  variables:\n    configuration: release\n  steps:\n  - script: ./build.sh $(configuration)\n```\n\n----------------------------------------\n\nTITLE: Repository Array in Service Hook Payload - JSON Example\nDESCRIPTION: This JSON code block illustrates the structure of the 'repositories' array, which is now present in run, stage, and job state change service hook events in Azure DevOps. Each object details repository type, commit metadata such as author, committer, and commit message, as well as the repository URL. This structure is essential for automation systems processing webhook payloads and does not require external dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-218-update.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\\\"repositories\\\":\\n[\\n    {\\n        \\\"type\\\": \\\"Git\\\",\\n        \\\"change\\\":\\n        {\\n            \\\"author\\\":\\n            {\\n                \\\"name\\\": \\\"Fabrikam John\\\",\\n                \\\"email\\\": \\\"john@fabrikamfiber.com\\\",\\n                \\\"date\\\": \\\"2022-11-11T15:09:21Z\\\"\\n            },\\n            \\\"committer\\\":\\n            {\\n                \\\"name\\\": \\\"Fabrikam John\\\",\\n                \\\"email\\\": \\\"john@fabrikamfiber.com\\\",\\n                \\\"date\\\": \\\"2022-11-11T15:09:21Z\\\"\\n            },\\n            \\\"message\\\": \\\"Added Viva support\\\"\\n        },\\n        \\\"url\\\": \\\"https://fabrikamfiber@dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_git/fabrikamfiber\\\"\\n    }\\n]\\n\n```\n\n----------------------------------------\n\nTITLE: Starting Linux Agent Service for Azure DevOps\nDESCRIPTION: This command starts the Azure DevOps agent service on a Linux system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./svc.sh start\n```\n\n----------------------------------------\n\nTITLE: Removing Azure Pipelines Agent Configuration in PowerShell\nDESCRIPTION: Removes the current configuration of an Azure Pipelines agent using PowerShell. This is typically done before reconfiguring the agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/windows-agent.md#2025-04-22_snippet_4\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\config remove\n```\n\n----------------------------------------\n\nTITLE: Committing and Checking in Changes with Git-tf\nDESCRIPTION: Commits changes to the local Git repository and then checks them in to TFVC using Git-tf.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/share-your-code-in-tfvc-xcode.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -a \ngit tf checkin\n```\n\n----------------------------------------\n\nTITLE: Azure Repos Command Reference for Microsoft Teams\nDESCRIPTION: Complete list of all Azure Repos commands available for use in Microsoft Teams channels, including subscription management, authentication, and feedback commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-teams.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n|Command\t| Functionality |\n| -------------------- |----------------|\n|`@azure repos subscribe [repo url/ project url]`\t| Subscribe to a repo or all repos in a project to receive notifications |\n| `@azure repos subscriptions`\t| Add or remove subscriptions for this channel |\n| `@azure repos signin`\t| Sign in to your Azure Repos organization |\n| `@azure repos signout`\t| Sign out from your Azure Repos organization |\n|`@azure repos feedback`\t| Report a problem or suggest a feature |\n| `@azure repos unsubscribe all [project url]` | Remove all repos (belonging to a project) and their associated subscriptions from a channel |\n```\n\n----------------------------------------\n\nTITLE: Managing Project Dashboard Permissions Identifier (Plaintext)\nDESCRIPTION: The identifier (`DashboardsPrivileges, ManagePermissions`) allows users to manage the access control settings (permissions) for a specific project-level dashboard in Azure DevOps (Azure DevOps Services only).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_25\n\nLANGUAGE: plaintext\nCODE:\n```\nDashboardsPrivileges, ManagePermissions\n```\n\n----------------------------------------\n\nTITLE: PowerShell VM Registration Script Reference\nDESCRIPTION: The documentation mentions a PowerShell script that needs to be run with administrative permissions on target VMs to register them in the deployment group and install the Azure Pipelines deployment agent. The script is generated through the Azure DevOps UI and requires a personal access token for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deploy-webdeploy-iis-deploygroups.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n# Script is generated through Azure DevOps UI\\nService vstsagent.{computer-name} started successfully\n```\n\n----------------------------------------\n\nTITLE: Copying Migration Files Using AzCopy\nDESCRIPTION: Command to copy migration files between Azure storage accounts in different regions using AzCopy\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_18\n\nLANGUAGE: cmdline\nCODE:\n```\nAzCopy.exe /Source:https://accountSCUS.blob.core.windows.net/mycontainer /SourceKey:\"primary access key\" /Dest:https://accountCUS.blob.core.windows.net/mycontainer /DestKey:\"primary access key\" /S\n```\n\n----------------------------------------\n\nTITLE: Formatting Token for Iteration Path Permissions in Azure DevOps\nDESCRIPTION: Demonstrates the token format for setting iteration path permissions in Azure DevOps, including nested iterations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nvstfs:///Classification/Node/ProjectIteration1_Identifier:vstfs:///Classification/Node/TeamIteration1_Identifier:vstfs:///Classification/Node/TeamIteration1ChildIteration1_Identifier\n```\n\n----------------------------------------\n\nTITLE: Using CONTAINS Operator for String Fields in WIQL\nDESCRIPTION: Demonstrates using the CONTAINS operator to search for a substring within a string field's value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_35\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE [System.Description] contains 'WIQL'\n```\n\n----------------------------------------\n\nTITLE: Workfold Command Syntax for Workspace Information\nDESCRIPTION: Syntax for displaying mapping information for a specific workspace, without specifying a particular folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ntf workfold [/workspace:<workspace-name>] [/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Starting macOS Agent Service\nDESCRIPTION: Command to start the macOS agent running as a launchd service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh start\n```\n\n----------------------------------------\n\nTITLE: View Work Item Field Attributes Command\nDESCRIPTION: Lists the attributes defined for a specified field using witadmin listfields command\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_1\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin listfields /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:Microsoft.VSTS.Common.Issue\n```\n\n----------------------------------------\n\nTITLE: Adding a Work Item Type to the Requirement Category in Azure DevOps\nDESCRIPTION: XML definition for adding a custom work item type (Service App) to the Requirement Category, which makes it appear on the product backlog and boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_8\n\nLANGUAGE: XML\nCODE:\n```\n<CATEGORY name=\"Requirement Category\" refname=\"Microsoft.RequirementCategory\">\n   <DEFAULTWORKITEMTYPE name=\"User Story\" />\n   <WORKITEMTYPE name=\"Service App\" />\n</CATEGORY>\n```\n\n----------------------------------------\n\nTITLE: Getting Hash Value Using Azure DevOps Navigation Service in JavaScript\nDESCRIPTION: This code snippet demonstrates how to retrieve the current hash value from the host URL using the Azure DevOps Navigation service. It first obtains the Navigation service using VSS.getService() with the appropriate service ID, then calls the getHash() method to retrieve and log the current hash value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/extend/reference/samples/client-services/HostNavigationService.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n    // Get navigation service\n    VSS.getService(VSS.ServiceIds.Navigation).then(function(navigationService) {\n        // Get current hash value from host url\n        navigationService.getHash().then(function (hash) {\n            console.log(\"Host hash value: \" + hash);                        \n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: Correct Property Attributes in Classification Properties - Azure DevOps XML\nDESCRIPTION: This pair demonstrates a classification <properties> block with an attribute naming error in the <property> element. 'value' must be spelled correctly and is required, along with optional 'isFile'. Resolution corrects the attribute. Only 'name', 'value', and 'isFile' are permitted as attributes for <property>.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_21\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\\n <property name=\\\"MSPROJ\\\" value=\\\"Classification\\\\Fabrikam_FileMapping.xml\\\" isFile=\\\"true\\\" />\\n <property name=\\\"Process Template\\\" value=\\\"Agile\\\" />\\n</properties>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\\n  <property name=\\\"MSPROJ\\\" value=\\\"Classification\\\\Fabrikam_FileMapping.xml\\\" isFile=\\\"true\\\" />\\n  <property name=\\\"Process Template\\\" value=\\\"Fabrikam Agile\\\"/>\\n</properties>\n```\n\n----------------------------------------\n\nTITLE: Including Shared REST API Content using INCLUDE Directive in Markdown\nDESCRIPTION: This snippet uses the `[!INCLUDE]` directive, specific to Microsoft's documentation platform (likely DocFX-flavored Markdown), to embed content from another file located at `../includes/rest-apis-queries.md`. This directive is used to reuse common content, in this case, information about REST APIs related to queries, across multiple documentation pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-field-value.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/rest-apis-queries.md)]\n```\n\n----------------------------------------\n\nTITLE: Legacy Azure DevOps Environment Roles Table Definition\nDESCRIPTION: Markdown table defining the core roles (Creator, Reader, User, Administrator) and their associated permissions for environment management in older versions of Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/environment-roles.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Role | Description |\n|------------------------------------|---------|\\n| **Creator** | Global role, available from environments hub security option. Members of this role can create the environment in the project. Contributors are added as members by default. Required to trigger a YAML pipeline when the environment does not already exist.|\n| **Reader** | Members of this role can view the environment. |\n| **User** | Members of this role can use the environment when creating or editing YAML pipelines. |\n| **Administrator** | In addition to using the environment, members of this role can manage membership of all other roles for the environment. Creators are added as members by default. |\n```\n\n----------------------------------------\n\nTITLE: Structuring Widget HTML with Title and Description\nDESCRIPTION: This HTML snippet shows the recommended structure for a widget, including the use of the 'widget' class, title, and description. It demonstrates proper use of headings and CSS classes for consistent styling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/styles-from-widget-sdk.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"widget\">\n    <h2 class=\"title\">Widget title</h2>\t\n\t<div class=\"description\">The widget description is used to describe the widget. It makes sense even when read outside of the widget context.</div>\n\t<p>Place widget content here.</p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Amending the Previous Commit to Remove a Secret in Git\nDESCRIPTION: This snippet demonstrates how to amend the previous commit to remove a secret that was accidentally committed. It involves removing the secret from the code and using git commit --amend to update the commit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-secret-scanning.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit commit --amend\n```\n\n----------------------------------------\n\nTITLE: Uninstalling macOS Agent Service\nDESCRIPTION: Command to uninstall the macOS agent service. It's recommended to stop the service before uninstalling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/osx-agent.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n./svc.sh uninstall\n```\n\n----------------------------------------\n\nTITLE: Hub Icon Configuration in Extension Manifest\nDESCRIPTION: JSON configuration showing how to set up a hub icon in the extension manifest with asset packaging.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/web-navigation.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"my-extension\",\n  \"publisherId\": \"my-publisher\",\n  ...\n  \"contributions\": [\n        {\n            \"id\": \"example-hub\",\n            \"type\": \"ms.vss-web.hub\",\n            \"targets\": [\n                \"ms.vss-code-web.code-hub-group\"\n            ],\n            \"properties\": {\n                \"name\": \"My Hub\",\n                \"iconAsset\": \"my-publisher.my-extension/images/fabrikam-logo.png\",\n                \"includesData\": {\n                    \"assets\": [\n                        \"my-publisher.my-extension/images/fabrikam-logo.png\"\n                    ]\n                }\n            }\n       }\n  ],\n \"files\": [\n     {\n         \"path\": \"images/fabrikam-logo.png\",\n         \"addressable\": true\n     }\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Task Duration Percentiles in Power BI\nDESCRIPTION: A Power BI query that retrieves different percentiles (50th, 80th, 95th) of task duration for a specific pipeline task, filtering for successful or partially successful runs completed after a specified date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_4\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and TaskDisplayName eq '{taskname}' \"\n                &\"and PipelineRunCompletedOn/Date ge {startdate} \"\n        &\"and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded') \"\n        &\"and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1) \"\n            &\") \"\n                &\"/compute( \"\n                &\"percentile_cont(ActivityDurationSeconds, 0.5, PipelineRunCompletedDateSK) as TaskDuration50thPercentileInSeconds, \"\n            &\"percentile_cont(ActivityDurationSeconds, 0.8, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds, \"\n                &\"percentile_cont(ActivityDurationSeconds, 0.95, PipelineRunCompletedDateSK) as TaskDuration95thPercentileInSeconds) \"\n            &\"/groupby( \"\n        &\"(TaskDuration50thPercentileInSeconds, TaskDuration80thPercentileInSeconds, TaskDuration95thPercentileInSeconds, PipelineRunCompletedOn/Date)) \"\n    &\"&$orderby=PipelineRunCompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Agent Profile JSON for Monday Morning Provisioning\nDESCRIPTION: JSON configuration for use with Azure CLI to configure a managed pool with 1 agent provisioned on Monday mornings from midnight to 4:00 AM EST.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Stateless\": {},\n    \"resourcePredictionsProfile\": {\n        \"Manual\": {}\n    },\n    \"resourcePredictions\": {\n        \"timeZone\": \"Eastern Standard Time\",\n        \"daysData\": [\n            {},\n            {\n                \"00:00:00\": 1,\n                \"04:00:00\": 0\n            },\n            {},\n            {},\n            {},\n            {},\n            {}\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Checkout Lock to File in TFVC\nDESCRIPTION: Example of applying a checkout lock to a file. This prevents other users from checking out the file until the lock is released.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/lock-command.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf lock /lock:checkout 314.cs\n```\n\n----------------------------------------\n\nTITLE: Including Version Control Template\nDESCRIPTION: Markdown include statement for version control template content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/default-git-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Listing Billing Events for Azure DevOps Auditing\nDESCRIPTION: This table lists Azure DevOps audit events related to billing operations. It includes actions for mode updates, usage limit changes, purchase updates, and subscription linking/unlinking, providing the specific `Action` identifier and a `Description` with placeholders for dynamic data like subscription GUIDs and meter names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Billing events\n\n| Action | Description |\n|--------|-------------|\n| `Billing.BillingModeUpdate` | User billing configuration changed to '{BillingMode}' for subscription {SubscriptionGuid}. |\n| `Billing.LimitUpdate` | {MeterName} usage limit changed from {PreviousLimitNumber} to {LimitNumber}. |\n| `Billing.PurchaseUpdate` | {MeterName} quantity changed from {PreviousPurchaseNumber} to {PurchaseNumber}. |\n| `Billing.SubscriptionLink` | Billing relationship set up to {NewSubscriptionGuid}. |\n| `Billing.SubscriptionUnlink` | Billing relationship removed from {PreviousSubscriptionGuid}. |\n| `Billing.SubscriptionUpdate` | Billing relationship changed from {PreviousSubscriptionGuid} to {NewSubscriptionGuid}. |\n```\n\n----------------------------------------\n\nTITLE: Defining Additional Workflow Transitions for Bug Work Items in XML\nDESCRIPTION: This XML snippet defines additional workflow transitions for a Bug work item, including transitions from Active to New or Closed, and from Resolved to Closed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_19\n\nLANGUAGE: XML\nCODE:\n```\n<TRANSITION from=\"Active\" to=\"New\">\n<TRANSITION from=\"Active\" to=\"Closed\">\n<TRANSITION from=\"Resolved\" to=\"Closed\">\n```\n\n----------------------------------------\n\nTITLE: Counting Items in Azure DevOps Using OData Analytics\nDESCRIPTION: OData queries that return count-only results for different entity types in Azure DevOps. These queries use the $apply=aggregate($count as Count) approach to retrieve the total number of projects, work items, areas, and users in an organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/v4.0-preview/Projects?$apply=aggregate($count as Count)\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/v4.0-preview/WorkItems?$apply=aggregate($count as Count)\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/v4.0-preview/Areas?$apply=aggregate($count as Count)\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/v4.0-preview/Users?$apply=aggregate($count as Count)\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow States for Requirements in Azure DevOps\nDESCRIPTION: XML definition for mapping workflow states to the required state types (Proposed, InProgress, Complete) in the ProcessConfiguration, including a custom 'Pending' state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_9\n\nLANGUAGE: XML\nCODE:\n```\n<States>    \n     <State value=\"New\" type=\"Proposed\" />  \n     <State value=\"Active\" type=\"InProgress\" />  \n     <State value=\"Pending\" type=\"InProgress\" />  \n     <State value=\"Resolved\" type=\"InProgress\" />  \n     <State value=\"Closed\" type=\"Complete\" />  \n</States>   \n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple SSH Keys for Azure DevOps Repositories\nDESCRIPTION: SSH configuration for using different SSH keys with multiple Azure DevOps repositories. Sets up host aliases with specific identity files for different organizations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/use-ssh-keys-to-authenticate.md#2025-04-22_snippet_17\n\nLANGUAGE: ssh\nCODE:\n```\nHost devops_fabrikam\n  HostName ssh.dev.azure.com\n  IdentityFile ~/.ssh/private_key_for_fabrikam\n  IdentitiesOnly yes\n\nHost devops_contoso\n  HostName ssh.dev.azure.com\n  IdentityFile ~/.ssh/private_key_for_contoso\n  IdentitiesOnly yes\n```\n\n----------------------------------------\n\nTITLE: Verifying SecretVault Configuration\nDESCRIPTION: Command to list all secrets in the vault to verify successful creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nPS > Get-SecretInfo\n\nName            Type         VaultName\n----            ----         ---------\nMyCredential    PSCredential MySecretVault\n```\n\n----------------------------------------\n\nTITLE: Example ISVError:100014 Message for Missing Permission (cmdline)\nDESCRIPTION: This snippet shows an example ISVError:100014 message output by the Data Migration Tool. It indicates a missing permission (Expected:1, Actual:0) for a specific group identified by its SID (S-1-9-...) within a particular scope (397c...). This information is needed to construct the TFSSecurity command to fix the issue.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_8\n\nLANGUAGE: cmdline\nCODE:\n```\nISVError:100014 Missing permission for group:Microsoft.TeamFoundation.Identity;S-1-9-XXXXXXXXXX-XXXXXXXXXX-XXXXXXXXXX-XXXXXXXXXX-0-0-0-0-3 for scope:397c326b-b97c-4510-8271-75aac13de7a9. Expected:1 and Actual:0 \n```\n\n----------------------------------------\n\nTITLE: Checking Remaining Files to Migrate Query\nDESCRIPTION: SQL query to track progress of file migration job by counting remaining files that need to be migrated\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_17\n\nLANGUAGE: sql\nCODE:\n```\nSELECT  COUNT (*) as remaining_files_to_migrate\nFROM    tbl_FileReference\nWHERE   PartitionId > 0\n        AND MigrateFileId IS NOT NULL\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Update Links (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/boards/sprint-245-update-links.md`), likely containing links related to Sprint 245 updates for Azure Boards. It's used within the context of Azure DevOps release notes to centralize links for Board-specific updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update-links](includes/boards/sprint-245-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Agile Teams to Azure Boards Teams in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives (`:::row:::`, `:::column:::`, etc.) to map the SAFe® term 'Agile teams' to Azure Boards 'Teams'. It includes a link to further documentation on defining team hierarchies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Agile teams\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Teams**](safe-concepts.md#teams). You define a hierarchy of teams to meet the needs of feature or development teams, program and portfolio teams, or solution train teams. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Work Item Type Reference Name Fix\nDESCRIPTION: Shows how to correct duplicate work item type reference names by ensuring unique reference names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_50\n\nLANGUAGE: xml\nCODE:\n```\n  <WORKITEMTYPE name=\"Bug\" refname=\"MyCompany.Name\">\n```\n\nLANGUAGE: xml\nCODE:\n```\n  <WORKITEMTYPE name=\"User Story\" refname=\"MyCompany.Name\">\n```\n\nLANGUAGE: xml\nCODE:\n```\n  <WORKITEMTYPE name=\"Bug\" refname=\"MyCompany.Bug\">\n```\n\nLANGUAGE: xml\nCODE:\n```\n  <WORKITEMTYPE name=\"User Story\" refname=\"MyCompany.UserStory\">\n```\n\n----------------------------------------\n\nTITLE: Creating a Wiki using Azure DevOps CLI\nDESCRIPTION: This Azure CLI command creates a new wiki for an Azure DevOps project. It allows specifying various parameters such as wiki name, type, and repository details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/wiki-create-repo.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki create [--mapped-path]\n                      [--name]\n                      [--org]\n                      [--project]\n                      [--repository]\n                      [--type {codewiki, projectwiki}]\n                      [--version]\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Portfolio Backlog to Azure Boards Portfolio Backlog in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Portfolio Backlog' to the Azure Boards 'Portfolio backlog'. It describes this backlog as listing Epics with options to show child Features and Stories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Portfolio Backlog\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Portfolio backlog**](safe-concepts.md#backlogs-boards). A portfolio backlog lists the Epics associated with a portfolio with the option to expand and display the child Features and Stories.  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps User Profile Page via URL\nDESCRIPTION: This URL (`https://aex.dev.azure.com/me`) navigates to the user's Azure DevOps profile page. It is used in a troubleshooting context, typically within a private or incognito browser window after signing out, to ensure the user signs in and selects the correct directory associated with the target Azure DevOps organization needed for linking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/includes/boards-troubleshoot-authentication.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://aex.dev.azure.com/me\n```\n\n----------------------------------------\n\nTITLE: Restricting Transitions Based on User Groups in Azure DevOps XML\nDESCRIPTION: Example showing how to restrict who is allowed to make a transition from one state to another using the 'for' and 'not' attributes of the TRANSITION element. In this case, Testers can reopen a bug but Developers cannot.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/change-workflow-wit.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<TRANSITION from=\"Closed\" to=\"Active\"  \n   for=\"[Project]\\Testers\"  \n   not=\"[Project]\\Developers\">  \n   . . .  \n</TRANSITION>\n```\n\n----------------------------------------\n\nTITLE: Move work items out of this project Permission Reference\nDESCRIPTION: Permission that allows users to move a work item from one project to another project within the collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, WORK_ITEM_MOVE`\n```\n\n----------------------------------------\n\nTITLE: NuGet Feed Authentication Configuration\nDESCRIPTION: Commands for authenticating with Azure Artifacts NuGet feed\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_20\n\nLANGUAGE: powershell\nCODE:\n```\nnuget sources Add -Name \"<FEED_NAME>\" -Source \"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v2\" -username \"<USER_NAME>\" -password \"<PERSONAL_ACCESS_TOKEN>\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure DevOps Extension Example\nDESCRIPTION: This example demonstrates enabling the 'Timetracker' extension from the '7pace' publisher and displaying the result in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension enable --extension-name Timetracker --publisher-name 7pace --output table\n```\n\n----------------------------------------\n\nTITLE: Editing Shared Analytics Views Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`AnalyticsViews, Edit`) grants the object-level permission to modify the parameters and configuration of a specific shared Analytics view in Azure DevOps. This permission is set individually for each shared view.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_21\n\nLANGUAGE: plaintext\nCODE:\n```\nAnalyticsViews, Edit\n```\n\n----------------------------------------\n\nTITLE: Managing Variable Groups Scope (`vso.variablegroups_manage`)\nDESCRIPTION: Grants the ability to read, create and manage variable groups. Requires full access. Depends on `vso.variablegroups_write`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_28\n\nLANGUAGE: text\nCODE:\n```\n`vso.variablegroups_manage`\n```\n\n----------------------------------------\n\nTITLE: Using the tf help Command in Team Foundation Version Control\nDESCRIPTION: Syntax for the tf help command which displays information about syntax for tf command-line utility commands. This command requires a commandname parameter to specify which TFVC command to display help for.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/help-command-team-foundation-version-control.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf help <commandname>\n```\n\n----------------------------------------\n\nTITLE: Showing Repository Details with Azure CLI\nDESCRIPTION: Command to display information about a specific repository or open it in a web browser. Requires repository name or ID and supports various optional parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/repository-settings.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos show --repository\n              [--detect {false, true}]\n              [--open]\n              [--org]\n              [--project]\n              [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Basic Syntax for Migrator Prepare Command (cmdline)\nDESCRIPTION: This command shows the basic structure for running the `Migrator prepare` command from an Azure DevOps Server application tier. It requires specifying the collection URL, the target Microsoft Entra tenant domain name, and the desired Azure region for the migration. This syntax assumes the tool can automatically locate the configuration database.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_5\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator prepare /collection:{collection URL} /tenantDomainName:{name} /region:{region}\n```\n\n----------------------------------------\n\nTITLE: Install Git on Windows using WinGet\nDESCRIPTION: Installs Git on Windows using the Windows Package Manager (WinGet).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-cmdline.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nwinget install --id Git.Git -e --source winget\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Workspaces Command Syntax\nDESCRIPTION: Primary syntax for the workspaces command with options for owner, computer name, collection URL, format, and username updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspaces-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf workspaces [/owner:<owner-name>] [/computer:<computer-name>] \n[/collection:<team-project-collection-url>] [/format:(brief|detailed|xml)] \n[/updateUserName:<old-user-name>] [/updateComputerName:<old-computer-name>] \n[<workspace-name>][/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Repository Context Structure in JavaScript\nDESCRIPTION: Shows the structure of the repository context object available in pipeline decorators, including properties like alias, id, type, and version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/pipeline-decorator-context.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nresources['repositories']['self'] =\n{\n\t\"alias\": \"self\",\n\t\"id\": \"<repo guid>\",\n\t\"type\": \"Git\",\n\t\"version\": \"<commit hash>\",\n\t\"name\": \"<repo name>\",\n\t\"project\": \"<project guid>\",\n\t\"defaultBranch\": \"<default ref of repo, like 'refs/heads/main'>\",\n\t\"ref\": \"<current pipeline ref, like 'refs/heads/topic'>\",\n\t\"versionInfo\": {\n\t\t\"author\": \"<author of tip commit>\",\n\t\t\"message\": \"<commit message of tip commit>\"\n\t},\n\t\"checkoutOptions\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Including Azure DevOps Version Check\nDESCRIPTION: Markdown include statement for checking Azure DevOps version compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/roll-back-changesets.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Example: Wildcard Mapping for Single Folder\nDESCRIPTION: Shows how to use a wildcard to map only a server folder and its immediate items, creating what's known as a single folder mapping.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ntf workfold $/projects/MyTeamProject/* C:\\MyLocalWorkfold\\MyTeamProject\n```\n\n----------------------------------------\n\nTITLE: Setting up Action HTML Page\nDESCRIPTION: Creates an HTML page that loads the VSS SDK and action script. Initializes the VSS module loader which is required for the extension to function.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-action-ts.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Action Sample</title>\n</head>\n<body>\n\t<div>The end user doesn't see the content on this page.</div>\n\n\t<script src=\"sdk/scripts/VSS.SDK.js\"></script>\n\t<script src=\"scripts/action.js\"></script>\n\t<script>\n\t\tVSS.init({ setupModuleLoader: true });\n\t</script>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Adding Group Contribution XML\nDESCRIPTION: XML configuration for adding a group contribution to the work item form.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/configure-workitemform-extensions.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<Page Id=\"Details\">\n...\n    <Section>\n    ...\n        <GroupContribution Id=\"<group contribution id>\" />\n        ...\n```\n\n----------------------------------------\n\nTITLE: Comparing a File in a Shelveset\nDESCRIPTION: Command to display the difference between a specific file in a shelveset and its base version, showing pending changes against that file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects> tf difference /shelveset:PeerCodeReview8;Pat e271.cs\n```\n\n----------------------------------------\n\nTITLE: Service Accounts Table in Markdown\nDESCRIPTION: Markdown table defining system-generated service accounts and their descriptions for Azure DevOps operations\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| User name | Description |\n| ----------| ----------- |\n| Agent Pool Service | Has permission to listen to the message queue for the specific pool to receive work. In most cases, you don't need to manage group members directly - the agent registration process handles it for you. When you register the agent, the service account you specify (typically Network Service) automatically gets added. Responsible for performing Azure Boards read/write operations and updating work items when GitHub objects change. |\n| Azure Boards | Added when Azure Boards is [connected to GitHub](../../boards/github/connect-to-github.md). You shouldn't have to manage members of this group. Responsible for managing the link creation between GitHub and Azure Boards. |\n| PipelinesSDK | Added as needed to support the Pipelines policy service scope tokens. This user account is similar to the build service identities but supports locking down permissions separately. In practice, the tokens that involve this identity are granted read-only permissions to pipeline resources and the one-time ability to approve policy requests. This account should be treated in the same way that the build service identities are treated. |\n| *ProjectName* Build Service | Has permissions to run build services for the project and is a legacy user used for XAML builds. It's automatically a member of the Security Service Group, which is used to store users who are granted permissions, but no other security group. |\n| Project Collection Build Service | Has permissions to run build services for the collection. It's automatically a member of the Security Service Group, which is used to store users who are granted permissions, but no other security group. |\n```\n\n----------------------------------------\n\nTITLE: Global Workflow Management Commands for Azure DevOps Server\nDESCRIPTION: Commands for managing global workflow in Azure DevOps Server, allowing definition and updating of fields and global lists that apply to all work item types in a project or collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-customize-and-manage-objects-for-tracking-work.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexportglobalworkflow\n```\n\nLANGUAGE: bash\nCODE:\n```\nimportglobalworkflow\n```\n\n----------------------------------------\n\nTITLE: Filtering work items by comment content in Azure DevOps\nDESCRIPTION: Example of using the 'comment' filter to find work items with 'todo' in their comments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/functional-work-item-search.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\ncomment:todo\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Columns Status Badge with Markdown in GitHub README\nDESCRIPTION: Markdown syntax for adding a custom Azure Boards status badge to a GitHub README file. This example shows a badge configured to display specific columns (Proposed, Committed, In Progress, In Review) by using URL parameters in the badge link.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/configure-status-badges.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Board Status](https://dev.azure.com/fabrikam/677da0fb-b067-4f77-b89b-f32c12bb8617/cdf5e823-1179-4503-9fb1-a45e2c1bc6d4/_apis/work/boardbadge/6fa7b56f-d27c-4e96-957d-f9e7b0f56705?columnOptions=2&columns=Proposed,Committed,In%20Progress,In%20Review)](https://dev.azure.com/fabrikam/677da0fb-b067-4f77-b89b-f32c12bb8617/_boards/board/t/cdf5e823-1179-4503-9fb1-a45e2c1bc6d4/Microsoft.RequirementCategory/)\n```\n\n----------------------------------------\n\nTITLE: Displaying Default Permissions for Work Items in Azure DevOps\nDESCRIPTION: This code snippet includes a template file that likely contains a table or list of default permissions for work items in Azure DevOps. It's used to display this information consistently across documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-permissions-access-work-tracking.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/boards-work-items.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating Service Principal in Azure CLI\nDESCRIPTION: Azure CLI command to create a new service principal that will be used for accessing Azure resources. The command generates credentials that will be used to set up the service connection in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz ad sp create-for-rbac --name YOUR_SERVICE_PRINCIPAL_NAME\n```\n\n----------------------------------------\n\nTITLE: Allowing PendChange Permission for a Group on a Project\nDESCRIPTION: Example showing how to allow a group to make pending changes to all items in a specific TFVC project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/permission-command.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf permission /allow:PendChange /group:testers$/testproject\n```\n\n----------------------------------------\n\nTITLE: On-Premises Azure DevOps Query URL Syntax\nDESCRIPTION: URL syntax pattern for creating query hyperlinks in on-premises Azure DevOps Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/using-queries.md#2025-04-22_snippet_6\n\nLANGUAGE: txt\nCODE:\n```\nhttps://{ServerName}/{CollectionName}/{ProjectName}/_workitems?_a=query&wiql={Encoded WorkItemQueryLanguage}\n```\n\n----------------------------------------\n\nTITLE: OData REST Query for Test Points\nDESCRIPTION: OData REST query that retrieves test points data from Azure DevOps Analytics API. The query groups results by tester and outcome, with filtering by test plan title.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-tester-by-outcome.md#2025-04-22_snippet_1\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints?  \n    $apply=filter((TestSuite/TestPlanTitle eq '{testPlanTitle}')) \n    /groupby(\n        (Tester/UserName, LastResultOutcome),  \n        aggregate($count as Count) \n    )\n```\n\n----------------------------------------\n\nTITLE: TestResultsDaily Navigation Properties Table\nDESCRIPTION: Markdown table showing the navigation properties for TestResultsDaily entity type, including referential constraints and referenced properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n|**Name**        |**Referential constraint**  |**Referenced property** |\n|----------------|----------------------------|---------------------------|\n| `Branch`       | `BranchSK` | `BranchSK` |\n```\n\n----------------------------------------\n\nTITLE: Publishing Azure DevOps Extension\nDESCRIPTION: Command to publish the extension to the Visual Studio Marketplace and share it with a specific organization using TFX CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_3\n\nLANGUAGE: cmd\nCODE:\n```\ntfx extension publish --manifest-globs your-manifest.json --share-with yourOrganization\n```\n\n----------------------------------------\n\nTITLE: South Brazil Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps services in the South Brazil region. Includes both SharePoint (shprod) and Team Foundation Server (tfsprod) instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nshprodsbr1ip1\t 20.40.112.11\n\t\t\ntfsprodsbr1ip1\t 20.40.114.3\n```\n\n----------------------------------------\n\nTITLE: Updating a Git Remote Repository URL via Command Line\nDESCRIPTION: Uses the git remote set-url command to modify the URL of an existing remote repository alias. This is useful when the repository location has changed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_12\n\nLANGUAGE: console\nCODE:\n```\ngit remote set-url upstream <clone URL>\n```\n\n----------------------------------------\n\nTITLE: Example Azure DevOps OAuth 2.0 Authorization URL\nDESCRIPTION: This snippet shows a complete example of an Azure DevOps OAuth 2.0 authorization URL with specific values for each parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_1\n\nLANGUAGE: no-highlight\nCODE:\n```\nhttps://app.vssps.visualstudio.com/oauth2/authorize\n        ?client_id=00001111-aaaa-2222-bbbb-3333cccc4444\n        &response_type=Assertion\n        &state=User1\n        &scope=vso.work%20vso.code_write\n        &redirect_uri=https://fabrikam.azurewebsites.net/myapp/oauth-callback\n```\n\n----------------------------------------\n\nTITLE: Identifier for Managing Test Environments Permission\nDESCRIPTION: The symbolic identifier `Project, MANAGE_TEST_ENVIRONMENTS` permits users to create and delete test environments in Azure DevOps. This is related to managing the specific setups used for testing, often alongside test configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, MANAGE_TEST_ENVIRONMENTS\n```\n\n----------------------------------------\n\nTITLE: Calculating Date Difference in Days in Power BI Using DAX\nDESCRIPTION: This DAX code creates a calculated column that computes the number of days between the current date and the previous date for each row. It handles the first day of the dataset where the previous date is blank.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_3\n\nLANGUAGE: DAX\nCODE:\n```\nDate Diff in Days =\nIF (\n    ISBLANK ( 'View Name'[Date Previous] ),\n    1,\n    DATEDIFF (\n        'View Name'[Date Previous],\n        'View Name'[Date],\n        DAY\n    )\n)\n```\n\n----------------------------------------\n\nTITLE: Replacing Global Lists with ALLOWEDVALUES and LISTITEM Elements in XML\nDESCRIPTION: Global lists aren't supported in Azure DevOps. This example shows how to replace GLOBALLIST references with explicit ALLOWEDVALUES and LISTITEM elements in a WIT field definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_34\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD name=\"CustomField\" refname=\"MyCompany.CustomField\" type=\"String\">\n  <ALLOWEDVALUES>\n    <GLOBALLIST name=\"Disciplines\" />\n  </ALLOWEDVALUES>\n</FIELD>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD name=\"CustomField\" refname=\"MyCompany.CustomField\" type=\"String\">\n  <ALLOWEDVALUES>\n    <LISTITEM value=\"Architecture\" />\n    <LISTITEM value=\"Requirements\" />\n    <LISTITEM value=\"Development\" />\n    <LISTITEM value=\"Release Management\" />\n    <LISTITEM value=\"Project Management\" />\n    <LISTITEM value=\"Test\" />\n  </ALLOWEDVALUES>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Applying Non-Recursive Label in TFVC\nDESCRIPTION: Shows how to apply the 'goodbuild' label to just the docs folder without affecting its contents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/label-command-team-foundation-version-control.md#2025-04-22_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf label goodbuild docs\n```\n\n----------------------------------------\n\nTITLE: Specifying Literal Date Values in Azure Boards DateTime Queries\nDESCRIPTION: Provides an example of specifying a fixed date value (`01/01/2025`) for a DateTime field in an Azure Boards query. The format should match the user's personal profile Date Pattern setting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-operators-variables.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n01/01/2025\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Roadmap to Azure Boards Delivery Plans/Timeline in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Roadmap' to Azure Boards 'Delivery Plans' and 'Feature Timeline'. It highlights these as configurable views for reviewing roadmaps and deliverables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Roadmap\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Delivery Plans, Feature Timeline**](safe-review-roadmaps-progress.md#roadmaps). Azure Boards provides configurable and interactive views to review roadmaps and team deliverables.\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Configuring Run From Package in Azure App Service\nDESCRIPTION: Command reference for enabling RunFromPackage (previously RunFromZip) deployment method in Azure App Service. This feature improves deployment reliability and performance by mounting a zip file directly to wwwroot instead of copying individual files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-142-update.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nRunFromPackage\n```\n\n----------------------------------------\n\nTITLE: Updating Legend in Power BI CFD Report\nDESCRIPTION: This snippet explains how to update the legend in a Power BI Cumulative Flow Diagram report. It involves replacing CFD.ColumnName with ColumnOrder.ColumnName in the Legend field to ensure correct column sorting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-cfd.md#2025-04-22_snippet_6\n\nLANGUAGE: powerbi\nCODE:\n```\nIn the report's Legend, replace CFD.ColumnName with ColumnOrder.ColumnName\n```\n\n----------------------------------------\n\nTITLE: Navigation Properties of TestPointHistorySnapshot Entity in Azure DevOps\nDESCRIPTION: This table defines the navigation properties available for the TestPointHistorySnapshot entity type, showing the referential constraints and referenced properties for each navigation relationship.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n|**Display Name** |**Name**        |**Referential constraint**  |**Referenced property** |\n|-----------------|----------------|----------------------------|---------------------------|\n|   | `Date` | `DateSK` | `DateSK` | \n|Assigned To | `AssignedTo` | `AssignedToUserSK` | `UserSK` | \n|Project | `Project` | `ProjectSK` | `ProjectSK` | \n|Test Case Work Item| `TestCase` | `TestCaseId` | `WorkItemId` | \n|Test Configuration | `TestConfiguration` | `TestConfigurationSK` | `TestConfigurationSK` |\n|Test Suite   | `TestSuite` | `TestSuiteSK` | `TestSuiteSK` | \n|Tester User Name | `Tester` | `TesterUserSK` | `UserSK` | \n```\n\n----------------------------------------\n\nTITLE: Accessing Git Branch Security URL in Azure DevOps\nDESCRIPTION: URL format for signing in to a project in Azure DevOps to access Git branch security settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}/{Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Including Sprint Update Content\nDESCRIPTION: Include directive to pull in the main Sprint 252 update content from a separate markdown file\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/general/sprint-252-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-252-update](../includes/general/sprint-252-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Customizing Linux Agent Service Startup for Azure DevOps\nDESCRIPTION: This code snippet shows where to insert custom instructions or commands in the runsvc.sh file to be executed when the agent service starts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-linux-agent.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# insert anything to setup env when running as a service\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Azure DevOps Documentation\nDESCRIPTION: YAML frontmatter configuration that specifies metadata for an Azure DevOps documentation page, including service type, authorship, topic type, and last update date. This metadata helps in organizing and maintaining documentation for Azure DevOps Boards across Services and Server versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-gt-eq-2020.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.service: azure-devops-boards\nms.author: chcomley\nauthor: chcomley\nms.topic: include\nms.date: 07/27/2022\n---\n```\n\n----------------------------------------\n\nTITLE: Getting Deleted Projects with REST API in Azure DevOps\nDESCRIPTION: HTTP GET request to retrieve a list of deleted projects from an Azure DevOps server. Uses the projects API with a deleted state filter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/delete-project.md#2025-04-22_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nGET http://ServerName:8080/tfs/DefaultCollection/_apis/projects?stateFilter=\ndeleted&api-version=5.0-preview.3\n```\n\n----------------------------------------\n\nTITLE: Adding Internal Link Reference in Markdown\nDESCRIPTION: Markdown anchor link reference for navigating to Azure DevOps CLI general availability section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-154-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Azure DevOps CLI general availability](#azure-devops-cli-general-availability)\n```\n\n----------------------------------------\n\nTITLE: Setting TFSPROXY Environment Variable in macOS/Linux\nDESCRIPTION: Command to set the TFSPROXY environment variable on macOS/Linux systems to configure an agent to get sources through a Team Foundation Proxy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/troubleshooting.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport TFSPROXY=http://tfvcproxy:8081\n```\n\n----------------------------------------\n\nTITLE: Variable Group Creation Output in YAML Format\nDESCRIPTION: Sample YAML output showing the structure of a newly created variable group with its ID, name, type, and variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nauthorized: false\ndescription: null\nid: 5\nname: home-office-config\nproviderData: null\ntype: Vsts\nvariables:\n  app-location:\n    isSecret: null\n    value: home-office\n  app-name:\n    isSecret: null\n    value: contoso\n```\n\n----------------------------------------\n\nTITLE: Using Conditions with Typos in Azure Pipelines YAML Steps\nDESCRIPTION: This snippet demonstrates using a condition to control the execution of a `NuGetCommand` task within an Azure Pipelines YAML step. The condition checks if the `Patch` variable equals 0. The example includes an intentional typo in the condition (`variable.Patch` instead of the correct `variables.Patch`), illustrating how the enhanced YAML validation feature identifies errors in condition syntax defined at the step level.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-231-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\n```yml\nsteps:\n- task: NuGetCommand@2\n  condition: eq(variable.Patch, 0)\n  inputs:\n    command: pack\n    versioningScheme: byPrereleaseNumber\n    majorVersion: '$(Major)'\n    minorVersion: '$(Minor)'\n    patchVersion: '$(Patch)'\n```\n```\n\n----------------------------------------\n\nTITLE: Query for Architectural Features and Stories\nDESCRIPTION: Creates a query to find Features and User Stories that are categorized under the Architectural value area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/planning-ranking-priorities.md#2025-04-22_snippet_2\n\nLANGUAGE: Azure DevOps Query\nCODE:\n```\nWork Item Type In Feature,User Story\nAnd Value Area = _ Architectural\n```\n\n----------------------------------------\n\nTITLE: System Synchronization Information Viewing Permission Code in Azure DevOps\nDESCRIPTION: Permission code for viewing system synchronization information in Azure DevOps. This permission allows calling the synchronization APIs and is typically assigned only to service accounts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/collection-level-permissions-reference-table.md#2025-04-22_snippet_2\n\nLANGUAGE: markup\nCODE:\n```\nCollection, SYNCHRONIZE_READ\n```\n\n----------------------------------------\n\nTITLE: Listing Project Wikis Example\nDESCRIPTION: Example command for listing all wikis in a project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki list\n```\n\n----------------------------------------\n\nTITLE: Invalid CodeQL Analysis Pipeline Configuration with Unsupported Language\nDESCRIPTION: This YAML snippet shows an invalid Azure Pipelines configuration for CodeQL analysis. It attempts to use the 'none' build mode with Swift, which is not supported, resulting in a pipeline failure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-code-scanning.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: none\n\npool:\n  vmImage: windows-latest\n\nsteps:\n- task: AdvancedSecurity-Codeql-Init@1\n  displayName: Initialize CodeQL\n  inputs:\n    languages: 'csharp, swift'\n    buildtype: 'none'\n\n- task: AdvancedSecurity-Codeql-Analyze@1\n  displayName: Perform CodeQL Analysis\n```\n\n----------------------------------------\n\nTITLE: Viewing Help Content for Azure DevOps Data Migration Tool\nDESCRIPTION: These commands display the help content for the Azure DevOps Data Migration Tool, including top-level guidance and specific help for the validation command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-prerequisites.md#2025-04-22_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\nMigrator /help\n```\n\nLANGUAGE: cmd\nCODE:\n```\nMigrator validate /help\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Matrix in Travis CI\nDESCRIPTION: This Travis CI configuration creates a matrix of builds that runs the same script with different environment variable values. It demonstrates how to run a build multiple times with variations using the matrix approach in Travis CI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nos: osx\nenv:\n  matrix:\n  - MY_ENVIRONMENT_VARIABLE: 'one'\n  - MY_ENVIRONMENT_VARIABLE: 'two'\n  - MY_ENVIRONMENT_VARIABLE: 'three'\nscript: echo $MY_ENVIRONMENT_VARIABLE\n```\n\n----------------------------------------\n\nTITLE: Changing Field Type Using witadmin\nDESCRIPTION: Command to change field type for HTML or PlainText fields to resolve type conflicts with Azure DevOps Services\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_15\n\nLANGUAGE: cmdline\nCODE:\n```\nwitadmin changefield /collection:http://AdventureWorksServer:8080/DefaultCollection /n:TFSfieldReferenceName  /type:PlainText | HTML\n```\n\n----------------------------------------\n\nTITLE: Projects Query Response in Azure DevOps Server\nDESCRIPTION: This snippet shows the JSON response from querying project names in an on-premises Azure DevOps Server. It lists all project names in the collection with their OData context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_12\n\nLANGUAGE: OData\nCODE:\n```\n{\n\"@odata.context\": \"http://fabrikam/DefaultCollection/_odata/v4.0-preview/$metadata#Projects(ProjectName)\",\n\"value\": [\n   {\n      \"ProjectName\": \"Fabrikam Fiber\"\n   },\n   {\n      \"ProjectName\": \"Fabrikam\"\n   },\n   {\n      \"ProjectName\": \"Fabrikam Florida\"\n   }\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Static Date Equivalent for @StartOfYear Macro - WIQL\nDESCRIPTION: This snippet represents the static-date version of the @StartOfYear macro for use in queries requiring hardcoded temporal boundaries. No special dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_18\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE \n   [Microsoft.VSTS.Scheduling.TargetDate]  > '01-01-2019'\n```\n\n----------------------------------------\n\nTITLE: Filter Examples for TFVC Folder Comparison\nDESCRIPTION: Examples of filter patterns used in TFVC folder comparison. These demonstrate how to match specific file types or exclude certain folders.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/folder-comparison-filters.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n*.cs;!objd\\;!obj\\;!bin\\\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n!*.resx;!*.ini;!resources\\;!*junk*\\\n```\n\n----------------------------------------\n\nTITLE: Creating Class Diagrams with Mermaid in Azure DevOps Wiki\nDESCRIPTION: This snippet demonstrates how to create a class diagram using Mermaid syntax in Azure DevOps Wiki. The diagram shows inheritance relationships between a Creature class and its subclasses (Superman, Vampire, Diavolo), along with their respective attributes and methods.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_15\n\nLANGUAGE: mermaid\nCODE:\n```\n:::mermaid\nclassDiagram\n    Creature <|-- Superman\n    Creature <|-- Vampire\n    Creature <|-- Diavolo\n    Creature: +int size\n    Creature: +int weight\n    Creature: +isBenign()\n    Creature: +power()\n    class Superman{\n        +String currentName\n        +fly()\n        +heal()\n    }\n    class Vampire{\n        -int age\n        -canBite()\n    }\n    class Diavolo{\n        +bool is_serving\n        +heat()\n    }\n:::\n```\n\n----------------------------------------\n\nTITLE: Importing Process Configuration XML with witadmin in Azure DevOps\nDESCRIPTION: Command to import a process configuration XML file using the witadmin tool. Requires specifying the collection URL, project name, and file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-process-configuration.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nwitadmin importprocessconfig /collection:CollectionURL [/p:ProjectName] /f:FileName [/e:encoding] [/v]\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Git Pull Request Updated Event in Azure DevOps\nDESCRIPTION: This JSON payload represents the event data sent when a Git pull request is updated in Azure DevOps. It includes details about the pull request, repository, and associated commits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"eventType\": \"git.pullrequest.updated\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Jamal Hartnett marked the pull request as completed\",\n    \"html\": \"Jamal Hartnett marked the pull request as completed\",\n    \"markdown\": \"Jamal Hartnett marked the pull request as completed\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Jamal Hartnett marked the pull request as completed\\r\\n\\r\\n- Merge status: Succeeded\\r\\n- Merge commit: eef717(https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000)\\r\\n\",\n    \"html\": \"Jamal Hartnett marked the pull request as completed\\r\\n<ul>\\r\\n- Merge status: Succeeded</br>\\r\\n- Merge commit: <a href=\\\"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\\\">eef717</a></br>\\r\\n</ul>\",\n    \"markdown\": \"Jamal Hartnett marked the pull request as completed\\r\\n\\r\\n+ Merge status: Succeeded\\r\\n+ Merge commit: [eef717](https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000)\\r\\n\"\n  },\n  \"resource\": {\n    \"repository\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"name\": \"Fabrikam\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000\",\n      \"project\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Fabrikam\",\n        \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/projects/00000000-0000-0000-0000-000000000000\",\n        \"state\": \"wellFormed\"\n      },\n      \"defaultBranch\": \"refs/heads/main\",\n      \"remoteUrl\": \"https://dev.azure.com/fabrikam/DefaultCollection/_git/Fabrikam\"\n    },\n    \"pullRequestId\": 1,\n    \"status\": \"completed\",\n    \"createdBy\": {\n      \"id\": \"00000000-0000-0000-0000-00000000000000000000-0000-0000-0000-000000000000\",\n      \"displayName\": \"Jamal Hartnett\",\n      \"uniqueName\": \"fabrikamfiber4@hotmail.com\",\n      \"url\": \"https://dev.azure.com/fabrikam/_apis/Identities/00000000-0000-0000-0000-000000000000\",\n      \"imageUrl\": \"https://dev.azure.com/fabrikam/DefaultCollection/_api/_common/identityImage?id=00000000-0000-0000-0000-000000000000\"\n    },\n    \"creationDate\": \"2024-06-17T16:55:46.589889Z\",\n    \"closedDate\": \"2024-06-30T18:59:12.3660573Z\",\n    \"title\": \"my first pull request\",\n    \"description\": \" - test2\\r\\n\",\n    \"sourceRefName\": \"refs/heads/mytopic\",\n    \"targetRefName\": \"refs/heads/main\",\n    \"mergeStatus\": \"succeeded\",\n    \"mergeId\": \"00000000-0000-0000-0000-000000000000\",\n    \"lastMergeSourceCommit\": {\n      \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/abc-defg-123-4567/commits/00000000-0000-0000-0000-000000000000\"\n    },\n    \"lastMergeTargetCommit\": {\n      \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/abc-defg-123-4567/commits/00000000-0000-0000-0000-000000000000\"\n    },\n    \"lastMergeCommit\": {\n      \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/abc-defg-123-4567/commits/00000000-0000-0000-0000-000000000000\"\n    },\n    \"reviewers\": [\n      {\n        \"reviewerUrl\": null,\n        \"vote\": 0,\n        \"id\": \"00000000-0000-0000-0000-00000000000000000000-0000-0000-0000-000000000000\",\n        \"displayName\": \"[Mobile]\\\\Mobile Team\",\n        \"uniqueName\": \"azure-devops:///Classification/TeamProject/00000000-0000-0000-0000-000000000000\\\\Mobile Team\",\n        \"url\": \"https://dev.azure.com/fabrikam/_apis/Identities/abcdefg1234567\",\n        \"imageUrl\": \"https://dev.azure.com/fabrikam/DefaultCollection/_api/_common/identityImage?id=abcdefg1234567\",\n        \"isContainer\": true\n      }\n    ],\n    \"commits\": [\n      {\n        \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n        \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/pullRequests/1\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:27.2813828Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Query Macro Example - Following Items\nDESCRIPTION: Example showing how to use the @Follows macro to find work items the current user is following\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/feature-matrix-query-macros.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nID In @Follows\n```\n\n----------------------------------------\n\nTITLE: OIDC Token Generation in PowerShell\nDESCRIPTION: PowerShell script demonstrating how to request a fresh OIDC token and establish an Azure connection using workload identity federation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-240-update.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n- task: AzurePowerShell@5\n  inputs:\n    azureSubscription: 'my-azure-subscription'\n    scriptType: inlineScript\n    inline: |\n        # Request fresh idToken\n        Invoke-RestMethod -Headers @{\n                        Authorization  = \"Bearer $(System.AccessToken)\"\n                        'Content-Type' = 'application/json'\n                      } `\n                      -Uri \"${env:SYSTEM_OIDCREQUESTURI}?api-version=7.1&serviceConnectionId=${env:AZURESUBSCRIPTION_SERVICE_CONNECTION_ID}\" `\n                      -Method Post `\n                      | Select-Object -ExpandProperty oidcToken\n                      | Set-Variable idToken\n\n    # Fetch current context\n    $azContext = Get-AzContext\n\n    # Start new Az session\n    Connect-AzAccount -ApplicationId $azContext.Account.Id `\n                      -TenantId $azContext.Tenant.Id `\n                      -SubscriptionId $azContext.Subscription.Id `\n                      -FederatedToken $idToken\n```\n\n----------------------------------------\n\nTITLE: Empty Field Query Operators\nDESCRIPTION: Operators for querying empty or non-empty HTML/rich text fields\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/feature-matrix-filter-queries.md#2025-04-22_snippet_2\n\nLANGUAGE: WIQL\nCODE:\n```\nIs Empty\nIs Not Empty\n```\n\n----------------------------------------\n\nTITLE: Delete test runs Permission Reference\nDESCRIPTION: Permission that allows users to delete a test run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, DELETE_TEST_RESULTS`\n```\n\n----------------------------------------\n\nTITLE: Example of Exporting a Test Run with TCM\nDESCRIPTION: This example demonstrates exporting a test run with ID 1000082 for the Fabrikam Fiber project in the fabrikamprime organization. The test run results are exported to a .trx file at the specified location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_11\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /export /id:1000082 /resultsfile:\"c:\\temp\\ResultsForDeveloper.trx\" /collection:https://fabrikamprime.visualstudio.com /teamproject:\"Fabrikam Fiber\"\n```\n\n----------------------------------------\n\nTITLE: Adding Work Item ID Control to Form in XML\nDESCRIPTION: XML code snippet that demonstrates how to add a work item ID field control to a work item form with a left-aligned label\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-wit.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<Control FieldName=\"System.ID\" Type=\"FieldControl\" Label=\"ID\" LabelPosition=\"Left\" />\n```\n\n----------------------------------------\n\nTITLE: Renaming a File using TFVC Command Line\nDESCRIPTION: This command changes the name of a file from '314.cs' to '1254.cs' using the TFVC rename command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rename-command-team-foundation-version-control.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf rename  314.cs  1254.cs\n```\n\n----------------------------------------\n\nTITLE: Comparing All Files in a Shelveset\nDESCRIPTION: Command to display the differences between all files in a specific shelveset and their base versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects> tf difference /shelveset:PeerCodeReview2\n```\n\n----------------------------------------\n\nTITLE: Installing TFX CLI Package Manager\nDESCRIPTION: Command to install the TFX CLI tool globally using NPM. This tool is required for packaging and publishing Azure DevOps extensions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_1\n\nLANGUAGE: cmd\nCODE:\n```\nnpm i -g tfx-cli\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Pend Changes\nDESCRIPTION: Namespace identifier for pending changes in server workspace\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_34\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, PendChange\n```\n\n----------------------------------------\n\nTITLE: Querying Items Modified on Specific Date\nDESCRIPTION: Query clause that filters work items modified on a specific calendar date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-date-or-current-iteration.md#2025-04-22_snippet_1\n\nLANGUAGE: WIQL\nCODE:\n```\nChanged Date = 1/1/2023\n```\n\n----------------------------------------\n\nTITLE: Using Build.BuildUri Variable in Azure DevOps Pipelines\nDESCRIPTION: Provides the URI for the build (e.g., vstfs:///Build/Build/1430). It's agent-scoped, usable as an environment variable or task parameter, but not in build numbers or version control tags. Not available in templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_4\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.BuildUri\n```\n\n----------------------------------------\n\nTITLE: HTML Anchor Tag for Azure AD Section\nDESCRIPTION: This HTML anchor tag creates an internal link target within the document, marking the section discussing Microsoft Entra ID integration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/organization-management.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a id=\"access-azure-ad\"></a>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Row for Dashboard Permissions\nDESCRIPTION: A markdown table row showing dashboard view permissions for different access levels\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/overview.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"3\":::\n      Dashboards (View)\n   :::column-end:::\n   :::column span=\"1\":::\n       ✔️  \n   :::column-end:::\n   :::column span=\"1\":::\n       ✔️  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Display Detailed Workspace Information Example\nDESCRIPTION: Command example showing how to display detailed workspace information for current user in a specific collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspaces-command.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf workspaces /computer:* /format:detailed /collection:https://myserver:8080/tfs/DefaultCollection\n```\n\n----------------------------------------\n\nTITLE: Defining Control Contribution Inputs in JSON\nDESCRIPTION: This JSON configuration defines the inputs for a custom control contribution. It specifies two inputs: 'FieldName' for associating with a work item field, and 'Colors' for configuring color mappings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/custom-control.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"inputs\": [\n    {\n        \"id\": \"FieldName\",\n        \"description\": \"The field associated with the control.\",\n        \"type\": \"WorkItemField\",\n        \"properties\": {\n            \"workItemFieldTypes\": [\"String\"]\n        },\n        \"validation\": {\n            \"dataType\": \"String\",\n            \"isRequired\": true\n        }\n    },\n    {\n        \"id\": \"Colors\",\n        \"description\": \"The colors that match the values in the control.\",\n        \"type\": \"string\",\n        \"validation\": {\n            \"dataType\": \"String\",\n            \"isRequired\": false\n        }\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Implementing Widget Configuration JavaScript for Azure DevOps Dashboard\nDESCRIPTION: This JavaScript code implements the configuration functionality for an Azure DevOps dashboard widget. It initializes the VSS SDK, registers the configuration component, and handles loading existing settings and saving new configuration values selected by users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n<script type=\"text/javascript\">\n    VSS.init({                        \n        explicitNotifyLoaded: true,\n        usePlatformStyles: true\n    });\n\n    VSS.require([\"AzureDevOps/Dashboards/WidgetHelpers\"], function (WidgetHelpers) {\n        VSS.register(\"HelloWorldWidget.Configuration\", function () {   \n            var $queryDropdown = $(\"#query-path-dropdown\"); \n\n            return {\n                load: function (widgetSettings, widgetConfigurationContext) {\n                    var settings = JSON.parse(widgetSettings.customSettings.data);\n                    if (settings && settings.queryPath) {\n                         $queryDropdown.val(settings.queryPath);\n                     }\n\n                    return WidgetHelpers.WidgetStatusHelper.Success();\n                },\n                onSave: function() {\n                    var customSettings = {\n                        data: JSON.stringify({\n                                queryPath: $queryDropdown.val()\n                            })\n                    };\n                    return WidgetHelpers.WidgetConfigurationSave.Valid(customSettings); \n                }\n            }\n        });\n        VSS.notifyLoadSucceeded();\n    });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Work Item Deleted Event Payload in Azure DevOps\nDESCRIPTION: Sample JSON payload for a work item deletion event in Azure DevOps. Contains event metadata, formatted messages, and the complete work item field data at time of deletion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_32\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-00000000000072da0ade-0709-40ee-beb7-104287bf7e84\",\n  \"eventType\": \"workitem.deleted\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Bug #5 (Some great new idea!) deleted by Jamal Hartnett.\",\n    \"html\": \"Bug #5 (Some great new idea!) deleted by Jamal Hartnett.\",\n    \"markdown\": \"[Bug #5](Some great new idea!) deleted by Jamal Hartnett.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Bug #5 (Some great new idea!) deleted by Jamal Hartnett.\\r\\n\\r\\n- Area: FabrikamCloud\\r\\n- Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1\\r\\n- State: New\\r\\n\",\n    \"html\": \"Bug #5 (Some great new idea!) deleted by Jamal Hartnett.<ul>\\r\\n- Area: FabrikamCloud</br>\\r\\n- Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1</br>\\r\\n- State: New</br></ul>\",\n    \"markdown\": \"[Bug #5](Some great new idea!) deleted by Jamal Hartnett.\\r\\n\\r\\n* Area: FabrikamCloud\\r\\n* Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1\\r\\n* State: New\\r\\n\"\n  },\n  \"resource\": {\n    \"id\": 5,\n    \"rev\": 1,\n    \"fields\": {\n      \"System.AreaPath\": \"FabrikamCloud\",\n      \"System.TeamProject\": \"FabrikamCloud\",\n      \"System.IterationPath\": \"FabrikamCloud\\\\Release 1\\\\Sprint 1\",\n      \"System.WorkItemType\": \"Bug\",\n      \"System.State\": \"New\",\n      \"System.Reason\": \"New defect reported\",\n      \"System.CreatedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.CreatedBy\": \"Jamal Hartnett\",\n      \"System.ChangedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.ChangedBy\": \"Jamal Hartnett\",\n      \"System.Title\": \"Some great new idea!\",\n      \"Microsoft.Azure DevOps Services.Common.Severity\": \"3 - Medium\",\n      \"WEF_EB329F44FE5F4A94ACB1DA153FDF38BA_Kanban.Column\": \"New\"\n    },\n    \"_links\": {\n      \"self\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/recyclebin/5\"\n      },\n      \"workItemType\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/ea830882-2a3c-4095-a53f-972f9a376f6e/workItemTypes/Bug\"\n      },\n      \"fields\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/fields\"\n      }\n    },\n    \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/recyclebin/5\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:30.0657064Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Permanently Deleting a Work Item Example\nDESCRIPTION: Example command showing how to permanently delete a work item with ID 864 without confirmation prompt using Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/remove-delete-work-items.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item delete --id 864 --destroy --yes\n```\n\n----------------------------------------\n\nTITLE: Example DACPAC Generation Command in Command Line\nDESCRIPTION: A concrete example of the SqlPackage.exe command running on the Azure DevOps Server data tier itself. This generates a DACPAC file named 'Foo.dacpac' from the collection database 'Foo'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_11\n\nLANGUAGE: cmdline\nCODE:\n```\nSqlPackage.exe /sourceconnectionstring:\"Data Source=localhost;Initial Catalog=Foo;Integrated Security=True\" /targetFile:C:\\DACPAC\\Foo.dacpac /action:extract /p:ExtractAllTableData=true /p:IgnoreUserLoginMappings=true /p:IgnorePermissions=true /p:Storage=Memory\n```\n\n----------------------------------------\n\nTITLE: ARM Template Parameters for Managed DevOps Pool\nDESCRIPTION: JSON file containing parameter values for the ARM template. It includes values for pool name, Azure DevOps organization URL, Dev Center resource ID, image name, pool size, and location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-arm-template.md#2025-04-22_snippet_2\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"parameters\": {\n        \"poolName\": {\n            \"value\": \"my-first-managed-pool\"\n        },\n        \"adoOrg\": {\n            \"value\": \"https://dev.azure.com/your-organization\"\n        },\n        \"devCenterResourceId\": {\n            \"value\": \"/subscriptions/subscription_id_placeholder/resourceGroups/fabrikam-managed-devops-pools/providers/Microsoft.DevCenter/projects/fabrikam-dev-center-project\"\n        },\n        \"imageName\": {\n            \"value\": \"windows-2022\"\n        },\n        \"poolSize\": {\n            \"value\": 1\n        },\n        \"location\": {\n            \"value\": \"eastus\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Supported Service Endpoint Types - Azure DevOps REST API - HTTPS\nDESCRIPTION: This code snippet demonstrates how to query Azure DevOps REST API to list supported service endpoint types and their required parameters. Substitute '{organization}' with your Azure DevOps organization name to retrieve up-to-date service endpoint types via direct HTTPS access. The API returns JSON describing each supported endpoint type. This is reference syntax, not an executable command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/service-endpoint.md#2025-04-22_snippet_1\n\nLANGUAGE: https\nCODE:\n```\nhttps://dev.azure.com/{organization}/_apis/serviceendpoint/types?api-version=6.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: Azure Key Vault Unauthorized Client Error Message\nDESCRIPTION: Error message shown when a client attempts to access a Key Vault without being in the authorized IP addresses list and not being recognized as a trusted service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-access.md#2025-04-22_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nError: Client address is not authorized and caller is not a trusted service.\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC View Command Syntax\nDESCRIPTION: The syntax definition for the TFVC view command shows all available parameters and options for retrieving specific file versions without adding them to your workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/view-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Batch\nCODE:\n```\ntf view [/collection:<team-project-collection-url>] [/console] [/recursive] [/output:<local-file>]\n[/shelveset:<shelveset-name>[;<owner>]] [/noprompt] <item-spec> \n[/version:<version-spec>] [/login:<username>,[<password>]]\n```\n\n----------------------------------------\n\nTITLE: Editing Project Dashboard Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`DashboardsPrivileges, Edit`) grants permission to add widgets to and modify the layout of a specific project-level dashboard in Azure DevOps. This permission applies to dashboards at the project scope (Azure DevOps Services only).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_24\n\nLANGUAGE: plaintext\nCODE:\n```\nDashboardsPrivileges, Edit\n```\n\n----------------------------------------\n\nTITLE: Personal Access Token Authentication for SOAP Services in C#\nDESCRIPTION: This snippet shows how to authenticate with Azure DevOps using a Personal Access Token (PAT) when working with SOAP-based services. It creates a TfsTeamProjectCollection with a VssBasicCredential.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/client-libraries/soapSamples.md#2025-04-22_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\npublic static void PersonalAccessTokenSoapSample()\n{\n    // Authenticate using Personal Access Token\n    VssBasicCredential vssBasicCredential = new VssBasicCredential(string.Empty, pat);\n    using (TfsTeamProjectCollection tpc = new TfsTeamProjectCollection(new Uri(collectionUri), vssBasicCredential))\n    {\n        tpc.Authenticate();\n        Console.WriteLine(tpc.InstanceId);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Display Repository Information Example\nDESCRIPTION: Example command showing how to display repository details in table format, including the repository ID, name, default branch, and project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/azure-repos-update.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos show --repository contosoREPO --output table\n```\n\n----------------------------------------\n\nTITLE: Browser Tab Visual Studio Include Statement\nDESCRIPTION: Markdown include statement for adding a note about the new Git tool\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-tags.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/note-new-git-tool.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating a Last Refresh Date Table in Power BI Using Advanced Editor\nDESCRIPTION: This PowerQuery code creates a new table with a single column containing the current local date and time. This is particularly useful when the standard 'To Table' option is unavailable in Power BI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/add-last-refresh-time.md#2025-04-22_snippet_2\n\nLANGUAGE: M\nCODE:\n```\nlet\nSource = #table(\n    {\"Last Refresh Date\"}, \n    {{DateTime.LocalNow()}}\n)\nin\nSource\n```\n\n----------------------------------------\n\nTITLE: Image Interaction Instructions in Markdown\nDESCRIPTION: Markdown syntax for displaying instructions about image interaction, including how to expand an image and close it using an icon. Uses markdown image syntax to embed a close icon.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/lightbox-image.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n*To see the full image, click the image to expand. Choose the ![close icon](../media/icons/close-filter.png) close icon to close.*\n```\n\n----------------------------------------\n\nTITLE: Allowing Administrators to Create Branches in Release Folder\nDESCRIPTION: TF Git command to allow Project Administrators to create branches within the 'release' folder, restricting release branch creation to administrators only.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/require-branch-folders.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntf git permission /allow:CreateBranch /group:\"[FabrikamProject]\\Project Administrators\" /collection:https://dev.azure.com/fabrikam-fiber/ /teamproject:FabrikamProject /repository:FabrikamRepo /branch:release\n```\n\n----------------------------------------\n\nTITLE: Custom Rules Condition Example\nDESCRIPTION: Example markdown snippet showing various custom rule conditions that can be applied to work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/inheritance-process-model.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- When a value is defined for Priority, then make Risk a required field\n- When a change is made to the value of Release, then clear the value of \"Milestone\"\n- When a change was made to the value of Remaining Work, then make Completed Work a required field\n- When the value of Approved is True, then make Approved By a required field\n- When a user story is created, make the following fields required: Priority, Risk, and Effort\n```\n\n----------------------------------------\n\nTITLE: Properties of TestPointHistorySnapshot Entity in Azure DevOps\nDESCRIPTION: This table defines the properties available for the TestPointHistorySnapshot entity set in Azure DevOps Analytics, including data types and descriptions. It includes surrogate keys TestPointSK and DateSK.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n|**Display name** | **Name** | **Data type** | **Description** | \n|-----------------|--------------------|---------------|--------------------------------------|\n|                 |`AnalyticsUpdatedDate` | DateTime | Watermark that indicates the last time the Analytics data was updated.  |  \n|                 |`AssignedToUserSK` | GUID | The GUID assigned to the test work item.   | \n|                 |`IsLastDayOfPeriod` |  Enumerated | Use to filter data to determine if a day finishes in different periods such as days, weeks, months, or years. Valid values are listed here: [Period enumerated type members](entity-reference-general.md#period-enumerated-type-members).| \n|                 |`TesterUserSK` | GUID | The GUID assigned to the tester associated with the test point.   | \n|                 |`TestConfigurationSK` | Int32 | The key assigned to the associated test configuration.    | \n|**Automation Status**     | `AutomationStatus` | Enumerated | The status of a test case, such as Automated, Not Automated, or Planned. Corresponds to the [Microsoft.VSTS.TCM.AutomationStatus](../../boards/queries/build-test-integration.md) work item field. |   \n|**Priority** | `Priority` | Int32 | The priority assigned to the associated test case.   |  \n|**Test Case Id** | `TestCaseId` | Int32 | The work item ID assigned to the associated test case. | \n|**Test Configuration Id** | `TestConfigurationId` | Int32 | The number assigned to the associated test configuration.   |   \n|**Test Plan Id** | `TestPlanId` | Int32 | The work item ID assigned to the associated test plan.  | \n|**Test Result Outcome** | `ResultOutcome` | Enumerated | Specifies the last test result outcome. Valid values are listed in [TestOutcome](#testoutcome-enumerated-type-members).  | \n|**Test Suite Id**   | `TestSuiteId` | Int32 | The work item ID assigned to the associated test suite.     |  \n```\n\n----------------------------------------\n\nTITLE: JSON Response for Work Items Grouped by Type\nDESCRIPTION: This JSON shows the structure of a response when work items are grouped by type, displaying counts for each work item type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_4\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\":\"https://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/$metadata#WorkItems(WorkItemType,Count)\",\"value\":[\n    {\n      \"@odata.id\":null,\"WorkItemType\":\"Bug\",\"Count\":3\n    },\n    {\n      \"@odata.id\":null,\"WorkItemType\":\"Product Backlog Item\",\"Count\":13\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying file comparison tool arguments syntax\nDESCRIPTION: Examples of command argument syntax for external diff tools, including how to pass file paths, friendly-name labels, and handle special characters in arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/associate-file-type-file-comparison-tool.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\n%1 %2\n```\n\nLANGUAGE: batch\nCODE:\n```\n%1 /title1=%6 %2 /title2=%7\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Runs by Pipeline ID with OData\nDESCRIPTION: OData query that retrieves pipeline runs for a specific pipeline ID from a specified start date, which ensures the report works even if the pipeline name changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    PipelineId eq {pipelineId}\n    and CompletedDate ge {startdate}\n    )\n/aggregate(\n    $count as TotalCount,\n    SucceededCount with sum as SucceededCount ,\n    FailedCount with sum as FailedCount,\n    PartiallySucceededCount with sum as PartiallySucceededCount ,\n    CanceledCount with sum as CanceledCount\n)\n```\n\n----------------------------------------\n\nTITLE: Removing All Subscriptions from Microsoft Teams Channel\nDESCRIPTION: Command for project administrators to remove all subscriptions related to any repository in a project and remove the repositories from a Microsoft Teams channel.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-teams.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\n@azure repos unsubscribe all [project url]\n```\n\n----------------------------------------\n\nTITLE: Committing Changes\nDESCRIPTION: Commands to stage and commit changes to the local repository with a commit message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/code-with-git.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit add .\ngit commit -m \"My first commit\"\n```\n\n----------------------------------------\n\nTITLE: Organization Profile JSON for Azure CLI\nDESCRIPTION: This JSON snippet shows the contents of the organization-profile.json file used in the Azure CLI command to configure the Azure DevOps organization for a Managed DevOps Pool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_5\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"AzureDevOps\": {\n    \"organizations\": [\n      {\n        \"url\": \"https://dev.azure.com/fabrikam-tailspin\",\n        \"projects\": [],\n        \"parallelism\": 4\n      }\n    ],\n    \"permissionProfile\": {...}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using a File for Check-in Notes in TFVC\nDESCRIPTION: Example showing how to use a file (notes.txt) to provide check-in notes for changeset 8675309. This allows for more complex note structures to be defined in a separate file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/changeset-command.md#2025-04-22_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf changeset /notes:@notes.txt 8675309\n```\n\n----------------------------------------\n\nTITLE: Notifying VSS of Successful Page Load\nDESCRIPTION: Notifies the VSS framework that the page has successfully loaded. This is required when using explicitNotifyLoaded: true in the VSS.init() call.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/use-a-control-ts.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n...\n\nVSS.notifyLoadSucceeded();\n</script>\n```\n\n----------------------------------------\n\nTITLE: Resolving a Merge Conflict by Choosing One Version\nDESCRIPTION: Resolves the merge conflict by recreating the file with content from the 'fruit' branch, effectively discarding changes from the 'animals' branch. This will trigger Git's history simplification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_6\n\nLANGUAGE: Git CLI\nCODE:\n```\n> echo \"some content\" > test.txt\n> echo \"bananas\" >> test.txt\n> git commit -am \"Fixed merge conflict\"\n```\n\n----------------------------------------\n\nTITLE: Bug Work Items State Configuration\nDESCRIPTION: Configuration of bug work item states with their corresponding meta-states for process configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_32\n\nLANGUAGE: xml\nCODE:\n```\n  <BugWorkItems category=\"Microsoft.BugCategory\" pluralName=\"Bugs\" singularName=\"Bug\">\n    <States>\n    <States>\n      <State value=\"New\" type=\"Proposed\" />\n      <State value=\"Approved\" type=\"Proposed\" />\n      <State value=\"Committed\" type=\"InProgress\" />\n      <State value=\"Done\" type=\"Complete\" />\n    </States>\n  </BugWorkItems>\n```\n\n----------------------------------------\n\nTITLE: Managing PR Threads Scope (`vso.threads_full`)\nDESCRIPTION: Grants the ability to read and write to pull request comment threads.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_21\n\nLANGUAGE: text\nCODE:\n```\n`vso.threads_full`\n```\n\n----------------------------------------\n\nTITLE: Creating a Pool with Organization Profile using Azure CLI\nDESCRIPTION: This Azure CLI command shows how to specify organization profile settings, including pool administration permissions, when creating a Managed DevOps Pool. It uses the `--organization-profile` parameter to reference an external JSON file (`organization-profile.json`) containing these settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --organization-profile organization-profile.json\n   # other parameters omitted for space\n```\n\n----------------------------------------\n\nTITLE: Executing WITAdmin Export Command\nDESCRIPTION: Command line example showing how to export a work item type definition using the witadmin tool\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-wit.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwitadmin exportwitd /collection:CollectionURL /p:ProjectName /n:TypeName /f:\"DirectoryPath/FileName.xml\"\n```\n\n----------------------------------------\n\nTITLE: Process Configuration XML - Duplicate Metastate Mapping Error\nDESCRIPTION: Example showing incorrect configuration where the same workflow state is mapped to multiple metastates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_27\n\nLANGUAGE: xml\nCODE:\n```\n<RequirementBacklog category=\"Microsoft.RequirementCategory\" pluralName=\"Stories\" singularName=\"Story\">\n   <States>\n      <State value=\"Active\" type=\"Proposed\" />\n      <State value=\"Active\" type=\"InProgress\" />\n      <State value=\"Resolved\" type=\"InProgress\" />\n      <State value=\"Closed\" type=\"Complete\" />\n   </States>\n . . .\n</RequirementBacklog >\n```\n\n----------------------------------------\n\nTITLE: TFVC Branches Command Branch History Example\nDESCRIPTION: Shows how to view detailed branch history including parent-child branch relationships.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branches-command.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nD:\\projects\\ws1>tf branches WindowsApplication13-branch\n$/jun16-1/WindowsApplication13\n>>      $/jun16-1/WindowsApplication13-branch   Branched from version 3 <<\n                $/jun16-1/WindowsApplication13-branch-prime     Branched from version 5\n        $/jun16-1/WindowsApplication13-branch2  Branched from version 3\n```\n\n----------------------------------------\n\nTITLE: Static Date Equivalent for @StartOfMonth-3 Macro - WIQL\nDESCRIPTION: This WIQL query is the static-date equivalent of using @StartOfMonth-3, useful for documentation purposes or when a fixed comparison date is desired. Output is identical, though the value will not update dynamically.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_16\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE \n   [Microsoft.VSTS.Common.CreatedDate] >= '01-01-2019'\n```\n\n----------------------------------------\n\nTITLE: Azure Boards GitHub Integration Management Documentation\nDESCRIPTION: Markdown documentation that provides instructions for managing Azure Boards integration with GitHub, including steps to suspend, unsuspend, and uninstall the integration, as well as handling connection updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/install-github-app.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Suspend or uninstall Azure Boards integration \n\n1. Starting from step 2 in the previous procedure, scroll down to the **Danger zone** section.\n\n\t:::image type=\"content\" source=\"media/change-repo-access/danger-zone.png\" alt-text=\"Screenshot of Azure Boards configuration, Danger zone section.\":::\n\n1. To suspend the integration, choose **Suspend**. From the popup confirmation window, choose **OK** to confirm the suspension.\n\n\t:::image type=\"content\" source=\"media/change-repo-access/suspend-confirmation-popup.png\" alt-text=\"Screenshot of suspension confirmation.\":::\n \n\tTo unsuspend the integration, choose **Unsuspend**.  \n \n1. To uninstall the Azure Boards app, choose **Uninstall**, and then choose **OK** from the popup confirmation window.  \n\n\t:::image type=\"content\" source=\"media/change-repo-access/uninstall-confirmation-popup.png\" alt-text=\"Screenshot of uninstall confirmation.\":::\n\n## Update Azure Boards-GitHub connections\n \nIf you change the repositories that the Azure Boards app for GitHub supports, you might get redirected to Azure Boards GitHub connections. A good practice is to remove the repositories in Azure Boards that can no longer connect to GitHub. For more information, see [Add or remove GitHub repositories](#add-remove-repos).\n\nIf you uninstall the Azure Boards app for GitHub, the following message displays in Azure Boards, **Project settings** > **GitHub** connections. Choose **Remove connection** to remove all previously made GitHub connections. For more information, see [Add/remove GitHub repositories](#add-remove-repos). \n\n:::image type=\"content\" source=\"media/change-repo-access/boards-remove-connection.png\" alt-text=\"Screenshot of uninstalled Azure Boards GitHub app.\":::\n\n## Next steps\n\n> [!div class=\"nextstepaction\"]\n> [Link GitHub commits, pull requests, and branches to work items](link-to-from-github.md) \n\n## Related articles\n \n- [Drive Git development from a work item](../backlogs/connect-work-items-to-git-dev-ops.md)\n- [Change GitHub repository access, or suspend or uninstall the integration](change-azure-boards-app-github-repository-access.md)\n- [Configure status badges to add to GitHub README files](configure-status-badges.md)\n```\n\n----------------------------------------\n\nTITLE: Example: Importing a Work Item Type Definition\nDESCRIPTION: This example imports a work item type definition from an XML file into a project. If the work item type already exists, it will be updated; otherwise, a new type will be created.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_9\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin importwitd /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /f:myworkitem.xml /p:AdventureWorks\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Organization URL\nDESCRIPTION: This snippet shows the URL format for signing into an Azure DevOps organization. It uses a placeholder for the organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/open-process-admin-context-ts-only.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```https://dev.azure.com/{Your_Organization}```\n```\n\n----------------------------------------\n\nTITLE: Recursively Undoing Pending Changes in a Directory\nDESCRIPTION: Example showing how to recursively remove pending changes to all items in a directory and its subdirectories using the /recursive flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undo-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf undo * /recursive\n```\n\n----------------------------------------\n\nTITLE: Configuring Ubuntu 24.04 VM Image in Azure Pipelines\nDESCRIPTION: YAML configuration to specify Ubuntu 24.04 as the virtual machine image for Azure Pipelines hosted agents. Includes a basic bash script to verify the Ubuntu version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-246-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- job: ubuntu2404\n  pool:\n    vmImage: 'ubuntu-24.04'\n  steps:\n  - bash: |\n      echo Hello from Ubuntu 24.04\n      lsb_release -d\n```\n\n----------------------------------------\n\nTITLE: Power Query OData Implementation Configuration\nDESCRIPTION: Configuration string to set OData version 4 and omit null values in Power BI queries to prevent throttling errors\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/access-analytics-power-bi.md#2025-04-22_snippet_1\n\nLANGUAGE: powerquery\nCODE:\n```\n[Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]\n```\n\n----------------------------------------\n\nTITLE: Recursively Adding Specific File Types to TFVC\nDESCRIPTION: Example of recursively adding all C# code files (*.cs) in the current directory and its subdirectories to a TFVC repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/add-command.md#2025-04-22_snippet_4\n\nLANGUAGE: Batch\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf add *.cs /recursive\n```\n\n----------------------------------------\n\nTITLE: Installing a NuGet Package from NuGet Gallery\nDESCRIPTION: NuGet Package Manager Console command to install the Serilog package from NuGet Gallery. This command will retrieve the package through your configured feed with upstream sources enabled, automatically saving a copy to your feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/upstream-sources.md#2025-04-22_snippet_2\n\nLANGUAGE: Command\nCODE:\n```\nNuGet\\Install-Package Serilog -Version 3.1.2-dev-02097\n```\n\n----------------------------------------\n\nTITLE: Deleting Tags from Pipeline Runs with Azure DevOps CLI\nDESCRIPTION: Removes a specific tag from a pipeline run using the Azure DevOps CLI. This command deletes the 'YAML' tag from run ID 123.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runs.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz pipelines runs tag delete --run-id 123 --tag YAML\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration Filtered by Branch with OData\nDESCRIPTION: This OData query retrieves test duration data with branch information. It can be used to analyze test performance for specific branches in a pipeline with a 'Build' workflow.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And Date/Date ge {startdate} \n    And Workflow eq 'Build'\n)/groupby(\n    (TestSK, Test/TestName, Branch/BranchName),\n    aggregate(\n        ResultCount with sum as TotalCount,\n        ResultDurationSeconds with sum as TotalDuration\n    )\n)/compute(\n    TotalDuration div TotalCount as AvgDuration\n)\n```\n\n----------------------------------------\n\nTITLE: Running Git Merge with Commit Option\nDESCRIPTION: Git command syntax used when the 'Commit changes after merge by default' setting is enabled in Visual Studio. This automatically creates a new commit when merging branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_14\n\nLANGUAGE: git\nCODE:\n```\ngit merge --commit\n```\n\n----------------------------------------\n\nTITLE: Creating a .order File in Markdown\nDESCRIPTION: A basic example of an .order file that defines the sequence of wiki pages at a folder level. Each entry corresponds to a file name without the .md extension and appears in the specified order in the table of contents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/publish-repo-to-wiki.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nREADME\npage-2\npage-3\nPage-4\nMisc content\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow States\nDESCRIPTION: XML configuration for mapping workflow states to their corresponding types in the task board.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_15\n\nLANGUAGE: XML\nCODE:\n```\n<States>  \n   <State value=\"New\" type=\"Proposed\" />  \n   <State value=\"Active\" type=\"InProgress\" />  \n   <State value=\"Blocked\" type=\"InProgress\" />  \n   <State value=\"Resolved\" type=\"InProgress\" />  \n   <State value=\"Closed\" type=\"Complete\" />  \n</States>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Process Change Limitation Note\nDESCRIPTION: Markdown note block indicating that the Change process feature is only available in Azure DevOps Services\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/cloud-only-feature.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]   \n> The **Change process** feature is only supported for Azure DevOps Services.\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration Filtered by Test Owner in Power BI\nDESCRIPTION: This Power BI query retrieves test duration data with test owner information. It enables slicing the report by specific test owners to analyze test performance by ownership.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_8\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And Date/Date ge {startdate} \"\n      &\"And Workflow eq 'Build'\"\n      &\")/groupby(\"\n      &\"(TestSK, Test/TestName, Test/TestOwner),\"\n      &\"aggregate(\"\n      &\"ResultCount with sum as TotalCount, \"\n      &\"ResultDurationSeconds with sum as TotalDuration\"\n      &\"))/compute(\"\n      &\"TotalDuration div TotalCount as AvgDuration\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Update Repository Name Example\nDESCRIPTION: Example showing the az repos update command to rename a repository from contosoREPO to contosoFabrikam, with the complete JSON response showing all updated repository details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/azure-repos-update.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos update --repository contosoREPO --name contosoFabrikam\n```\n\n----------------------------------------\n\nTITLE: Debug Configuration in Extension Manifest\nDESCRIPTION: Configuration for enabling local debugging by adding baseUri property to the extension manifest\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/overview.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"...\": \"\",\n    \"baseUri\": \"https://localhost:44300\",\n    \"...\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipelines Self-Hosted Agent via PowerShell\nDESCRIPTION: Executes the `config.cmd` script located in the agent directory to begin the interactive configuration process for the self-hosted agent. This script prompts for essential details like the Azure DevOps server URL, authentication type (PAT), the PAT token itself, the target agent pool name, agent name, work folder, and whether to run the agent as a service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\n.\\config.cmd\n```\n\n----------------------------------------\n\nTITLE: Declaring Dialog Content Contribution in Extension Manifest (JSON)\nDESCRIPTION: Defines a contribution of type 'ms.vss-web.control' in the extension manifest to represent the content displayed within the dialog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/using-host-dialog.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"registration-form\",\n    \"type\": \"ms.vss-web.control\",\n    \"description\": \"The content to be displayed in the dialog\",\n    \"targets\": [],\n    \"properties\": {\n        \"uri\": \"registration-form.html\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying API Version as URL Query Parameter for Azure DevOps REST API\nDESCRIPTION: This example demonstrates how to include the API version as a query parameter in the URL when making a request to the Azure DevOps REST API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/how-to/call-rest-api.md#2025-04-22_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET https://dev.azure.com/{organization}/_apis/{area}/{resource}?api-version=1.0\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Solution Backlog to Custom Azure Boards Backlog in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Solution Backlog' to a 'Solution portfolio backlog' in Azure Boards. It suggests using a custom work item type and backlog, or potentially Epics, for large solutions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_24\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Solution Backlog\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Solution portfolio backlog**](safe-customize.md#custom-backlog). You can define a custom work item type and portfolio backlog to capture special business requirements of large solutions, or use Epics and Epic portfolio backlogs to capture solutions. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Adding YAML Metadata with Lists to Wiki Pages in VSTS\nDESCRIPTION: Shows how to include list data in YAML metadata blocks for Wiki pages and code previews. This allows for more complex metadata structures to be defined.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/aug-03-vsts.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n---\ntags:\n- post\n- code\n- web\ntitle: Hello world\n---\n```\n\n----------------------------------------\n\nTITLE: Querying Test Points for Progress Status with OData\nDESCRIPTION: This OData query retrieves test point data for a specific test plan, aggregating counts for different test outcomes and computing execution percentages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-progress-status.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints? \n$apply=filter(TestSuite/TestPlanTitle eq '{testPlanTitle}')\n/aggregate( \n    $count as TotalCount,  \n    cast(LastResultOutcome eq 'Passed', Edm.Int32) with sum as Passed,  \n    cast(LastResultOutcome eq 'Failed', Edm.Int32) with sum as Failed, \n    cast(LastResultOutcome eq 'Blocked', Edm.Int32) with sum as Blocked, \n    cast(LastResultOutcome eq 'NotApplicable', Edm.Int32) with sum as NotApplicable, \n    cast(LastResultOutcome eq 'None', Edm.Int32) with sum as NotExecuted, \n    cast(LastResultOutcome ne 'None', Edm.Int32) with sum as Executed \n)\n/compute( \n    Executed mul 100 div TotalCount as ExecPct, \n    iif(TotalCount gt NotExecuted, Passed mul 100 div Executed,0) as PassedPct \n)\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration Filtered by Test File with OData\nDESCRIPTION: This OData query retrieves test duration data grouped by test container (file name). It allows analysis of test performance within specific test files in a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And Date/Date ge {startdate} \n    And Workflow eq 'Build'\n)/groupby(\n    (TestSK, Test/TestName, Test/ContainerName),\n    aggregate(\n        ResultCount with sum as TotalCount,\n        ResultDurationSeconds with sum as TotalDuration\n    )\n)/compute(\n    TotalDuration div TotalCount as AvgDuration\n)\n```\n\n----------------------------------------\n\nTITLE: Work Item Categories and Colors Configuration\nDESCRIPTION: Default color configuration for different work item categories and their workflow states.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/extensions/dependency-tracker.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Proposed\": {\n \"displayName\": \"Proposed\",\n \"color\": \"#a6a6a6\"\n},\n  \"InProgress\": {\n  \"displayName\": \"In Progress\",\n  \"color\": \"#00bcf2\"\n },\n   \"Completed\": {\n   \"displayName\": \"Completed\",\n   \"color\": \"#9ac70b\"\n  },\n  \"Removed\": {\n  \"displayName\": \"Removed\",\n  \"color\": \"#d9242c\"\n },\n  \"Resolved\": {\n   \"displayName\": \"Resolved\",\n\"color\": \"#ff9d00\"\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization URL Format\nDESCRIPTION: The URL format for accessing an Azure DevOps organization, where {Your_Organization} is replaced with the organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/look-up-organization-owner.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}\n```\n\n----------------------------------------\n\nTITLE: Standard init Linux Error Output - Bash (Error Message)\nDESCRIPTION: This code block is an example error message that occurs when attempting to run a container with incompatible or incorrectly formatted startup scripts on Windows. It is included for troubleshooting and informational purposes only, to help users recognize when CRLF line endings or file format compatibility is an issue. Not run as code: shown during execution failure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/docker.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nstandard_init_linux.go:178: exec user process caused \"no such file or directory\"\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Version Range Inclusion\nDESCRIPTION: Markdown include statement for version compatibility information\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-concepts.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Example Python 3.11 Directory Structure on Windows\nDESCRIPTION: Demonstrates the specific directory structure for Python 3.11 installation on a 64-bit Windows machine in the agent tools directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_12\n\nLANGUAGE: console\nCODE:\n```\n$AGENT_TOOLSDIRECTORY/\n    Python/\n        3.11.4/\n            x64/\n                {python files}\n            x64.complete\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Visual Studio Version Header\nDESCRIPTION: Markdown header indicating Visual Studio version compatibility spanning versions 2015 through 2022. Used as a standardized include file across documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-vs-gt-2015.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**Visual Studio 2022 | Visual Studio 2019 | Visual Studio 2017 | Visual Studio 2015**\n```\n\n----------------------------------------\n\nTITLE: Creating Requirements Diagrams with Mermaid in Azure DevOps Wiki\nDESCRIPTION: This snippet demonstrates how to create a requirements diagram using Mermaid syntax in Azure DevOps Wiki. The diagram shows a development requirement with its attributes (id, text, risk, verification method) and its verification relationship with a test suite element.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_19\n\nLANGUAGE: mermaid\nCODE:\n```\n:::mermaid\nrequirementDiagram\n    requirement development_req {\n    id: 1\n    text: requirements spec.\n    risk: medium\n    verifymethod: test\n    }\n    element test_suite {\n    type: manual test\n    }\n    test_suite - verifies -> development_req\n:::\n```\n\n----------------------------------------\n\nTITLE: Referencing Azure DevOps Pipeline Artifact Staging Directory Path\nDESCRIPTION: This snippet shows the local path on the agent where artifacts are copied before being pushed to their destination. It's typically used in tasks like Copy Files and Publish Build Artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-build-artifacts-directory.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nc:\\agent_work\\1\\a\n```\n\n----------------------------------------\n\nTITLE: Initial Square Root Implementation in C#\nDESCRIPTION: Basic implementation of SquareRoot method that returns a constant value. Used to demonstrate initial test failure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-write-new-code-user-story.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\npublic double SquareRoot(double p)\n{\n    return 0.0;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Images with Buffer Settings\nDESCRIPTION: JSON configuration showing image setup with standby agent buffer allocation, where 100% of standby agents are allocated to the windows-2022 image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-images.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"images\": [\n    {\n        \"resourceId\": \"/subscriptions/subscription_id_placeholder/Providers/Microsoft.Compute/Locations/eastus/publishers/canonical/artifacttypes/vmimage/offers/0001-com-ubuntu-server-focal/skus/20_04-lts-gen2/versions/latest\",\n        \"aliases\": [\n            \"ubuntu-20.04-gen2\"\n        ],\n        \"buffer\": \"0\"\n    },\n    {\n        \"buffer\": \"100\",\n        \"wellKnownImageName\": \"windows-2022\"\n    },\n    {\n        \"buffer\": \"0\",\n        \"wellKnownImageName\": \"ubuntu-22.04\"\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Area Path in Microsoft Teams for Azure Boards\nDESCRIPTION: Command to add an area path from an Azure Boards project to a Microsoft Teams channel for easier work item creation and subscription management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-teams.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n@azure boards addAreapath 'VMdemo\\Area4'\n```\n\n----------------------------------------\n\nTITLE: Adding Test and Build Integration Fields in XML for Azure DevOps\nDESCRIPTION: This XML snippet demonstrates how to add 'Found In' and 'Integration Build' fields to a work item type definition, which associate bugs with builds where they were found or fixed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-field.md#2025-04-22_snippet_7\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Found In\" refname=\"Microsoft.VSTS.Build.FoundIn\" type=\"String\" reportable=\"dimension\">\n    <HELPTEXT>Product build number (revision) in which this item was found</HELPTEXT>\n</FIELD>\n<FIELD name=\"Integration Build\" refname=\"Microsoft.VSTS.Build.IntegrationBuild\" type=\"String\" reportable=\"dimension\">\n    <HELPTEXT>Product build number this bug was fixed in</HELPTEXT>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Authentication with PAT in C# using string interpolation\nDESCRIPTION: This C# code example shows how to use string interpolation (with $ prefix) when working with variables in URL paths while authenticating with a Personal Access Token to Azure DevOps REST APIs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/personal-access-tokens.md#2025-04-22_snippet_1\n\nLANGUAGE: cs\nCODE:\n```\npublic static async void GetBuilds()\n{\n    try\n   {\n       var personalaccesstoken = \"PATFROMWEB\";\n\n       using (HttpClient client = new HttpClient())\n        {\n            client.DefaultRequestHeaders.Accept.Add(\n               new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue(\"application/json\"));\n\n            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\",\n                Convert.ToBase64String(\n                    System.Text.ASCIIEncoding.ASCII.GetBytes(\n                        string.Format(\"{0}:{1}\", \"\", personalaccesstoken))));\n\n           using (HttpResponseMessage response = client.GetAsync(\n                        $\"https://dev.azure.com/{organization}/{project}/_apis/build/builds?api-version=5.0\").Result)\n            {\n                response.EnsureSuccessStatusCode();\n                string responseBody = await response.Content.ReadAsStringAsync();\n                Console.WriteLine(responseBody);\n            }\n        }\n    }\n    catch (Exception ex)\n    {\n        Console.WriteLine(ex.ToString());\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Database Recovery Mode to Simple in SQL\nDESCRIPTION: SQL command to set the database recovery mode to simple, which is required for the migration process. This setting helps optimize the database for the Azure DevOps Services migration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\nALTER DATABASE [<Database name>] SET RECOVERY SIMPLE;\n```\n\n----------------------------------------\n\nTITLE: Azure Repos-Pipelines Integration Table (Markdown)\nDESCRIPTION: Markdown table showing the integration features between Azure Repos and Azure Pipelines, including deployment status reporting, release status badges, and code coverage capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cross-service/cross-service-overview.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Feature** | **Description** |\n|-------------|------------------|\n| Report deployment status | Indicates the status of a deployment on the **Files**, **Commits**, and **Branches** pages for Git repositories. This feature improves the traceability from code commit to deployment. You can [configure the release environments to report deployment status](../pipelines/release/index.md). |\n| Release status badge | [Post the status of your most recent pipeline build in your repository](../pipelines/create-first-pipeline.md#add-a-status-badge-to-your-repository). |\n| Code coverage | [Publish](/azure/devops/pipelines/tasks/reference/publish-code-coverage-results-v1) and [review](../pipelines/test/review-code-coverage-results.md) code coverage results that indicate the proportion of your project's code that is actually being tested. |\n```\n\n----------------------------------------\n\nTITLE: Error for Database Metadata Size Exceeding Maximum Limit (cmdline)\nDESCRIPTION: This command-line output is an error message from the Data Migration Tool that blocks migration. It indicates that the database metadata size exceeds the maximum supported limit. The user must reduce the metadata size below the specified limit before migration can proceed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_3\n\nLANGUAGE: cmdline\nCODE:\n```\nThe database metadata size is currently {Metadata Size}GBs. This is above the maximum supported size of {Metadata Limit}GBs.\n```\n\n----------------------------------------\n\nTITLE: Configuring Team/Group Default Delivery Settings Options\nDESCRIPTION: Lists the available default delivery settings for teams or groups in Azure DevOps notifications. These settings control the default behavior when a team/group is a recipient: delivering to a specific address, each member individually, or not delivering at all. The choice impacts subscriptions using the 'Team preference' delivery option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/concepts-email-recipients.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n* **Deliver to email address:** notifications get delivered to a specific email address.\n* **Deliver to individual members:** notifications get delivered to each member of the group or team. This setting is usually the default option. For more information about the default option, see [Team expansion](#team-and-group-expansion-for-email-recipients).\n* **Do not deliver:** notifications aren't delivered by default.\n```\n\n----------------------------------------\n\nTITLE: Synchronizing Iteration Paths in GroupsandPermissions and Classification - Azure DevOps XML\nDESCRIPTION: This example demonstrates an error in which GroupsandPermissions.xml iteration paths (iterationPath) do not match defined nodes in Classification.xml, causing validation errors. The resolution synchronizes path names, ensuring that all referenced iteration paths exist in Classification.xml as Node elements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_23\n\nLANGUAGE: xml\nCODE:\n```\n<teamSettings areaPath=\\\"Area\\\">\\n    <iterationPaths backlogPath=\\\"Iteration\\\">\\n        <iterationPath path=\\\"Iteration 1\\\" />\\n        <iterationPath path=\\\"Iteration 2\\\" />\\n        <iterationPath path=\\\"Iteration 3\\\" />\\n    </iterationPaths>\\n</teamSettings>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Iteration\\\" xmlns=\\\"\\\">\\n  <Children>\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 1\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 2\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 3\\\" />\\n  </Children>\\n</Node>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<teamSettings areaPath=\\\"Area\\\">\\n    <iterationPaths backlogPath=\\\"Iteration\\\">\\n        <iterationPath path=\\\"Sprint 1\\\" />\\n        <iterationPath path=\\\"Sprint 2\\\" />\\n        <iterationPath path=\\\"Sprint 3\\\" />\\n    </iterationPaths>\\n</teamSettings>\n```\n\n----------------------------------------\n\nTITLE: TFVC Workspace Command Reference\nDESCRIPTION: List of related TFVC command-line tools for workspace management, linking to detailed command documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/create-work-workspaces.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[Workspace Command](workspace-command.md), [Workspaces Command](workspaces-command.md), and [Workfold Command](workfold-command.md)\n```\n\n----------------------------------------\n\nTITLE: Creating State Diagrams with Mermaid in Azure DevOps Wiki\nDESCRIPTION: This snippet shows how to create a state diagram using Mermaid syntax in Azure DevOps Wiki. The diagram illustrates different states of a keyboard, including NumLock, CapsLock, and ScrollLock states and the transitions between them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_16\n\nLANGUAGE: mermaid\nCODE:\n```\n:::mermaid\nstateDiagram-v2\n    [*] --> Active\n    state Active {\n        [*] --> NumLockOff\n        NumLockOff --> NumLockOn : EvNumLockPressed\n        NumLockOn --> NumLockOff : EvNumLockPressed\n        --\n        [*] --> CapsLockOff\n        CapsLockOff --> CapsLockOn : EvCapsLockPressed\n        CapsLockOn --> CapsLockOff : EvCapsLockPressed\n        --\n        [*] --> ScrollLockOff\n        ScrollLockOff --> ScrollLockOn : EvScrollLockPressed\n        ScrollLockOn --> ScrollLockOff : EvScrollLockPressed\n    }\n:::\n```\n\n----------------------------------------\n\nTITLE: Listing Test Plans with TCM CLI\nDESCRIPTION: Command-line syntax for listing test plans in a project using the Test Case Management (TCM) command-line tool. This command displays plan IDs and names for all test plans in the specified project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_0\n\nLANGUAGE: tcm\nCODE:\n```\ntcm plans /list [/planid:id  |  /querytext:query] /collection:teamprojectcollectionurl\n           /teamproject:project [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Accessing Work Item Fields in Azure DevOps Event JSON\nDESCRIPTION: Example JSON structure showing how work item fields are represented in Azure DevOps event data. This snippet illustrates the format of various system and custom fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/services/trello.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\" fields\": {\n                \" System.AreaPath\": \"Fabrikam-Fiber-Git\", \n                \" System.TeamProject\": \"Fabrikam-Fiber-Git\", \n                \" System.IterationPath\": \"Fabrikam-Fiber-Git\", \n                \" System.WorkItemType\": \"Product Backlog Item\", \n                \" System.State\": \"New\", \n                \" System.Reason\": \"New backlog item\", \n                \" System.CreatedDate\": \"2014-11-05T21:11:28.85Z\", \n                \" System.CreatedBy\": \"Normal Paulk\", \n                \" System.ChangedDate\": \"2014-11-05T21:11:29.23Z\", \n                \" System.ChangedBy\": \"Normal Paulk\", \n                \" System.Title\": \"Test PBI\", \n                \" Microsoft.Azure DevOps Services.Common.BacklogPriority\": 999999999, \n                \" WEF_6CB513B6E70E43499D9FC94E5BBFB784_Kanban.Column\": \"New\"\n           },\n```\n\n----------------------------------------\n\nTITLE: Retrieving Project-Level Advanced Security Meter Usage Details via REST API\nDESCRIPTION: This HTTP GET request retrieves detailed user identity information for Advanced Security meter usage within a specific Azure DevOps project. Replace {organization} and {project} with the actual names. Requires appropriate permissions and uses API version 7.2-preview.1.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/ghazdo/sprint-243-update.md#2025-04-22_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET `https://advsec.dev.azure.com/{organization}/{project}/_apis/management/meterUsageEstimate/details?api-version=7.2-preview.1`\n```\n\n----------------------------------------\n\nTITLE: Test Navigation Shortcuts\nDESCRIPTION: Basic navigation shortcuts for accessing different test sections like plans, parameters, runs, and machines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/test-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|n|Open test plans|\n|m|Open shared parameters|\n|r|Open runs|\n|h|Open machines|\n```\n\n----------------------------------------\n\nTITLE: Artifact Upload Configuration for Forked Repository Builds\nDESCRIPTION: Configuration for archiving build outputs and publishing artifacts in forked repository builds. Uses ArchiveFiles and PublishBuildArtifacts tasks to create a tar.gz archive and publish it to Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-146-update.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- task: ArchiveFiles@2\n  inputs:\n    archiveType: 'tar'\n    tarCompression: 'gz'\n    includeRootFolder: false\n    rootFolderOrFile: '$(build.sourcesDirectory)/target'\n    archiveFile: '$(build.artifactStagingDirectory)/$(build.buildId).tar.gz'\n- task: PublishBuildArtifacts@1\n  inputs:\n    pathtoPublish: '$(build.artifactStagingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Adding a Stack Rank Field Control to a Work Item Form - Azure DevOps XML\nDESCRIPTION: This XML snippet demonstrates how to add a Stack Rank field control to a work item form in Azure DevOps using an on-premises XML process. It should be inserted into the form section of the corresponding work item type (WIT) definition file. The control links to the 'Microsoft.VSTS.Common.StackRank' field, displaying it with the label 'Stack Rank' to the left of the input control. Dependencies include having an Azure DevOps Server installation and access to process templates. The key parameter is FieldName, denoting which field to bind, and the control will accept double-type values for ordering purposes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/planning-ranking-priorities.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<Control FieldName=\\\"Microsoft.VSTS.Common.StackRank\\\" Type=\\\"FieldControl\\\" Label=\\\"Stack Rank\\\" LabelPosition=\\\"Left\\\" />\n```\n\n----------------------------------------\n\nTITLE: Query Macro Example - Current User\nDESCRIPTION: Example showing how to use the @Me macro to find work items assigned to the logged-in user\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/feature-matrix-query-macros.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nIdentity field=logged in user\n```\n\n----------------------------------------\n\nTITLE: Importing New Work Items with CSV in Azure Boards\nDESCRIPTION: Example CSV file structure for importing new work items into Azure Boards. Includes Work Item Type, Title, and Priority fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/import-work-items-from-csv.md#2025-04-22_snippet_0\n\nLANGUAGE: csv\nCODE:\n```\nWork Item Type,Title,Priority\nIssue,Fix issues with code,1\nIssue,Merge testing modules,3\nIssue,Open private preview for select customers,2\nIssue,Enable feature for customer champs,2\nIssue,Remove old test code,2\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for a Specific TFVC Command\nDESCRIPTION: Example showing how to view help information for a specific command (the 'view' command) in Team Foundation Version Control. This displays the syntax, parameters, and version specifications for the command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/help-command-team-foundation-version-control.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n>tf view /help\nMicrosoft (R) TF - Team Foundation Version Control Tool, Version 16.171.31930.1\nCopyright (c) Microsoft Corporation.  All rights reserved.\n\nRetrieves a specific version of a file to a temporary folder on your computer\nand displays it.\n\ntf vc view [/collection:TeamProjectCollectionUrl]\n           [/console] [/recursive] [/output:localfile]\n           [/shelveset:shelvesetname[;owner]] [/noprompt] itemspec\n           [/version:versionspec] [/login:username,[password]]\n\nVersionspec:\n    Date/Time         D\"any .NET Framework-supported format\"\n                      or any of the date formats of the local machine\n    Changeset number  Cnnnnnn\n    Label             Llabelname\n    Latest version    T\n    Workspace         Wworkspacename;workspaceowner\n```\n\n----------------------------------------\n\nTITLE: Installing Azure CLI DevCenter Extension\nDESCRIPTION: Installs and upgrades the Azure CLI devcenter extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz extension add --name devcenter --upgrade\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Server Integration Target\nDESCRIPTION: Example showing how to configure an extension to work only with Azure DevOps Server using installation targets\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"targets\": [\n        {\n            \"id\": \"Microsoft.TeamFoundation.Server.Integration\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering by Date and Time using GMT Format in WIQL\nDESCRIPTION: Illustrates how to filter work items based on DateTime fields using the .NET DateTime format with an explicit GMT time zone specified. Single or double quotes are supported for DateTime literals. This example filters based on 'System.ChangedDate', 'Closed Date', and 'Resolved Date'. Note that unless a time zone is specified, DateTime literals use the local computer's time zone.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_1\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE \n   AND [System.ChangedDate] >= '01-18-2019 GMT'\n   AND ([Closed Date] < '01-09-2022 GMT'\n   OR [Resolved Date] >= '01-18-2019 14:30:01')  \n```\n\n----------------------------------------\n\nTITLE: Viewing Git Commit History\nDESCRIPTION: Commands to view commit history in Git. The --oneline option shows a compact view, while the standard git log shows detailed information about each commit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_6\n\nLANGUAGE: console\nCODE:\n```\ngit log --oneline\n```\n\nLANGUAGE: console\nCODE:\n```\ngit log\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Boards Permission Table Structure\nDESCRIPTION: Markdown table structure using Azure DevOps custom syntax to define a permission matrix for various user roles and their access levels to different backlog and work item management features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/boards-backlogs.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"2\":::\n      **Task** \n   :::column-end:::\n   :::column span=\"1\":::\n     **Readers**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Contributors**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Team admins**  \n     **Project admins**\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"2\":::\n      View backlogs and open work items\n   :::column-end:::\n   :::column span=\"1\":::\n      ✔️\n   :::column-end:::\n   :::column span=\"1\":::\n      ✔️\n   :::column-end:::\n   :::column span=\"1\":::\n      ✔️\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Creating Project Wiki Example\nDESCRIPTION: Example command for creating a named project wiki in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki create --name myprojectwiki\n```\n\n----------------------------------------\n\nTITLE: Displaying Information About a Specific Shelveset\nDESCRIPTION: This example demonstrates how to use the shelvesets command to display information about a specific shelveset named 'BuddyTest_23' on the Azure DevOps server mapped to the current directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelvesets-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf shelvesets BuddyTest_23\n```\n\n----------------------------------------\n\nTITLE: Querying Task Duration Trend by Pipeline ID in OData\nDESCRIPTION: OData query to get the 80th percentile task duration trend for a specific pipeline (using pipeline ID) and task, filtered by date range and successful runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\n$apply=filter(\n    Pipeline/PipelineId eq {pipelineid}\n    and TaskDisplayName eq '{taskname}'\n    and PipelineRunCompletedOn/Date ge {startdate}\n    and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded')\n    and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1)\n    )\n/compute(\n    percentile_cont(ActivityDurationSeconds, 0.8, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds)\n/groupby(\n    (TaskDuration80thPercentileInSeconds, PipelineRunCompletedOn/Date))\n&$orderby=PipelineRunCompletedOn/Date asc\n```\n\n----------------------------------------\n\nTITLE: Consuming GitHub Package Resource in Azure Pipelines YAML Job\nDESCRIPTION: This YAML snippet shows how to consume a previously defined GitHub package resource within an Azure Pipelines job. The `getPackage` macro is used within the `steps` section, referencing the alias (`myPackageAlias`) of the package resource defined in the `resources` section. This step downloads the specified package, making it available for subsequent tasks in the job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-170-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\n- job: job1\n  pool: default\n  steps:\n    - getPackage: myPackageAlias # Alias of the package resource\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Project-Level Agent Pool Updated Event (JSON)\nDESCRIPTION: This JSON object shows the sample payload for a 'projectlevelagentpool.updated' event in Azure DevOps. It contains the publisher ID, event ID, information about the updated agent pool (ID, name), the associated project (ID, name), and the update timestamp. This is used for service hooks monitoring modifications to existing project-level agent pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"publisherId\": \"azure-devops\",\n    \"eventId\": \"projectlevelagentpool.updated\",\n    \"resource\": {\n        \"projectLevelAgentPool\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000pool-id\",\n            \"name\": \"pool-name\",\n            \"project\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n                \"name\": \"project-name\"\n            }\n        }\n    },\n    \"updatedDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps INCLUDE Statement\nDESCRIPTION: Markdown include statement for version-specific content targeting Azure DevOps versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/add-to-bugs-exploratory-testing.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: XML Metadata Annotations Example\nDESCRIPTION: XML examples showing how to review OData capabilities through metadata annotations, including filter functions and expand restrictions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_35\n\nLANGUAGE: xml\nCODE:\n```\n<Annotation Term=\"Org.OData.Capabilities.V1.FilterFunctions\">\n  <Collection>\n  <String>contains</String>\n  <String>endswith</String>\n  [...]\n  </Collection>\n</Annotation>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<EntitySet Name=\"WorkItems\" EntityType=\"Microsoft.VisualStudio.Services.Analytics.Model.WorkItem\">\n  [...]\n  <Annotation Term=\"Org.OData.Capabilities.V1.ExpandRestrictions\">\n    <Record>\n      <PropertyValue Property=\"Expandable\" Bool=\"true\"/>\n      <PropertyValue Property=\"NonExpandableProperties\">\n        <Collection>\n          <NavigationPropertyPath>Revisions</NavigationPropertyPath>\n        </Collection>\n      </PropertyValue>\n    </Record>\n  </Annotation>\n</EntitySet>\n```\n\n----------------------------------------\n\nTITLE: Cloning Repository using Git (Shell)\nDESCRIPTION: This snippet demonstrates how to clone a Git repository to the local machine and navigate into the newly created directory. It requires Git to be installed. Replace `<repository-url>` with the actual URL of the repository and `<repository-directory>` with the name of the directory created by the clone command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/demo-gen/configure.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone <repository-url>\ncd <repository-directory>\n```\n\n----------------------------------------\n\nTITLE: Referencing a Portfolio Backlog with Epic Category - Azure DevOps XML\nDESCRIPTION: This ProcessConfiguration.xml resolution example properly adds a PortfolioBacklog that references the Microsoft.EpicCategory, making the category available for Agile tool features. Key parameters include workItemCountLimit, backlog category, work item states, visible columns, and add-panel fields. All referenced work item fields and categories should be defined in related configuration files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n    <PortfolioBacklog category=\\\"Microsoft.EpicCategory\\\" pluralName=\\\"Epics\\\" singularName=\\\"Epic\\\" workItemCountLimit=\\\"1000\\\">\\n      <States>\\n        <State value=\\\"New\\\" type=\\\"Proposed\\\" />\\n        <State value=\\\"Active\\\" type=\\\"InProgress\\\" />\\n        <State value=\\\"Resolved\\\" type=\\\"InProgress\\\" />\\n        <State value=\\\"Closed\\\" type=\\\"Complete\\\" />\\n      </States>\\n      <Columns>\\n        <Column refname=\\\"System.WorkItemType\\\" width=\\\"100\\\" />\\n        <Column refname=\\\"System.Title\\\" width=\\\"400\\\" />\\n        <Column refname=\\\"System.State\\\" width=\\\"100\\\" />\\n        <Column refname=\\\"Microsoft.AzureDevOps.Scheduling.Effort\\\" width=\\\"50\\\" />\\n        <Column refname=\\\"Microsoft.AzureDevOps.Common.BusinessValue\\\" width=\\\"50\\\" />\\n        <Column refname=\\\"Microsoft.AzureDevOps.CMMI.RequirementType\\\" width=\\\"100\\\" />\\n        <Column refname=\\\"System.Tags\\\" width=\\\"200\\\" />\\n      </Columns>\\n      <AddPanel>\\n        <Fields>\\n          <Field refname=\\\"System.Title\\\" />\\n        </Fields>\\n      </AddPanel>\\n    </PortfolioBacklog>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Boards Documentation Frontmatter\nDESCRIPTION: YAML frontmatter defining metadata for the documentation page, including service type, authors, and last update date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/process-guidance-conceptual.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.service: azure-devops-boards\nms.author: chcomley\nauthor: chcomley\nms.topic: include\nms.date: 06/07/2023\n---\n```\n\n----------------------------------------\n\nTITLE: Listing All Shelvesets on the Server\nDESCRIPTION: This example demonstrates how to display information about all shelvesets on the Azure DevOps server by using the wildcard character (*) with the owner parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelvesets-command.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf shelvesets /owner:*\n```\n\n----------------------------------------\n\nTITLE: Displaying Default Permissions for Queries in Azure DevOps\nDESCRIPTION: This code snippet includes a template file that likely contains a table or list of default permissions for queries in Azure DevOps. It's used to display this information consistently across documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-permissions-access-work-tracking.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/boards-queries.md)]\n```\n\n----------------------------------------\n\nTITLE: Enabling Datadog Feature in Azure DevOps Server via SQL Command\nDESCRIPTION: SQL command to enable the Datadog feature in Azure DevOps Server 2019 and 2020, which might not be turned on by default. This command needs to be executed in the configuration database.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/services/datadog.md#2025-04-22_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nexec prc_SetRegistryValue 1, '#\\FeatureAvailability\\Entries\\ServiceHooks.Consumers.datadog\\AvailabilityState\\', 1\n```\n\n----------------------------------------\n\nTITLE: Extending and Including Templates in YAML Pipelines\nDESCRIPTION: Example of a YAML pipeline that extends from a template and includes another template file. This demonstrates the pattern referenced in the template information REST API enhancement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-243-update.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nextends:\n  template: template-stages.yml@templates\n  parameters:\n    stages:\n    - stage: deploy\n      jobs:\n      - job:\n        steps:\n        - template: template-step.yml\n```\n\n----------------------------------------\n\nTITLE: Viewing File History with Default Simplification\nDESCRIPTION: Displays the Git log for a specific file, showing the default simplified history. This shows how Git normally displays file history, potentially hiding some commits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_4\n\nLANGUAGE: Git CLI\nCODE:\n```\n> git log test.txt\n    \n    commit 6b33d99b996c430a60c9552b79245d1aa8320339\n        Date:   Mon Feb 15 10:45:33 2016 -0500\n\n        We have added an animal\n\n    commit 206613ccd9a54b055b184c7b6c16f2ece8067e51\n        Date:   Mon Feb 15 10:44:18 2016 -0500\n\n        Initial commit\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Time in State for Work Items in Power BI Using DAX\nDESCRIPTION: This DAX code creates a calculated column that computes the total time a work item spent in a specific state by summing the Date Diff in Days for each work item. It accounts for multiple state transitions and can be used for trend analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_5\n\nLANGUAGE: DAX\nCODE:\n```\nState Time in Days = \nCALCULATE (\n    SUM ( 'View Name'[Date Diff in Days] ),\n    ALLEXCEPT ( 'View Name', 'View Name'[Work Item Id] ),\n    'View Name'[Date] <= EARLIER ( 'View Name'[Date] ),\n    'View Name'[State] = EARLIER ( 'View Name'[State] )\n) + 0\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 191 Update Content in Markdown\nDESCRIPTION: An include directive that adds the main Sprint 191 update content from a separate file. This pulls in the detailed feature updates from '../includes/pipelines/sprint-191-update.md'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-191-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-191-update](../includes/pipelines/sprint-191-update.md)]\n```\n\n----------------------------------------\n\nTITLE: TFVC History Command with Server Path\nDESCRIPTION: Example of using the history command with a server collection path, showing recursive and noprompt options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/use-team-foundation-version-control-commands.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\>tf history /collection:https://fabrikam-3:8080/tfs/DefaultCollection\n$/SiteApp/Main/SolutionA/Project1/* /recursive  \n/noprompt \n```\n\n----------------------------------------\n\nTITLE: Defining WORKFLOW Section for Bug Work Item Type in Agile Process Template\nDESCRIPTION: This XML snippet defines the workflow for a Bug work item type in the Agile process template. It establishes three states (Active, Resolved, Closed) and five transitions between them, including default and optional reasons for each transition. The workflow controls the progression of work items through their lifecycle.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/change-workflow-wit.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<WORKFLOW>\n <STATES>\n    <STATE value=\"Active\">\n      <FIELDS> . . . </FIELDS>\n    </STATE>\n    <STATE value=\"Resolved\">\n     <FIELDS> . . . </FIELDS>\n    </STATE>\n    <STATE value=\"Closed\">\n     <FIELDS> . . . </FIELDS>\n    </STATE>\n </STATES>\n <TRANSITIONS>\n    <TRANSITION from=\"\" to=\"Active\">\n       <REASONS>\n          <REASON value=\"Build Failure\" />\n           <DEFAULTREASON value=\"New\" />\n       </REASONS>\n       <FIELDS> . . . </FIELDS>\n    </TRANSITION>\n    <TRANSITION from=\"Active\" to=\"Resolved\">\n     <ACTIONS> . . . </ACTIONS>\n     <REASONS> . . . </REASONS>\n    </TRANSITION>\n    <TRANSITION from=\"Resolved\" to=\"Active\">\n       <REASONS> . . . </REASONS>\n    </TRANSITION>\n    <TRANSITION from=\"Resolved\" to=\"Closed\">\n       <REASONS>\n          <DEFAULTREASON value=\"Verified\" />\n       </REASONS>\n     <FIELDS> . . . </FIELDS>\n    </TRANSITION>\n    <TRANSITION from=\"Closed\" to=\"Active\">\n       <REASONS>\n          <REASON value=\"Reactivated\" />\n          <DEFAULTREASON value=\"Regression\" />\n       </REASONS>\n     <FIELDS> . . . </FIELDS>\n    </TRANSITION>\n </TRANSITIONS>\n </WORKFLOW>\n```\n\n----------------------------------------\n\nTITLE: Collection Generic Read Permission Setting\nDESCRIPTION: Collection-level permission setting that enables viewing of organization-level permissions for users and groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/collection-level-permissions-reference-table-cloud.md#2025-04-22_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nCollection, GENERIC_READ\n```\n\n----------------------------------------\n\nTITLE: Accessing Maven Package API Endpoint for Project Scoped Feed in Azure DevOps Server\nDESCRIPTION: HTTP endpoint URL pattern for promoting Maven packages in a project scoped feed on an on-premises Azure DevOps Server 2022. This endpoint supports JSON Patch operations for updating views.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_17\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://{instance}/{collection}/{project}/_apis/packaging/feeds/{feed}/maven/groups/{groupId}/artifacts/{artifactId}/versions/{version}?api-version=7.1-preview.1\n```\n\n----------------------------------------\n\nTITLE: Generating DACPAC File with SqlPackage.exe in Command Line\nDESCRIPTION: Command to generate a DACPAC file from an Azure DevOps Server collection database. This process extracts all table data and ignores user login mappings and permissions to prepare the database for migration to Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_10\n\nLANGUAGE: cmdline\nCODE:\n```\nSqlPackage.exe /sourceconnectionstring:\"Data Source={database server name};Initial Catalog={Database Name};Integrated Security=True\" /targetFile:{Location & File name} /action:extract /p:ExtractAllTableData=true /p:IgnoreUserLoginMappings=true /p:IgnorePermissions=true /p:Storage=Memory\n```\n\n----------------------------------------\n\nTITLE: Configuring Local Development URL Parameter\nDESCRIPTION: Appends a query parameter to Azure DevOps organization URL to enable local development mode. The parameter specifies the localhost port for development server connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/test.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n?localdevmode=https://localhost:port\n```\n\n----------------------------------------\n\nTITLE: Specifying Files to Include in PowerShell Module\nDESCRIPTION: Setting in the module manifest that lists the files to be included when packaging the module.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nFileList = @('./PowerShell-Demo.psm1')\n```\n\n----------------------------------------\n\nTITLE: Adding Files to Git Staging Area\nDESCRIPTION: Commands to stage files for commit in Git. You can add individual files or use --all to stage all changes at once.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit add <file>\n```\n\nLANGUAGE: console\nCODE:\n```\ngit add --all\n```\n\n----------------------------------------\n\nTITLE: Including Visual Studio Version Check\nDESCRIPTION: Markdown include statement for checking Visual Studio version compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/roll-back-changesets.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-vs-gt-eq-2019](../../includes/version-vs-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Uploading Tasks to Azure DevOps\nDESCRIPTION: Command to upload a task to Azure DevOps project collection. Requires specifying the path to the compiled task folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/upload-tasks.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntfx build tasks upload --task-path <PATH_TO_TASK>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Workspace with TFVC Command Line\nDESCRIPTION: Command to delete a Team Foundation Version Control workspace when the original machine is no longer available. This command helps resolve issues when trying to reuse a project name that has existing workspace mappings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/rename-project.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntf workspace /delete [/collection:TeamProjectCollectionUrl] workspacename[;workspaceowner]\n```\n\n----------------------------------------\n\nTITLE: Delete project Permission Reference\nDESCRIPTION: Permission that allows users to delete a project from an organization or project collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, DELETE`\n```\n\n----------------------------------------\n\nTITLE: Manage test configurations Permission Reference\nDESCRIPTION: Permission that allows users to create and delete test configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, MANAGE_TEST_CONFIGURATIONS`\n```\n\n----------------------------------------\n\nTITLE: Creating a Workspace from Template in TFVC\nDESCRIPTION: Creates a new workspace using an existing workspace ('Beta1' owned by 'jenh') as a template. This preserves mappings and other settings from the template workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_8\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf workspace /new /template:Beta1;jenh /collection:https://myserver:8080/tfs/DefaultCollection\n```\n\n----------------------------------------\n\nTITLE: Formatting Tokens for MetaTask Permissions in Azure DevOps\nDESCRIPTION: Shows the token formats for setting MetaTask permissions at the project level, MetaTask level, and for MetaTasks with parent tasks in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nPROJECT_ID\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nPROJECT_ID/METATASK_ID\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nPROJECT_ID/PARENT_TASK_ID/METATASK_ID\n```\n\n----------------------------------------\n\nTITLE: Updating ProcessConfiguration Statement in WorkItems.xml (XML)\nDESCRIPTION: This snippet demonstrates how to update an outdated ProcessConfiguration statement in the WorkItems.xml file. It shows the error with multiple configuration files and the resolution with the correct ProjectConfiguration statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n    <taskXml>\n      <PROCESSCONFIGURATION>\n        <ProjectConfiguration fileName=\"WorkItem Tracking\\Process\\ProcessConfiguration.xml\"/>\n      </PROCESSCONFIGURATION>\n    </taskXml>\n```\n\n----------------------------------------\n\nTITLE: Adding Users with Azure DevOps CLI - Azure CLI\nDESCRIPTION: This snippet demonstrates how to use the Azure DevOps CLI (az devops user add) to add users to an Azure DevOps organization programmatically. Prerequisites include the Azure CLI with the Azure DevOps extension installed and permission to administer users. Parameters such as email address, license type (stakeholder, express, professional, advanced), sending invites, and specifying the organization URL are required. The command expects corresponding arguments and outputs success/failure directly to the console or logs. Limitations include the prerequisite of command-line access and required administrator permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/add-organization-users.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops user add –-email-id \n\t\t   --license-type {advanced, earlyAdopter, express, professional, stakeholder}\n\t   [--send-email-invite {false, true}]\n           [--org]\n\n```\n\n----------------------------------------\n\nTITLE: Displaying Tag Names with Work Items in OData\nDESCRIPTION: Query that retrieves work items with a specific tag and includes the TagNames property in the results. The TagNames property provides a text representation of all tags as a semicolon-separated list, simplifying tag consumption in reports.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_26\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=Tags/any(t:t/TagName eq '{tag}')\n  &$select=WorkItemId, Title, State, TagNames\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Teams Integration Requirements Table\nDESCRIPTION: Markdown table showing the requirements and permissions needed for Azure DevOps integration with Microsoft Teams, including necessary permissions and Microsoft Entra tenant requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/services/teams.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Permissions**| - To create Azure DevOps subscriptions in Teams: Member of the **Project Administrators** group.<br>- To receive Azure DevOps notifications in Teams: **Third party application access via OAuth** enabled in your Azure DevOps organization settings.|\n|**Microsoft Entra**|Only Azure DevOps organizations in the same Microsoft Entra tenant as your Microsoft Teams account can be connected. Even if your email addresses are the same for Azure DevOps and Microsoft Teams, they can't be linked if they're backed by different tenants. For more information, see [Access via Microsoft Entra FAQs](../../organizations/accounts/faq-azure-access.yml#AlreadyConnected). |\n```\n\n----------------------------------------\n\nTITLE: Cloning Test Plan using TCM CLI\nDESCRIPTION: Command to clone a test plan with options for source plan ID, destination plan name, and field overrides. Supports cloning within the same project with options to clone requirements and child suites.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_4\n\nLANGUAGE: tcm\nCODE:\n```\ntcm plans /clone /sourceplanid:id /destinationplanname:name\n          [/overridefield:name=value [/overridefield:name=value ...]]\n          [/sourcesuiteids:suiteid1,[suiteid2,...]]\n          /collection:teamprojectcollectionurl /teamproject:project\n          [/login:username,[password]]\n          [/clonerequirements]\n          [/clonechildren]\n```\n\n----------------------------------------\n\nTITLE: Sample Field Status Output - Not In Use\nDESCRIPTION: Example output showing a field that is not currently in use in any work item types. Shows field properties including name, type, and usage status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nField: MyCompany.MyProcess.MyField\nName: MyField\nType: String\nReportable As: dimension\nUse: Not In Use\nIndexed: False\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Server Process Navigation Instructions\nDESCRIPTION: Markdown instructions for accessing Process settings in Azure DevOps Server 2020 and later versions. Details the navigation path through Collection Settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/open-process-admin-context-ts-plus-2020.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. Choose the Azure DevOps logo to open **Projects**. Choose the project collection whose processes you want to customize, and then choose **Collection Settings**.\n\n2. Then, choose **Process**.\n```\n\n----------------------------------------\n\nTITLE: Setting up repository routing for dependency scanning results\nDESCRIPTION: YAML pipeline configuration showing how to set up explicit and inferred repository routing for dependency scanning results when the pipeline is in a different repository than the code being scanned.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning-troubleshoot.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  - main\n\nresources:\n  repositories:\n    - repository: BicepGoat\n      type: git\n      name: BicepGoat\n      ref: refs/heads/main\n      trigger:\n        - main\n\njobs:\n  # Explicit - `advancedsecurity.publish.repository` explicitly defines the repository to submit SARIF to.\n  - job: \"AdvancedSecurityDependencyScanningExplicit\"\n    displayName: \"🛡 Dependency scanning (Explicit)\"\n    variables:\n      advancedsecurity.publish.repository: $[ convertToJson(resources.repositories['BicepGoat']) ]\n    steps:\n      - checkout: BicepGoat\n      - task: AdvancedSecurity-Dependency-Scanning@1\n        displayName: Dependency Scanning\n\n  # Infer - `advancedsecurity.publish.repository.infer` specifies that the `AdvancedSecurity-Publish` must\n  # infer repository to submit SARIF to from the working directory on the build agent.\n  - job: \"AdvancedSecurityDependencyScanningInfer\"\n    displayName: \"🛡 Dependency scanning (Infer)\"\n    variables:\n      advancedsecurity.publish.repository.infer: true\n    steps:\n      - checkout: BicepGoat\n      - task: AdvancedSecurity-Dependency-Scanning@1\n        displayName: Dependency Scanning\n```\n\n----------------------------------------\n\nTITLE: South UK Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps services in the South UK region. Includes both SharePoint (shprod) and Team Foundation Server (tfsprod) instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\ntfsproduks1ip1\t40.81.159.67\n\t\t\nshproduks1ip1\t40.81.156.105\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary Trend Filtered by Branch in Power BI\nDESCRIPTION: This Power BI query retrieves test run data for a specific pipeline, filtered by branch, aggregating results by date and calculating the pass rate.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_4\n\nLANGUAGE: Power Query M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestRuns?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"and CompletedOn/Date ge {startdate} \"\n                &\"and Workflow eq 'Build' \"\n            &\") \"\n        &\"/groupby((Branch/BranchName, CompletedOn/Date), \"\n          &\"aggregate( \"\n            &\"ResultCount with sum as ResultCount, \"\n            &\"ResultPassCount with sum as ResultPassCount, \"\n            &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n            &\"ResultNotImpactedCount with sum as ResultNotImpactedCount, \"\n            &\"ResultFailCount with sum as ResultFailCount \"\n         &\")) \"\n       &\"/compute( \"\n       &\"iif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Branching a File to a Different Server Folder\nDESCRIPTION: Copies all files without pending edits from the workspace version of 314.cs to the testdata Azure DevOps Server folder, also updating the corresponding working folder on disk.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branch-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf branch C:\\314.cs $/testdata\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests in Pipeline with OData\nDESCRIPTION: OData query that retrieves failed test results from a specific pipeline. It groups results by test name and container, aggregates test run counts, and calculates pass rates for tests that have at least one failure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_7\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tAnd Date/Date ge {startdate})\n/groupby((TestSK, Test/TestName, Test/ContainerName), \n\taggregate(\n\tResultCount with sum as TotalCount,\n\tResultPassCount with sum as PassedCount,\n\tResultFailCount with sum as FailedCount,\n\tResultNotExecutedCount with sum as NotExecutedCount,\n\tResultNotImpactedCount with sum as NotImpactedCount,\n\tResultFlakyCount with sum as FlakyCount))\n/filter(FailedCount gt 0)\n/compute(\niif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Conditional Content Display for Azure DevOps Versions in Markdown\nDESCRIPTION: This snippet shows how to use moniker ranges to conditionally display content for different versions of Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-permissions-access-work-tracking.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<=azure-devops\"\n\n## Customize an inherited process \n\nBy default, only Project Collection Administrators can create and edit processes. However, these admins can grant permissions to other team members by explicitly setting the **Create process**, **Delete process**, or **Edit process** permissions at the collection level for a specific user. \n\nTo customize a process, you need to grant **Edit process**  permissions to a user account for the specific process. \n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Staging a specific file change in Git\nDESCRIPTION: This command stages changes for a specific file. It prepares the file to be included in the next commit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_14\n\nLANGUAGE: git\nCODE:\n```\ngit add filename\n```\n\n----------------------------------------\n\nTITLE: Updating Root .order File in Markdown\nDESCRIPTION: Example of updating the .order file at the root of the wiki Git repository to specify the order of pages at the root level.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/wiki-update-offline.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nWelcome\nRoadmap  \nHow-to-contribute  \nHome  \nReference  \n```\n\n----------------------------------------\n\nTITLE: Defining Backlog Priority Field for Scrum\nDESCRIPTION: XML configuration for the Backlog Priority field used in Scrum process template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_12\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Backlog Priority\" refname=\"Microsoft.VSTS.Common.BacklogPriority\" type=\"Double\" reportable=\"detail\" />\n```\n\n----------------------------------------\n\nTITLE: Including Version Check for Azure DevOps\nDESCRIPTION: Markdown include statement to check version compatibility for Azure DevOps 2019 and above.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/troubleshooting-views.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-gt-eq-2019](../../includes/version-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Transient Failures Retry Sequence Table in Markdown\nDESCRIPTION: Markdown table showing the sequence and timing of retries for transient failures in service hooks\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/troubleshoot.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Retry #  |Wait time  |\n|---------|----------|\n|Before retry 1    |  wait ~1 second      |\n|Before retry 2     | wait ~2 seconds (total delay of 3 seconds)        |\n|Before retry 3     | wait ~4 seconds (total delay of 7 seconds)        |\n|Before retry 4    | wait ~8 seconds (total delay of 15 seconds)        |\n|Before retry 5     | wait ~16 seconds (total delay of 31 seconds)        |\n|Before retry 6     | wait ~32 seconds (total delay of 63 seconds)      |\n|Before retry 7    | wait ~60 seconds (max backoff time, total delay of 123 seconds)  |\n|Before retry 8    | wait ~60 seconds (max backoff time, total delay of 183 seconds)|\n```\n\n----------------------------------------\n\nTITLE: Configure Organization Scoped Feed in nuget.config\nDESCRIPTION: XML configuration for setting up an organization-scoped feed in nuget.config file. The configuration should be placed in the same folder as the .csproj or .sln file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/move-from-fileshares.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\n    <configuration>\n      <packageSources>\n        <clear />\n        <add key=\\\"<FEED_NAME>\\\" value=\\\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\\\" />\n      </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Pipeline PR Triggers\nDESCRIPTION: Shows how to configure pull request triggers in YAML pipelines with auto-cancel behavior for new commits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-143-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  branches:\n    include:\n    - main\n    - releases/*\n  autoCancel: false\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Version Include Statement\nDESCRIPTION: Markdown include statement for Azure DevOps version compatibility\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/wip-limits.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding YAML Metadata to Wiki Pages in VSTS\nDESCRIPTION: Demonstrates how to add metadata to documentation using YAML blocks at the beginning of a file. This syntax is supported in Wiki and code file preview, and helps surface meaningful content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/aug-03-vsts.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n---\ntag: post\ntitle: Hello world\n---\n```\n\n----------------------------------------\n\nTITLE: Querying Test Points for Configuration Outcomes in Power BI\nDESCRIPTION: This Power Query M code fetches test point data from Azure DevOps Analytics, filtering by test plan title and grouping results by test configuration and outcome. It's used to generate a configuration by outcome matrix report.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-configuration-by-outcome.md#2025-04-22_snippet_0\n\nLANGUAGE: Power Query M\nCODE:\n```\nlet \n    Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints?\" \n        &\"$apply=filter((TestSuite/TestPlanTitle eq '{testPlanTitle}'))\" \n        &\"/groupby((TestConfiguration/Name, LastResultOutcome),\" \n            &\"aggregate($count as Count)\" \n        &\")\", null, [Implementation=\"2.0\"]) \nin \n    Source\n```\n\n----------------------------------------\n\nTITLE: Restoring .NET Packages with Interactive Mode\nDESCRIPTION: dotnet CLI command to restore packages with interactive mode enabled, which allows authentication prompts if needed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_7\n\nLANGUAGE: command\nCODE:\n```\ndotnet restore --interactive\n```\n\n----------------------------------------\n\nTITLE: Adding Work Item Types to Task Category in XML Process Model\nDESCRIPTION: XML configuration for adding Issue and Ticket work item types to the Task Category in Azure DevOps on-premises deployments. This customization allows tracking additional work item types alongside Tasks and Bugs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/set-up-your-backlog.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n  <CATEGORY name=\"Task Category\" refname=\"Microsoft.TaskCategory\">\n    <DEFAULTWORKITEMTYPE name=\"Task\" />\n\t<WORKITEMTYPE name=\"Issue\" / \n\t<WORKITEMTYPE name=\"Ticket\" / \n  </CATEGORY>\n```\n\n----------------------------------------\n\nTITLE: Creating Wiki Page from File Example\nDESCRIPTION: Example command for creating a wiki page with content from a file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page create --path 'my page' --wiki myprojectwiki --file-path a.txt --encoding utf-8\n```\n\n----------------------------------------\n\nTITLE: Attaching Global Lists to Work Item Types in Hosted XML\nDESCRIPTION: This XML snippet demonstrates how to attach global lists to an existing work item type in Hosted XML, as an alternative to using witadmin commands and separate global list files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/customize-wit-form.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<witd:WITD xmlns:witd=\"http://schemas.microsoft.com/VisualStudio/2008/workitemtracking/typedef\" application=\"Work item type editor\" version=\"1.0\">\n  <WORKITEMTYPE name=\"Shared Steps\" refname=\"Custom.SharedSteps\">\n    <DESCRIPTION>Server-side data for reusable set of test steps. Version: B.02</DESCRIPTION>\n    <GLOBALLISTS>\n      <GLOBALLIST name=\"Foo\">\n        <LISTITEM value=\"No\" />\n        <LISTITEM value=\"Yes\" />\n        <LISTITEM value=\"Maybe\" />\n        <LISTITEM value=\"Not Sure\" />\n      </GLOBALLIST>\n      <GLOBALLIST name=\"Bar\">\n        <LISTITEM value=\"Open\" />\n        <LISTITEM value=\"Closed\" />\n      </GLOBALLIST>\n     </GLOBALLISTS>  \n     ...\n```\n\n----------------------------------------\n\nTITLE: Reading User Profile Scope (`vso.profile`)\nDESCRIPTION: Grants the ability to read your profile, accounts, collections, projects, teams, and other top-level organizational artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_24\n\nLANGUAGE: text\nCODE:\n```\n`vso.profile`\n```\n\n----------------------------------------\n\nTITLE: Including SAFe Note Markdown\nDESCRIPTION: Markdown include statement for SAFe-related notes in documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/note-safe-articles.md)]\n```\n\n----------------------------------------\n\nTITLE: Specifying API Version for Azure DevOps API Requests\nDESCRIPTION: This code snippet sets the API version parameter to 2.2 for Azure DevOps API requests. It is typically used as a query parameter in API URLs to ensure compatibility with a specific API version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version2-2.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n**api-version** = 2.2\n```\n\n----------------------------------------\n\nTITLE: User Entity Schema v4.0-preview\nDESCRIPTION: Enhanced XML schema showing the User entity structure in OData API v4.0-preview with additional properties and annotations\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-api-version.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<EntityType Name=\"User\">\n  <Key>\n    <PropertyRef Name=\"UserSK\"/>\n  </Key>\n  <Property Name=\"UserSK\" Type=\"Edm.Guid\" Nullable=\"false\"/>\n  <Property Name=\"UserId\" Type=\"Edm.Guid\">\n    <Annotation Term=\"Display.DisplayName\" String=\"User Id\"/>\n  </Property>\n  <Property Name=\"UserName\" Type=\"Edm.String\">\n    <Annotation Term=\"Display.DisplayName\" String=\"User Name\"/>\n    <Annotation Term=\"Microsoft.VisualStudio.Services.Analytics.IsPersonallyIdentifiableInformation\" Bool=\"true\"/>\n  </Property>\n  <Property Name=\"UserEmail\" Type=\"Edm.String\">\n    <Annotation Term=\"Display.DisplayName\" String=\"User Email\"/>\n    <Annotation Term=\"Microsoft.VisualStudio.Services.Analytics.IsPersonallyIdentifiableInformation\" Bool=\"true\"/>\n  </Property>\n  <Property Name=\"AnalyticsUpdatedDate\" Type=\"Edm.DateTimeOffset\"/>\n  <Property Name=\"GitHubUserId\" Type=\"Edm.String\">\n    <Annotation Term=\"Display.DisplayName\" String=\"GitHub User Id\"/>\n  </Property>\n  <Property Name=\"UserType\" Type=\"Microsoft.VisualStudio.Services.Analytics.Model.UserType\">\n    <Annotation Term=\"Display.DisplayName\" String=\"User Type\"/>\n  </Property>\n</EntityType>\n```\n\n----------------------------------------\n\nTITLE: Filtering Items with Undefined/Blank Field Values in Azure Boards Query\nDESCRIPTION: This query filter finds work items where a specific numeric field (like 'Story Points') has no assigned value (is blank or undefined). It uses the equals operator (=) with a blank value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-numeric.md#2025-04-22_snippet_5\n\nLANGUAGE: azure-boards-query\nCODE:\n```\n// Example using the equals operator (=) and leaving the Value blank\n// Field = (leave Value field blank)\n// For instance, to find User Stories with no Story Points:\n// Work Item Type = User Story\n// AND Story Points = (leave Value field blank)\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Checkout Command Example\nDESCRIPTION: Example command demonstrating the usage of Team Foundation (tf) checkout command that returns an exit code of 1 if one of the specified files doesn't exist on the server, indicating partial success.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/use-team-foundation-version-control-commands.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1\\>tf checkout program1.cs program2.c\n```\n\n----------------------------------------\n\nTITLE: WIQL Query Example\nDESCRIPTION: Sample WIQL query that selects work item ID and title, filtered by project, work item type, state, and area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/using-queries.md#2025-04-22_snippet_5\n\nLANGUAGE: wiql\nCODE:\n```\nSELECT [System.ID], [System.Title]\n   FROM WorkItems \n   WHERE [System.TeamProject]='FabrikamFiber' \n   AND [System.WorkItemType]='Bug'\n   AND [System.State]='Active'\n   AND [System.AreaPath]='FabrikamFiber\\Web'\n```\n\n----------------------------------------\n\nTITLE: Creating a new commit in Git\nDESCRIPTION: This command creates a new commit with the specified message. It's used to save changes to the repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_11\n\nLANGUAGE: git\nCODE:\n```\ngit commit -m \"message\"\n```\n\n----------------------------------------\n\nTITLE: Formatting Token for Project-Level Analytics Views Permissions in Azure DevOps\nDESCRIPTION: Demonstrates the token format for setting project-level permissions for Analytics Views in Azure DevOps. The token includes a shared path and the project ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n$/Shared/PROJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Agents with Azure CLI\nDESCRIPTION: This Azure CLI command creates a Managed DevOps Pool, specifying the maximum number of agents using the 'maximum-concurrency' parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_7\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz mdp pool create \\\n   --maximum-concurrency 4\n   # other parameters omitted for space\n```\n\n----------------------------------------\n\nTITLE: Structure of Data Migration Tool Import Command\nDESCRIPTION: This command shows the basic structure for queuing a migration using the Data Migration Tool's import command. It requires specifying the location of the migration specification file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_17\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator import /importFile:{location of migration specification file}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Row Structure\nDESCRIPTION: Individual row structure used for documenting field properties in Azure Boards, showing the field name and its detailed usage description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/define-features-epics.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n      [Value Area](../queries/planning-ranking-priorities.md)\n   :::column-end:::\n   :::column span=\"3\":::\n      The area of customer value addressed by the epic, feature, or backlog item.\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Example SQL Configuration for Fabrikam Collection Migration\nDESCRIPTION: A complete example showing the SQL commands to set recovery mode to simple and create a migration user for the Fabrikam collection database. This demonstrates how to prepare a specific database for migration to Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_14\n\nLANGUAGE: sql\nCODE:\n```\nALTER DATABASE [Fabrikam] SET RECOVERY SIMPLE;\n\nUSE [Foo]\nCREATE LOGIN fabrikam WITH PASSWORD = 'fabrikampassword'\nCREATE USER fabrikam FOR LOGIN fabrikam WITH DEFAULT_SCHEMA=[dbo]\nEXEC sp_addrolemember @rolename='TFSEXECROLE', @membername='fabrikam'\n```\n\n----------------------------------------\n\nTITLE: Managing Delegated Authorization Tokens Scope (`vso.tokens`)\nDESCRIPTION: Grants the ability to manage delegated authorization tokens to users. Requires full access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_22\n\nLANGUAGE: text\nCODE:\n```\n`vso.tokens`\n```\n\n----------------------------------------\n\nTITLE: User Entity Schema v1.0\nDESCRIPTION: XML schema showing the User entity structure in OData API v1.0 with basic properties\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-api-version.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<EntityType Name=\"User\">\n    <Key>\n        <PropertyRef Name=\"UserSK\"/>\n    </Key>\n    <Property Name=\"UserSK\" Type=\"Edm.Guid\" Nullable=\"false\"/>\n    <Property Name=\"UserId\" Type=\"Edm.Guid\">\n        <Annotation Term=\"Display.DisplayName\" String=\"User Id\"/>\n    </Property>\n    <Property Name=\"UserName\" Type=\"Edm.String\">\n        <Annotation Term=\"Display.DisplayName\" String=\"User Name\"/>\n    </Property>\n    <Property Name=\"UserEmail\" Type=\"Edm.String\">\n        <Annotation Term=\"Display.DisplayName\" String=\"User Email\"/>\n    </Property>\n    <!-- New User Type property -->\n    <Property Name=\"UserType\" Type=\"Edm.Int32\">\n        <Annotation Term=\"Display.DisplayName\" String=\"User Type\"/>\n    </Property>\n    <!-- New User Type property -->\n</EntityType>\n```\n\n----------------------------------------\n\nTITLE: Setting Activated By and Activated Date Fields to Readonly in XML\nDESCRIPTION: This XML snippet shows how the Activated By and Activated Date fields are set to readonly for certain workflow transitions of a Bug work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_20\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"Microsoft.VSTS.Common.ActivatedDate\">\n   <READONLY />\n</FIELD>\n<FIELD refname=\"Microsoft.VSTS.Common.ActivatedBy\">\n   <READONLY />\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Verifying Maven Dependency Resolution\nDESCRIPTION: Console output showing the result of the dependency tree after applying the dependency resolution, confirming that the patched version of jackson-databind is now being used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_11\n\nLANGUAGE: console\nCODE:\n```\n$ mvn dependency:tree -Dincludes=com.fasterxml.jackson.core:jackson-databind\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ------------< com.microsoft.customer360:maven-dependencies >------------\n[INFO] Building maven-dependencies 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ maven-dependencies ---\n[INFO] com.microsoft.customer360:maven-dependencies:jar:1.0-SNAPSHOT\n[INFO] \\- com.fasterxml.jackson.core:jackson-databind:jar:2.9.10.4:compile\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.827 s\n[INFO] Finished at: 2020-04-27T14:32:42+02:00\n[INFO] ------------------------------------------------------------------------\n```\n\n----------------------------------------\n\nTITLE: Example of Listing Test Runs with TCM\nDESCRIPTION: Example of using the TCM run /list command to list test runs for a specific project in Azure DevOps. The output shows the ID, Title, Owner, and completion date for each test run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_1\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /list /collection:https://fabrikamprime.visualstudio.com /teamproject:\"Fabrikam Fiber\"\n\nId        Title                              Owner               Date Completed\n--------- ---------------------------------- ------------------- -----------\n1000006   Sprint 2 (Manual)                  Thomas Margand      11/5/2021\n1000032   33 : Change initial view (Manual)  Danielle Brasseur   11/11/2021\n1000040   Sprint 2 (Manual)                  Thomas Margand      11/16/2021\n1000042   Sprint 3 (Manual)                  Thomas Margand      11/16/2021\n1000046   Special testing (Manual)           Nicoletta Guibord   11/18/2021\n1000052   Test Plan for Cycle 1 (Manual)     Bukhosi Bhengu      12/1/2021\n1000060   Game Shopping (Manual)             Bukhosi Bhengu      12/6/2021\n```\n\n----------------------------------------\n\nTITLE: Declaring Inline Container Resources in YAML Pipeline\nDESCRIPTION: Demonstrates how to declare container resources inline within a YAML pipeline job definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-143-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: my-container-job\n  container:\n    image: mcr.microsoft.com/dotnet/core/runtime:latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Zendesk Account URL\nDESCRIPTION: Example of the Zendesk account URL format showing how to specify the account name parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/consumers.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://{account name}.zendesk.com\n```\n\n----------------------------------------\n\nTITLE: Navigating to Local Repository Root in Bash\nDESCRIPTION: Changes the current directory to the root of the local repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/share-your-code-in-tfvc-xcode.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npushd /ws/FabrikamFiber\n```\n\n----------------------------------------\n\nTITLE: Defining REQUIRED Rule for Work Item Field in XML\nDESCRIPTION: This XML snippet demonstrates how to use the REQUIRED element to make a field mandatory for users to fill before saving a work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_11\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"MyCorp.Status\" name=\"Status\" type=\"String\">\n    <REQUIRED />  \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Get Latest Version of Multiple Files\nDESCRIPTION: Command to get the latest versions of two specific files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/get-command.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1>tf get file1.cs file2.cs\n```\n\n----------------------------------------\n\nTITLE: Example of Listing Users with Azure DevOps CLI\nDESCRIPTION: Example command showing how to list five users in an Azure DevOps organization with table output format. The command demonstrates using the skip and top parameters to control pagination and displays the user ID, display name, email, license type, access level, and status for each user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/export-users-audit-log.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops user list --skip 0 --top 5  --output table\n\nID                                    Display Name            Email                          License Type    Access Level    Status\n------------------------------------  ----------------------  -----------------------------  --------------  --------------  --------\n3b5f0c34-4aec-4bf4-8708-1d36f0dbc468  Christie Church         fabrikamfiber1@contoso.com     stakeholder     Stakeholder     active\n8c8c7d32-6b1b-47f4-b2e9-30b477b5ab3d  Chuck Reinhart          fabrikamfiber3@contoso.com     stakeholder     Stakeholder     active\n3b5f0c34-4aec-4bf4-8708-1d36f0dbc468  contoso@contoso.com     contoso@contoso.com            stakeholder     Stakeholder     active\nf14a4f19-9910-6116-9836-cccd6dd1b7b7  contoso2@contoso.com    contoso2@contoso.com           express         Basic           active\n74be024c-ebf5-4993-81eb-81ae1551e45f  Helena Petersen         fabrikamfiber8@contoso.com     stakeholder     Stakeholder     active\n```\n\n----------------------------------------\n\nTITLE: Defining a Read-Only Field Rule in XML for On-premises Process\nDESCRIPTION: This XML snippet shows how to define a rule that restricts modification of a custom field when a work item is in the Active state using the On-premises XML process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<STATE name=\"Active\">\n      <FIELDS>\n      <FIELD refname=\"MyCorp.Severity\" >\n         <READONLY />\n      </FIELD>\n      </FIELDS>\n</STATE>\n```\n\n----------------------------------------\n\nTITLE: Adding Control Contribution XML\nDESCRIPTION: XML configuration for adding a control contribution with inputs to the work item form's Planning group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/configure-workitemform-extensions.md#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<Page Id=\"Details\">\n...\n    <Section>\n    ...\n        <Group Id=\"Planning\">\n        ...\n            <ControlContribution Label=\"Priority\" Id=\"example.color-control-dev.color-control-contribution\">\n                <Inputs>\n                    <Input Id=\"FieldName\" Value=\"Microsoft.Azure DevOps Services.Common.Priority\" />\n                    <Input Id=\"Colors\" Value=\"red;green\" />\n                </Inputs>\n            </ControlContribution>\n\n            <Control Label=\"Risk\" Type=\"FieldControl\" FieldName=\"Microsoft.Azure DevOps Services.Common.Risk\" />\n```\n\n----------------------------------------\n\nTITLE: Listing Organization Policy Events for Azure DevOps Auditing\nDESCRIPTION: This table details Azure DevOps audit events concerning organization policies. It covers actions like adding or removing enforced policies and updating policy values, providing the `Action` identifier and a `Description` with placeholders for policy names and values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n### OrganizationPolicy events\n\n| Action | Description |\n|--------|-------------|\n| `OrganizationPolicy.EnforcePolicyAdded` | Enforced policy {EnforcePolicyName} was added. |\n| `OrganizationPolicy.EnforcePolicyRemoved` | Enforced policy {EnforcePolicyName} was removed. |\n| `OrganizationPolicy.PolicyValueUpdated` | Policy {PolicyName} was changed to {PolicyValue}. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Initiative Portfolio Backlog in ProcessConfiguration.xml\nDESCRIPTION: XML configuration for adding an Initiative portfolio backlog to the ProcessConfiguration file. This defines the Initiative category with workflow states, columns, and panel configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-portfolio-backlogs.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<PortfolioBacklog category=\"FabrikamFiber.InitiativeCategory\" pluralName=\"Initiatives\" singularName=\"Initiative\" workItemCountLimit=\"1000\">\n  <States>\n    <State value=\"New\" type=\"Proposed\" />\n    <State value=\"Active\" type=\"InProgress\" />\n    <State value=\"Resolved\" type=\"InProgress\" />\n    <State value=\"Closed\" type=\"Complete\" />\n  </States>\n  <Columns>\n    <Column refname=\"System.WorkItemType\" width=\"100\" />\n    <Column refname=\"System.Title\" width=\"400\" />\n    <Column refname=\"System.State\" width=\"100\" />\n    <Column refname=\"Microsoft.VSTS.Scheduling.Effort\" width=\"50\" />\n    <Column refname=\"Microsoft.VSTS.Common.BusinessValue\" width=\"50\" />\n    <Column refname=\"Microsoft.VSTS.Common.ValueArea\" width=\"100\" />\n    <Column refname=\"System.Tags\" width=\"200\" />\n  </Columns>\n  <AddPanel>\n    <Fields>\n      <Field refname=\"System.Title\" />\n    </Fields>\n  </AddPanel>\n</PortfolioBacklog>\n```\n\n----------------------------------------\n\nTITLE: Auto-detecting and Configuring TFVC Proxy\nDESCRIPTION: Example command that automatically detects and configures a client computer to use a proxy based on existing proxy records in Azure DevOps Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/proxy-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf proxy /configure\n```\n\n----------------------------------------\n\nTITLE: Including Widget Configuration Styles in JavaScript\nDESCRIPTION: This code demonstrates how to include common styles for widget configuration in your JavaScript. It should be placed inside the VSS.require block for the widget configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/styles-from-widget-sdk.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nWidgetHelpers.IncludeWidgetConfigurationStyles();\n```\n\n----------------------------------------\n\nTITLE: Displaying forbidden characters for Azure DevOps field names\nDESCRIPTION: Lists the special characters that cannot be used when naming fields in Azure DevOps work items. These characters are prohibited in field names to ensure proper system functionality.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/field-reference.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n.,;'`:~\\/\\*|?\"&%$!+=()[]{}<>\n```\n\n----------------------------------------\n\nTITLE: Executing TFVC Changeset Command from Command Prompt\nDESCRIPTION: This command is used to find a changeset from the command prompt in Team Foundation Version Control. It demonstrates the use of the 'tf changeset' command, which can be used to retrieve changeset information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/find-view-changesets.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntf changeset\n```\n\n----------------------------------------\n\nTITLE: Warning for Non-Natively Supported Database Collation (cmdline)\nDESCRIPTION: This command-line output is a warning message from the Data Migration Tool indicating that the collection database's collation is not natively supported in Azure DevOps Services. It informs the user that the collation will be converted during import and requires acknowledgment to proceed. A link with more details on collation implications is provided.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_4\n\nLANGUAGE: cmdline\nCODE:\n```\nThe collection database's collation '{collation}' is not natively supported in Azure DevOps Services. Importing your collection will result in your collation being converted to one of the supported Azure DevOps Services collations. See more details at https://aka.ms/AzureDevOpsImportCollations\n```\n\n----------------------------------------\n\nTITLE: Showing Azure DevOps Extension Details Example\nDESCRIPTION: This example demonstrates how to show detailed information about the 'Timetracker' extension from the '7pace' publisher in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension show --extension-name Timetracker --publisher-name 7pace --output table\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring a Bare Git Repository\nDESCRIPTION: Git commands to create a bare Git repository and set its default branch to match SVN's trunk branch. This is the recommended format for sharing a Git repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit init --bare c:\\new-bare.git\ncd c:\\new-bare.git\ngit symbolic-ref HEAD refs/heads/svn/trunk\n```\n\n----------------------------------------\n\nTITLE: Viewing Data Migration Tool Help in Command Prompt\nDESCRIPTION: Commands to display help information for the Data Migration Tool, including general help and specific help for the validate command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_0\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator /help\n```\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator validate /help\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Manual Intervention Pending Event (JSON)\nDESCRIPTION: This JSON object shows the sample payload for a 'manualintervention.pending' event in Azure DevOps. It contains the publisher ID, event ID, information about the pending intervention (ID, name, status), the associated project (ID, name), and the creation timestamp. This payload is relevant for service hooks designed to notify or act upon pending manual interventions in deployment pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"publisherId\": \"azure-devops\",\n  \"eventId\": \"manualintervention.pending\",\n  \"resource\": {\n    \"manualIntervention\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000intervention-id\",\n      \"name\": \"intervention-name\",\n      \"status\": \"pending\",\n      \"project\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n        \"name\": \"project-name\"\n      }\n    }\n  },\n  \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using ORDER BY Clause in WIQL Queries\nDESCRIPTION: Shows how to sort query results using the ORDER BY clause, allowing both ascending and descending sort orders based on a specified field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_32\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT [System.Id], [System.Title] \nFROM WorkItems \nWHERE [System.TeamProject] = @project \nAND [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\nORDER BY [System.Id] [asc | desc]\n```\n\n----------------------------------------\n\nTITLE: Duplicate Property Names in Classification Properties - Azure DevOps XML\nDESCRIPTION: This error example from Classification.xml demonstrates two <property> elements under <properties> with the same name, which is not allowed. The resolution snippet removes the duplicate, ensuring each property name is unique in the container. Property elements should include only the name, value, and isFile attributes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_17\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\\n  <property name=\\\"MSPROJ\\\" value=\\\"Classification\\\\FileMapping.xml\\\" isFile=\\\"true\\\" />\\n  <property name=\\\"MSPROJ\\\" value=\\\"Classification\\\\Fabrikam_FileMapping.xml\\\" isFile=\\\"true\\\" />\\n  <property name=\\\"Process Template\\\" value=\\\"Fabrikam Agile\\\"/>\\n</properties>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\\n  <property name=\\\"MSPROJ\\\" value=\\\"Classification\\\\Fabrikam_FileMapping.xml\\\" isFile=\\\"true\\\" />\\n  <property name=\\\"Process Template\\\" value=\\\"Fabrikam Agile\\\"/>\\n</properties>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 233 Update Details in Markdown\nDESCRIPTION: This Markdown include directive incorporates the main content detailing the features and updates introduced in Azure Boards Sprint 233. The actual update information resides in the included file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/boards/sprint-233-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-233-update](../includes/boards/sprint-233-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Double Field Type Operators in Azure DevOps Queries\nDESCRIPTION: Operators supported for Double (Decimal) fields in Azure DevOps queries. Double fields store real numbers and support various comparison operators for numeric queries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`= , <> , > , < , >= , <= , =[Field], <>[Field], >[Field], <[Field], >=[Field], <=[Field], In, Not In, Was Ever`\n```\n\n----------------------------------------\n\nTITLE: Including Version Control Template\nDESCRIPTION: Markdown include statement for version control template reference\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-access.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Repository Created Event Payload in Azure DevOps\nDESCRIPTION: Sample JSON payload for a repository creation event in Azure DevOps. Includes repository and project identifiers with filtering options for project and repository name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"publisherId\": \"azure-devops\",\n    \"eventId\": \"git.repository.created\",\n    \"resource\": {\n        \"repository\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000repository-id\",\n            \"name\": \"repository-name\",\n            \"url\": \"repository-url\",\n            \"project\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n                \"name\": \"project-name\"\n            }\n        }\n    },\n    \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: REST API Response for Template Information in Pipeline Runs\nDESCRIPTION: JSON response from the updated Pipelines Runs - Get REST API showing the new template information properties, including extended templates, included templates, and root YAML file details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-243-update.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n\"yamlDetails\":\n    {\n        \"extendedTemplates\":\n        [\n            {\n                \"yamlFile\": \"template-stages.yml\",\n                \"repoAlias\": \"templates\"\n            }\n        ],\n        \"includedTemplates\":\n        [\n            {\n                \"yamlFile\": \"template-step.yml\",\n                \"repoAlias\": \"templates\"\n            }\n        ],\n        \"rootYamlFile\":\n        {\n            \"ref\": \"refs/heads/main\",\n            \"yamlFile\": \"azure-pipelines.yml\",\n            \"repoAlias\": \"self\"\n        },\n        \"expandedYamlUrl\": \"https://dev.azure.com/fabrikamfiber/161cfeeb-d9fd-395c-917b-fec46db44fbb/_apis/build/builds/39224/logs/1\"\n    }\n```\n\n----------------------------------------\n\nTITLE: Listing All Files and Folders in TFVC Root Recursively\nDESCRIPTION: Example showing how to list every file and folder in the entire TFVC server using both the /recursive option and the root server path $/.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/dir-command.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf dir /recursive $/\n```\n\n----------------------------------------\n\nTITLE: Test Owner Summary Query - Power BI\nDESCRIPTION: Power BI query to retrieve test run data grouped by test owner and date. Similar to the container query but organizes results by test ownership for filtering and analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-summary-trend.md#2025-04-22_snippet_8\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestRuns?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"and CompletedOn/Date ge {startdate} \"\n                &\"and Workflow eq 'Build' \"\n            &\") \"\n        &\"/groupby((Test/TestOwner, Date/Date), \"\n          &\"aggregate( \"\n            &\"ResultCount with sum as ResultCount, \"\n            &\"ResultPassCount with sum as ResultPassCount, \"\n            &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n            &\"ResultNotImpactedCount with sum as ResultNotImpactedCount, \"\n            &\"ResultFailCount with sum as ResultFailCount \"\n         &\")) \"\n       &\"/compute( \"\n       &\"iif(ResultCount gt ResultNotExecutedCount, ((ResultPassCount add ResultNotImpactedCount) div cast(ResultCount sub ResultNotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Undo Others\nDESCRIPTION: Namespace identifier for undoing other users' changes in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_41\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, UndoOther\n```\n\n----------------------------------------\n\nTITLE: TFVC Branches Command Server Path Example\nDESCRIPTION: Shows how to display branch history for a file using its server path in Team Foundation Version Control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branches-command.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf branches $/applications/header.h\n```\n\n----------------------------------------\n\nTITLE: Open Unshelve Dialog Box in TFVC\nDESCRIPTION: Command to open the Unshelve dialog box, allowing users to find and select a shelveset to unshelve into the current workspace through the graphical interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/unshelve-command.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nc:\\>tf unshelve\n```\n\n----------------------------------------\n\nTITLE: Including Audit Log Support Note in Markdown\nDESCRIPTION: This snippet shows how to include a note about audit log support in a Markdown file using a special include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/custom-rules.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/note-audit-log-support-process.md)]\n```\n\n----------------------------------------\n\nTITLE: Restoring NuGet Packages\nDESCRIPTION: NuGet command to restore packages using the configuration specified in the nuget.config file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_6\n\nLANGUAGE: command\nCODE:\n```\nnuget.exe restore\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Agent Authentication Command\nDESCRIPTION: Shows the command-line syntax for specifying the authentication type when configuring an Azure DevOps agent. This is a required option for agent setup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/unattended-config.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n--auth <type>\n```\n\n----------------------------------------\n\nTITLE: Power BI Query for All Project Pipelines Duration Percentiles\nDESCRIPTION: This Power BI M query retrieves the 50th, 80th, and 95th percentile durations for all pipelines in a project. It filters for successful or partially successful pipeline runs completed after a specified date and groups results by pipeline name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration.md#2025-04-22_snippet_6\n\nLANGUAGE: Power BI M Query\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"CompletedDate ge {startdate} \"\n                &\"and (SucceededCount eq 1 or PartiallySucceededCount eq 1) \"\n                &\"    ) \"\n        &\"/compute( \"\n        &\"percentile_cont(TotalDurationSeconds, 0.5, PipelineId) as Duration50thPercentileInSeconds, \"\n            &\"percentile_cont(TotalDurationSeconds, 0.8, PipelineId) as Duration80thPercentileInSeconds, \"\n                &\"percentile_cont(TotalDurationSeconds, 0.95, PipelineId) as Duration95thPercentileInSeconds) \"\n                &\"/groupby( \"\n            &\"(Duration50thPercentileInSeconds, Duration80thPercentileInSeconds,Duration95thPercentileInSeconds, Pipeline/PipelineName)) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Displaying Files by Label in TFVC\nDESCRIPTION: Example showing how to display files with a specific label ('My label') in a server path using the version option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/dir-command.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf dir /version:L\"My label\" 314dir\n```\n\n----------------------------------------\n\nTITLE: Adding Tags to Pipeline Runs with Azure DevOps CLI\nDESCRIPTION: Adds a tag to a specific pipeline run using the Azure DevOps CLI. This command adds the 'YAML' tag to run ID 123 and outputs the result in JSON format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/runs.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz pipelines runs tag add --run-id 123 --tags YAML --output json\n```\n\n----------------------------------------\n\nTITLE: Applying Checkin Lock to File in TFVC\nDESCRIPTION: Example of applying a checkin lock to a file. This allows others to check out the file but prevents them from checking in changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/lock-command.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf lock /lock:checkin 1256.cs\n```\n\n----------------------------------------\n\nTITLE: Simplified Git Fetch Using Origin\nDESCRIPTION: Git command to fetch changes using the origin alias, which is automatically set when cloning a repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pulling.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit fetch\n```\n\n----------------------------------------\n\nTITLE: Extension Manifest Optional Properties Table\nDESCRIPTION: Markdown table documenting optional properties for Azure DevOps extensions, including their descriptions and usage notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/manifest-discovery.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|    Property     |                                                                  Description                                                                   |                                                                                                                                                                                                                                                     Notes                                                                                                                                                                                                                                                     |\n|-----------------|------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **description** |                                    *A few sentences describing the extensions. Limited to 200 characters.*                                     |                                                                                                                                                            The description should be your extension's \"elevator pitch\" - a couple of lines to describe your extension in the Marketplace and make people want to install it. See the example below                                                                                                                                                            |\n|    **icons**    |                                               *Dictionary of icons representing the extension.*                                                |                                                                                                                                      Valid keys: `default` (128x128 pixels) of type BMP, GIF, EXIF, JPG, PNG and TIFF). Other keys such as `large` (512x512 pixels) may be supported in the future. The value of each key is the path to the icon file in the extension                                                                                                                                       |\n|    **tags**     |                                           *Array of string tags to help users find your extension.*                                            |                                                                                                                                                                                                                          Examples: `agile`, `project management`, `task timer`, and so on.                                                                                                                                                                                                                          |\n| **screenshots** |                                      *Array of images that couldn't be included in your **content**.*                                       |                                                                               Screenshots are more valuable when featured in your **content**, and should be used there to help make a quality market details page for your extension. Use **screenshots** for less important images not featured in your **content**. Each image should be 1366x768 pixels. The `path` of each item is the path to the file in the extension.                                                                                |\n|   **content**   |                                      *Dictionary of content files that describe your extension to users.*                                      | *Every* extension should include solid content. This is how you'll show users what your extension can do. Make it rich, consumable, and include screenshots where necessary. Include an `overview.md` file as your base content piece. Each file is assumed to be in [GitHub Flavored Markdown](https://help.github.com/articles/github-flavored-markdown/) format. The `path` of each item is the path to the Markdown file in the extension. Valid keys: `details`. Other keys may be supported in the future. |\n|    **links**    |                         *Dictionary of links that help users learn more about your extension, get support, and move.*                          |                                                          Valid keys: `getstarted` - first steps, how to setup or use. `learn` - deeper content to help users better understand your extension or service. `license` - end-user license agreement. `privacypolicy` - privacy policy for an extension. `support` - get help and support for an extension. The value of each key is an object with a `uri` field, which is the absolute URL of the link                                                          |\n| **repository**  |                                *Dictionary of properties describing the source code repository for the extension*                     |                                                                                                                                                                                                       Valid Keys: `type` - Type of repository. Example: *git*. `uri` - Absolute URL of the repository.                                                                                                                                                                                                        |\n|   **badges**    | *Array of links to external metadata badges like TravisCI, Appveyor, and so on, from the [approved badges sites](../develop/manifest.md#approvedbadges)* |                                                                                                                                                 Valid keys: `href` - Link the user navigates to when selecting the badge. `uri` - The absolute URL of the badge image to be displayed. `description` - Description of the badge, to be displayed on hover.                                                                                                                                                 |\n|  **branding**   |                                                   *Dictionary of brand-related properties.*                                                    |                                                                                                                     Valid keys: `color` - primary color of the extension or publisher; can be a hex (#ff00ff), RGB (rgb(100,200,50)), or supported HTML color names (blue). `theme` - complements the color; use *dark* for dark branding colors, or *light* for lighter branding colors.                                                                                                                     |\n```\n\n----------------------------------------\n\nTITLE: Accessing Maven Package API Endpoint for Collection Scoped Feed in Azure DevOps Server\nDESCRIPTION: HTTP endpoint URL pattern for promoting Maven packages in a collection scoped feed on an on-premises Azure DevOps Server 2022. This preview API requires Maven coordinates to identify the package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_16\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://{instance}/{collection}/_apis/packaging/feeds/{feed}/maven/groups/{groupId}/artifacts/{artifactId}/versions/{version}?api-version=7.1-preview.1\n```\n\n----------------------------------------\n\nTITLE: Managing Azure DevOps Classification Nodes (Area/Iteration Paths) with REST API\nDESCRIPTION: Reference to the Azure DevOps REST API endpoint for managing classification nodes, which includes both Area Paths and Iteration Paths. This API provides programmatic control over these hierarchical structures used for organizing work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-configure-boards.md#2025-04-22_snippet_4\n\nLANGUAGE: restapi\nCODE:\n```\n- **Area Paths**: [Classification nodes (REST API)](/rest/api/azure/devops/wit/classification%20nodes)\n- **Iteration Paths**: [Classification nodes (REST API)](/rest/api/azure/devops/wit/classification%20nodes)\n```\n\n----------------------------------------\n\nTITLE: macOS Keyboard Shortcuts for Rich Text Editor in Azure DevOps\nDESCRIPTION: Keyboard shortcuts for the rich text editor when using macOS in Azure DevOps 2020 and newer versions. These shortcuts use the Command key instead of Ctrl for common formatting and editing operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/wi-form-shortcuts.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|Command+b|Bold|\n|Command+c|Copy text|\n|Command+i|Italics|\n|Command+k|Insert hyperlink|\n|Command+s|Save|\n|Command+u|Underline|\n|Command+v|Paste text|\n|Command+Z|Redo|\n|Command+z|Undo|\n|Command+.|Bulleted list|\n|Command+/|Numbered list|\n|Shift+:|Emoji library|\n```\n\n----------------------------------------\n\nTITLE: Displaying General TFVC Documentation with tf msdn\nDESCRIPTION: Example of using the tf msdn command without any parameters to display the general documentation for Team Foundation Version Control commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/msdn-command.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf msdn\n```\n\n----------------------------------------\n\nTITLE: Installing TFX CLI using npm\nDESCRIPTION: Command to install the TFX Command Line Interface tool globally using npm package manager. This tool is used for interacting with Azure DevOps from the command line.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/acquire-tfx-cli.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g tfx-cli\n```\n\n----------------------------------------\n\nTITLE: Adding an Administrator in Azure DevOps\nDESCRIPTION: This code snippet shows the HTML for an image that highlights the 'Add' button used to add a new administrator in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-teams.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n:::image type=\"content\" source=\"media/add-administrator.png\" alt-text=\"Screenshot of Add button highlighted, to add an administrator.\":::\n```\n\n----------------------------------------\n\nTITLE: Customizing Dialog Buttons (JavaScript)\nDESCRIPTION: Shows how to customize the dialog buttons, including changing button text and hiding buttons completely.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/using-host-dialog.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar dialogOptions = {\n    title: \"My Dialog Title\",\n    width: 800,\n    height: 600,\n    okText: \"Yes\",\n    cancelText: \"No\" \n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nvar dialogOptions = {\n    title: \"My Dialog Title\",\n    width: 800,\n    height: 600,\n    buttons: []\n};\n```\n\n----------------------------------------\n\nTITLE: Portfolio Backlog Element Configuration in Azure DevOps XML\nDESCRIPTION: XML structure showing portfolio backlog element configuration including states, columns and add panel settings. Demonstrates attribute usage for category, parent, naming and limits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<PortfolioBacklog category=\"PortfolioCategory\" parent=\"ParentCategory\"  \n         pluralName=\"PluralName\" singularName=\"SingleName\" workItemCountLimit=\"MaximumLimit>  \n         <States> . . . </States>  \n         <Columns> . . . </Columns>  \n         <AddPanel> . . . </ AddPanel>  \n</PortfolioBacklog >\n```\n\n----------------------------------------\n\nTITLE: Probation Retry Sequence Table in Markdown\nDESCRIPTION: Markdown table showing the sequence and timing of retries while a subscription is in probation status\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/troubleshoot.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Retry #  |Wait time  |\n|---------|----------|\n|Before retry 1    |  wait ~20 minutes      |\n|Before retry 2     | wait ~40 minutes (total probation time of 1 hour)        |\n|Before retry 3     | wait ~1 hour 20 minutes (total probation time of 2.33 hours)        |\n|Before retry 4    | wait ~2 hours 40 minutes (total probation time of 5 hours)        |\n|Before retry 5     | wait ~5 hours 20 minutes (total probation time of 10.33 hours)        |\n|Before retry 6     | wait ~10 hours 40 minutes (total probation time of 21 hours)        |\n|Before retry 7    | wait ~15 hours (max backoff time, total probation time of 36 hours)        |\n```\n\n----------------------------------------\n\nTITLE: Accessing Organization Settings in Azure DevOps (Markdown)\nDESCRIPTION: This snippet shows how to navigate to the Organization settings in Azure DevOps using the Azure DevOps logo.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/work-item-fields.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Screenshot of Choose Organization settings.](../../media/settings/open-admin-settings-vert.png)\n```\n\n----------------------------------------\n\nTITLE: Variable Group Update Command Output in Table Format\nDESCRIPTION: Sample table output showing the updated variable group with its ID, new name, description, authorization status, and number of variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nID    Name              Description               Is Authorized  Number of Variables\n----  ----------------  ------------------------- -------------  -------------------\n4     my-new-variables  New home office variables false          2\n```\n\n----------------------------------------\n\nTITLE: Setting Git Credential Helper Options in Visual Studio\nDESCRIPTION: Lists the valid credential helper options available in Visual Studio's Git Global Settings. Options include GCM for Windows, GCM Core, and Unset (default).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/git-config-credential-helper.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `GCM for Windows`: use [Git Credential Manager for Windows](https://github.com/microsoft/Git-Credential-Manager-for-Windows) as the helper.\n- `GCM Core`: use [Git Credential Manager Core](https://github.com/microsoft/Git-Credential-Manager-Core) as the helper.\n- `Unset` (default): if this setting is unset, the credential helper set in the system config is used. As of Git for Windows 2.29, the default credential helper is `GCM Core`.\n```\n\n----------------------------------------\n\nTITLE: Installing Extensions in Azure DevOps CLI\nDESCRIPTION: This snippet shows the command structure for installing an extension using the Azure DevOps CLI. It requires the extension ID and publisher ID as parameters, with an optional organization URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension install --extension-id\n                            --publisher-id\n                            [--org]\n```\n\n----------------------------------------\n\nTITLE: NuGet Connection URLs\nDESCRIPTION: Domain URLs required for NuGet package management and connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://*.azurewebsites.net\nhttps://*.nuget.org\n```\n\n----------------------------------------\n\nTITLE: Listing Unmerged Changesets Forward in TFVC\nDESCRIPTION: Lists all changesets in branch1 that haven't been merged into branch2 using the /candidate option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merge-command.md#2025-04-22_snippet_4\n\nLANGUAGE: cmd\nCODE:\n```\nc:\\projects>tf merge /candidate branch1 branch2 /recursive\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary by Test File with OData\nDESCRIPTION: OData query that retrieves test result summary data grouped by test container name. The query allows analysis of test performance at the test file level, making it easier to identify files with higher failure rates or performance issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_7\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And DateSK ge {startdate} \n    And Workflow eq 'Build'\n)/groupby(\n    (Test/ContainerName),\n    aggregate(\n        ResultCount with sum as ResultCount,\n        ResultPassCount with sum as ResultPassCount,\n        ResultFailCount with sum as ResultFailCount,\n        ResultNotExecutedCount with sum as ResultNotExecutedCount,\n        ResultNotImpactedCount with sum as ResultNotImpactedCount\n    )\n)\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Migrator Prepare Command (cmdline)\nDESCRIPTION: This command provides a concrete example of running the `Migrator prepare` command for a fictional 'Fabrikam' organization. It specifies the collection URL, the Microsoft Entra tenant domain (`fabrikam.OnMicrosoft.com`), a placeholder for the Azure region, and the SQL Server connection string pointing to the configuration database.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_7\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator prepare /collection:http://fabrikam:8080/DefaultCollection /tenantDomainName:fabrikam.OnMicrosoft.com /region:{region} /connectionString:\"Data Source=fabrikam;Initial Catalog=Configuration;Integrated Security=True\"\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration Filtered by Test File in Power BI\nDESCRIPTION: This Power BI query retrieves test duration data with container (test file) information. It enables slicing the report by specific test files to analyze their performance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_6\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And Date/Date ge {startdate} \"\n      &\"And Workflow eq 'Build'\"\n      &\")/groupby(\"\n      &\"(TestSK, Test/TestName, Test/ContainerName),\"\n      &\"aggregate(\"\n      &\"ResultCount with sum as TotalCount, \"\n      &\"ResultDurationSeconds with sum as TotalDuration\"\n      &\"))/compute(\"\n      &\"TotalDuration div TotalCount as AvgDuration\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Rebasing to a Specific Commit in Git\nDESCRIPTION: Example of rebasing to a specific commit identified by its SHA hash. This opens an editor where commits can be kept or removed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/remove-binaries.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit rebase -i 25b4\n```\n\n----------------------------------------\n\nTITLE: Creating Mermaid Flowcharts in Azure DevOps Wiki\nDESCRIPTION: Shows how to create flowcharts with nodes, edges, and decision points using Mermaid graph syntax in Azure DevOps wiki pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n:::mermaid\ngraph LR;\n    A[Hard edge] -->|Link text| B(Round edge) --> C{Decision}\n    C -->|One| D[Result one]\n    C -->|Two| E[Result two]\n:::\n```\n\n----------------------------------------\n\nTITLE: Modifying Field Label in Azure DevOps Work Item Form\nDESCRIPTION: This XML snippet shows how to change the label of the 'Title' field in the work item form to include a Portuguese translation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-field.md#2025-04-22_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<Column PercentWidth=\"70\">  \n   <Control Type=\"FieldControl\" FieldName=\"System.Title\" Label=\"Title (Titulo):\" LabelPosition=\"Left\" />  \n</Column>\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Columns for Product Backlog in Scrum Process Template\nDESCRIPTION: This snippet shows the default column configuration for a product backlog in the Scrum process template. It specifies which fields are displayed (Priority, Title, State, Effort, IterationPath) and their widths in the backlog view.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<Columns>\n      <Column refname=\"Microsoft.VSTS.Common.Priority\" width=\"400\" />\n      <Column refname=\"System.Title\" width=\"400\" />\n      <Column refname=\"System.State\" width=\"100\" />\n      <Column refname=\"Microsoft.VSTS.Scheduling.Effort\" width=\"50\" />\n      <Column refname=\"System.IterationPath\" width=\"200\" />\n</Columns>\n```\n\n----------------------------------------\n\nTITLE: Configuring Widget SDK Demand in Azure DevOps Extension\nDESCRIPTION: Configuration to enable new widget SDK features after TFS 2015 Update 3 by adding required demand in the manifest.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-widget-manifest.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"demands\": [\n        \"contribution/ms.vss-dashboards-web.widget-sdk-version-2\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Latest Version from TFVC\nDESCRIPTION: Command to get the latest version of files from a TFVC repository recursively.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/import-from-TFVC.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntf get /version:T /recursive\n```\n\n----------------------------------------\n\nTITLE: Defining Manage Enterprise Policies Permission in Azure DevOps\nDESCRIPTION: Specifies the permission key for managing enterprise policies in Azure DevOps. This permission allows users to enable and disable application connection policies at the collection level.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n`Collection, MANAGE_ENTERPRISE_POLICIES`\n```\n\n----------------------------------------\n\nTITLE: Installing NPM Packages with Force\nDESCRIPTION: Command to force install npm packages, even if a local copy exists. Requires removal of node_modules folder first.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_12\n\nLANGUAGE: Command\nCODE:\n```\nnpm install --force\n```\n\n----------------------------------------\n\nTITLE: List Agent Queues using Azure CLI\nDESCRIPTION: Azure CLI command to list agent queues with optional filtering parameters\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/pools-queues.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines queue list [--action {manage, none, use}]\n                        [--detect {false, true}]\n                        [--org]\n                        [--project]\n                        [--queue-name]\n```\n\n----------------------------------------\n\nTITLE: Defining PR Triggers in YAML Pipelines\nDESCRIPTION: This YAML snippet demonstrates how to specify which branches to include or exclude for pull request builds. It also shows how to filter by file paths, such as only triggering builds for C# files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-142-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  branches:\n    include:\n    - features/*\n    exclude:\n    - features/experimental/*\n  paths:\n    include:\n    - **/*.cs\n\nsteps:\n- script: echo My PR build!\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Feature Access Levels\nDESCRIPTION: A markdown table showing which dashboard and reporting features are available to Stakeholder vs Basic access level users in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/overview.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"3\":::\n      **Supported features and tasks**\n   :::column-end:::\n   :::column span=\"1\":::\n      **Stakeholder**\n   :::column-end:::\n   :::column span=\"1\":::\n      **Basic**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Updating Maven Package Version via Azure Artifacts REST API (HTTP)\nDESCRIPTION: Demonstrates how to issue an HTTP PATCH request to the Azure Artifacts packaging REST API endpoint in order to update the version of a Maven package in a feed. This operation requires specifying several path parameters, including organization, project, feedId, groupId, artifactId, and packageVersion, and mandates the API version '5.1-preview.1' as a query parameter. A properly formed PATCH request must be accompanied by a request body describing the views to which the package version will be added. Pre-requisites include authentication with Azure DevOps and appropriate permissions on the target feed and package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/artifacts/sprint-174-update.md#2025-04-22_snippet_0\n\nLANGUAGE: HTTP\nCODE:\n```\nPATCH\nhttps://pkgs.dev.azure.com/{organization}/{project?}/_apis/packaging/feeds/{feedId}/maven/groups/{groupId}/artifacts/{artifactId}/versions/{packageVersion}?api-version=5.1-preview.1\n```\n\n----------------------------------------\n\nTITLE: Pipeline Resource with Tag Filters\nDESCRIPTION: Definition showing the use of tags for version evaluation and triggers in pipeline resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: MyCIAlias\n    project: Fabrikam\n    source: Farbrikam-CI\n    tags: \n    - Production \n    trigger:\n      tags:\n      - Production\n      - Signed\n```\n\n----------------------------------------\n\nTITLE: Project MANAGE_PROPERTIES Permission\nDESCRIPTION: Permission namespace for editing project-level information and modifying project services visibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_7\n\nLANGUAGE: text\nCODE:\n```\nProject, MANAGE_PROPERTIES\n```\n\n----------------------------------------\n\nTITLE: Retrieving Repository-Level Advanced Security Meter Usage Details via REST API\nDESCRIPTION: This HTTP GET request retrieves detailed user identity information for Advanced Security meter usage for a specific repository within an Azure DevOps project. Replace {organization}, {project}, and {repository} with the actual names. Requires appropriate permissions and uses API version 7.2-preview.1.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/ghazdo/sprint-243-update.md#2025-04-22_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nGET `https://advsec.dev.azure.com/{organization}/{project}/_apis/management/repositories/{repository}/meterUsageEstimate/details?api-version=7.2-preview.1`\n```\n\n----------------------------------------\n\nTITLE: Release Pipeline Authorization Scope - Azure DevOps 2020\nDESCRIPTION: Job authorization scope information for classic release pipelines in Azure DevOps Server 2020 and earlier versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/access-tokens.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nClassic release pipelines in Azure DevOps Server 2020 and below run with **collection** scope.\n```\n\n----------------------------------------\n\nTITLE: Defining and Using Different Parameter Types in Azure DevOps Pipelines YAML\nDESCRIPTION: A comprehensive example showing how to define and use various parameter types (string, multi-string with allowed values, number with allowed values, boolean, object, step, and stepList) in an Azure DevOps pipeline template. The example demonstrates parameter definition syntax and how to reference parameters in jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/parameter-data-types.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: myString  # Define a parameter named 'myString'\n  type: string  # The parameter type is string\n  default: a string  # Default value is 'a string'\n\n- name: myMultiString  # Define a parameter named 'myMultiString'\n  type: string  # The parameter type is string\n  default: default  # Default value is 'default'\n  values:  # Allowed values for 'myMultiString'\n  - default  \n  - ubuntu  \n\n- name: myNumber  # Define a parameter named 'myNumber'\n  type: number  # The parameter type is number\n  default: 2  # Default value is 2\n  values:  # Allowed values for 'myNumber'\n  - 1  \n  - 2  \n  - 4  \n  - 8  \n  - 16  \n\n- name: myBoolean  # Define a parameter named 'myBoolean'\n  type: boolean  # The parameter type is boolean\n  default: true  # Default value is true\n\n- name: myObject  # Define a parameter named 'myObject'\n  type: object  # The parameter type is object\n  default:  # Default value is an object with nested properties\n    foo: FOO  # Property 'foo' with value 'FOO'\n    bar: BAR  # Property 'bar' with value 'BAR'\n    things:  # Property 'things' is a list\n    - one  \n    - two  \n    - three  \n    nested:  # Property 'nested' is an object\n      one: apple  # Property 'one' with value 'apple'\n      two: pear  # Property 'two' with value 'pear'\n      count: 3  # Property 'count' with value 3\n\n- name: myStep  # Define a parameter named 'myStep'\n  type: step  # The parameter type is step\n  default:  # Default value is a step\n    script: echo my step \n\n- name: mySteplist  # Define a parameter named 'mySteplist'\n  type: stepList  # The parameter type is stepList\n  default:  # Default value is a list of steps\n    - script: echo step one  \n    - script: echo step two  \n\ntrigger: none  \n\njobs: \n- job: stepList  # Define a job named 'stepList'\n  steps: ${{ parameters.mySteplist }}  # Use the steps from the 'mySteplist' parameter\n\n- job: myStep  # Define a job named 'myStep'\n  steps:\n    - ${{ parameters.myStep }}  # Use the step from the 'myStep' parameter\n```\n\n----------------------------------------\n\nTITLE: Defining Read-Only Pipeline Variable - Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to declare a user-defined pipeline variable as read-only in Azure Pipelines. The 'readonly: true' attribute ensures the variable cannot be modified during pipeline execution, enhancing security. This feature requires Azure Pipelines YAML configuration and does not have external dependencies beyond the Azure Pipelines environment; 'myVar' is set to 'myValue' and is protected from further modification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-164-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: myVar\n  value: myValue\n  readonly: true\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Runs by Pipeline Name in Power BI\nDESCRIPTION: Power BI query that retrieves pipeline runs for a specific pipeline name from a specified start date, aggregating counts of different outcomes including succeeded, failed, partially succeeded, and canceled runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-outcome-summary.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\") \"\n        &\"/aggregate( \"\n        &\"$count as TotalCount, \"\n            &\"SucceededCount with sum as SucceededCount , \"\n                &\"FailedCount with sum as FailedCount, \"\n                &\"PartiallySucceededCount with sum as PartiallySucceededCount , \"\n            &\"CanceledCount with sum as CanceledCount \"\n                &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Running witadmin Command to Export a Work Item Type Definition\nDESCRIPTION: This command exports the XML definition of a work item type to a file or displays it in the Command Prompt window. It can optionally include global list definitions referenced by the work item type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin exportwitd /collection:CollectionURL /p:Project /n:TypeName [/f:FileName] [/e:Encoding] [/exportgloballists]\n```\n\n----------------------------------------\n\nTITLE: Configuring ReviewApp in Azure Pipelines Environment YAML\nDESCRIPTION: This YAML snippet shows how to set up a ReviewApp in an Azure Pipelines environment. It demonstrates creating a dynamic environment resource for each pull request, allowing reviewers to see changes before merging into the main branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-160-update.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment:\n  environment: \n     name: smarthotel-dev      \n     resourceName: $(System.PullRequest.PullRequestId) \n  pool:\n    name: 'ubuntu-latest'\n  strategy:                 \n    runOnce:            \n      pre-deploy: \n        steps:       \n        - reviewApp: MainNamespace\n```\n\n----------------------------------------\n\nTITLE: Combined Keyword and Phrase Search in Azure DevOps\nDESCRIPTION: This example illustrates combining a keyword search and a phrase search in Azure DevOps. The query `feature \"Getting Started\"` finds work items that contain both the keyword 'feature' and the exact phrase 'Getting Started' in their Title, Description, or Repro Steps fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_9\n\nLANGUAGE: azure-devops-search\nCODE:\n```\nfeature \"Getting Started\"\n```\n\n----------------------------------------\n\nTITLE: Committing Changes to Local Git Repository\nDESCRIPTION: Command to commit staged changes to your local Git repository. This creates a new commit object with your changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ngit commit\n```\n\n----------------------------------------\n\nTITLE: TFVC Code Keyboard Shortcuts Table\nDESCRIPTION: Markdown table defining keyboard shortcuts for TFVC code navigation and management\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/code-shortcuts.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|e|Open Files|\n|c|Open changesets|\n|v|Open shelvesets|\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Work Item Created Event in Azure DevOps\nDESCRIPTION: JSON payload structure for the workitem.created event in Azure DevOps. Includes detailed information about the newly created work item, including its fields, links, and project context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_31\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"eventType\": \"workitem.created\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Bug #5 (Some great new idea!) created by Jamal Hartnett.\\r\\n(https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000)\",\n    \"html\": \"<a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=74e918bf-3376-436d-bd20-8e8c1287f465&amp;id=5\\\">Bug #5</a> (Some great new idea!) created by Jamal Hartnett.\",\n    \"markdown\": \"[Bug #5](https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000) (Some great new idea!) created by Jamal Hartnett.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Bug #5 (Some great new idea!) created by Jamal Hartnett.\\r\\n(https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000)\\r\\n\\r\\n- Area: FabrikamCloud\\r\\n- Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1\\r\\n- State: New\\r\\n- Assigned to: \\r\\n- Comment: \\r\\n- Severity: 3 - Medium\\r\\n\",\n    \"html\": \"<a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=74e918bf-3376-436d-bd20-8e8c1287f465&amp;id=5\\\">Bug #5</a> (Some great new idea!) created by Jamal Hartnett.<ul>\\r\\n- Area: FabrikamCloud</br>\\r\\n- Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1</br>\\r\\n- State: New</br>\\r\\n- Assigned to: </br>\\r\\n- Comment: </br>\\r\\n- Severity: 3 - Medium</br></ul>\",\n    \"markdown\": \"[Bug #5](https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000) (Some great new idea!) created by Jamal Hartnett.\\r\\n\\r\\n* Area: FabrikamCloud\\r\\n* Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1\\r\\n* State: New\\r\\n* Assigned to: \\r\\n* Comment: \\r\\n* Severity: 3 - Medium\\r\\n\"\n  },\n  \"resource\": {\n    \"id\": 5,\n    \"rev\": 1,\n    \"fields\": {\n      \"System.AreaPath\": \"FabrikamCloud\",\n      \"System.TeamProject\": \"FabrikamCloud\",\n      \"System.IterationPath\": \"FabrikamCloud\\\\Release 1\\\\Sprint 1\",\n      \"System.WorkItemType\": \"Bug\",\n      \"System.State\": \"New\",\n      \"System.Reason\": \"New defect reported\",\n      \"System.CreatedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.CreatedBy\": \"Jamal Hartnett\",\n      \"System.ChangedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.ChangedBy\": \"Jamal Hartnett\",\n      \"System.Title\": \"Some great new idea!\",\n      \"Microsoft.Azure DevOps Services.Common.Severity\": \"3 - Medium\",\n      \"WEF_EB329F44FE5F4A94ACB1DA153FDF38BA_Kanban.Column\": \"New\"\n    },\n    \"_links\": {\n      \"self\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5\"\n      },\n      \"workItemUpdates\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/updates\"\n      },\n      \"workItemRevisions\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/revisions\"\n      },\n      \"workItemType\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/ea830882-2a3c-4095-a53f-972f9a376f6e/workItemTypes/Bug\"\n      },\n      \"fields\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/fields\"\n      }\n    },\n    \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:29.7688022Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Shelvesets Command Syntax\nDESCRIPTION: The primary syntax for the shelvesets command in Team Foundation Version Control. It allows viewing information about shelved changes with options for specifying owner, format, collection URL, and authentication credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/shelvesets-command.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntf shelvesets [/owner:ownername] [/format:(brief|detailed)] [/collection:TeamProjectCollectionUrl]] [/login:username,[password]] shelvesetname\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Security Namespace Documentation\nDESCRIPTION: Documentation structure in markdown format defining the schema and explanation of security namespaces in Azure DevOps. Contains metadata about the document including title, description, author information, and version compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Namespace reference  \ntitleSuffix: Azure DevOps\ndescription: Learn about the security namespaces used to manage access control in Azure DevOps, including associated permissions and detailed information.\nms.subservice: azure-devops-security\nms.custom: quarterly-review\nms.topic: reference\nms.author: chcomley\nauthor: chcomley\nmonikerRange: '<= azure-devops'\nms.date: 11/18/2024  \n---\n```\n\n----------------------------------------\n\nTITLE: Using Build.BuildId Variable in Azure DevOps Pipelines\nDESCRIPTION: Provides the unique ID of the record for the completed build. This variable is not available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_2\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.BuildId\n```\n\n----------------------------------------\n\nTITLE: Listing Banners in Table Format with Azure CLI in Azure DevOps\nDESCRIPTION: This command demonstrates how to list banners in a table format using the Azure CLI, providing a more readable output for quick overview of banner information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-banners.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops admin banner list --output table\n```\n\n----------------------------------------\n\nTITLE: Filtering by Month Start Date Offset with @StartOfMonth Macro - WIQL\nDESCRIPTION: This snippet uses @StartOfMonth-3 in the WHERE clause to select work items created since three months ago. It illustrates how WIQL enables flexible dynamic date queries for rolling windows. Dependencies are limited to WIQL and macro support.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_15\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE  \n   [Microsoft.VSTS.Common.CreatedDate] >= @StartOfMonth-3\n```\n\n----------------------------------------\n\nTITLE: Configuring Project-Specific Widget Settings in JSON\nDESCRIPTION: Example of how a widget instance can declare its settings as project-specific by setting hasCrossProjectSettings to false, making these settings available to non-member users in public projects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/public-project.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"hasCrossProjectSettings\": false,\n    \"hypotheticalWidgetOption\": true,\n    \"backlogLevel\": \"Stories\"\n}\n```\n\n----------------------------------------\n\nTITLE: Project URL Structure in Azure DevOps\nDESCRIPTION: Example URL format for accessing an Azure DevOps project, showing the organization and project name placeholders.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/look-up-project-administrators.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}/{Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Validating Collection from Non-Server Machine for Azure DevOps Migration\nDESCRIPTION: Command to validate a collection for migration from a machine other than the Azure DevOps Server, using a connection string to the configuration database.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_3\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator validate /collection:http://fabrikam:8080/DefaultCollection /tenantDomainName:fabrikam.OnMicrosoft.com /region:{region} /connectionString:\"Data Source=fabrikam;Initial Catalog=Configuration;Integrated Security=True\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Default Roles Table for Library Security in Markdown\nDESCRIPTION: This code snippet uses Markdown syntax to create a table showing default roles for library security in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/policies/permissions.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Group | Role |\n|-|-|\n| [*project name*]\\Project Administrators | Administrator |\n| [*project name*]\\Build Administrators | Administrator |\n| [*project name*]\\Project Valid Users | Reader |\n| [*project name*]\\Contributors | Creator (project-level) Reader (object-level) |\n| [*project name*]\\Release Administrators | Administrator |\n| *project name* Build Service (*collection or organization name*) | Reader |\n```\n\n----------------------------------------\n\nTITLE: VSS.init Method Syntax\nDESCRIPTION: Method signature for initializing the VSS SDK with options. Used to establish communication with the host window.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/extend/reference/client/api/vss/sdk/vss_sdk/VSS.md#2025-04-22_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nvoid VSS.init(options)\n```\n\n----------------------------------------\n\nTITLE: Displaying Version Control System Compatibility Table in Markdown\nDESCRIPTION: A markdown table showing the compatibility of different version control systems with Azure Pipelines (YAML and classic editor) and Azure DevOps Server versions. It includes information on Azure Repos Git, Azure Repos TFVC, GitHub, GitHub Enterprise Server, Bitbucket Cloud, Bitbucket Server, and Subversion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/index.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Repository type | Azure Pipelines (YAML) | Azure Pipelines (classic editor) | Azure DevOps Server 2022, 2020, 2019 |\n|---|---|---|---|\n| [Azure Repos Git](azure-repos-git.md) | Yes | Yes | Yes |\n| [Azure Repos TFVC](tfvc.md) | No | Yes | Yes |\n| [GitHub](github.md) | Yes | Yes | No |\n| [GitHub Enterprise Server](github-enterprise.md) | Yes | Yes | Yes |\n| [Bitbucket Cloud](bitbucket.md) | Yes | Yes | No |\n| [Bitbucket Server](on-premises-bitbucket.md) | No | Yes | Yes |\n| Subversion | No | Yes | Yes |\n```\n\n----------------------------------------\n\nTITLE: Configuring Stateless Agent using ARM Template\nDESCRIPTION: ARM template configuration for setting up a stateless agent in a Managed DevOps Pool. This ensures a fresh agent for each job execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                \"agentProfile\": {\n                    \"kind\": \"Stateless\"\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Agent Pool Path\nDESCRIPTION: Navigation path to check agent status in Azure DevOps portal\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/troubleshooting-autologon.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n<Azure DevOps organization> / <Project> / Settings / Agent pools / <Agent Pool> / Agents\n```\n\n----------------------------------------\n\nTITLE: Using Template Expressions in YAML Pipelines\nDESCRIPTION: These examples demonstrate two ways to use template expressions in YAML pipelines. The first shows a parameter being used as an entire property value, while the second shows the new capability to use parameters inline within a string.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-142-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: msbuild@1\n  inputs:\n    solution: ${{ parameters.solution }}\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- script: echo The solution file is ${{ parameters.solution }}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Pipeline Documentation\nDESCRIPTION: This document outlines various improvements and features in Azure DevOps pipelines, including deployment center updates, CI triggers for new branches, Terraform integration, Google Analytics integration, pipeline caching, and CLI enhancements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-155-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Improvements to the Deployment Center for WebApp in the Azure portal\\n\\nWe've improved the Deployment Center for WebApp in the Azure portal with support for pipelines with multiple artifacts.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### CI triggers for new branches\\n\\nIt has been a long pending request to not trigger CI builds when a new branch is created and when that branch doesn't have changes.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### Terraform integration with Azure Pipelines\\n\\nTerraform is an open-source tool for developing, changing and versioning infrastructure safely and efficiently.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### Integration with Google Analytics\\n\\nThe Google Analytics experiments framework lets you test almost any change or variation to a website or app to measure its impact on a specific objective.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### Pipeline caching (public preview)\\n\\nPipeline caching lets you save the results of a long-running operation, like a package restore or a dependency compilation.\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Reference Links in Markdown\nDESCRIPTION: Markdown formatted list of links to Azure CLI reference documentation for different Azure DevOps services components\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/quick-reference.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [az artifacts](/cli/azure/azure-cli-reference-for-devops#azure-artifacts)\n- [az boards](/cli/azure/azure-cli-reference-for-devops#azure-boards)\n- [az devops](/cli/azure/azure-cli-reference-for-devops#azure-devops-organizations)\n- [az pipelines](/cli/azure/azure-cli-reference-for-devops#azure-pipelines)\n- [az repos](/cli/azure/azure-cli-reference-for-devops#azure-repos)\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Organization URL\nDESCRIPTION: This code snippet demonstrates the format for accessing an Azure DevOps organization's URL. It includes a placeholder for the organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/set-services.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```https://dev.azure.com/{Your_Organization}```\n```\n\n----------------------------------------\n\nTITLE: Promoting All Items Including Ignored with TFVC Reconcile\nDESCRIPTION: Promotes all items, including those ignored by version control, except for a specified file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/reconcile-command.md#2025-04-22_snippet_5\n\nLANGUAGE: Batch\nCODE:\n```\ntf reconcile /promote /noignore /exclude:myLib.dll\n```\n\n----------------------------------------\n\nTITLE: Example Witadmin Command for Importing ServiceApp WIT\nDESCRIPTION: Specific example of a witadmin command that imports the ServiceApp work item type definition to a TFS project, showing the actual syntax with server and file path parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-portfolio-backlogs.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nwitadmin importwitd /collection:\"http://MyServer:8080/tfs/DefaultCollection\"/p:MyProject /f:\"DirectoryPath/ServiceApp.xml\"\n```\n\n----------------------------------------\n\nTITLE: Constructing OData URL with Project Name for Azure DevOps Analytics\nDESCRIPTION: Alternative OData feed URL format that includes project name to filter results to a specific project across all related entities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/access-analytics-excel.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/\n```\n\n----------------------------------------\n\nTITLE: Querying Lead and Cycle Time for User Stories by Team Name in Power BI\nDESCRIPTION: Power BI query that retrieves completed user stories filtered by multiple team names with their lead time and cycle time metrics from Azure DevOps Analytics. This version filters by team rather than area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-leadcycletime.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'User Story' \"\n            &\"and StateCategory eq 'Completed' \"\n            &\"and CompletedDate ge {startdate} \"\n            &\"and (Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) or Teams/any(x:x/TeamName eq '{teamname}) \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,Priority,AreaSK \"\n            &\",CycleTimeDays,LeadTimeDays,CompletedDateSK \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Configuring NPM Registry with Upstream Sources\nDESCRIPTION: Example .npmrc configuration file that references a single feed with upstream sources enabled for deterministic package restoration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/concepts/upstream-sources.md#2025-04-22_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nregistry=https://pkgs.dev.azure.com/fabrikam/_packaging/FabrikamFiber/npm/registry/\nalways-auth=true\n```\n\n----------------------------------------\n\nTITLE: Applying MATCH Rule to String Field in XML\nDESCRIPTION: This XML code shows how to use the MATCH element to enforce a specific pattern for values entered in a String field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_8\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"MyCorp.GitHubURL\" name=\"GitHub URL\" type=\"String\">\n   <MATCH pattern=\"https:\\/\\/github\\.com\\/\\S+[\\.md|\\.yml]$\"/>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Listing All Changes in a Specific Folder\nDESCRIPTION: Example showing how to list all pending changes to items within a specific folder by using a wildcard in the itemspec parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/status-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf stat SolutionA\\*\n```\n\n----------------------------------------\n\nTITLE: Release Management Permissions Table in Markdown\nDESCRIPTION: A markdown table showing the permission matrix for release management tasks across different user roles. Uses checkmark emojis to indicate allowed permissions for each role.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/pipelines-release.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Task | Stakeholders | Readers | Contributors | Project Admins | Release Admins |\n|------|:------------:|:-------:|:------------:|:--------------:|:--------------:|\n| Approve releases  |✔️| |✔️|✔️|✔️|\n| View releases     |✔️|✔️|✔️|✔️|✔️|\n| View release pipeline  | |✔️|✔️|✔️|✔️|\n| Administer release permissions   | | | |✔️|✔️|\n| Delete release pipeline or stage | | |✔️|✔️|✔️|\n| Delete releases                  | | |✔️|✔️|✔️|\n| Edit release pipeline            | | | ✔️|✔️|✔️|\n| Edit release stage               | | |✔️|✔️|✔️|\n| Manage deployments               | | | ✔️|✔️|✔️|\n| Manage release approvers         | | |✔️|✔️|✔️|\n| Manage releases                  | | |✔️|✔️|✔️|\n```\n\n----------------------------------------\n\nTITLE: Finding Git Commit IDs\nDESCRIPTION: Command to display git commit history with abbreviated commit IDs using the --oneline flag. Shows commits in reverse chronological order starting from the specified branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/undo.md#2025-04-22_snippet_5\n\nLANGUAGE: console\nCODE:\n```\ngit log --oneline <branch>\n```\n\n----------------------------------------\n\nTITLE: Default Name Filters in TFVC Folder Comparison\nDESCRIPTION: The default set of name filters used for folder comparison in Team Foundation Version Control. These filters exclude common binary and temporary files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/folder-comparison-filters.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n!*.pdb;!*.obj;!*.dll;!*.exe;!*.res;!*.resources;!*.cache;!*.ilk;!*.ncb;!obj\\;!objd\\;!bin\\\n```\n\n----------------------------------------\n\nTITLE: Tag Query Operators\nDESCRIPTION: Operators used for querying work items based on tags\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/feature-matrix-filter-queries.md#2025-04-22_snippet_1\n\nLANGUAGE: WIQL\nCODE:\n```\nContains\nDoes Not Contain\n```\n\n----------------------------------------\n\nTITLE: Adding Remote Repository in Xcode\nDESCRIPTION: Instructions for connecting a local Xcode Git repository to Azure Repos by adding a remote using the repository's clone URL and authenticating with personal access tokens.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-xcode.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Committing Changes in Git\nDESCRIPTION: This Git command commits all changed files with a specified commit message. The -a flag stages all modified files, and -m provides the commit message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-new-repo.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -a -m \"My first commit\"\n```\n\n----------------------------------------\n\nTITLE: Registering Deployment Agent on Target Servers with PowerShell\nDESCRIPTION: A PowerShell script is generated for registering target servers in a deployment group. The script installs the deployment agent and allows users to assign tags that can limit deployments to specific servers. The script must be run with administrative privileges on each target machine.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deployment-groups/index.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nService vstsagent.{organization-name}.{computer-name} started successfully\n```\n\n----------------------------------------\n\nTITLE: Sample Diagnostic Log Entry in JSON\nDESCRIPTION: This snippet shows an example of a diagnostic log entry for a provisioning event in Managed DevOps Pools. It includes details such as timestamp, resource ID, location, category, operation name, and various properties related to the provisioning process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/diagnostics.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"time\": \"2024-07-15T17:23:42.0302794Z\",\n    \"resourceId\": \"/SUBSCRIPTIONS/SUBSCRIPTION_ID_PLACEHOLDER/RESOURCEGROUPS/FABRIKAM-POOLS/PROVIDERS/MICROSOFT.DEVOPSINFRASTRUCTURE/POOLS/FABRIKAM_POOL\",\n    \"location\": \"eastus\",\n    \"category\": \"ProvisioningLogs\",\n    \"operationName\": \"Provision\",\n    \"properties\": {\n        \"RequestId\": \"RequestId_Placeholder\",\n        \"AgentName\": \"7ec0d355c\",\n        \"Image\": \"/canonical/0001-com-ubuntu-server-focal/20_04-lts-gen2/20.04.202407040\",\n        \"Sku\": \"Standard_D2ads_v5\",\n        \"Status\": \"Completed\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Example On-Premises Query URL\nDESCRIPTION: Example of an encoded query URL for on-premises Azure DevOps Server that lists bugs in a specific area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/using-queries.md#2025-04-22_snippet_7\n\nLANGUAGE: txt\nCODE:\n```\nhttp://fabrikam:8080/tfs/DefaultCollection/FabrikamFiber/_workitems?_a=query&wiql=SELECT%20%5BSystem.ID%5D%2C%20%5BSystem.Title%5D%2C%20%5BSystem.State%5D%20FROM%20WorkItems%20WHERE%20%5BSystem.TeamProject%5D%3D'FabrikamFiber'%20AND%20%5BSystem.WorkItemType%5D%3D'Bug'%20AND%20%5BSystem.AreaPath%5D%3D'FabrikamFiber%5CWeb'%20%20\n```\n\n----------------------------------------\n\nTITLE: Defining FORM Layout for Web and Client Views in XML\nDESCRIPTION: This XML snippet shows the structure of the FORM section, which contains separate Layout and WebLayout elements for defining the form layout in client applications and web browsers respectively.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/customize-wit-form.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<FORM>\n   <Layout HideReadOnlyEmptyFields=\"true\" HideControlBorders=\"true\">\n       . . .  \n   </Layout>\n   <WebLayout>\n       . . .  \n   </WebLayout>\n</FORM>\n```\n\n----------------------------------------\n\nTITLE: Setting Default Azure Subscription in Azure CLI\nDESCRIPTION: Command to set the default Azure subscription for subsequent CLI commands. This is required before creating Azure resources like Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-in-own-project.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription <your_subscription_name_or_subscription_ID>\n```\n\n----------------------------------------\n\nTITLE: Reading Service Hooks Scope (`vso.hooks`)\nDESCRIPTION: Grants the ability to read service hook subscriptions and metadata, including supported events, consumers, and actions. (No longer public.) Depends on `vso.profile`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n`vso.hooks`\n```\n\n----------------------------------------\n\nTITLE: User Impersonation Scope (`user_impersonation`)\nDESCRIPTION: Have full access to Visual Studio Team Services REST APIs. Requires full access. **Request and/or consent this scope with caution as it is very powerful!**\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_34\n\nLANGUAGE: text\nCODE:\n```\n`user_impersonation`\n```\n\n----------------------------------------\n\nTITLE: Document Retrieval API Endpoint\nDESCRIPTION: REST API endpoint for retrieving a specific document by key from the settings collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_11\n\nLANGUAGE: httprequest\nCODE:\n```\nGET _apis/ExtensionManagement/InstalledExtensions/{publisherName}/{extensionName}/Data/Scopes/User/Me/Collections/%24settings/Documents/myKey\n```\n\n----------------------------------------\n\nTITLE: Mapping Workflow States to State Categories in XML for Scrum Product Backlog\nDESCRIPTION: This snippet demonstrates how to map workflow states to state categories for a Scrum product backlog. It defines how states like 'New', 'Approved', 'Committed', and 'Done' are categorized as 'Proposed', 'InProgress', or 'Complete' for proper backlog and task board display.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<RequirementBacklog category=\"Microsoft.RequirementCategory\" pluralName=\"Backlog items\" singularName=\"Backlog item\">\n      <States>\n      <State value=\"New\" type=\"Proposed\" />\n      <State value=\"Approved\" type=\"Proposed\" />\n      <State value=\"Committed\" type=\"InProgress\" />\n      <State value=\"Done\" type=\"Complete\" />\n      </States>\n . . .\n</RequirementBacklog>\n```\n\n----------------------------------------\n\nTITLE: Listing Git Repositories with Hidden Wikis in Azure DevOps\nDESCRIPTION: HTTP GET request to retrieve all git repositories including hidden wiki repositories using the Azure DevOps REST API. Uses the includeHidden parameter to show wiki repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/restore-deleted-wiki.md#2025-04-22_snippet_0\n\nLANGUAGE: HTTP\nCODE:\n```\nGET https://dev.azure.com/christiechurch/fabrikamfiber/_apis/git/repositories?includeHidden=true&api-version=7.1-preview.1\n```\n\nLANGUAGE: REST API\nCODE:\n```\n        {\n            \"id\": \"978e3886-64a8-4b6f-96da-6afc2936b04b\",\n            \"name\": \"fabrikamfiber.wiki\",\n            \"url\": https://dev.azure.com/christiechurch/052a83ac-af70-4194-b53f-df073e5f1786/_apis/git/repositories/978e3886-64a8-4b6f-96da-6afc2936b04b,\n            \"project\": {\n                \"id\": \"052a83ac-af70-4194-b53f-df073e5f1786\",\n                \"name\": \"fabrikamfiber\",\n                \"url\": https://dev.azure.com/christiechurch/_apis/projects/052a83ac-af70-4194-b53f-df073e5f1786,\n                \"state\": \"wellFormed\",\n                \"revision\": 421800049,\n                \"visibility\": \"organization\",\n                \"lastUpdateTime\": \"2023-07-18T12:25:29.3Z\"\n            },\n            \"defaultBranch\": \"refs/heads/wikiMaster\",\n            \"size\": 193,\n            \"remoteUrl\": https://dev.azure.com/christiechurch/fabrikamfiber/_git/fabrikamfiber.wiki,\n            \"sshUrl\": git@ssh.dev.azure.com:v3/christiechurch/fabrikamfiber/fabrikamfiber.wiki,\n            \"webUrl\": https://dev.azure.com/christiechurch/fabrikamfiber/_git/fabrikamfiber.wiki,\n            \"isDisabled\": false,\n            \"isInMaintenance\": false\n        }\n```\n\n----------------------------------------\n\nTITLE: Filtering WorkItems by Project\nDESCRIPTION: OData query example demonstrating how to restrict the query to specific projects by using the ProjectSK filter, ensuring the query only accesses data the user has permission to view.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=ProjectSK eq {projectSK1} or ProjectSK eq {projectSK2}\n  &$select=WorkItemId, Title\n```\n\n----------------------------------------\n\nTITLE: Including Sprint Update Content with Markdown Includes\nDESCRIPTION: Markdown include directives used to compose the sprint update documentation by importing content fragments for links, updates, next steps and signature block.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-156-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-156-update-links](../includes/boards/sprint-156-update-links.md)]\n\n[!INCLUDE [sprint-156-update](../includes/boards/sprint-156-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n\n[!INCLUDE [sprint-156](../includes/signer/sprint-156.md)]\n```\n\n----------------------------------------\n\nTITLE: Listing Available TFVC Commands\nDESCRIPTION: Example showing how to list all available Team Foundation Version Control commands using 'tf vc help'. This displays a comprehensive list of all TFVC commands with brief descriptions of their functionality.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/help-command-team-foundation-version-control.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n>tf vc help\nMicrosoft (R) TF - Team Foundation Version Control Tool, Version 16.171.31930.1\nCopyright (c) Microsoft Corporation.  All rights reserved.\n\nType tf vc help <command name> for command line description.\nType tf msdn <command name> for full documentation in https://learn.microsoft.com.\n\nCommands:\ntf vc add            Adds new files and folders from a local file system\n                     location to TFVC.\n\ntf vc branch         Copies an item or set of items, including metadata and\n                     version control history, from one location to another on\n                     the Azure DevOps server and in the workspace.\n\ntf vc branches       Displays the history of a branch for a specified file\n                     or folder.\n\ntf vc changeset      Displays information about a changeset and lets you\n                     change the associated attributes, such as comments and\n                     check-in notes.\n\ntf vc checkin        Commits pending changes in the current workspace to TFVC.\n\ntf vc checkout       Makes the local file writable and changes its pending\n                     Change status to \"edit\" in the workspace. Edit is an\n                     alias for the checkout command.\n\ntf vc certificates   Configures how client authentication certificates are\n                     used when connecting to Azure DevOps through a secure connection.\n\ntf vc configure      Enables an administrator to view and change the following\n                     configuration settings for a team project in the Source\n                     Control Settings dialog box:\n                     - Check-out settings\n                     - Check-in policies\n                     - Check-in notes\n\ntf vc delete         Removes files and folders from TFVC\n                     and deletes them from the disk.\n\ntf vc destroy        Destroys, or permanently deletes, version-controlled\n                     files from TFVC.\n\ntf vc diff           Compares, and if it is possible, displays differences\n                     between two files, files in two folders, or a shelveset\n                     and a local or server file.\n\ntf vc dir            Displays all or part of the contents of TFVC.\n\ntf vc folderdiff     Display a visual representation of the differences between\n                     files in two server folders, in a server folder and a\n                     local folder, or in two local folders.\n\ntf vc get            Retrieves a read-only copy of a file from Azure DevOps\n                     Server to the workspace and creates folders on disk to\n                     contain it.\n\ntf vc history        Displays the revision history for one or more files and\n                     folders.\n\ntf vc info           Displays information about items under version control.\n\ntf vc label          Attaches a label to or removes a label from a version of a\n                     file or folder in TFVC.\n\ntf vc labels         Displays the list of labels in TFVC.\n\ntf vc localversions  Displays the version of one or more items in a workspace.\n\ntf vc lock           Locks or unlocks a file or folder to deny or restore the\n                     permissions of users to check out an item for edit into\n                     a different workspace or to check in pending changes to\n                     an item from a different workspace.\n\ntf vc merge          Applies changes from one branch into another.\n\ntf vc merges         Displays detailed information about past merges between\n                     the specified source and destination branches.\n\ntf vc msdn           Displays the https://learn.microsoft.com documentation\n                     page for the command.\n\ntf vc permission     Modifies the user access control list (ACL) and displays\n                     authorization settings for an item under version control.\n\ntf vc property       Displays and pends changes on properties associated with\n                     items under version control.\n\ntf vc reconcile      Compares the current state of the workspace on disk with\n                     the server's view, either to clean the workspace or to\n                     promote unpended local changes.\n\ntf vc rename         Changes the name or the path of a file or folder. You\n                     can use the rename command or the alias Move to move a\n                     file or folder to a new location.\n\ntf vc resolve        Resolves conflicts between changed items in your\n                     workspace and the latest or destination versions of items\n                     on the server.\n\ntf vc resolvePath    Resolves a server path to a local path in your workspace.\n\ntf vc rollback       Rolls back the changes in a single or a range of\n                     changesets.\n\ntf vc shelve         Stores a set of pending changes, together with pending\n                     check-in notes, a comment, and a list of associated work\n                     items in Azure DevOps Server without actually checking\n                     them into the version control server.\n\ntf vc shelvesets     Displays information about a set of shelved changes.\n\ntf vc status         Displays information about pending changes to items in\n                     one or more workspaces.\n\ntf vc undelete       Restores items that were previously deleted.\n\ntf vc undo           Removes pending changes from a workspace.\n\ntf vc unlabel        Removes an item from an existing label in Team Foundation\n                     version control.\n\ntf vc unshelve       Restores shelved file revisions, check-in notes, comments,\n                     and work item associations to the current workspace or\n                     removes an existing shelveset from the server.\n\ntf vc view           Retrieves a specific version of a file to a temporary\n                     folder on your computer and displays it.\n\ntf vc workfold       Creates, modifies, or displays information about the\n                     mappings between your workspace folders and the TFVC\n                     folders.\n\ntf vc workspace      Creates, deletes, displays, or modifies properties and\n                     mappings associated with a workspace.\n\ntf vc workspaces     Displays information about workspaces in the system and\n                     updates cached information about a user name or computer\n                     name change on Azure DevOps Server.\n```\n\n----------------------------------------\n\nTITLE: Using the Azure Repos Subscribe Command in Microsoft Teams\nDESCRIPTION: Command syntax for subscribing to repository events in Microsoft Teams using the Azure Repos app. This command creates a default subscription for either Git or TFVC repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-teams.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n@azure repos subscribe [project url]\n```\n\n----------------------------------------\n\nTITLE: Configuring IP V6 Ranges for Azure DevOps ExpressRoute Connections\nDESCRIPTION: List of IP V6 addresses that need to be allowed for both outbound and inbound connections when using ExpressRoute with Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_4\n\nLANGUAGE: IP V6 ranges\nCODE:\n```\n2620:1ec:a92::175/128\n2620:1ec:a92::176/128\n2620:1ec:a92::183/128\n2620:1ec:4::175/128\n2620:1ec:4::176/128\n2620:1ec:4::183/128\n2620:1ec:21::18/128\n2620:1ec:21::19/128\n2620:1ec:21::20/128\n2620:1ec:22::18/128\n2620:1ec:22::19/128\n2620:1ec:22::20/128\n2603:1061:10::14/128\n2603:1061:10::15/128\n2603:1061:10::16/128\n2603:1061:10:1::14/128\n2603:1061:10:1::15/128\n2603:1061:10:1::16/128\n2603:1061:10:2::14/128\n2603:1061:10:2::15/128\n2603:1061:10:2::16/128\n2603:1061:10:3::14/128\n2603:1061:10:3::15/128\n2603:1061:10:3::16/128\n2620:1ec:50::17/128\n2620:1ec:50::18/128\n2620:1ec:50::19/128\n2620:1ec:51::17/128\n2620:1ec:51::18/128\n2620:1ec:51::19/128\n```\n\n----------------------------------------\n\nTITLE: Case-Insensitive Tag Filtering in OData\nDESCRIPTION: Query that demonstrates case-insensitive tag filtering. All string comparisons in Analytics are case-insensitive by default, eliminating the need for tolower or toupper functions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_27\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=Tags/any(t:t/TagName eq 'quality')\n  &$select=WorkItemId, Title, State, TagNames\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization URL Format\nDESCRIPTION: Shows the URL format for accessing an Azure DevOps organization, where {Your_Organization} is replaced with the organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/sign-in-github-account.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}\n```\n\n----------------------------------------\n\nTITLE: Workfold Command Syntax for Server Folder with Collection\nDESCRIPTION: Syntax for working with a server folder mapping while specifying the team project collection URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ntf workfold [/collection:<team-project-collection-url>] [/workspace:<workspace-name>] [/login:<username>,[<password>]]\n<server-folder>\n```\n\n----------------------------------------\n\nTITLE: Extracting Azure Pipelines Agent using PowerShell\nDESCRIPTION: PowerShell commands to create an 'agent' directory, change the current directory into it, and then extract the contents of the previously downloaded agent zip file (specified by `<FILE_PATH>`) into the newly created agent directory (`$PWD`).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_5\n\nLANGUAGE: PowerShell\nCODE:\n```\nmkdir agent ; cd agent\nAdd-Type -AssemblyName System.IO.Compression.FileSystem ; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"<FILE_PATH>\", \"$PWD\")\n```\n\n----------------------------------------\n\nTITLE: Setting Azure DevOps API Version\nDESCRIPTION: Specifies the API version parameter for Azure DevOps REST API calls. The version number 1.0 indicates this is using the base API version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\napi-version = 1.0\n```\n\n----------------------------------------\n\nTITLE: URL Pattern for OAuth Callback\nDESCRIPTION: Example format for the OAuth callback URL when registering Azure DevOps as an OAuth application in GitHub Enterprise Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/connect-to-github.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n{Azure DevOps Services Organization URL}/_admin/oauth2/callback\n```\n\n----------------------------------------\n\nTITLE: Template Context Usage in Azure Pipelines\nDESCRIPTION: Shows how to use templateContext to pass properties to stages, steps, and jobs in templates. Includes example of conditional job execution based on HTTP response codes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-parameters.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n#testing-template.yml\n\nparameters: \n- name: testSet\n  type: jobList\n\njobs:\n- ${{ each testJob in parameters.testSet }}:  # Iterate over each job in the 'testSet' parameter\n  - ${{ if eq(testJob.templateContext.expectedHTTPResponseCode, 200) }}: # Check if the HTTP response is 200\n    - job:\n      steps: \n      - powershell: 'Invoke-RestMethod -Uri https://blogs.msdn.microsoft.com/powershell/feed/ | Format-Table -Property Title, pubDate'\n      - ${{ testJob.steps }}    \n  - ${{ if eq(testJob.templateContext.expectedHTTPResponseCode, 500) }}: # Check if the HTTP response is 500\n    - job:\n      steps:\n      - powershell: 'Get-ChildItem -Path Env:\\' # Run a PowerShell script to list environment variables\n      - ${{ testJob.steps }} # Include additional steps from the 'testJob' object\n```\n\nLANGUAGE: yaml\nCODE:\n```\n#azure-pipeline.yml\n\ntrigger: none\n\npool:\n  vmImage: ubuntu-latest\n\nextends:\n  template: testing-template.yml \n  parameters:\n    testSet:  # Define the 'testSet' parameter to pass to the template\n    - job: positive_test # Define a job named 'positive_test'\n      templateContext:\n        expectedHTTPResponseCode: 200 # Set the expected HTTP response code to 200 for this job\n      steps:\n      - script: echo \"Run positive test\" \n    - job: negative_test # Define a job named 'negative_test'\n      templateContext:\n        expectedHTTPResponseCode: 500 # Set the expected HTTP response code to 500 for this job\n      steps:\n      - script: echo \"Run negative test\"\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization URL Format\nDESCRIPTION: URL format for accessing Azure DevOps organization settings page for Microsoft Entra ID configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-identity.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/<your-organization>/_settings/organizationAad\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Unlabel Command Syntax\nDESCRIPTION: The basic syntax for the TFVC unlabel command with all available parameters and options. Used to remove items from existing labels in the version control server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/unlabel-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf unlabel [/collection:<team-project-collection-url>] [/recursive] [/login:<username>, [<password>]] <label-name> <item-specification>\n```\n\n----------------------------------------\n\nTITLE: Work Item Form Keyboard Shortcuts in Azure DevOps\nDESCRIPTION: A table of keyboard shortcuts for interacting with work item forms in Azure DevOps 2020 and newer versions. These shortcuts enable quick access to common operations like saving changes, assigning work items, and navigating between tabs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/wi-form-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|Alt+i|Assign work item to me|\n|Ctrl+Shift+d|Go to discussion|\n|Ctrl+s|Save changes|\n|Shift+Alt+c|Copy work item title|\n|Ctrl+Shift+,|Move to left tab (page)|\n|Ctrl+Shift+.|Move to right tab (page)|\n|z|Toggle full screen|\n|Ctrl+Enter|Save and close|\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Multiple Criteria (WIQL - Querying) - WIQL\nDESCRIPTION: This WIQL snippet shows how to filter work items by project, work item type, assigned user, and severity. It demonstrates basic use of WHERE clauses and logical AND to combine conditions. Required fields and operators are supported directly in WIQL queries and don't require external dependencies; the snippet is intended for use within Azure DevOps work item query definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_5\n\nLANGUAGE: WIQL\nCODE:\n```\nWHERE\n    [System.TeamProject] = @project\n    AND [System.WorkItemType] <> ''\n    AND [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\n    AND [Microsoft.VSTS.Common.Severity] <> '1 - Critical'\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Capabilities in Azure Pipeline\nDESCRIPTION: Shows how to use CustomCapabilities demand for routing jobs to specific agent instances in stateful pools, useful for scenarios requiring persistent agent state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/demands.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: fabrikam-dev-pool # Name of Managed DevOps Pool\n  demands:\n  - ImageOverride -equals windows-2022\n  - CustomCapabilities -equals MyCustomValue\n```\n\n----------------------------------------\n\nTITLE: Showing Azure DevOps Project Details with CLI\nDESCRIPTION: Command to show detailed information about a specific Azure DevOps project including ID, name, visibility, process and source control type. Opens the project in web browser.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/create-project.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops project show --project MyFirstProject --open --org https://dev.azure.com/fabrikam/ --output table\n```\n\n----------------------------------------\n\nTITLE: Creating a Next Step Action Link using Markdown Directive\nDESCRIPTION: This snippet uses a Markdown extension directive (`>[!div class=\"nextstepaction\"]`) common in Microsoft Docs (DocFX) to render a prominent link suggesting the next step for the reader. It directs the user to the article detailing how SAFe® concepts map to Azure Boards artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_31\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [How SAFe&reg; concepts map to Azure Boards artifacts](safe-concepts.md)\n```\n\n----------------------------------------\n\nTITLE: Creating a Markdown Table for Organization Settings\nDESCRIPTION: Markdown code to create a table listing various organization settings areas, supported tasks, and notes for each area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/about-settings.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n      **Area**\n   :::column-end:::\n   :::column span=\"2\":::\n      **Supported tasks**\n   :::column-end:::\n   :::column span=\"2\":::\n      **Notes**\n   :::column-end:::\n:::row-end:::\n---\n```\n\n----------------------------------------\n\nTITLE: Creating a Checklist using Markdown Directive\nDESCRIPTION: This snippet uses a Markdown extension directive (`>[!div class=\"checklist\"]`) common in Microsoft Docs (DocFX) to render a styled checklist. The list items within the div, linking to other articles, are presented as checklist items guiding the user through SAFe® implementation steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_30\n\nLANGUAGE: markdown\nCODE:\n```\n>[!div class=\"checklist\"]  \n> * [How SAFe® concepts map to Azure Boards artifacts](safe-concepts.md)  \n> * [Configure Azure Boards to support SAFe®](safe-configure-boards.md )  \n> * [Customize Azure Boards to support SAFe®](safe-customize.md)   \n> * [Plan and track SAFe® programs and portfolios](safe-plan-track-boards.md) \n> * [View SAFe® progress, roadmaps, and metrics](safe-review-roadmaps-progress.md)  \n```\n\n----------------------------------------\n\nTITLE: Testing Tasks Access Level Table in Markdown\nDESCRIPTION: Markdown table listing various testing tasks and their required access levels in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/manual-test-permissions.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Task  | Access level|\n| --- | --- |\n| Provide feedback | Stakeholder | \n| Execute tests, Mark test outcomes | Basic |\n| Chart tasks, View reports | Basic |\n| Create and manage test plans and test suites | Basic + Test Plans  |\n| Author test cases using a grid-like view and edit in the Test Runner | Basic + Test Plans  |\n| Assign test cases to suites, move test cases, and order test cases | Basic + Test Plans  |\n| Prepare for execution such as assigning configurations or testers | Basic + Test Plans  | \n| Prepare User Acceptance Testing | Basic + Test Plans  |\n```\n\n----------------------------------------\n\nTITLE: TFVC Difference Command for Configuration\nDESCRIPTION: Illustrates the syntax for configuring user tools using the TFVC difference command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_3\n\nLANGUAGE: Command-line\nCODE:\n```\ntf diff[erence] /configure\n```\n\n----------------------------------------\n\nTITLE: Inviting Azure Pipelines Bot to Private Slack Channels\nDESCRIPTION: Command for adding the Azure Pipelines bot to private Slack channels. This allows teams to monitor pipeline activities in private channels with the same functionality as public channels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/slack.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n/invite @azpipelines\n```\n\n----------------------------------------\n\nTITLE: Including Agent Pools Tab Partial in Markdown\nDESCRIPTION: This snippet demonstrates the use of an include statement in Markdown to insert content from a partial file named 'agent-pools-tab.md'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/device-code-flow-agent-registration.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [agent-pools-tab](./includes/agent-pools-tab/agent-pools-tab.md)]\n```\n\n----------------------------------------\n\nTITLE: Collection-Level Prerequisites Table\nDESCRIPTION: Markdown table defining the prerequisites for managing collection-level permissions, including required permissions and directory services setup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/change-organization-collection-level-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Permissions** | Member of the [**Project Collection Administrators** group](look-up-project-collection-administrators.md). If you created the organization or collection, you're automatically a member of this group. |\n| **Directory services** | [Security groups defined in Microsoft Entra ID or Active Directory](add-ad-aad-built-in-security-groups.md) before adding them to Azure DevOps. |\n```\n\n----------------------------------------\n\nTITLE: Querying Branch-Filtered Flaky Tests in Power BI\nDESCRIPTION: Power BI query to analyze flaky tests filtered by branch. Includes branch name in grouping and supports branch-based filtering through Power BI slicers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-flaky-tests.md#2025-04-22_snippet_2\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"And Date/Date ge {startdate} \"\n                &\"And Workflow eq 'Build') \"\n        &\"/groupby((TestSK, Test/TestName, Branch/BranchName), \"\n            &\"aggregate( \"\n                &\"ResultCount with sum as TotalCount, \"\n                &\"ResultPassCount with sum as PassedCount, \"\n                &\"ResultFailCount with sum as FailedCount, \"\n                &\"ResultNotExecutedCount with sum as NotExecutedCount, \"\n                &\"ResultNotImpactedCount with sum as NotImpactedCount, \"\n                &\"ResultFlakyCount with sum as FlakyCount)) \"\n    &\"/filter(FlakyCount gt 0) \"\n    &\"/compute( \"\n    &\"(FlakyCount div cast(TotalCount, Edm.Decimal)) mul 100 as FlakyRate) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Using Build.Repository.Clean Variable in Azure DevOps Pipelines\nDESCRIPTION: Reflects the value selected for the 'Clean' option in the source repository settings. It's agent-scoped, usable as an environment variable or task parameter, but not in build numbers or version control tags. Not available in templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_13\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.Repository.Clean\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure DevOps API Version Parameter\nDESCRIPTION: API version parameter used to specify the version of Azure DevOps REST API to use. This preview version (2.0-preview.1) indicates this is a pre-release API specification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version2-preview1.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\napi-version = 2.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: Listing Microsoft Entra ID Tenants via Azure CLI - azurecli\nDESCRIPTION: Lists all Microsoft Entra ID tenants accessible to the authenticated Azure CLI user using the 'az account list' command. No special dependencies beyond the Azure CLI itself are required. The output is displayed in table format, showing the tenants you can access; there are no additional input parameters aside from standard Azure CLI authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/get-list-of-organizations-connected-to-azure-active-directory.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz account list --output table\n```\n\n----------------------------------------\n\nTITLE: Copying Values Between Fields During State Transitions in Azure DevOps XML\nDESCRIPTION: XML configuration showing how to copy values from one field to another during a state transition. This example copies the value from the Reason field to the Resolved Reason field when a work item's state changes to Resolved.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/change-workflow-wit.md#2025-04-22_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<STATE value=\"Resolved\">  \n      <FIELDS>  \n. . .  \n      <FIELD refname=\"Microsoft.VSTS.Common.ResolvedReason\">  \n         <COPY from=\"field\" field=\"System.Reason\"/>  \n      </FIELD>  \n      </FIELDS>  \n</STATE>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Teams Assigned to Area Paths in OData\nDESCRIPTION: This query returns the names of teams assigned to area paths under a specific area. It filters area paths starting with a given path, selects the area path, and expands the Teams entity to retrieve team names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-recipes.md#2025-04-22_snippet_10\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam Fiber/_odata/v4.0-preview/Areas?\n     $filter=startswith(AreaPath,'Fabrikam Fiber\\Account Management')\n     &$select=AreaPath&$expand=Teams($select=TeamName)\n```\n\n----------------------------------------\n\nTITLE: Example package.json with scoped package name\nDESCRIPTION: A detailed example of a package.json file for a scoped package named '@demo/js-e2e-express-server'. This shows how to structure your package.json when using npm scopes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/scopes.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"@demo/js-e2e-express-server\",\n  \"version\": \"2.0.0\",\n  \"description\": \"JavaScript server written with Express.js\",\n  \"main\": \"index.js\",\n  \"directories\": {\n    \"doc\": \"docs\",\n    \"test\": \"test\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Extension Assignment in Azure DevOps\nDESCRIPTION: This snippet provides instructions for checking and assigning an extension to a user in an Azure DevOps organization. It guides through accessing the Users section, navigating to the extension pane, and assigning the extension if necessary.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/qa-no-access-extension-features.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. On your organization toolbar, go to **Users**.\n2. Go to the extension pane.\n3. Check whether the extension is assigned to the user. \n   If not, assign the extension to the user.\n```\n\n----------------------------------------\n\nTITLE: Personal Dashboard Query Clause Example\nDESCRIPTION: Example of a query clause used in personal dashboards to filter work items assigned to the current user\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/dashboard-focus.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nAssigned To = @Me\n```\n\n----------------------------------------\n\nTITLE: Configuring Non-Working Days in Azure DevOps XML\nDESCRIPTION: Specifies Saturday and Sunday as non-working days, which are excluded from capacity planning and burndown chart calculations in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_12\n\nLANGUAGE: XML\nCODE:\n```\n<Weekends>\n   <DayOfWeek>Saturday</DayOfWeek>\n   <DayOfWeek>Sunday</DayOfWeek>\n</Weekends>\n```\n\n----------------------------------------\n\nTITLE: Including Git Code Template\nDESCRIPTION: Markdown include statement for Git code template content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/default-git-permissions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/code-git.md)]\n```\n\n----------------------------------------\n\nTITLE: Updating Repository Settings via Azure CLI\nDESCRIPTION: Example command for updating a repository's name and default branch using the Azure CLI repos update command. This command changes a repository named 'Service' to 'ContosoService' and sets its default branch to 'development'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-152-update.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz repos update --repository \"Service\" --name \"ContosoService\" --default-branch \"development\"\n```\n\n----------------------------------------\n\nTITLE: Editing Individual Team Dashboard Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`DashboardsPrivileges, Edit`) grants permission to add widgets and modify the layout of a *specific* individual team dashboard in Azure DevOps. Team administrators manage this permission on a per-dashboard basis for their team's dashboards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_30\n\nLANGUAGE: plaintext\nCODE:\n```\nDashboardsPrivileges, Edit\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® IP Iteration to Azure Boards Iteration Path in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Innovation and Planning (IP) Iteration' to Azure Boards 'Iteration Path'. It explains that Iteration Paths are defined per project with dates, and teams subscribe to them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Innovation and Planning (IP) Iteration \n   :::column-end:::\n   :::column span=\"3\":::\n      [**Iteration Path**](safe-concepts.md#iterations). You define Iteration Paths for a project and set their start and end dates. Each team subscribes to the iterations they work with. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Sample Repository URL\nDESCRIPTION: GitHub repository URL containing the sample ASP.NET application using .NET 4.8\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/aspnet/build-aspnet-4.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nhttps://github.com/Azure-Samples/app-service-web-dotnet-get-started\n```\n\n----------------------------------------\n\nTITLE: Clearing a Field Value Upon Closed State in XML Process\nDESCRIPTION: This XML code demonstrates how to automatically clear the Remaining Work field when a task's State changes to Closed, using the EMPTY rule in the workflow state configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-samples.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<WORKFLOW>\n. . .  \n      <STATE value=\"Closed\">\n          <FIELDS>\n            <FIELD refname=\"Microsoft.VSTS.Scheduling.RemainingWork\">\n              <EMPTY />\n            </FIELD>\n          </FIELDS>\n      </STATE>\n. . .  \n</WORKFLOW>\n```\n\n----------------------------------------\n\nTITLE: Accessing Build Definition Folder Path in Azure Pipelines YAML\nDESCRIPTION: Demonstrates the usage of the new predefined system variable 'Build.DefinitionFolderPath' in YAML pipelines. This variable contains the folder path of a build pipeline definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-214-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n  - script: echo $(Build.DefinitionFolderPath)\n```\n\n----------------------------------------\n\nTITLE: Filtering Azure Pipeline Resource Triggers by Stages in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure a pipeline resource trigger to activate a CD pipeline only after specific stages (`PreProduction`, `Production`) in the source CI pipeline (`MyCIAlias`) have successfully completed. The `stages` filter ensures the trigger condition is met when all specified stages pass. Requires a defined pipeline resource and the specified stages existing in the source pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-172-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\n```yml\nresources:\n  pipelines:\n  - pipeline: MyCIAlias  \n    project: Fabrikam  \n    source: Farbrikam-CI  \n    trigger:    \n      stages:            ### This stage filter is used when evaluating conditions for triggering your CD pipeline\n      - PreProduction    ### stages are AND'ed. On successful completion of all the stages provided, your CD pipeline will be triggered. \n      - Production\n```\n```\n\n----------------------------------------\n\nTITLE: Displaying ACL Information for a Group in TFVC\nDESCRIPTION: Example showing how to display the access control list information for a specific group in a TFVC collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/permission-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf permission /group:[teamproject]\\developers /collection: http://myserver:8080/tfs/DefaultCollection/\n```\n\n----------------------------------------\n\nTITLE: Converting Azure DevOps Work Item Field Type to PlainText using witadmin\nDESCRIPTION: This command-line snippet shows how to use the `witadmin changefield` command to modify the type of a work item field in Azure DevOps to 'PlainText'. This is useful for disabling HTML formatting in multi-line fields. Replace `CollectionURL` with the URL of the Azure DevOps project collection and `FieldName` with the reference name of the field to be changed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/import-work-items-from-csv.md#2025-04-22_snippet_4\n\nLANGUAGE: cmd\nCODE:\n```\nwitadmin changefield /collection:CollectionURL /n:FieldName /type:PlainText\n```\n\n----------------------------------------\n\nTITLE: Using Build.ContainerId Variable in Azure DevOps Pipelines\nDESCRIPTION: Represents the ID of the container specific to an artifact uploaded during the pipeline run. This variable is not available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_6\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.ContainerId\n```\n\n----------------------------------------\n\nTITLE: Delete shared Analytics view Permission Reference\nDESCRIPTION: Permission that allows users to delete Analytics views that have been saved under the Shared area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n`AnalyticsViews, Delete`\n```\n\n----------------------------------------\n\nTITLE: Adding Build Integration Fields to Work Item Type Definitions in XML\nDESCRIPTION: XML snippet for adding 'Found In' and 'Integration Build' fields to a work item type definition to enable integration with Team Foundation Build. These fields associate bugs with builds where they were found or fixed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/build-test-integration.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Found In\" refname=\"Microsoft.VSTS.Build.FoundIn\" type=\"String\" reportable=\"dimension\">\n    <HELPTEXT>Product build number (revision) in which this item was found</HELPTEXT>\n        <SUGGESTEDVALUES>\n          <LISTITEM value=\"&lt;None&gt;\" />\n        </SUGGESTEDVALUES>\n</FIELD>\n<FIELD name=\"Integration Build\" refname=\"Microsoft.VSTS.Build.IntegrationBuild\" type=\"String\" reportable=\"dimension\">\n    <HELPTEXT>Product build number this bug was fixed in</HELPTEXT>\n        <SUGGESTEDVALUES>\n          <LISTITEM value=\"&lt;None&gt;\" />\n        </SUGGESTEDVALUES>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic Installation for Azure CLI Extensions\nDESCRIPTION: These commands demonstrate how to configure the dynamic installation feature for Azure CLI extensions. They show how to enable with a prompt, enable without a prompt, or disable the feature.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz config set extension.use_dynamic_install=yes_prompt\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz config set extension.use_dynamic_install=yes_without_prompt\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz config set extension.use_dynamic_install=no\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Sign Out URL\nDESCRIPTION: URL endpoint for signing out of Azure DevOps services to reset authentication state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/includes/repos-troubleshoot-authentication.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://aka.ms/VsSignout\n```\n\n----------------------------------------\n\nTITLE: Show Agent Pool Details using Azure CLI\nDESCRIPTION: Azure CLI command to show detailed information about a specific agent pool\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/pools-queues.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines pool show --id\n                       [--action {manage, none, use}]\n                       [--detect {false, true}]\n                       [--org]\n```\n\n----------------------------------------\n\nTITLE: Delivery Plans Prerequisites Configuration Block\nDESCRIPTION: Markdown table showing the prerequisites and permissions required for working with Delivery Plans in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/add-edit-delivery-plan.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Permissions** | - To add or edit a Delivery Plan: Member of the **Contributors** group for the project where you add the plan. <br> - **Manage delivery plans** permission set to **Allow** for the **Contributors** group in **Project settings** > **Permissions**. <br> - To add team backlogs to a plan: **View** permission for those projects. <br> - To view a Delivery Plan: Member of the **Project Collection Valid Users** group. Users granted **Stakeholder** access for a private project can view plans. Users granted **Stakeholder** access for a public project can add and view plans. <br> - To manage permissions, edit, or delete a plan: Creator of the plan, or member of the **Project Administrators**, **Project Collection Administrators** group, or explicit permission granted through the plan's Security dialog. |\n| **Configuration** | - [Teams and team backlogs] set up. <br> - [Team product or portfolio backlogs] enabled. <br> - [Area paths and team area paths] assigned. <br> - [Iteration (sprint) paths and team iterations] assigned. <br> - **Iteration Paths**, **Start**, and **End Dates** assigned, otherwise they don't appear on the plan. <br> - **Iteration Paths** selected for the team whose backlogs you select, otherwise work items associated with those iteration paths don't appear on the plan. <br> - [Product backlog items] or [portfolio backlogs] defined and assigned to either a **Start Date**, **End Date**, or an **Iteration Path**. |\n```\n\n----------------------------------------\n\nTITLE: Displaying Visual Studio Obsolete Warning for WIT Client OM\nDESCRIPTION: Example of an obsolete warning message shown in Visual Studio when using deprecated WIT Client OM. The warning indicates that 'WorkItemType' is obsolete and directs users to documentation for more information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/wit-client-om-deprecation.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCS0618: 'WorkItemType' is obsolete: 'for more information, see documentation at https://aka.ms/witclientom'\n```\n\n----------------------------------------\n\nTITLE: Opening Project Settings for Team Management in Azure DevOps\nDESCRIPTION: This code snippet shows the HTML for an image that illustrates the sequence of steps to open project settings for team management in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-teams.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n:::image type=\"content\" source=\"media/open-project-settings-teams-cloud.png\" alt-text=\"Screenshot of sequence to open a team.\":::\n```\n\n----------------------------------------\n\nTITLE: Including External Content in Markdown\nDESCRIPTION: This snippet demonstrates how to include external content in a markdown document using Azure DevOps-specific syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/configure-customize.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/list-sprint-dependent-tools.md)]\n```\n\n----------------------------------------\n\nTITLE: TFVC Files Keyboard Shortcuts Table\nDESCRIPTION: Markdown table showing keyboard shortcuts for file operations in TFVC repositories\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/code-shortcuts.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|1|Open contents|\n|2|Open history|\n|t|Move focus to directory path|\n```\n\n----------------------------------------\n\nTITLE: Getting History of a Single File in TFVC\nDESCRIPTION: Demonstrates how to display changes made to a specific file using the tf history command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/history-command.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1>tf history program2.cs\n```\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1>tf history program2.cs /noprompt\n```\n\n----------------------------------------\n\nTITLE: Including Release Notes Content with Markdown Include Directives\nDESCRIPTION: Three include directives that pull in content from other markdown files: sprint update links, the main sprint update content, and next steps information. These directives help organize the release notes document structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-200-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-200-update-links](../includes/pipelines/sprint-200-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-200-update](../includes/pipelines/sprint-200-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including File Changes Example Markdown\nDESCRIPTION: Shows how to include file changes and associate work items for check-in through Team Explorer\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/check-your-work-team-codebase.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. In **Team Explorer**, choose :::image type=\"icon\" source=\"media/check-your-work-team-codebase/IC547418.png\"::: **Home**, and then select **Pending Changes** or press Ctrl+0, P.\n\n1. On the **Pending Changes** page, enter a **Comment** so that teammates who later need to [review and understand the history of your files](view-manage-past-versions.md) can understand what you did. For example: *Implemented shopping cart controller*.\n\n   Some teams want their members to provide certain kinds of information about each changeset, and they might implement a check-in policy to require this practice. If a project administrator has [enabled or required check-in notes](configure-check-notes.md), you can type the information into the **Notes** section.\n\n1. Select **Check In**.\n```\n\n----------------------------------------\n\nTITLE: Fetching Remote Changes in Git\nDESCRIPTION: Downloads new branches and commits from a remote repository without merging them into local branches. This operation is useful for reviewing changes before integrating them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_22\n\nLANGUAGE: git\nCODE:\n```\ngit fetch\n```\n\n----------------------------------------\n\nTITLE: Permissions Token Format Example for Analytics Namespace\nDESCRIPTION: Example showing the token format for project-level permissions in the Analytics namespace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\n$/xxxxxxxx-a1de-4bc8-b751-188eea17c3ba\n```\n\n----------------------------------------\n\nTITLE: Displaying Collection Table Sizes for DACPAC Generation in Command Line\nDESCRIPTION: Example command line output showing the sizes of tables in an Azure DevOps collection database. This information helps determine if there's enough disk space for DACPAC generation, as the temporary space required is roughly equivalent to the size of the largest table.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_8\n\nLANGUAGE: cmdline\nCODE:\n```\n[Info   @08:23:59.539] Table name                               Size in MB\n[Info   @08:23:59.539] dbo.tbl_Content                          38984\n[Info   @08:23:59.539] dbo.tbl_LocalVersion                     1935\n[Info   @08:23:59.539] dbo.tbl_Version                          238\n[Info   @08:23:59.539] dbo.tbl_FileReference                    85\n[Info   @08:23:59.539] dbo.Rules                                68\n[Info   @08:23:59.539] dbo.tbl_FileMetadata                     61\n```\n\n----------------------------------------\n\nTITLE: Managing Secure Files Scope (`vso.securefiles_manage`)\nDESCRIPTION: Grants the ability to read, create, and manage secure files. Requires full access. Depends on `vso.securefiles_write`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n`vso.securefiles_manage`\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Priority Field in Azure DevOps Work Item Type\nDESCRIPTION: Example of defining a custom 'Priority' field in addition to the system Priority field in an Azure DevOps work item type. Demonstrates how to create a custom field with a different set of allowed values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_45\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Custom Priority\" refname=\"Custom.Priority\" type=\"Integer\" reportable=\"dimension\">\n  <HELPTEXT>Business importance. 1=must fix; 4=unimportant.</HELPTEXT>\n  <ALLOWEDVALUES expanditems=\"true\">\n    <LISTITEM value=\"0\"/>\n    <LISTITEM value=\"1\"/>\n    <LISTITEM value=\"2\"/>\n  </ALLOWEDVALUES>\n  <DEFAULT from=\"value\" value=\"2\" />\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Editing a TFVC Workspace with Command-Line Syntax in Batch\nDESCRIPTION: Command syntax for modifying an existing TFVC workspace, with options to change the name, owner, computer, permissions and other workspace attributes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_2\n\nLANGUAGE: Batch\nCODE:\n```\ntf workspace [/collection:<team-project-collection-url>] [/comment: (\"<comment>\"|@<comment-file>)] [/newname:<workspace-name>]\n[<workspace-name>[;<workspace-owner>]] [/newowner:<owner-name>] [/computer:<computer-name>] [/permission:(Private|PublicLimited|Public)] [/login:<username>,[<password>]]\n[/location:(local|server)]\n```\n\n----------------------------------------\n\nTITLE: Response from Resource Areas REST API (JavaScript)\nDESCRIPTION: This JavaScript object shows the response from the Resource Areas REST API, including the organization's base URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/work-with-urls.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"id\": \"79134C72-4A58-4B42-976C-04E7115F32BF\",\n    \"name\": \"Core\",\n    \"locationUrl\": \"https://dev.azure.com/Fabrikam\"\n}\n```\n\n----------------------------------------\n\nTITLE: Create tag definition Permission Reference\nDESCRIPTION: Permission that allows users to add tags to work items. By default granted to all members of the Contributors group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`Tagging, Create`\n```\n\n----------------------------------------\n\nTITLE: Accessing npm Package API Endpoint for Organization Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting npm packages in an organization scoped feed using the REST API. This endpoint supports PATCH operations to update package views for npm packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_2\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/_apis/packaging/feeds/{feedId}/npm/{packageName}/versions/{packageVersion}?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: Showing Content of a Specific Wiki Page with Azure DevOps CLI\nDESCRIPTION: Example command that displays content of a wiki page titled 'my wiki' in a wiki named 'myprojectwiki', setting the content to 'Hello World'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/includes/open-wiki-hub.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page show --path 'my wiki' --wiki 'myprojectwiki' --content \"Hello World\"\n```\n\n----------------------------------------\n\nTITLE: Deployment Group Tags Syntax\nDESCRIPTION: Example showing the format for specifying deployment group tags as a comma-separated list.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/unattended-config-unix.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"web, db\"\n```\n\n----------------------------------------\n\nTITLE: Test Permissions Matrix Table in Markdown\nDESCRIPTION: Markdown table showing the default permissions assigned to built-in security groups for test-related activities in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/manual-test-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [test](../organizations/security/includes/test.md)]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Organization-Level Advanced Security Meter Usage Details via REST API\nDESCRIPTION: This HTTP GET request retrieves detailed user identity information (display name, CUID, email identifier, identity descriptor) for Advanced Security meter usage at the Azure DevOps organization level. Replace {organization} with the actual organization name. Requires appropriate permissions and uses API version 7.2-preview.1.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/ghazdo/sprint-243-update.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET `https://advsec.dev.azure.com/{organization}/_apis/management/meterUsageEstimate/details?api-version=7.2-preview.1`\n```\n\n----------------------------------------\n\nTITLE: Registering Managed DevOps Pools Resource Provider using PowerShell\nDESCRIPTION: This PowerShell command registers the Microsoft.DevOpsInfrastructure and Microsoft.DevCenter resource providers in your Azure subscription, which are required for using Managed DevOps Pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/prerequisites.md#2025-04-22_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\nRegister-AzResourceProvider -ProviderNamespace 'Microsoft.DevOpsInfrastructure'\nRegister-AzResourceProvider -ProviderNamespace 'Microsoft.DevCenter'\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 238 Update Links in Markdown\nDESCRIPTION: This Markdown directive is used within the Microsoft Docs platform to dynamically insert content from another file. Specifically, it includes the file containing links related to the Sprint 238 update features for GitHub Advanced Security.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-238-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-238-update-links](../includes/ghazdo/sprint-238-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Repository Deleted Event Payload in Azure DevOps\nDESCRIPTION: Sample JSON payload for a repository deletion event in Azure DevOps. Contains repository identifiers and project information with filtering capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_25\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"publisherId\": \"azure-devops\",\n    \"eventId\": \"git.repository.deleted\",\n    \"resource\": {\n        \"repository\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000repository-id\",\n            \"name\": \"repository-name\",\n            \"url\": \"repository-url\",\n            \"project\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n                \"name\": \"project-name\"\n            }\n        }\n    },\n    \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring CI Triggers in YAML for VSTS Build\nDESCRIPTION: YAML configuration for defining continuous integration trigger settings in build definition files. This snippet shows how to limit builds to trigger only on pushes to main branch and releases/* pattern branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/apr-16-vsts.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n- releases/*\n```\n\n----------------------------------------\n\nTITLE: Displaying Git Configuration Settings via Command Line\nDESCRIPTION: Command that lists all Git configuration settings. This command outputs all configured Git settings from global, system, and local configuration files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-config.md#2025-04-22_snippet_13\n\nLANGUAGE: git\nCODE:\n```\ngit config --list\n```\n\n----------------------------------------\n\nTITLE: HTML Anchor Tag for Managing Azure AD Access\nDESCRIPTION: This HTML anchor tag creates an internal link target within the document, specifically marking the location related to managing access via Microsoft Entra ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/organization-management.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<a name='manage-azure-ad-access'></a>\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure DevOps Error Codes and Messages in Markdown\nDESCRIPTION: This code snippet presents a markdown table listing various Azure DevOps error codes along with their corresponding error messages. It includes common errors related to VM allocation, resource provisioning, network configuration, and service availability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/monitor-pool.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Error code | Error message |\n|---|---|\n| `AzureInternalServerError` | The VM allocation failed due to an internal error. Retry later or try deploying to a different location. |\n| `ClusterOutOfCapacity` | Allocation failed. Note that allocation for this subscription is constrained to a set of clusters, which may be out of capacity. To remove the cluster constraint, contact the subscription administrator or Microsoft Support. Read more about improving likelihood of allocation success at `https://aka.ms/allocation-guidance`. |\n| `CustomScriptError` | VM reported a failure when processing extension 'customScript' (publisher 'Microsoft.Compute' and type 'CustomScriptExtension'). Error message: 'Finished executing command'. More information on troubleshooting is available at `https://aka.ms/VMExtensionCSEWindowsTroubleshoot`. |\n| `DiskProcessingTimeout` | The processing of VM '...' is halted because of one or more disk processing errors encountered by VM '...' in the same Availability Set. Resolve the error with VM '...' before retrying the operation. For more information, refer to `https://aka.ms/activitylog`. |\n| `EndpointNotFound` | 404 - There are no listeners connected for the endpoint. TrackingId:00000000-0000-0000-0000-0000000000, SystemTracker:tipresourceprovider.servicebus.windows.net:tipresourceproviderconnection/pools/es_tap_prime_cus_d4ds, Timestamp:2024-02-15T21:15:57 |\n| `ExceedingQuota` | Quota exceeded. |\n| `FailedToRetrieveUserPassword` | Failed to retrieve user password ... from Key Vault |\n| `ForbiddenByFirewall` | Forbidden |\n| `HTTPResponseBodyNotAvailable` | HTTP response body isn't available |\n| `ImageNotFound` | The image could not be found. Check the image and the version exists |\n| `ImageRemovedFromPool` | The given key  was not present in the dictionary |\n| `ImageThrottling` | Too many simultaneous copy requests from a snapshot or image resource. Retry later. |\n| `InstallationOfWindowsUndeployable` | OS provisioning for VM  failed. Error details: This installation of Windows is undeployable. Make sure the image is properly prepared (generalized). Instructions for Windows: `https://azure.microsoft.com/documentation/articles/virtual-machines-windows-upload-image/` |\n| `InsufficientCapacity` | Allocation failed. We do not have sufficient capacity for the requested VM size in this region. Read more about improving likelihood of allocation success at `https://aka.ms/allocation-guidance` |\n| `InvalidSubnetDelegation` | Subnet `/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}` referenced by `/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Compute/virtualMachineScaleSets/{}/updateGroups/version1/networkInterfaceConfigurations/nic/ipConfigurations/ipconfig` can't be used because it contains external resources. |\n| `NetworkProfileProcessingTimeout` | An unexpected error occurred while processing the network profile of the VM. Retry later. |\n| `ProvisioningTimeOut` | Resource `subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Network/networkInterfaces/providers/Microsoft.Compute/virtualMachineScaleSets/{}/virtualMachines/networkInterfaces/nic` not found. OS Provisioning for VM  did not finish in the allotted time. The VM may still finish provisioning successfully. Check provisioning state later. Also, make sure the image has been properly prepared (generalized). Instructions for Windows: `https://azure.microsoft.com/documentation/articles/virtual-machines-windows-upload-image/` Instructions for Linux: `https://azure.microsoft.com/documentation/articles/virtual-machines-linux-capture-image/` If you are deploying more than 20 Virtual Machines concurrently, consider moving your custom image to shared image gallery. Refer to `https://aka.ms/movetosig` for the same. |\n| `RemoteNameCantBeResolved` |  |\n| `ResourceGroupBeingDeleted` | The resource group ... is in deprovisioning state and can't perform this operation. |\n| `SecretDisabled` | Operation get isn't allowed on a disabled secret. Status: 403 (Forbidden) ErrorCode: Forbidden |\n| `ServiceUnavailable` | The service is unavailable now. Retry the request later. |\n| `SkuNotAvailable` | The requested VM size for resource 'Following SKUs failed for Capacity Restrictions:' is currently not available in location. Try another size or deploy to a different location or different zone. See `https://aka.ms/azureskunotavailable` for details. |\n| `TaskCanceled` | The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing. |\n| `VirtualNetworkIsNotFound` | The Virtual Network might be deleted. |\n```\n\n----------------------------------------\n\nTITLE: Using @Me Macro in Azure DevOps Work Item Search\nDESCRIPTION: Examples of using the @Me macro to filter work items assigned to or created by the current user in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\nA=@Me\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nC=@Me\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Package Files\nDESCRIPTION: Specifies the files to be included in the extension package, including HTML, scripts, SDK, and logo files. Sets the addressable property to true for files that need to be URL-addressable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-hub-manifest.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"files\": [\n        {\n            \"path\": \"hello-world.html\", \"addressable\": true\n        },\n        {\n            \"path\": \"scripts\", \"addressable\": true\n        },\n        {\n            \"path\": \"sdk/scripts\", \"addressable\": true\n        },\n        {\n            \"path\": \"images/logo.png\", \"addressable\": true\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Query for Blocked Tasks in Scrum\nDESCRIPTION: Creates a query to list all blocked tasks in a Scrum project where the Blocked field is of type String.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/planning-ranking-priorities.md#2025-04-22_snippet_0\n\nLANGUAGE: Azure DevOps Query\nCODE:\n```\nWork Item Type In Task\nAnd Blocked = Yes\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault\nDESCRIPTION: Azure CLI command to create a new Azure Key Vault instance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/azure-key-vault.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault create \\\n  --name <YOUR_KEY_VAULT_NAME> \\\n  --resource-group <YOUR_RESOURCE_GROUP_NAME>\n```\n\n----------------------------------------\n\nTITLE: Configuring Microsoft 365 Common and Office IP Addresses for Azure DevOps\nDESCRIPTION: List of IP addresses that pertain to Microsoft 365 Common and Office Online services needed for Azure DevOps connectivity.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_2\n\nLANGUAGE: Microsoft365Common&OfficeIPs\nCODE:\n```\n40.82.190.38\n52.108.0.0/14\n52.237.19.6\n52.238.106.116/32\n52.244.37.168/32\n52.244.203.72/32\n52.244.207.172/32\n52.244.223.198/32\n52.247.150.191/32\n```\n\n----------------------------------------\n\nTITLE: Querying Analytics for Custom Field Usage in Azure DevOps\nDESCRIPTION: This OData query can be used to check where a custom field is in use within Azure DevOps Analytics. It filters WorkItemTypeFields based on a specific custom field reference name and selects the WorkItemType.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/customize-process-field.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/v4.0-preview/WorkItemTypeFields?$filter=FieldReferenceName eq {CustomFieldReferenceName}&$select=WorkItemType\n```\n\n----------------------------------------\n\nTITLE: ACR Container Resource Predefined Variables in Azure DevOps Pipelines\nDESCRIPTION: This code snippet lists the predefined variables available when using ACR container resources in a pipeline. These variables provide access to ACR image metadata such as type, registry, repository, tag, digest, URI and location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-160-update.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nresources.container.<Alias>.type\nresources.container.<Alias>.registry\nresources.container.<Alias>.repository\nresources.container.<Alias>.tag \nresources.container.<Alias>.digest\nresources.container.<Alias>.URI\nresources.container.<Alias>.location\n```\n\n----------------------------------------\n\nTITLE: List Unused Fields Command\nDESCRIPTION: Lists fields that are not being used in the project collection using witadmin listfields command with unused flag\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_3\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin listfields /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /unused\n```\n\n----------------------------------------\n\nTITLE: Project Areas Query\nDESCRIPTION: OData query to retrieve all areas defined for a specific project in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/account-scoped-queries.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/v1.0/Areas\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps URL Pattern\nDESCRIPTION: Example URL pattern for accessing project settings in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-ad-aad-built-in-security-groups.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization/Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Enable Field Synchronization Command\nDESCRIPTION: Enables synchronization for a person-name field using witadmin changefield command\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_6\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin changefield /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:MyCompany.CustomerName /syncnamechanges:true\n```\n\n----------------------------------------\n\nTITLE: Running ConformProject.ps1 to Align Project with Agile System Process\nDESCRIPTION: PowerShell command to update a project to conform to the Agile system process using the Process Customization Scripts. This script helps fix process-related validation errors during migration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-validate.md#2025-04-22_snippet_5\n\nLANGUAGE: cmdline\nCODE:\n```\n.\\ConformProject.ps1 \"<collection url>\" \"<project name>\" \"c:\\process-customization-scripts\\import\\agile\"  \n```\n\n----------------------------------------\n\nTITLE: TFS Update Note Markdown Include\nDESCRIPTION: Markdown include statement for TFS 2018.2 update notice.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pr-status-policy.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [note-tfs-2018.2-update](includes/note-tfs-2018.2-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Agile Process Project Selection in Azure DevOps\nDESCRIPTION: This snippet shows an image reference for selecting the number of projects using the Agile default process in Azure DevOps. It demonstrates how to access the menu for changing the process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/change-project-to-inherited-process.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Agile process, Choose number of team projects](/azure/devops/organizations/settings/work/media/process/choose-process-team-projects.png) \n```\n\n----------------------------------------\n\nTITLE: Accessing Organization-Level Notifications URL in Azure DevOps\nDESCRIPTION: URL pattern to directly access the organization-level notifications settings page in Azure DevOps. Replace the OrganizationName placeholder with your actual organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/navigating-the-ui.md#2025-04-22_snippet_1\n\nLANGUAGE: URL\nCODE:\n```\nhttps://dev.azure.com/OrganizationName/_settings/notifications\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Calculated Properties\nDESCRIPTION: This JSON shows the response structure when a calculated property (completion percentage) is included, along with the aggregated values used in the calculation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_12\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\":\"https://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/$metadata#WorkItems(SumOfCompletedWork,SumOfRemainingWork)\",\"value\":[\n    {\n      \"@odata.id\":null,\"DonePercentage\":0.96760221857946638,\"SumOfRemainingWork\":50715.95,\"SumOfCompletedWork\":1514698.3400000033\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Undo Command Syntax\nDESCRIPTION: The syntax pattern for the TFVC undo command, showing all available parameters and options. This establishes the command structure for discarding pending changes in version control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undo-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf undo [/workspace:<workspace-name>[;<workspace-owner>]]\n[/recursive] <item-specification> [/noprompt] [/login:<username>,[<password>]]\n[/collection:<team-project-collection-url>]\n```\n\n----------------------------------------\n\nTITLE: Installing Maven Packages\nDESCRIPTION: Command to install Maven packages and dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_16\n\nLANGUAGE: Command\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Disk Using ARM Template\nDESCRIPTION: ARM template configuration for adding a 10GB Standard_LRS data disk to a Managed DevOps Pool with specific caching and drive letter settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-storage.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                ...\n                \"storageProfile\": {\n                    \"osDiskStorageAccountType\": \"Standard\",\n                    \"dataDisks\": [\n                        {\n                            \"diskSizeGiB\": 10,\n                            \"caching\": \"None\",\n                            \"storageType\": \"Standard_LRS\",\n                            \"driveLetter\": \"Q\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Manually Installing Azure CLI Extensions\nDESCRIPTION: This snippet shows how to manually install an Azure CLI extension using the 'az extension add' command. It can install by name or from a source URL/path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name <extension-name>\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --source <URL-or-path>\n```\n\n----------------------------------------\n\nTITLE: Executing Teams Authentication Commands\nDESCRIPTION: Commands used to sign out and sign in to Azure Pipelines app within Microsoft Teams channel for authentication troubleshooting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/microsoft-teams.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n@Azure Pipelines signout\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n@Azure Pipelines signin\n```\n\n----------------------------------------\n\nTITLE: Filtering New or Active Stories, Bugs, and Tasks in Azure Boards (WIQL)\nDESCRIPTION: This snippet filters for work items of type User Story, Bug, or Task that are currently in the New or Active state. It uses the `In` operator on both 'Work Item Type' and 'State', highlighting the ability to match multiple values in WIQL. This is frequently used to view all new or currently active work needing attention across these types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_6\n\nLANGUAGE: WIQL\nCODE:\n```\nWork Item Type In User Story,Bug,Task\nAnd State In New,Active\n```\n\n----------------------------------------\n\nTITLE: Deleting Teams using Azure DevOps CLI\nDESCRIPTION: Command to delete a team in Azure DevOps. Requires the team ID and accepts optional parameters for project specification and confirmation suppression. The command will prompt for confirmation before deleting the team unless the --yes parameter is specified.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/rename-remove-team.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops team delete --id\n                      [--project]\n                      [--yes]\n```\n\n----------------------------------------\n\nTITLE: Basic Syntax for TFVC Status Command\nDESCRIPTION: The complete syntax for the Team Foundation Version Control status command, showing all available options and parameters that can be used to display information about pending changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/status-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf stat[us] itemspec [/collection:TeamProjectCollectionUrl]\n[/login:username,[password]]\n([/workspace:workspacename[;workspaceowner]] \n| [/shelveset:shelvesetname[;shelvesetowner]])\n[/format:(brief|detailed)] [/recursive][/user:(*|username)]\n[/nodetect]\n```\n\n----------------------------------------\n\nTITLE: Work Item Links JSON Response\nDESCRIPTION: JSON response showing the work item details along with its Related links. The response includes metadata context and selected fields for both the source work item and its linked items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/work-item-links.md#2025-04-22_snippet_5\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"@odata.context\": \"https://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/$metadata#WorkItems(WorkItemId,Title,WorkItemType,State,Links(SourceWorkItemId,TargetWorkItemId,LinkTypeName,TargetWorkItem(WorkItemId,Title,State)))\",\n    \"value\": [{\n        \"WorkItemId\": 103,\n        \"Title\": \"Feature Y\",\n        \"WorkItemType\": \"Feature\",\n        \"State\": \"New\",\n        \"Links\": [{\n            \"SourceWorkItemId\": 103,\n            \"TargetWorkItemId\": 112,\n            \"LinkTypeName\": \"Related\",\n            \"TargetWorkItem\": {\n                \"WorkItemId\": 112,\n                \"Title\": \"Some issue\",\n                \"State\": \"Active\"\n            }\n        }]\n    }]\n}\n```\n\n----------------------------------------\n\nTITLE: Jenkins Git Build Trigger Configuration Settings\nDESCRIPTION: Configuration settings for triggering Jenkins builds using Git integration, including server URL and authentication credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/consumers.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"serverBaseUrl\": \"uri\",\n  \"basicAuthCredentials\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Pool Network Configuration\nDESCRIPTION: Azure CLI command and JSON configuration for setting up network profile in a Managed DevOps Pool using a fabric profile.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-networking.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --fabric-profile fabric-profile.json\n   # other parameters omitted for space\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vmss\": {\n    \"sku\": {...},\n    \"images\": [...],\n    \"osProfile\": {...},\n    \"storageProfile\": {...},\n    \"networkProfile\": {\n        \"subnetId\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/mySubnet\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Epics to Azure Boards Epic Work Items in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Epics' specifically to the Azure Boards 'Epic work item' type, highlighting its position at the top of the work item hierarchy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Epics\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Epic work item**](safe-concepts.md#work-items). You define an Epic using the Epic work item type. Epics are at the top of the work item hierarchy of Epics, Features, and Stories.   \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Including Version Selector Template in Markdown\nDESCRIPTION: Markdown include statement for version selector template used in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/access-levels.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../../includes/version-selector.md)]\n```\n\n----------------------------------------\n\nTITLE: Source Directory Path Example\nDESCRIPTION: Example of Build.SourcesDirectory local path on build agent\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_24\n\nLANGUAGE: plaintext\nCODE:\n```\nc:\\agent_work\\1\\s\n```\n\n----------------------------------------\n\nTITLE: Setting View Permission for Service Hooks in Azure DevOps\nDESCRIPTION: Command to grant 'View Subscriptions' permission (bit value 1) to a group for Service Hooks in a specific project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/view-permission.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n> az devops security permission update --namespace-id cb594ebe-87dd-4fc9-ac2c-6a10a4c92046 --subject <Group or user descriptor> --token PublisherSecurity/ac515e82-560c-4af8-845b-9f7f968d8e7b --allow-bit 1\n```\n\n----------------------------------------\n\nTITLE: TFVC Folderdiff Command Example\nDESCRIPTION: An example of using the TFVC folderdiff command to compare a server folder with a local folder recursively and display the output in the command prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/folderdiff-command.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\ntf folderdiff $/<serverFolder> F:\\<localFolder> /recursive /noprompt\n```\n\n----------------------------------------\n\nTITLE: Implementing Menu Action Handler (TypeScript)\nDESCRIPTION: This TypeScript code registers a handler object for the menu action. It initializes the SDK, defines an action execution function, and associates the handler with the menu contribution defined in the manifest.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-action.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n<script src=\"lib/SDK.min.js\"></script>\n<script>\n    SDK.init();\n\n    // Use an IIFE to create an object that satisfies the IContributedMenuSource contract\n    var menuContributionHandler = (function () {\n        \"use strict\";\n        return {\n            // This is a callback that gets invoked when a user selects the newly contributed menu item\n            // The actionContext parameter contains context data surrounding the circumstances of this\n            // action getting invoked.\n            execute: function (actionContext) {\n                alert(\"Hello, world\");\n            }\n        };\n    }());\n\n    // Associate the menuContributionHandler object with the \"myAction\" menu contribution from the manifest.\n    SDK.register(SDK.getContributionId(), menuContributionHandler);\n</script>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Sign-out URL\nDESCRIPTION: The URL that must be visited to completely sign out of Azure DevOps services when experiencing authentication issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/qa-why-cant-sign-in-msa-azuread-account.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://aka.ms/vssignout\n```\n\n----------------------------------------\n\nTITLE: Referencing Deprecated and Read-Only Namespace Names in Azure DevOps Markdown\nDESCRIPTION: This snippet contains the names of deprecated or read-only security namespaces (such as `CrossProjectWidgetView`, `Location`, `WorkItemTracking`, etc.), used to inform administrators and users that these namespaces should not be targeted for permission management. The list is maintained as reference data, not for active configuration. Entries are provided as code blocks for clarity in documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n- `CrossProjectWidgetView`\n- `DataProvider`\n- `Favorites`\n- `Graph`\n- `Identity2`\n- `IdentityPicker`\n- `Job`\n- `Location`\n- `ProjectAnalysisLanguageMetrics`\n- `Proxy`\n- `Publish`\n- `Registry`\n- `Security`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n- `ServicingOrchestration`\n- `SettingEntries`\n- `Social`\n- `StrongBox`\n- `TeamLabSecurity`\n- `TestManagement`\n- `VersionControlItems2`\n- `ViewActivityPaneSecurity`\n- `WebPlatform`\n- `WorkItemsHub`\n- `WorkItemTracking`\n- `WorkItemTrackingConfiguration`\n```\n\n----------------------------------------\n\nTITLE: Assigning Agile Tool Fields with TypeFields Element\nDESCRIPTION: XML configuration that maps work item fields to specific Agile tool functionality. Includes mappings for team area, remaining work, backlog priority, effort, activity, and feedback-related fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_10\n\nLANGUAGE: XML\nCODE:\n```\n<TypeFields>\n    <TypeField refname=\"System.AreaPath\" type=\"Team\" />\n    <TypeField refname=\"Microsoft.VSTS.Scheduling.RemainingWork\" type=\"RemainingWork\" format=\"format h\" />\n    <TypeField refname=\" Microsoft.VSTS.Common.BacklogPriority\" type=\"Order\" />\n    <TypeField refname=\"Microsoft.VSTS.Scheduling.Effort\" type=\"Effort\" />\n    <TypeField refname=\"Microsoft.VSTS.Common.Activity\" type=\"Activity\" />\n    <TypeField refname=\"Microsoft.VSTS.Feedback.ApplicationStartInformation\" type=\"ApplicationStartInformation\" />\n    <TypeField refname=\"Microsoft.VSTS.Feedback.ApplicationLaunchInstructions\" type=\"ApplicationLaunchInstructions\" />\n    <TypeField refname=\"Microsoft.VSTS.Feedback.ApplicationType\" type=\"ApplicationType\">\n        <TypeFieldValues>\n            <TypeFieldValue value=\"Web application\" type=\"WebApp\" />\n            <TypeFieldValue value=\"Remote machine\" type=\"RemoteMachine\" />\n            <TypeFieldValue value=\"Client application\" type=\"ClientApp\" />\n        </TypeFieldValues>\n    </TypeField>\n</TypeFields>\n```\n\n----------------------------------------\n\nTITLE: Querying Automated Test Cases in Azure DevOps\nDESCRIPTION: Query clause to filter for automated test cases by combining work item type and automation status conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/build-test-integration.md#2025-04-22_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nWork Item Type = Test Case And Automation Status = Automated\n```\n\n----------------------------------------\n\nTITLE: Defining Work Item State Transitions in XML\nDESCRIPTION: This XML snippet defines workflow rules for a work item type, specifying how certain fields should be set or cleared when transitioning between different states. It includes rules for fields like Resolved Date, Closed Date, and Activated By.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<WORKFLOW>\n  <STATES>\n    <STATE value=\"New\">\n      <FIELDS>\n        <FIELD refname=\"Microsoft.VSTS.Common.ResolvedDate\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ResolvedBy\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ResolvedReason\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ClosedDate\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ClosedBy\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ActivatedDate\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ActivatedBy\">\n          <EMPTY />\n        </FIELD>\n      </FIELDS>\n    </STATE>\n    <STATE value=\"Active\">\n      <FIELDS>\n        <FIELD refname=\"Microsoft.VSTS.Common.ResolvedDate\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ResolvedBy\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ResolvedReason\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ClosedDate\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ClosedBy\">\n          <EMPTY />\n        </FIELD>\n      </FIELDS>\n    </STATE>\n    <STATE value=\"Resolved\">\n      <FIELDS>\n        <FIELD refname=\"Microsoft.VSTS.Common.ClosedDate\">\n          <EMPTY />\n        </FIELD>\n        <FIELD refname=\"Microsoft.VSTS.Common.ClosedBy\">\n          <EMPTY />\n        </FIELD>\n      </FIELDS>\n    </STATE>\n    <STATE value=\"Closed\" />\n  </STATES>\n```\n\n----------------------------------------\n\nTITLE: Initializing TypeScript Configuration\nDESCRIPTION: Creates a tsconfig.json file with compiler options set for ES2022 target, configuring TypeScript compilation for the custom task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-build-task.md#2025-04-22_snippet_6\n\nLANGUAGE: PowerShell\nCODE:\n```\ntsc --init --target es2022\n```\n\n----------------------------------------\n\nTITLE: Renaming a Hosted XML Process in ProcessTemplate.xml\nDESCRIPTION: Example of how to rename a process within the ProcessTemplate.xml file to distinguish it from existing processes. The name should be unique and descriptive.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/customize-process.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<name>MyCompany Agile Process  </name>\n```\n\n----------------------------------------\n\nTITLE: Configuring TaskBacklog Work Item Count Limit in XML Process Model\nDESCRIPTION: XML snippet for increasing the maximum number of work items displayed on the task board. The default limit is 1,000 but can be increased up to 1,500 by setting the workItemCountLimit attribute in the TaskBacklog element of the process configuration XML.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/customize-work.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<TaskBacklog category=\"Microsoft.TaskCategory\" pluralName=\"Tasks\" singularName=\"Task\" workItemCountLimit=\"800\" >\n    . . .\n</TaskBacklog>\n```\n\n----------------------------------------\n\nTITLE: Promoting Changes with TFVC Reconcile Command\nDESCRIPTION: Opens the Visual Studio Promote Candidate Changes dialog box to specify items for promotion to pending changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/reconcile-command.md#2025-04-22_snippet_4\n\nLANGUAGE: Batch\nCODE:\n```\ntf reconcile /promote\n```\n\n----------------------------------------\n\nTITLE: Including Prerequisites Markdown Block\nDESCRIPTION: Markdown include statement for prerequisites content block that specifies project member only requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/work-team-explorer.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites-project-member-only](../includes/prerequisites-project-member-only.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Alternative Credentials Deprecation Notice in Markdown\nDESCRIPTION: This snippet demonstrates how to include a reusable content block for the alternative credentials deprecation notice in a Markdown file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/change-application-access-policies.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [alt-creds-deprecation-notice](../../includes/alt-creds-deprecation-notice.md)]\n```\n\n----------------------------------------\n\nTITLE: Recent Work Items Query\nDESCRIPTION: Query filters for finding work items recently created within the last 7 days\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/dashboard-focus.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nCreated Date >= @Today-7\n```\n\n----------------------------------------\n\nTITLE: Formatting @mention using HTML in Azure DevOps Comments\nDESCRIPTION: This HTML snippet demonstrates how to programmatically create an `@mention` link for the legacy HTML comment editor in Azure DevOps. It uses an `<a>` tag with specific `data-vss-mention` attributes, including the user's ID, to ensure the mention functions correctly and triggers a notification. The `href=\"#\"` is a placeholder, and the actual display text (`@John Doe`) is what the user sees.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/at-mentions.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n```html\n<div><a href=\"#\" data-vss-mention=\"version:2.0,{userID}\">@John Doe</a> Testing mentioning</div>\n```\n```\n\n----------------------------------------\n\nTITLE: Defining Work Item Colors in Azure DevOps XML\nDESCRIPTION: Specifies color assignments for different work item types in the Scrum process template. Colors are used to visually differentiate work items in query results and backlogs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_13\n\nLANGUAGE: XML\nCODE:\n```\n<WorkItemColors>\n      <WorkItemColor primary=\"FF009CCC\" secondary=\"FFD6ECF2\" name=\"ProductBacklogItem\" />\n      <WorkItemColor primary=\"FF773B93\" secondary=\"FFEEE2F2\" name=\"Feature\" />\n   <WorkItemColor primary=\"FFFF7B00\" secondary=\"FFFFD7B5\" name=\"Epic\" />\n      <WorkItemColor primary=\"FFF2CB1D\" secondary=\"FFF6F5D2\" name=\"Task\" />\n      <WorkItemColor primary=\"FFCC293D\" secondary=\"FFFAEAE5\" name=\"Bug\" />\n      <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Code Review Request\" />\n      <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Code Review Response\" />\n      <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Feedback Request\" />\n      <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Feedback Response\" />\n      <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Impediment\" />\n      <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Shared Step\" />\n      <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Test Case\" />\n   <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Test Plan\" />\n   <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Test Suite\" />\n   <WorkItemColor primary=\"FFFF9D00\" secondary=\"FFFCEECF\" name=\"Shared Parameter\" />\n</WorkItemColors>\n```\n\n----------------------------------------\n\nTITLE: Including Version Control Template in Markdown\nDESCRIPTION: Markdown include statement for version control template used in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/access-levels.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: OData Query for Work Item Board Snapshot Data\nDESCRIPTION: OData query that retrieves work item board snapshot data filtered by date range and team name. The query aggregates count of work items grouped by date and column name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_13\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}//WorkItemBoardSnapshot?$apply=filter(DateValue gt 2015-07-16Z and DateValue le 2015-08-16Z)/filter(BoardName eq 'Stories' and Team/TeamName eq '{teamName}')/groupby((DateValue, ColumnName), aggregate(Count with sum as Count))&$orderby=DateValue\n```\n\n----------------------------------------\n\nTITLE: Pipeline Resource with Simple Trigger\nDESCRIPTION: Definition of a pipeline resource with basic trigger configuration enabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: SmartHotel\n    project: DevOpsProject\n    source: SmartHotel-CI\n    trigger: true\n```\n\n----------------------------------------\n\nTITLE: Suppress notifications for work item updates Permission Reference\nDESCRIPTION: Permission that allows users to update work items without generating notifications. This is useful for bulk updates and migrations when notifications are not desired.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, SUPPRESS_NOTIFICATIONS`\n```\n\n----------------------------------------\n\nTITLE: Including Version Control Markdown\nDESCRIPTION: Markdown include statement for version control information in documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Enablers to Azure Boards Work Items in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Enablers' to Azure Boards 'Work item'. It states that Enablers are handled similarly to Epics, Features, and Stories using work items and backlogs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Enablers\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Work item**](safe-concepts.md#work-items). You define, plan, and track Enablers similar to Epics, Features, and Stories. You capture them in work items and within various team backlogs. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Mapping State Categories for Feedback Request and Response Work Items\nDESCRIPTION: XML configuration defining state category mappings for feedback request and response categories. Maps Active state to InProgress and Closed state to Complete type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_9\n\nLANGUAGE: XML\nCODE:\n```\n<FeedbackRequestWorkItems category=\"Microsoft.FeedbackRequestCategory\" pluralName=\"Feedback Requests\" singularName=\"Feedback Request\">\n      <States>\n      <State value=\"Active\" type=\"InProgress\" />\n      <State value=\"Closed\" type=\"Complete\" />\n      </States>\n</FeedbackRequestWorkItems>\n<FeedbackResponseWorkItems category=\"Microsoft.FeedbackResponseCategory\" pluralName=\"Feedback Responses\" singularName=\"Feedback Response\">\n      <States>\n      <State value=\"Active\" type=\"InProgress\" />\n      <State value=\"Closed\" type=\"Complete\" />\n      </States>\n</FeedbackResponseWorkItems>\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Runs Data with OData in Power BI\nDESCRIPTION: This Power BI query retrieves pipeline run data from Azure DevOps Analytics, grouping results by pipeline name and aggregating counts for different outcome types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-allpipelines.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerQuery\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n               &\"$apply=filter( \"\n\t       &\"CompletedDate ge {startdate} \"\n\t       &\")\"\n                &\"/groupby( \"\n        &\"(Pipeline/PipelineName), \"\n        &\"aggregate( \"\n            &\"$count as TotalCount, \"\n                &\"SucceededCount with sum as SucceededCount, \"\n                &\"FailedCount with sum as FailedCount, \"\n            &\"PartiallySucceededCount with sum as PartiallySucceededCount, \"\n                &\"CanceledCount with sum as CanceledCount \"\n            &\")) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Customizing Code Checkout Directory in YAML Pipelines\nDESCRIPTION: This snippet demonstrates how to specify a custom directory for checking out repository code in Azure DevOps YAML pipelines using the checkout step with the path parameter. This allows developers to control the folder structure where their Git repo will be checked out.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-149-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self\n  path: my-great-repo\n```\n\n----------------------------------------\n\nTITLE: Git Repository Migration Commands\nDESCRIPTION: Series of Git commands to perform a tip-only migration of a repository to a new location while preserving the current state but excluding history.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/make-project-public.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit clone <clone_URL>\ncd <reponame>\ngit checkout main\nrmdir /s .git\nrm -rf .git\ngit init\ngit remote add origin <new_clone_URL>\ngit push --set-upstream origin main\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Duration Percentiles Filtered by Branch in Power BI\nDESCRIPTION: Power BI query that calculates pipeline duration percentiles with branch-specific filtering. The results can be grouped by branch name in the Power BI visualization by expanding Branch into Branch.BranchName and adding it to the X-Axis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration.md#2025-04-22_snippet_4\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and (SucceededCount eq 1 or PartiallySucceededCount eq 1) \"\n        &\") \"\n        &\"/compute( \"\n            &\"percentile_cont(TotalDurationSeconds, 0.5, BranchSK) as Duration50thPercentileInSeconds, \"\n                &\"percentile_cont(TotalDurationSeconds, 0.8, BranchSK) as Duration80thPercentileInSeconds, \"\n                &\"percentile_cont(TotalDurationSeconds, 0.95, BranchSK) as Duration95thPercentileInSeconds) \"\n            &\"/groupby( \"\n                &\"(Duration50thPercentileInSeconds, Duration80thPercentileInSeconds,Duration95thPercentileInSeconds, Branch/BranchName)) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Revoking PAT Instructions\nDESCRIPTION: Markdown documentation explaining the process and reasons for revoking a Personal Access Token in Azure DevOps, including security compromises and compliance requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/personal-access-tokens.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## Revoke a PAT\n\nYou can revoke a PAT at any time for these and other reasons:\n\n- Revoke a PAT if you suspect it's compromised.\n- Revoke a PAT when it's no longer needed.\n- Revoke a PAT to enforce security policies or compliance requirements.\n```\n\n----------------------------------------\n\nTITLE: Defining Delete Audit Streams Permission in Azure DevOps\nDESCRIPTION: Specifies the permission key for deleting audit streams in Azure DevOps. This permission allows users to delete an audit stream, which is currently in preview.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`AuditLog, Delete_Streams`\n```\n\n----------------------------------------\n\nTITLE: Setting Default Azure Region\nDESCRIPTION: Azure CLI command to set the default region for subsequent operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz config set defaults.location=<REGION>\n```\n\n----------------------------------------\n\nTITLE: Example of GitHub Commit Message with Azure Boards Work Item Link\nDESCRIPTION: Shows an example commit message that fixes a work item. Using 'fix', 'fixes', or 'fixed' before the work item mention will automatically move the item to completed state when merged to the default branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-144-update.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\nAdds support for deleting connections. Fixes AB#20.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Dependencies JSON Schema\nDESCRIPTION: Defines the complete configuration schema for dependency tracking in Azure DevOps. Includes settings for link types, work item categories, display states, risk assessment, and visualization options. This configuration controls how dependencies are displayed, tracked, and managed across projects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/extensions/dependency-tracker.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"consumesLinkName\": \"System.LinkTypes.Dependency-Reverse\",\n    \"producesLinkName\": \"System.LinkTypes.Dependency-Forward\",\n    \"queryFields\": {},\n    \"dependencyWorkItemTypes\": [\n        \"Epic\",\n        \"Feature\",\n        \"User Story\",\n        \"Bug\"\n    ],\n    \"selectedDependencyWorkItemTypes\": \"Any\",\n    \"selectedReleases\": \"\",\n    \"workItemCategoriesAndColors\": {\n        \"Proposed\": {\n            \"displayName\": \"Proposed\",\n            \"color\": \"#a6a6a6\"\n        },\n        \"InProgress\": {\n            \"displayName\": \"In Progress\",\n            \"color\": \"#00bcf2\"\n        },\n        \"Completed\": {\n            \"displayName\": \"Completed\",\n            \"color\": \"#9ac70b\"\n        },\n        \"Removed\": {\n            \"displayName\": \"Removed\",\n            \"color\": \"#d9242c\"\n        },\n        \"Resolved\": {\n            \"displayName\": \"Resolved\",\n            \"color\": \"#ff9d00\"\n        }\n    },\n    \"workItemDislayStatesAndDisplayColors\": {\n        \"New\": {\n            \"textColor\": \"rgb(112, 112, 112)\",\n            \"chartColor\": \"rgb(112, 112, 112)\",\n            \"states\": [\n                \"New\"\n            ]\n        },\n        \"Active\": {\n            \"textColor\": \"rgb(0, 122, 204)\",\n            \"chartColor\": \"rgb(0, 122, 204)\",\n            \"states\": [\n                \"Active\",\n                \"Resolved\"\n            ]\n        },\n        \"Closed\": {\n            \"textColor\": \"rgb(16, 124, 16)\",\n            \"chartColor\": \"rgb(16, 124, 16)\",\n            \"states\": [\n                \"Closed\"\n            ]\n        },\n        \"Removed\": {\n            \"textColor\": \"rgb(204, 41, 61)\",\n            \"chartColor\": \"rgb(204, 41, 61)\",\n            \"states\": [\n                \"Removed\"\n            ]\n        },\n        \"Other\": {\n            \"textColor\": \"rgb(178, 178, 178)\",\n            \"chartColor\": \"rgb(178, 178, 178)\",\n            \"states\": []\n        }\n    },\n    \"riskAssessmentValues\": [],\n    \"releases\": [],\n    \"partnerAccounts\": [],\n    \"timelineEnabled\": true,\n    \"newDependencyButtonEnabled\": true,\n    \"crossAccountConfigs\": {\n        \"crossAccountDependencyEnabled\": true,\n        \"crossAccountDependencyToggleDefaultState\": false\n    },\n    \"priorityValues\": [\n        \"0\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"(blank)\"\n    ],\n    \"defaultColumns\": [\n        \"Id\",\n        \"Area Path\",\n        \"Dependency Title\",\n        \"State\",\n        \"Consumers\",\n        \"Producers\"\n    ],\n    \"riskGraphConfig\": {\n        \"atRisk\": [\n            \"Removed\"\n        ],\n        \"neutral\": [\n            \"New\"\n        ],\n        \"onTrack\": [\n            \"Active\",\n            \"Resolved\",\n            \"Closed\",\n            \"Other\"\n        ]\n    },\n    \"iterationDepth\": 8\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Condition for Publish Build Artifacts Task in Classic Pipeline\nDESCRIPTION: This custom condition ensures that the Publish Build Artifacts task only executes when building the main branch and the previous tasks have succeeded.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/ci-build-git.md#2025-04-22_snippet_3\n\nLANGUAGE: expression\nCODE:\n```\nand(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Stories to Azure Boards User Story Work Items in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Stories' to the Azure Boards 'User Story work item' type. It describes User Stories as capturing functionality typically completed within one iteration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_26\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Stories\n   :::column-end:::\n   :::column span=\"3\":::\n      [**User Story work item**](safe-concepts.md#work-items). User Stories capture the functionality you want to be delivered. They're typically sized so as to be completed with a single iteration.    \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Viewing a File's Latest Version\nDESCRIPTION: Example showing how to view the latest version of a file named 314.cs using the TFVC view command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/view-command.md#2025-04-22_snippet_1\n\nLANGUAGE: Batch\nCODE:\n```\nc:\\projects>tf view 314.cs\n```\n\n----------------------------------------\n\nTITLE: Opening Kanban Board in Azure DevOps\nDESCRIPTION: Steps to open the Kanban board for a team in Azure DevOps, including project selection, navigation to Boards, and team selection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-teams.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n1. Check that you selected the correct project, and then choose **Boards** > **Boards**, and select the correct team from the team selector dropdown menu. For more information, see [Use breadcrumbs and selectors to navigate and open artifacts](../../project/navigation/use-breadcrumbs-selectors.md).\n   \n   :::image type=\"content\" source=\"media/open-kanban-board-cloud.png\" alt-text=\"Screenshot of steps to open the board.\":::\n```\n\n----------------------------------------\n\nTITLE: Moniker-Based Documentation Links in Markdown\nDESCRIPTION: Markdown block containing version-specific documentation links for Azure DevOps 2020 and later, using the moniker range selector to control content visibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/set-column-options.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\">= azure-devops-2020\"\n\n- [Display rollup progress or totals](display-rollup.md)\n- [Interactively filter backlogs, boards, queries, and plans](filter-backlogs-boards-plans.md) \n- [Work item field index](../work-items/guidance/work-item-field.md)  \n- [View, run, or email a work item query](../queries/view-run-query.md)\n- [Create managed queries](../queries/using-queries.md)\n- [Customize a sprint Taskboard](../sprints/customize-taskboard.md)\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group using Azure CLI\nDESCRIPTION: This command deletes the resource group and all associated resources created for the Managed DevOps Pool. It's used for cleaning up resources after the tutorial.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete -n $RESOURCE_GROUP_NAME\n```\n\n----------------------------------------\n\nTITLE: Example: Displaying Mapping for a Specific File\nDESCRIPTION: Shows how to display the mapping information for a specific file (word.cs).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_9\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf workfold word.cs\n```\n\n----------------------------------------\n\nTITLE: Including Release Resources and Updates - Markdown\nDESCRIPTION: This snippet demonstrates how to include external markdown files using Azure DevOps documentation syntax. The statements reference shared resources such as update links, release notes, and recommended next steps by using [!INCLUDE] directives. Dependencies include the referenced markdown files located at specified relative paths. The block expects no input or output but ensures modular document structure for easier updates and maintenance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/pipelines/sprint-163-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-163-update-links](../includes/pipelines/sprint-163-update-links.md)]\n\n[!INCLUDE [sprint-163-update](../includes/pipelines/sprint-163-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Services Requirements Table\nDESCRIPTION: Markdown table defining access levels, permissions, and services requirements for Azure DevOps Services Analytics views.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/analytics-prerequisites.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md).<br>- At least **Basic** access. |\n| **Permissions** | Anyone with access to the project, including Stakeholders, can view Analytics views. For more information about other prerequisites regarding service and feature enablement and general data tracking activities, see [Permissions and prerequisites to access Analytics](../analytics/analytics-permissions-prerequisites.md). |\n|**Services**| **Azure Boards** enabled. If it's disabled, **Analytics views** doesn't display. [Reenable it](../../organizations/settings/set-services.md) either for individual users or for the entire organization.|\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for the Migrator Prepare Command (cmdline)\nDESCRIPTION: This command displays the help documentation for the `prepare` subcommand of the Azure DevOps Data Migration Tool (`Migrator`). It provides usage instructions, parameter descriptions, and examples.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_4\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator prepare /help\n```\n\n----------------------------------------\n\nTITLE: NPM Initialization Command\nDESCRIPTION: Command to initialize a new Node.js project with npm package manager.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm init\n```\n\n----------------------------------------\n\nTITLE: Checking Out a Single File in TFVC\nDESCRIPTION: Example showing how to check out a single file (program.cs) from a TFVC workspace. This changes the file's status to edit and makes it writable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/checkout-or-edit-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1\\>tf checkout program.cs\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps URL Format\nDESCRIPTION: Shows the format for accessing an Azure DevOps organization's settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/restrict-invitations.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Windows Agent Package Path Configuration\nDESCRIPTION: File system path where agent package files should be placed on Windows servers for local agent updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/qa-agent-version.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n%ProgramData%\\Microsoft\\Azure DevOps\\Agents\n```\n\n----------------------------------------\n\nTITLE: Maven Dependency Configuration for Zipflinger Package\nDESCRIPTION: XML configuration to add the Zipflinger library dependency to a Maven project's pom.xml file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/google-maven.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>com.android</groupId>\n    <artifactId>zipflinger</artifactId>\n    <version>8.3.0-alpha13</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Listing Local Workspaces in TFVC Project Collection\nDESCRIPTION: Command to list all local workspaces in a TFVC project collection using the tf workspaces command. This command requires appropriate permissions and displays detailed workspace information for all owners.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/decide-between-using-local-server-workspace.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntf workspaces /format:detailed /owner:* /collection:https://<YourServer>/<YourCollection>/\n```\n\n----------------------------------------\n\nTITLE: Invalid Custom XML Tag Example\nDESCRIPTION: Example showing incorrect usage of a custom XML tag 'FOO' in a work item type definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<WORKITEMTYPE name=\"Bug\" refname=\"My.Bug\">\n  <FOO>Hello World</FOO>\n  ...\n```\n\n----------------------------------------\n\nTITLE: Example: Displaying Workspace Mappings\nDESCRIPTION: Shows how to display the mappings for the workspace that contains the c:\\projects directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_7\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf workfold\n```\n\n----------------------------------------\n\nTITLE: Including Azure DevOps Version Compatibility Note\nDESCRIPTION: Markdown include statement for specifying Azure DevOps version compatibility information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/comparison-git-tfvc.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\\n[!INCLUDE [version-vs-gt-eq-2019](../../includes/version-vs-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Shared Release Sections in Markdown Documentation\nDESCRIPTION: This snippet demonstrates the use of the Visual Studio-style '[!INCLUDE]' directive in Markdown to inject the contents of referenced markdown files at specific points within the documentation. Dependencies include a compatible markdown documentation pipeline that supports the '[!INCLUDE]' directive. File paths must be valid, and the included markdown will be rendered as part of this file's output. This approach enables modular documentation, but only works in environments configured to handle these directives.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/general/sprint-234-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-234-update-links](../includes/general/sprint-234-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-234-update](../includes/general/sprint-234-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating State Change Count - First Completed Column with DAX\nDESCRIPTION: DAX formula that tracks the first time a work item transitions to the Completed state. This calculated column counts occurrences where a work item enters the Completed state for the first time by finding the minimum State Change Date where the state equals Completed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_14\n\nLANGUAGE: DAX\nCODE:\n```\nState Change Count - First Completed =\nVAR CompletedState = \"Completed\"\nRETURN\nCALCULATE(\n   COUNTROWS('YourTable'),\n   FILTER(\n       'YourTable',\n       'YourTable'[State] = CompletedState\n       && 'YourTable'[State Change Date] = MIN('YourTable'[State Change Date])\n   )\n)\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Project-Level Agent Pool Created Event (JSON)\nDESCRIPTION: This JSON object illustrates the sample payload for a 'projectlevelagentpool.created' event in Azure DevOps. It includes the publisher ID, event ID, details about the newly created agent pool (ID, name), the associated project (ID, name), and the creation timestamp. Service hooks can use this payload to trigger actions upon the creation of new agent pools within a specific project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"publisherId\": \"azure-devops\",\n  \"eventId\": \"projectlevelagentpool.created\",\n  \"resource\": {\n    \"projectLevelAgentPool\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000pool-id\",\n      \"name\": \"pool-name\",\n      \"project\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n        \"name\": \"project-name\"\n      }\n    }\n  },\n  \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Listing Test Plans with TCM CLI\nDESCRIPTION: Example showing how to list test plans for the Fabrikam Fiber project. The output shows the test plan IDs and names, with IDs corresponding to work item IDs defined when the test plans were created.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_1\n\nLANGUAGE: tcm\nCODE:\n```\ntcm plans /list /collection:https://dev.azure.com/fabrikamprime /teamproject:\"Fabrikam Fiber\"\n\nId        Name\n------***----------------------------------------------------------------\n66        Sprint 1\n72        All sprints\n77        Sprint 2\n86        Hello World Test\n```\n\n----------------------------------------\n\nTITLE: Configuring IP V4 Ranges for Azure DevOps Firewall\nDESCRIPTION: List of IP V4 ranges to be allowed in firewall configurations for Azure DevOps agents. These ranges ensure proper communication with Azure DevOps services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/qa-firewall.md#2025-04-22_snippet_0\n\nLANGUAGE: IP V4 ranges\nCODE:\n```\n13.107.6.0/24\n13.107.9.0/24\n13.107.42.0/24\n13.107.43.0/24\n150.171.22.0/24 \n150.171.23.0/24 \n150.171.73.0/24 \n150.171.74.0/24 \n150.171.75.0/24 \n150.171.76.0/24\n```\n\n----------------------------------------\n\nTITLE: Embedding Team Automation Rules Demo GIF in Markdown\nDESCRIPTION: This snippet demonstrates how to include a GIF animation in Markdown to showcase the Team Automation Rules feature in action.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/boards/sprint-228-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Gif to demo Team automation rules.](../../media/228-boards-01.gif \"gif to demo Team automation rules\")\n```\n\n----------------------------------------\n\nTITLE: Listing Work Item Relation Types - Azure DevOps CLI - azurecli\nDESCRIPTION: This snippet demonstrates how to list supported work item link types in your Azure DevOps organization using the Azure CLI. The command optionally takes an organization URL (org) as a parameter and outputs the results in the default format. The Azure CLI extension for Azure DevOps is required; authenticate and configure default organization as needed. The command returns a list of link types; key parameters include the organization URL to query and output format (e.g., table, json).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/link-type-reference.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards work-item relation list-type [--org]\n```\n\n----------------------------------------\n\nTITLE: Marketplace Q&A Configuration\nDESCRIPTION: Examples of configuring the Q&A support options for an extension in the Visual Studio Marketplace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"CustomerQnASupport\": {\n        \"enablemarketplaceqna\": true,\n        \"url\": \"http://uservoice.visualstudio.com\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Ngrok Tunnel Command\nDESCRIPTION: Command to create a public URL that forwards to localhost:3000 using ngrok.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nngrok http 3000\n```\n\n----------------------------------------\n\nTITLE: Installing a PowerShell Module\nDESCRIPTION: Command to install the latest stable version of a PowerShell module from a registered repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_14\n\nLANGUAGE: powershell\nCODE:\n```\nInstall-PSResource <MODULE_NAME>\n```\n\n----------------------------------------\n\nTITLE: South India Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps services in the South India region. Includes both SharePoint (shprod) and Team Foundation Server (tfsprod) instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\ntfsprodsin1ip1\t40.81.75.130\n\t\t\nshprodsin1ip1\t40.81.76.87\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Configuration Example\nDESCRIPTION: Shows how to use environment variables instead of command-line parameters for agent configuration. The example demonstrates setting a password using the VSTS_AGENT_INPUT_ prefix.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/unattended-config-unix.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nVSTS_AGENT_INPUT_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Property Definitions with Annotations\nDESCRIPTION: Example showing how properties are defined with their types and display name annotations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-metadata.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<Property Name=\"ProjectSK\" Nullable=\"false\" Type=\"Edm.Guid\"/>\n<Property Name=\"ProjectId\" Nullable=\"false\" Type=\"Edm.Guid\">\n   <Annotation String=\"Project Id\" Term=\"Display.DisplayName\"/>\n</Property>\n<Property Name=\"ProjectName\" Nullable=\"false\" Type=\"Edm.String\">\n   <Annotation String=\"Project Name\" Term=\"Display.DisplayName\"/>\n</Property>\n```\n\n----------------------------------------\n\nTITLE: Reading Service Endpoints Scope (`vso.serviceendpoint`)\nDESCRIPTION: Grants the ability to read service endpoints. Depends on `vso.profile`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n`vso.serviceendpoint`\n```\n\n----------------------------------------\n\nTITLE: Instance-Level Information Viewing Permission Code in Azure DevOps\nDESCRIPTION: Permission code for viewing instance-level or collection-level information in Azure DevOps. This allows users to view collection-level permissions for a user or group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/collection-level-permissions-reference-table.md#2025-04-22_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\nCollection, GENERIC_READ\n```\n\n----------------------------------------\n\nTITLE: Viewing Fields List in Azure DevOps (Markdown)\nDESCRIPTION: This snippet shows the Fields list in Azure DevOps, which displays all fields defined for the organization or collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/work-item-fields.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Screenshot of Make a copy of a selected inherited process.](media/fields/list-fields.png)\n```\n\n----------------------------------------\n\nTITLE: Converting SVN Branches to Git Branches Using PowerShell\nDESCRIPTION: PowerShell command that converts all SVN remote branches to proper Git branches. The script retrieves all remote references, removes the 'refs/remotes/' prefix, creates local branches, and finally deletes the remote references. This operation can take from minutes to hours depending on repository size.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\ngit for-each-ref --format='%(refname)' refs/remotes | % { $_.Replace('refs/remotes/','') } | % { git branch \"$_\" \"refs/remotes/$_\"; git branch -r -d \"$_\"; }\n```\n\n----------------------------------------\n\nTITLE: Using Azure DevOps Project URL Format\nDESCRIPTION: Shows the URL format for accessing an Azure DevOps project. This format serves as the base URL from which you can navigate to your Git repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/find-url.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://dev.azure.com/{your_account}/{your_team_project}\n```\n\n----------------------------------------\n\nTITLE: Displaying Dimensions Table in Markdown\nDESCRIPTION: This snippet presents a markdown table showing the available dimensions for filtering and splitting metrics in Managed DevOps Pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/monitor-pool.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Dimension | Description |\n|-----------|-------------|\n| `Image` | Image name |\n| `Images` | List of images |\n| `PoolId` | Name of Managed DevOps Pool |\n| `ProviderName` | CI/CD provider (AzureProvider is currently the only provider) |\n| `ResourceRequestType` |  |\n| `SKU` | VM size |\n| `Type` |  |\n| `ErrorCode` | One of the error codes listed in [Error codes](#error-codes) |\n| `FailureStage` |  |\n| `RequestType` |  |\n| `Status` | Agent status |\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Solutions to Custom Azure Boards Work Items in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Solutions' to Azure Boards 'Solutions', suggesting representation via a custom 'Solution' work item type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_23\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Solutions\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Solutions**](safe-customize.md#custom-wit): Solutions can be represented through a custom Solution work item type. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Test Parameters Management Shortcuts\nDESCRIPTION: Shortcuts for managing test parameters, including viewing parameter sets and adding new test cases.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/test-shortcuts.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|1|View parameter set grid|\n|2|Open properties|\n|c, s|Add parameter set|\n|c, t|Add test case|\n|v, t|Toggle test cases pane|\n```\n\n----------------------------------------\n\nTITLE: Exporting Process Configuration to XML File in Azure DevOps\nDESCRIPTION: Example command to export the process configuration for a specific project collection and project to an XML file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-process-configuration.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nwitadmin exportprocessconfig /collection:CollectionURL /p:ProjectName /f:\"DirectoryPath\\ProcessConfiguration.xml\"\n```\n\n----------------------------------------\n\nTITLE: Example Agent .plist File Path with Sample Values (plaintext)\nDESCRIPTION: This snippet gives a concrete example of a generated .plist file location using sample tfs and agent names. It is structurally identical to the previous generic form, serving to illustrate how placeholders are replaced. The file path provided is not directly executable and serves as an example for documentation purposes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\n~/Library/LaunchAgents/vsts.agent.fabrikam.our-osx-agent.plist\n```\n\n----------------------------------------\n\nTITLE: Showing Wiki Details Command Syntax\nDESCRIPTION: Command syntax for showing wiki details with options to open in browser and specify project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki show --wiki\n                    [--open]\n                    [--project]\n                    [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Deriving Build Logs URL in Azure Pipelines\nDESCRIPTION: Shows how to construct the URL to view build logs in Azure Pipelines by combining several environment variables, as this isn't directly provided as a single variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-jenkins.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}/${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\n```\n\n----------------------------------------\n\nTITLE: Filtering work items by project in Azure DevOps\nDESCRIPTION: Example of using the 'proj' filter to find work items containing 'Wiki' in the Fabrikam project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/functional-work-item-search.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nWiki proj:Fabrikam\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps 2022 Access Requirements Table\nDESCRIPTION: Markdown table defining access levels and permissions required for Azure DevOps 2022 version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/prerequisites-kanban.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md). <br> - To add work items and use all board features: At least [**Basic** access](../../organizations/security/access-levels.md). <br> - Users with **Stakeholder** access for a private project can add work items and update status through drag-and-drop but can't update fields displayed on cards. They can add tasks and change task status. |\n| **Permissions** | To view or modify work items: **View work items in this node** and **Edit work items in this node** permissions set to **Allow**. By default, the **Contributors** group has these permissions. For more information, see [Set permissions and access for work tracking](../../organizations/security/set-permissions-access-work-tracking.md). |\n```\n\n----------------------------------------\n\nTITLE: Creating Mermaid Sequence Diagrams in Azure DevOps Wiki\nDESCRIPTION: Shows how to add a Mermaid sequence diagram to visualize process interactions and order in an Azure DevOps wiki page.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n::: mermaid\nsequenceDiagram\n    Christie->>Josh: Hello Josh, how are you?\n    Josh-->>Christie: Great!\n    Christie->>Josh: See you later!\n:::\n```\n\n----------------------------------------\n\nTITLE: Using Build.Repository.ID Variable in Azure DevOps Pipelines\nDESCRIPTION: Provides the unique, unchanging identifier of the repository. It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_15\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.Repository.ID\n```\n\n----------------------------------------\n\nTITLE: Updating Serialization Implementation\nDESCRIPTION: Demonstrates the migration from BinaryFormatter to JsonSerializerSettings for policy serialization handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/tfvc-check-in-policy-migrate-guide.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\n[Serializable]\npublic class Simple : PolicyBase\n{\n    public override BinaryFormatter GetBinaryFormatter()\n    {\n        BinaryFormatter formatter = new BinaryFormatter();\n        formatter.Binder = new SimpleBinder();\n        return formatter;\n    }\n    ...\n}\n```\n\nLANGUAGE: csharp\nCODE:\n```\n[Serializable]\npublic class SimpleNew : CheckinPolicyBase\n{\n    public override JsonSerializerSettings GetJsonSerializerSettings()\n    {\n        return new JsonSerializerSettings()\n        {\n            SerializationBinder = new SimpleNewSerializationBinder(),\n            TypeNameHandling = TypeNameHandling.Objects\n        };\n    }\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Unpublished State in Azure DevOps REST API\nDESCRIPTION: This code snippet demonstrates how to use the 'unpublished' field in the Azure DevOps Services REST API version 7.2 to programmatically identify extensions that are unpublished from the Visual Studio Marketplace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/manage-high-privilege-extensions.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET https://dev.azure.com/{organization}/_apis/extensionmanagement/installedextensions?api-version=7.2\n```\n\n----------------------------------------\n\nTITLE: Defining TypeField for RemainingWork in Azure DevOps XML\nDESCRIPTION: Specifies the reference name of a field for remaining work, used to calculate burndown charts. The format attribute defines how the value is displayed on sprint backlogs and task boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_11\n\nLANGUAGE: XML\nCODE:\n```\n<TypeField refname=\"FieldReferenceName\"  \n         type=\"RemainingWork\" [format=\"{0} TimeUnitString\"] / >\n```\n\n----------------------------------------\n\nTITLE: Staging Directory Path Example\nDESCRIPTION: Example of Build.StagingDirectory local path on build agent where artifacts are staged\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_25\n\nLANGUAGE: plaintext\nCODE:\n```\nc:\\agent_work\\1\\a\n```\n\n----------------------------------------\n\nTITLE: Test Runs Management Shortcuts\nDESCRIPTION: Shortcuts for accessing and filtering test runs in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/test-shortcuts.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|1|Test runs|\n|2|Filter|\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Tasks Workload Identity Support Table\nDESCRIPTION: Markdown table showing Azure Pipeline tasks and their support status for workload identity federation. Includes task versions and recommended alternatives for unsupported versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/troubleshoot-workload-identity.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Task                                     | Workload identity federation support                                                                                            |\n|------------------------------------------|---------------------------------------------------------------------------------------------------------------|\n| AutomatedAnalysis@0                      | Y |\n| AzureAppServiceManage@0                  | Y |\n| AzureAppServiceSettings@1                | Y |\n| AzureCLI@1                               | Y |\n| AzureCLI@2                               | Y |\n```\n\n----------------------------------------\n\nTITLE: Creating a 'Next Step' Action Button in Markdown\nDESCRIPTION: This code snippet shows how to create a 'Next Step' action button in Markdown, linking to a related article about burndown and burnup guidance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/configure-burndown-burnup-widgets.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Burndown and burnup guidance](burndown-guidance.md)\n```\n\n----------------------------------------\n\nTITLE: Displaying Version-Specific Content in Markdown\nDESCRIPTION: Uses a moniker range to conditionally display content based on the Azure DevOps version. This snippet shows how to include content for Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/object-limits.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"azure-devops\"\n\n| Object | Limit |\n|--------|-------|\n| Attachments added to a work item | 100 |\n| Attachment size | 60 MB |\n| Long text field | 1-M characters |\n| Query execution time  |  30 seconds |\n| Query results | 20,000 items |\n| Query length | 32,000 characters |\n| Shared queries under a folder | 999 queries |\n| Work item links assigned to a work item | 1,000 |\n| Work item tags assigned to a work item | 100 |\n| Work item revisions (REST API) | 10,000 | \n| Favorite queries per project | 200 queries |\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Retrieving User-Scoped Settings in Azure DevOps Extension\nDESCRIPTION: Shows how to retrieve a user-scoped setting value using the SDK data service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n    // Get data service\n    SDK.getService(SDK.getContributionId()).then(function(dataService) {\n        // Get value in user scope\n        dataService.getValue(\"userScopedKey\", {scopeType: \"User\"}).then(function(value) {\n            console.log(\"User scoped key value is \" + value);\n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: Directory Paths for TCM Command-Line Tool Access in Visual Studio\nDESCRIPTION: Lists the directory paths where TCM command-line tool can be accessed based on different Visual Studio versions and editions. These paths are essential for executing TCM commands from the command prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/includes/prerequisites-tcm.md#2025-04-22_snippet_0\n\nLANGUAGE: plain text\nCODE:\n```\n%programfiles(x86)%\\Microsoft Visual Studio\\2017\\Professional\\Common7\\IDE\n%programfiles(x86)%\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\n%programfiles(x86)%\\Microsoft Visual Studio 14.0\\Common7\\IDE\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Iteration to Azure Boards Iteration Path in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Iteration' to Azure Boards 'Iteration Path', reiterating that these are defined per project with dates and team subscriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Iteration \n   :::column-end:::\n   :::column span=\"3\":::\n      [**Iteration Path**](safe-concepts.md#iterations). You define Iteration Paths for a project and set their start and end dates. Each team subscribes to the iterations they work with.   \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Configuring package.json for scoped packages\nDESCRIPTION: Example of a package.json file that uses a scope in the package name. The name property includes the scope prefix with the @ symbol followed by the scope name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/scopes.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\"name\": \"@ScopeName/PackageName\" \n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Command-Specific Documentation with tf msdn\nDESCRIPTION: Example of using the tf msdn command with a specific command name (workspace) to display the documentation for that particular TFVC command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/msdn-command.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf msdn workspace\n```\n\n----------------------------------------\n\nTITLE: Inspecting Work Item Link Type Attributes - Azure DevOps CLI Output - output\nDESCRIPTION: This snippet shows sample JSON output when listing work item link types using the Azure DevOps CLI or related REST API. Each object includes link type attributes such as directionality, acyclicity, enabled state, remote status, topology, and usage. The JSON format provides detailed metadata for each link type; this information can be parsed for automation scenarios or integration development. Output includes key fields: name, referenceName, url, and an attributes dictionary.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/link-type-reference.md#2025-04-22_snippet_4\n\nLANGUAGE: output\nCODE:\n```\n  {\n    \"attributes\": {\n      \"acyclic\": true,\n      \"directional\": true,\n      \"editable\": false,\n      \"enabled\": true,\n      \"isForward\": true,\n      \"oppositeEndReferenceName\": \"System.LinkTypes.Remote.Dependency-Reverse\",\n      \"remote\": true,\n      \"singleTarget\": true,\n      \"topology\": \"dependency\",\n      \"usage\": \"workItemLink\"\n    },\n    \"name\": \"Produces For\",\n    \"referenceName\": \"System.LinkTypes.Remote.Dependency-Forward\",\n    \"url\": \"https://dev.azure.com/mseng/_apis/wit/workItemRelationTypes/System.LinkTypes.Remote.Dependency-Forward\"\n  },\n  {\n    \"attributes\": {\n      \"acyclic\": true,\n      \"directional\": true,\n      \"editable\": false,\n      \"enabled\": true,\n      \"isForward\": false,\n      \"oppositeEndReferenceName\": \"System.LinkTypes.Remote.Dependency-Forward\",\n      \"remote\": true,\n      \"singleTarget\": true,\n      \"topology\": \"dependency\",\n      \"usage\": \"workItemLink\"\n    },\n    \"name\": \"Consumes From\",\n    \"referenceName\": \"System.LinkTypes.Remote.Dependency-Reverse\",\n    \"url\": \"https://dev.azure.com/mseng/_apis/wit/workItemRelationTypes/System.LinkTypes.Remote.Dependency-Reverse\"\n  },\n```\n\n----------------------------------------\n\nTITLE: Example: Displaying a Work Item Type Definition\nDESCRIPTION: This example shows how to display the XML definition of a work item type directly in the Command Prompt window instead of saving to a file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_8\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin exportwitd /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /p:AdventureWorks /n:myworkitem\n```\n\n----------------------------------------\n\nTITLE: Querying Test Duration for Build Workflow with OData\nDESCRIPTION: This OData query retrieves test duration data for a specific pipeline with a 'Build' workflow. It provides the total count of test executions, total duration, and average duration for each test.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-duration.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And Date/Date ge {startdate} \n    And Workflow eq 'Build'\n)/groupby(\n    (TestSK, Test/TestName),\n    aggregate(\n        ResultCount with sum as TotalCount,\n        ResultDurationSeconds with sum as TotalDuration\n    )\n)/compute(\n    TotalDuration div TotalCount as AvgDuration\n)\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Table in Markdown\nDESCRIPTION: Markdown table showing the required permissions for viewing branch hierarchies in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/view-branch-hierarchy-team-project.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Permissions**|**Read** permission set to **Allow**. |\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Azure DevOps Documentation\nDESCRIPTION: YAML metadata block specifying the document type as an include file and setting the last modified date for the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-vs-gt-eq-2019.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\nms.date: 02/09/2022\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: Command to create a new resource group in Azure to host the Key Vault. Resource groups are logical containers for related Azure resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-in-own-project.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name <your-resource-group>\n```\n\n----------------------------------------\n\nTITLE: Visual Studio Workspace Path Convention\nDESCRIPTION: Recommended folder structure for mapping TFVC workspaces in Visual Studio. Shows the standard path format used for organizing source code workspaces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/create-work-workspaces.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nc:\\Users\\<YourName>\\Source\\Workspaces\\<ProjectName>\n```\n\n----------------------------------------\n\nTITLE: Example: Exporting a Work Item Type with Global Lists\nDESCRIPTION: This example exports a work item type definition and includes any global lists referenced by the work item type in the output XML file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_7\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin exportwitd /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /p:AdventureWorks /f:myworkitems.xml /n:myworkitem /exportgloballists\n```\n\n----------------------------------------\n\nTITLE: Including Collaboration Information in Markdown\nDESCRIPTION: This snippet demonstrates how to include external content in a Markdown file using the INCLUDE directive. It's used to add collaboration-related information to the document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-access.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/collaborate.md)]\n```\n\n----------------------------------------\n\nTITLE: Querying Test Points for Configuration Outcomes via OData\nDESCRIPTION: This OData query retrieves test point data from Azure DevOps Analytics, filtering by test plan title and grouping results by test configuration and outcome. It's an alternative to the Power BI query for direct API access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-configuration-by-outcome.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPoints?  \n    $apply=filter((TestSuite/TestPlanTitle eq '{testPlanTitle}')) \n    /groupby( \n        (TestConfiguration/Name, LastResultOutcome),  \n        aggregate($count as Count) \n    )\n```\n\n----------------------------------------\n\nTITLE: Including General Sprint 251 Update Details (Markdown)\nDESCRIPTION: This Markdown snippet uses the `[!INCLUDE ...]` directive to embed the main content detailing the General updates introduced in Sprint 251 from the specified include file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update](includes/general/sprint-251-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Team Kanban to Azure Boards Stories Board in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Team Kanban' to the Azure Boards 'Stories board'. It describes the board as an interactive display of the Stories backlog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_28\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Team Kanban\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Stories board**](safe-plan-track-boards.md#agile-team-board). The Stories board displays the Stories backlog as cards in an interactive, configurable, and filterable board.  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Viewing Project-Level Information Permission Identifier (Plaintext)\nDESCRIPTION: The identifier (`Project, GENERIC_READ`) allows users to view project-level information within Azure DevOps, specifically including group memberships and permissions settings for the project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, GENERIC_READ\n```\n\n----------------------------------------\n\nTITLE: Basic Dir Command Syntax in TFVC\nDESCRIPTION: The base syntax for the TFVC dir command, which displays contents from the Team Foundation Version Control server. It includes optional parameters for version specification, recursive listings, folder filtering, and authentication options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/dir-command.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ntf dir itemspec [/version:versionspec] [/recursive] \n[/folders] [/deleted] [/login:username,[password]] [/collection:TeamProjectCollectionUrl]\n```\n\n----------------------------------------\n\nTITLE: Configuring Stateful Agent using ARM Template\nDESCRIPTION: ARM template configuration for setting up a stateful agent with a seven-day maximum lifetime and thirty-minute grace period.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                \"agentProfile\": {\n                    \"maxAgentLifetime\": \"7.00:00:00\",\n                    \"gracePeriodTimeSpan\": \"00:30:00\",\n                    \"kind\": \"Stateful\"\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Time In Progress State Using DAX in Azure DevOps Analytics\nDESCRIPTION: This DAX formula calculates the cumulative time a work item has spent in the 'In Progress' state up to each date point. It uses the CALCULATE function with ALLEXCEPT to maintain the work item context while counting only days where the state was 'In Progress'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_6\n\nLANGUAGE: DAX\nCODE:\n```\nState Time in Days - In Progress = \nCALCULATE (\n    SUM ( 'View Name'[Date Diff in Days] ),\n    ALLEXCEPT ( 'View Name', 'View Name'[Work Item Id] ),\n   'View Name'[Date] <= EARLIER('View Name'[Date]),\n   'View Name'[State] = \"In Progress\"\n) + 0\n```\n\n----------------------------------------\n\nTITLE: Initializing Local Git Repository via Command Line\nDESCRIPTION: This snippet shows how to create a new local Git repository using the Git command line. It initializes the repo, adds files, makes the first commit, and renames the default branch to 'main'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/creatingrepo.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit branch -m main\n```\n\n----------------------------------------\n\nTITLE: Managing Extensions with Azure DevOps CLI\nDESCRIPTION: Use 'az devops extension' commands to manage extensions programmatically across multiple organizations. This allows for scripting and automation of extension management tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-152-update.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz devops extension\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Image Configuration\nDESCRIPTION: Simple JSON configuration for specifying a Windows 2022 Azure Pipelines image using wellKnownImageName property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-images.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\"images\": [\n    {\n        \"wellKnownImageName\": \"windows-2022\"\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Children Using Project-Scoped OData Endpoint\nDESCRIPTION: This example shows how to query work item children relationships using the project-scoped OData endpoint. The query is significantly shorter and simpler compared to organization-scoped queries as it doesn't require explicit project filtering.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_8\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}//WorkItems?\n  &$select=WorkItemId, Title\n  &$expand=Children($select=WorkItemId, Title)\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Pipelines Image in JSON (Azure CLI)\nDESCRIPTION: This JSON snippet demonstrates how to specify an Azure Pipelines image using the 'wellKnownImageName' property in the images array. It uses the 'windows-2022' image as an example.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-images.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n\"images\": [\n    {\n        \"wellKnownImageName\": \"windows-2022\"\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Mentioning Users or Groups in Azure DevOps Discussions\nDESCRIPTION: This snippet demonstrates how to mention a user, group, work item, or pull request in the Discussion section of an Azure DevOps work item. It uses the '@' symbol followed by a name or number to filter and select the desired mention.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/discussion-tip-azure-devops.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n@\n```\n\n----------------------------------------\n\nTITLE: Area Path CSS Permission Codes\nDESCRIPTION: CSS namespace permission codes for managing area path access control in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_43\n\nLANGUAGE: CSS\nCODE:\n```\nCREATE_CHILDREN\nWORK_ITEM_WRITE\nMANAGE_TEST_PLANS\nMANAGE_TEST_SUITES\nGENERIC_READ\n```\n\n----------------------------------------\n\nTITLE: Initial Pipeline Configuration\nDESCRIPTION: Basic YAML pipeline configuration with trigger and pool settings\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- none\n\npool:\n  vmImage: 'ubuntu-latest'\n```\n\n----------------------------------------\n\nTITLE: Querying Unassigned Work Items in Azure Boards (WIQL)\nDESCRIPTION: This snippet demonstrates filtering for unassigned work items by evaluating `Assigned To = _`. This clause uses a blank or empty value to target items without any current assignee. It is a simple but effective WIQL filter for identifying backlog or neglected tasks. No specific dependencies are required other than work item read access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_4\n\nLANGUAGE: WIQL\nCODE:\n```\nAssigned To = _\n```\n\n----------------------------------------\n\nTITLE: Complete Development Group XML Configuration\nDESCRIPTION: Full XML configuration for the Development group section in work item type definitions, including all external link filters for various development activities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/connect-to-github.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<Group Label=\"Development\">  \n   <Control Type=\"LinksControl\" Name=\"Development\">  \n      <LinksControlOptions ViewMode=\"Dynamic\" ZeroDataExperience=\"Development\" ShowCallToAction=\"true\">  \n         <ListViewOptions GroupLinks=\"false\">   \n         </ListViewOptions>  \n         <LinkFilters>  \n             <ExternalLinkFilter Type=\"Build\" />  \n             <ExternalLinkFilter Type=\"Integrated in build\" />  \n             <ExternalLinkFilter Type=\"Pull Request\" />  \n             <ExternalLinkFilter Type=\"Branch\" />  \n             <ExternalLinkFilter Type=\"Fixed in Commit\" />  \n             <ExternalLinkFilter Type=\"Fixed in Changeset\" />  \n             <ExternalLinkFilter Type=\"Source Code File\" />  \n             <ExternalLinkFilter Type=\"Found in build\" />  \n             <ExternalLinkFilter Type=\"GitHub Pull Request\" />  \n             <ExternalLinkFilter Type=\"GitHub Commit\" />  \n         </LinkFilters>  \n      </LinksControlOptions>  \n   </Control>  \n</Group>\n```\n\n----------------------------------------\n\nTITLE: Adding Note for Custom Widget Developers in Azure DevOps\nDESCRIPTION: This snippet shows how to include a note in Azure DevOps documentation using markdown. It provides important information for developers of custom widgets regarding team context in Project Dashboards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/reporting/sprint-162-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!Note] \n> For custom or third-party widgets, a Project Dashboard will pass the default team's context to those widgets. If you have a custom widget that relies on team context, you should update the configuration to let you select a team.\n```\n\n----------------------------------------\n\nTITLE: Permission Requirements Table in Markdown\nDESCRIPTION: A markdown table defining the permission requirements for team administration tasks, specifying that users must either be a team administrator or belong to the Project Administrators group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/prerequisites-team-settings.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Permissions**| [Team administrator](../add-team-administrator.md) or member of the [Project Administrators](../../security/change-project-level-permissions.md) group.|\n```\n\n----------------------------------------\n\nTITLE: Basic Checkin Example\nDESCRIPTION: Simple example showing how to check in all pending changes in the current workspace using the Check In dialog box.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/checkin-command.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf checkin\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Email Notification Format\nDESCRIPTION: Examples of the new standardized format for build and deployment completion email notifications in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sep-10-azure-devops-launch.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n[Build result] [pipeline name] - [repository:branch] - [project name] - [commit]\\n[Deployment result] [pipeline name] > [release name] : [stage name]\n```\n\n----------------------------------------\n\nTITLE: Error Message Protocol Scheme\nDESCRIPTION: Code snippet showing an unsupported protocol scheme error in Azure DevOps token requests\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/troubleshoot-workload-identity.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n?audience=api://AzureADTokenExchange: unsupported protocol scheme\n```\n\n----------------------------------------\n\nTITLE: Creating a Markdown Table\nDESCRIPTION: This Markdown code snippet demonstrates how to create a table with aligned columns and multiple lines of text in a cell.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| Heading 1 | Heading 2 | Heading 3 |  \n|-----------|:-----------:|-----------:|  \n| Cell A1 | Cell A2 | Cell A3 |  \n| Cell B1 | Cell B2 | Cell B3<br/>second line of text |  \n```\n\n----------------------------------------\n\nTITLE: Configuring TFVC Proxy with Basic Syntax\nDESCRIPTION: Basic syntax examples for configuring a client to use a proxy, adding, deleting, and listing proxy records, and enabling/disabling proxies. Each command format shows the proper syntax and available options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/proxy-command.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntf proxy ([/configure [Url]) [/collection:TeamProjectCollectionUrl]\n[/login:UserName,[Password]]\n```\n\nLANGUAGE: bash\nCODE:\n```\ntf proxy /add Url [/name:Name] [/site:SiteName] \n[/description:Description] [/default:(global|site|all)] \n[/collection:TeamProjectCollectionUrl] [/login:UserName,[Password]] \n```\n\nLANGUAGE: bash\nCODE:\n```\ntf proxy /delete Url [/collection:TeamProjectCollectionUrl]\n[/login:UserName,[Password]] \n```\n\nLANGUAGE: bash\nCODE:\n```\ntf proxy /list [Url1 Yrl2 ...] \n[/collection:TeamProjectCollectionUrl] [/login:UserName,[Password]]\n```\n\nLANGUAGE: bash\nCODE:\n```\ntf proxy /enabled:(true|false)\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 215 Update Details in Markdown\nDESCRIPTION: Uses a Microsoft Docs specific Markdown include directive to embed the content of 'includes/boards/sprint-215-update.md'. This snippet inserts detailed information about the Azure Boards updates for Sprint 215.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-215-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update](includes/boards/sprint-215-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Requirements Table for Azure DevOps Cloud\nDESCRIPTION: A markdown table defining the access levels, permissions, and feature enablement requirements for using Analytics widgets in Azure DevOps Cloud.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/analytics-widgets-prerequisites.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md).<br>- At least **Basic** access. |\n| **Permissions** | - [Team administrator](../../organizations/settings/add-team-administrator.md) or project administrator or specific [dashboard permissions](../dashboards/dashboard-permissions.md) granted to you.<br>- To add a widget to a team dashboard: Member of the team.|\n| **Feature enablement** | **Azure Boards** enabled. If disabled, none of the work tracking Analytics widgets display. To re-enable it, see [Turn a service on or off](../../organizations/settings/set-services.md).|\n|**Task awareness** | Be aware of the required and recommended tasks, listed later in this article.|\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure DevOps API Version Parameter\nDESCRIPTION: Sets the API version parameter to 2.0 which is required for making calls to Azure DevOps REST APIs. This version parameter helps ensure compatibility between API calls and the server endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version2.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\napi-version = 2.0\n```\n\n----------------------------------------\n\nTITLE: Requirements Table for On-Premises Azure DevOps\nDESCRIPTION: A markdown table defining the access levels, permissions, and feature enablement requirements for using Analytics widgets in on-premises versions of Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/analytics-widgets-prerequisites.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md).<br>- At least **Basic** access. |\n| **Permissions** | - [Team administrator](../../organizations/settings/add-team-administrator.md) or project administrator or specific [dashboard permissions](../dashboards/dashboard-permissions.md) granted to you.<br>- To add a widget to a team dashboard: Member of the team.|\n| **Feature enablement** | - **Azure Boards** enabled. If disabled, none of the work tracking Analytics widgets display. To re-enable it, see [Turn a service on or off](../../organizations/settings/set-services.md).<br>- [Analytics installed and enabled](../dashboards/analytics-extension.md). [**Project Collection Administrators** group](../../organizations/security/change-organization-collection-level-permissions.md) members can add extensions or enable the service. Organization owners are automatically members of this group.|\n```\n\n----------------------------------------\n\nTITLE: Viewing Changeset Information in Command Prompt\nDESCRIPTION: Example showing how to display non-editable information about changeset 8675309 directly in the command prompt using the /noprompt option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/changeset-command.md#2025-04-22_snippet_7\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf changeset 8675309 /noprompt\n```\n\n----------------------------------------\n\nTITLE: Package Extension Using TFX CLI\nDESCRIPTION: Command to package an extension using the TFX command-line interface tool\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/overview.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx tfx-cli extension create\n```\n\n----------------------------------------\n\nTITLE: Viewing Example Vulnerable package.json with Direct and Transitive Dependencies\nDESCRIPTION: An example package.json file that contains vulnerable dependencies. It shows direct dependencies like axios (version 0.18.0) and eslint (version 5.16.0), both of which have security vulnerabilities either directly or through transitive dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n \"name\": \"my-package\",\n \"version\": \"1.0.0\",\n \"dependencies\": {\n   \"axios\": \"0.18.0\",\n   \"eslint\": \"5.16.0\",\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Renaming Work Item Type in XML\nDESCRIPTION: Example showing how to rename a work item type from 'LSI' to 'Live Site Incident' while maintaining the same reference name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<WORKITEMTYPE name=\"Live Site Incident\" refname=\"My.LSI\">\n```\n\n----------------------------------------\n\nTITLE: Display Folder Properties Example\nDESCRIPTION: Example showing how to display properties information for a working folder named objects using the tf info command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/properties-or-info-command.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf info objects\n```\n\n----------------------------------------\n\nTITLE: Deleting Wiki Command Syntax\nDESCRIPTION: Command syntax for deleting a wiki in Azure DevOps with optional parameters for project and subscription specification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki delete \n                      [--wiki]\n                      [--project]\n                      [--subscription]\n                      [--yes]\n```\n\n----------------------------------------\n\nTITLE: Manage test environments Permission Reference\nDESCRIPTION: Permission that allows users to create and delete test environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, MANAGE_TEST_ENVIRONMENTS`\n```\n\n----------------------------------------\n\nTITLE: Microsoft Teams URL\nDESCRIPTION: URL for accessing Microsoft Teams web interface for authentication purposes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/microsoft-teams.md#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://teams.microsoft.com/\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 216 Update Details for Reporting (Markdown)\nDESCRIPTION: This Markdown directive includes content from `includes/reporting/sprint-216-update.md`. It is used to insert the detailed update information for the Reporting section related to Sprint 216.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-216-update](includes/reporting/sprint-216-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Calculating Previous Date for Each Row in Power BI Using DAX\nDESCRIPTION: This DAX code creates a calculated column that finds the previous date for each row by scanning the Date field. It handles gaps in data and works for any time period, not just daily intervals.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_2\n\nLANGUAGE: DAX\nCODE:\n```\nDate Previous =\nCALCULATE (\n    MAX ( 'View Name'[Date] ),\n        ALLEXCEPT ( 'View Name', 'View Name'[Work Item Id] ),\n        'View Name'[Date] < EARLIER ( 'View Name'[Date] )\n)\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Service Connection Updated Event in Azure DevOps\nDESCRIPTION: JSON payload structure for the serviceendpoint.updated event in Azure DevOps. Includes details about the updated service connection and project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_30\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"publisherId\": \"azure-devops\",\n    \"eventId\": \"serviceendpoint.updated\",\n    \"resource\": {\n        \"serviceEndpoint\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000service-connection-id\",\n            \"name\": \"service-connection-name\",\n            \"type\": \"service-connection-type\",\n            \"url\": \"service-connection-url\",\n            \"project\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n                \"name\": \"project-name\"\n            }\n        }\n    },\n    \"updatedDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Wiki Page Command Syntax\nDESCRIPTION: Command syntax for creating a new wiki page with options for content, encoding, and file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page create --path\n                           --wiki\n                           [--comment]\n                           [--content]\n                           [--encoding {ascii, utf-16be, utf-16le, utf-8}]\n                           [--file-path]\n                           [--project]\n                           [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Configuring IP V6 Ranges for Azure DevOps Firewall\nDESCRIPTION: List of IP V6 ranges to be allowed in firewall configurations for Azure DevOps agents. These ranges ensure proper communication with Azure DevOps services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/qa-firewall.md#2025-04-22_snippet_1\n\nLANGUAGE: IP V6 ranges\nCODE:\n```\n2620:1ec:4::/48\n2620:1ec:a92::/48\n2620:1ec:21::/48\n2620:1ec:22::/48\n2620:1ec:50::/48 \n2620:1ec:51::/48 \n2603:1061:10::/48\n```\n\n----------------------------------------\n\nTITLE: Including General Update Links using Markdown Directive\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/general/sprint-217-update-links.md`), likely containing links related to general updates for Sprint 217. It's used within the Azure DevOps documentation build system (Microsoft Docs).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-217-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update-links](includes/general/sprint-217-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Field Descriptions Include Statement\nDESCRIPTION: Markdown include statement for basic field descriptions in the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/get-started/plan-track-work.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [basic field descriptions](../includes/section-basic-field-descriptions.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Project-Scoped NuGet Feed Connection\nDESCRIPTION: XML configuration for connecting to a project-scoped Azure Artifacts NuGet feed. Defines package source with organization and project-specific feed URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/nuget-exe.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<SOURCE_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Agent Diagnostic Log Error\nDESCRIPTION: Error message from agent diagnostic log showing SSL security error.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/certificate.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n[2017-11-06 20:55:33Z ERR  AgentServer] System.Net.Http.HttpRequestException: An error occurred while sending the request. ---> System.Net.Http.WinHttpException: A security error occurred\n```\n\n----------------------------------------\n\nTITLE: Searching Recycle Bin for Deleted Wiki Repository\nDESCRIPTION: HTTP GET request to search the git repository recycle bin for deleted wiki repositories. Used to locate repositories before restoration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/restore-deleted-wiki.md#2025-04-22_snippet_1\n\nLANGUAGE: HTTP\nCODE:\n```\nGET https://dev.azure.com/christiechurch/fabrikamfiber/_apis/git/recycleBin/repositories?api-version=7.1-preview.1\n```\n\nLANGUAGE: REST API\nCODE:\n```\n{\n    \"value\": [\n        {\n            \"id\": \"978e3886-64a8-4b6f-96da-6afc2936b04b\",\n            \"name\": \"fabrikamfiber.wiki\",\n            \"project\": {\n                \"id\": \"052a83ac-af70-4194-b53f-df073e5f1786\",\n                \"name\": \"fabrikamfiber\",\n                \"url\": https://dev.azure.com/christiechurch/_apis/projects/052a83ac-af70-4194-b53f-df073e5f1786,\n                \"state\": \"wellFormed\",\n                \"revision\": 421800049,\n                \"visibility\": \"organization\",\n                \"lastUpdateTime\": \"2023-07-18T12:25:29.3Z\"\n            },\n            \"deletedBy\": {\n                \"displayName\": \"Christie Church\",\n                \"url\": https://spsprodeus23.vssps.visualstudio.com/A1df9d653-bdfb-459b-a0c7-725052b2f944/_apis/Identities/0a0a4b55-9671-440d-87bf-26644f200d8a,\n                \"_links\": {\n                    \"avatar\": {\n                        \"href\": https://dev.azure.com/christiechurch/_apis/GraphProfile/MemberAvatars/aad.MDY4MDk2OGQtYWU5OS03Y2M5LTgxZTEtNTBjMDk4ZTllZTlh\n                    }\n                },\n                \"id\": \"0a0a4b55-9671-440d-87bf-26644f200d8a\",\n                \"uniqueName\": christiechurch@fabrikam.com,\n                \"imageUrl\": https://dev.azure.com/christiechurch/_api/_common/identityImage?id=0a0a4b55-9671-440d-87bf-26644f200d8a,\n                \"descriptor\": \"aad.MDY4MDk2OGQtYWU5OS03Y2M5LTgxZTEtNTBjMDk4ZTllZTlh\"\n            },\n            \"createdDate\": \"2023-07-18T12:23:55.64Z\",\n            \"deletedDate\": \"2023-07-18T12:41:38.737Z\"\n        }\n    ],\n    \"count\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure DevOps Work Item Management Features in Markdown\nDESCRIPTION: A markdown list of links to different work item management features in Azure DevOps, including live reload, path management, column options, search capabilities, process changes, and field customization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/boards/sprint-154-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Work item live reload](#work-item-live-reload)\n- [Manage iteration and area paths from the command line](#manage-iteration-and-area-paths-from-the-command-line)\n- [Work item parent column as column option](#work-item-parent-column-as-column-option)\n- [Instant search for work items](#instant-search-for-work-items)\n- [Search for a work item as you type](#search-for-a-work-item-as-you-type)\n- [Change the process used by a project](#change-the-process-used-by-a-project)\n- [Hide custom fields from layout](#hide-custom-fields-from-layout)\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Field Consistently Across Work Item Types in Azure DevOps\nDESCRIPTION: Examples of defining a custom field 'Hair Color' consistently across different work item types (Bug.xml and UserStory.xml) in Azure DevOps. Demonstrates the importance of maintaining consistent field definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_40\n\nLANGUAGE: XML\nCODE:\n```\nBug.xml:\n<FIELD name=\"Hair Color\" refname=\"MyCompany.CustomFields.HairColor\" type=\"String\" reportable=\"dimension\" />\n\nUserStory.xml:\n<FIELD name=\"Hair Color\" refname=\"MyCompany.CustomFields.HairColor\" type=\"String\" reportable=\"dimension\" />\n```\n\n----------------------------------------\n\nTITLE: Example Validation Command for Azure DevOps Migration\nDESCRIPTION: This is an example of a validation command for the DefaultCollection and fabrikam tenant. It demonstrates how to structure the command with actual values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-prerequisites.md#2025-04-22_snippet_2\n\nLANGUAGE: cmd\nCODE:\n```\nMigrator validate /collection:http://localhost:8080/DefaultCollection /tenantDomainName:fabrikam.OnMicrosoft.com /region:{region}\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Work Items Grouped by Type and State\nDESCRIPTION: This JSON shows the response structure when work items are grouped by both type and state, displaying counts for each combination.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/aggregated-data-analytics.md#2025-04-22_snippet_6\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\": \"https://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/$metadata#WorkItems(WorkItemType,State,Count)\",\n  \"value\": [\n    {\n      \"@odata.id\": null,\n      \"State\": \"Active\",\n      \"WorkItemType\": \"Bug\",\n      \"Count\": 2\n    },\n    {\n      \"@odata.id\": null,\n      \"State\": \"Committed\",\n      \"WorkItemType\": \"Bug\",\n      \"Count\": 1\n    },\n    {\n      \"@odata.id\": null,\n      \"State\": \"Active\",\n      \"WorkItemType\": \"Product Backlog Item\",\n      \"Count\": 5\n    },\n    {\n      \"@odata.id\": null,\n      \"State\": \"Committed\",\n      \"WorkItemType\": \"Product Backlog Item\",\n      \"Count\": 8\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Azure Pipelines Job State Changed Event\nDESCRIPTION: This JSON payload represents the data sent when a job state changes in an Azure Pipelines build. It includes details about the job, stage, run, pipeline, and associated repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"subscriptionId\": \"aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e\",\n    \"notificationId\": 3,\n    \"id\": \"00000000-0000-0000-0000-000000000000ac1dd6da-af30-43cb-8434-e1005864b0a3\",\n    \"eventType\": \"ms.vss-pipelines.job-state-changed-event\",\n    \"publisherId\": \"pipelines\",\n    \"message\":\n    {\n        \"text\": \"Run 20241121.5 stage Build job Compile succeeded.\",\n        \"html\": \"Run 20241121.5 stage Build job <a href=\\\"https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2710088\\\">Compile</a> succeeded.\",\n        \"markdown\": \"Run 20241121.5 stage Build job [Compile](https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2710088) succeeded.\"\n    },\n    \"detailedMessage\":\n    {\n        \"text\": \"Run 20241121.5 stage Build job Compile succeeded.\",\n        \"html\": \"Run 20241121.5 stage Build job <a href=\\\"https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2710088\\\">Compile</a> succeeded.\",\n        \"markdown\": \"Run 20241121.5 stage Build job [Compile](https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2710088) succeeded.\"\n    },\n    \"resource\":\n    {\n        \"job\":\n        {\n            \"_links\":\n            {\n                \"web\":\n                {\n                    \"href\": \"https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2\"\n                },\n                \"pipeline.web\":\n                {\n                    \"href\": \"https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/definition?definitionId=2\"\n                }\n            },\n            \"id\": \"00000000-0000-0000-0000-00000000000000000000-0000-0000-0000-000000000000\",\n            \"name\": \"__default\",\n            \"state\": \"completed\",\n            \"result\": \"succeeded\",\n            \"startTime\": \"2024-11-21T16:42:52.7761408Z\",\n            \"finishTime\": \"2024-11-21T16:42:52.7761408Z\"\n        },\n        \"stage\":\n        {\n            \"id\": \"00000000-0000-0000-0000-00000000000000000000-0000-0000-0000-000000000000\",\n            \"name\": \"__default\",\n            \"displayName\": null,\n            \"state\": \"completed\",\n            \"result\": \"succeeded\",\n            \"startTime\": null,\n            \"finishTime\": null\n        },\n        \"run\":\n        {\n            \"pipeline\":\n            {\n                \"url\": \"https://codedev.ms/org/1234/_apis/Pipelines/2?revision=2\",\n                \"id\": 2,\n                \"revision\": 2,\n                \"name\": \"TEST-CI\",\n                \"folder\": \"\\\"\"\n            },\n            \"state\": \"completed\",\n            \"result\": \"succeeded\",\n            \"createdDate\": \"2024-11-21T16:42:52.7761408Z\",\n            \"finishedDate\": \"2024-11-21T16:42:52.7761408Z\",\n            \"id\": 2,\n            \"name\": \"2\"\n        },\n        \"pipeline\":\n        {\n            \"url\": \"https://codedev.ms/org/00000000-0000-0000-0000-000000000000/_apis/Pipelines/2?revision=2\",\n            \"id\": 2,\n            \"revision\": 2,\n            \"name\": \"TEST-CI\",\n            \"folder\": \"\\\"\"\n        },\n        \"repositories\":\n        [\n            {\n                \"type\": \"Git\",\n                \"change\":\n                {\n                    \"author\":\n                    {\n                        \"name\": \"Fabrikam John\",\n                        \"email\": \"john@fabrikamfiber.com\",\n                        \"date\": \"2024-11-11T15:09:21Z\"\n                    },\n                    \"committer\":\n                    {\n                        \"name\": \"Fabrikam John\",\n                        \"email\": \"john@fabrikamfiber.com\",\n                        \"date\": \"2024-11-11T15:09:21Z\"\n                    },\n                    \"message\": \"Added Viva support\"\n                },\n                \"url\": \"https://fabrikamfiber@dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_git/fabrikamfiber\"\n            },\n            {\n                \"type\": \"GitHub\",\n                \"change\":\n                {\n                    \"author\":\n                    {\n                        \"name\": \"Fabrikam John\",\n                        \"email\": \"john@github.com\",\n                        \"date\": \"2024-08-11T15:05:20Z\"\n                    },\n                    \"committer\":\n                    {\n                        \"name\": \"Fabrikam John\",\n                        \"email\": \"john@github.com\",\n                        \"date\": \"2024-08-11T15:05:20Z\"\n                    },\n                    \"message\": \"Added Viva open source REST API library\"\n                },\n                \"url\": \"https://api.github.com/repos/FabrikamFiber/Viva\"\n            }\n        ]\n    },\n    \"resourceVersion\": \"5.1-preview.1\",\n    \"resourceContainers\":\n    {\n        \"collection\":\n        {\n            \"id\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"account\":\n        {\n            \"id\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"project\":\n        {\n            \"id\": \"00000000-0000-0000-0000-000000000000\"\n        }\n    },\n    \"createdDate\": \"2024-11-21T16:42:53.5254422Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 251 Update Links (Markdown)\nDESCRIPTION: This Markdown snippet utilizes the `[!INCLUDE ...]` directive to incorporate content from another file, specifically adding links about Azure Pipelines updates for Sprint 251.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update-links](includes/pipelines/sprint-251-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Using AND Operator in WIQL Queries\nDESCRIPTION: Demonstrates using the AND operator to combine conditions in a WIQL query, filtering for work items in a specific project assigned to a particular user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_27\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT [System.Id], [System.Title]\nFROM WorkItems\nWHERE [System.TeamProject] = @project\nAND [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\n```\n\n----------------------------------------\n\nTITLE: Configuring IP V4 Ranges for Azure DevOps ExpressRoute Connections\nDESCRIPTION: List of IP V4 addresses that need to be allowed for both outbound and inbound connections when using ExpressRoute with Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_3\n\nLANGUAGE: IP V4 ranges\nCODE:\n```\n13.107.6.175/32\n13.107.6.176/32\n13.107.6.183/32\n13.107.9.175/32\n13.107.9.176/32\n13.107.9.183/32\n13.107.42.18/32\n13.107.42.19/32\n13.107.42.20/32\n13.107.43.18/32\n13.107.43.19/32\n13.107.43.20/32\n150.171.73.14/32\n150.171.73.15/32\n150.171.73.16/32\n150.171.74.14/32\n150.171.74.15/32\n150.171.74.16/32\n150.171.75.14/32\n150.171.75.15/32\n150.171.75.16/32\n150.171.76.14/32\n150.171.76.15/32\n150.171.76.16/32\n150.171.22.17/32\n150.171.22.18/32\n150.171.22.19/32\n150.171.23.17/32\n150.171.23.18/32\n150.171.23.19/32\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure DevOps Documentation Metadata in YAML\nDESCRIPTION: YAML frontmatter block that defines metadata properties for Azure DevOps Git documentation pages. Specifies the service type, management details, authorship information, topic classification and publication date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/note-tfs-2018.2-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nms.service: azure-devops-repos\nms.manager: mijacobs\nms.author: vijayma\nauthor: vijayma\nms.topic: include\nms.date: 10/15/2021\nms.subservice: azure-devops-repos-git\n```\n\n----------------------------------------\n\nTITLE: Work Item Tracking Task List Reference\nDESCRIPTION: Example showing how to reference a work item tracking task list file in the process template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n<taskList filename=\"WorkItem Tracking\\WorkItems.xml\" />\n```\n\n----------------------------------------\n\nTITLE: Defining Access Requirements Table in Markdown\nDESCRIPTION: A markdown table that specifies the access levels and permissions required to use Azure DevOps Analytics features. Includes requirements for project membership, basic access level, and default query permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/analytics-prerequisites-simple.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md).<br>- At least **Basic** access. |\n| **Permissions** | By default, project members have permission to query Analytics and create views. For more information about other prerequisites regarding service and feature enablement and general data tracking activities, see [Permissions and prerequisites to access Analytics](../analytics/analytics-permissions-prerequisites.md). |\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Creator vs. Closer in Azure DevOps Query (WIQL)\nDESCRIPTION: This Azure DevOps query clause filters work items to find those where the 'Created By' field value is different from the 'Closed By' field value, specifically for items in the 'Closed' state. It utilizes the '<>[Field]' comparison operator to compare the two identity fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-field-value.md#2025-04-22_snippet_0\n\nLANGUAGE: wiql\nCODE:\n```\nCreated By <>[Field] Closed By State = Closed\n```\n\n----------------------------------------\n\nTITLE: Organization-Level Query Base URL\nDESCRIPTION: Base URL structure for making organization-scoped OData queries in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/account-scoped-queries.md#2025-04-22_snippet_4\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/v1.0\n```\n\n----------------------------------------\n\nTITLE: Customizing Release Name Format in Azure DevOps\nDESCRIPTION: This code snippet demonstrates how to customize the naming convention for releases in Azure DevOps using predefined variables. It allows for more descriptive and informative release names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/index.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nRelease $(Rev:rrr) for build $(Build.BuildNumber) $(Build.DefinitionName)\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Azure DevOps Documentation\nDESCRIPTION: This YAML snippet defines metadata for an Azure DevOps documentation page, including topic, service, manager, author, and date information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/includes/create-release-azure-webapp-container.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\nms.service: azure-devops-pipelines\nms.manager: mijacobs\nms.author: jukullam\nauthor: juliakm\nms.date: 02/14/2020\n---\n```\n\n----------------------------------------\n\nTITLE: Azure Service Bus Notification Hub Configuration Settings\nDESCRIPTION: Configuration settings for sending messages to Azure Service Bus Notification Hub. Includes connection string, hub name, and tags expression settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/consumers.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"connectionString\": \"string\",\n  \"notificationHubName\": \"string\",\n  \"tagsExpression\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Flaky Test Management in Azure DevOps Project Settings\nDESCRIPTION: This snippet demonstrates how to enable flaky test management in Azure DevOps project settings. It includes instructions for accessing the Test Management section and turning on the feature.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/flaky-test-management.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Screenshot of Test Management, Flaky test detection enabled, System detection.](media/flaky-test-management/system-detection.png)\n```\n\n----------------------------------------\n\nTITLE: Sample Field Status Output - In Use\nDESCRIPTION: Example output showing a field that is actively used in multiple work item types across different projects. Details usage across projects and work item types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nField: Microsoft.VSTS.TCM.SystemInfo\nName: System Info\nType: Html\nReportable As: None\nUse: Arroyo (Bug), Desert (Bug), Palm (Bug), Springs (Bug, Code Defect)\nIndexed: False\n```\n\n----------------------------------------\n\nTITLE: Definition of TestResultState Enumerated Type in Azure DevOps\nDESCRIPTION: This table defines the six possible states for a test result in Azure DevOps using the TestResultState enumerated type. Each state has a member name, numeric value, and display name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Member name          | Value        | Display name        | \n|----------------------|--------------|---------------------| \n|`None`                  | 0            | None                |  \n|`Pending`               | 1            | Pending             |  \n|`Queued`                | 2            | Queued              |    \n|`InProgress`            | 3            | In Progress         |\n|`Paused`                | 4            | Paused              |    \n|`Completed`             | 5            | Completed           |  \n```\n\n----------------------------------------\n\nTITLE: Creating Basic HTML Page for Azure DevOps Web App\nDESCRIPTION: A minimal HTML template that serves as the foundation for an Azure DevOps web application. The page includes basic HTML5 structure with UTF-8 character encoding and a simple 'Hello world' message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-hub-app-cmd.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Hello world</title>\n</head>\n<body>\n\t<h1>Hello world</h1>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing Floating-Point Equality Comparison in C#\nDESCRIPTION: This C# function compares two double values for equality, allowing for small rounding errors. It calculates an allowed error margin based on the magnitude of the input values and returns true if the difference between the values is within this margin.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-suspend-work-fix-bug-conduct-code-review.md#2025-04-22_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\n/// <summary>\n/// Returns true if two numbers are equal.\n/// </summary>\npublic static bool EqualTo(double a, double b)\n{\n    // Allow for rounding errors.\n    const double allowedErrorMultiple = 1/1000000;\n    double allowedError = (System.Math.Abs(a) + System.Math.Abs(b)) * allowedErrorMultiple/2;\n    return System.Math.Abs(a - b) < allowedError;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Portfolio Backlogs Structure in Azure DevOps XML\nDESCRIPTION: XML structure for configuring portfolio backlogs including epics and features. Defines hierarchy, naming, and work item count limits for portfolio items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<PortfolioBacklogs>\n      <PortfolioBacklog category=\"Microsoft.EpicCategory\" pluralName=\"Epics\" singularName=\"Epic\" workItemCountLimit=\"1000\">\n. . . \n      </PortfolioBacklog>\n      <PortfolioBacklog category=\"Microsoft.FeatureCategory\" pluralName=\"Features\" singularName=\"Feature\" parent=\"Microsoft.EpicCategory\" workItemCountLimit=\"1000\">\n. . . \n      </PortfolioBacklog>\n</PortfolioBacklogs>\n<RequirementBacklog category=\"Microsoft.RequirementCategory\" pluralName=\"Stories\" singularName=\"User Story\" workItemCountLimit=\"1000\">\n. . . \n</RequirementBacklog>\n<TaskBacklog category=\"Microsoft.TaskCategory\" pluralName=\"Tasks\" singularName=\"Task\" workItemCountLimit=\"1000\">\n. . . \n</TaskBacklog>\n```\n\n----------------------------------------\n\nTITLE: Reading Wiki Scope (`vso.wiki`)\nDESCRIPTION: Grants the ability to read wikis, wiki pages and wiki attachments. Also grants the ability to search wiki pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_29\n\nLANGUAGE: text\nCODE:\n```\n`vso.wiki`\n```\n\n----------------------------------------\n\nTITLE: Setting Temporary Directory for DACPAC Generation in Command Line\nDESCRIPTION: Command to set the temporary directory for DACPAC generation when the default temp directory doesn't have enough space. This environment variable redirects where SqlPackage.exe stores temporary data during DACPAC creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_9\n\nLANGUAGE: cmdline\nCODE:\n```\nSET TEMP={location on disk}\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure DevOps API Version\nDESCRIPTION: This snippet defines the API version for Azure DevOps as 3.0-preview.2. It is likely used to ensure compatibility with specific API features or endpoints.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version3-preview2.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n**api-version** = 3.0-preview.2\n```\n\n----------------------------------------\n\nTITLE: Project URL format for Azure DevOps\nDESCRIPTION: The URL format to access a specific project in Azure DevOps. Replace the placeholder values with your organization and project names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/how-long-to-keep-test-results.md#2025-04-22_snippet_0\n\nLANGUAGE: url\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}/{Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resources using Azure CLI (Interactive)\nDESCRIPTION: This Azure CLI command lists all resources within the specified resource group `ARMPipelinesLAMP-rg`. The `--output table` argument formats the output as a human-readable table. This is typically used to verify resource deployment after an ARM template deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz resource list --resource-group ARMPipelinesLAMP-rg --output table\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Shared Services to Azure Boards Team Structure in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Shared Services' to a specific 'Shared services team structure' in Azure Boards. It suggests representing shared resources as their own Agile feature team.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Shared Services\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Shared services team structure**](safe-concepts.md#shared-services): Resources that are shared across teams can be represented through their own Agile feature team. Each can manage their backlog while having their work also appear in the backlogs of the teams they support.  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Final Configuration for PAT Lifecycle Management in Python Flask Application (Python)\nDESCRIPTION: This consolidated code lists the finalized configuration of 'app_config.py' for use with Azure DevOps PAT Lifecycle Management APIs. It removes the CLIENT_SECRET from the code (assuming it is securely loaded elsewhere) and configures all relevant OAuth, endpoint, scope, and session variables. The expected result is a secure, production-ready configuration using environment variables or Azure KeyVault for secrets, supporting authenticated API calls to Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/manage-personal-access-tokens-via-api.md#2025-04-22_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nimport os\n\nCLIENT_ID = \"YOUR_CLIENT_ID_HERE\" \n# Application (client) ID of app registration\n\n# Note that the CLIENT_SECRET has been removed and moved to an environment variable or Azure KeyVault\n\nAUTHORITY = \"https://login.microsoftonline.com/YOUR_AAD_TENANT_ID_HERE\"  # For multi-tenant app\n# AUTHORITY = \"https://login.microsoftonline.com/Enter_the_Tenant_Name_Here\"\n\nREDIRECT_PATH = \"/getAToken\"  \n# Used for forming an absolute URL to your redirect URI.\n# The absolute URL must match the redirect URI you set in the app's registration in the Azure portal.\n\nENDPOINT = 'https://vssps.dev.azure.com/testCollection/_apis/Tokens/Pats?api-version=6.1-preview' \n# Used to configure user's collection URL and the desired API endpoint\n\nSCOPE = [\"499b84ac-1321-427f-aa17-267ca6975798/.default\"]\n# Means \"All scopes for the Azure DevOps API resource\"\n\nSESSION_TYPE = \"filesystem\"  \n# Specifies the token cache should be stored in server-side session\n\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Azure DevOps Documentation\nDESCRIPTION: Markdown includes for version-specific content in Azure DevOps documentation, used to conditionally display information based on the Azure DevOps version being used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/associate-automated-test-with-test-case.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../includes/version-lt-eq-azure-devops.md)]\n[!INCLUDE [version-vs-gt-2015](../includes/version-vs-gt-2015.md)]\n```\n\n----------------------------------------\n\nTITLE: Test Management Work Item Types Table\nDESCRIPTION: A markdown table defining test-specific work item types including Test Plans, Test Suites, Test Cases, Shared Steps and Shared Parameters with their descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/test-objects-overview.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n     **Work item type**\n   :::column-end:::\n   :::column span=\"3\":::\n      **Description**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Downloading Pipeline Artifacts in YAML\nDESCRIPTION: YAML configuration for downloading artifacts published by a pipeline resource. Allows specifying the pipeline identifier and optional artifact name to download.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-159-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps: \n- download: MyAppCI  # pipeline resource identifier\n    artifact:  A1 # name of the artifact to download; optional; defaults to all artifacts\n```\n\n----------------------------------------\n\nTITLE: List of Automatically Inferred Test Runners in Azure DevOps\nDESCRIPTION: This code defines the list of languages and test runners that Azure DevOps supports for automatically inferring test results without requiring explicit test result publication configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/review-continuous-test-results-after-build.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n  - JavaScript - Mocha, Jest, and Jasmine\n  - Python- Unittest\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 216 Update Links for Azure Boards (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file path (`includes/boards/sprint-216-update-links.md`). It is used within the Azure DevOps documentation system to insert shared or reusable content, specifically the links related to the Sprint 216 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-216-update-links](includes/boards/sprint-216-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Handling Hash Changes in Azure DevOps Extension (JavaScript)\nDESCRIPTION: This code shows how to set up a listener for hash changes in the host URL using the HostNavigationService in an Azure DevOps extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/host-navigation.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Get navigation service\nVSS.getService(VSS.ServiceIds.Navigation).then(function(navigationService) {\n    navigationService.onHashChanged(function (hash) {\n        // Adding #something to the end of browser url executes this handler with the hash value \"something\"\n        console.log(\"Hash changed to : \" + hash);                        \n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Workflow States for Test Plans in XML\nDESCRIPTION: XML configuration for customizing test plan workflow with Design, Testing, and Signed Off states, including state transitions and default reasons for each transition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-process-configuration.md#2025-04-22_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n<WORKFLOW>\n      <STATES>\n        <STATE value=\"Design\" />\n        <STATE value=\"Testing\" />\n        <STATE value=\"Signed Off\" />\n      </STATES>\n      <TRANSITIONS>\n        <TRANSITION from=\"\" to=\"Design\">\n          <REASONS>\n            <DEFAULTREASON value=\"New test plan\" />\n          </REASONS>\n        </TRANSITION>\n     <TRANSITION from=\"Design\" to=\"Testing\">\n          <REASONS>\n            <DEFAULTREASON value=\"Authoring complete\" />\n          </REASONS>\n        </TRANSITION>        \n     <TRANSITION from=\"Testing\" to=\"Signed Off\">\n          <REASONS>\n            <DEFAULTREASON value=\"Signed Off testing\" />\n          </REASONS>\n        </TRANSITION>\n        <TRANSITION from=\"Signed Off\" to=\"Design\">\n          <REASONS>\n            <DEFAULTREASON value=\"Reactivating to authoring phase\" />\n          </REASONS>\n        </TRANSITION>\n        <TRANSITION from=\"Signed Off\" to=\"Testing\">\n          <REASONS>\n            <DEFAULTREASON value=\"Reactivating to run tests\" />\n          </REASONS>\n        </TRANSITION>\n        <TRANSITION from=\"Testing\" to=\"Design\">\n          <REASONS>\n            <DEFAULTREASON value=\"Back to authoring\" />\n          </REASONS>\n        </TRANSITION>\n      </TRANSITIONS>\n    </WORKFLOW>\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary for Release Workflow with OData\nDESCRIPTION: OData query that retrieves test result summary data from the TestResultsDaily entity for a specified pipeline with Release workflow. The query aggregates counts for all test result types and returns results in OData format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_3\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n    Pipeline/PipelineName eq '{pipelineName}' \n    And DateSK ge {startdate} \n    And Workflow eq 'Release'\n    )/aggregate(\n    ResultCount with sum as ResultCount,\n    ResultPassCount with sum as ResultPassCount,\n    ResultFailCount with sum as ResultFailCount,\n    ResultNotExecutedCount with sum as ResultNotExecutedCount,\n    ResultNotImpactedCount with sum as ResultNotImpactedCount\n)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 221 Reporting Update Details (Markdown)\nDESCRIPTION: This Markdown include directive pulls in the detailed description of Reporting updates for Sprint 221 from the linked file (`includes/reporting/sprint-221-update.md`). It helps keep the main release note organized and delegates details to included files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-221-update](includes/reporting/sprint-221-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Update Links (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/pipelines/sprint-245-update-links.md`), likely containing links related to Sprint 245 updates for Azure Pipelines. It's used within the context of Azure DevOps release notes for organizing Pipeline-related update links.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update-links](includes/pipelines/sprint-245-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 241 Update Content in Azure DevOps Documentation\nDESCRIPTION: Markdown include directive that imports the main content of Sprint 241 updates for Azure Pipelines. This allows the actual update details to be maintained in a separate file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-241-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-241-update](../includes/pipelines/sprint-241-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Permissions Requirements Table in Markdown\nDESCRIPTION: A markdown table defining required permissions, specifically indicating that organization ownership is required for certain operations. Includes a linked reference to documentation about changing organization ownership.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/prerequisites-organization-owner-only.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Permissions**| [Owner of your organization](../organizations/accounts/change-organization-ownership.md).|\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Azure DevOps Extension via CLI\nDESCRIPTION: This command uninstalls an Azure DevOps extension. It requires the extension name and publisher name. The '--org' parameter is optional if a default organization is configured. The '--yes' flag can be used to skip confirmation prompts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension uninstall --extension-name\n                              --publisher-name\n                              [--org]\n                              [--yes]\n```\n\n----------------------------------------\n\nTITLE: Adding Boolean Field in Azure DevOps Work Item Type Definition\nDESCRIPTION: XML code to add a Boolean field to a work item type definition with a default value of False. Includes both the field definition and form control elements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-field.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Triage\" refname=\"Fabrikam.Triage\" type=\"Boolean\" >\n   <DEFAULT from=\"value\" value=\"False\" />\n   <HELPTEXT>Triage work item</HELPTEXT>\n</FIELD>\n```\n\nLANGUAGE: XML\nCODE:\n```\n<Control Label=\"Triage\" Type=\"FieldControl\" FieldName=\"Fabrikam.Triage\" />\n```\n\n----------------------------------------\n\nTITLE: Example: Exporting a Work Item Type with Custom Encoding\nDESCRIPTION: This example exports a work item type definition using Unicode (UTF-7) encoding instead of the default encoding.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\nwitadmin exportwitd /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /p:AdventureWorks /f:myworkitems.xml /n:myworkitem /e:utf-7\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content\nDESCRIPTION: Include directive to pull in the next steps content from a separate markdown file\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/general/sprint-252-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Diagnostic Logs for Event Matching in Azure DevOps\nDESCRIPTION: This URL request retrieves subscription event processing logs for different event types by specifying organization, date range, and event ID for work items, Git, or other event types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/use-subscription-logging.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{organization}/_apis/notification/DiagnosticLogs/{event ID}/entries?startTime={date}&endTime={date}\n```\n\n----------------------------------------\n\nTITLE: Pipeline Resource with Stage Filters\nDESCRIPTION: Pipeline resource definition using stage filters for trigger evaluation in CD pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: MyCIAlias  \n    project: Fabrikam  \n    source: Farbrikam-CI  \n    trigger:    \n      stages:\n      - PreProduction\n      - Production\n```\n\n----------------------------------------\n\nTITLE: China Region CDN Domain URLs\nDESCRIPTION: Additional domain URLs required for users in China to access Azure DevOps CDN content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/allow-list-ip-url.md#2025-04-22_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://*.vsassetscdn.azure.cn\nhttps://*.gallerycdn.azure.cn\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 242 Update Content in Markdown\nDESCRIPTION: Markdown include directive that pulls in the main Sprint 242 update content from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-242-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-242-update](../includes/pipelines/sprint-242-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Running a .NET application locally using dotnet CLI\nDESCRIPTION: Command to build and run a .NET application locally in the development environment. This starts the web server and makes the application available for testing before committing to source control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/dotnet-setup.md#2025-04-22_snippet_1\n\nLANGUAGE: dotnetcli\nCODE:\n```\ndotnet run\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Build Permissions Table Structure\nDESCRIPTION: Markdown table structure using Azure DevOps custom syntax (:::row::: and :::column:::) to display build permissions across different user roles. Shows permissions for tasks like viewing builds, managing build definitions, and controlling build queues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/build.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   Task\n   :::column-end:::\n   :::column span=\"1\":::\n   Readers\n   :::column-end:::\n   :::column span=\"1\":::\n   Contributors\n   :::column-end:::\n   :::column span=\"1\":::\n   Build  \n   Admins\n   :::column-end:::\n   :::column span=\"1\":::\n   Project Admins\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Listing Files and Folders Recursively in TFVC\nDESCRIPTION: Example showing how to display a recursive list of all files and folders in the TFVC server location that maps to the current directory (c:\\projects).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/dir-command.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf dir /recursive\n```\n\n----------------------------------------\n\nTITLE: Selecting Build Agent Image in YAML\nDESCRIPTION: Specifies the virtual machine image to be used for the pipeline agent pool. This example uses the latest Ubuntu image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/go.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-latest'\n```\n\n----------------------------------------\n\nTITLE: Including Version Check in Azure DevOps Wiki\nDESCRIPTION: Markdown include statement for version compatibility check in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/filter-print-wiki.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Square Root Test Implementation in C#\nDESCRIPTION: Unit test that verifies square root calculation accuracy using expected and actual results with allowable error margin.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-write-new-code-user-story.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\n[TestMethod]\npublic void QuickNonZero()\n{\n    // Create an instance to test:\n    LocalMath math = new LocalMath();\n\n    // Create a test input and expected value:\n    var expectedResult = 4.0;\n    var inputValue = expectedResult * expectedResult;\n\n    // Run the method:\n    var actualResult = math.SquareRoot(inputValue);\n\n    // Validate the result:\n    var allowableError = expectedResult/1e6;\n    Assert.AreEqual(expectedResult, actualResult, allowableError,\n        \"{0} is not within {1} of {2}\", actualResult, allowableError, expectedResult);\n}\n```\n\n----------------------------------------\n\nTITLE: Sample OData Response Structure\nDESCRIPTION: This shows the JSON response structure returned by Analytics when querying for Feature work items in the 'In Progress' state. The response includes the context metadata and an array of work items with their selected fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_6\n\nLANGUAGE: OData\nCODE:\n```\n@odata.context\t\"https://analytics.dev.azure.com/kelliott/Fabrikam%20Fiber/_odata/v4.0-preview/$metadata#WorkItems(WorkItemId,Title,State)\"\nvalue\t\n  0\t\n      WorkItemId\t380\n      Title\t\"Refresh web look, feel, performance factors\"\n      State\t\"In Progress\"\n  1\t\n      WorkItemId\t480\n      Title\t\"Customer Phone - Phase 1\"\n      State\t\"In Progress\"\n  2\t\n      WorkItemId\t493\n      Title\t\"Change initial view\"\n      State\t\"In Progress\"\n  3\t\n      WorkItemId\t479\n      Title\t\"Customer Web - Phase 1\"\n      State\t\"In Progress\"\n  4\t\n      WorkItemId\t551\n      Title\t\"Mobile feedback\"\n      State\t\"In Progress\"\n```\n\n----------------------------------------\n\nTITLE: Using failed() Condition in Azure DevOps Pipelines\nDESCRIPTION: This snippet shows how to use the failed() condition to run a job only when a previous dependency fails.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/task-run-built-in-conditions.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nfailed()\n```\n\n----------------------------------------\n\nTITLE: Initializing VSS SDK for Azure DevOps Extension\nDESCRIPTION: Sets up initial configuration for VSS SDK, enabling platform scripts and styles, and configuring explicit load notification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/use-a-control-js.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Sets up the initial handshake with the host frame\nVSS.init({\n    // Our extension explicitly notifies the host when we're done loading\n    explicitNotifyLoaded: true,\n\n    // We are using some Azure DevOps Services APIs, so we need the module loader to load them in\n    usePlatformScripts: true,\n    usePlatformStyles: true       \n});\n```\n\n----------------------------------------\n\nTITLE: Service Connection Subject Pattern\nDESCRIPTION: Code snippet showing the format of a service connection subject identifier in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/troubleshoot-workload-identity.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nsc://<org>/<project>/<service-connection>\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Project Surrogate Key in OData\nDESCRIPTION: Query that filters work items using the ProjectSK surrogate key property instead of navigating through the Project entity. Using surrogate keys reduces the number of entity sets needed for processing and improves performance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_30\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=ProjectSK eq {projectSK}\n```\n\n----------------------------------------\n\nTITLE: Refactored Square Root Implementation in C#\nDESCRIPTION: Optimized version of the square root calculation with reduced number of calculations in the loop.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-write-new-code-user-story.md#2025-04-22_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\npublic class LocalMath\n{\n    public double SquareRoot(double x)\n    {\n        double estimate = x;\n        double previousEstimate = -x;\n        while (System.Math.Abs(estimate - previousEstimate) > estimate / 1000)\n        {\n            previousEstimate = estimate; \n            estimate = (estimate + x / estimate) / 2;\n            //was: estimate = (estimate * estimate - x) / (2 * estimate);\n        }\n        return estimate;\n    }\n```\n\n----------------------------------------\n\nTITLE: Creating Work Item Template URL for Azure DevOps Server\nDESCRIPTION: Basic URL structure for creating a work item template in Azure DevOps on-premises version. The template allows specifying multiple field values through URL parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/work-item-template.md#2025-04-22_snippet_1\n\nLANGUAGE: URL\nCODE:\n```\nhttp://{ServerName}:8080/tfs/DefaultCollection/{ProjectName}/_workItems/create/{WorkItemType}?\n[FieldReferenceName 1]={FieldValue 1}&\n[FieldReferenceName 2]={FieldValue 2}&\n[FieldReferenceName 3]={FieldValue 3}&\n. . .\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 212 Update Content in Markdown\nDESCRIPTION: Includes the main content of the Sprint 212 update for Azure Boards from an external markdown file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-212-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-212-update](../includes/boards/sprint-212-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating Extension Directory Command\nDESCRIPTION: Command to create a new directory for the extension files\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/get-started/node.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir my-first-extension\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Iteration Path Macros\nDESCRIPTION: Table showing supported macros for Iteration Path queries in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-area-iteration-path.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|            Macro      |               Use when you want to...                              |\n|-------------------------|---------------------------------------------------------------|\n|  `@CurrentIteration`  |                  Specify the current iteration associated with the selected team context.                  |\n| `@CurrentIteration +/- n` | Filter items based on assignment to a sliding window of sprints associated with the selected team context. |\n| `@TeamAreas`       |        Filter items based on area path(s) assigned to a specific team.                       |\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 157 Update Links in Markdown\nDESCRIPTION: Include directive for Azure Pipelines Sprint 157 update links section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-157-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update-links](../includes/pipelines/sprint-157-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Table in Markdown\nDESCRIPTION: Markdown table showing access level and permission requirements for using Analytics\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/client-authentication-options.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md).<br>- At least **Basic** access. |\n| **Permissions** | By default, project members have permission to query Analytics and create views. For more information about other prerequisites regarding service and feature enablement and general data tracking activities, see [Permissions and prerequisites to access Analytics](../analytics/analytics-permissions-prerequisites.md). |\n|**Tools** | [Power BI Desktop](https://powerbi.microsoft.com/desktop)    |\n```\n\n----------------------------------------\n\nTITLE: Displaying a Note Block in Markdown\nDESCRIPTION: This Markdown syntax creates a highlighted note block using a blockquote (`>`) combined with `[!NOTE]`. It is used here to draw attention to important information about the feature rollout timeline (two to three weeks).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\n> These features will roll out over the next two to three weeks.\n```\n\n----------------------------------------\n\nTITLE: Task Group Permissions Table in Markdown\nDESCRIPTION: Markdown table showing task group permissions across different user roles including Readers, Contributors, Build Admins, Project Admins, and Release Admins. Details which roles can perform specific task group operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/task-groups.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Task                             |Readers|Contributors|Build Admins|Project Admins|Release Admins|\n|----                             |:-------:|:------------:|:------------:|:--------------:|--------------||\n|Administer task group permissions|       |            |✔️          |✔️           |✔️           |  \n|Delete task group                |       |            |✔️          |✔️           |✔️           |  \n|Edit task group                  |       |✔️         |✔️          |✔️           |✔️           |  \n```\n\n----------------------------------------\n\nTITLE: Including Sprint 178 Update Links in Markdown\nDESCRIPTION: This Markdown directive includes content from the specified file (`../includes/testplans/sprint-178-update-links.md`), typically containing links relevant to the Azure Test Plans Sprint 178 update. It depends on the referenced file being present at the relative path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/testplans/sprint-178-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-178-update-links](../includes/testplans/sprint-178-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Access Requirements Table in Markdown\nDESCRIPTION: Markdown table defining the basic access level and permissions required for Azure DevOps Boards team configuration. Includes requirements for access levels and permissions for team administrators.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/prerequisites-team-settings.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Access levels** | At least [**Basic**](../../organizations/security/access-levels.md) access.|\n|**Permissions** | To configure team settings: Member of the **Project Administrators** security group or [**Team Administrator** role](../../organizations/settings/add-team-administrator.md). For more information, see [Change project-level permissions](../../organizations/security/change-project-level-permissions.md).|\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: This snippet includes external content from a file containing next steps information. It uses the markdown include directive to pull in standardized next steps content that likely appears across multiple release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-211-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Prerequisites in Markdown\nDESCRIPTION: This snippet demonstrates how to include a predefined section about prerequisites in a Markdown file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/what-are-analytics-views.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites simple](../includes/analytics-prerequisites-simple.md)]\n```\n\n----------------------------------------\n\nTITLE: Fetching Git Repository with Older Client Warning\nDESCRIPTION: Shows the output of a git fetch operation when using an older version of Git client, including the warning message from Azure DevOps recommending an upgrade.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/rpc-failures-http-postbuffer.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nc:\\mydir>git fetch\nremote: Microsoft (R) Visual Studio (R) Team Services\nremote: We noticed you're using an older version of Git. For a better experience, upgrade to the latest version at https://git-scm.com/downloads\nremote: Found 4 objects to send. (6 ms)\nUnpacking objects: 100% (4/4), done.\n```\n\n----------------------------------------\n\nTITLE: Extension File Structure Example\nDESCRIPTION: Shows the basic file structure and components required for an Azure DevOps extension, including the manifest file and static assets\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/overview.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n- manifest.json          // Contains extension metadata and configuration\n- README.md             // Documentation and overview\n- images/               // Extension images and icons\n- static/               // HTML, JS, and CSS files\n  - main.html\n  - scripts.js\n  - styles.css\n```\n\n----------------------------------------\n\nTITLE: Sample Payload JSON for Work Item Updated Event in Azure DevOps\nDESCRIPTION: This sample JSON payload demonstrates the structure of a work item update event in Azure DevOps Service Hooks. It includes fields such as event ID, message formats, work item details, and resource containers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_34\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-0000000000001ca023d6-6cff-49dd-b3d1-302b69311810\",\n  \"eventType\": \"workitem.updated\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Bug #5 (Some great new idea!) updated by Jamal Hartnett.\\r\\n(https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000)\",\n    \"html\": \"<a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=74e918bf-3376-436d-bd20-8e8c1287f465&amp;id=5\\\">Bug #5</a> (Some great new idea!) updated by Jamal Hartnett.\",\n    \"markdown\": \"[Bug #5](https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000) (Some great new idea!) updated by Jamal Hartnett.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Bug #5 (Some great new idea!) updated by Jamal Hartnett.\\r\\n(https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000)\\r\\n\\r\\n- Area: FabrikamCloud\\r\\n- Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1\\r\\n- State: New\\r\\n- Severity: 3 - Medium\\r\\n\",\n    \"html\": \"<a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=74e918bf-3376-436d-bd20-8e8c1287f465&amp;id=5\\\">Bug #5</a> (Some great new idea!) updated by Jamal Hartnett.<ul>\\r\\n- Area: FabrikamCloud</br>\\r\\n- Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1</br>\\r\\n- State: New</br>Severity: 3 - Medium</br></ul>\",\n    \"markdown\": \"[Bug #5](https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=00000000-0000-0000-0000-000000000000) (Some great new idea!) updated by Jamal Hartnett.\\r\\n\\r\\n* Area: FabrikamCloud\\r\\n* Iteration: FabrikamCloud\\\\Release 1\\\\Sprint 1\\r\\n* State: New\\r\\n* Severity: 3 - Medium\\r\\n\"\n  },\n  \"resource\": {\n    \"id\": 5,\n    \"rev\": 1,\n    \"fields\": {\n      \"System.AreaPath\": \"FabrikamCloud\",\n      \"System.TeamProject\": \"FabrikamCloud\",\n      \"System.IterationPath\": \"FabrikamCloud\\\\Release 1\\\\Sprint 1\",\n      \"System.WorkItemType\": \"Bug\",\n      \"System.State\": \"New\",\n      \"System.Reason\": \"New defect reported\",\n      \"System.CreatedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.CreatedBy\": \"Jamal Hartnett\",\n      \"System.ChangedDate\": \"2014-07-15T17:42:44.663Z\",\n      \"System.ChangedBy\": \"Jamal Hartnett\",\n      \"System.Title\": \"Some great new idea!\",\n      \"Microsoft.Azure DevOps Services.Common.Severity\": \"3 - Medium\",\n      \"WEF_EB329F44FE5F4A94ACB1DA153FDF38BA_Kanban.Column\": \"New\"\n    },\n    \"_links\": {\n      \"self\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5\"\n      },\n      \"workItemUpdates\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/updates\"\n      },\n      \"workItemRevisions\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/revisions\"\n      },\n      \"workItemType\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/ea830882-2a3c-4095-a53f-972f9a376f6e/workItemTypes/Bug\"\n      },\n      \"fields\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/fields\"\n      },\n      \"html\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/web/wi.aspx?pcguid=d81542e4-cdfa-4333-b082-1ae2d6c3ad16&id=5\"\n      },\n      \"workItemHistory\": {\n        \"href\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5/history\"\n      }\n    },\n    \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/wit/workItems/5\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:30.1456784Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Prerequisites\nDESCRIPTION: Markdown include directive for process prerequisites\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/customize-process-field.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/process-prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Required HTML Pages for Azure DevOps Extension\nDESCRIPTION: List of required HTML pages that need to be included in the extension package. These pages provide information, support details, and terms of service for the extension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-hub-app-asp5.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ninfo.html\nsupport.html\nterms-of-service.html\n```\n\n----------------------------------------\n\nTITLE: Removing Pending Changes for a Single File\nDESCRIPTION: Example of using the undo command to remove pending changes to a specific file in the current workspace. This is the simplest form of the command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/undo-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1>tf undo program.cs\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 154 Update Content\nDESCRIPTION: Markdown include directives that pull in content sections for the Sprint 154 update documentation, including update links, main update content, and next steps section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-154-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-154-update-links](../includes/boards/sprint-154-update-links.md)]\n\n[!INCLUDE [sprint-154-update](../includes/boards/sprint-154-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Using kustomize with KubernetesManifest Task in Azure Pipelines\nDESCRIPTION: This snippet demonstrates how to use kustomize as a bake option in the KubernetesManifest task to generate Kubernetes manifest files from a folder containing kustomization.yaml files, which are then deployed using a second KubernetesManifest task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-155-update.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from Helm chart\n  inputs:\n    action: bake\n    renderType: kustomize\n    kustomizationPath: folderContainingKustomizationFile\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: k8sSC1\n    manifests: $(bake.manifestsBundle)\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Update Details (Markdown)\nDESCRIPTION: Uses a Markdown include directive to insert the content of 'sprint-214-update.md' located in the 'includes/pipelines/' path. This file likely contains the detailed release notes describing Azure Pipelines features and updates for Sprint 214.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-214-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-214-update](includes/pipelines/sprint-214-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Accessing NuGet Package API Endpoint for Collection Scoped Feed in Azure DevOps Server 2020\nDESCRIPTION: HTTP endpoint URL pattern for promoting NuGet packages in a collection scoped feed on an on-premises Azure DevOps Server 2020. This uses an older API version (6.0) specific to Server 2020.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_18\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://{instance}/{collection}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}?api-version=6.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: VSS.ready Method Syntax\nDESCRIPTION: Method signature for registering a callback that executes after initial setup is complete.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/extend/reference/client/api/vss/sdk/vss_sdk/VSS.md#2025-04-22_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nvoid VSS.ready(callback)\n```\n\n----------------------------------------\n\nTITLE: Filtering work items by area path in Azure DevOps\nDESCRIPTION: Example of using the 'area' filter to find work items containing 'Wiki' in the Contoso/Mobile area path and its subpaths.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/search/functional-work-item-search.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nWiki area:Contoso/Mobile\n```\n\n----------------------------------------\n\nTITLE: Express Installation Command\nDESCRIPTION: NPM command to install Express framework and save it as a project dependency.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install express\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 224 Update Links for GitHub Advanced Security\nDESCRIPTION: This directive includes content from a shared file containing links related to the Sprint 224 updates specifically for GitHub Advanced Security for Azure DevOps (ghazdo).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-224-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-224-update-links](includes/ghazdo/sprint-224-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: VSS.notifyLoadSucceeded Method Syntax\nDESCRIPTION: Method signature for notifying the host that the extension has loaded successfully.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/extend/reference/client/api/vss/sdk/vss_sdk/VSS.md#2025-04-22_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nvoid VSS.notifyLoadSucceeded()\n```\n\n----------------------------------------\n\nTITLE: Declaring Project-Specific Settings for Dashboard Widget in Azure DevOps\nDESCRIPTION: This JSON snippet shows how to set the 'canStoreCrossProjectSettings' property to false for a widget contribution, indicating that the widget settings are project-specific in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/public-project.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id:\": \"HelloWorldWidget\",\n    \"type\": \"ms.vss-dashboards-web.widget\",\n    ...\n    \"properties\": {\n        \"canStoreCrossProjectSettings\": false\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using @Today Macro for DateTime Fields in Azure Boards Queries\nDESCRIPTION: Demonstrates the use of the `@Today` macro as a variable within a query targeting a DateTime field in Azure Boards. This macro dynamically represents the current date when the query is executed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-operators-variables.md#2025-04-22_snippet_0\n\nLANGUAGE: wiql\nCODE:\n```\n@Today\n```\n\n----------------------------------------\n\nTITLE: Displaying Roadmap Table in Markdown\nDESCRIPTION: A markdown table showcasing upcoming features for GitHub Advanced Security in Azure DevOps, including feature names, areas, and expected release quarters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table>\n    <thead>\n        <tr>\n            <th>Feature</th>\n            <th>Area</th>\n            <th>Quarter</th>\n        </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2024/ghazdo/secret-validity\" data-raw-source=\"[Determine detected partner secrets validity](/azure/devops/release-notes/roadmap/2024/ghazdo/secret-validity)\">Determine detected partner secrets validity</a></td>\n        <td>GitHub Advanced Security for Azure DevOps</td>\n        <td>2025 Q2</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2025/ghazdo/boards-linking\" data-raw-source=\"[Link Boards items to Advanced Security Alerts](/azure/devops/release-notes/roadmap/2025/ghazdo/boards-linking)\">Link Boards items to Advanced Security Alerts</a></td>\n        <td>GitHub Advanced Security for Azure DevOps</td>\n        <td>2025 Q3</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2024/ghazdo/dependabot\" data-raw-source=\"[Automatically fix detected dependency scanning vulnerabilities with Dependabot security updates](/azure/devops/release-notes/roadmap/2024/ghazdo/dependabot)\">Automatically fix detected dependency scanning vulnerabilities with Dependabot security updates</a></td>\n        <td>GitHub Advanced Security for Azure DevOps</td>\n        <td>Future</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2025/ghazdo/default-setup\" data-raw-source=\"[CodeQL default setup (one-click enablement)](/azure/devops/release-notes/roadmap/2025/ghazdo/default-setup)\">CodeQL default setup (one-click enablement)</a></td>\n        <td>GitHub Advanced Security for Azure DevOps</td>\n        <td>Future</td>\n      </tr>\n   </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Configuring Epic Category to use Initiative as Parent in ProcessConfiguration.xml\nDESCRIPTION: XML configuration that updates the Epic Category to set the Initiative as its parent backlog, establishing the hierarchical relationship in the portfolio backlog structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-portfolio-backlogs.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<PortfolioBacklog category=\"Microsoft.EpicCategory\" pluralName=\"Epics\"  \n   singularName=\"Epic\" parent=\"FabrikamFiber.InitiativeCategory\"      \n   workItemCountLimit=\"1000\">   \n   . . .  \n</PortfolioBacklog>\n```\n\n----------------------------------------\n\nTITLE: Limiting Root Level Nodes in Classification - Azure DevOps XML\nDESCRIPTION: The error and resolution examples illustrate that only up to two root-level Node elements (typically one 'ProjectModelHierarchy' and one 'ProjectLifecycle') are allowed under the <Nodes> container. The resolution removes the additional Node to enforce this constraint.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_22\n\nLANGUAGE: xml\nCODE:\n```\n<Nodes>\\n  <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Iteration\\\" xmlns=\\\"\\\">\\n    <Children>\\n      <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 1\\\" />\\n      <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 2\\\" />\\n      <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 3\\\" />\\n    </Children>\\n  </Node>\\n  <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Iteration\\\" xmlns=\\\"\\\">\\n  <Node StructureType=\\\"ProjectModelHierarchy\\\" Name=\\\"Area\\\" xmlns=\\\"\\\" />\\n</Nodes>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<Nodes>\\n  <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Iteration\\\" xmlns=\\\"\\\">\\n    <Children>\\n      <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 1\\\" />\\n      <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 2\\\" />\\n      <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 3\\\" />\\n    </Children>\\n  </Node>\\n  <Node StructureType=\\\"ProjectModelHierarchy\\\" Name=\\\"Area\\\" xmlns=\\\"\\\" />\\n</Nodes>\n```\n\n----------------------------------------\n\nTITLE: Setting CodeQL Language Variable in Azure DevOps Pipeline\nDESCRIPTION: This example demonstrates how to set a variable for the CodeQL language in an Azure DevOps pipeline. It specifies Java as the language for analysis, but note that this can be overridden by task inputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/ghazdo/sprint-228-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nadvancedsecurity.codeql.language: Java\n```\n\n----------------------------------------\n\nTITLE: Documenting Release Notes Metadata with Front Matter - YAML\nDESCRIPTION: This snippet defines YAML front matter at the top of the Markdown file, specifying metadata such as the title, description, author, and date for Azure Repos Sprint 179 Release Notes. This metadata is used by Azure DevOps Docs to render documentation with consistent formatting and indexing. Required dependencies are the Azure Docs or similar static site generator that reads YAML front matter. Inputs are plain metadata fields; output is only used for documentation context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/repos/sprint-179-update.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n---\\ntitle: Azure DevOps Release Notes - Azure Repos Sprint 179 Update\\ndescription: See the Sprint 179 feature updates for Azure Repos, including next steps.\\nauthor: sid-ah\\nms.author: simerzou\\nms.date: 10/21/2020\\n---\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for TFVC Checkin Event\nDESCRIPTION: This JSON payload represents the data sent when a changeset is checked into Team Foundation Version Control (TFVC). It includes details about the changeset, author, and associated project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"eventType\": \"tfvc.checkin\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Normal Paulk checked in changeset 18: Dropping in new Java sample\",\n    \"html\": \"Normal Paulk checked in changeset <a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/cs.aspx?pcguid=000-0000-0000\\\">18</a>: Dropping in new Java sample\",\n    \"markdown\": \"Chuck Reinhart checked in changeset [18](https://dev.azure.com/fabrikam-fiber-inc/web/cs.aspx?pcguid=000-0000-0000): Dropping in new Java sample\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Chuck Reinhart checked in changeset 18: Dropping in new Java sample\",\n    \"html\": \"Chuck Reinhart checked in changeset <a href=\\\"https://dev.azure.com/fabrikam-fiber-inc/web/cs.aspx?pcguid=d81542e4-cdfa-4333-b082-1ae2d6c3ad16&amp;cs=18\\\">18</a>: Dropping in new Java sample\",\n    \"markdown\": \"Chuck Reinhart checked in changeset [18](https://dev.azure.com/fabrikam-fiber-inc/web/cs.aspx?pcguid=000-0000-0000): Dropping in new Java sample\"\n  },\n  \"resource\": {\n    \"changesetId\": 18,\n    \"url\": \"https://dev.azure.com/fabrikam-fiber-inc/DefaultCollection/_apis/tfvc/changesets/18\",\n    \"author\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"displayName\": \"Chuck Reinhart\",\n      \"uniqueName\": \"fabrikamfiber16@hotmail.com\"\n    },\n    \"checkedInBy\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"displayName\": \"Chuck Reinhart\",\n      \"uniqueName\": \"fabrikamfiber16@hotmail.com\"\n    },\n    \"createdDate\": \"2014-05-12T22:41:16Z\",\n    \"comment\": \"Dropping in new Java sample\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:26.2056408Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 246 Update Links in Azure Pipelines Documentation\nDESCRIPTION: Markdown include directive to insert the Sprint 246 update links from an external file. This references a partial markdown file containing links related to the Sprint 246 update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-246-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-246-update-links](../includes/pipelines/sprint-246-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Querying Member ID from Identity Table\nDESCRIPTION: SQL query to retrieve Member ID from the Identity table using a Member SID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\nDECLARE @MemberId uniqueidentifier \n\nSET @MemberId = (Select Id from dbo.tbl_Identity where Sid ='S-1-5-21-124525095-708259637-1543119021-1737349');\n\nSELECT @MemberId\n```\n\n----------------------------------------\n\nTITLE: Defining View Test Runs Permission Token in Azure DevOps\nDESCRIPTION: Specifies the security token for the 'View test runs' permission in Azure DevOps. This permission allows viewing test plans under the project area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_20\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, VIEW_TEST_RESULTS\n```\n\n----------------------------------------\n\nTITLE: Querying Deleted Projects using REST API in Azure DevOps\nDESCRIPTION: REST API GET request to retrieve a list of deleted projects within an Azure DevOps organization. This endpoint uses the stateFilter parameter to specifically return projects in the deleted state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-144-update.md#2025-04-22_snippet_4\n\nLANGUAGE: REST API\nCODE:\n```\nGET https://dev.azure.com/{organization}/_apis/projects?stateFilter=deleted&api-version=5.0-preview.3\n```\n\n----------------------------------------\n\nTITLE: Applying Scoped Label in TFVC\nDESCRIPTION: Demonstrates using the @ scope option to apply a label to a specific file within a team project context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/label-command-team-foundation-version-control.md#2025-04-22_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf label goodbuild@$/TeamProject1 314.cs\n```\n\n----------------------------------------\n\nTITLE: Displaying a Note in Markdown\nDESCRIPTION: This snippet uses a Markdown extension `[!NOTE ...]` specific to the Microsoft Docs platform to render a visually distinct note block containing information about the feature rollout timeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\n> These features will roll out over the next two to three weeks.\n```\n\n----------------------------------------\n\nTITLE: Setting Up Grafana Annotations Service Hook\nDESCRIPTION: This example shows how to configure a service hook for adding Grafana annotations on Deployment Completed events, allowing correlation between deployments and metric changes in Grafana dashboards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-146-update.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GrafanaAnnotation@1\n  inputs:\n    grafanaEndpoint: '<Grafana service connection>'\n    dashboardId: '<Dashboard ID>'\n    annotation: 'Deployment $(Release.ReleaseName) completed'\n```\n\n----------------------------------------\n\nTITLE: Project Scoped Users Warning Include\nDESCRIPTION: Markdown code block showing included content for warnings about project-scoped users functionality\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/manage-organization-collection.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [project-scoped-users-warning](../includes/project-scoped-users-warning.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Pre-2022 Access Requirements Table\nDESCRIPTION: Markdown table defining access levels and permissions required for Azure DevOps versions prior to 2022.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/prerequisites-kanban.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md). <br> - To add work items and use all board features: At least [**Basic** access](../../organizations/security/access-levels.md). <br> - Users with **Stakeholder** access can't use these board features: Add work items, drag-and-drop work items to update status, or update fields displayed on cards. They can add tasks and change task status. |\n| **Permissions** | To view or modify work items: **View work items in this node** and **Edit work items in this node** permissions set to **Allow**. By default, the **Contributors** group has these permissions. For more information, see [Set permissions and access for work tracking](../../organizations/security/set-permissions-access-work-tracking.md). |\n```\n\n----------------------------------------\n\nTITLE: Downloading Universal Package from Organization-Scoped Feed\nDESCRIPTION: Azure CLI command to download a specific Universal Package from an organization-scoped feed in Azure Artifacts. It requires organization name, feed name, package name, version, and download path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/download-universal-packages.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz artifacts universal download --organization https://dev.azure.com/<YOUR_ORGANIZATION_NAME> --feed <FEED_NAME> --name <PACKAGE_NAME> --version <PACKAGE_VERSION> --path <DOWNLOAD_PATH>\n```\n\n----------------------------------------\n\nTITLE: Initializing Azure DevOps Pipeline Trigger and Pool in YAML\nDESCRIPTION: This YAML snippet sets up the basic structure for an Azure DevOps pipeline. It configures the pipeline not to trigger automatically (`trigger: - none`) and specifies the virtual machine image for the agent pool using a variable `$(vmImageName)`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- none\n\npool:\n  vmImage: $(vmImageName)\n```\n\n----------------------------------------\n\nTITLE: Including Automatic Update Project Note in Markdown\nDESCRIPTION: This snippet demonstrates how to include a note about automatic project updates in a Markdown file using a special include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/custom-rules.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/automatic-update-project.md)]\n```\n\n----------------------------------------\n\nTITLE: Reading Agent Resource Utilization Metrics from Pipeline Logs\nDESCRIPTION: Example log output showing resource utilization metrics for an Azure DevOps pipeline agent, including disk space, memory usage, and CPU utilization, which can help diagnose agent connectivity issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/troubleshooting.md#2025-04-22_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n2024-02-28T17:41:15.1315148Z ##[debug]Agent environment resources - Disk: D:\\ Available 12342.00 MB out of 14333.00 MB, Memory: Used 1907.00 MB out of 7167.00 MB, CPU: Usage 17.23%\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for On-premises Azure DevOps Prerequisites\nDESCRIPTION: Markdown table specifying the requirements for implementing rollup functionality in on-premises Azure DevOps Server installations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/display-rollup.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Analytics service** |Analytics service enabled on your on-premises Azure DevOps Server. For more information, see [Install/uninstall or enable/disable the Analytics service](../../report/dashboards/analytics-extension.md).|\n| **Parent-child links** | Work items linked using parent-child relationships to support rollup. |\n| **Required fields** | The fields you want to roll up are present in the work item types. |\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps and GitHub Feature Matrix - Previous Versions\nDESCRIPTION: A markdown table listing features and descriptions for Azure Pipelines integration with GitHub in previous Azure DevOps versions. Covers basic functionality like build configurations, GitHub Enterprise support, and release management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cross-service/github-integration.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| **Feature** | **Description** |\n|-------------|------------------|\n| **Create GitHub repository and pull request builds** | Automatically build pull requests from repository forks to ensure changes successfully build and tests pass before they get merged. |\n| **Create GitHub Enterprise builds** | Supports continuous integration (CI) builds for GitHub Enterprise repositories. |\n| **Use GitHub-specific tasks and utilities** | Supported tasks include Download GitHub Release task, GitHub Release task, and Open source Azure Pipelines tasks. |\n```\n\n----------------------------------------\n\nTITLE: Creating Azure DevOps Teams with Azure DevOps CLI\nDESCRIPTION: Reference to the Azure DevOps CLI command for creating new teams within a project. Use this command for programmatic team creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-configure-boards.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n- **Teams**: [Azure DevOps team create](/cli/azure/boards/iteration/team#az-boards-iteration-team-add)\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Requirements Table in Markdown\nDESCRIPTION: Markdown table defining project access requirements, permissions for user management at team/project/organization levels, and policies for Microsoft Entra ID connected organizations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/prerequisites-add-users-org.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Project access** | Member of a [project](../organizations/projects/create-project.md). |\n| **Permissions** | - To add users to or remove users from a team: [Team Administrator](../organizations/settings/add-team-administrator.md) or member of one of the administrative groups. <br> - To add users to or remove users from a project: Member of the [**Project Administrators** group](../organizations/security/change-project-level-permissions.md). <br> - To add users or manage users for an organization: Member of the [**Project Collection Administrators** group](../organizations/security/change-organization-collection-level-permissions.md). Organization owners are automatically members of this group. |\n| **Policies** | If your organization is connected to Microsoft Entra ID: Enable the [Allow team and project administrators to invite new users](../organizations/security/restrict-invitations.md) policy for team administrators or members of the Project Administrators group for adding new users. |\n```\n\n----------------------------------------\n\nTITLE: Analytics Status Moniker Condition Block\nDESCRIPTION: A conditional markdown block that displays a checklist of Analytics features for Azure DevOps 2020 and later versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/what-is-analytics.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\\\">= azure-devops-2020\\\"\\n\\n> [!div class=\\\"checklist\\\"]  \\n> - Analytics widgets that you can add to your dashboards\\n> - In-context Analytics reports available from select Azure DevOps pages\\n> - Rollup bars and counts for Azure Boards backlogs \\n> - Custom reports you can create using Power BI \\n> - Custom reports you can create using OData queries \\n> - Support to develop and add your custom Analytics widgets you can add to dashboards   \\n\\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Listing and Linking DevOps Stages and Agent Information - Markdown\nDESCRIPTION: This Markdown snippet creates a bullet-point list of internal documentation links for Azure DevOps, directing users to sections about searching for stages and the rollout of Pipeline agent v3 (.NET 6). Usage requires surrounding documentation containing anchors with matching IDs. Inputs are the target anchor references, and the output is a rendered list of links. The snippet assumes it will be used as an include, so external context may supply the heading anchors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-217-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n- [Search for stages in side panel](#search-for-stages-in-side-panel)\n\n- [Pipeline agent v3 (.NET 6) rolling out](#pipeline-agent-v3-net-6-rolling-out)\n```\n\n----------------------------------------\n\nTITLE: Displaying Leaf Node Work Items in Azure DevOps\nDESCRIPTION: This snippet is a placeholder for including content about displaying leaf node work items in Azure DevOps boards. It uses an INCLUDE directive to reference external content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/kanban-overview.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/display-leaf-nodes.md)]\n```\n\n----------------------------------------\n\nTITLE: Windows Keyboard Shortcuts for Rich Text Editor in Azure DevOps\nDESCRIPTION: Keyboard shortcuts for the rich text editor when using Windows in Azure DevOps 2020 and newer versions. These shortcuts provide quick access to text formatting and editing functions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/wi-form-shortcuts.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|Ctrl+b|Bold|\n|Ctrl+c|Copy text|\n|Ctrl+i|Italics|\n|Ctrl+k|Insert hyperlink|\n|Ctrl+s|Save|\n|Ctrl+u|Underline|\n|Ctrl+v|Paste text|\n|Ctrl+y|Redo|\n|Ctrl+z|Undo|\n|Ctrl+.|Bulleted list|\n|Ctrl+/|Numbered list|\n|Shift+:|Emoji library|\n```\n\n----------------------------------------\n\nTITLE: Including Prerequisites in Markdown\nDESCRIPTION: This snippet shows how to include a prerequisites section in Azure DevOps documentation using a predefined include statement in Markdown.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/insights-exploratory-testing.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites-run](includes/prerequisites-run.md)]\n```\n\n----------------------------------------\n\nTITLE: Conditional Expansion Based on Project\nDESCRIPTION: OData query that gets all links from a project and conditionally expands the target only if it exists in the same project, using the $filter expand option in the $expand clause.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItemLinks?\n  $filter=ProjectSK eq {projectSK}\n  &$select=LinkTypeReferenceName, SourceWorkItemId, TargetWorkItemId\n  &$expand=TargetWorkItem($filter=ProjectSK eq {projectSK}; $select=WorkItemId, Title)\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Include Statement for Markdown\nDESCRIPTION: Include statement for project administrator and basic prerequisites\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/add-team-administrator.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites-project-administrator-and-basic](../../includes/prerequisites-project-administrator-and-basic.md)]\n```\n\n----------------------------------------\n\nTITLE: Replacing Reserved Namespace in Field Reference Name\nDESCRIPTION: System.* and Microsoft.AzureDevOps.* namespaces are reserved in Azure DevOps. This example shows how to rename a custom field to avoid using these reserved namespaces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_35\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD name=\"CustomField\" refname=\"System.CustomField\" type=\"String\" />\n\n  - OR - \n\n<FIELD name=\"CustomField\" refname=\"Microsoft.AzureDevOps.CustomField\" type=\"String\" />\n```\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD name=\"CustomField\" refname=\"MyCompany.CustomField\" type=\"String\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Navigation Links for Azure DevOps Documentation\nDESCRIPTION: Markdown formatted navigation links pointing to sections about Slack @mentions and organization directory downloads.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-157-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Get personalized notifications with @mention support in Slack apps](#get-personalized-notifications-with--support-in-slack-apps)\n- [Download a list of organizations to a directory](#download-a-list-of-organizations-to-a-directory)\n```\n\n----------------------------------------\n\nTITLE: Defining Activity Field for Agile/Scrum\nDESCRIPTION: XML configuration for the Activity field with predefined suggested values for work classification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_13\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Activity\" refname=\"Microsoft.VSTS.Common.Activity\" type=\"String\" reportable=\"dimension\"> \n<HELPTEXT&gt;Type of work involved&lt/HELPTEXT> \n<SUGGESTEDVALUES&gt;  \n   <LISTITEM value=\"Development\" />    \n   <LISTITEM value=\"Testing\" />    \n   <LISTITEM value=\"Requirements\" />    \n   <LISTITEM value=\"Design\" />    \n   <LISTITEM value=\"Deployment\" />    \n   <LISTITEM value=\"Documentation\" />    \n</SUGGESTEDVALUES>    \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Extending a Template in Azure Pipelines YAML\nDESCRIPTION: Illustrates how to extend a template in an Azure Pipelines YAML file. This allows for more complex template usage scenarios and can be validated and edited using the YAML editor.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-214-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nextends:\n  template: mytemplate.yml\n  parameters:\n    param1: value1\n    param2: value2\n```\n\n----------------------------------------\n\nTITLE: Adding Tasks in Azure DevOps - Basic Process\nDESCRIPTION: Instructions for adding and managing tasks using the Basic process template in Azure DevOps. Includes steps for creating tasks, marking them complete, reordering, and managing task details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/get-started/plan-track-work.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n1. Select the actions icon for the issue and select Add Task.  \n2. Enter a title for the task and select Enter.\n3. If you have various tasks to add, keep entering your task titles and type Enter.\n4. You can mark a task as done, expand or collapse the task checklist, reorder, and reparent tasks.\n```\n\n----------------------------------------\n\nTITLE: OData Query for Test Execution Trend Analysis\nDESCRIPTION: OData query that retrieves test execution data from Azure DevOps Analytics. It filters test points by test plan title and date range, then groups by date to aggregate counts of different test outcomes (Passed, Failed, Blocked, NotApplicable, NotExecuted).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-plans-execution-trend.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/TestPointHistorySnapshot? \n$apply=filter( \n    (TestSuite/TestPlanTitle eq '{testPlanTitle}') and (DateSK ge {startDate} and DateSK le {endDate}) \n)\n/groupby( \n    (DateSK),  \n    aggregate( \n        $count as TotalCount, \n        cast(ResultOutcome  eq 'Passed', Edm.Int32) with sum as Passed, \n        cast(ResultOutcome  eq 'Failed', Edm.Int32) with sum as Failed, \n        cast(ResultOutcome eq 'Blocked', Edm.Int32) with sum as Blocked, \n        cast(ResultOutcome eq 'NotApplicable', Edm.Int32) with sum as NotApplicable, \n        cast(ResultOutcome eq 'None', Edm.Int32) with sum as NotExecuted,  \n        cast(ResultOutcome ne 'None', Edm.Int32) with sum as Executed \n    ) \n)\n```\n\n----------------------------------------\n\nTITLE: Linking to Work Item Copy Section in Markdown\nDESCRIPTION: This Markdown snippet creates a bulleted list item containing a hyperlink. The link text is \"Copy link to work item\", and it points to an anchor (`#copy-link-to-work-item`) within the same document, facilitating intra-document navigation, often used in tables of contents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/boards/sprint-224-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Copy link to work item](#copy-link-to-work-item)\n```\n\n----------------------------------------\n\nTITLE: Including Azure Test Plans Update Details (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/testplans/sprint-245-update.md`), likely containing detailed information about Sprint 245 updates for Azure Test Plans. It's used within the context of Azure DevOps release notes to add the feature descriptions relevant to Test Plans.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update](includes/testplans/sprint-245-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 225 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links related to the Sprint 225 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-225-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-225-update-links](../includes/boards/sprint-225-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Widget Prerequisites in Markdown\nDESCRIPTION: Markdown table defining access level and permission requirements for using dashboard widgets in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/widget-catalog.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md).<br>- At least **Basic** access. |\n| **Permissions** |To add widgets from the marketplace: Member of the [**Project Collection Administrators** group](../../organizations/security/look-up-project-collection-administrators.md). |\n```\n\n----------------------------------------\n\nTITLE: TFSSecurity Commands for Notification Management\nDESCRIPTION: List of TFSSecurity commands and their corresponding namespaces for managing notification permissions in Azure DevOps. Includes actions like CREATE_SOAP_SUBSCRIPTION, GENERIC_READ, GENERIC_WRITE, and UNSUBSCRIBE within the EventSubscription namespace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_49\n\nLANGUAGE: plaintext\nCODE:\n```\nCREATE_SOAP_SUBSCRIPTION    EventSubscription    Can create a SOAP-based web service subscription.\nGENERIC_READ              EventSubscription    Can view subscription events defined for a project.\nGENERIC_WRITE             EventSubscription    Can create alerts for other users or for a team.\nUNSUBSCRIBE               EventSubscription    Can unsubscribe from an event subscription.\n```\n\n----------------------------------------\n\nTITLE: Checking Out Multiple Files in TFVC\nDESCRIPTION: Example demonstrating how to check out multiple files (program1.cs and program2.cs) simultaneously using the checkout command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/checkout-or-edit-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1\\>tf checkout program1.cs program2.cs\n```\n\n----------------------------------------\n\nTITLE: Modifying PAT Usage Instructions\nDESCRIPTION: Markdown documentation detailing the step-by-step process for modifying a Personal Access Token in Azure DevOps, including regeneration, extension, and scope modification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/personal-access-tokens.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## Modify a PAT\n\nDo the following steps to:\n\n- Regenerate a PAT to create a new token, which invalidates the previous one.\n- Extend a PAT to increase its validity period.\n- Alter the [scope](../../../integrate/get-started/authentication/oauth.md#scopes) of a PAT to change its permissions.\n```\n\n----------------------------------------\n\nTITLE: Defining Moniker Range for Azure DevOps\nDESCRIPTION: Markdown snippet defining a moniker range for Azure DevOps-specific content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-lookup-guide.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"azure-devops\"\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown - Markdown\nDESCRIPTION: This snippet includes the 'next steps' guidance by referencing another Markdown file with the !INCLUDE directive. This makes the maintenance of post-sprint guidance modular and manageable, requiring external file dependencies and compatible documentation tooling to correctly render.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-205-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: East Australia Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps services in the East Australia region. Includes both SharePoint (shprod) and Team Foundation Server (tfsprod) instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\ntfsprodeausu7ip1 40.82.217.103\n\t\t\nshprodeausu7ip1\t 40.82.220.184\n```\n\n----------------------------------------\n\nTITLE: Creating Comment Resolution Policy using Azure CLI\nDESCRIPTION: This command creates a comment resolution policy for a repository branch. It allows setting parameters such as blocking status, branch name, and enabling/disabling the policy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/branch-policies.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos policy comment-required create --blocking {false, true}\n                                        --branch\n                                        --enabled {false, true}\n                                        --repository-id\n                                        [--branch-match-type {exact, prefix}]\n                                        [--detect {false, true}]\n                                        [--org]\n                                        [--project]\n                                        [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Agent.ContainerMapping in Azure DevOps Pipelines - YAML\nDESCRIPTION: This YAML snippet demonstrates the value structure of the Agent.ContainerMapping variable, mapping logical container resource names to their runtime Docker container IDs. Intended for users needing to reference or manipulate container mappings within a pipeline, the snippet requires no external dependencies and follows YAML/JSON syntax. Key parameters are container names (such as 'one_container') and their associated 'id' values, which are unique Docker container identifiers; the mapping can include multiple containers, and values must conform to the pipeline agent runtime's expected structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-server-2022.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n{\\n  \\\"one_container\\\": {\\n    \\\"id\\\": \\\"bdbb357d73a0bd3550a1a5b778b62a4c88ed2051c7802a0659f1ff6e76910190\\\"\\n  },\\n  \\\"another_container\\\": {\\n    \\\"id\\\": \\\"82652975109ec494876a8ccbb875459c945982952e0a72ad74c91216707162bb\\\"\\n  }\\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Connection Properties in Migration Specification JSON\nDESCRIPTION: JSON snippet for adding SQL Server connection properties to a migration specification file. This configuration establishes connectivity to a SQL Azure VM by specifying the connection string with server address, database name, and authentication credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-prepare-test-run.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n\"Properties\": \n{ \n    \"ConnectionString\": \"Data Source={SQL Azure VM Public IP};Initial Catalog={Database Name};Integrated Security=False;User ID={SQL Login Username};Password={SQL Login Password};Encrypt=True;TrustServerCertificate=True\"  \n}\n```\n\n----------------------------------------\n\nTITLE: Using the UseDotNet Task to Install a Specific .NET SDK Version in Azure Pipelines (YAML)\nDESCRIPTION: This YAML snippet demonstrates configuring an Azure Pipelines step to install a specific .NET Core SDK version using the 'UseDotNet@2' task. Dependency: The Azure Pipelines agent must support the UseDotNet task (version 2). Key parameters include 'displayName' (optional label) and 'inputs.version', which should be set to the required SDK version placeholder ('<dotnet version>'). When run, this step ensures the requested .NET SDK version is present before subsequent tasks. Input: dotnet version string; Output: installed SDK for the build pipeline. Replace <dotnet version> with the actual required version string.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-187-update.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\\n- task: UseDotNet@2\\n  displayName: 'Use .NET Core sdk'\\n  inputs:\\n    version: <dotnet version>\n```\n\n----------------------------------------\n\nTITLE: Tracking Last Proposed State with DAX in Azure DevOps Analytics\nDESCRIPTION: This formula identifies the state change count when a work item was last in the 'Proposed' state. It's used as part of calculating rework by finding when items return to a proposed state after being in active states.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_12\n\nLANGUAGE: DAX\nCODE:\n```\nState Change Count - Last Proposed = \nCALCULATE (\n    MAX ( 'View Name'[State Change Count] ),\n    ALLEXCEPT ( 'View Name', 'View Name'[Work Item Id] ),\n    'View Name'[Date] <= EARLIER ( 'View Name'[Date] ),\n    'View Name'[State] = \"Proposed\"\n)\n```\n\n----------------------------------------\n\nTITLE: Checking Azure CLI Version\nDESCRIPTION: Displays the version of Azure CLI installed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz version\n```\n\n----------------------------------------\n\nTITLE: Initializing NPM Package\nDESCRIPTION: Command to initialize a new npm package manifest\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/get-started/node.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm init -y\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Git Pull Request Merge Attempt Event in Azure DevOps\nDESCRIPTION: This JSON payload represents the structure of a webhook event triggered when a pull request merge is attempted in Azure DevOps. It includes details about the pull request, repository, and the user who initiated the merge attempt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"eventType\": \"git.pullrequest.merge.attempted\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Jamal Hartnett attempted to merge a pull request\",\n    \"html\": \"Jamal Hartnett attempted to merge a pull request\",\n    \"markdown\": \"Jamal Hartnett attempted to merge a pull request\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Jamal Hartnett attempted to merge a pull request\\r\\n\\r\\n- Merge status: Attempted\\r\\n- Merge commit: eef717(https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000)\\r\\n\",\n    \"html\": \"Jamal Hartnett created a new pull request\\r\\n<ul>\\r\\n- Merge status: Attempted</br>\\r\\n- Merge commit: <a href=\\\"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\\\">eef717</a></br>\\r\\n</ul>\",\n    \"markdown\": \"Jamal Hartnett created a new pull request\\r\\n\\r\\n+ Merge status: Attempted\\r\\n+ Merge commit: [eef717](https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000)\\r\\n\"\n  },\n  \"resource\": {\n    \"repository\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"name\": \"Fabrikam\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000\",\n      \"project\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000abcd-1234-efgh-5678\",\n        \"name\": \"Fabrikam\",\n        \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/projects/00000000-0000-0000-0000-000000000000\",\n        \"state\": \"wellFormed\"\n      },\n      \"defaultBranch\": \"refs/heads/main\",\n      \"remoteUrl\": \"https://dev.azure.com/fabrikam/DefaultCollection/_git/Fabrikam\"\n    },\n    \"pullRequestId\": 1,\n    \"status\": \"active\",\n    \"createdBy\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"displayName\": \"Jamal Hartnett\",\n      \"uniqueName\": \"fabrikamfiber4@hotmail.com\",\n      \"url\": \"https://dev.azure.com/fabrikam/_apis/Identities/00000000-0000-0000-0000-000000000000\",\n      \"imageUrl\": \"https://dev.azure.com/fabrikam/DefaultCollection/_api/_common/identityImage?id=00000000-0000-0000-0000-000000000000\"\n    },\n    \"creationDate\": \"2024-06-17T11:22:33.456789Z\",\n    \"title\": \"my first pull request\",\n    \"description\": \" - test2\\r\\n\",\n    \"sourceRefName\": \"refs/heads/mytopic\",\n    \"targetRefName\": \"refs/heads/main\",\n    \"mergeStatus\": \"attempted\",\n    \"mergeId\": \"00000000-0000-0000-0000-000000000000\",\n    \"lastMergeSourceCommit\": {\n      \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\"\n    },\n    \"lastMergeTargetCommit\": {\n      \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\"\n    },\n    \"lastMergeCommit\": {\n      \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\"\n    },\n    \"reviewers\": [\n      {\n        \"reviewerUrl\": null,\n        \"vote\": 0,\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"displayName\": \"[Mobile]\\\\Mobile Team\",\n        \"uniqueName\": \"azure-devops:///Classification/TeamProject/00000000-0000-0000-0000-000000000000\\\\Mobile Team\",\n        \"url\": \"https://dev.azure.com/fabrikam/_apis/Identities/00000000-0000-0000-0000-000000000000\",\n        \"imageUrl\": \"https://dev.azure.com/fabrikam/DefaultCollection/_api/_common/identityImage?id=00000000-0000-0000-0000-000000000000\",\n        \"isContainer\": true\n      }\n    ],\n    \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/pullRequests/1\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:27.2879096Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Project-Level Prerequisites Table in Markdown\nDESCRIPTION: Markdown table defining the project access and permissions requirements for viewing permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/view-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Project access** | [Project member](add-users-team-project.md). |\n| **Permissions**| Member of the **Project Valid Users** group or **Project Collection Valid Users** group.|\n```\n\n----------------------------------------\n\nTITLE: Querying Projects in Azure DevOps Server (On-premises)\nDESCRIPTION: This example demonstrates how to query the Projects entity set to retrieve project names in an on-premises Azure DevOps Server. It uses the $select operator to return only the ProjectName field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_11\n\nLANGUAGE: OData\nCODE:\n```\nhttps://fabrikam/DefaultCollection/_odata/v4.0-preview/Projects?$select=ProjectName\n```\n\n----------------------------------------\n\nTITLE: Custom Field Metadata Definition in Azure DevOps Analytics\nDESCRIPTION: XML metadata representation of a custom field named 'Risk Opportunity' in Azure DevOps Analytics. Shows how custom fields are structured with annotations for display name, reference name, and description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-boards.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<Property Name=\"Custom_RiskOpportunity\" Type=\"Edm.Double\">\n<Annotation Term=\"Display.DisplayName\" String=\"Risk Opportunity\"/>\n<Annotation Term=\"Ref.ReferenceName\" String=\"Custom.RiskOpportunity\"/>\n<Annotation Term=\"Display.Description\" String=\"Risk Reduction | Opportunity Enablement Value. Enter a value from 1 to 5. 5 represents high risk reduction or high opportunity enablement.\"/>\n</Property>\n```\n\n----------------------------------------\n\nTITLE: Analytics $batch Endpoint URL for Azure DevOps Services\nDESCRIPTION: The URL structure for accessing the $batch endpoint in Azure DevOps Services. Note that the $batch endpoint doesn't support project scoping, though queries within a batch can contain project scoping.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-batch.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/$batch\n```\n\n----------------------------------------\n\nTITLE: Unix Difference Output Format Structure\nDESCRIPTION: Structure of the Unix output format used by the difference command, showing how line differences are represented with metadata lines and line prefixes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_10\n\nLANGUAGE: batch\nCODE:\n```\n<metadataline>\n\"< \" line prefix for lines from the first file\n\"---\" line\n\"> \" line prefix for lines from the second file\n\n<metadataline> can be one of these possibilities:\n#a#,# -- add lines from line # in file1 into file2 at lines #->#\n#,#d# -- delete lines from line # -> # in file 1 from file2 at line #\n#,#c#,# -- change lines from line # -> # in file1 into the lines in file2 at line # -> #\n\n# signs separated by commas indicate a line range.\n# signs before the character indicate line numbers in the first file.\n# signs after the character indicate line numbers in the second file.\n\n/// No end of line marker at the end of the file:\n/// \\ No newline at end of file\n```\n\n----------------------------------------\n\nTITLE: Displaying Organization Settings Options in Markdown\nDESCRIPTION: Markdown code to display an image of Organization settings options in Azure DevOps cloud version, with a note about the Project-Scoped Users preview feature.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/about-settings.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]  \n> If the **Limit user visibility and collaboration to specific projects** preview feature is enabled for the organization, users added to the **Project-Scoped Users** group won't be able to access **Organization Settings** other than the **Overview** and **Projects** pages. For more information including important security-related call-outs, see [Manage your organization, Limit  user visibility for projects and more](../../user-guide/manage-organization-collection.md#project-scoped-user-group). \n\n> [!div class=\"mx-imgBorder\"]  \n> ![Screenshot of Organization settings options, cloud.](media/about/organization-settings-options-cloud.png) \n```\n\n----------------------------------------\n\nTITLE: Displaying Feedback Suggestion Image in Markdown\nDESCRIPTION: This Markdown syntax embeds an image located at the relative path '../media/help-make-a-suggestion.png' into the document, using 'Make a suggestion' as the alt text. It visually guides users on how to provide feedback within Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n![Make a suggestion](../media/help-make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization URL Format\nDESCRIPTION: URL format for accessing an Azure DevOps organization\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/acquire-pat.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps:dev.azure.com/{organization}\n```\n\n----------------------------------------\n\nTITLE: Displaying Organization Settings in Azure DevOps\nDESCRIPTION: This markdown snippet shows how to access the Organization settings in Azure DevOps by clicking on the gear icon.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/azure-ad-tenant-policy-restrict-org-creation.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Screenshot showing highlighted Organization settings button.](../../media/settings/open-admin-settings-vert.png)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 146 Update Content in Markdown\nDESCRIPTION: This snippet includes a file containing the main content of Sprint 146 Wiki updates using Markdown syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/wiki/sprint-146-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update](../includes/wiki/sprint-146-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Work Item Color\nDESCRIPTION: XML configuration for setting the color scheme of a work item type in the process configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_16\n\nLANGUAGE: XML\nCODE:\n```\n<WorkItemColor primary=\"FFF2CB1D\" secondary=\"FFF6F5D2\" name=\"Service Task\" />\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: This snippet includes a markdown file containing next steps information, likely common across multiple release note documents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-225-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Team Explorer Query Editor Keyboard Shortcuts\nDESCRIPTION: Defines keyboard shortcuts for navigating and manipulating the query editor in Team Explorer. Includes shortcuts for movement, selection, copying, pasting, and saving changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/queries-te-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|Left arrow|Move focus left|\n|Right arrow|Move focus right|\n|Up arrow|Move focus up|\n|Down arrow|Move focus down|\n|Shift+Up arrow|Highlight consecutive lines above the current line|\n|Shift+Down arrow|Highlight consecutive lines below the current line|\n|Shift+Left arrow|Move focus left one field at a time|\n|Shift+Right arrow|Move focus right one field at a time|\n|End |Move focus to end of current clause|\n|Enter |Move focus down|\n|Tab |Move focus right, one field at a time|\n|Ctrl+c |Copy selected clause|\n|Ctrl+s |Save changes (editor)|\n|Ctrl+v |Paste copied clause|\n|Del |Delete contents of current field or clause|\n```\n\n----------------------------------------\n\nTITLE: Including Wiki Feature Links for Sprint 146 Update\nDESCRIPTION: This Markdown directive incorporates a file containing links related to the Wiki features announced in the Azure DevOps Sprint 146 update. This approach helps keep the main release notes concise and organized.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update-links](includes/wiki/sprint-146-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata for Azure Pipelines Release Notes - YAML\nDESCRIPTION: Specifies the file's metadata including title, description, author, and timestamps at the beginning of the release notes document. This YAML front matter enables static site generators and documentation systems to index, categorize, and display auxiliary information about the document. Required fields include 'title', 'description', 'author', 'ms.author', and 'ms.date'; all values must be properly specified to ensure accurate metadata extraction.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-214-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\\ntitle: Azure DevOps Release Notes - Azure Pipelines Sprint 214 Update\\ndescription: See the Sprint 214 feature updates for Azure Pipelines, including next steps.\\nauthor: ckanyika\\nms.author: ckanyika\\nms.date: 1/12/2023\\n---\n```\n\n----------------------------------------\n\nTITLE: Adding Field Rules in XML for Azure DevOps Work Item Types\nDESCRIPTION: This XML snippet demonstrates how to add rules to a field in a work item type definition. It shows how to freeze the Stack Rank field for all users except members of the Management Team group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-modify-field.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Stack Rank\" refname=\"Microsoft.VSTS.Common.StackRank\" type=\"Double\" reportable=\"dimension\">  \n   <FROZEN not=\"[project]\\Management Team\" />  \n   <HELPTEXT>Work first on items with lower-valued stack rank. Set in triage.</HELPTEXT>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 205 Update Content in Azure Boards Documentation\nDESCRIPTION: Markdown include directive that references external content containing the main Sprint 205 update information for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-205-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-205-update](../includes/boards/sprint-205-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directives for Azure Test Plans Documentation\nDESCRIPTION: Markdown include directives that pull in content for Sprint 235 update links, details, and next steps sections of the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/testplans/sprint-235-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-235-update-links](../includes/testplans/sprint-235-update-links.md)]\n\n[!INCLUDE [sprint-235-update](../includes/testplans/sprint-235-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Project SUPPRESS_NOTIFICATIONS Permission\nDESCRIPTION: Permission namespace for suppressing work item update notifications, useful for bulk updates and migrations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nProject, SUPPRESS_NOTIFICATIONS\n```\n\n----------------------------------------\n\nTITLE: Field Attributes Response - Azure DevOps REST API\nDESCRIPTION: Example JSON response showing field attributes for the Iteration Path field, including supported operations and metadata.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/work-item-fields.md#2025-04-22_snippet_5\n\nLANGUAGE: JSON\nCODE:\n```\n{\n\"name\": \"Iteration Path\",\n\"referenceName\": \"System.IterationPath\",\n\"description\": \"The iteration within which this bug will be fixed\",\n\"type\": \"treePath\",\n\"usage\": \"workItem\",\n\"readOnly\": false,\n\"canSortBy\": true,\n\"isQueryable\": true,\n\"supportedOperations\": [\n{\n\"referenceName\": \"SupportedOperations.Under\",\n\"name\": \"Under\"\n},\n{\n\"referenceName\": \"SupportedOperations.NotUnder\",\n\"name\": \"Not Under\"\n},\n{\n\"referenceName\": \"SupportedOperations.Equals\",\n\"name\": \"=\"\n},\n{\n\"referenceName\": \"SupportedOperations.NotEquals\",\n\"name\": \"<>\"\n},\n{\n\"referenceName\": \"SupportedOperations.In\",\n\"name\": \"In\"\n},\n{\n\"name\": \"Not In\"\n}\n],\n\"isIdentity\": false,\n\"isPicklist\": false,\n\"isPicklistSuggested\": false,\n\"url\": \"https://dev.azure.com/mseng/_apis/wit/fields/System.IterationPath\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Tags for Checkout in Azure Pipelines Repository Resources\nDESCRIPTION: This snippet shows how to use tags to check out a specific commit in a repository resource. It configures a GitHub repository resource with a tag reference.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/multi-repo-checkout.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n  - repository: MyGitHubRepo\n    type: github\n    endpoint: MyGitHubServiceConnection\n    name: MyGitHubOrgOrUser/MyGitHubRepo\n    ref: refs/tags/MyTag\n\nsteps:\n- checkout: MyGitHubRepo\n```\n\n----------------------------------------\n\nTITLE: Paid Extension Configuration\nDESCRIPTION: Configuration for marking an extension as paid in the Marketplace, including required BYOL enforcement and pricing content paths.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"galleryFlags\": [\n        \"Paid\"\n    ],\n    \"tags\": [\n        \"__BYOLENFORCED\"\n    ],\n    \"content\": {\n        \"details\": {\n            \"path\": \"overview.md\"\n        },\n        \"pricing\": {\n            \"path\": \"pricing.md\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Pool with Fabric Profile using Azure CLI\nDESCRIPTION: This Azure CLI command demonstrates how to create a Managed DevOps Pool (`az mdp pool create`) by referencing an external JSON file (`fabric-profile.json`) for the fabric profile configuration, which includes settings like interactive mode. Other parameters required for pool creation are omitted for brevity.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz mdp pool create \\\n   --fabric-profile fabric-profile.json\n   # other parameters omitted for space\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Branch Policies\nDESCRIPTION: A markdown table showing various branch policies, their default settings, and descriptions as used in Azure Repos documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/about-pull-requests.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"2\":::\n      **Policy**\n   :::column-end:::\n   :::column span=\"1\"::: \n      **Default**\n   :::column-end:::\n   :::column span=\"3\"::: \n      **Description**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Regions with Azure CLI\nDESCRIPTION: Command to list available Azure regions from the subscription with formatted output showing Name and DisplayName.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz account list-locations \\\n  --query \"[].{Name: name, DisplayName: displayName}\" \\\n  --output table\n```\n\n----------------------------------------\n\nTITLE: Exporting and Deleting Token Storage Registry Keys\nDESCRIPTION: Command Prompt commands to export and then delete the Visual Studio token storage registry keys to resolve authentication issues with Azure DevOps in Excel after password changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/office/tfs-office-integration-issues.md#2025-04-22_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nreg export HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\VSCommon\\14.0\\ClientServices\\TokenStorage\\VisualStudio\\VssApp %TEMP%\\oicreds.reg\n```\n\nLANGUAGE: batch\nCODE:\n```\nreg delete HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\VSCommon\\14.0\\ClientServices\\TokenStorage\\VisualStudio\\VssApp\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 177 Update Details (Markdown)\nDESCRIPTION: Uses a Markdown include directive to embed the detailed feature descriptions for Azure Boards released in Sprint 177. This helps keep the main release notes concise while providing access to full details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-177-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-177-update](includes/boards/sprint-177-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Invoking Azure Boards Search with Keyboard Shortcut\nDESCRIPTION: Use the keyboard shortcut '/' to quickly invoke the search box in Azure Boards. This allows for faster navigation to work items, boards, backlogs and sprints without using the mouse.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/boards/sprint-154-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!TIP]\n> You can invoke the search box by typing the keyboard shortcut \"/\".\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 184 Update Content for Azure Repos\nDESCRIPTION: Markdown include directive that pulls in the main content describing the Sprint 184 updates for Azure Repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/repos/sprint-184-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-184-update](../includes/repos/sprint-184-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure Artifacts NPM Package API Endpoints\nDESCRIPTION: HTTP endpoints for accessing NPM packages in collection-scoped and project-scoped feeds using Azure Artifacts API v6.0-preview.1\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_20\n\nLANGUAGE: http\nCODE:\n```\nhttps://{instance}/{collection}/_apis/packaging/feeds/{feedId}/npm/{packageName}/versions/{packageVersion}?api-version=6.0-preview.1\n```\n\nLANGUAGE: http\nCODE:\n```\nhttps://{instance}/{collection}/{project}/_apis/packaging/feeds/{feedId}/npm/{packageName}/versions/{packageVersion}?api-version=6.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: Delete and restore work items Permission Reference\nDESCRIPTION: Permission that allows users to mark work items in the project as deleted. The Contributors group has this permission set to Allow by default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, WORK_ITEM_DELETE`\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Management Commands\nDESCRIPTION: Commands to modify file permissions by disabling inheritance and denying read access to specific groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/remove-access-version-control-files.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\ntf permission /inherit:no myfile.cs\n\ntf permission /deny:read myfile.cs /group:ADATUM\\Group1 ADATUM\\Group2 myfile.cs\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section - Azure DevOps Markdown - Markdown\nDESCRIPTION: This snippet incorporates a 'next steps' section using the '[!INCLUDE]' markdown directive referencing 'nextsteps.md'. It is intended to guide users after reading the sprint update. The mechanism requires that the referenced file exists and its markdown content is injected at the reference location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-245-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Advanced Security Update Links (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/ghazdo/sprint-245-update-links.md`), likely containing links related to Sprint 245 updates for GitHub Advanced Security for Azure DevOps. It's used within the context of Azure DevOps release notes to provide quick access to relevant update information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update-links](includes/ghazdo/sprint-245-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Environment Resource Tags Syntax\nDESCRIPTION: Example showing the format for specifying environment resource tags as a comma-separated list.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/unattended-config-unix.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"web, db\"\n```\n\n----------------------------------------\n\nTITLE: Query Multiple Percentile Duration Trends\nDESCRIPTION: PowerBI query to get 50th, 80th, and 90th percentile duration trends for a pipeline, providing a more comprehensive view of duration distribution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration-trend.md#2025-04-22_snippet_2\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelinename}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and (SucceededCount eq 1 or PartiallySucceededCount eq 1) \"\n        &\") \"\n        &\"/compute( \"\n            &\"percentile_cont(TotalDurationSeconds, 0.5,CompletedDateSK) as Duration50thPercentileInSeconds, \"\n                &\"percentile_cont(TotalDurationSeconds, 0.8,CompletedDateSK) as Duration80thPercentileInSeconds, \"\n                &\"percentile_cont(TotalDurationSeconds, 0.90,CompletedDateSK) as Duration90thPercentileInSeconds) \"\n            &\"/groupby( \"\n                &\"(Duration50thPercentileInSeconds, Duration80thPercentileInSeconds, Duration90thPercentileInSeconds, CompletedOn/Date)) \"\n            &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Cloning Git Repository with Basic Authentication\nDESCRIPTION: Demonstrates how to clone a Git repository using basic authentication with a username and password. This command can be used to verify if the provided credentials are valid for basic authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/import-git-repository.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://<<username>>:<<password>>@<<remaining clone Url>>\n```\n\n----------------------------------------\n\nTITLE: West Central US Azure DevOps IP Addresses\nDESCRIPTION: Lists the server name and IP address for Azure DevOps SharePoint (shprod) service in the West Central US region.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nshprodwcus0ip1\t52.159.49.185\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 191 Update Links in Markdown\nDESCRIPTION: An include directive that adds the Sprint 191 update links section from a separate file. This helps modularize the documentation by referencing content from '../includes/pipelines/sprint-191-update-links.md'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-191-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-191-update-links](../includes/pipelines/sprint-191-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Accessing NuGet Package API Endpoint for Project Scoped Feed in Azure DevOps Server 2020\nDESCRIPTION: HTTP endpoint URL pattern for promoting NuGet packages in a project scoped feed on an on-premises Azure DevOps Server 2020. This uses the older 6.0 preview API for package view management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_19\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://{instance}/{collection}/{project}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}?api-version=6.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: Deleting a Workspace in TFVC\nDESCRIPTION: Removes the 'Beta1' workspace from the server. This permanently deletes the workspace definition and any pending changes associated with it.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_9\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf workspace /delete Beta1\n```\n\n----------------------------------------\n\nTITLE: Including Wiki Sprint 215 Update Details in Markdown\nDESCRIPTION: Uses a Microsoft Docs specific Markdown include directive to embed the content of 'includes/wiki/sprint-215-update.md'. This snippet inserts detailed information about the Wiki updates for Sprint 215.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-215-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update](includes/wiki/sprint-215-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Changes to Backlog Levels in Azure DevOps\nDESCRIPTION: Markdown code for embedding an image that shows changes made to backlog levels in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/customize-process.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Screenshot showing Changes made to the backlog levels.](media/process/backlog-levels.png)\n```\n\n----------------------------------------\n\nTITLE: Listing Organization Management Events for Azure DevOps Auditing\nDESCRIPTION: This table lists Azure DevOps audit events related to organization-level management. It includes actions such as organization creation, deletion, restoration, renaming, owner changes, and linking/unlinking from Microsoft Entra ID, specifying the `Action` identifier and a `Description` with placeholders for organization names, owners, and tenant IDs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n### Organization events\n\n| Action | Description |\n|--------|-------------|\n| `Organization.Create` | Organization {OrganizationName} was created in {PreferredRegion} region. |\n| `Organization.LinkToAAD` | Organization {OrganizationName} was linked to Microsoft Entra tenant {AADTenant}. |\n| `Organization.UnlinkFromAAD` | Organization {OrganizationName} was unlinked from Microsoft Entra tenant. |\n| `Organization.Update.Delete` | Organization {OrganizationName} was deleted. |\n| `Organization.Update.ForceUpdateOwner` | Organization owner was changed from {OldOwnerName} to {NewOwnerName}. Reason specified by actor \"{ForceUpdateReason}\". |\n| `Organization.Update.Owner` | Organization owner was changed from {OldOwnerName} to {NewOwnerName}. |\n| `Organization.Update.Rename` | Organization {OldOrganizationName} was renamed to {NewOrganizationName}. |\n| `Organization.Update.Restore` | Organization {OrganizationName} was restored successfully. |\n```\n\n----------------------------------------\n\nTITLE: Permanently delete work items in this project Permission Reference\nDESCRIPTION: Permission that allows users to permanently delete work items from this project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, WORK_ITEM_PERMANENTLY_DELETE`\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipelines Agent with Group Managed Service Account in PowerShell\nDESCRIPTION: This PowerShell command configures an Azure DevOps agent to run as a Windows service using a Group Managed Service Account (gMSA). This eliminates the need for password management as gMSA provides centralized password management for domain accounts used as service accounts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-211-update.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\config.cmd --url https://dev.azure.com/<Organization> `\n             --auth pat --token <PAT> `\n             --pool <AgentPool> `\n             --agent <AgentName> --replace `\n             --runAsService `\n             --windowsLogonAccount <DOMAIN>\\<gMSA>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint Update Links - Markdown\nDESCRIPTION: This snippet utilizes the custom Markdown syntax '[!INCLUDE]' to bring in a shared resource of Sprint 236 update links from a relative path. It is dependent on the Azure DevOps documentation publishing engine which processes these include statements. The snippet does not expect parameters and produces inlined documentation content at the include location. It is not standard Markdown and may not render as expected outside of Microsoft Docs tooling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/general/sprint-236-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-236-update-links](../includes/general/sprint-236-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating Headers in Markdown\nDESCRIPTION: Shows how to create different levels of headers using hash symbols (#) in Markdown syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# This is a H1 header\n## This is a H2 header\n### This is a H3 header\n#### This is a H4 header\n##### This is a H5 header\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 244 Update Links in Markdown\nDESCRIPTION: A markdown include directive that imports the links for Azure Pipelines Sprint 244 updates from a separate file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-244-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-244-update-links](../includes/pipelines/sprint-244-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Pull Request Created Event in Azure DevOps\nDESCRIPTION: This JSON payload represents a pull request created event in Azure DevOps. It includes details about the pull request, repository, and user who created the pull request.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"eventType\": \"git.pullrequest.created\",\n  \"publisherId\": \"azure-devops\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Jamal Hartnett created a new pull request\",\n    \"html\": \"Jamal Hartnett created a new pull request\",\n    \"markdown\": \"Jamal Hartnett created a new pull request\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Jamal Hartnett created a new pull request\\r\\n\\r\\n- Merge status: Succeeded\\r\\n- Merge commit: eef717(https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000)\\r\\n\",\n    \"html\": \"Jamal Hartnett created a new pull request\\r\\n<ul>\\r\\n- Merge status: Succeeded</br>\\r\\n- Merge commit: <a href=\\\"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\\\">eef717</a></br>\\r\\n</ul>\",\n    \"markdown\": \"Jamal Hartnett created a new pull request\\r\\n\\r\\n+ Merge status: Succeeded\\r\\n+ Merge commit: [eef717](https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000)\\r\\n\"\n  },\n  \"resource\": {\n    \"repository\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"name\": \"Fabrikam\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000\",\n      \"project\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Fabrikam\",\n        \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/projects/abcd-1234-efgh-5678\",\n        \"state\": \"wellFormed\"\n      },\n      \"defaultBranch\": \"refs/heads/main\",\n      \"remoteUrl\": \"https://dev.azure.com/fabrikam/DefaultCollection/_git/Fabrikam\"\n    },\n    \"pullRequestId\": 1,\n    \"status\": \"active\",\n    \"createdBy\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"displayName\": \"Jamal Hartnett\",\n      \"uniqueName\": \"fabrikamfiber4@hotmail.com\",\n      \"url\": \"https://dev.azure.com/fabrikam/_apis/Identities/00000000-0000-0000-0000-000000000000\",\n      \"imageUrl\": \"https://dev.azure.com/fabrikam/DefaultCollection/_api/_common/identityImage?id=00000000-0000-0000-0000-000000000000\"\n    },\n    \"creationDate\": \"2024-06-17T11:22:33.456789Z\",\n    \"title\": \"my first pull request\",\n    \"description\": \" - test2\\r\\n\",\n    \"sourceRefName\": \"refs/heads/mytopic\",\n    \"targetRefName\": \"refs/heads/main\",\n    \"mergeStatus\": \"succeeded\",\n    \"mergeId\": \"a1234567-abcde-1234-abc\",\n    \"lastMergeSourceCommit\": {\n      \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\"\n    },\n    \"lastMergeTargetCommit\": {\n      \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\"\n    },\n    \"lastMergeCommit\": {\n      \"commitId\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/commits/00000000-0000-0000-0000-000000000000\"\n    },\n    \"reviewers\": [\n      {\n        \"reviewerUrl\": null,\n        \"vote\": 0,\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"displayName\": \"[Mobile]\\\\Mobile Team\",\n        \"uniqueName\": \"azure-devops:///Classification/TeamProject/00000000-0000-0000-0000-000000000000\\\\Mobile Team\",\n        \"url\": \"https://dev.azure.com/fabrikam/_apis/Identities/00000000-0000-0000-0000-000000000000\",\n        \"imageUrl\": \"https://dev.azure.com/fabrikam/DefaultCollection/_api/_common/identityImage?id=00000000-0000-0000-0000-000000000000\",\n        \"isContainer\": true\n      }\n    ],\n    \"url\": \"https://dev.azure.com/fabrikam/DefaultCollection/_apis/repos/git/repositories/00000000-0000-0000-0000-000000000000/pullRequests/1\"\n  },\n  \"resourceVersion\": \"1.0\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:27.2879096Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding GitHub Link Types to Development Section\nDESCRIPTION: XML code snippet for adding GitHub Commit and Pull Request external link types to work item definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/connect-on-premises-to-github.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n             <ExternalLinkFilter Type=\"GitHub Pull Request\" />  \n             <ExternalLinkFilter Type=\"GitHub Commit\" />  \n```\n\n----------------------------------------\n\nTITLE: Markdown Blockquotes\nDESCRIPTION: Shows how to create nested blockquotes using > symbol\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> Single line quote\n>> Nested quote\n>> multiple line\n>> quote\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Cloud Access Requirements Table\nDESCRIPTION: Markdown table defining access levels and permissions required for Azure DevOps cloud version, including details for both public and private projects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/prerequisites-kanban.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md). <br> - To add work items and use all board features: At least [**Basic** access](../../organizations/security/access-levels.md). <br> - Users with **Stakeholder** access: <br> - Public project: Full access to board features, similar to users with Basic access. <br> - Private project: Can add work items and update status through drag-and-drop but can't update fields displayed on cards, and can add tasks and change task status. |\n| **Permissions** | To view or modify work items: **View work items in this node** and **Edit work items in this node** permissions set to **Allow**. By default, the **Contributors** group has these permissions. For more information, see [Set permissions and access for work tracking](../../organizations/security/set-permissions-access-work-tracking.md). |\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Pipeline Navigation Links in Markdown\nDESCRIPTION: Markdown formatted navigation links for Azure DevOps pipeline documentation sections, including managed pools, Node updates, permissions, locks, templates and manual triggers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-243-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Managed DevOps Pools (Preview)](#managed-devops-pools-preview)\n- [Azure Pipelines tasks use Node 20](#azure-pipelines-tasks-use-node-20)\n- [Create build pipeline permission](#create-build-pipeline-permission)\n- [Exclusive lock check at stage level](#exclusive-lock-check-at-stage-level)\n- [Template information in pipeline runs](#template-information-in-pipeline-runs)\n- [Manually triggered YAML pipeline stages](#manually-triggered-yaml-pipeline-stages)\n```\n\n----------------------------------------\n\nTITLE: Forking Repository Command\nDESCRIPTION: Command to fork the Azure quickstart templates repository containing the Linux web app template\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/Azure/azure-quickstart-templates/tree/master/quickstarts/microsoft.web/webapp-linux-managed-mysql\n```\n\n----------------------------------------\n\nTITLE: Querying Failed Tests for Release Workflow with OData\nDESCRIPTION: This OData query retrieves failed test results for a specific release pipeline. It filters results by pipeline name and date range, then aggregates counts of test outcomes across all workflows.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v4.0-preview/TestResultsDaily?\n$apply=filter(\n\tPipeline/PipelineName eq '{pipelineName}'\n\tAnd Date/Date ge {startdate})\n/groupby((TestSK, Test/TestName, Workflow), \n\taggregate(\n\tResultCount with sum as TotalCount,\n\tResultPassCount with sum as PassedCount,\n\tResultFailCount with sum as FailedCount,\n\tResultNotExecutedCount with sum as NotExecutedCount,\n\tResultNotImpactedCount with sum as NotImpactedCount,\n\tResultFlakyCount with sum as FlakyCount))\n/filter(FailedCount gt 0)\n/compute(\niif(TotalCount gt NotExecutedCount, ((PassedCount add NotImpactedCount) div cast(TotalCount sub NotExecutedCount, Edm.Decimal)) mul 100, 0) as PassRate)\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Settings.xml for Azure Artifacts Authentication\nDESCRIPTION: XML snippet to configure server authentication in Maven settings.xml file to authenticate with Azure Artifacts using a personal access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_2\n\nLANGUAGE: command\nCODE:\n```\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0\n                              https://maven.apache.org/xsd/settings-1.0.0.xsd\">\n  <servers>\n    <server>\n      <id>[FEED-NAME]</id>\n      <username>[ORGANIZATION-NAME]</username>\n      <password>[PERSONAL_ACCESS_TOKEN]</password>\n    </server>\n  </servers>\n</settings>\n```\n\n----------------------------------------\n\nTITLE: Accessing WitAdmin Tool Path in Visual Studio 2017\nDESCRIPTION: Command showing the default installation path for accessing the WitAdmin tool in Visual Studio 2017 Community Edition. This path is used to navigate to the directory containing the tool for work item customization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/witadmin-run-tool-example.md#2025-04-22_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\n%programfiles(x86)%\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\n```\n\n----------------------------------------\n\nTITLE: Deployment Pools Role Permissions Table in Markdown\nDESCRIPTION: A markdown table detailing the four roles available for deployment pools in Azure DevOps and their associated permissions. Each role (Reader, Service Account, User, and Administrator) has specific capabilities for interacting with deployment pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/deployment-pool-roles.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Role | Description |\n|------|---------||\n| **Reader** | View deployment pools. |\n| **Service Account** | View agents, create sessions, and listen for jobs from the agent pool. |\n| **User** | View and use the deployment pool to create deployment groups. |\n| **Administrator** | Administer, manage, view, and use deployment pools. |\n```\n\n----------------------------------------\n\nTITLE: Searching by Resolved By using Friendly Name\nDESCRIPTION: This snippet illustrates searching using a field's friendly name, especially when it contains spaces. The query `\"Resolved By\":Peter` finds work items where the 'Resolved By' field is set to 'Peter'. The friendly name is enclosed in quotes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_13\n\nLANGUAGE: azure-devops-search\nCODE:\n```\n\"Resolved By\":Peter\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 216 Update Details for Azure Pipelines (Markdown)\nDESCRIPTION: This Markdown directive pulls content from the file `includes/pipelines/sprint-216-update.md`. Its purpose is to embed the specific details of the Sprint 216 update for Azure Pipelines into the document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-216-update](includes/pipelines/sprint-216-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Job State Change Service Hook Payload Structure - JSON Example\nDESCRIPTION: This JSON snippet provides an example payload for a service hook triggered by a job state change event in Azure DevOps Pipelines. It includes notification metadata, message formats, job details such as ID, name, state, result, timing, and relevant resource links. No dependencies are required but understanding Azure DevOps webhooks and event subscriptions is necessary. The payload helps consumers react to particular job events, with all data fields shown as typically emitted by the event.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-218-update.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\\n    \\\"subscriptionId\\\": \\\"aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e\\\",\\n    \\\"notificationId\\\": 29,\\n    \\\"id\\\": \\\"fcad4962-f3a6-4fbf-9653-2058c304503f\\\",\\n    \\\"eventType\\\": \\\"ms.vss-pipelines.job-state-changed-event\\\",\\n    \\\"publisherId\\\": \\\"pipelines\\\",\\n    \\\"message\\\":\\n    {\\n        \\\"text\\\": \\\"Run 20221121.5 stage Build job Compile succeeded.\\\",\\n        \\\"html\\\": \\\"Run 20221121.5 stage Build job <a href=\\\\\\\"https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2710088\\\\\\\">Compile</a> succeeded.\\\",\\n        \\\"markdown\\\": \\\"Run 20221121.5 stage Build job [Compile](https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2710088) succeeded.\\\"\\n    },\\n    \\\"detailedMessage\\\":\\n    {\\n        \\\"text\\\": \\\"Run 20221121.5 stage Build job Compile succeeded.\\\",\\n        \\\"html\\\": \\\"Run 20221121.5 stage Build job <a href=\\\\\\\"https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2710088\\\\\\\">Compile</a> succeeded.\\\",\\n        \\\"markdown\\\": \\\"Run 20221121.5 stage Build job [Compile](https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2710088) succeeded.\\\"\\n    },\\n    \\\"resource\\\":\\n    {\\n        \\\"job\\\":\\n        {\\n            \\\"_links\\\":\\n            {\\n                \\\"web\\\":\\n                {\\n                    \\\"href\\\": \\\"https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/results?buildId=2710088\\\"\\n                },\\n                \\\"pipeline.web\\\":\\n                {\\n                    \\\"href\\\": \\\"https://dev.azure.com/fabrikamfiber/fabrikamfiber-viva/_build/definition?definitionId=4647\\\"\\n                }\\n            },\\n            \\\"id\\\": \\\"e87e3d16-29b0-5003-7d86-82b704b96244\\\",\\n            \\\"name\\\": \\\"Compile\\\",\\n            \\\"state\\\": \\\"completed\\\",\\n            \\\"result\\\": \\\"succeeded\\\",\\n            \\\"startTime\\\": \\\"2022-11-21T16:10:28.49Z\\\",\\n            \\\"finishTime\\\": \\\"2022-11-21T16:10:53.66Z\\\"\\n        },\\n        \\\"stage\\\": { ... },\\n        \\\"run\\\": { ... },\\n        \\\"pipeline\\\": { ... },\\n        \\\"repositories\\\": [ ... ]\\n    },\\n    \\\"resourceVersion\\\": \\\"5.1-preview.1\\\",\\n    \\\"createdDate\\\": \\\"2022-11-21T16:11:02.9207334Z\\\"\\n}\\n\n```\n\n----------------------------------------\n\nTITLE: Version Control Note Block\nDESCRIPTION: Markdown note block explaining Git compatibility in Visual Studio and Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/comparison-git-tfvc.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n>[!NOTE]\\nGit in Visual Studio, Azure DevOps Services, and Azure DevOps Server is standard Git. You can use Visual Studio with third-party Git services, and you can also use third-party Git clients with Azure DevOps Server.\n```\n\n----------------------------------------\n\nTITLE: Enabling Git Aliases in Azure DevOps CLI\nDESCRIPTION: Command to enable git aliases for the Azure DevOps Extension, which allows shorter command syntax for repositories and pull requests operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/auto-detect-and-git-aliases.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops configure --use-git-aliases true\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Include Directives\nDESCRIPTION: Include statements for general and pipeline-specific update documentation references\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-199-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-199-update-links](includes/general/sprint-199-update-links.md)]\n[!INCLUDE [sprint-199-update-links](includes/pipelines/sprint-199-update-links.md)]\n[!INCLUDE [sprint-199-update](includes/general/sprint-199-update.md)]\n[!INCLUDE [sprint-199-update](includes/pipelines/sprint-199-update.md)]\n```\n\n----------------------------------------\n\nTITLE: OData Query Using $count Virtual Property\nDESCRIPTION: OData query demonstrating the recommended way to count total work items using the $count virtual property in an aggregation method.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_32\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $apply=aggregate($count as Count)\n```\n\n----------------------------------------\n\nTITLE: Azure Artifacts Release Notes Frontmatter\nDESCRIPTION: YAML frontmatter metadata for the Azure Artifacts Sprint 207 release notes page, containing title, description, author information and date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/artifacts/sprint-207-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Azure DevOps Release Notes - Azure Artifacts Sprint 207 Update\ndescription: See the Sprint 207 feature updates for Azure Artifacts, including next steps.\nauthor: gloridelmorales\nms.author: glmorale\nms.date: 07/29/2022\n---\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Wiki URL Template Structure\nDESCRIPTION: Shows the new template structure for Azure DevOps Wiki page URLs that uses page IDs to create shorter, more readable links.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-158-update.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{accountName}/{projectName}/_wiki/wikis/{wikiName}/{pageId}/{readableWiki PageName}\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 157 Signature in Markdown\nDESCRIPTION: Include directive for Sprint 157 signature section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-157-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157](../includes/signer/sprint-157.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Prerequisites in Markdown\nDESCRIPTION: Markdown include statements for kanban prerequisites and board opening instructions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/add-task-checklists.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/prerequisites-kanban.md)]\n\n[!INCLUDE [temp](../includes/open-kanban-board.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 251 Update Details (Markdown)\nDESCRIPTION: This Markdown snippet employs the `[!INCLUDE ...]` directive to insert the detailed content regarding Azure Pipelines updates for Sprint 251 from the specified file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update](includes/pipelines/sprint-251-update.md)]\n```\n\n----------------------------------------\n\nTITLE: NuGet Project with Vulnerable Dependency\nDESCRIPTION: A C# project file example showing a dependency on Microsoft.AspNetCore.App that has a transitive dependency on a vulnerable version of Microsoft.AspNetCore.Http.Connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_12\n\nLANGUAGE: csharp\nCODE:\n```\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\n  <PropertyGroup>\n    <TargetFramework>netcoreapp3.1</TargetFramework>\n    <RootNamespace>NuGet.Dependencies</RootNamespace>\n  </PropertyGroup>\n  <ItemGroup>\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.14\" />\n  </ItemGroup>\n</Project>\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Portfolio Vision to Azure Boards Wiki in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Portfolio Vision' to the Azure Boards 'Wiki'. It suggests using the project wiki to share strategy, solutions, and collaboration information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Portfolio Vision \n   :::column-end:::\n   :::column span=\"3\":::\n      [**Wiki**](safe-concepts.md#wiki). Use the project wiki to share broadly within the organization information related to strategy, solutions, and how teams collaborate to produce portfolio and program deliverables.    \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Retrieving Counts with Data from Azure DevOps Analytics\nDESCRIPTION: OData queries that return both a count and specific properties for work items, areas, and users. These queries use the $count=true parameter along with $select to specify which properties to include in the results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/v4.0-preview/WorkItems?$count=true&$select=WorkItemId,Title,WorkItemType\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/v4.0-preview/Areas?$count=true&$select=AreaName,AreaPath\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/v4.0-preview/Users?$count=true&$select=UserName,UserEmail\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content for Azure Repos\nDESCRIPTION: Markdown include directive that pulls in content describing next steps for users after reviewing the Sprint 184 updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/repos/sprint-184-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 222 Update Details (Markdown)\nDESCRIPTION: This directive uses the Microsoft Docs Markdown syntax `[!INCLUDE ...]` to embed the full content of another Markdown file. It includes detailed information about Azure Boards updates introduced in Sprint 222.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update](includes/boards/sprint-222-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Azure Pipelines Documentation\nDESCRIPTION: Markdown include directive that incorporates the next steps section from an external file in the includes directory, providing guidance on follow-up actions after reading the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-199-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Required URLs for Visual Studio Domain Access\nDESCRIPTION: List of URLs that need to be accessible through the proxy for organizations using the *.visualstudio.com domain. These endpoints are essential for the Azure Pipeline agent to function properly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/web-proxy-bypass.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://login.microsoftonline.com\nhttps://app.vssps.visualstudio.com \nhttps://{organization_name}.visualstudio.com\nhttps://{organization_name}.vsrm.visualstudio.com\nhttps://{organization_name}.vstmr.visualstudio.com\nhttps://{organization_name}.pkgs.visualstudio.com\nhttps://{organization_name}.vssps.visualstudio.com\n```\n\n----------------------------------------\n\nTITLE: Querying Work Items Containing Specific Words in History\nDESCRIPTION: This query clause filters for work items whose History field contains the word \"reproducible\".\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/history-and-auditing.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`History Contains Words reproducible`\n```\n\n----------------------------------------\n\nTITLE: Retrieving a File from Default Branch in Azure Repos\nDESCRIPTION: Example of retrieving a file from the default branch (typically main) in a Git repository, saving it to the current folder, and prompting for user credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-view-command.md#2025-04-22_snippet_1\n\nLANGUAGE: command-line\nCODE:\n```\ntf git view /collection:https://dev.azure.com/fabrikam-fiber /teamproject:FabrikamProject \n            /repository:FabrikamRepo \n            /path:FabrikamApp/Global.asax.cs \n            /output:Global.asax.cs \n```\n\n----------------------------------------\n\nTITLE: Discarding Specific Changeset from Merge Candidates in TFVC\nDESCRIPTION: Removes changeset 137 as a candidate for merging from branch1 to branch2 using the /discard option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/merge-command.md#2025-04-22_snippet_6\n\nLANGUAGE: cmd\nCODE:\n```\nc:\\projects>tf merge /discard /version:C137~C137 branch1 branch2 /recursive\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts Table for Azure DevOps Kanban Board\nDESCRIPTION: Markdown table defining keyboard shortcuts and their corresponding actions for Azure DevOps Kanban board operations. Includes shortcuts for item management, navigation, filtering, and swimlane operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/work-board-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|n|Add new item|\n|c|Add new child item|\n|Home|Select first item|\n|Enter|Open item|\n|Ctrl+Shift+f|Filter results|\n|Ctrl+Up arrow|Move item up|\n|Ctrl+Down arrow|Move item down|\n|Ctrl+Left arrow|Move item left|\n|Ctrl+Right arrow|Move item right|\n|Ctrl+Home|Move item to top of column|\n|Ctrl+End|Move item to bottom of column|\n|Ctrl+Shift+Up arrow|Move item to swimlane above|\n|Ctrl+Shift+Down arrow|Move item to swimlane below|\n|F2|Rename item|\n|e|Toggle show/hide empty fields|\n|o|Expand all swimlanes|\n|u|Collapse all swimlanes|\n|Shift+Page up|Select first/next swimlane above|\n|Shift+Page down|Select last/next swimlane below|\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Features to Azure Boards Feature Work Items in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® artifact 'Features' to the Azure Boards 'Feature work item' type, explaining that Features contain Stories and have their own portfolio backlog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Features\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Feature work item**](safe-concepts.md#work-items). You define a Feature using the Feature work item type. Features are a container for many Stories and are represented in their own portfolio backlog.  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Changing Project Process Dialog in Azure DevOps\nDESCRIPTION: This snippet shows the dialog for changing a project's process in Azure DevOps. It includes an image reference demonstrating how to select a new process from available options and save the changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/change-project-to-inherited-process.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Change process dialog](/azure/devops/organizations/settings/work/media/process/change-project-process-inherited-agile.png) \n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 177 Update Links (Markdown)\nDESCRIPTION: Uses a Markdown include directive to insert links to the specific Azure Boards feature updates detailed in Sprint 177. This directive dynamically pulls content from the specified path during processing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-177-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-177-update-links](includes/boards/sprint-177-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipeline for Ubuntu-24.04 VM Image with Mixed Bash and PowerShell Steps using YAML\nDESCRIPTION: This YAML snippet sets up a job that uses the latest Ubuntu 24.04 image, runs both bash and PowerShell steps to display basic environment information. Requires a pipeline agent configured for Ubuntu-24.04. Bash step prints a greeting and distribution info; PowerShell step prints the OS information from the $PSVersionTable variable. Scripts are executed as-is without required input parameters; outputs are directly sent to the pipeline logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-253-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- job: ubuntu2404\\n  pool:\\n    vmImage: 'ubuntu-24.04'\\n  steps:\\n  - bash: |\\n      echo Hello from Ubuntu 24.04\\n      lsb_release -d\\n  - pwsh: |\\n      Write-Host \\\"`$PSVersionTable.OS\\\"\\n      $PSVersionTable.OS\n```\n\n----------------------------------------\n\nTITLE: Test Case Management Field Mapping Command for Azure DevOps Server\nDESCRIPTION: Command for importing or exporting field mapping definitions for test case management in Azure DevOps Server. Used to customize resolution types, bug work item types, and failure types for Azure Test Plans.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-customize-and-manage-objects-for-tracking-work.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ntcm fieldmapping\n```\n\n----------------------------------------\n\nTITLE: Adding POST Request Handler\nDESCRIPTION: Extension of the Express server to handle POST requests by sending a simple acknowledgment response.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\napp.post('/', function (req, res) {\n    res.send('Received the POST')\n})\n```\n\n----------------------------------------\n\nTITLE: Security Rules Reference Table in Markdown\nDESCRIPTION: A markdown table documenting security rule IDs, their associated token types, and validation status. Each rule is marked with a green checkmark indicating user alerts are enabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/includes/non-provider-table.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Rule ID | Token Name  | User Alerts | Validity Checking |\n| --- | --- | --- | --- |\n| SEC101/122 | AspNetMachineKey  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/042 | DynatraceToken  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/528 | GenericJwt  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/032 | GpgCredentials  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/009 | LinkedInCredentials  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/033 | MongoDbCredentials  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/036 | MySqlCredentials  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/056 | OpenSshPrivateKey  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/013 | PemPrivateKey  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/058 | PgpPrivateKey  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/055 | Pkcs12CertificatePrivateKeyBundle  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/054 | PkcsPrivateKey  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/038 | PostgreSqlCredentials  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/057 | PuttyPrivateKey  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/041 | RabbitMQCredentials  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/059 | RsaPrivateKey  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/037 | SqlLegacyCredentials  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n| SEC101/127 | UrlCredentials  | ![Green Checkmark](../../../media/icons/checkmark.png) |  |\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 231 Azure Boards Update Links\nDESCRIPTION: This snippet uses a Markdown include directive specific to the Microsoft Docs platform to insert content from another file. It includes links related to the Sprint 231 updates for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-231-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-231-update-links](includes/boards/sprint-231-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding Form Controls for CMMI Work Item Type in Azure DevOps\nDESCRIPTION: XML definition for the required form controls in CMMI process template, including Size, Requirement Type, and Value Area fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n<Control Type=\"FieldControl\" FieldName=\"Microsoft.VSTS.Scheduling.Size\" Label=\"Size\" LabelPosition=\"Left\" />\n<Control Type=\"FieldControl\" FieldName=\"Microsoft.VSTS.CMMI.RequirementType\" Label=\"Type\" LabelPosition=\"Left\" /> \n<Control FieldName=\"Microsoft.VSTS.Common.ValueArea\" Type=\"FieldControl\" Label=\"Value area\" LabelPosition=\"Left\" />  \n```\n\n----------------------------------------\n\nTITLE: Defining an Epic Category - Azure DevOps XML\nDESCRIPTION: This snippet defines a new Epic Category within a Categories.xml file in Azure DevOps, specifying that the default work item type for this category is 'Epic'. It requires the category and work item types to be coordinated with ProcessConfiguration.xml. A missing reference to this custom category elsewhere in configuration may trigger validation errors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_15\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n  <CATEGORY name=\\\"Epic Category\\\" refname=\\\"Microsoft.EpicCategory\\\">\\n    <DEFAULTWORKITEMTYPE name=\\\"Epic\\\" />\\n  </CATEGORY>\n```\n\n----------------------------------------\n\nTITLE: Adding Tasks in Azure DevOps - CMMI Process\nDESCRIPTION: Instructions for adding and managing tasks using the CMMI process template in Azure DevOps. Includes steps for creating tasks, marking them complete, reordering, and managing task details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/get-started/plan-track-work.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n1. To start adding tasks, select the actions icon for the story and select the Add Task option.  \n2. Enter a title for the task and type Enter when you're done.\n3. If you have various tasks to add, just keep entering your task titles and type Enter.\n4. You can mark a task as done, expand or collapse the task checklist, reorder, and reparent tasks.\n```\n\n----------------------------------------\n\nTITLE: Project Administrator and Member Tasks Table\nDESCRIPTION: Markdown table showing the different tasks available to project administrators and project members for managing the project summary page.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/project-vision-status.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Permissions**|Member of the [Project Administrators](../security/change-project-level-permissions.md) group or **Edit project-level information** permission set to **Allow** to do the following tasks:<br>- Edit information on the project page.<br>- Change the repository that you use to share project information.<br>- Manage project membership.<br>**Specific tasks:**<br>- To edit a project page: **Contributor** to the repository or branch or **Contribute** permissions set to **Allow**.<br>- To view the project summary: [Valid member of the project](../security/about-permissions.md#valid-user-groups).<br>- To add or edit project tags: Project-level **Manage properties** permission set to **Allow**. This permission controls the project properties REST API.|\n```\n\n----------------------------------------\n\nTITLE: Displaying Entity Property Information in Markdown Table\nDESCRIPTION: This code snippet shows how to format a table in Markdown to display information about shared properties across several entity types in Azure DevOps Analytics. It includes columns for display name, property name, data type, description, and reference name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-boards.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|**Display name**<br/>`Property name` | **Data type** | **Description**<br/>`Reference name` | \n|-------------------------------------|---------------|--------------------------------------|\n|**Accepted By**<br/>`Microsoft_VSTS_CodeReview_AcceptedBy` | UserSK | Name of the person who responded to a code review. (CMMI process)<br/>`Microsoft.VSTS.CodeReview.AcceptedBy` |   \n|**Accepted Date**<br/> `AcceptedDate` | DateTime | Date and time when the person responded to the code review. (CMMI process)<br/>`Microsoft.VSTS.CodeReview.AcceptedDate`  |     \n| **Activated By**<br/>`ActivatedBy`<br/>`ActivatedByUserSK` | UserSK | Name of the team member who activated or reactivated the work item.<br/>`Microsoft.VSTS.Common.ActivatedBy`   |   \n|**Activated Date**<br/> `ActivatedDate` | DateTime | Date and time when a team member activated or reactivated a bug or work item.<br/>`Microsoft.VSTS.CodeReview.ActivatedDate` | \n|**Activity**<br/>`Activity` | String | The type of activity that is required to perform a task.<br/>`Microsoft.VSTS.Common.Activity`<br/><br/>The type of activity or discipline that is assigned to a task. Allowed values are: **Deployment**, **Design**, **Development**, **Documentation**, **Requirements**, and **Testing**. (Agile, Scrum, and Basic process) <br/>`Microsoft.VSTS.Common.Activity`  | \n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Release Created Event in Azure DevOps\nDESCRIPTION: This JSON sample demonstrates the payload structure when a new release is created in Azure DevOps. It includes detailed information about the release, its environments, artifacts, and related project data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-000000000000d4d69db4-18d4-413e-bc43-07f56b531160\",\n  \"eventType\": \"ms.azure-devops-release.release-created-event\",\n  \"publisherId\": \"rm\",\n  \"scope\": \"all\",\n  \"message\": {\n    \"text\": \"Release Release-1 created.\",\n    \"html\": \"<a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/5'>Release-1</a> created.\",\n    \"markdown\": \"Release [Release-1](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/5) created.\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Release Release-1 created from release pipeline Fabrikam.CD.\\\\r\\\\nRelease description: QFE release for fixing title\\\\r\\\\nContinuousIntegration Requested for Chuck Reinhart\\\\r\\\\n- Build: fabrikam.Bd.2016.04.10 & 2 more<\\\\li>\",\n    \"html\": \"Release <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/5'>Release-1</a> created from release pipeline <a href='http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releasedefinitions/1'>Fabrikam.CD</a>.\\\\r\\\\n- Release description: QFE release for fixing title</br>\\\\r\\\\n- ContinuousIntegration Requested for Chuck Reinhart</br>\\\\r\\\\n- Build: fabrikam.Bd.2016.04.10 & 2 more<\\\\li>\",\n    \"markdown\": \"Release [Release-1](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/5) created from release pipeline [Fabrikam.CD](http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releasedefinitions/1).\\\\r\\\\n- Release description: QFE release for fixing title</br>\\\\r\\\\n- ContinuousIntegrationRequested for Chuck Reinhart</br>\\\\r\\\\n- Build: fabrikam.Bd.2016.04.10 & 2 more<\\\\li>\"\n  },\n  \"resource\": {\n    \"release\": {\n      \"id\": 4,\n      \"name\": \"Release-1\",\n      \"status\": \"active\",\n      \"createdOn\": \"2016-01-21T08:19:17.26Z\",\n      \"modifiedOn\": \"2016-01-21T08:19:17.26Z\",\n      \"modifiedBy\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"displayName\": \"Chuck Reinhart\"\n      },\n      \"createdBy\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"displayName\": \"Chuck Reinhart\"\n      },\n      \"environments\": [\n        {\n          \"id\": 5,\n          \"releaseId\": 0,\n          \"name\": \"Dev\",\n          \"status\": \"succeeded\",\n          \"variables\": {},\n          \"preDeployApprovals\": [],\n          \"postDeployApprovals\": [],\n          \"preApprovalsSnapshot\": {\n            \"approvals\": [],\n            \"approvalOptions\": {\n              \"requiredApproverCount\": 0,\n              \"releaseCreatorCanBeApprover\": true\n            }\n          },\n          \"postApprovalsSnapshot\": {\n            \"approvals\": []\n          },\n          \"deploySteps\": [],\n          \"rank\": 1,\n          \"definitionEnvironmentId\": 1,\n          \"queueId\": 1,\n          \"environmentOptions\": {\n            \"emailNotificationType\": \"OnlyOnFailure\",\n            \"emailRecipients\": \"release.environment.owner;release.creator\",\n            \"skipArtifactsDownload\": false,\n            \"timeoutInMinutes\": 0,\n            \"enableAccessToken\": false\n          },\n          \"demands\": [],\n          \"conditions\": [],\n          \"modifiedOn\": \"2016-01-21T08:19:17.26Z\",\n          \"workflowTasks\": [\n            {\n              \"taskId\": \"00000000-0000-0000-0000-000000000000\",\n              \"version\": \"*\",\n              \"name\": \"Deploy Website to Azure\",\n              \"enabled\": true,\n              \"alwaysRun\": false,\n              \"continueOnError\": false,\n              \"timeoutInMinutes\": 0,\n              \"definitionType\": null,\n              \"inputs\": {\n                \"ConnectedServiceName\": \"b460b0f8-fe23-4dc2-a99c-fd8b0633fe1c\",\n                \"WebSiteName\": \"$(webAppName)\",\n                \"WebSiteLocation\": \"Southeast Asia\",\n                \"Slot\": \"\",\n                \"Package\": \"$(System.DefaultWorkingDirectory)\\\\**\\\\*.zip\"\n              }\n            }\n          ],\n          \"deployPhasesSnapshot\": [],\n          \"owner\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\n            \"displayName\": \"Chuck Reinhart\"\n          },\n          \"scheduledDeploymentTime\": \"2016-01-21T08:19:17.26Z\",\n          \"schedules\": [],\n          \"release\": {\n            \"id\": 5,\n            \"name\": \"Release-1\",\n            \"url\": \"http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/releases/5\"\n          }\n        }\n      ],\n      \"variables\": {},\n      \"artifacts\": [\n        {\n          \"sourceId\": \"31419848-1780-4137-b7e3-62092e986fd6:1\",\n          \"type\": \"Build\",\n          \"alias\": \"Fabrikam.CI\",\n          \"definitionReference\": {\n            \"Definition\": {\n              \"id\": \"00000000-0000-0000-0000-0000000000001\",\n              \"name\": \"Fabrikam.CI\"\n            },\n            \"Project\": {\n              \"id\": \"00000000-0000-0000-0000-00000000000031419848-1780-4137-b7e3-62092e986fd6\",\n              \"name\": \"Fabrikam\"\n            }\n          },\n          \"isPrimary\": true\n        }\n      ],\n      \"releaseDefinition\": {\n        \"id\": 1,\n        \"name\": \"Fabrikam.CD\",\n        \"url\": \"http://dev.azure.com/fabfiber/DefaultCollection/Fabrikam-Fiber-Git/_apis/Release/definitions/1\"\n      },\n      \"description\": \"QFE release for fixing title\",\n      \"reason\": \"continuousIntegration\",\n      \"releaseNameFormat\": \"Release-$(rev:r)\",\n      \"keepForever\": false,\n      \"definitionSnapshotRevision\": 0,\n      \"comment\": \"\",\n      \"logsContainerUrl\": null,\n      \"_links\": {}\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-00000000000000000000-0000-0000-0000-000000000000\",\n      \"name\": \"Fabrikam\"\n    }\n  },\n  \"resourceVersion\": \"3.0-preview.1\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2024-09-19T13:03:27.6570261Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Links for Azure DevOps Documentation\nDESCRIPTION: Navigation markup defining internal page links for tracking progress using Rollup and Taskboard live updates sections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/boards/sprint-157-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Track the progress of parent items using Rollup on Boards backlog](#track-the-progress-of-parent-items-using-rollup-on-boards-backlog)\n- [Taskboard live updates](#taskboard-live-updates)\n```\n\n----------------------------------------\n\nTITLE: Creating a Next Step Action Link using Markdown\nDESCRIPTION: This Microsoft Docs specific Markdown snippet uses a `div` element with the class `nextstepaction` to style a hyperlink as a prominent 'next step' button. It guides users to the 'Create your first pipeline' documentation page (`../create-first-pipeline.md`), improving navigation flow.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/pipelines-sign-up.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Create your first pipeline](../create-first-pipeline.md)\n```\n\n----------------------------------------\n\nTITLE: Including Release Notes Content in Markdown\nDESCRIPTION: Markdown include statements for incorporating Sprint 254 release notes content from separate files. Uses three includes for update links, main update content, and next steps sections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/general/sprint-254-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-254-update-links](../includes/general/sprint-254-update-links.md)]\n\n[!INCLUDE [sprint-254-update](../includes/general/sprint-254-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Markdown Content in Azure DevOps Documentation - Markdown\nDESCRIPTION: This snippet uses the Azure DevOps documentation syntax '[!INCLUDE]' to embed the content from referenced files such as sprint-246-update-links.md, sprint-246-update.md, and nextsteps.md into the current Markdown page. This dependency enables modular documentation maintenance. No parameters are accepted; the snippet will output rendered content from the specified relative path during Azure DevOps Docs build. The use of 'includes' promotes consistency and DRY (Don't Repeat Yourself) principles across documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-246-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-246-update-links](../includes/ghazdo/sprint-246-update-links.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-246-update](../includes/ghazdo/sprint-246-update.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 213 Update Links in Markdown\nDESCRIPTION: Include directive for Sprint 213 update links markdown content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-213-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-213-update-links](../includes/pipelines/sprint-213-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 185 Update Links in Markdown\nDESCRIPTION: Markdown include directive that references the sprint-185-update-links.md file in the reporting section of the includes directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/reporting/sprint-185-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-185-update-links](../includes/reporting/sprint-185-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Viewing Test Runs Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`Project, VIEW_TEST_RESULTS`) grants permission to view test plans and their associated results under the specific project area path in Azure DevOps. It allows users to monitor test execution outcomes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, VIEW_TEST_RESULTS\n```\n\n----------------------------------------\n\nTITLE: Creating a Note Box in Markdown\nDESCRIPTION: This snippet shows how to create a note box in a markdown document using Azure DevOps-specific syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/configure-customize.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]   \n> The `Original Estimate`, `Completed Work`, `Remaining Work` fields were designed to support integration with Microsoft Project. Integration support with Microsoft Project is deprecated for Azure DevOps Server 2019 and later versions, including the cloud service.\n```\n\n----------------------------------------\n\nTITLE: Including Reporting Update Links using Markdown Directive\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/reporting/sprint-217-update-links.md`), likely containing links related to Reporting updates for Sprint 217. It's used within the Azure DevOps documentation build system (Microsoft Docs).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-217-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update-links](includes/reporting/sprint-217-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 236 Update Links in Markdown\nDESCRIPTION: This code snippet includes external markdown content that contains links related to the Sprint 236 update for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-236-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-236-update-links](../includes/pipelines/sprint-236-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Deleting Team Dashboards Default Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`DashboardsPrivileges, Delete`) represents the default permission allowing users (typically team administrators) to delete team dashboards within a project in Azure DevOps. This is part of the default permission set for team dashboards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_27\n\nLANGUAGE: plaintext\nCODE:\n```\nDashboardsPrivileges, Delete\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Package Publishing Links Structure\nDESCRIPTION: Markdown structure showing documentation links for publishing different package types using Azure Pipelines, including NuGet, npm, Maven, and Python packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/feed-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### [NuGet](#tab/nugetserver)\n\n- [Publish NuGet packages with Azure Pipelines](../../pipelines/artifacts/nuget.md)\n\n### [Npm](#tab/npmserver)\n\n- [Publish npm packages with Azure Pipelines](../../pipelines/artifacts/npm.md)\n\n### [Maven](#tab/mavenserver)\n\n- [Publish Maven artifacts with Azure Pipelines](../../pipelines/artifacts/publish-maven-artifacts.md)\n\n### [Python](#tab/pythonserver)\n\n- [Publish Python packages with Azure Pipelines](../../pipelines/artifacts/pypi.md)\n\n---\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Organization URL\nDESCRIPTION: URL pattern for accessing an Azure DevOps organization after creation. Users can sign in to their organization using this URL format, replacing {yourorganization} with their actual organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/create-organization.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Configuring Public Feed in Cargo Config for Feed Readers and Anonymous Users\nDESCRIPTION: TOML configuration to add to .cargo/config.toml for connecting to a public feed in Azure Artifacts as Feed Readers or anonymous users. This configures the registry and replaces the default crates-io source with your feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/cargo/cargo-upstream-source.md#2025-04-22_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[registries]\n<FEED_NAME> = { index = \"sparse+https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/Cargo/index/\" }\n\n[source.crates-io]\nreplace-with = \"<FEED_NAME>\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Process Page and Backlog Levels in Azure DevOps\nDESCRIPTION: Markdown code for embedding an image that shows the Process page and how to open Backlog levels in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/customize-process.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Screenshot showing Web portal, Admin context, Process page, open Backlog levels.](media/process/process-backlog-levels-open.png)\n```\n\n----------------------------------------\n\nTITLE: Removing All Azure Pipeline Subscriptions from Slack\nDESCRIPTION: Command for project administrators to remove all pipeline subscriptions for a project from a Slack channel. This helps declutter channels by removing unwanted notifications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/slack.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n/azpipelines unsubscribe all <project url>\n```\n\nLANGUAGE: bash\nCODE:\n```\n/azpipelines unsubscribe all https://dev.azure.com/myorg/myproject\n```\n\n----------------------------------------\n\nTITLE: Project Prerequisites Block in Markdown\nDESCRIPTION: Markdown table defining the permission and directory service requirements for managing project-level permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/change-project-level-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Permissions** | Member of the [**Project Administrators** security group](look-up-project-administrators.md). If you created the organization or collection, you're automatically a member of this group. |\n| **Directory services** | [Security groups defined in Microsoft Entra ID or Active Directory](add-ad-aad-built-in-security-groups.md) before adding them to Azure DevOps. |\n```\n\n----------------------------------------\n\nTITLE: Configuring CodeQL Analysis Environment in Azure DevOps YAML Pipeline\nDESCRIPTION: This snippet shows the task for initializing the CodeQL analysis environment in an Azure DevOps YAML pipeline. It uses the AdvancedSecurity-Codeql-Init@1 task to configure the analysis settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/ghazdo/sprint-228-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nAdvancedSecurity-Codeql-Init@1\n```\n\n----------------------------------------\n\nTITLE: Controlling Patch-Level SDK Selection in global.json (JSON)\nDESCRIPTION: This JSON snippet configures the 'global.json' file to specify a minimum .NET SDK version while allowing automatic use of higher patch versions within that feature version by setting 'rollForward' to 'patch'. Dependency: It must be placed at the root of the .NET project. The 'version' parameter defines the desired feature version (here, 3.1.100); with 'rollForward' as 'patch', the build tooling will use the latest available patch matching the specified major.minor feature version. Output: Build proceeds with the highest installed patch version as per policy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-187-update.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\\n  \\\"sdk\\\": {\\n    \\\"version\\\": \\\"3.1.100\\\",\\n    \\\"rollForward\\\": \\\"patch\\\"\\n  }\\n}\n```\n\n----------------------------------------\n\nTITLE: Using Build.RequestedFor Variable in Azure DevOps Pipelines\nDESCRIPTION: Identifies the user for whom the build was requested (refer to identity variable details). May contain characters invalid for label formats. It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_20\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.RequestedFor\n```\n\n----------------------------------------\n\nTITLE: Examining OData Query Structure for Azure DevOps Velocity Chart\nDESCRIPTION: This OData query example shows the data structure returned for a Velocity chart configured to display six iterations. The query returns iteration details including names, paths, start and end dates, and completion status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/view-odata-query-analytics-report.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\n{\n  \"@odata.context\": \"https://analytics.dev.azure.com/fabrikam/677da0fb-b067-4f77-b89b-f32c12bb8617/_odata/v4.0-preview/$metadata#Iterations(IterationSK,IterationName,StartDate,EndDate,IsEnded,IterationPath)\",\n  \"value\": [\n    {\n      \"IterationSK\": \"5b25cc74-aeb3-4f13-8084-1e899d7383b5\",\n      \"IterationName\": \"06_2022\",\n      \"IterationPath\": \"FabrikamProject\\\\CY2022\\\\06_2022\",\n      \"StartDate\": \"2022-06-01T00:00:00-07:00\",\n      \"EndDate\": \"2022-06-30T23:59:59.999-07:00\",\n      \"IsEnded\": false\n    },\n    {\n      \"IterationSK\": \"a9219cb0-21c0-48f4-8c88-83d0ae3187db\",\n      \"IterationName\": \"05_2022\",\n      \"IterationPath\": \"FabrikamProject\\\\CY2022\\\\05_2022\",\n      \"StartDate\": \"2022-05-01T00:00:00-07:00\",\n      \"EndDate\": \"2022-05-31T23:59:59.999-07:00\",\n      \"IsEnded\": true\n    },\n    {\n      \"IterationSK\": \"8668264f-465d-4d69-b2b5-f5de742447d4\",\n      \"IterationName\": \"04_2022\",\n      \"IterationPath\": \"FabrikamProject\\\\CY2022\\\\04_2022\",\n      \"StartDate\": \"2022-04-01T00:00:00-07:00\",\n      \"EndDate\": \"2022-04-30T23:59:59.999-07:00\",\n      \"IsEnded\": true\n    },\n    {\n      \"IterationSK\": \"4933928f-3e08-4cf9-901a-13cc32201944\",\n      \"IterationName\": \"03_2022\",\n      \"IterationPath\": \"FabrikamProject\\\\CY2022\\\\03_2022\",\n      \"StartDate\": \"2022-03-01T00:00:00-08:00\",\n      \"EndDate\": \"2022-03-31T23:59:59.999-07:00\",\n      \"IsEnded\": true\n    },\n    {\n      \"IterationSK\": \"a690f087-bd77-42dc-b5aa-f34f64ed67b3\",\n      \"IterationName\": \"02_2022\",\n      \"IterationPath\": \"FabrikamProject\\\\CY2022\\\\02_2022\",\n      \"StartDate\": \"2022-02-01T00:00:00-08:00\",\n      \"EndDate\": \"2022-02-28T23:59:59.999-08:00\",\n      \"IsEnded\": true\n    },\n    {\n      \"IterationSK\": \"edae3d3e-4357-4bae-9e25-f01719f48bb7\",\n      \"IterationName\": \"01_2022\",\n      \"IterationPath\": \"FabrikamProject\\\\CY2022\\\\01_2022\",\n      \"StartDate\": \"2022-01-01T00:00:00-08:00\",\n      \"EndDate\": \"2022-01-31T23:59:59.999-08:00\",\n      \"IsEnded\": true\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Cleaning Workspace with TFVC Reconcile Command\nDESCRIPTION: Opens the Visual Studio Clean Workspace dialog box to specify local items for deletion or re-download from the server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/reconcile-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Batch\nCODE:\n```\ntf reconcile /clean\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown Documentation\nDESCRIPTION: A markdown include directive that imports the next steps section from a shared include file, providing guidance on actions to take after reading the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-244-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 254 Documentation Components\nDESCRIPTION: Markdown include statements to compose the release notes by pulling in links, updates, and next steps content from separate files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/boards/sprint-254-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-254-update-links](../includes/boards/sprint-254-update-links.md)]\n\n[!INCLUDE [sprint-254-update](../includes/boards/sprint-254-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 240 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links related to the Sprint 240 update for Azure Pipelines using the INCLUDE directive.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-240-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-240-update-links](../includes/pipelines/sprint-240-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Moniker Range Conditional Documentation Block\nDESCRIPTION: Markdown block showing documentation content specific to Azure DevOps versions using moniker range conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/get-started/share-project-vision.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"azure-devops\"  \n\nEach project has a summary page that's useful for sharing information through **README** files. Or, redirect users to a project Wiki. For users who are new to your project, we recommend that you [set up your project summary page](../../organizations/projects/project-vision-status.md). Or, you can [provision a Wiki](../../project/wiki/wiki-create-repo.md). Use these features to share established processes and procedures for your project. \n\n::: moniker-end\n```\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"< azure-devops\"  \nEach project has a summary page that's useful for sharing information through **README files**. For users who are new to your project, we recommend that you [set up your project summary page](../../organizations/projects/project-vision-status.md). Or, you can [provision a Wiki](../../project/wiki/wiki-create-repo.md). Use these features to share established processes and procedures for your project. \n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Board Access Prerequisites Code Block\nDESCRIPTION: Markdown table showing required access levels and permissions for using Azure Boards features in a modern Azure DevOps environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/get-started/plan-track-work.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Access levels** | - To add work items to a board and use all other board features: At least [**Basic** access](../../organizations/security/access-levels.md). <br> - Private project: To view boards, open and modify work items, and add child tasks to a checklist: At least **Stakeholder** access. You can't reorder or reparent a backlog item using drag-and-drop. You can't update a field on a card. <br> - Public project: For full access to all Boards features: At least **Stakeholder** access. |\n| **Permissions** | Member of the **Contributors** or **Project Administrators** group. |\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Version Include Statement\nDESCRIPTION: Include statement for specifying Azure DevOps version compatibility\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/oauth.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-eq-azure-devops](../../../includes/version-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Markdown References for Azure Pipelines Sprint 234 Updates\nDESCRIPTION: This code shows the structure of markdown include directives used to assemble the release notes page for Azure Pipelines Sprint 234. It references separate markdown files containing links, update details, and next steps sections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-234-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-234-update-links](../includes/pipelines/sprint-234-update-links.md)]\n\n[!INCLUDE [sprint-234-update](../includes/pipelines/sprint-234-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Example Pipeline Variable Update\nDESCRIPTION: Example showing how to update a pipeline variable named 'Configuration' with a new value using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/variables.md#2025-04-22_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable update --name Configuration --pipeline-id 12 --secret false --value config.debug --output table\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Version-Specific Note Block\nDESCRIPTION: Moniker-based conditional note block explaining limitations on work item type changes for test-specific items\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/test.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<=azure-devops\"\n> [!NOTE]   \n> The **Change work item type** permission doesn't apply to test-specific work items. Even if you choose this feature from the work item form, changing the work item type is disallowed. \n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Update Details (Markdown)\nDESCRIPTION: Uses a Markdown include directive to insert the content of 'sprint-214-update.md' located in the 'includes/boards/' path. This file likely contains the detailed release notes describing Azure Boards features and updates for Sprint 214.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-214-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-214-update](includes/boards/sprint-214-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Project URL Structure\nDESCRIPTION: Shows the basic URL structure for accessing an Azure DevOps project with organization and project name placeholders.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/create-embed-wit-from-wiki.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization/Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Including sprint-202 update content for General section\nDESCRIPTION: Markdown include directive for general sprint 202 update content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-202-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update](includes/general/sprint-202-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Writing Work Items Scope (`vso.work_write`)\nDESCRIPTION: Grants the ability to read, create, and update work items and queries, update board metadata, read area and iterations paths other work item tracking related metadata, execute queries, and to receive notifications about work item events via service hooks. Depends on `vso.work`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_32\n\nLANGUAGE: text\nCODE:\n```\n`vso.work_write`\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 215 Wiki Update Links using Markdown Directive\nDESCRIPTION: This Markdown directive includes content from the specified file, which likely contains links to the specific feature updates for the Wiki component released in Sprint 215.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/wiki/sprint-215-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update-links](../includes/wiki/sprint-215-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying an Informational Note in Markdown\nDESCRIPTION: This Markdown snippet uses the `[!NOTE]` directive, a common element in Microsoft Docs, to render a visually distinct note block. It informs the reader about the rollout schedule for the features mentioned in the document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-218-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\n> These features will roll out over the next two to three weeks.\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Files\nDESCRIPTION: Example showing how to reference and configure files to be included in an extension package\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/manifest.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"files\": [\n        {\n            \"path\": \"hello-world.html\", \"addressable\": true\n        },\n        {\n            \"path\": \"scripts\", \"addressable\": true\n        },\n        {\n            \"path\": \"images/logo.png\", \"addressable\": true, \"packagePath\": \"/\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Structure for Azure Boards Release Notes\nDESCRIPTION: Markdown structure defining the frontmatter and content organization for Azure Boards Sprint 224 release notes document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-224-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Azure DevOps Release Notes - Azure Boards Sprint 224 Update\ndescription: See the Sprint 224 feature updates for Azure Boards, including next steps.\nauthor: gloridelmorales\nms.author: glmorale\nms.date: 7/11/2023\n---\n\n# Azure Boards - Sprint 224 Update\n\n## Features\n\n[!INCLUDE [sprint-224-update-links](../includes/boards/sprint-224-update-links.md)]\n\n[!INCLUDE [sprint-224-update](../includes/boards/sprint-224-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Accessing Help for Self-Hosted Agent Configuration in Azure DevOps (Bash)\nDESCRIPTION: This command displays help information for the config.sh script, providing details on authentication alternatives and unattended configuration options for self-hosted agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/configure-help-unix.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./config.sh --help\n```\n\n----------------------------------------\n\nTITLE: Logging Project-Level Pipeline Setting Changes - Azure DevOps - JSON\nDESCRIPTION: Illustrates the format of an audit log event emitted when non-retention project-level Azure Pipelines settings are modified. The JSON shows 'ActionId' set to 'Pipelines.ProjectSettings' and includes a descriptive 'Details' field specifying which setting was changed, the previous and new values, and the project context. This is used by internal services that monitor and store audit events. No external dependencies are required, and the JSON log conforms to standard Azure DevOps auditing schemas.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-221-update.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\\n  \\\"ActionId\\\": \\\"Pipelines.ProjectSettings\\\"\\n}\n```\n\nLANGUAGE: JSON\nCODE:\n```\n{\\n  \\\"ActionId\\\": \\\"Pipelines.ProjectSettings\\\",\\n  \\\"Details\\\": \\\"Pipelines setting \\\"statusBadgesArePublic\\\" changed from \\\"False\\\" to \\\"True\\\" in \\\"test\\\" project.\\\"\\n}\n```\n\n----------------------------------------\n\nTITLE: Edit shared Analytics view Permission Reference\nDESCRIPTION: Permission that allows users to create and modify shared Analytics views.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n`AnalyticsViews, Edit`\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps in Markdown\nDESCRIPTION: This snippet includes a markdown file containing next steps information, likely common across multiple release note documents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-219-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Groups via Azure CLI - azurecli\nDESCRIPTION: This command deletes an Azure resource group named 'myapp-rg' using the Azure CLI. It assumes you have previously installed and authenticated the Azure CLI tool, and that the specified resource group exists in your subscription. The primary parameter --name identifies the resource group to delete; execution will prompt for a confirmation (enter 'y' when prompted). This command irreversibly deletes all contained resources without recovering them, so it should be used with caution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/includes/clean-up-resources.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name myapp-rg\n```\n\n----------------------------------------\n\nTITLE: Running GAC Tool Commands for Office 2010 Integration\nDESCRIPTION: Command Prompt commands to register Office interoperability assemblies using the Global Assembly Cache Tool (GACUTIL) for Office 2010.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/office/tfs-office-integration-issues.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nGACUTIL /I C:\\Windows\\assembly\\GAC_MSIL\\Policy.12.0.Microsoft.Office.Interop.Excel\\14.0.0.0__71e9bce111e9429c\\Policy.12.0.Microsoft.Office.Interop.Excel.dll\nGACUTIL /I C:\\Windows\\assembly\\GAC_MSIL\\Policy.12.0.office\\14.0.0.0__71e9bce111e9429c\\Policy.12.0.Office.dll\n```\n\n----------------------------------------\n\nTITLE: Demonstrating AB# Syntax Usage in GitHub\nDESCRIPTION: This snippet shows the syntax for linking work items in GitHub pull requests, commits, and issues using the AB# format. It's used to explain how the linking process currently works and how it will be improved in the upcoming preview.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/boards/sprint-230-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nAB#{ID}\n```\n\n----------------------------------------\n\nTITLE: Importing Modified Process Configuration XML in Azure DevOps\nDESCRIPTION: Example command to import a modified process configuration XML file for a specific project collection and project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-process-configuration.md#2025-04-22_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nwitadmin importprocessconfig /collection:CollectionURL /p:ProjectName /f:\"DirectoryPath\\ProcessConfiguration.xml\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure DevOps Policy Audit Events in Markdown\nDESCRIPTION: A markdown table listing available audit events for Azure DevOps Policies, showing the event actions and their corresponding description messages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n### Policy events\n\n| Action | Description |\n|--------|-------------|\n| `Policy.PolicyConfigCreated` | Created {PolicyTypeDisplayName} policy in project {ResolveProjectId:ProjectId}. |\n| `Policy.PolicyConfigModified` | Modified {PolicyTypeDisplayName} policy in project {ResolveProjectId:ProjectId}. |\n| `Policy.PolicyConfigRemoved` | Removed {PolicyTypeDisplayName} policy in project {ResolveProjectId:ProjectId}. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose v1 in Azure Pipelines (YAML)\nDESCRIPTION: This YAML code snippet defines an Azure Pipeline that sets up Docker Compose v1.29.2 on a Linux agent and then runs a Docker Compose command using the DockerComposeV0 task. The 'bash' step uses 'curl' to download the specific Docker Compose binary, stores it in a temporary directory, and updates file permissions. The following 'DockerCompose@0' task specifies the use of the custom Docker Compose binary to perform a user-defined command on the provided docker-compose.yml file. Dependencies include Azure DevOps Pipelines, access to a Linux build agent, and permission to install tools. Inputs required include paths to the compose binary and configuration file. The pipeline expects to interact with an Azure Container Registry and requires a valid docker-compose.yml file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-240-update.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n    dockerComposePath: /tmp/docker-compose\n\nsteps:\n- bash: |\n    sudo mkdir $(dockerComposePath)\n    sudo curl -SL https://github.com/docker/compose/releases/download/1.29.2/docker-compose-linux-x86_64 -o $(dockerComposePath)/docker-compose\n    sudo chmod 755 $(dockerComposePath)/docker-compose\n  displayName: Download docker-compose\n- task: DockerCompose@0\n  inputs:\n    containerregistrytype: 'Azure Container Registry'\n    dockerComposeFile: $(Build.SourcesDirectory)/DockerComposeV0/docker-compose.yml\n    action: 'Run a Docker Compose command'\n    dockerComposeCommand: 'run'\n    dockerComposePath: $(dockerComposePath)/docker-compose\n\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Filters in Azure DevOps Search\nDESCRIPTION: This snippet illustrates combining multiple search filters using implicit Boolean AND logic in Azure DevOps semantic search. The example `a: Chris t: Bug s: Active` finds all active Bugs assigned to a user named Chris.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/search-box-queries.md#2025-04-22_snippet_6\n\nLANGUAGE: azure-devops-search\nCODE:\n```\na: Chris t: Bug s: Active\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Guidance in Azure DevOps Release Notes - Markdown\nDESCRIPTION: This code snippet imports information about the next steps following the Sprint 187 release, using the [!INCLUDE ...] Markdown directive. It relies on Azure Docs processing to expand the referenced content. There are no direct parameters; the referenced Markdown file must exist and contain next-step instructions. Ensures consistent instructions across documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/Boards/sprint-187-update.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Update Details (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/boards/sprint-245-update.md`), likely containing detailed information about Sprint 245 updates for Azure Boards. It's used within the context of Azure DevOps release notes to present the specific feature updates for Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update](includes/boards/sprint-245-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Feature Links for Sprint 146 Update\nDESCRIPTION: This Markdown directive includes a file containing links relevant to the Azure Boards features introduced in the Azure DevOps Sprint 146 update. This helps organize the release notes by embedding specific content sections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update-links](includes/boards/sprint-146-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Version Control Comparison Block\nDESCRIPTION: Markdown include statements for version comparison content blocks related to Azure DevOps and Visual Studio versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/work-team-explorer.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../includes/version-lt-eq-azure-devops.md)]\n[!INCLUDE [version-vs-gt-eq-2019](../includes/version-vs-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 228 Update Links\nDESCRIPTION: This Markdown directive includes content from the specified file, likely containing links related to the Sprint 228 update features for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-228-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-228-update-links](../includes/pipelines/sprint-228-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring pom.xml for Azure Artifacts Maven Feed\nDESCRIPTION: This XML snippet shows how to configure the pom.xml file to connect to an Azure Artifacts Maven feed. It includes repository and distribution management settings with placeholders for organization, project, and feed names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/maven/pom-and-settings.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n  <repositories>\n    <repository>\n      <id>MavenDemo</id>\n      <url>https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1</url>\n      <releases>\n        <enabled>true</enabled>\n      </releases>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </repository>\n  </repositories>\n  <distributionManagement>\n    <repository>\n      <id>MavenDemo</id>\n      <url>https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1</url>\n      <releases>\n        <enabled>true</enabled>\n      </releases>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </repository>\n  </distributionManagement>\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration\nDESCRIPTION: YAML configuration block defining metadata for the Azure DevOps documentation page including title, description, and other relevant properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-customize.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Customize Azure Boards to support Scaled Agile Framework (SAFe®)\ntitleSuffix: Azure Boards\ndescription: Learn how to customize Azure Boards to support specific SAFe® practices.\nms.service: azure-devops-boards\nms.assetid:  \nms.author: chcomley\nauthor: chcomley\nms.topic: tutorial\nmonikerRange: '<= azure-devops'\nms.date: 03/01/2023\n---\n```\n\n----------------------------------------\n\nTITLE: Branch Control Format Example\nDESCRIPTION: Shows the required format for specifying branch names in branch control checks\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/approvals.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nrefs/heads/<branch name>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Navigation Link in Markdown\nDESCRIPTION: Markdown formatted link directing users to Azure DevOps platform with campaign tracking\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/reporting/sprint-149-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Markdown\nDESCRIPTION: This snippet shows how to include version-specific content in the markdown document using a special include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/navigation/filter-basics.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directives for Sprint 157 Documentation\nDESCRIPTION: A series of markdown include directives that pull in content sections for the Sprint 157 documentation including update links, main update content, next steps and signer information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-157-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update-links](../includes/general/sprint-157-update-links.md)]\n\n[!INCLUDE [sprint-157-update](../includes/general/sprint-157-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n\n[!INCLUDE [sprint-157](../includes/signer/sprint-157.md)]\n```\n\n----------------------------------------\n\nTITLE: Managing Symbols Scope (`vso.symbols_manage`)\nDESCRIPTION: Grants the ability to read, write, and manage symbols. Depends on `vso.symbols_write`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_13\n\nLANGUAGE: text\nCODE:\n```\n`vso.symbols_manage`\n```\n\n----------------------------------------\n\nTITLE: Fixing Direct Dependencies by Updating Package Versions in package.json\nDESCRIPTION: An updated package.json file showing the fix for a direct dependency vulnerability. The axios package has been updated from version 0.18.0 to 0.19.2 to address a denial of service vulnerability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"name\": \"my-package\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"axios\": \"0.19.2\",\n    \"eslint\": \"5.16.0\",\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Build Content in Markdown\nDESCRIPTION: Markdown include statement for Azure Pipelines build announcements content from May 2019.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/build-may.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [build-may](../includes/pipelines/build-may.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Boards Update Details using Markdown Directive\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/boards/sprint-217-update.md`), likely containing detailed information about Azure Boards updates for Sprint 217. It's used within the Azure DevOps documentation build system (Microsoft Docs).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-217-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update](includes/boards/sprint-217-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Statement for Sprint 150 Update Links\nDESCRIPTION: Markdown include directive to embed sprint 150 update links from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-150-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-150-update-links](../includes/general/sprint-150-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Value Streams to Azure Boards Tags/Value Area in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Value Streams' to Azure Boards 'Tags' or the 'Value Area' field, similar to how Budgets are tracked.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_29\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Value Streams\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Tags, Value Area**](safe-concepts.md#tags). You can use tags or the Value Area field to track work associated with a specific budget or value stream. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Cloud Process Navigation Instructions\nDESCRIPTION: Markdown instructions for accessing Process settings in Azure DevOps cloud version. Shows the navigation path through Organization settings to reach the Process page.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/open-process-admin-context-ts-plus-2020.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Choose the Azure DevOps logo to open **Projects**. Then choose **Organization settings**.\n\n2. Then, choose **Process**.\n```\n\n----------------------------------------\n\nTITLE: Comparing Files in a Folder with Visual Format\nDESCRIPTION: Command to display all files that have been changed in the 'src' folder using the visual format, which opens an external difference application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf difference src /format:visual\n```\n\n----------------------------------------\n\nTITLE: Defining View Analytics Permission Token in Azure DevOps\nDESCRIPTION: Specifies the security token for the 'View analytics' permission in Azure DevOps. This permission allows access to data from the Analytics service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\nAnalyticsViews, Read\n```\n\n----------------------------------------\n\nTITLE: Displaying Default User and Group Role Assignments Table in Markdown\nDESCRIPTION: This code snippet uses Markdown syntax to create a table showing default user and group role assignments for environments in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/policies/permissions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Group | Role |\n|-|-|\n| [*project name*]\\Contributors | Creator (project-level) Reader (object-level) |\n| [*project name*]\\Project Administrators | Creator |\n| [*project name*]\\Project Valid Users | Reader |\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 153 Update Links in Markdown\nDESCRIPTION: Markdown include directive for Sprint 153 update links documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-153-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-153-update-links](../includes/general/sprint-153-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Tab Control for Epics in Initiative Work Item Type\nDESCRIPTION: XML configuration for the Tab control that displays child Epic items linked to an Initiative work item. This defines the hierarchy relationship and what columns appear in the links control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-portfolio-backlogs.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<Tab Label=\"Epics\">\n<Control Type=\"LinksControl\" Name=\"Hierarchy\">\n   <LinksControlOptions>\n   <WorkItemLinkFilters FilterType=\"include\">\n   <Filter LinkType=\"System.LinkTypes.Hierarchy\" />\n   </WorkItemLinkFilters>\n   <WorkItemTypeFilters FilterType=\"include\">\n      <Filter WorkItemType=\"Epic\" />\n   </WorkItemTypeFilters>\n      <ExternalLinkFilters FilterType=\"excludeAll\" />\n      <LinkColumns>\n         <LinkColumn RefName=\"System.ID\" />\n         <LinkColumn RefName=\"System.Title\" />\n         <LinkColumn RefName=\"System.AssignedTo\" />\n         <LinkColumn RefName=\"System.State\" />\n         <LinkColumn LinkAttribute=\"System.Links.Comment\" />\n         </LinkColumns>\n   </LinksControlOptions>\n</Control>\n</Tab>\n```\n\n----------------------------------------\n\nTITLE: TestResultsDaily Entity Properties Table\nDESCRIPTION: Markdown table defining the properties, data types, and descriptions for the TestResultsDaily entity set. Includes metrics like test counts, durations, and result statuses.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n|**Display name** | **Name** | **Data type** | **Description** | \n|-----------------|--------------------|---------------|--------------------------------------|\n|                 |`AnalyticsUpdatedDate` | DateTime | Watermark that indicates the last time the Analytics data was updated.  |\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Resource Tag Filters in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure a pipeline to filter resources and triggers based on tags. It shows how tags can be specified both for resolving the default version of a CI pipeline resource and for defining triggering conditions in a CD pipeline. Prerequisites include familiarity with Azure DevOps YAML pipelines and project resources. The 'tags' list in both resource and trigger sections allow fine-grained control: only pipelines with the specified tags (all conditions must be met, logical AND) are eligible for resolution or execution, enabling more granular automation based on your CI/CD process. Inputs include pipeline names, projects, branches, and tag lists, while output is the conditional execution of the pipeline based on tag presence.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-171-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: MyCIAlias\n    project: Fabrikam\n    source: Farbrikam-CI\n    branch: master\n    tags:              ### This filter is used for resolving default version\n    - Production       ### Tags are AND'ed\n    trigger:\n      tags:            ### This filter is used for triggering the pipeline run\n      - Production     ### Tags are AND'ed\n      - Signed\n```\n\n----------------------------------------\n\nTITLE: Querying User Stories with Related Links in Power BI\nDESCRIPTION: This Power BI query retrieves User Stories and their related User Stories using the Related link type. It filters for non-closed User Stories within a specific Area Path and expands the Links entity to include details of the related User Stories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-directlinks.md#2025-04-22_snippet_2\n\nLANGUAGE: Power BI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'User Story' \"\n            &\"and State ne 'Closed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,AreaSK \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath), \"\n                &\"Links( \"\n                    &\"$filter=LinkTypeName eq 'Related' \"\n                        &\"and TargetWorkItem/WorkItemType eq 'User Story'; \"\n                    &\"$select=LinkTypeName; \"\n                    &\"$expand=TargetWorkItem($select=WorkItemType,WorkItemId,Title,State) \"\n                &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 205 Update Links in Azure Boards Documentation\nDESCRIPTION: Markdown include directive that references external content for Sprint 205 update links in the Azure Boards documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-205-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-205-update-links](../includes/boards/sprint-205-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding Initiative Work Item Color to ProcessConfiguration.xml\nDESCRIPTION: XML configuration that defines the color scheme for the Initiative work item type, setting a primary color for list displays and a secondary color for other visual elements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-portfolio-backlogs.md#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<WorkItemColor primary=\"FFCC66FF\" secondary=\"FFF0D1FF\" name=\"Initiative\" />\n```\n\n----------------------------------------\n\nTITLE: Default Dependency Work Item Types\nDESCRIPTION: Default configuration for work item types that participate in dependency tracking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/extensions/dependency-tracker.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  \"Epic\",\n  \"Feature\",\n  \"User Story\",\n  \"Bug\"\n]\n```\n\n----------------------------------------\n\nTITLE: Accessing the Azure DevOps Demo Generator Extractor Feature via URL\nDESCRIPTION: This URL accesses the Azure DevOps Demo Generator web application with the 'enableextractor' query parameter set to 'true'. This specific parameter activates the hidden feature allowing users to build a custom template by extracting artifacts from an existing Azure DevOps project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/demo-gen/build-your-own-template.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://azuredevopsdemogenerator.azurewebsites.net/?enableextractor=true\n```\n\n----------------------------------------\n\nTITLE: Nested Expand Query Response in Azure DevOps Analytics\nDESCRIPTION: Example JSON response from an OData query using nested $expand to show work item details including iteration and project information. Demonstrates the full data structure returned when expanding nested relationships.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_12\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"@odata.context\":\"https://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/$metadata#WorkItems\",\n  \"value\":[\n    {\n      \"WorkItemId\":10000,\n      \"Revision\":3,\n      \"Watermark\":283397,\n      \"Title\":\"Production deployment and testing for Entitlement API v2 and Subscriber database\",\n      \"WorkItemType\":\"Task\",\n      \"ChangedDate\":\"2014-07-10T19:29:58.41Z\",\n      \"CreatedDate\":\"2014-04-19T22:44:58.31Z\",\n      \"State\":\"Completed\",\n      \"Reason\":\"Completed\",\n      \"Priority\":2,\n      \"CompletedWork\":10.0,\n      \"OriginalEstimate\":20.0,\n      \"Count\":1,\n      \"Iteration\":{\n        \"IterationId\":\"7a2c246e-fc62-41af-ad18-62332017bc46\",\n        \"Name\":\"Sprint 55\",\n        \"Number\":13021,\n        \"IterationPath\":\"Fabrikam\\\\Sprints\\\\Sprint 55\",\n        \"StartDate\":\"2013-09-23T00:00:00Z\",\n        \"EndDate\":\"2013-10-11T00:00:00Z\",\n        \"IterationLevel1\":\"Fabrikam\",\n        \"IterationLevel2\":\" Sprints\",\n        \"IterationLevel3\":\"Sprint 55\",\n        \"Level\":2,\n        \"IsDeleted\":false,\n        \"Project\":{\n          \"ProjectId\":\"b924d696-3eae-4116-8443-9a18392d8544\",\n          \"ProjectName\":\"Fabrikam\",\n          \"IsDeleted\":false\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Process Template Version Definition in XML\nDESCRIPTION: Examples showing incorrect and correct ways to specify process template version information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<ProcessTemplate>\n  <metadata>\n    <name>Fabrikam Agile</name>\n    <description>Use this template to support Fabrikam Agile planning methods.</description>\n    <version type=\"ADCC42AB-9882-485E-A3ED-7678F01F66BC\" major=\"7\" minor=\"36\" />\n```\n\nLANGUAGE: XML\nCODE:\n```\n<ProcessTemplate>\n  <metadata>\n    <name>Fabrikam Agile</name>\n    <description>Use this template to support Fabrikam Agile planning methods.</description>\n    <version type=\"7710F7A4-1F19-4054-9FBC-D94A5935221E\" major=\"7\" minor=\"1\" />\n```\n\n----------------------------------------\n\nTITLE: Defining Work Item Color for Custom Work Item Type in Azure DevOps\nDESCRIPTION: XML definition for specifying the primary and secondary colors for a custom work item type (Service App) in the ProcessConfiguration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_10\n\nLANGUAGE: XML\nCODE:\n```\n<WorkItemColor primary=\"FF33CC33\" secondary=\"FFD6F5D6\" name=\"Service App\" />\n```\n\n----------------------------------------\n\nTITLE: Conditional Note Display for Azure DevOps in Markdown\nDESCRIPTION: This snippet demonstrates how to use a moniker range to display a note specifically for Azure DevOps users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-permissions-access-work-tracking.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"azure-devops\"  \n> [!NOTE]  \n> Users added to the **Project-Scoped Users** group can't access Process settings if the **Limit user visibility and collaboration to specific projects** preview feature is enabled for the organization. For more information including important security-related callouts, see [Manage your organization, Limit  user visibility for projects and more](../../user-guide/manage-organization-collection.md#project-scoped-user-group). \n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Organization URL (Admin is Not Member)\nDESCRIPTION: Specifies the URL format for an Azure DevOps Administrator, who is *not* a member of the target organization, to access the organization. This action typically presents an error page with an option to claim ownership. Replace `{yourorganization}` with the actual organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/resolve-orphaned-organization.md#2025-04-22_snippet_1\n\nLANGUAGE: url\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 157 Update Content in Markdown\nDESCRIPTION: Include directive for main Azure Pipelines Sprint 157 update content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-157-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update](../includes/pipelines/sprint-157-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 203 Feature Links in Markdown\nDESCRIPTION: This Azure Docs markdown directive includes content from the specified file ('../includes/boards/sprint-203-update-links.md'). This included file typically contains markdown links pointing to detailed descriptions of the features released in the Azure Boards Sprint 203 update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-203-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-203-update-links](../includes/boards/sprint-203-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including a Template in Azure Pipelines YAML\nDESCRIPTION: Shows how to include a template in an Azure Pipelines YAML file. This snippet demonstrates the syntax for including a template, which can be validated and edited using the YAML editor.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-214-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n  - template: mytemplate.yml\n```\n\n----------------------------------------\n\nTITLE: TFVC Documentation Template Includes\nDESCRIPTION: Include statements for version-specific template content used in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/view-manage-past-versions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n[!INCLUDE [version-vs-gt-eq-2019.md](../../includes/version-vs-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 192 Update Links in Markdown Document\nDESCRIPTION: Markdown include directive that pulls in the Sprint 192 update links from an external file located in the includes/repos directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/repos/sprint-192-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-192-update-links](../includes/repos/sprint-192-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Build.Clean Variable Options in Azure DevOps Pipelines\nDESCRIPTION: Defines the possible values for the Build.Clean variable that can be set on the Variables tab to modify how the Clean switch behaves. The options control which directories get deleted during the build process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/build-clean-variable.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nBuild.Clean: all\n```\n\nLANGUAGE: yaml\nCODE:\n```\nBuild.Clean: source\n```\n\nLANGUAGE: yaml\nCODE:\n```\nBuild.Clean: binary\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Navigation Link for Package Usage Stats in Azure DevOps\nDESCRIPTION: A markdown link that navigates to the package usage statistics section within a document. This is likely part of a table of contents or navigation component that would be included in larger documentation pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/artifacts/sprint-146-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Package usage stats](#package-usage-stats)\n```\n\n----------------------------------------\n\nTITLE: Including Modular Documentation with Markdown - Markdown\nDESCRIPTION: This snippet demonstrates how to use Markdown include syntax to modularize documentation by referencing external content files or macros. The dependencies are the referenced .md files, and the environment must support the [!INCLUDE] directive (commonly supported by doc generation tools like DocFX). Key parameters are the file paths within the parentheses. The output is expanded inline content from the specified includes, making documentation easier to maintain.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/pipelines/sprint-166-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-166-update-links](../includes/pipelines/sprint-166-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-166-update](../includes/pipelines/sprint-166-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [signer](../includes/signer/signer.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: Markdown include directive that pulls in the next steps section for users after reading the Azure Pipelines Sprint 192 update notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-192-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 206 Update Links for Azure Boards (Markdown)\nDESCRIPTION: Uses a Markdown include directive, specific to the documentation system (likely DocFX), to insert links related to the Sprint 206 updates for Azure Boards from a separate file. This pattern keeps release notes modular.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-206-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-206-update-links](includes/boards/sprint-206-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Default Permissions for Delivery Plans in Azure DevOps\nDESCRIPTION: This code snippet includes a template file that likely contains a table or list of default permissions for delivery plans in Azure DevOps. It's used to display this information consistently across documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-permissions-access-work-tracking.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/boards-plans.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Variables\nDESCRIPTION: Generates names for resources and sets them as environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport RANDOM_ID=\"$(openssl rand -hex 3)\"\nexport RESOURCE_GROUP_NAME=\"myManagedDevOpsPoolGroup$RANDOM_ID\"\nexport REGION=EastUS2\nexport POOL_NAME=\"mdpPool$RANDOM_ID\"\nexport DEV_CENTER_NAME=\"mdpDevCenter$RANDOM_ID\"\nexport DEV_CENTER_PROJECT_NAME=\"mdpDevCenterProject$RANDOM_ID\"\n```\n\nLANGUAGE: bash\nCODE:\n```\necho $RESOURCE_GROUP_NAME\necho $POOL_NAME\necho $DEV_CENTER_NAME\necho $DEV_CENTER_PROJECT_NAME\necho $REGION\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure DevOps Server Connection Parameters in Power BI\nDESCRIPTION: This code snippet demonstrates how to specify the Collection URL and Team Project name when connecting to an on-premises Azure DevOps Server instance in Power BI. It includes important notes about distinguishing between team and project names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/connect-analytics-view.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- **Collection URL**: Enter the URL where your Azure DevOps Server instance is hosted. An example URL is `http://fabrikam-server/AzureDevOpsServer/fabrikam-collection`.\n- **Team project**: Enter only the project name. For example, use *Fabrikam-Fiber* if the URL of your Azure DevOps Server instance is `http://fabrikam-server/AzureDevOpsServer/fabrikam-collection/Fabrikam-Fiber`.\n```\n\n----------------------------------------\n\nTITLE: Setting Azure DevOps API Version Parameter\nDESCRIPTION: Specifies the API version parameter for Azure DevOps Services REST API calls. Uses preview version 3.0.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version3-preview.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\napi-version = 3.0-preview\n```\n\n----------------------------------------\n\nTITLE: Example of Creating Publisher with Azure DevOps CLI\nDESCRIPTION: This example demonstrates the interactive process of creating a publisher named 'Fabrikam' using the Cross-platform CLI for Azure DevOps. It shows the prompts for publisher name, display name, and description, followed by the operation completion message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/command-line-create-publisher.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nC:\\tfs-cli>tfx extension publisher create \nCopyright Microsoft Corporation\n> Publisher name: Fabrikam\n> Display name: Fabrikam, Inc.\n> Description: Fabrikam's main publisher\n\n=== Completed operation: create publisher ===\n - Name: Fabrikam\n - Display Name: Fabrikam, Inc.\n - Description: Fabrikam's main publisher\n```\n\n----------------------------------------\n\nTITLE: Including Version Control Warning Note\nDESCRIPTION: Markdown snippet that includes a version control warning note using INCLUDE syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/develop-code-manage-pending-changes.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n[!INCLUDE [version-vs-gt-eq-2019](../../includes/version-vs-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Installing Docker CLI Using Task\nDESCRIPTION: This snippet illustrates the use of the new Docker CLI Installer task, which allows installation of a specific version of Docker CLI on the build agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-146-update.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DockerInstaller@0\n  inputs:\n    dockerVersion: '17.09.0-ce'\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: This snippet includes a Markdown file containing next steps for users after the update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/general/sprint-166-update.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Using Build.RequestedForId Variable in Azure DevOps Pipelines\nDESCRIPTION: Provides the ID of the user for whom the build was requested (refer to identity variable details). It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_22\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.RequestedForId\n```\n\n----------------------------------------\n\nTITLE: Using Build.QueuedById Variable in Azure DevOps Pipelines\nDESCRIPTION: Provides the ID of the user who queued the build (refer to identity variable details). It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_11\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.QueuedById\n```\n\n----------------------------------------\n\nTITLE: Full History Output Showing All Commits\nDESCRIPTION: Shows the complete history of the file including all branches and merges when using the --full-history flag. This displays commits that were hidden in the simplified view.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-log-history-simplification.md#2025-04-22_snippet_9\n\nLANGUAGE: Git CLI\nCODE:\n```\n> commit 5d0bb77a24e265dc154654fb3b5be331b53bf977\n    Merge: 6b33d99 fdd4dfd\n        Date:   Mon Feb 15 10:59:34 2016 -0500\n\n        Fixed merge conflict\n\n    commit fdd4dfd816c4efebc5bdb240f49e934e299db581\n        Date:   Mon Feb 15 10:51:06 2016 -0500\n\n        We have added a fruit\n\n    commit 6b33d99b996c430a60c9552b79245d1aa8320339\n        Date:   Mon Feb 15 10:45:33 2016 -0500\n\n        We have added an animal\n\n    commit 206613ccd9a54b055b184c7b6c16f2ece8067e51\n        Date:   Mon Feb 15 10:44:18 2016 -0500\n\n        Initial commit\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Block Include Statement\nDESCRIPTION: Markdown include statement for prerequisites section that specifies project collection valid users group requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/look-up-project-collection-administrators.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites-project-collection-valid-users-group](../../includes/prerequisites-project-collection-valid-users-group.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Link Structure\nDESCRIPTION: A markdown link element that creates an internal navigation reference to the top publisher certification program section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/marketplace/sprint-153-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Top publisher certification program](#top-publisher-certification-program)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 216 Update Details for Azure Boards (Markdown)\nDESCRIPTION: This Markdown directive incorporates content from the specified file (`includes/boards/sprint-216-update.md`). It's used within the documentation to insert the detailed update information for Azure Boards corresponding to Sprint 216.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-216-update](includes/boards/sprint-216-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Checking Status of Working Directory in Git\nDESCRIPTION: Command to check the current status of your Git working directory, showing tracked, untracked, and staged changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ngit status\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Lock Behavior in Azure DevOps YAML Pipelines - YAML\nDESCRIPTION: This YAML snippet sets the 'lockBehavior' property at the top level of an Azure DevOps pipeline, affecting all stages. Using 'lockBehavior: runLatest' ensures only the latest pipeline run proceeds to deploy, canceling older runs. Dependencies include Azure DevOps with locked resources and a YAML pipeline setup. Key parameters are 'lockBehavior', 'stages', and nested job definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-190-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nlockBehavior: runLatest\nstages:\n- stage: A\n  jobs:\n  - job: Job\n    steps:\n    - script: Hey!\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for Release History\nDESCRIPTION: HTML table structure documenting Azure DevOps feature releases and updates, including release dates, feature descriptions, and version compatibility information\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n<tr>\n    <td>Copy and paste query results</td>\n    <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=44911\" data-raw-source=\"[2013.4](https://www.microsoft.com/download/details.aspx?id=44911)\">2013.4</a></td>\n</tr>\n<tr>\n    <td rowspan=\"3\"><a href=\"/previous-versions/azure/devops/2014/sep-23-team-services\" data-raw-source=\"[23 Sep 2014](/previous-versions/azure/devops/2014/sep-23-team-services)\">23 Sep 2014</a></td>\n    <td>Maximizing text area fields</td>\n    <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=44911\" data-raw-source=\"[2013.4](https://www.microsoft.com/download/details.aspx?id=44911)\">2013.4</a></td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Organization URL\nDESCRIPTION: A URL pattern showing how to access an Azure DevOps organization by replacing the placeholder with your organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/manage-policies.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Managing Token Administration Scope (`vso.tokenadministration`)\nDESCRIPTION: Grants the ability to manage (view and revoke) existing tokens to organization administrators. Requires full access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_23\n\nLANGUAGE: text\nCODE:\n```\n`vso.tokenadministration`\n```\n\n----------------------------------------\n\nTITLE: HTTP Error Response for Rate Limit Exceeded\nDESCRIPTION: Example error message returned when a user's requests are blocked due to exceeding resource usage limits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/rate-limits.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nTF400733: The request has been canceled: Request was blocked due to exceeding usage of resource <resource name> in namespace <namespace ID>.\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Documentation Navigation Links in Markdown\nDESCRIPTION: Markdown navigation links for Azure DevOps documentation sections, including group membership rules, picklist customization, work item parameters, mentions, reactions, and report pinning features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/boards/sprint-156-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Read-only and required rules for group membership](#read-only-and-required-rules-for-group-membership)\n- [Customize system picklist values](#customize-system-picklist-values)\n- [New work item URL parameter](#new-work-item-url-parameter)\n- [Mention people, work items and PRs in text fields](#mention-people-work-items-and-prs-in-text-fields)\n- [Reactions on discussion comments](#reactions-on-discussion-comments)\n- [Pin Azure Boards reports to the dashboard](#pin-azure-boards-reports-to-the-dashboard)\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Information in Markdown\nDESCRIPTION: This Markdown include directive pulls in content from a shared file outlining potential next steps, further resources, or related actions for the user after reviewing the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/boards/sprint-233-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Markdown\nDESCRIPTION: This snippet demonstrates how to include version-specific content in a Markdown file using a special include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/custom-rules.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-gt-eq-2019](../../../includes/version-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Unsubscribe Project Example in Slack\nDESCRIPTION: Example command showing how to remove all subscriptions related to any repository in a specific project. Cleans up the channel by removing repositories and their notifications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-slack.md#2025-04-22_snippet_6\n\nLANGUAGE: slash command\nCODE:\n```\n/azrepos unsubscribe all https://dev.azure.com/myorg/myproject\n```\n\n----------------------------------------\n\nTITLE: Defining Injection Points for Azure Pipelines Decorators\nDESCRIPTION: Lists new target identifiers used for Azure Pipelines decorators to specify task injection points. These targets allow injecting tasks before ('pre-task-tasks') or after ('post-task-tasks') other specific tasks within both standard agent jobs ('ms.azure-pipelines-agent-job') and release pipeline agent jobs ('ms.azure-release-pipelines-agent-job'). No external dependencies are required beyond the Azure DevOps extension framework.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-194-update.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n```\nms.azure-pipelines-agent-job.pre-task-tasks\nms.azure-pipelines-agent-job.post-task-tasks\nms.azure-release-pipelines-agent-job.pre-task-tasks\nms.azure-release-pipelines-agent-job.post-task-tasks\n```\n```\n\n----------------------------------------\n\nTITLE: Including Shared Release Note Content in Azure DevOps Docs (Markdown)\nDESCRIPTION: This snippet uses the special [!INCLUDE] Markdown directive to import external content files into the document. It allows Azure DevOps documentation authors to maintain common blocks such as sprint feature links, details, and next steps in separate files for easy reuse. The required dependency is Azure DevOps documentation build system support for the [!INCLUDE] syntax; inputs are the paths to included markdown files, while output is the assembled documentation rendered on Docs content pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-241-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-241-update-links](../includes/ghazdo/sprint-241-update-links.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-241-update](../includes/ghazdo/sprint-241-update.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps YAML Include Statement\nDESCRIPTION: YAML include statement for version control compatibility across Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/triggers.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 210 Update Links in Markdown\nDESCRIPTION: Markdown include statement that pulls in the Sprint 210 update links content from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/general/sprint-210-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-210-update-links](../includes/general/sprint-210-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Repository Forked Event in Azure DevOps\nDESCRIPTION: JSON payload structure for the git.repository.forked event in Azure DevOps. Includes details about the forked repository, source repository, and project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_26\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"publisherId\": \"azure-devops\",\n    \"eventId\": \"git.repository.forked\",\n    \"resource\": {\n        \"repository\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000forked-repository-id\",\n            \"name\": \"forked-repository-name\",\n            \"url\": \"forked-repository-url\",\n            \"project\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n                \"name\": \"project-name\"\n            },\n            \"sourceRepository\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000source-repository-id\",\n                \"name\": \"source-repository-name\",\n                \"url\": \"source-repository-url\"\n            }\n        }\n    },\n    \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using witadmin to Set syncnamechanges for Identity Fields\nDESCRIPTION: Command to fix VS402841 validation errors by setting the syncnamechanges attribute to true for identity fields using the witadmin changefield command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-validate.md#2025-04-22_snippet_6\n\nLANGUAGE: cmdline\nCODE:\n```\nwitadmin changefield /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:fieldname /syncnamechanges:true\n```\n\n----------------------------------------\n\nTITLE: Conditionally Setting Pipeline Pool with iif Function in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates using the 'iif' expression function to dynamically assign a value to the 'poolToUse' variable. If the build reason is 'PullRequest', the 'Azure Pipelines' pool is selected; otherwise, the 'ManagedDevOpsPool' is used. This variable is then referenced in the stage's pool definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-248-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\nvariables:\n  poolToUse: ${{ iif(eq(variables['Build.Reason'], 'PullRequest'), 'Azure Pipelines', 'ManagedDevOpsPool')}}\n\nstages:\n- stage: build\n  pool: ${{variables.poolToUse}}\n  jobs:\n  - job:\n    steps:\n    - task: DotNetCoreCLI@2\n      inputs:\n        command: 'build'\n```\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 236 Update Content in Markdown\nDESCRIPTION: This code snippet includes external markdown content that contains the detailed feature updates for Sprint 236 of Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-236-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-236-update](../includes/pipelines/sprint-236-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Feedback Instructions in HTML\nDESCRIPTION: This HTML snippet provides instructions for users to give feedback on the Azure DevOps features. It includes a heading, a paragraph of text, and an image showing how to make a suggestion. It also mentions Stack Overflow as a resource for getting questions answered.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<h2>How to provide feedback</h2>\n\n<p>We would love to hear what you think about these features. Report any problems or suggest a feature through <a href=\"https://developercommunity.visualstudio.com/spaces/21/index.html\">Developer Community</a>.</p>\n\n<blockquote>\n<p><img src=\"media/help-make-a-suggestion.png\" alt=\"Make a suggestion\"></p>\n</blockquote>\n\n<p>You can also get advice and your questions answered by the community on <a href=\"https://stackoverflow.com/questions/tagged/azure-devops\">Stack Overflow</a>.</p>\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Azure DevOps Collection URL\nDESCRIPTION: Creates an environment variable for the Azure DevOps collection URL which will be used by the application to connect to your Azure DevOps organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nsetx COLLECTIONURL \"https://dev.azure.com/<your account>\"\n```\n\n----------------------------------------\n\nTITLE: Including Test Plans Sprint 251 Update Details (Markdown)\nDESCRIPTION: This Markdown snippet uses the `[!INCLUDE ...]` directive to embed the detailed content about Test Plans updates for Sprint 251 from the specified include file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update](includes/testplans/sprint-251-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Navigation Links for Azure DevOps Wiki\nDESCRIPTION: Markdown navigation links for internal page sections referencing rich code editing and work item embedding functionality in Azure DevOps wiki pages\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-154-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Rich editing for code wiki pages](#rich-editing-for-code-wiki-pages)\n- [Create and embed work items from a wiki page](#create-and-embed-work-items-from-a-wiki-page)\n```\n\n----------------------------------------\n\nTITLE: Properties of TestResults Entity in Azure DevOps\nDESCRIPTION: This table defines the properties available for the TestResults entity set in Azure DevOps Analytics, including data types and descriptions. The surrogate key is TestResultSK.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n|**Display name** | **Name** | **Data type** | **Description** | \n|-----------------|--------------------|---------------|--------------------------------------|\n|                 |`AnalyticsUpdatedDate` | DateTime | Watermark that indicates the last time the Analytics data was updated.  |  \n|**Completed Date** | `CompletedDate` | DateTime | The date-time when the test result completed execution.  | \n|**Duration Seconds** | `DurationSeconds` | Decimal | The number of seconds it took for the test to execute. | \n|**Is Flaky** | `IsFlaky` | Boolean | Indicates if the test is marked as flaky (True) or not (False). A flaky Test is a test that intermittently fails for no apparent reason, such as a change to the code or test.**** For more information, see [Manage flaky tests](../../pipelines/test/flaky-test-management.md).  | \n|**Release Id**   | `ReleaseId` | Int32 | The number assigned to the release associated with the test result.   |  \n|**Release Environment Id** | `ReleaseEnvironmentId` | Int32 | The number assigned to the release environment associated with the test result.   |  \n|**Release Pipeline Id** | `ReleasePipelineId` | Int32 | The number assigned to the release pipeline associated with the test result.    |  \n|**Release Stage Id** | `ReleaseStageId` | Int32 | The number assigned to the release stage associated with the test result.   |   \n|**Started Date** | `StartedDate`  | DateTime |The date-time when the test result started execution.  |    \n|**Test Result Id** | `TestResultId` | Int32 | The number assigned to a test result.  |   \n|**Test Run Id** | `TestRunId` | Int32 | The number assigned to a test run.  |   \n|**Test Run Type** | `TestRunType` | Enumerated | Indicates if it's a manual or automated test type. Valid values are listed as follows for [TestRunType](#testruntype-enumerated-type-members). |     \n|**Test Outcome** | `Outcome` | Enumerated | The  test run outcome. There are 15 possible outcomes for a test result: Aborted, Blocked, Error, Failed, Inconclusive, In progress, None, Not applicable, Not executed, Not impacted, Passed, Paused, Timeout, Unspecified, and Warning. Valid values are listed as follows for [TestOutcome](#testoutcome-enumerated-type-members).   |     \n|**Workflow** | `Workflow` | Enumerated  | The pipeline workflow type. Valid values are listed as follows for [SourceWorkflow](#sourceworkflow-enumerated-type-members).   | \n```\n\n----------------------------------------\n\nTITLE: Using Literal Values in Azure Pipeline Expressions\nDESCRIPTION: Example showing how to use boolean, number, string, and version literals in Azure Pipeline expressions when defining variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n# Examples\nvariables:\n  someBoolean: ${{ true }} # case insensitive, so True or TRUE also works\n  someNumber: ${{ -1.2 }}\n  someString: ${{ 'a b c' }}\n  someVersion: ${{ 1.2.3 }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipelines Agent VM Extension for Service Principal Authentication – JSON\nDESCRIPTION: Illustrates the JSON configuration for the Azure Pipelines agent VM extension to use a Service Principal when registering with Azure DevOps. Placeholders are provided for relevant Service Principal parameters (clientId, clientSecret, tenantId) which should be supplied via ARM template parameters. Dependencies include an Azure VM and ARM template deployment capability. This configuration allows the agent to authenticate securely without a PAT, compatible with latest Azure agent extension updates. Sensitive information must be handled in 'protectedSettings'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-227-update.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"settings\": {\n    \"userServicePrincipal\": true     \n  },\n  \"protectedSettings\": {\n    \"clientId\": \"[parameters('clientId')]\",      \n    \"clientSecret\": \"[parameters('clientSecret')]\",      \n    \"tenantId\": \"[parameters('tenantId')]\"      \n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Video Embed in Markdown for Azure Documentation\nDESCRIPTION: Markdown syntax for embedding a video about Agile at Scale in the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/index.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!VIDEO https://learn-video.azurefd.net/vod/player?id=40ca5566-4875-4611-ba66-3ec22fa0c343]\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML Table of Azure DevOps Release Notes\nDESCRIPTION: This HTML snippet renders a table showing the timeline of features added to Azure DevOps and TFS. It includes columns for the feature name, release date, and version availability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<td></td><td><em>2018.2</em></td>\n</tr>\n<tr>\n    <td>Branch filters in environment triggers</td>\n    <td></td><td><a href=\"/visualstudio/releasenotes/tfs2018-relnotes\" data-raw-source=\"[2018](/visualstudio/releasenotes/tfs2018-relnotes)\">2018</a></td>\n</tr>\n<tr>\n    <td>Improved Deployment Groups UI</td>\n    <td></td><td><a href=\"/visualstudio/releasenotes/tfs2018-relnotes\" data-raw-source=\"[2018](/visualstudio/releasenotes/tfs2018-relnotes)\">2018</a></td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 232 Update Details using Markdown Directive\nDESCRIPTION: This Markdown directive `[!INCLUDE ...]` transcludes the main descriptive content for the Azure DevOps Sprint 232 update from the `../includes/general/sprint-232-update.md` file. This allows the core release note details to be managed separately.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/general/sprint-232-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-232-update](../includes/general/sprint-232-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure SQL Task with AD Authentication\nDESCRIPTION: This snippet illustrates how to use the enhanced Azure SQL task with Azure AD authentication, supporting both Integrated and Password methods, as well as connection string options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-146-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureSqlDatabaseDeployment@1\n  inputs:\n    azureSubscription: '<Azure service connection>'\n    AuthenticationType: 'aadAuthenticationPassword'\n    ConnectionString: '<connection string>'\n```\n\n----------------------------------------\n\nTITLE: PowerShell Task Configuration in Azure Pipelines\nDESCRIPTION: PowerShell task configuration showing the task names PowerShell@2 and AzurePowerShell@5 with progressPreference property set to SilentlyContinue for improved performance when executing PowerShell scripts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-210-update.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"task\": \"PowerShell@2\",\n  \"progressPreference\": \"SilentlyContinue\"\n}\n```\n\n----------------------------------------\n\nTITLE: Including Modular Markdown Content - Markdown\nDESCRIPTION: This snippet demonstrates how to use Markdown's custom include syntax to insert the content from external files into the main documentation. Each line imports content (release links, feature updates, or next steps) from a shared location, enabling reuse and consistency across documentation pages. Requires the Azure DevOps documentation build system that supports '[!INCLUDE[]]' directives and proper relative file paths for includes; inputs are the Markdown include directives, and outputs are the rendered combined content during documentation generation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-222-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update-links](../includes/pipelines/sprint-222-update-links.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update](../includes/pipelines/sprint-222-update.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Using Emoji in Azure DevOps Comments and Wiki Pages\nDESCRIPTION: Shows how to add emoji to pull request comments and wiki pages by surrounding emoji names with colon characters. Also demonstrates how to escape emoji syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n:smile:\n:angry:\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`:smile:` `:)` `:angry:`\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 215 Update Details in Markdown\nDESCRIPTION: Uses a Microsoft Docs specific Markdown include directive to embed the content of 'includes/pipelines/sprint-215-update.md'. This snippet inserts detailed information about the Azure Pipelines updates for Sprint 215.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-215-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update](includes/pipelines/sprint-215-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 147 Update Links in Markdown\nDESCRIPTION: Markdown include statement for Sprint 147 update links related to Azure reporting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/reporting/sprint-147-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-147-update-links](../includes/reporting/sprint-147-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Running Agent Diagnostics Script Azure DevOps Batch\nDESCRIPTION: Runs the agent diagnostics script in a Windows command prompt to gather diagnostics for typical agent issues. Requires access to 'run.cmd' and correct permissions to execute it. The '--diagnostics' flag starts the diagnostic process, outputting results to the console or generated log files for later analysis. Useful in troubleshooting upgrade failures and networking issues in the Azure DevOps agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-166-update.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nrun.cmd --diagnostics\n```\n\n----------------------------------------\n\nTITLE: Configuring Git for SSH authentication with Azure Repos\nDESCRIPTION: This Git configuration entry enables SSH authentication for private Azure Repos Git repositories. It maps the HTTPS URL to the SSH URL format required for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/go-install.md#2025-04-22_snippet_2\n\nLANGUAGE: Git\nCODE:\n```\n[url \"git@ssh.dev.azure.com:v3/<organization>/<project>/<repo>\"]\n\tinsteadOf = https://dev.azure.com/<organization>/<project>/<repo>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 146 Update Links in Markdown\nDESCRIPTION: Markdown include directive for Sprint 146 update links section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-146-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update-links](../includes/general/sprint-146-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Running the DeepSpace Project with Maven Jetty\nDESCRIPTION: A Maven command to run the DeepSpace project using Jetty. This requires Maven to be installed and starts a web server on port 3030 to view the application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-repo-intellij.md#2025-04-22_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\nmvn jetty:run\n```\n\n----------------------------------------\n\nTITLE: TFVC Label Name Restrictions\nDESCRIPTION: Defines length and special character restrictions for Team Foundation Version Control (TFVC) label names. Labels must be under 64 Unicode characters and cannot contain certain special characters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/naming-restrictions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Restriction type |Restriction |\n|---------|----------|\n|Length    |Must not contain more than 64 Unicode characters.  |\n|Special characters | - Can't end with a space `( )` or period `.`.<br>- Must not contain the following printable characters: `\\ / : * ? \" < > ; @ |`. |\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Secret Scanning\nDESCRIPTION: Table structure defining the format for documenting secret scanning pattern details including provider, token name, user settings, push protection, and validity checking information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-secret-scan-patterns.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Section  | Explanation  |\n|---|---|\n|  Provider | The name of the token provider. |\n| Token name | The type of token discovered by Advanced Security secret scanning. |\n| User | A token for which leaks are reported to users post-push. Applies to all repositories where Advanced Security is enabled |\n| Push protection | A token for which leaks are reported to users on push. Applies to all repositories where secret push protection enabled. |\n| Validity | Tokens for which Advanced Security attempts to perform a validity check. |\n```\n\n----------------------------------------\n\nTITLE: Displaying Updated Azure DevOps Widgets\nDESCRIPTION: This snippet demonstrates the markdown syntax for embedding an image of updated Azure DevOps widgets that require a team context. It shows how these widgets can be configured for use in Project Dashboards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/reporting/sprint-162-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Updated Azure DevOps widgets that require a team context.](../../media/162_06.png)\n```\n\n----------------------------------------\n\nTITLE: Including Modular Documentation Fragments - Markdown - English\nDESCRIPTION: This snippet demonstrates the use of the [!INCLUDE] directive in Azure DevOps documentation to dynamically pull in content from shared Markdown partials. This approach helps ensure consistency, easy maintenance, and reusability of repetitive documentation blocks such as update links, feature lists, and next steps. It requires Azure DevOps Docs build system support and the existence of referenced include files; the content of each include is replaced inline during documentation rendering.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/artifacts/sprint-183-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-183-update-links](../includes/artifacts/sprint-183-update-links.md)]\n\n[!INCLUDE [sprint-183-update](../includes/artifacts/sprint-183-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 157 Update Links in Markdown\nDESCRIPTION: Markdown include directive for Sprint 157 update links section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-157-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update-links](../includes/boards/sprint-157-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Documentation Checklist Markdown\nDESCRIPTION: Markdown checklist syntax for SAFe implementation topics covered in the document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n>[!div class=\"checklist\"]  \n> * The Scaled Agile Framework®\n> * Essential SAFe®\n> * Portfolio SAFe®\n> * Large Solution SAFe®\n> * Quick reference mapping\n> * Azure Boards implementation of SAFe®\n```\n\n----------------------------------------\n\nTITLE: Accessing Team Settings in Azure DevOps\nDESCRIPTION: Instructions for accessing team settings to configure the board and general team settings in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/manage-teams.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n2. Choose **Team settings** :::image type=\"icon\" source=\"../../media/icons/blue-gear.png\" border=\"false\"::: to configure the board and set general team settings.  \n\n   :::image type=\"content\" source=\"media/general-board-settings-cloud.png\" alt-text=\"Screenshot of gear icon selection for general board settings.\":::\n```\n\n----------------------------------------\n\nTITLE: Implementing NOTSAMEAS Rule for Work Item Field in XML\nDESCRIPTION: This XML snippet demonstrates how to use the NOTSAMEAS element to prevent a field from being assigned the same value as another field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_9\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"MyCorp.Status\" name=\"Status\" type=\"String\">\n    <NOTSAMEAS field=\"MyCorp.SubStatus\" /> \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Including Markdown File Components\nDESCRIPTION: Markdown include statements that reference external content files containing Sprint 251 update details and navigation links.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/ghazdo/sprint-251-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update-links](../includes/ghazdo/sprint-251-update-links.md)]\n\n[!INCLUDE [sprint-251-update](../includes/ghazdo/sprint-251-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Simple Configure Command Example\nDESCRIPTION: A basic example of the 'tf configure' command that displays the Source Control Settings dialog box for the current workspace at 'c:\\projects'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/configure-command.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf configure\n```\n\n----------------------------------------\n\nTITLE: Warning Block for Azure DevOps Limited Visibility Feature Limitations\nDESCRIPTION: A markdown warning block that describes three key limitations of the limited visibility preview feature in Azure DevOps, including REST API access bypass, user selection restrictions, and guest user search limitations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/project-scoped-users-warning.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!WARNING]   \n> Consider the following limitations when using this preview feature:\n> - The limited visibility features described in this section apply only to interactions through the web portal. With the REST APIs or `azure devops` CLI commands, project members can access the restricted data.\n> - Users in the limited group can only select users who are explicitly added to Azure DevOps and not users who have access through Microsoft Entra group membership.\n> - Guest users who are members in the limited group with default access in Microsoft Entra ID, can't search for users with the people picker.\n```\n\n----------------------------------------\n\nTITLE: Allowing Administrators to Create Release Branches\nDESCRIPTION: Grants CreateBranch permission to project administrators for the releases/ folder to manage release branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-permission-command.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ntf git permission /allow:CreateBranch \n                  /group:\"[FabrikamProject]\\Project Administrators\" \n                  /collection:https://dev.azure.com/fabrikam-fiber/ \n                  /teamproject:FabrikamProject \n                  /repository:FabrikamRepo \n                  /branch:releases\n```\n\n----------------------------------------\n\nTITLE: Pushing Code to Azure Repos\nDESCRIPTION: Process of pushing local Xcode project code to Azure Repos using the Source Control menu and specifying the target branch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/share-your-code-in-git-xcode.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Referencing RunFromZip Legacy Configuration\nDESCRIPTION: Legacy command reference for the RunFromZip deployment method, which was the previous name for RunFromPackage functionality in Azure App Service deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-142-update.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nRunFromZip\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 224 Update Links for Azure Repos\nDESCRIPTION: This directive includes content from a shared file containing links related to the Sprint 224 updates specifically for Azure Repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-224-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-224-update-links](includes/repos/sprint-224-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Pass Rate Trend for Named Pipeline in Power BI\nDESCRIPTION: This Power BI query retrieves pipeline run data for a specific pipeline, calculates pass rates, and groups results by date. It filters out canceled runs and orders results by completion date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-pass-rate-trend.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerBI\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and CanceledCount ne 1 \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(CompletedOn/Date), \"\n                &\"aggregate \"\n                &\"($count as TotalCount, \"\n            &\"SucceededCount with sum as SucceededCount , \"\n                &\"FailedCount with sum as FailedCount, \"\n            &\"PartiallySucceededCount with sum as PartiallySucceededCount)) \"\n        &\"/compute( \"\n    &\"SucceededCount mul 100.0 div TotalCount as PassRate, \"\n    &\"FailedCount mul 100.0 div TotalCount as FailRate, \"\n    &\"PartiallySucceededCount mul 100.0 div TotalCount as PartiallySuccessfulRate) \"\n    &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Using Build.BinariesDirectory Variable in Azure DevOps Pipelines\nDESCRIPTION: Specifies the local path on the agent usable as an output folder for compiled binaries (e.g., c:\\agent_work\\1\\b). Cleaning this directory might need explicit configuration for self-hosted agents. It's agent-scoped, usable as an environment variable or task parameter, but not in build numbers or version control tags. Not available in templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_5\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.BinariesDirectory\n```\n\n----------------------------------------\n\nTITLE: TFVC Workspace Name Restrictions\nDESCRIPTION: Details the naming requirements for TFVC workspaces, which are client-side copies of files and folders. Names must follow length limits and character restrictions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/naming-restrictions.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n|Restriction type |Restriction |\n|---------|----------|\n|Length    |Must not contain more than 64 Unicode characters.  |\n|Special characters | - Must not end with a space `( )`.<br/>- Must not contain the following printable characters: `\\ / : * ? \" < >  ;` &#124;. |\n```\n\n----------------------------------------\n\nTITLE: Disabling Azure DevOps Extension Example\nDESCRIPTION: This example shows how to disable the 'Timetracker' extension from the '7pace' publisher and display the result in table format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension disable --extension-name Timetracker --publisher-name 7pace --output table\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 206 Update Links for Azure Pipelines (Markdown)\nDESCRIPTION: Uses a Markdown include directive, specific to the documentation system (likely DocFX), to insert links related to the Sprint 206 updates for Azure Pipelines from a separate file. This promotes content reuse for release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-206-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-206-update-links](includes/pipelines/sprint-206-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: OAuth Callback URL Example\nDESCRIPTION: Concrete example of an OAuth callback URL for the Fabrikam organization in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/connect-to-github.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/fabrikam/_admin/oauth2/callback\n```\n\n----------------------------------------\n\nTITLE: Validating Specific Collection with Tenant for Azure DevOps Migration\nDESCRIPTION: Example command to validate the DefaultCollection for the fabrikam tenant in Azure DevOps Services migration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_2\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator validate /collection:http://localhost:8080/DefaultCollection /tenantDomainName:fabrikam.OnMicrosoft.com /region:{region}\n```\n\n----------------------------------------\n\nTITLE: TFVC File Checkout Command\nDESCRIPTION: Command to check out a file for editing using the tf command-line utility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/remove-access-version-control-files.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ntf checkout myfile.cs\n```\n\n----------------------------------------\n\nTITLE: Filtering WorkItemLinks with Project Constraints\nDESCRIPTION: OData query that filters WorkItemLinks to ensure both the link and its target work item exist in the same project, demonstrating proper project access control in expanded entities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_4\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItemLinks?\n  $filter=ProjectSK eq {projectSK} and TargetWorkItem/ProjectSK eq {projectSK}\n  &$select=LinkTypeReferenceName, SourceWorkItemId, TargetWorkItemId\n  &$expand=TargetWorkItem($select=WorkItemId, Title)\n```\n\n----------------------------------------\n\nTITLE: Mounting Container Volumes Read-Only in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet configures an Azure Pipeline to mount certain container volumes as read-only for increased security. The mountReadOnly field accepts keys for various pre-defined mounts (externals, tasks, tools, work), each set to true or false to specify if it should be mounted read-only. Prerequisites include an Azure DevOps project using container-based jobs and access to a compatible agent pool. Inputs are keys (externals, tasks, tools, work) set as booleans; outputs are the resulting container volume access permissions. Note that setting work or other mounts to read-only may restrict the ability of steps to write to these folders.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-174-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nresources:\n  containers:\n    - container: example\n      image: ubuntu:18.04\n      mountReadOnly:\n        externals: true\n        tasks: true\n        tools: true\n        work: false\n```\n\n----------------------------------------\n\nTITLE: Defining Work Item Colors in ProcessConfiguration\nDESCRIPTION: XML configuration for defining primary and secondary colors for custom Work Item Types in ProcessConfiguration. These colors will be used in the UI to visually distinguish these work items on boards and backlogs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_19\n\nLANGUAGE: XML\nCODE:\n```\n<WorkItemColor primary=\"FFF2CB1D\" secondary=\"FFF6F5D2\" name=\"Service Bug\" />  \n<WorkItemColor primary=\"FFFF00FF\" secondary=\"FFFFCCFF\" name=\"Feedback\" />\n```\n\n----------------------------------------\n\nTITLE: TFVC Repository Keyboard Shortcuts Table\nDESCRIPTION: Markdown table listing keyboard shortcuts for TFVC repository management\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/code-shortcuts.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|r|Select repository|\n```\n\n----------------------------------------\n\nTITLE: Accessing Process Settings in Azure DevOps (Markdown)\nDESCRIPTION: This snippet demonstrates how to access the Process settings page in Azure DevOps organization settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/work-item-fields.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Screenshot of Choose Process.](/azure/devops/organizations/settings/work/media/process/open-process-page-s150.png)\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 224 Updates\nDESCRIPTION: This directive includes content from a shared file containing specific updates for Azure Boards introduced in Sprint 224.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-224-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-224-update](includes/boards/sprint-224-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 203 Update Details in Markdown\nDESCRIPTION: This Azure Docs markdown directive embeds the main content describing the features, improvements, and fixes delivered in Sprint 203 for Azure Boards. The actual descriptive text is sourced from the '../includes/boards/sprint-203-update.md' file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-203-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-203-update](../includes/boards/sprint-203-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Applying 'nextstepaction' Style (Markdown Extension)\nDESCRIPTION: This Markdown extension directive applies the CSS class `nextstepaction` to the subsequent element, typically a link. It's used within the Microsoft Docs system to style elements visually, often indicating a primary call to action or the next step for the user.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"] \n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Displaying Moniker-Specific Content in Markdown\nDESCRIPTION: This snippet uses a moniker range to conditionally display content for specific versions of Azure DevOps. It includes instructions and images for connecting to a feed using NuGet.exe.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/nuget/nuget-publish-endpoint.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<=azure-devops\"\n\n1. Select **Artifacts**, and then select your feed from the dropdown menu.\n\n1. Select **Connect to feed**.\n\n    :::image type=\"content\" source=\"../../media/connect-to-feed-azure-devops-newnav.png\" alt-text=\"A screenshot showing how to connect to a feed.\":::\n\n1. Select **NuGet.exe**.\n\n    :::image type=\"content\" source=\"../../media/nuget-connect-feed.png\" alt-text=\"A screenshot the feed's connection type.\":::\n\n1. Follow the instructions in **Project setup** to set up your nuget.config file.\n\n    :::image type=\"content\" source=\"../../media/project-setup.png\" alt-text=\"Project setup\":::\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Azure Boards Work Item Mention Syntax in GitHub\nDESCRIPTION: Demonstrates the syntax for mentioning Azure Boards work items within GitHub pull request descriptions. Using the format AB#{work item ID} creates a clickable hyperlink to the referenced work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/boards/sprint-148-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nAB#{work item ID}\n```\n\n----------------------------------------\n\nTITLE: Version Control Include Statement for Markdown\nDESCRIPTION: Include statement for version control information\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/add-team-administrator.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Artifacts Feature Links for Sprint 146 Update\nDESCRIPTION: This Markdown directive includes a file containing links for the Azure Artifacts features introduced in the Azure DevOps Sprint 146 update. It serves to modularize the release notes documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update-links](includes/artifacts/sprint-146-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including General Feature Details for Sprint 166 (Markdown)\nDESCRIPTION: Uses a Markdown include directive to embed content from 'includes/general/sprint-166-update.md'. This inserts the detailed descriptions of the General features updated in Sprint 166.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-166-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-166-update](includes/general/sprint-166-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Modular Release Notes Content - Markdown\nDESCRIPTION: This snippet uses the Markdown [!INCLUDE] directive to embed external content from other Markdown files, allowing modular documentation composition. No technical dependencies beyond Markdown rendering support are required. The key parameter is the file path provided, and the output merges the referenced content during the documentation build process. This approach is limited to environments/tools that support the [!INCLUDE] syntax, and does not execute any logic at runtime.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-190-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-190-update-links](../includes/pipelines/sprint-190-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-190-update](../includes/pipelines/sprint-190-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Central Canada Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps services in the Central Canada region. Includes both SharePoint (shprod) and Team Foundation Server (tfsprod) instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nshprodcca1ip1\t 40.82.185.225\n\t\t\ntfsprodcca1ip1\t 40.82.190.38\n```\n\n----------------------------------------\n\nTITLE: Disabling Git Submodules in Azure Pipelines (YAML)\nDESCRIPTION: This YAML snippet shows how to disable Git submodule cloning in Azure Pipelines. It uses the 'checkout' key with 'submodules' set to false.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\ncheckout:\n  submodules: false\n```\n\n----------------------------------------\n\nTITLE: Accessing Python Package API Endpoint for Project Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting Python packages in a project scoped feed using the REST API. This supports JSON Patch operations to modify the views array of a package version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_5\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/packages/{packageName}/versions/{packageVersion}?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: Writing User Profile Scope (`vso.profile_write`)\nDESCRIPTION: Grants the ability to write to your profile. Depends on `vso.profile`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_25\n\nLANGUAGE: text\nCODE:\n```\n`vso.profile_write`\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Group Cleanup Command\nDESCRIPTION: Azure CLI command to delete the resource group used for the deployed application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/create-multistage-pipeline.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\naz group delete --name tailspin-space-game-rg\n```\n\n----------------------------------------\n\nTITLE: Empty daysData Configuration\nDESCRIPTION: JSON configuration showing an empty daysData item. This makes no adjustment to the standby agent count specified at the conclusion of the previous day.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Count in Azure DevOps Services (Cloud)\nDESCRIPTION: This example shows an OData query that returns the count of work items in the Fabrikam Fiber project in Azure DevOps Services. It uses the $apply operator with aggregate function to count work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/WorkItems?%20$apply=aggregate($count%20as%20Count)\n```\n\n----------------------------------------\n\nTITLE: Image Differences Note in Markdown\nDESCRIPTION: Markdown note block explaining image differences in Azure DevOps portal versus documentation, including references to different process templates and version information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/image-differences-with-wits.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<a id=\"image-diff\"></a>  \n\n> [!NOTE]\n> The images you see from your web portal might differ from the images you see in this article. These differences result from updates made to your web app, options that you or your administrator enabled, and which process was chosen when creating your project: [Agile](../work-items/guidance/agile-process.md), [Basic](../get-started/plan-track-work.md), [Scrum](../work-items/guidance/scrum-process.md), or [CMMI](../work-items/guidance/cmmi-process.md). The Basic process is available with [Azure DevOps Server 2019 Update 1](https://go.microsoft.com/fwlink/?LinkId=2097609) and later versions.\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Azure Boards Documentation\nDESCRIPTION: This code snippet includes a Markdown file containing the next steps section for the Azure Boards documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/Boards/sprint-178-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Items Owned by Other Teams in Markdown\nDESCRIPTION: This markdown snippet demonstrates how to display items owned by other teams in a backlog view, using an information icon and a tip for adding the Node Name field as a column.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/visibility-across-teams.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nItems that are owned by other teams appear with an information icon,  :::image type=\"icon\" source=\"../../media/icons/info.png\" border=\"false\"::: .  \n\n> [!div class=\"mx-imgBorder\"]  \n> ![Backlog that shows parents and multi-team ownership](../backlogs/media/multi-ownership/management-team-backlog-epics.png)   \n\n> [!TIP]    \n> Add the **Node Name** field as a column to identify the area path/team associated with the work items. \n```\n\n----------------------------------------\n\nTITLE: Using extends keyword in Azure DevOps YAML Pipelines\nDESCRIPTION: Demonstrates how to use the extends keyword in Azure DevOps pipelines to inherit configurations from template files. This enables better organization and reuse of pipeline configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-162-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Use extends keyword in pipelines\n```\n\n----------------------------------------\n\nTITLE: Asia Pacific Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps services in the Asia Pacific region. Includes both SharePoint (shprod) and Team Foundation Server (tfsprod) instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nshprodea1ip1\t 20.189.72.51\n\t\t\ntfsprodea1ip1\t 40.81.25.218\n```\n\n----------------------------------------\n\nTITLE: Structuring a Basic Query with WIQL\nDESCRIPTION: Demonstrates the fundamental structure of a WIQL query, including SELECT (specifying fields to return), FROM (indicating the source, usually 'workitems'), WHERE (defining filter criteria), ORDER BY (sorting results), and ASOF (querying historically). Fields with spaces like 'User Story' or system names like 'System.TeamProject' are enclosed in square brackets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_0\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT\n    [System.Id],\n    [System.AssignedTo],\n    [System.State],\n    [System.Title],\n    [System.Tags]\nFROM workitems\nWHERE\n    [System.TeamProject] = 'Design Agile'\n    AND [System.WorkItemType] = 'User Story'\n    AND [System.State] = 'Active'\nORDER BY [System.ChangedDate] DESC\nASOF '02-11-2020'\n```\n\n----------------------------------------\n\nTITLE: On-premises XML Process Model Documentation\nDESCRIPTION: Markdown structure for on-premises XML process model documentation with version-specific content filtering.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/quick-ref.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<azure-devops\"\n\n### On-premises XML process model\n\n::: moniker-end\n\n::: moniker range=\"< azure-devops\"\n\nYou customize work item types using the On-premises XML process model.\n[...]\n:::\n```\n\n----------------------------------------\n\nTITLE: Displaying Note About Feature Rollout in Markdown\nDESCRIPTION: This snippet uses Markdown syntax to create a note informing users about the gradual rollout of new features over a 2-3 week period.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/nextsteps.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\n> These features will roll out over the next two to three weeks.\n```\n\n----------------------------------------\n\nTITLE: Subscribing to a Specific Repository in Microsoft Teams\nDESCRIPTION: Command syntax for subscribing to a specific repository in Microsoft Teams using the Azure Repos app. Can be used with both Git and TFVC repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-teams.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n@azure repos subscribe [repo url]\n```\n\n----------------------------------------\n\nTITLE: HTML Anchor Tag for Navigation\nDESCRIPTION: This HTML anchor tag creates an internal link target within the document, specifically marking the section related to adding users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/organization-management.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a id=\"add-users\"></a>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 211 Update Content in Markdown\nDESCRIPTION: This snippet includes external content from a file containing the detailed Sprint 211 update information for Azure Boards. It uses the markdown include directive to pull in content from another file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-211-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-211-update](../includes/boards/sprint-211-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Documentation Header Metadata in YAML\nDESCRIPTION: YAML front matter metadata block defining author information and documentation metadata for Azure DevOps Services documentation. Includes author details, topic type, and last updated date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-gt-2022.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.author: chcomley\nauthor: chcomley\nms.topic: include\nms.date: 05/04/2023\n---\n```\n\n----------------------------------------\n\nTITLE: Writing Settings Scope (`vso.settings_write`)\nDESCRIPTION: Grants the ability to create and read settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_10\n\nLANGUAGE: text\nCODE:\n```\n`vso.settings_write`\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 245 Update Links in Markdown\nDESCRIPTION: This Markdown directive includes content from the specified file path (`../includes/testplans/sprint-245-update-links.md`). It's used within the Azure DevOps documentation system (likely DocFX) to insert a reusable block of links related to the Sprint 245 update for Azure Test Plans.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/testplans/sprint-245-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update-links](../includes/testplans/sprint-245-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for Release History\nDESCRIPTION: HTML table markup showing release history entries with dates, feature descriptions, and version compatibility information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_14\n\nLANGUAGE: HTML\nCODE:\n```\n<td></td><td><a href=\"https://go.microsoft.com/fwlink/p/?LinkId=306566\" data-raw-source=\"[2013](https://go.microsoft.com/fwlink/p/?LinkId=306566)\">2013</a></td>\n</tr>\n<tr>\n    <td>Admin panel color change</td>\n    <td></td><td><a href=\"https://go.microsoft.com/fwlink/p/?LinkId=306566\" data-raw-source=\"[2013](https://go.microsoft.com/fwlink/p/?LinkId=306566)\">2013</a></td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 196 Update Links in Markdown\nDESCRIPTION: Markdown include directive that references a file containing links to documentation about Sprint 196 updates for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-196-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-196-update-links](../includes/pipelines/sprint-196-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Difference Command Syntax\nDESCRIPTION: Shows the basic syntax for the TFVC difference command, comparing an item to its latest server version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/difference-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Command-line\nCODE:\n```\ntf diff[erence] itemspec [/version:versionspec] [/type:filetype] \n[/format:format [/ignorespace] [/ignoreeol] [/ignorecase] [/recursive] \n[/options][/noprompt][/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Enabling Diagnostics for an Azure DevOps Organization\nDESCRIPTION: This URL allows users to enable diagnostics for a specific Azure DevOps organization, which is necessary before enabling subscription logging.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/notifications/use-subscription-logging.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{organization}/_notifications?diagnostics=true\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 153 Update Content in Markdown\nDESCRIPTION: Markdown include statement for main Sprint 153 update content file\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-153-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-153-update](../includes/boards/sprint-153-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 211 Update Links in Markdown\nDESCRIPTION: This snippet includes external content from a file containing the Sprint 211 update links for Azure Boards. It uses the markdown include directive to pull in content from another file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-211-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-211-update-links](../includes/boards/sprint-211-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding demands to Azure DevOps pipeline pools\nDESCRIPTION: Example of a YAML schema reference for adding demands to pipeline pools. This is used to specify certain requirements that an agent must meet to run a build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\npool-demands\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Feature Details for Sprint 146 Update\nDESCRIPTION: This Markdown directive includes a file that elaborates on the Azure Pipelines features released in the Azure DevOps Sprint 146 update. It structures the document by pulling in specific feature descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update](includes/pipelines/sprint-146-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Identity Field with ALLOWEXISTINGVALUE in XML\nDESCRIPTION: This XML code demonstrates how to configure an identity field (Assigned To) with ALLOWEXISTINGVALUE to prevent validation errors when team members leave the project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_12\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Assigned To\" refname=\"System.AssignedTo\" type=\"String\" syncnamechanges=\"true\" reportable=\"dimension\">\n      <HELPTEXT>The user who is working on this work item</HELPTEXT>\n      <ALLOWEXISTINGVALUE />\n      <VALIDUSER />\n      <ALLOWEDVALUES expanditems=\"true\" filteritems=\"excludegroups\">\n      <LISTITEM value=\"Active\" />\n      <LISTITEM value=\"[project]\\Contributors\" />\n      </ALLOWEDVALUES>\n      <DEFAULT from=\"field\" field=\"System.CreatedBy\" />\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 215 Wiki Update Details using Markdown Directive\nDESCRIPTION: This Markdown directive incorporates the content from the referenced file, expected to contain the detailed descriptions and explanations of the Wiki feature updates introduced in Sprint 215.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/wiki/sprint-215-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update](../includes/wiki/sprint-215-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 222 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links to Sprint 222 update details for GitHub Advanced Security in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/ghazdo/sprint-222-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update-links](../includes/ghazdo/sprint-222-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Next Steps Action Link in Markdown\nDESCRIPTION: Markdown syntax for creating a next steps action link to Azure DevOps portal\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-147-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Specifying Image Demand in YAML Pipeline\nDESCRIPTION: This YAML snippet shows how to specify an image demand in an Azure Pipelines YAML file. It demonstrates using the 'ImageOverride' demand to request a specific image alias 'ubuntu-20.04-gen2'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-images.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: fabrikam-dev-pool # Name of Managed DevOps Pool\n  demands:\n  - ImageOverride -equals ubuntu-20.04-gen2\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 221 Azure Pipelines Update Details (Markdown)\nDESCRIPTION: A Markdown directive used to embed detailed content about Azure Pipelines updates for Sprint 221 from the specified file (`includes/pipelines/sprint-221-update.md`). Facilitates modular documentation writing by separating detailed sections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-221-update](includes/pipelines/sprint-221-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Wiki URL Example\nDESCRIPTION: Demonstrates a real example of the new URL structure for an Azure DevOps Wiki page titled 'Welcome to Azure DevOps Wiki'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-158-update.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/microsoft/ AzureDevOps/_wiki/wikis/AzureDevOps.wiki/1/Welcome-to-Azure-DevOps-Wiki\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Azure DevOps Documentation Include\nDESCRIPTION: YAML front matter metadata block specifying this file as a documentation topic include file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/basic-process-note.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Markdown\nDESCRIPTION: This snippet demonstrates how to include version-specific content in a Markdown file using a special include statement. It's used to conditionally render content based on the Azure DevOps version being used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/devops-alm-overview.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including General Sprint 222 Update Details (Markdown)\nDESCRIPTION: This directive uses the Microsoft Docs Markdown syntax `[!INCLUDE ...]` to embed the full content of another Markdown file. It specifically includes detailed information about general updates introduced in Sprint 222.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update](includes/general/sprint-222-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Building Gradle Project\nDESCRIPTION: Gradle command to build the project and download dependencies, which will populate the Azure Artifacts feed with copies of upstream packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_10\n\nLANGUAGE: command\nCODE:\n```\ngradle build\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 241 Update Links in Azure DevOps Documentation\nDESCRIPTION: Markdown include directive that pulls in links related to Sprint 241 updates for Azure Pipelines. This directive imports content from a separate file to maintain consistency across documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-241-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-241-update-links](../includes/pipelines/sprint-241-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying an Image with Border (Markdown)\nDESCRIPTION: This snippet uses a Markdown extension `[!div class=\"mx-imgBorder\"]` combined with standard Markdown image syntax `![...]` to display an image with a predefined border style, commonly used for visual emphasis on the Microsoft Docs platform.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"] \n> ![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Anaconda Environment Configuration in VSTS Pipeline\nDESCRIPTION: The Conda Environment task enables creating and managing conda environments for data science workflows. It handles environment activation, dependency installation, and conda path configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/may-30-vsts.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Including Sprint 155 Update Content in Markdown\nDESCRIPTION: This snippet includes the main content of the Sprint 155 update for Azure Repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-155-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update](../includes/repos/sprint-155-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Reusable Release Note Content - Markdown - Markdown\nDESCRIPTION: These snippets use the Azure Docs markdown extension syntax [!INCLUDE [name](path)] to dynamically reference and inject content from other markdown files or partials. Dependencies include Azure DevOps documentation tooling that interprets and expands these includes during site generation. The only parameter is the file path, and no direct inputs or code output is expected except for in-place content expansion during build; as such, these are not executable but are structural documentation patterns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/reporting/sprint-221-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-221-update-links](../includes/reporting/sprint-221-update-links.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-221-update](../includes/reporting/sprint-221-update.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Deleting Field Using witadmin\nDESCRIPTION: Command to delete a field from the collection when type conversion isn't possible. Note that this operation results in data loss.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_16\n\nLANGUAGE: cmdline\nCODE:\n```\nwitadmin deletefield /collection:http://AdventureWorksServer:8080/DefaultCollection /n:TFSfieldReferenceName\n```\n\n----------------------------------------\n\nTITLE: Creating Action Link to Azure DevOps in Markdown\nDESCRIPTION: This snippet uses Markdown syntax to create a styled action link that directs users to the Azure DevOps platform.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/nextsteps.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Including General Feature Links for Sprint 166 (Markdown)\nDESCRIPTION: Uses a Markdown include directive (specific to the documentation platform, likely DocFX) to embed content from the specified file ('includes/general/sprint-166-update-links.md'). This is used to insert links related to the General features updated in Sprint 166.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-166-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-166-update-links](includes/general/sprint-166-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Next Step Action Link (Markdown)\nDESCRIPTION: Markdown snippet using a specific div class ('nextstepaction') often used in Microsoft Docs to style a hyperlink as a prominent call to action. This link directs the user to the Azure DevOps portal.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-177-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!div class=\"nextstepaction\"] \n[Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure DevOps API Version Parameter\nDESCRIPTION: Defines the API version parameter used when making requests to Azure DevOps REST APIs. This uses version 1.0-preview.1, which indicates a preview release of the API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version-preview1.md#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\napi-version = 1.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: Using commit messages to skip CI in Azure Pipelines\nDESCRIPTION: Demonstrates various commit message formats that can be used to tell Azure Pipelines to skip running a pipeline that would normally be triggered by a commit. This works with Azure Repos Git, Bitbucket Cloud, GitHub, and GitHub Enterprise Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-148-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `[skip ci]` or `[ci skip]`\n- `skip-checks: true` or `skip-checks:true`\n- `[skip azurepipelines]` or `[azurepipelines skip]`\n- `[skip azpipelines]` or `[azpipelines skip]`\n- `[skip azp]` or `[azp skip]`\n- `***NO_CI***`\n```\n\n----------------------------------------\n\nTITLE: Visual Studio 2017 WITADMIN Path\nDESCRIPTION: File path for accessing the witadmin tool in Visual Studio 2017 installations. Supports Enterprise, TeamExplorer, and Professional editions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/witadmin-run-tool.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n%programfiles(x86)%\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\n```\n\n----------------------------------------\n\nTITLE: Commented Java Code in ImageService.java\nDESCRIPTION: A code snippet from the ImageService.java file showing Earth implementation commented out, which needs to be fixed to make Earth appear in the application. Uncomment this code to implement the missing Earth functionality.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-repo-intellij.md#2025-04-22_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\n// if (imageMap.containsKey(\"earth\")) {\n//     imageMap.put(\"earth\", \"images/earth.png\"); \n// }\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 146 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links related to the Sprint 146 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-146-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update-links](../includes/boards/sprint-146-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata Frontmatter in Markdown for Azure DevOps Release Notes - YAML\nDESCRIPTION: Defines document metadata such as title, description, author, and date using YAML frontmatter. This section is necessary for Azure DevOps documentation to provide structured data that is used in rendering, indexing, and organizing docs. Required dependencies are the Azure DevOps documentation platform, and the expected format is YAML between delimiter lines. No dynamic input or output is present, and variable values should be updated to match each document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/pipelines/sprint-170-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\\ntitle: Azure DevOps Release Notes - Azure Pipelines Sprint 170 Update\\ndescription: See the Sprint 170 feature updates for Azure Pipelines, including next steps.\\nauthor: sid-ah\\nms.author: simerzou\\nms.date: 05/28/2020\\n---\n```\n\n----------------------------------------\n\nTITLE: Creating a Call-to-Action Button in Markdown\nDESCRIPTION: This snippet shows how to create a call-to-action button in markdown using the 'nextstepaction' div class. It links to the Azure DevOps platform.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-155-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directive\nDESCRIPTION: Markdown directive for including version-specific content related to Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-customize.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including General Update Links (Markdown)\nDESCRIPTION: Uses a Markdown include directive to insert the content of 'sprint-214-update-links.md' located in the 'includes/general/' path. This file likely contains a list of links related to general updates introduced in Sprint 214.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-214-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-214-update-links](includes/general/sprint-214-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: TFVC Branches Command Folder Example\nDESCRIPTION: Demonstrates displaying branch history for an entire folder in TFVC.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branches-command.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nc:\\projects>tf branches $/rel30/math/\n```\n\n----------------------------------------\n\nTITLE: Including Azure Repos Update Links (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/repos/sprint-245-update-links.md`), likely containing links related to Sprint 245 updates for Azure Repos. It's used within the context of Azure DevOps release notes to provide easy navigation to Repo-specific update details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update-links](includes/repos/sprint-245-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Viewing TF Workspace Command Help Using /?\nDESCRIPTION: Shows an alternative method to display the workspace command help documentation using the /? parameter, which produces the same output as the /help parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/help-command-team-foundation-version-control.md#2025-04-22_snippet_4\n\nLANGUAGE: tf\nCODE:\n```\ntf workspace /?\n```\n\n----------------------------------------\n\nTITLE: Moniker Range Conditional Block for Azure DevOps 2020+\nDESCRIPTION: Markdown conditional block that specifies content visibility for Azure DevOps 2020 and later versions using the moniker range syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/overview.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\">= azure-devops-2020\"\n\nThe Analytics service is the reporting platform for Azure DevOps. As described in [What is Analytics?](../powerbi/what-is-analytics.md), it replaces the previous platform based on SQL Server Reporting Services. The Analytics service supports Analytics widgets, [in-context Analytics reports](#work-tracking-analytics), and Analytics views for Power BI reporting. For more information, see [About Analytics views](../powerbi/what-are-analytics-views.md).\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 215 Update Links in Markdown\nDESCRIPTION: Markdown include directive for Sprint 215 update links section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-215-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update-links](../includes/boards/sprint-215-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for Azure DevOps Release Notes\nDESCRIPTION: HTML table structure displaying Azure DevOps release notes with feature names, dates, and corresponding server versions. The table includes entries from multiple release dates in early 2017.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<tr>\n    <td>Updates view shows rebase and force push</td>\n    <td></td><td>2017.2</td>\n</tr>\n<tr>\n    <td>Improved commit filtering</td>\n    <td></td><td>2017.2</td>\n</tr>\n<tr>\n    <td>Maintenance for working directories</td>\n    <td></td><td>2017.2</td>\n</tr>\n<tr>\n    <td>Agent selection improvement</td>\n    <td></td><td>2017.2</td>\n</tr>\n<tr>\n    <td>Run tests using Agent Phases</td>\n    <td></td><td>2017.2</td>\n</tr>\n<tr>\n    <td>Multiple versions of Extension tasks</td>\n    <td></td><td>2017.2</td>\n</tr>\n<tr>\n    <td>Extension management permissions and new email notifications</td>\n    <td></td><td>2017.2</td>\n</tr>\n<tr>\n    <td>Updated Package Management experience</td>\n    <td></td><td>2017.2</td>\n</tr>\n<tr>\n    <td>Support for Azure AD conditional access</td>\n    <td></td><td>N/A</td>\n</tr>\n<tr>\n    <td>Pipelines queue</td>\n    <td></td><td>2017.2</td>\n</tr>\n<tr>\n    <td rowspan=\"17\"><a href=\"/previous-versions/azure/devops/2017/jan-25-team-services\" data-raw-source=\"[25 Jan 2017](/previous-versions/azure/devops/2017/jan-25-team-services)\">25 Jan 2017</a></td>\n    <td>Delivery Plans</td>\n    <td></td><td>2017.2</td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Defining Table Header Row for SAFe® Mapping in Markdown\nDESCRIPTION: This Markdown snippet uses DocFX-style row and column directives (`:::row:::`, `:::column:::`, `:::column-end:::`, `:::row-end:::`) to define the header row for a table mapping SAFe® terms to Azure Boards artifacts. The `span=\"3\"` attribute controls column width distribution for the second column.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      **SAFe® term or artifact**\n   :::column-end:::\n   :::column span=\"3\":::\n      **Azure Boards term or artifact** \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Querying Open Bugs Filtered by Area Path using OData\nDESCRIPTION: This OData query retrieves open bugs filtered by a specific area path. It selects relevant fields and expands related entities like AssignedTo, Iteration, and Area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-openbugs.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n        $filter=WorkItemType eq 'Bug'\n            and StateCategory ne 'Completed'\n            and startswith(Area/AreaPath,'{areapath}')\n        &$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames,AreaSK\n        &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 215 Update Content in Markdown\nDESCRIPTION: Markdown include directive for main Sprint 215 update content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-215-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update](../includes/boards/sprint-215-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Setting PowerShell Module File List\nDESCRIPTION: Defining files to include in the module package\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_19\n\nLANGUAGE: powershell\nCODE:\n```\nFileList = @('./Get-Hello.psm1')\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Azure DevOps Access Requirements\nDESCRIPTION: A structured table defining the access requirements and permissions needed for various operations in Azure DevOps Test Plans, including project access levels and specific permissions for editing work items and creating tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/includes/prerequisites-stakeholder.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirement |\n|--------------|-------------|\n| **Project access** | [Project member](../../organizations/security/add-users-team-project.md). |\n| **Access levels** | To request or provide feedback: At least **Stakeholder** access. |\n| **Permissions** | - To add or modify bugs or other work item types: **Edit work items in this node** permission set to **Allow** under the corresponding **Area Path**. <br> - To add new tags: **Create tag definition** permission set to **Allow**. <br> For more information, see [Set permissions and access for testing](../../organizations/security/set-permissions-access-test.md). |\n```\n\n----------------------------------------\n\nTITLE: Invalid Attribute Example in XML\nDESCRIPTION: Example showing incorrect addition of a custom attribute 'foo' to a WORKITEMTYPE element.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<WORKITEMTYPE name=\"Bug\" refname=\"My.Bug\" foo=\"hello world\">\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps 2020 Prerequisites Code Block\nDESCRIPTION: Markdown table showing required access levels and permissions for using Azure Boards features in Azure DevOps Server 2020.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/get-started/plan-track-work.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Access levels** | - To add work items to a board and use all other board features: At least [**Basic** access](../../organizations/security/access-levels.md). <br> - To view boards, open and modify work items, and add child tasks to a checklist: At least **Stakeholder** access. You can't reorder or reparent a backlog item using drag-and-drop. You can't update a field on a card. |\n| **Permissions** | Member of the **Contributors** or **Project Administrators** group. |\n```\n\n----------------------------------------\n\nTITLE: Witadmin Commands for Importing WIT Definitions in On-premises TFS\nDESCRIPTION: Command line example for using the witadmin tool to import a work item type definition file to an on-premises TFS collection, specifying the server URL, project, and file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-portfolio-backlogs.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nwitadmin importwitd /collection:CollectionURL /p:\"ProjectName\" /f:\"DirectoryPath\\WITDefinitionFile.xml\"\n```\n\n----------------------------------------\n\nTITLE: TreePath Naming Conformance for Nodes - Azure DevOps XML\nDESCRIPTION: Demonstrates improper and corrected usages of Node elements in Classification.xml, specifically with naming constraints. Path names in the 'Name' attribute must not include prohibited characters such as '#'. The corrected snippet removes invalid characters from path names, ensuring compatibility with TreePath restrictions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_19\n\nLANGUAGE: xml\nCODE:\n```\n<Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Iteration\\\" xmlns=\\\"\\\">\\n  <Children>\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint #1\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint #2\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint #3\\\" />\\n  </Children>\\n</Node>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Iteration\\\" xmlns=\\\"\\\">\\n  <Children>\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 1\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 2\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 3\\\" />\\n  </Children>\\n</Node>\n```\n\n----------------------------------------\n\nTITLE: Defining WorkItemColor in Azure DevOps Process Configuration XML\nDESCRIPTION: Snippet showing the syntax for specifying colors for work item types in the process configuration. The primary color is used in list displays, while the secondary color must be specified for validation but is no longer referenced.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_14\n\nLANGUAGE: XML\nCODE:\n```\n<WorkItemColor primary=\"HexColorCode\" secondary=\"HexColorCode\" name=\"witName\" />\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Release Notes\nDESCRIPTION: YAML frontmatter block defining metadata for the release notes page including title, description, author information and date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/ghazdo/sprint-248-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Azure DevOps release notes - GitHub Advanced Security for Azure DevOps 248 Update\ndescription: See the Sprint 248 feature updates for GitHub Advanced Security for Azure DevOps, including next steps.\nauthor: ckanyika\nms.author: ckanyika\nms.date: 1/17/2025\n---\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: Markdown include statement that pulls in the next steps content from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/general/sprint-210-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Repos Update Details (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/repos/sprint-245-update.md`), likely containing detailed information about Sprint 245 updates for Azure Repos. It's used within the context of Azure DevOps release notes to embed Repo-specific feature descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update](includes/repos/sprint-245-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Using TFVC Command-Line Utilities for Version Control Operations\nDESCRIPTION: Overview of Team Foundation Version Control (TFVC) command-line utilities for deleting, destroying, restoring, and getting files. These commands provide alternative methods to perform version control operations outside the Visual Studio interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/delete-restore-files-folders.md#2025-04-22_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\n- The [Delete command](delete-command-team-foundation-version-control.md) deletes a file from the server.\n- The [Destroy command](destroy-command-team-foundation-version-control.md) permanently destroys an item.\n- The [Undelete command](undelete-command.md) restores a file deleted from the server.\n- The [Undo command](undo-command.md) undoes pending changes.\n- The [Get command](get-command.md) gets files from the server.\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Links for Azure DevOps Updates\nDESCRIPTION: This snippet demonstrates how to create internal page links (anchors) in markdown for navigation within a document. It links to sections on pricing models and package availability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/artifacts/build-may-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Pay-per-GB](#pay-per-gb)\n- [General availability of Python and Universal Packages](#general-availability-of-python-and-universal-packages)\n```\n\n----------------------------------------\n\nTITLE: Query Macro Example - Any Type\nDESCRIPTION: Example showing how to use the [Any] macro to find any work item type or state\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/feature-matrix-query-macros.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nWork Item Type=[Any]\n```\n\nLANGUAGE: text\nCODE:\n```\nState=[Any]\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Block\nDESCRIPTION: Markdown include directive for version compatibility note\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/customize-process-field.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-gt-eq-2019](../../../includes/version-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Specifying API Version for Azure DevOps Preview in Plaintext\nDESCRIPTION: This snippet defines the API version for an Azure DevOps preview release. It uses the format 'major.minor-preview.patch' to indicate a pre-release version. This version specification is typically used in API requests to ensure compatibility with specific Azure DevOps features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version3-preview1.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n**api-version** = 3.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: Git Files Keyboard Shortcuts Table\nDESCRIPTION: Markdown table showing keyboard shortcuts for file operations in Git repositories\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/code-shortcuts.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|1|Open contents|\n|2|Open history|\n|t|Move focus to directory path|\n|w|Select branch|\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 162 Signer Information in Markdown\nDESCRIPTION: This snippet includes the signer information for Sprint 162 using a Markdown include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-162-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-162](includes/signer/sprint-162.md)]\n```\n\n----------------------------------------\n\nTITLE: Declaring Repository Usage with 'uses' in Azure Pipelines YAML\nDESCRIPTION: Demonstrates how to use the `uses` keyword within a job definition in Azure Pipelines YAML to explicitly declare that a job requires access to a specific repository, even without a standard `checkout` step. This ensures the agent receives the necessary access token, especially when repository access restrictions are enabled and Git operations are performed via script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-181-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n  - repository: myrepo\n    type: git\n    name: MyProject/MyRepo\n\njobs:\n- job: myjob\n  uses:\n    repositories:\n    - myrepo\n  steps:\n  # without the preceding \"uses\" statement, if you have the\n  # new limit-repositories feature turned on, then Azure Pipelines\n  # won't include this repo in the access token and you'll\n  # get an access error at runtime (also, in a real pipeline\n  # you must include the auth token header as an argument to Git)\n  - script: git clone https://dev.azure.com/MyOrg/MyProject/_git/MyRepo\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts Table for Azure DevOps Queries\nDESCRIPTION: A markdown table listing keyboard shortcuts available when working with queries in the Azure DevOps web portal. The table shows shortcuts for creating new queries, refreshing queries, returning to queries, navigating between items, and filtering results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/queries-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|c, q|New query|\n|r *or* Alt+r|Refresh query|\n|Alt+q|Return to query|\n|j *or* Alt+n|Move to next item|\n|k *or* Alt+p|Move to previous item|\n|Ctrl+Shift+f|Filter results|\n```\n\n----------------------------------------\n\nTITLE: Clearing Extended Attributes on macOS Agent Download\nDESCRIPTION: Command to clear extended attributes on the downloaded agent tar file before extraction.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nxattr -c vsts-agent-osx-x64-V.v.v.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Forking Sample Docker Repository URL\nDESCRIPTION: Provides the URL to a sample GitHub repository containing a Node.js application with a Dockerfile. This repository is intended to be forked by the user to follow the steps in the quickstart guide for building container images with Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/build-image.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/MicrosoftDocs/pipelines-javascript-docker\n```\n\n----------------------------------------\n\nTITLE: Dashboard Permissions Prerequisites Table in Markdown\nDESCRIPTION: Markdown table defining access level and permission requirements for managing dashboards in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/dashboard-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|-------------|-------------|\n|**Access levels** |- All members of the Project Valid Users group can view dashboards.<br>- To add, edit, or manage a team or project dashboard: [Team member](../../organizations/security/add-users-team-project.md)<br>- At least **Basic** access. |\n|**Permissions** |- **Team dashboards**: To add, edit, or manage a team dashboard: [Team administrator](../../organizations/settings/add-team-administrator.md), project administrator, or **Edit dashboard** permissions set to **Allow**.<br>- **Project dashboards**: To add, edit, or manage project dashboards: Project administrator, or [Edit dashboard](./dashboard-permissions.md) permissions set to **Allow**.|\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Rollup Column in Azure DevOps\nDESCRIPTION: This markdown snippet shows an image of the Custom Rollup column dialog in Azure DevOps. It illustrates the interface for configuring custom rollup columns with various options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/display-rollup.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]   \n> ![Screenshot of Custom Rollup column dialog.](media/rollup/custom-rollup-column-dialog.png)\n```\n\n----------------------------------------\n\nTITLE: Authentication Reset Commands for Azure Repos Teams App\nDESCRIPTION: Commands to reset authentication for the Azure Repos app in Microsoft Teams by signing out and signing back in.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-teams.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n@Azure Repos signout\n```\n\nLANGUAGE: markdown\nCODE:\n```\n@Azure Repos signin\n```\n\n----------------------------------------\n\nTITLE: Removing Duplicate Maven Snapshots with PowerShell\nDESCRIPTION: PowerShell command to remove all Maven snapshot artifacts except the one with the highest lexicographical value. This is useful when multiple versions of Maven snapshots are downloaded during deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/artifacts.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nGet-Item \"myApplication*.jar\" | Sort-Object -Descending Name | Select-Object -SkipIndex 0 | Remove-Item\n```\n\n----------------------------------------\n\nTITLE: Pushing with Origin Alias\nDESCRIPTION: Simplified push command using the 'origin' alias for the remote repository URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pushing.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ngit push origin <local branch name>\n```\n\n----------------------------------------\n\nTITLE: Running Agent Diagnostics Script Azure DevOps Shell\nDESCRIPTION: Executes the agent diagnostics script using the bash shell to help diagnose networking and upgrade problems. No external dependencies apart from a Unix shell environment and access permissions to execute the agent control script. The '--diagnostics' argument triggers the collection of diagnostic data; expects the agent to be extracted and accessible on the path. Outputs troubleshooting reports to the console or designated log files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-166-update.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nrun.sh --diagnostics\n```\n\n----------------------------------------\n\nTITLE: Including Azure Artifacts Feature Details for Sprint 146 Update\nDESCRIPTION: This Markdown directive incorporates the detailed descriptions of Azure Artifacts features from the Azure DevOps Sprint 146 update by including a separate Markdown file. It helps maintain organization in the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update](includes/artifacts/sprint-146-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Implementing YAML Pipeline Template with Context Information Handling\nDESCRIPTION: This YAML template demonstrates how to process context information passed to jobs. The template takes a list of jobs as parameters and applies different environment setup steps based on the templateContext properties like expectedHTTPResponseCode and requiredComponents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-202-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nparameters: \n- name: testSet\n  type: jobList\n\njobs:\n- ${{ each testJob in parameters.testSet }}:\n  - ${{ if eq(testJob.templateContext.expectedHTTPResponseCode, 200) }}:\n    - job:\n      steps:\n        - script: ./createSuccessfulEnvironment.sh ${{ testJob.templateContext.requiredComponents }}\n        - ${{ testJob.steps }}\n  - ${{ if eq(testJob.templateContext.expectedHTTPResponseCode, 500) }}:\n    - job:\n      steps:\n        - script: ./createRuntimeErrorEnvironment.sh ${{ testJob.templateContext.requiredComponents }}\n        - ${{ testJob.steps }}\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 192 Update Links in Markdown\nDESCRIPTION: Markdown include directive that pulls in links related to the Sprint 192 update for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-192-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-192-update-links](../includes/pipelines/sprint-192-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary by Test File in Power BI\nDESCRIPTION: Power BI query that retrieves test result summary data grouped by test container name. This query enables filtering test results by specific test files or containers, helping identify problematic test files that may require attention.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_6\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/mseng/AzureDevOps/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And DateSK ge {startdate} \"\n      &\"And Workflow eq 'Build'\"\n      &\")/groupby(\"\n      &\"(Test/ContainerName),\"\n      &\"aggregate(\"\n      &\"ResultCount with sum as ResultCount, \"\n      &\"ResultPassCount with sum as ResultPassCount, \"\n      &\"ResultFailCount with sum as ResultFailCount, \"\n      &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n      &\"ResultNotImpactedCount with sum as ResultNotImpactedCount\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: OData Batch Response Structure\nDESCRIPTION: An example of the response format for a batch query. The response is also in multipart format, with each part containing the status code, headers, and JSON response body for the corresponding query in the batch.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-batch.md#2025-04-22_snippet_3\n\nLANGUAGE: HTTP\nCODE:\n```\n--batchresponse_0cc7749e-dcec-4b5e-9380-eb05859fe733\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nHTTP/1.1 200 OK\nContent-Type: application/json; odata.metadata=minimal; odata.streaming=true\nOData-Version: 4.0\n\n{\"@odata.context\":\"https://{OrganizationName}.analytics.vsts.me/_odata/{version}/$metadata#Users(UserId,UserSK,UserName)\",\"value\":[{\"UserId\":\"00aa00aa-bb11-cc22-dd33-44ee44ee44ee\",\"UserSK\":\"00aa00aa-bb11-cc22-dd33-44ee44ee44ee\",\"UserName\":\"John Smith\"}]}\n--batchresponse_0cc7749e-dcec-4b5e-9380-eb05859fe733--\n```\n\n----------------------------------------\n\nTITLE: Including Prerequisite Information in Markdown\nDESCRIPTION: This snippet demonstrates how to include a prerequisite section in a markdown document using a specific include statement for Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/configure-hierarchical-teams.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites-project-admin](../includes/prerequisites-project-admin.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: Includes a reference to a file containing next steps information for users after reading the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-212-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Structure for Azure Boards Release Notes\nDESCRIPTION: The basic markdown structure for Azure Boards Sprint 252 release notes, including frontmatter metadata and section includes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/boards/sprint-252-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Azure DevOps Release Notes - Azure Boards Sprint 252 Update\ndescription: See the Sprint 252 feature updates for Azure Boards, including next steps.\nauthor: ckanyika\nms.author: ckanyika\nms.date: 2/24/2025\n---\n\n# Azure Boards - Sprint 252 Update\n\n## Features\n\n[!INCLUDE [sprint-252-update-links](../includes/boards/sprint-252-update-links.md)]\n\n[!INCLUDE [sprint-252-update](../includes/boards/sprint-252-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Recursive Wildcard Pattern Matching\nDESCRIPTION: Example showing how the recursive wildcard (**) matches files in nested directories, specifically finding all files with a particular extension across multiple directory levels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/tasks/file-matching-patterns.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nsample1/A.ext\nsample1/B.ext\nsample2/C.ext\nsample2/D.not\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps TFVC Version Control Documentation Headers\nDESCRIPTION: Markdown frontmatter and included template files for Azure DevOps documentation about TFVC version control features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/view-manage-past-versions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: View and manage past versions\ntitleSuffix: Azure Repos\ndescription: Access Team Foundation Version Control information about viewing changes in files, taking snapshots, viewing changesets, and rolling back changesets.\nms.assetid: 752b4a6f-4212-4117-a994-03856d0c8ea9\nms.service: azure-devops-repos\nms.topic: conceptual\nms.date: 11/22/2022\nmonikerRange: '<= azure-devops'\nms.subservice: azure-devops-repos-tfvc\n---\n```\n\n----------------------------------------\n\nTITLE: Theme-Aware Hub Icon Configuration\nDESCRIPTION: JSON configuration demonstrating how to specify different icons for light and dark themes in the extension manifest.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/web-navigation.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"hub\",\n    \"type\": \"ms.vss-web.hub\",\n    \"targets\": [\n        \"ms.vss-work-web.work-hub-group\"\n    ],\n    \"properties\": {\n        \"name\": \"Hub\",\n        \"description\": \"Something\",\n        \"uri\": \"pages/Hub.html\",\n        \"icon\": {\n            \"light\": \"img/hub-light.png\",\n            \"dark\": \"img/hub-dark.png\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Python Package with setup.py\nDESCRIPTION: Alternative command to build Python package distribution using setup.py\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/python-packages.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython setup.py sdist bdist_wheel\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 224 Updates\nDESCRIPTION: This directive includes content from a shared file containing specific updates for Azure Pipelines introduced in Sprint 224.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-224-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-224-update](includes/pipelines/sprint-224-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Azure DevOps Documentation\nDESCRIPTION: This YAML snippet defines metadata for the Azure DevOps documentation page, including the topic, service, manager, author, and date information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/includes/create-nodejs-docker-build-team-services.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\nms.service: azure-devops-pipelines\nms.manager: mijacobs\nms.author: sdanie\nauthor: steved0x\nms.date: 02/14/2020\n---\n```\n\n----------------------------------------\n\nTITLE: Specifying Windows 2016 Image Identifier in Azure Pipelines (Deprecated)\nDESCRIPTION: The identifier `vs2017-win2016` is used to specify the Windows Server 2016 hosted image pool with Visual Studio 2017 in Azure Pipelines configuration (typically YAML). This image was deprecated on November 15th and is scheduled for full retirement in March 2022, with several planned brownout periods.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-196-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvs2017-win2016\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps On-Premises Prerequisites Table Definition\nDESCRIPTION: Markdown table defining prerequisites for Azure DevOps on-premises version, including additional requirements for feature enablement and services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/includes/prerequisites-power-bi.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Prerequisite |\n|--------------|-------------|\n| **Access levels** | [Project member](../../organizations/accounts/add-organization-users.md) with at least **Basic** access. Anyone with access to the project, except those granted **Stakeholder** access, can view Analytics views. |\n| **Services** | - Enable **Boards**. If it's disabled, **Analytics views** doesn't display. [Reenable it](../../organizations/settings/set-services.md) either for individual users or for the entire organization. Be an account owner or a member of the [**Project Collection Administrators** group](../../../organizations/security/change-organization-collection-level-permissions.md) to add extensions or enable the service. <br>- For Analytics data availability, enable the corresponding service. For example, to query work tracking data, enable **Boards**. If it's disabled, **Analytics views** doesn't display. To re-enable a service, see [Turn an Azure DevOps service on or off](../../../organizations/settings/set-services.md). |\n| **Feature enablement** | To use **Analytics views**, [enable the Analytics views preview feature](../../../project/navigation/preview-features.md) either for individual users or for the organization. |\n| **Permissions** | - **View Analytics** permission  set to **Allow**. For more information, see [Grant permissions to access the Analytics service](../powerbi/analytics-security.md). By default, all Contributors with Basic access are granted access. <br>- To edit shared **Analytics views**: **Edit shared Analytics views** permission set to **Allow**. For more information, see [Grant permissions to access the Analytics service](../analytics-security.md). |\n```\n\n----------------------------------------\n\nTITLE: Installing vsoagent-installer using npm in Bash\nDESCRIPTION: This code snippet demonstrates how to install the vsoagent-installer package globally using npm in a Bash environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo npm install vsoagent-installer -g\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group using Azure CLI\nDESCRIPTION: This Azure CLI command deletes the specified Azure Resource Group ('hello-world-nodejs-rg') and all the resources contained within it, such as the Web App and App Service Plan created earlier in the tutorial. This is used for cleanup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/nodejs-tutorial.md#2025-04-22_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name hello-world-nodejs-rg\n```\n\n----------------------------------------\n\nTITLE: Including Sprint Update Feature Summary in Azure DevOps Release Notes - Markdown\nDESCRIPTION: This snippet pulls in the main feature update details for Sprint 187 via Markdown include syntax. Using [!INCLUDE ...], it points to a shared documentation fragment enabling maintainable and consistent feature updates across pages. Dependencies include the referenced Markdown include, which must provide up-to-date feature changes. Input is a file path; output is inserted Markdown at build time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/Boards/sprint-187-update.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-187-update](../includes/boards/sprint-187-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Deallocating an Azure VM using Azure CLI\nDESCRIPTION: Stops the specified Azure Virtual Machine and releases its compute resources (IP addresses, compute hardware). This stops billing for compute costs. This command is used both during the VHD-to-managed disk conversion process and after customizing/generalizing a VM before image creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/scale-set-agents.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm deallocate --resource-group <myResourceGroup> --name <MyVM>\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Markdown\nDESCRIPTION: This snippet demonstrates how to include version-specific content in a Markdown file using a special include statement. It's used to add content that applies only to Azure DevOps versions 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-comments-wiki.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-gt-eq-2020](../../includes/version-gt-eq-2020.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 150 Update Content in Markdown\nDESCRIPTION: Markdown include statement for main Sprint 150 update documentation content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-150-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-150-update](../includes/pipelines/sprint-150-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Work Item Extensions XML Configuration\nDESCRIPTION: XML configuration showing extension definition with control contribution specifications including inputs and requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/configure-workitemform-extensions.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<!--**********************************Work Item Extensions***************************\n\n    Extension:\n        Name: color-control-dev\n        Id: example.color-control-dev\n\n        Control contribution:\n            Id: example.color-control-dev.color-control-contribution\n            Description:\n            Inputs:\n                Id: FieldName\n                Description: The field associated with the control.\n                Type: Field\n                IsRequired: true\n\n                Id: Colors\n                Descriptions: The colors that match the values in the control.\n                Type: String\n                IsRequired: false\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 244 Update Content in Markdown\nDESCRIPTION: A markdown include directive that imports the main content for Azure Pipelines Sprint 244 updates from a separate file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-244-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-244-update](../includes/pipelines/sprint-244-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 202 update content in Markdown document\nDESCRIPTION: Markdown include directive to incorporate the Sprint 202 update content from an external file located in the includes/general directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/general/sprint-202-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update](../includes/general/sprint-202-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including General Update Details (Markdown)\nDESCRIPTION: Uses a Markdown include directive to insert the content of 'sprint-214-update.md' located in the 'includes/general/' path. This file likely contains the detailed release notes describing general features and updates for Sprint 214.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-214-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-214-update](includes/general/sprint-214-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Release Notes Content with Markdown Include Directives\nDESCRIPTION: Three markdown include directives that pull in content from external files: sprint-188-update-links, sprint-188-update, and nextsteps. These directives import the relevant content sections for the Azure Repos Sprint 188 Update release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/repos/sprint-188-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-188-update-links](../includes/repos/sprint-188-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-188-update](../includes/repos/sprint-188-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Generating Migration Settings with Data Migration Tool in cmdline\nDESCRIPTION: Command to run the Data Migration Tool prepare command with parameters for collection URL, tenant domain name, and region.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-prepare-test-run.md#2025-04-22_snippet_0\n\nLANGUAGE: cmdline\nCODE:\n```\n/collection:http://localhost:8080/tfs/DefaultCollection/ tenantDomainName:contoso.com /Region:CUS\n```\n\n----------------------------------------\n\nTITLE: Creating a Next Step Action Block (Markdown)\nDESCRIPTION: This Markdown snippet uses a blockquote (`>`) combined with a special `div` element (`[!div class=\"nextstepaction\"]`) to render a styled call-to-action element. It contains a link prompting the user to navigate to Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"] \n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Configuring macOS-15 Sequoia Pipeline Job\nDESCRIPTION: YAML configuration for running a job on the preview macOS-15 Sequoia image in Azure Pipelines. The snippet demonstrates how to specify the VM image and run a basic bash command to verify the macOS version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-247-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- job: macOS15\n  pool:\n    vmImage: 'macOS-15'\n  steps:\n  - bash: |\n      echo Hello from macOS Sequoia Preview\n      sw_vers\n```\n\n----------------------------------------\n\nTITLE: Markdown Azure DevOps Version Include Statement\nDESCRIPTION: Markdown include statement for specifying Azure DevOps version compatibility\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/organize-queries.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Manage Policies Content Block in Markdown\nDESCRIPTION: This snippet shows how to include a reusable content block for managing policies in a Markdown file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/change-application-access-policies.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [manage-policies](../../includes/manage-policies.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Repos Sprint 224 Updates\nDESCRIPTION: This directive includes content from a shared file containing specific updates for Azure Repos introduced in Sprint 224.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-224-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-224-update](includes/repos/sprint-224-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating project-scoped nuget.config file for Azure DevOps\nDESCRIPTION: XML configuration for connecting to a project-scoped feed in Azure DevOps. This file specifies the package source URL including both organization and project names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-exe.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<FEED_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: Include directive for next steps markdown content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-213-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: Markdown include directive that references the next steps section, providing guidance on additional actions users can take.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/repos/sprint-246-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 158 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links to Sprint 158 update information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-158-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-158-update-links](../includes/general/sprint-158-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 157 Update Content in Markdown\nDESCRIPTION: Markdown include directive for main Sprint 157 update content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-157-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157-update](../includes/boards/sprint-157-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 212 Update Links in Markdown\nDESCRIPTION: Includes a reference to a file containing links related to the Sprint 212 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-212-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-212-update-links](../includes/boards/sprint-212-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Reading Team Dashboards Scope (`vso.dashboards`)\nDESCRIPTION: Grants the ability to read team dashboard information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_17\n\nLANGUAGE: text\nCODE:\n```\n`vso.dashboards`\n```\n\n----------------------------------------\n\nTITLE: Displaying Free Tier Features in Markdown\nDESCRIPTION: This snippet shows how to include a list of free tier features in the markdown document using an Azure DevOps-specific include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/create-organization.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [free-tier](../../includes/free-tier.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: Markdown include directive that pulls in the next steps content from an external file, providing guidance on what users should do after reading the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-242-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint Update Content in Markdown - Markdown\nDESCRIPTION: This code snippet uses the !INCLUDE directive to include the Markdown file with the main sprint update notes for Sprint 205. Dependencies include a documentation engine that processes !INCLUDE statements. There are no parameters. The embedded file's content summarizes the updates and feature changes introduced in this release.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-205-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-205-update](../includes/pipelines/sprint-205-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Common Update Links - Markdown - Documentation\nDESCRIPTION: This snippet uses Markdown's custom include directive to insert a file that provides general sprint update links. The included file should exist at the specified relative path. It enables reusing common navigation or summary content across related documentation files, promoting maintainability and consistency.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/general/sprint-253-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-253-update-links](../includes/general/sprint-253-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Email Examples\nDESCRIPTION: Specific examples of the new email notification format for successful builds and deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sep-10-azure-devops-launch.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n[Build succeeded] IdentityService.CI - MyRepo:master - MyProject - d3b90b80\\n[Deployment succeeded] New release pipeline > NotificationSpecialRelease-1 : Stage 1\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Services Markdown Header\nDESCRIPTION: Markdown frontmatter and branding text used to indicate Azure DevOps Services specific documentation content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-eq-azure-devops.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nms.topic: include\n---\n\n**Azure DevOps Services**\n```\n\n----------------------------------------\n\nTITLE: Using Build.CronSchedule.DisplayName Variable in Azure DevOps Pipelines\nDESCRIPTION: Contains the 'displayName' of the cron schedule that triggered the pipeline run. This variable is set only when a YAML scheduled trigger initiates the run. It is available for use within pipeline templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_7\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.CronSchedule.DisplayName\n```\n\n----------------------------------------\n\nTITLE: Displaying Image of Burndown/Burnup Widget in Markdown\nDESCRIPTION: This code snippet shows how to embed an image of a burndown/burnup widget with annotations in a Markdown document. It uses Azure DevOps-specific syntax for image insertion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/configure-burndown-burnup-widgets.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::image type=\"content\" source=\"media/burndown-widget/burndownup-release-burndown-with-markup.png\" alt-text=\"Screenshot annotated with labels about burndown or burnup widget elements.\":::\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 166 Update Content in Markdown\nDESCRIPTION: This snippet includes the main content of the Sprint 166 update in Markdown format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/general/sprint-166-update.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-166-update](../includes/general/sprint-166-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Program Kanban to Azure Boards Features Board in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Program Kanban' to the Azure Boards 'Program Features board'. It describes the board as an interactive display of the Features backlog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Program Kanban\n   :::column-end:::\n   :::column span=\"3\":::\n      [**Program Features board**](safe-plan-track-boards.md#program-team-board). The Program board displays the Features backlog as cards in an interactive, configurable, and filterable board.  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Moniker Range Declaration for Legacy Azure DevOps\nDESCRIPTION: Markdown code block defining content visibility range for legacy versions of Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/link-type-reference.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<azure-devops\"\n\n- [**Work link type**](#work-link-type): links work items including select test case management work items\n- [**Hyperlink**](#hyperlink): connects a work item to any URL or network share\n- [**External link type**](#external-link-type): connects a work item to an external object, such as a code object, build, or wiki page\n- [**GitHub link type**](#github-link-type): connects a work item to a GitHub repository commit or pull request.     \n\nA specific field maintains a count of links for the first three link types, such as *Related Link Count*, *Hyperlink Count*, and *External Link Count*.  \n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Implementing FROZEN Rule for Work Item Field in XML\nDESCRIPTION: This XML code shows how to use the FROZEN element to prevent users from changing a field value once it contains a value, with an exception for a specific group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"MyCorp.Priority\" name=\"Management Priority\" type=\"String\">\n    <FROZEN not=\"[Project]\\Management Team\" /> \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Including Release Notes Content Modules in Markdown\nDESCRIPTION: Markdown include statements for loading release notes content sections including sprint updates, links, and next steps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/boards/sprint-248-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-248-update-links](../includes/boards/sprint-248-update-links.md)]\n\n[!INCLUDE [sprint-248-update](../includes/boards/sprint-248-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Detailed Information for a Specific Label\nDESCRIPTION: Shows how to use the tf labels command with the /format:detailed option to get comprehensive information about a specific label (build1033).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/labels-command.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nc:\\projects> tf labels /format:detailed build1033\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 215 Update Links in Markdown\nDESCRIPTION: Uses a Microsoft Docs specific Markdown include directive to embed the content of 'includes/boards/sprint-215-update-links.md'. This snippet inserts links related to the Azure Boards updates for Sprint 215.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-215-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update-links](includes/boards/sprint-215-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Deleting Variables in Azure DevOps CLI\nDESCRIPTION: Command to delete a variable from a variable group with confirmation prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/library/variable-groups.md#2025-04-22_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz pipelines variable-group variable delete --group-id 4 --name requires-login\n```\n\n----------------------------------------\n\nTITLE: Including Work Item Types Table in Markdown\nDESCRIPTION: Markdown include statement for displaying work item types table in the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/configure-customize.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [work-item-types](includes/work-item-types.md)]\n```\n\n----------------------------------------\n\nTITLE: Selecting Change Process Option for Azure DevOps Project\nDESCRIPTION: This snippet demonstrates how to access the 'Change process' option for a specific project in Azure DevOps. It shows the context menu for a project named 'MyFirstProject1'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/change-project-to-inherited-process.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Project, Change process](/azure/devops/organizations/settings/work/media/process/choose-change-process.png) \n```\n\n----------------------------------------\n\nTITLE: Including Sprint 157 Signature in Markdown\nDESCRIPTION: Markdown include directive for Sprint 157 signature section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-157-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-157](../includes/signer/sprint-157.md)]\n```\n\n----------------------------------------\n\nTITLE: On-premises Azure DevOps Requirements Table\nDESCRIPTION: Markdown table defining access levels, permissions, and services requirements for on-premises Azure DevOps Analytics views.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/analytics-prerequisites.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md).<br>- At least **Basic** access. |\n| **Permissions** | Anyone with access to the project, except those granted **Stakeholder** access, can view Analytics views. For Stakeholders: **View Analytics** permission set to **Allow**.<br>- For more information, see [Grant permissions to access the Analytics service](../powerbi/analytics-security.md).<br>- For more information about other prerequisites regarding service and feature enablement and general data tracking activities, see [Permissions and prerequisites to access Analytics](../analytics/analytics-permissions-prerequisites.md). |\n|**Services**| - **Azure Boards** enabled. If it's disabled, **Analytics views** doesn't display. [Reenable it](../../organizations/settings/set-services.md) either for individual users or for the entire organization.<br>- [Analytics service](../dashboards/analytics-extension.md) enabled. Be an account owner or a member of the [**Project Collection Administrators** group](../../organizations/security/change-organization-collection-level-permissions.md) to enable it.|\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Include Directives\nDESCRIPTION: Markdown include directives that pull in content from separate files containing sprint updates and next steps information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-216-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-216-update-links](../includes/boards/sprint-216-update-links.md)]\n\n[!INCLUDE [sprint-216-update](../includes/boards/sprint-216-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: CMMI Task Type Definition - HTML Table Markup\nDESCRIPTION: HTML table row defining task type options for CMMI process including Corrective Action, Mitigation Action, and Planned tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/guidance/cmmi-process-workflow.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   [Task Type](cmmi/guidance-requirements-field-reference-cmmi.md) \n   :::column-end:::\n   :::column span=\"3\":::\n   Select the kind of task to implement from the allowed values:\n   - **Corrective Action**\n   - **Mitigation Action**\n   - **Planned**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Moniker-Controlled Analytics Documentation Section in Markdown\nDESCRIPTION: A markdown section that describes Analytics Service capabilities including widgets and Power BI integration, wrapped in moniker range controls for version-specific content targeting Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/powerbi-reports-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<a id=\"powerbi-reports\"></a>\n::: moniker range=\"<=azure-devops\"\n\n### Analytics widgets and Power BI reports \n\nThe Analytics Service can answer quantitative questions about the past or present state of your projects. You can add [Analytics widgets](../../report/dashboards/analytics-widgets.md) to a dashboard or use [Power BI to create charts and reports](../../report/powerbi/data-connector-connect.md). \n\nFor more information, see [What is the Analytics Service?](../../report/powerbi/what-is-analytics.md)\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Including a Note in Markdown\nDESCRIPTION: This snippet shows how to include a note in a Markdown file using a special include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/custom-rules.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/note-on-prem-link.md)]\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Pipeline Approval Completed Event in Azure DevOps\nDESCRIPTION: JSON payload sample for the 'ms.vss-pipelinechecks-events.approval-completed' event that is triggered when an approval is completed for a pipeline run stage. The payload includes details of the completed approval including status and comments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"00000000-0000-0000-0000-0000000000005810cce3-55e9-46dc-ad4f-681c57cf620e\",\n  \"eventType\": \"ms.vss-pipelinechecks-events.approval-completed\",\n  \"publisherId\": \"pipelines\",\n  \"message\": {\n    \"text\": \"Approval completed for deployment of pipeline run1 to environment env1.\",\n    \"html\": \"Approval completed for deployment of pipeline <a href=https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_build/results?buildId=2&view=results> run1 </a> to environment <a href=https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_environments/1?view=resources>env1</a>.\",\n    \"markdown\": \"Approval completed for deployment of pipeline [https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_build/results?buildId=2&view=results](run1) to environment [env1](https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_environments/1?view=resources)\"\n  },\n  \"detailedMessage\": {\n    \"text\": \"Approval completed for deployment of pipeline run1 to environment env1.\",\n    \"html\": \"Approval completed for deployment of pipeline <a href=https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_build/results?buildId=2&view=results> run1 </a> to environment <a href=https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_environments/1?view=resources>env1</a>.\",\n    \"markdown\": \"Approval completed for deployment of pipeline [https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_build/results?buildId=2&view=results](run1) to environment [env1](https://dev.azure.com/fabfiber/Fabrikam-Fiber-Git/_environments/1?view=resources)\"\n  },\n  \"resource\": {\n    \"approval\": {\n      \"id\": \"00000000-0000-0000-0000-0000000000000f027b05-0942-4a35-9218-26fa07d8760a\",\n      \"steps\": [\n        {\n          \"assignedApprover\": {\n            \"displayName\": null,\n            \"id\": \"00000000-0000-0000-0000-000000000000f8482ec0-3e2f-489b-ba62-ea01cf84afa8\"\n          },\n          \"status\": \"approved\",\n          \"comment\": \"Sample comment\",\n          \"initiatedOn\": \"2019-12-13T06:18:22.460Z\"\n        }\n      ],\n      \"status\": \"approved\",\n      \"createdOn\": \"2019-12-13T06:18:22.460Z\",\n      \"lastModifiedOn\": \"2019-12-13T06:18:22.460Z\",\n      \"instructions\": \"Instructions\",\n      \"minRequiredApprovers\": 2,\n      \"blockedApprovers\": [\n        {\n          \"displayName\": null,\n          \"id\": \"00000000-0000-0000-0000-00000000000023241e2e-59af-4b58-842e-5604d508c6b5\"\n        }\n      ],\n      \"_links\": {}\n    },\n    \"projectId\": \"00000000-0000-0000-0000-000000000000\",\n    \"pipeline\": null,\n    \"stage\": null,\n    \"run\": null,\n    \"resource\": null,\n    \"id\": 0,\n    \"url\": null,\n    \"stageName\": null,\n    \"attemptId\": 0\n  },\n  \"resourceVersion\": \"5.1-preview.1\",\n  \"resourceContainers\": {\n    \"collection\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"account\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"project\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"createdDate\": \"2019-12-13T06:18:22.487Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Branch Policy Configuration Markdown Include\nDESCRIPTION: Markdown include statement for version compatibility notice in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pr-status-policy.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Restricting Work Item Type Creation with User Validation Rule\nDESCRIPTION: XML configuration to disable work item creation by adding a validation rule that prevents project valid users from saving work items of a specific type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-manage-wits.md#2025-04-22_snippet_11\n\nLANGUAGE: XML\nCODE:\n```\n<TRANSITION from=\" \" to=\"New\">  \n   <FIELDS>  \n     <FIELD refname=\"System.CreatedBy\">  \n          <VALIDUSER not=\"[Team Project Name]Project Valid Users\" />  \n     </FIELD>  \n   </FIELDS>  \n</TRANSITION>\n```\n\n----------------------------------------\n\nTITLE: Common Fields Table\nDESCRIPTION: A markdown table listing common fields present in all test-specific work items including Title, Assigned To, State, Reason, Area Path, Iteration Path and Description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/test-objects-overview.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      **Field**\n   :::column-end:::\n   :::column span=\"3\":::\n      **Usage**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Rendering Azure DevOps Sprint Release Note Summaries - HTML\nDESCRIPTION: This HTML code displays a multi-row table listing features from different Azure DevOps sprint releases. Each sprint is identified by a linked date, with subsequent rows containing details for individual release items, such as feature name, area, and planned version. There are no dynamic elements, scripts, or dependencies, and data is structured using <tr> and <td> elements, including rowspan attributes to group items and links to markdown update notes. Inputs are static, and its primary use is content display within documentation. Table formatting and navigation rely on CSS styles external to this snippet.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<td rowspan=\"4\"><a href=\"2023/sprint-221-update.md\" data-raw-source=\"[9 May 2023](2023/sprint-221-update.md)\"> 9 May 2023</a></td>\n<td>Swimlane rules</td><td>Boards</td><td>Future</td></tr>\n<td>Pipeline settings audit improvements</td><td>Pipelines</td><td>Future</td></tr>\n<td>Pull Request widget for multiple repos is now generally available</td><td>Reporting</td><td>2022.1</td></tr>\n<tr>\n<tr>\n<td rowspan=\"3\"><a href=\"2023/sprint-220-update.md\" data-raw-source=\"[20 April 2023](2023/sprint-220-update.md)\"> 20 April 2023</a></td>\n<td>Sticky \"Save\" and \"Save and Close\" button </td><td>Boards</td><td>Future</td></tr>\n<td>Stage quick actions</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Analytics Views are now generally available</td><td>Reporting</td><td>2022.1</td></tr>\n<tr>\n<td rowspan=\"3\"><a href=\"2023/sprint-219-update.md\" data-raw-source=\"[31 March 2023](2023/sprint-219-update.md)\"> 31 March 2023</a></td>\n<td>Service principal and managed identity support in Azure DevOps (public preview) </td><td>General</td><td>N/A</td></tr>\n<td>REST API support for connecting GitHub repositories (preview)</td><td>Boards</td><td>Future</td></tr>   \n<td>Pipeline Agent end of support for Debian 9, Fedora 32, macOS 10.14 and others</td><td>Pipelines</td><td>N/A</td></tr>\n <tr>\n<td rowspan=\"5\"><a href=\"2023/sprint-218-update.md\" data-raw-source=\"[8 March 2023](2023/sprint-218-update.md)\"> 8 March 2023</a></td>\n<td>Node runner download task</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Updated TFX Node runner validation</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Service hook for job state change</td><td>Pipelines</td><td>Future</td></tr>\n<td>Improved security when creating GitHub Enterprise Server (hosted Pipelines)</td><td>Pipelines</td><td>Future</td></tr>\n<td>Dashboards last accessed date and modified By</td><td>Reporting</td><td>2022.1</td></tr>\n<tr>\n<td rowspan=\"5\"><a href=\"2023/sprint-217-update.md\" data-raw-source=\"[17 February 2023](2023/sprint-217-update.md)\"> 17 February 2023</a></td>\n<td>License source column in user list export</td><td>General</td><td>Future</td></tr>\n<td>Interactive boards reports</td><td>Boards</td><td>2022.1</td></tr>\n<td>Search for filter stages in side panel</td><td>Pipelines</td><td>Future</td></tr>\n<td>Pipeline agent v3 (.NET 6) rolling out</td><td>Pipelines</td><td>N/A</td></tr>\n<td>Pull request widget for multiple repos (private preview)</td><td>Reporting</td><td>2022.1</td></tr>\n<tr>\n<td rowspan=\"5\"><a href=\"2023/sprint-216-update.md\" data-raw-source=\"[7 February 2023](2023/sprint-216-update.md)\"> 7 February 2023</a></td>\n<td>New save comments permission</td><td>Boards</td><td>2022.1</td></tr>\n<td>Red Hat 6 will no longer receive Pipeline agent updates</td><td>Pipelines</td><td>Future</td></tr>\n<td>Pipeline stages side panel</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Restrict opening protected resources to resource administrators</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Copy Dashboard</td><td>Reporting</td><td>Future</td></tr>   \n<tr>\n<td rowspan=\"9\"><a href=\"2023/sprint-215-update.md\" data-raw-source=\"[25 January 2023](2023/sprint-215-update.md)\"> 25 January 2023</a></td>\n<td>Prevent editing of shareable picklists fields</td><td>Boards</td><td>2022.1</td></tr>\n<td>Swimlane colors</td><td>Boards</td><td>Future</td></tr>\n<td>Experience improvements to pipeline permissions</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Ability to disable masking for short secrets</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>New PAT Scope for managing pipeline authorization and approvals and checks</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Variables as inputs in checks</td><td>Pipelines</td><td>Future</td></tr>\n<td>Script to self-validate pipeline agent version</td><td>Pipelines</td><td>Future</td></tr>\n<td>Pipeline run status overview icon</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Support for subpages table</td><td>Wiki</td><td>Future</td></tr>\n<tr>\n<td rowspan=\"7\"><a href=\"2023/sprint-214-update.md\" data-raw-source=\"[12 January 2023](2023/sprint-214-update.md)\"> 12 January 2023</a></td>\n<td>Extensions should display their Scopes</td><td>General</td><td>2022.1</td></tr>\n<td>Card resize logic in Delivery Plans</td><td>Boards</td><td>2022.1</td></tr>\n<td>Batch update improvements</td><td>Boards</td><td>2022.1</td></tr>\n<td>Batch delete API</td><td>Boards</td><td>2022.1</td></tr>\n<td>Support for Tokyo version of ServiceNow</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>New predefined system variable</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>General Availability of templates support in YAML editor</td><td>Pipelines</td><td>Future</td></tr>\n<tr>\n<tr>\n<td rowspan=\"11\"><a href=\"2022/sprint-213-update.md\" data-raw-source=\"[8 December 2022](2022/sprint-213-update.md)\"> 8 December 2022</a></td>\n<td>Copy comment links</td><td>Boards</td><td>Future</td></tr>\n<td>Container Registry service connections can now use Azure Managed Identities</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Audit log events related to pipeline permissions</td><td>Pipelines</td><td>N/A</td></tr>\n<td>Ensure your organization only uses YAML pipelines</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Service hook for job state change</td><td>Pipelines</td><td>Future</td></tr>\n<td>New PAT scope required to update pipeline General Settings</td><td>Pipelines</td><td>Future</td></tr>\n<td>Fine-grained access management for agent pools</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Prevent granting all pipelines access to protected resources</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Improved security when building pull requests from forked GitHub repositories</td><td>Pipelines</td><td>Future</td></tr>\n<td>Macos-latest label will point to macos-12 image</td><td>Pipelines</td><td>N/A</td></tr>\n<td>Ubuntu-latest label will point to ubuntu-22.04 image</td><td>Pipelines</td><td>N/A</td></tr>\n<tr>\n<td rowspan=\"8\"><a href=\"2022/sprint-212-update.md\" data-raw-source=\"[2 November 2022](2022/sprint-212-update.md)\"> 2 November 2022</a></td>\n<td>Edit work item link types</td><td>Boards</td><td>Future</td></tr>\n<td>Create temporary query REST endpoint</td><td>Boards</td><td>2022.1</td></tr>    \n<td>@CurrentIteration macro in Delivery Plans</td><td>Boards</td><td>2022.1</td></tr>\n<td>Template Expressions in Repository Resource Definition</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Template Expressions in Container Resource Definition</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Audit Events for Changes to Approvals</td><td>Pipelines</td><td>Future</td></tr>\n<td>Task library exposes Agent hosting model</td><td>Pipelines</td><td>Future</td></tr>\n</tr>\n<td rowspan=\"5\"><a href=\"2022/sprint-211-update.md\" data-raw-source=\"[11 October 2022](2022/sprint-211-update.md)\"> 11 October 2022</a></td>\n<td>Create personal access tokens to deploy to the Marketplace</td><td>Platform</td><td>Future</td></tr>\n<td>Option to maintain hierarchy with filters</td><td>Boards</td><td>Future</td></tr>\n<td>Copy work item attachment URL</td><td>Boards</td><td>Future</td></tr>\n<td>Pipeline Agent supports Group Managed Service Accounts as service account</td><td>Pipelines</td><td>Future</td></tr>\n<td>Show Parent in Query Results Widget</td><td>Reporting</td><td>2022.1</td></tr>\n</tr>\n<td rowspan=\"6\"><a href=\"2022/sprint-210-update.md\" data-raw-source=\"[4 October 2022](2022/sprint-210-update.md)\"> 4 October 2022</a></td>\n<td>All Public REST APIs support granular PAT scopes</td><td>General</td><td>2022.1</td></tr>\n<td>Move to column and move to swimlane</td><td>Boards</td><td>Future</td></tr>\n<td>Windows PowerShell task performance improvement</td><td>Pipelines</td><td>Future</td></tr>\n<td>Pipelines Agent on .NET 6 pre-announcement</td><td>Pipelines</td><td>Future</td></tr>\n<td>Node 16 task runner in pipeline agent</td><td>Pipelines</td><td>Future</td></tr>\n<td>New user interface for upstream package search</td><td>Artifacts</td><td>2022.1</td></tr>\n</tr>\n<td rowspan=\"8\"><a href=\"2022/sprint-209-update.md\" data-raw-source=\"[12 September 2022](2022/sprint-209-update.md)\"> 12 September 2022</a></td>\n<td>Increase Delivery Plans team limit from 15 to 20</td><td>Boards</td><td>2022.1</td></tr>\n<td>Fixed bug in Reporting Work Item Links Get API</td><td>Boards</td><td>2022.1</td></tr>\n<td>New Boards Hub bug fixes</td><td>Boards</td><td>2022.1</td></tr>\n<td>Disable showing the last commit message for a pipeline run</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Consumed resources and template parameters in Pipelines Runs Rest API</td><td>Pipelines</td><td>2022.1</td></tr>    \n<td>Add support for string split function in YAML expression</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Do not sync tags when fetching a Git repository</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>Updated brownout schedule for Ubuntu 18.04 images</td><td>Pipelines</td><td>N/A</td></tr>\n</tr>\n<td rowspan=\"3\"><a href=\"2022/sprint-208-update.md\" data-raw-source=\"[12 August 2022](2022/sprint-208-update.md)\"> 12 August 2022</a></td>\n<td>Improved error message when failing to load pipelines</td><td>Pipelines</td><td>2022.1</td></tr>\n<td>General availability of Ubuntu 22.04 for Azure Pipelines hosted pools</td><td>Pipelines</td><td>N/A</td></tr>\n<td>Announcing deprecation of Ubuntu 18.04 images</td><td>Pipelines</td><td>N/A</td></tr>\n</tr>\n<td rowspan=\"9\"><a href=\"2022/sprint-207-update.md\" data-raw-source=\"[28 July 2022](2022/sprint-207-update.md)\"> 28 July 2022</a></td>\n<td>Pipelines REST API Security Improvements</td><td>Pipelines</td><td>2022.1</td></tr>\n```\n\n----------------------------------------\n\nTITLE: Including Pipelines Feature Links for Sprint 166 (Markdown)\nDESCRIPTION: Uses a Markdown include directive to embed content from 'includes/pipelines/sprint-166-update-links.md'. This inserts links related to Azure Pipelines features updated in Sprint 166.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-166-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-166-update-links](includes/pipelines/sprint-166-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: HTML Timeline Table Structure\nDESCRIPTION: HTML table structure used to display Azure DevOps release notes in a chronological format with feature descriptions and version availability information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<tr><td rowspan=\"14\"><a href=\"2018/jul-10-vsts.md\" data-raw-source=\"[10 July 2018](2018/jul-10-vsts.md)\">10 July 2018</a></td>\n<td>Create pull requests without a default team as reviewer</td><td></td><td><em>2019</em></td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Table in Markdown\nDESCRIPTION: Markdown table defining access levels and permissions required for managing Kanban board columns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/add-columns.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Access levels** | At least [**Basic**](../../organizations/security/access-levels.md) access.|\n|**Permissions** | To configure team settings: Member of the **Project Administrators** security group or [**Team Administrator** role](../../organizations/settings/add-team-administrator.md).|\n```\n\n----------------------------------------\n\nTITLE: Adding FIELD Elements Required by ProcessConfiguration\nDESCRIPTION: Fields specified in the ProcessConfiguration.xml must be defined in the corresponding work item types. This example shows how to add missing custom fields to a UserStory work item type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_37\n\nLANGUAGE: xml\nCODE:\n```\n<AddPanel>\n   <Fields>\n      <Field refname=\"System.Title\" />\n      <Field refname=\"Fabrikam.Product\" />\n      <Field refname=\"Fabrikam.Technology\" />\n   </Fields>\n</AddPanel>\n```\n\nLANGUAGE: xml\nCODE:\n```\n      <FIELD name=\"Product\" refname=\"Fabrikam.Product\" type=\"String\" reportable=\"dimension\">\n     <FIELD name=\"Technology\" refname=\"Fabrikam.Technology\" type=\"String\" reportable=\"dimension\"> \n```\n\n----------------------------------------\n\nTITLE: Defining Work Item Form Events in Markdown Table\nDESCRIPTION: This markdown table defines various events for the Azure DevOps work item form API. It includes event names like onFieldChanged, onLoaded, onReset, onRefreshed, onSaved, and onUnloaded, along with their descriptions and arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/add-workitem-extension-sharedevents.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Event          | Event description    | Argument | Argument description     |\n|----------------|----------------------|----------|---------------------------|\n| `onFieldChanged` | Fired after a field has changed. If the field change ran rules that updated other fields, all these changes are part of a single event.          | ID       | The ID of the work item |\n| `changedFields`  | Array with the reference name of all changed fields.       | ID         | The ID of the work item   |\n| `onLoaded`       | Fired after the data gets loaded in the work item form, when the user opens a work item, or when the user navigates to another work item in the triage view.      | ID       | The ID of the work item |\n| `onReset`        | Fired after the user undoes the changes to the work item.    | ID         | The ID of the work item   |\n| `onRefreshed`    | Fired after the user refreshes the work item manually.       | ID       | The ID of the work item |\n| `onSaved`        | Fired after a work item is saved. For work items in a dialog, you should target the `ms.vss-work-web.work-item-notifications` type to ensure the event fires since once the dialog closes, this contribution type gets unloaded. For more information, see [Listen for events](#listenforevents). | ID       | The ID of the work item  |\n| `onUnloaded`     | Fired before the user closes the dialog, or before the user moves to another work item in the triage view.   | ID       | The ID of the work item  |\n```\n\n----------------------------------------\n\nTITLE: Internal Link to Azure DevOps Purchasing Information in Markdown\nDESCRIPTION: Markdown code for creating an internal link to a section about a simpler way to purchase Azure DevOps services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/administration/build-may-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [A simpler way to buy Azure DevOps](#a-simpler-way-to-buy-azure-devops)\n```\n\n----------------------------------------\n\nTITLE: Displaying Version-Specific Content for On-Premises Azure DevOps\nDESCRIPTION: Uses a moniker range to conditionally display content for on-premises Azure DevOps Server versions. This snippet shows limits specific to on-premises deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/object-limits.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"< azure-devops\"\n\n| Object | Limit |\n|--------|-------|\n| Long text field | 1-M characters |\n| Work item tags assigned to a work item | 100 |\n| Work item links assigned to a work item | 1,000 |\n| Attachments added to a work item | 100 |\n| Attachment size | 4 MB to 2 GB |\n| Query execution time  |  6 minutes |\n| Query results | 20,000 items |\n| Query length | 32,000 characters |\n| Shared queries under a folder | 999 queries |\n| Favorite queries per project | 200 queries |\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 146 Update Content in Markdown\nDESCRIPTION: This snippet includes a markdown file containing the main content of the Sprint 146 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-146-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update](../includes/boards/sprint-146-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Inserting an Image with Border in Markdown\nDESCRIPTION: This snippet inserts an image with a border in markdown, showing how to make a suggestion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-150-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Make a suggestion](../../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Displaying a Note Admonition in Markdown\nDESCRIPTION: Uses a Markdown admonition (`[!NOTE]`) to highlight important information regarding the feature rollout timeline. This is specific syntax often used in documentation platforms like Microsoft Docs to draw attention to key points.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-215-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\n> These features will roll out over the next two to three weeks.\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Board Controls\nDESCRIPTION: Table describing the user interface controls available on Azure DevOps Kanban boards, including navigation, filtering, and customization options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/kanban-overview.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Control                  | Function                      |\n|--------------------------|-------------------------------|\n```\n\n----------------------------------------\n\nTITLE: Restricting Work Item Reopening in XML Process\nDESCRIPTION: This XML snippet shows workflow transition rules that allow Testers to reopen a work item, but not members of the Developers group, after it has been closed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-samples.md#2025-04-22_snippet_7\n\nLANGUAGE: XML\nCODE:\n```\n<WORKFLOW>\n. . .  \n<TRANSITION from=\"Closed\" to=\"New\"  \n   for=\"[Project]\\Testers\"  \n   not=\"[Project]\\Developers\" \n   . . .  \n</TRANSITION> \n<TRANSITION from=\"Closed\" to=\"Active\"  \n   for=\"[Project]\\Testers\"  \n   not=\"[Project]\\Developers\" \n   . . .  \n</TRANSITION> \n. . .  \n</WORKFLOW>\n```\n\n----------------------------------------\n\nTITLE: Example of Publishing Test Run Results with tcm\nDESCRIPTION: Practical example of using the tcm command to publish a test run for a specific test suite and configuration. This command updates test points, assigns failures to a specific user, and includes the test results file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_13\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /publish /suiteid:167 /configid:9 /resultowner:\"Thomas Margand\" /resultsfile:\"c:\\temp\\ResultsForDeveloper.trx\" /assignfailurestouser:\"Bukhosi Bhengu\" /collection:https://fabrikamprime.visualstudio.com /teamproject:\"Fabrikam Fiber\"\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Git Repository Example in Slack\nDESCRIPTION: Example command showing how to subscribe to a specific Git repository using its URL. This creates default notification subscriptions for that repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-slack.md#2025-04-22_snippet_2\n\nLANGUAGE: slash command\nCODE:\n```\n/azrepos subscribe https://dev.azure.com/myorg/myproject/_git/myrepository\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Version-Specific Content Block\nDESCRIPTION: A moniker-based conditional block that displays Analytics implementation details specific to Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/what-is-analytics.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\\\"azure-devops\\\"\\n\\nAnalytics is enabled for all Azure DevOps Services projects and automatically populates itself with all available Azure DevOps data. Once populated, it updates itself as data changes occur. For more information, read [Data available in Analytics](./data-available-in-analytics.md) and [Performance and latency](performance-latency.md).\\n\\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: This snippet includes a markdown file containing next steps for users after the Sprint 158 update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-158-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Building Rust Project with Cargo\nDESCRIPTION: Cargo command to build the Rust project and download dependencies, which will populate the Azure Artifacts feed with copies of upstream packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_11\n\nLANGUAGE: command\nCODE:\n```\ncargo build\n```\n\n----------------------------------------\n\nTITLE: Azure Repos Code Search Proximity Operators\nDESCRIPTION: Example of using proximity operators in Azure Repos code search. The NEAR operator allows finding files where specified terms appear close to each other. Similar operators include BEFORE and AFTER for controlling term ordering in search results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-159-update.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nfoo NEAR bar\n```\n\n----------------------------------------\n\nTITLE: OData API URL Structure for On-Premises\nDESCRIPTION: URL pattern for accessing OData API metadata in on-premises Azure DevOps Server\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-api-version.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://{servername}:{port}/tfs/{CollectionName}/{ProjectName}/_odata/{version}/$metadata\n```\n\n----------------------------------------\n\nTITLE: Work Item Display States and Colors\nDESCRIPTION: Configuration for mapping workflow states to display colors for both text and charts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/extensions/dependency-tracker.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"New\": {\n \"textColor\": \"rgb(112, 112, 112)\",\n \"chartColor\": \"rgb(112, 112, 112)\",\n \"states\": [\n \"New\"\n]\n  },\n  \"Active\": {\n  \"textColor\": \"rgb(0, 122, 204)\",\n  \"chartColor\": \"rgb(0, 122, 204)\",\n  \"states\": [\n  \"Active\",\n  \"Resolved\"\n   ]\n },\n  \"Closed\": {\n \"textColor\": \"rgb(16, 124, 16)\",\n \"chartColor\": \"rgb(16, 124, 16)\",\n \"states\": [\n \"Closed\"\n  ]\n },\n  \"Removed\": {\n \"textColor\": \"rgb(204, 41, 61)\",\n \"chartColor\": \"rgb(204, 41, 61)\",\n \"states\": [\n \"Removed\"\n  ]\n },\n  \"Other\": {\n \"textColor\": \"rgb(178, 178, 178)\",\n \"chartColor\": \"rgb(178, 178, 178)\",\n \"states\": []\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Extension Manifest Configuration\nDESCRIPTION: JSON configuration for the extension manifest (vss-extension.json) defining extension properties, contributions, scopes, and included files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-hub.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\t\"manifestVersion\": 1,\n\t\t\"id\": \"sample-extension\",\n\t\t\"version\": \"0.1.0\",\n\t\t\"name\": \"My first sample extension\",\n\t\t\"description\": \"A sample Visual Studio Services extension.\",\n\t\t\"publisher\": \"fabrikamdev\",\n\t\t\"categories\": [\"Azure Boards\"],\n\t\t\"targets\": [\n\t\t\t{\n\t\t\t\t\"id\": \"Microsoft.VisualStudio.Services\"\n\t\t\t\t}\n\t\t\t],\n\t\t\"icons\": {\n\t\t\t\"default\": \"images/logo.png\"\n\t\t },\n\t\t\"contributions\": [\n\t\t\t{\n\t\t\t\t\"id\": \"Fabrikam.HelloWorld\",\n\t\t\t\t\"type\": \"ms.vss-web.hub\",\n\t\t\t\t\"description\": \"Adds a 'Hello' hub to the Work hub group.\",\n\t\t\t\t\"targets\": [\n\t\t\t\t\t\"ms.vss-work-web.work-hub-group\"\n\t\t\t\t\t],\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"name\": \"Hello\",\n\t\t\t\t\t\"order\": 99,\n\t\t\t\t\t\"uri\": \"hello-world.html\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"scopes\": [\n\t\t\t\"vso.work\"\n\t\t],\n\t\t\"files\": [\n\t\t\t{\n\t\t\t\t\"path\": \"hello-world.html\", \"addressable\": true\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"path\": \"sdk/scripts\", \"addressable\": true\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"path\": \"images/logo.png\", \"addressable\": true\n\t\t\t}\n\t\t]\n\t}\n```\n\n----------------------------------------\n\nTITLE: Including Version Information in Markdown\nDESCRIPTION: This snippet shows how to include version-specific information in a markdown document for Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/configure-hierarchical-teams.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown Documentation\nDESCRIPTION: Markdown include directive to import the next steps section from an external file for the Azure Boards release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-209-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Repository Advanced Security Publishing in Azure DevOps Pipelines (YAML)\nDESCRIPTION: This YAML pipeline demonstrates two methods to correctly publish advanced security scan results to the target repository in multi-repository scenarios using Azure DevOps. The first job, using the 'advancedsecurity.publish.repository' variable, explicitly specifies the destination repository for SARIF results submission. The second job, utilizing 'advancedsecurity.publish.repository.infer', enables the publish task to infer the appropriate repository from the build agent's working directory. It leverages tasks like 'TemplateAnalyzerSarif@1' for scanning and 'AdvancedSecurity-Publish@1' for publishing results. Required dependencies include Azure DevOps Pipelines, connected Git repositories, and the relevant Advanced Security tasks. Ensure the repositories and tasks referenced exist and follow the naming conventions, and note that repository aliases or explicit checkouts must be configured as needed for your scenario.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/ghazdo/sprint-253-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n  trigger:\n  - main\n\nresources:\n  repositories:\n    - repository: BicepGoat\n      type: git\n      name: BicepGoat\n      ref: refs/heads/main\n      trigger:\n        - main\n\njobs:\n  # Explicit - `advancedsecurity.publish.repository` explicitly defines the repository to submit SARIF to.\n  - job: \"AdvancedSecurityCodeScanningExplicit\"\n    displayName: \"\\ud83d\\udee1 Infrastructure-as-Code Scanning (Explicit)\"\n    variables:\n      advancedsecurity.publish.repository: $[ convertToJson(resources.repositories['BicepGoat']) ]\n    steps:\n      - checkout: BicepGoat\n      - task: TemplateAnalyzerSarif@1\n        displayName: Scan with Template Analyzer\n      - task: AdvancedSecurity-Publish@1\n        displayName: Publish to IaC Scanning Results to Advanced Security\n\n\n  # Infer - `advancedsecurity.publish.repository.infer` specifies that the `AdvancedSecurity-Publish` must\n  # infer repository to submit SARIF to from the working directory on the build agent.\n  - job: \"AdvancedSecurityCodeScanningInfer\"\n    displayName: \"\\ud83d\\udee1 Infrastructure-as-Code Scanning (Infer)\"\n    variables:\n      advancedsecurity.publish.repository.infer: true\n    steps:\n      - checkout: BicepGoat\n      - task: TemplateAnalyzerSarif@1\n        displayName: Scan with Template Analyzer\n      - task: AdvancedSecurity-Publish@1\n        displayName: Publish to IaC Scanning Results to Advanced Security\n```\n\n----------------------------------------\n\nTITLE: Valid Link Types Configuration in XML\nDESCRIPTION: Demonstrates valid LINKTYPE element statements for WorkItems.xml plugin file. Shows supported link type configurations including Affects, SharedStep, TestedBy, and SharedParameterLink.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_24\n\nLANGUAGE: xml\nCODE:\n```\n      <LINKTYPES>\n        <LINKTYPE fileName=\"WorkItem Tracking\\LinkTypes\\Affects.xml\" />\n        <LINKTYPE fileName=\"WorkItem Tracking\\LinkTypes\\SharedStep.xml\" />\n        <LINKTYPE fileName=\"WorkItem Tracking\\LinkTypes\\TestedBy.xml\" />\n        <LINKTYPE fileName=\"WorkItem Tracking\\LinkTypes\\SharedParameterLink.xml\" />\n      </LINKTYPES>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 149 Update Content in Markdown\nDESCRIPTION: Markdown include directive for main Sprint 149 update content related to reporting features\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/reporting/sprint-149-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-149-update](../includes/reporting/sprint-149-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding Work Items via Azure DevOps CLI\nDESCRIPTION: CLI command example for adding work items in Azure DevOps. This is referenced as an include file in the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/view-add-work-items.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n[!INCLUDE [temp](../includes/add-work-items-cli.md)]\n```\n\n----------------------------------------\n\nTITLE: Western Europe Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps services in the Western Europe region. Includes multiple SharePoint (shprod) and Team Foundation Server (tfsprod) instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\ntfsprodweu2ip1\t 52.236.147.103\n\t\t\nshprodweusu4ip1\t 52.142.238.243\n\t\t\ntfsprodweu5ip1\t 51.144.61.32\n\t\t\ntfsprodweu3ip1\t 52.236.147.236\n\t\t\ntfsprodweu6ip1\t 40.74.28.0\n\ntfsprodweusu4ip1 52.142.235.223\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 147 Update Links in Markdown\nDESCRIPTION: Markdown include statement for Sprint 147 update links related to Azure Artifacts\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/artifacts/sprint-147-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-147-update-links](../includes/artifacts/sprint-147-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Conditional Execution Based on Trigger Type\nDESCRIPTION: Condition syntax to exclude a pipeline step, job, or stage from PR validations using the Build.Reason system variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ci-triggers5.md#2025-04-22_snippet_0\n\nLANGUAGE: expression\nCODE:\n```\ncondition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Feature Links for Sprint 146 Update\nDESCRIPTION: This Markdown directive pulls in a file containing links associated with the Azure Pipelines features from the Azure DevOps Sprint 146 update. It allows for structured documentation by including content from a separate file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update-links](includes/pipelines/sprint-146-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Filter Icon in Markdown\nDESCRIPTION: This snippet demonstrates how to display the filter icon in markdown using an image tag with specific attributes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/navigation/filter-basics.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::image type=\"icon\" source=\"../../media/icons/filter-icon.png\" border=\"false\":::\n```\n\n----------------------------------------\n\nTITLE: Structuring Azure DevOps Roadmap Table in HTML\nDESCRIPTION: This HTML snippet creates a table listing upcoming features for Azure DevOps. Each row contains a link to the feature documentation and specifies the related service area. The table includes entries for Pipelines, Artifacts, Reporting, and Test Plans features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n   <tbody>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2022/checks-extensibility\" data-raw-source=\"[Checks extensibility](/azure/devops/release-notes/roadmap/2022/checks-extensibility)\">Checks extensibility</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/package-promote-task\" data-raw-source=\"[Package promote task in Azure Pipelines](/azure/devops/release-notes/roadmap/package-promote-task)\">Package promote task in Azure Pipelines</a></td>\n        <td>Artifacts</td>\n      </tr>\n      <!-- ... more table rows ... -->\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2025/testplans/customizable-flaky-test\" data-raw-source=\"[Customizable flaky test detection logic](/azure/devops/release-notes/roadmap/2025/testplans/customizable-flaky-test)\">Customizable flaky test detection logic</a></td>\n         <td>Test Plans</td>\n      </tr>\n   </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: VM Scale Set Update Task\nDESCRIPTION: Azure CLI task configuration to update the VM scale set with the newly created custom image version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-virtual-scale-set-java.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n- task: AzureCLI@2\n  inputs:\n    azureSubscription: '`YOUR_SUBSCRIPTION_ID`' #Authorize and in the task editor\n    ScriptType: 'pscore'\n    scriptLocation: 'inlineScript'\n    Inline: 'az vmss update --resource-group myVMSSResourceGroup --name vmssScaleSet --set virtualMachineProfile.storageProfile.imageReference.id=/subscriptions/<SUBSCRIPTION ID>/resourceGroups/myVMSSResourceGroup/providers/Microsoft.Compute/galleries/myVMSSGallery/images/MyImage/versions/0.0.$(Build.BuildId)'\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content using Markdown Directive\nDESCRIPTION: This Markdown directive includes a standard block of content, likely suggesting next steps, further reading, or related actions, from the common 'nextsteps.md' include file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/wiki/sprint-215-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Prerequisites Include Statement\nDESCRIPTION: Markdown include statement for query prerequisites section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/organize-queries.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/prerequisites-queries.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: Include directive for next steps section of the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-161-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 233 Update Links in Markdown\nDESCRIPTION: Markdown include directive that imports links related to the Azure Pipelines Sprint 233 update from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-233-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-233-update-links](../includes/pipelines/sprint-233-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Information in Markdown\nDESCRIPTION: This snippet includes a markdown file containing next steps information for Azure DevOps users after the Sprint 164 update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/general/sprint-164-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Link for Alert Dismissals Documentation in Azure DevOps\nDESCRIPTION: This markdown snippet creates a link to a section about alert dismissals for dependency scanning alerts in Advanced Security within the Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/ghazdo/sprint-224-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Alert dismissals for dependency scanning alerts in Advanced Security](#alert-dismissals-for-dependency-scanning-alerts-in-advanced-security)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 206 Update Details for Azure Boards (Markdown)\nDESCRIPTION: Uses a Markdown include directive, specific to the documentation system (likely DocFX), to insert the full content detailing the Sprint 206 updates for Azure Boards from a separate file. This allows detailed feature descriptions to be maintained separately.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-206-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-206-update](includes/boards/sprint-206-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: This Markdown include directive inserts standardized 'next steps' information from a shared file into the release notes page. This typically provides users with guidance or links to further resources after reviewing the update details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-238-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 216 Update Links for Reporting (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file path (`includes/reporting/sprint-216-update-links.md`). It's used to embed shared content, specifically the links pertaining to the Sprint 216 update for the Reporting section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-216-update-links](includes/reporting/sprint-216-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: OAuth Scopes Permission Table in Markdown\nDESCRIPTION: Table showing OAuth scopes categorized by service area, including scope names, privilege levels, descriptions, and inheritance relationships\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Scope | Name | High-privilege | Description | Inherits From |\n| -------- | ----- | ---- | --------- | ----------- | ------------- |\n| **Advanced Security** | `vso.advsec` | AdvancedSecurity (read) | Yes | Grants the ability to read alerts, result instances, analysis result instances. ||\n| | `vso.advsec_write` | AdvancedSecurity (read and write) | Yes |Grants the ability to upload analyses in sarif | `vso.advsec` |\n| | `vso.advsec_manage` | AdvancedSecurity (read, write, and manage) | Yes |Grants the ability to upload analyses in sarif | `vso.advsec_write` |\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 238 Update Details in Markdown\nDESCRIPTION: This directive dynamically incorporates the main content describing the features and changes introduced in the Sprint 238 update from a separate Markdown file. It allows for modular documentation management within the Microsoft Docs system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-238-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-238-update](../includes/ghazdo/sprint-238-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Linking to GitHub Forked PR Build Section\nDESCRIPTION: This Markdown snippet creates an internal link within the documentation. It points to a section identified by the anchor `#building-prs-from-forked-github-repositories`, providing navigation to information about building pull requests from forked repositories on GitHub.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-229-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Building PRs from forked GitHub repositories](#building-prs-from-forked-github-repositories)\n```\n\n----------------------------------------\n\nTITLE: Embedding YouTube Video in Markdown\nDESCRIPTION: This snippet demonstrates how to embed a YouTube video in a markdown document using an HTML iframe. The video appears to be an overview of the new features in the Sprint 155 update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-155-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!VIDEO https://youtube.com/embed/fS5Q3Y2AZZQ]\n```\n\n----------------------------------------\n\nTITLE: Accessing Maven Package API Endpoint for Project Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting Maven packages in a project scoped feed using the REST API. The endpoint requires the Maven coordinates and supports JSON Patch operations for view management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_7\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/groups/{groupId}/artifacts/{artifactId}/versions/{version}?api-version=7.1-preview.1\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directives for Azure DevOps Terms\nDESCRIPTION: A series of INCLUDE directives that pull in definitions for various Azure DevOps terms from external template files. These includes are used to maintain consistent terminology across documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/navigation/glossary.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../../includes/glossary-terms/taskboard.md)]\n\n[!INCLUDE [temp](../../includes/glossary-terms/teams.md)]\n\n[!INCLUDE [temp](../../includes/glossary-terms/tfvc-repo.md)]\n\n[!INCLUDE [temp](../../includes/glossary-terms/widgets.md)]\n\n[!INCLUDE [temp](../../includes/glossary-terms/work-items.md)]\n\n[!INCLUDE [temp](../../includes/glossary-terms/work-item-types.md)]\n```\n\n----------------------------------------\n\nTITLE: TFVC Conflict Table Row Format\nDESCRIPTION: Example of how individual conflict scenarios are formatted in the documentation table using custom markdown syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/resolve-team-foundation-version-control-conflicts.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   Non-conflicting content changes were made in each version of a file.\n   :::column-end:::\n   :::column span=\"1\":::\n   In the file version on the left, a **zero** was added at the beginning. In the file on the right, a **three** was added at the end:\n   :::column-end:::\n   :::column span=\"1\":::\n   **Conflicts with any content changes**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Displaying Feedback Suggestion Image (Markdown)\nDESCRIPTION: Markdown snippet using a specific div class ('mx-imgBorder') commonly used in Microsoft Docs to add a border around an image. This image shows users how to provide feedback or make suggestions via the help menu.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-177-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[!div class=\"mx-imgBorder\"] \n![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Using Go Get Command in Azure Repos\nDESCRIPTION: Demonstrates the usage of the go get command for downloading packages and dependencies within an Azure DevOps repository. The command allows developers to fetch packages specified by import paths along with their dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-153-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\ngo get\n```\n\n----------------------------------------\n\nTITLE: Skipping stages in Azure DevOps YAML pipelines\nDESCRIPTION: Shows the syntax for conditionally skipping stages in an Azure DevOps YAML pipeline based on specific conditions or variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-162-update-links.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Skipping stages in a YAML pipeline\n```\n\n----------------------------------------\n\nTITLE: Using a declaration statement for pre-declaring resources in YAML pipelines\nDESCRIPTION: Example of the new 'uses' statement syntax for pre-declaring resources in Azure DevOps YAML pipelines. This feature was introduced in Sprint 181.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/sprint-181-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nuses:\n```\n\n----------------------------------------\n\nTITLE: Including sprint-202 update links for General section\nDESCRIPTION: Markdown include directive for general sprint 202 update links\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-202-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update-links](includes/general/sprint-202-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including version-specific content in Azure DevOps documentation\nDESCRIPTION: This snippet demonstrates how to include version-specific content in Azure DevOps documentation using a predefined include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/manage-pats-with-policies-for-administrators.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-eq-azure-devops](../../includes/version-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Feature Roadmap Table for Azure DevOps Server\nDESCRIPTION: HTML table structure displaying the planned features for Azure DevOps Server, organized by timeframe (2025 H2 and Future) and categorized by area (Boards, Pipelines, General, Repos). Each feature includes a link to detailed documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<table>\n    <thead>\n        <tr>\n            <th>Timeframe</th>\n            <th>Feature</th>\n            <th>Area</th>\n        </tr>\n    </thead>\n    <tbody>         \n      <tr>\n      <td rowspan=\"19\"><strong>2025 H2</strong></td>\n       <td><a href=\"/azure/devops/release-notes/2024/sprint-233-update#team-automation-rules-is-generally-available\" data-raw-source=\"[Automate rules for updating work items](/azure/devops/release-notes/2024/sprint-233-update#team-automation-rules-is-generally-available)\">Automated team work item rules</a></td>\n       <td>Boards</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/2024/boards/sprint-237-update\" data-raw-source=\"[Add link to GitHub commit or pull request from work item](/azure/devops/release-notes/2024/boards/sprint-237-update)\">Add link to GitHub commit or pull request from work item</a></td>\n        <td>Boards</td>         \n      </tr> \n      <tr>\n         <td><a href=\"/azure/devops/release-notes/2024/sprint-235-update#show-github-pull-request-details-preview\" data-raw-source=\"[Show more details about a GitHub pull request](/azure/devops/release-notes/2024/sprint-235-update#show-github-pull-request-details-preview)\">Show more details about a GitHub pull request</a></td>\n         <td>Boards</td>      \n      </tr>       \n      <tr>\n        <td><a href=\"/azure/devops/release-notes/2023/boards/sprint-231-update\" data-raw-source=\"[Markdown editor for work item comments](/azure/devops/release-notes/2023/boards/sprint-231-update)\">Markdown editor for work item comments</a></td>\n        <td>Boards</td>\n      </tr>   \n        <td><a href=\"/azure/devops/release-notes/roadmap/2023/new-boards-hub-on-by-default\" data-raw-source=\"[New Boards Hub on by default](/azure/devops/release-notes/roadmap/2023/new-boards-hub-on-by-default)\">New Boards Hub on by default</a></td>\n        <td>Boards</td>\n      </tr>     \n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2024/github-branch\" data-raw-source=\"[Create branch on GitHub repository from work item](/azure/devops/release-notes/roadmap/2024/github-branch)\">Create branch on GitHub repository from work item</a></td>\n         <td>Boards</td>        \n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2024/scale-github-repos\" data-raw-source=\"[Improve scalability when searching and linking GitHub repos to an Azure DevOps project](/azure/devops/release-notes/roadmap/2024/scale-github-repos)\">Improve scalability when searching and linking GitHub<br/>repos to an Azure DevOps project</a></td>\n         <td>Boards</td>         \n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2024/github-branch\" data-raw-source=\"[Create branch on GitHub repository from work item](/azure/devops/release-notes/roadmap/2024/github-branch)\">Create branch on GitHub repository from work item</a></td>\n         <td>Boards</td>        \n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2024/scale-github-repos\" data-raw-source=\"[Improve scalability when searching and linking GitHub repos to an Azure DevOps project](/azure/devops/release-notes/roadmap/2024/scale-github-repos)\">Improve scalability when searching and linking GitHub<br/>repos to an Azure DevOps project</a></td>\n         <td>Boards</td>         \n      </tr> \n       </tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2022/in-the-box-tasks-on-16\" data-raw-source=\"[All in-the-box tasks run on Node 16](/azure/devops/release-notes/roadmap/2022/in-the-box-tasks-on-16)\">All in-the-box tasks run on Node 16</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2023/install-old-runner\" data-raw-source=\"[Ability to download and install old runners on self-hosted agents](/azure/devops/release-notes/roadmap/2023/install-old-runner)\">Ability to download and install old runners on self-hosted agents</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2022/pick-next-runner\" data-raw-source=\"[Ability to run tasks on next available Node version, if targeted version is not available](/azure/devops/release-notes/roadmap/2022/pick-next-runner)\">Ability to run tasks on next available Node version, if targeted version is not available</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2022/no-node-6-on-hosted-agents\" data-raw-source=\"[Removal of Node 6 and 10 from Microsoft hosted pools](/azure/devops/release-notes/roadmap/2022/no-node-6-on-hosted-agents)\">Removal of Node 6 and 10 from Microsoft hosted pools</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2022/checks-sequencing\" data-raw-source=\"[Sequencing approvals and other checks](/azure/devops/release-notes/roadmap/2022/checks-sequencing)\">Sequencing approvals and other checks</a></td>\n        <td>Pipelines</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/in-product-recommendations-for-secure-settings\" data-raw-source=\"[In-product recommendations for secure settings](/azure/devops/release-notes/roadmap/in-product-recommendations-for-secure-settings)\">In-product recommendations for secure settings</a></td>\n        <td>Pipelines</td>\n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2024/manual-queuing-of-stages\" data-raw-source=\"[Manual queuing of stages](/azure/devops/release-notes/roadmap/2024/manual-queuing-of-stages)\">Manual queuing of stages</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2024/rerun-single-stage\" data-raw-source=\"[Rerun single stage](/azure/devops/release-notes/roadmap/2024/rerun-single-stage)\">Rerun single stage</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2024/stage-concurrency\" data-raw-source=\"[Stage-level concurrency](/azure/devops/release-notes/roadmap/2024/stage-conncurrency)\">Stage-level concurrency</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2024/stage-traceability\" data-raw-source=\"[Stage-level traceability](/azure/devops/release-notes/roadmap/2024/stage-traceability)\">Stage-level traceability</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <td rowspan=\"36\"><strong>Future</strong></td>\n        <td><a href=\"/azure/devops/release-notes/roadmap/disable-alternate-auth-policy\" data-raw-source=\"[Policies to disable authentication methods](/azure/devops/release-notes/roadmap/disable-alternate-auth-policy)\">Policies to disable authentication methods</a></td>\n        <td>General</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2023/substring-search\" data-raw-source=\"[Substring search](/azure/devops/release-notes/roadmap/2023/substring-search)\">Substring search</a></td>\n        <td>General</td>\n      </tr>\n       <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2023/commits-search\" data-raw-source=\"[Commits search](/azure/devops/release-notes/roadmap/2023/commits-search)\">Commits search</a></td>\n        <td>General</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2024/pr-search\" data-raw-source=\"[PR search](/azure/devops/release-notes/roadmap/2024/pr-search)\">PR search</a></td>\n        <td>General</td>\n      </tr>                 \n      <tr>\n       <td>\n         <a href=\"/azure/devops/release-notes/2024/sprint-237-update#new-boards-hub-on-by-default\" data-raw-source=\"[New Boards Hub](/azure/devops/release-notes/2024/sprint-237-update#new-boards-hub-on-by-default)\">New Boards Hub</a>\n        </td>\n        <td>Boards</td>\n      </tr> \n      <tr>          \n        <td><a href=\"/azure/devops/release-notes/roadmap/2023/work-item-support-for-markdown\" data-raw-source=\"[Markdown editor for work item multi-line fields](/azure/devops/release-notes/roadmap/2023/work-item-support-for-markdown)\">Markdown editor for work item multi-line fields</a></td>\n        <td>Boards</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/track-repo-cloning\" data-raw-source=\"[Track repo cloning](/azure/devops/release-notes/roadmap/track-repo-cloning)\">Track repo cloning</a></td>\n        <td>Repos</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2022/remove-node-6\" data-raw-source=\"[Stop shipping Node 6 and Node 10 runners with the agent](/azure/devops/release-notes/roadmap/2022/remove-node-6)\">Stop shipping Node 6 and Node 10 runners with the agent</a></td>\n        <td>Pipelines</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/2022/node-16-agent\" data-raw-source=\"[Ship a Node 16 only agent in addition to the one that has all three versions (6, 10, 16)](/azure/devops/release-notes/roadmap/2022/node-16-agent)\">Ship a Node 16 only agent in addition to the one that has all three versions (6, 10, 16)</a></td>\n        <td>Pipelines</td>\n      </tr>\n      <tr>\n        <td><a href=\"/azure/devops/release-notes/roadmap/support-pipelines-app\" data-raw-source=\"[Support Pipelines App with GitHub Enterprise](/azure/devops/release-notes/roadmap/support-pipelines-app)\">Support Pipelines App with GitHub Enterprise</a></td>\n        <td>Pipelines</td>\n      </tr>\n      <tr>\n         <td><a href=\"/azure/devops/release-notes/roadmap/2022/service-connections-in-checks\" data-raw-source=\"[Service connections in checks](/azure/devops/release-notes/roadmap/2022/service-connections-in-checks)\">Service connections in checks</a></td>\n         <td>Pipelines</td>\n      </tr>\n      <tr>\n```\n\n----------------------------------------\n\nTITLE: Setting Default Branch Path Reference\nDESCRIPTION: Code reference showing the main branch path notation used in Git repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/change-default-branch-instructions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nmain\n```\n\n----------------------------------------\n\nTITLE: Defining Project Access Requirements in Markdown Table\nDESCRIPTION: A markdown table that specifies that 'Project member' access is required. The table contains a link to documentation about adding users to a team project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/prerequisites-project-member-only.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Project access** | [Project member](../organizations/security/add-users-team-project.md). |\n```\n\n----------------------------------------\n\nTITLE: Visual Studio 2019 WITADMIN Path\nDESCRIPTION: File path for accessing the witadmin tool in Visual Studio 2019 installations. Supports Community, Professional, and Enterprise editions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/witadmin-run-tool.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n%programfiles(x86)%\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\n```\n\n----------------------------------------\n\nTITLE: Setting Java Version for Ant/Gradle/Maven Tasks\nDESCRIPTION: This code shows how to select Java 10 and its architecture for Ant, Gradle or Maven build tasks in VSTS build pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/may-07-vsts.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Ant@1\n  inputs:\n    jdkVersionOption: '1.10'\n    jdkArchitectureOption: 'x64'\n```\n\n----------------------------------------\n\nTITLE: Displaying Bug Work Item Creation in Azure DevOps\nDESCRIPTION: Markdown code for embedding an image that shows how to create a new Bug work item in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/customize-process.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Screenshot showing Work, Work Items Page, Add New Work Item, Bug sequence.](media/process/add-custom-field-verify-bug.png)\n```\n\n----------------------------------------\n\nTITLE: Monitoring Template in Templates Repository\nDESCRIPTION: Template file demonstrating how to create a reusable monitoring wrapper for pipeline steps. The template accepts a list of steps as a parameter and surrounds them with monitoring start and stop scripts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-212-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# template.yml in repository Templates\nparameters:\n- name: steps\n  type: stepList\n  default: []\n\njobs:\n- job:\n  steps:\n  - script: ./startMonitoring.sh\n  - ${{ parameters.steps }}\n  - script: ./stopMonitoring.sh\n```\n\n----------------------------------------\n\nTITLE: Including sprint-202 update content for Azure Boards section\nDESCRIPTION: Markdown include directive for Azure Boards sprint 202 update content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-202-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update](includes/boards/sprint-202-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Listing Labels for a Specific User\nDESCRIPTION: Demonstrates how to use the tf labels command to display labels created by a particular user (jasonj in this case).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/labels-command.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nc:\\projects> tf labels /owner:jasonj\n```\n\n----------------------------------------\n\nTITLE: Listing Documentation Sections with Markdown - Markdown\nDESCRIPTION: This Markdown snippet creates a bulleted list with anchor links pointing to major release note sections in the Azure DevOps documentation. Each item directs users to a specific topic, aiding navigation. No dependencies are needed other than basic Markdown support in the documentation platform. The inputs are static section names and URLs, and outputs are rendered internal documentation links suitable for a table of contents or section overview.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-187-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n- [Change in .NET SDK preinstallation policy on Microsoft hosted Ubuntu agents](#change-in-net-sdk-preinstallation-policy-on-microsoft-hosted-ubuntu-agents)\n- [Permissions and checks on variable groups and secure files](#permissions-and-checks-on-variable-groups-and-secure-files)\n- [Preview of templates support in YAML editor](#preview-of-templates-support-in-yaml-editor)\n- [Ubuntu-16.04 will be removed from Microsoft-hosted pools in September 2021](#ubuntu-1604-will-be-removed-from-microsoft-hosted-pools-in-september-2021)\n```\n\n----------------------------------------\n\nTITLE: Safe Articles Note Include Statement in Markdown\nDESCRIPTION: Markdown include statement for inserting SAFe article notes\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-plan-track-boards.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/note-safe-articles.md)]\n```\n\n----------------------------------------\n\nTITLE: Breaking Changes Example - User Entity Schema\nDESCRIPTION: XML schema showing breaking changes in User entity structure with removed UserType property\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-api-version.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<EntityType Name=\"User\">\n    <Key>\n        <PropertyRef Name=\"UserSK\"/>\n    </Key>\n    <Property Name=\"UserSK\" Type=\"Edm.Guid\" Nullable=\"false\"/>\n    <Property Name=\"UserId\" Type=\"Edm.Guid\" Nullable=\"false\">\n        <Annotation Term=\"Display.DisplayName\" String=\"User Id\"/>\n    </Property>\n    <Property Name=\"UserName\" Type=\"Edm.String\">\n        <Annotation Term=\"Display.DisplayName\" String=\"User Name\"/>\n    </Property>\n    <Property Name=\"UserEmail\" Type=\"Edm.String\">\n        <Annotation Term=\"Display.DisplayName\" String=\"User Email\"/>\n    </Property>\n    <!-- User Type property has been removed -->\n</EntityType>\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: Markdown include directive for next steps section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-157-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Board Snapshot Data in OData\nDESCRIPTION: OData query that retrieves cumulative flow data for user stories from a specified team. Returns data grouped by date, column name, lane name, state, work item type, assigned user, and area path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-cfd.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/V3.0-preview/WorkItemBoardSnapshot?\n        $apply=filter(\n            Team/TeamName eq '{teamname}'\n            and BoardName eq 'Stories' \n            and DateValue ge {startdate}\n        )\n        /groupby(\n            (DateValue,ColumnName,LaneName,State,WorkItemType,AssignedTo/UserName,Area/AreaPath), \n            aggregate($count as Count)\n        )\n```\n\n----------------------------------------\n\nTITLE: Example of TCM Configuration Listing Command\nDESCRIPTION: This example demonstrates how to list test configurations for the 'Fabrikam Fiber' project hosted in the 'fabrikamprime' organization. The output shows configuration IDs and names for available test environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/test-different-configurations.md#2025-04-22_snippet_1\n\nLANGUAGE: tcm\nCODE:\n```\ntcm configs /list /collection:https://dev.azure.com/fabrikamprime /teamproject:\"Fabrikam Fiber\"\n\nId        Name\n--------- ----------------------------------------------------------------\n2         Windows 8\n7         Windows 7\n9         Google Chrome on Windows 10\n```\n\n----------------------------------------\n\nTITLE: Resetting Service Hooks Permissions for a Group in Azure DevOps\nDESCRIPTION: Command to reset all Service Hooks permissions for a specific group or user in Azure DevOps, removing all explicit permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/view-permission.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n> az devops security permission reset-all --id cb594ebe-87dd-4fc9-ac2c-6a10a4c92046 --subject <Group or user descriptor> --token PublisherSecurity/ac515e82-560c-4af8-845b-9f7f968d8e7b\n```\n\n----------------------------------------\n\nTITLE: Remove Label from Single File\nDESCRIPTION: Example showing how to remove a label named 'goodbuild' from a specific file in the version control system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/unlabel-command.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf unlabel goodbuild $/src/314.cs\n```\n\n----------------------------------------\n\nTITLE: Deploying database with SQL scripts using YAML pipeline\nDESCRIPTION: This YAML pipeline demonstrates the process of adding firewall rules, deploying a database using SQL scripts, and then removing the firewall rules. It uses Azure PowerShell tasks and inline PowerShell scripts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/azure-sqldb.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  AzureSubscription: '<SERVICE_CONNECTION_NAME>'\n  ResourceGroupName: '<RESOURCE_GROUP_NAME>'\n  ServerName: '<DATABASE_SERVER_NAME>'\n  ServerFqdn: '<DATABASE_FQDN>'\n  DatabaseName: '<DATABASE_NAME>'\n  AdminUser: '<DATABASE_USERNAME>'\n  AdminPassword: '<DATABASE_PASSWORD>'\n  SQLFile: '<LOCATION_OF_SQL_FILE_IN_$(Build.SourcesDirectory)>'\n\nsteps:\n- task: AzurePowerShell@5\n  displayName: 'Set Azure firewall rules'\n  inputs:\n    azureSubscription: '$(AzureSubscription)'\n    ScriptType: filePath\n    ScriptPath: '$(Build.SourcesDirectory)\\scripts\\SetAzureFirewallRule.ps1'\n    ScriptArguments: '-ServerName $(ServerName) -ResourceGroupName $(ResourceGroupName)'\n    azurePowerShellVersion: LatestVersion\n\n- task: PowerShell@2\n  inputs:\n  displayName: 'Install SqlServer module if not present'\n    targetType: 'inline'\n    script: |\n      if (-not (Get-Module -ListAvailable -Name SqlServer)) {\n          Install-Module -Name SqlServer -Force -AllowClobber\n      }\n\n- task: PowerShell@2\n  displayName: 'Deploy database'\n  inputs:\n    targetType: 'inline'\n    script: |\n      Invoke-Sqlcmd -InputFile $(SQLFile) -ServerInstance $(ServerFqdn) -Database $(DatabaseName) -Username $(AdminUser) -Password $(AdminPassword)\n\n- task: AzurePowerShell@5\n  displayName: 'Remove Azure firewall rules'\n  inputs:\n    azureSubscription: '$(AzureSubscription)'\n    ScriptType: filePath\n    ScriptPath: '$(Build.SourcesDirectory)\\scripts\\RemoveAzureFirewallRule.ps1'\n    ScriptArguments: '-ServerName $(ServerName) -ResourceGroupName $(ResourceGroupName)'\n    azurePowerShellVersion: LatestVersion\n```\n\n----------------------------------------\n\nTITLE: Accessing Organization URL in Azure DevOps\nDESCRIPTION: The URL pattern used to access an Azure DevOps organization. This is needed when navigating to organization settings to manage parallel jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/licensing/concurrent-jobs.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Configuration Prerequisites Include Statement\nDESCRIPTION: Markdown include statement for dashboard prerequisites documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/add-widget-to-dashboard.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/dashboard-prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Project URL Format\nDESCRIPTION: URL format for accessing a specific project within an Azure DevOps organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/make-project-public.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Oganization}{Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Querying Azure DevOps Approvals REST API\nDESCRIPTION: This example shows a GET request to the Azure DevOps Approvals Query REST API (version 7.1-preview.1). It retrieves a list of pending approvals specifically assigned to the user identified by the `userId` parameter. The `state=pending` parameter filters the results to include only approvals that are currently awaiting action.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-224-update.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nGET https://dev.azure.com/fabrikamfiber/fabrikam-chat/_apis/pipelines/approvals?api-version=7.1-preview.1&userId=00aa00aa-bb11-cc22-dd33-44ee44ee44ee&state=pending\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Documentation Navigation Links in Markdown\nDESCRIPTION: Markdown formatted list of navigation links to different sections of Azure DevOps documentation covering features like AKS authentication, Markdown preview in pull requests, build policies, and commit author email blocking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-158-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Use service account based authentication to connect to AKS](#use-service-account-based-authentication-to-connect-to-aks)\n- [Preview Markdown files in pull request Side-by-side diff](#preview-markdown-files-in-pull-request-side-by-side-diff)\n- [Build policy expiration for manual builds](#build-policy-expiration-for-manual-builds)\n- [Add a policy to block commits based on the commit author email](#add-a-policy-to-block-commits-based-on-the-commit-author-email)\n```\n\n----------------------------------------\n\nTITLE: Project MANAGE_SYSTEM_PROPERTIES Permission\nDESCRIPTION: Permission namespace for managing project metadata via the Set Project Properties REST API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nProject, MANAGE_SYSTEM_PROPERTIES\n```\n\n----------------------------------------\n\nTITLE: Displaying Metrics Table in Markdown\nDESCRIPTION: This snippet shows a markdown table listing available metrics for Managed DevOps Pools, including their units, aggregations, and dimensions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/monitor-pool.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Metric | Unit | [Aggregations](/azure/azure-monitor/essentials/metrics-aggregation-explained) | [Dimensions](/azure/azure-monitor/essentials/analyze-metrics#use-dimension-filters-and-splitting) |\n|---|---|---|---|\n| **AllocationDurationMS**<br>Average pool request duration | Milliseconds | Average | `Image`, `PoolId`, `ResourceRequestType`, `Type` |\n| **Allocated**<br>Number of Azure DevOps Agents with jobs currently running | Count | Average, Min, Max | `Images`, `PoolId`, `ProviderName`, `SKU` |\n| **NotReady**<br>Number of Azure DevOps Agents that are not set up for testing | Count | Average, Min, Max | `Images`, `PoolId`, `ProviderName`, `SKU` |\n| **PendingReimage**<br>Number of Azure DevOps Agents in the process of being reimaged | Count | Average, Min, Max | `Images`, `PoolId`, `ProviderName`, `SKU` |\n| **PendingReturn**<br>Number of Azure DevOps Agents that are post-cleanup, waiting to be deleted (which occur in batches) | Count | Average, Min, Max | `Images`, `PoolId`, `ProviderName`, `SKU` |\n| **Provisioned**<br>Number of Azure DevOps Agents currently up | Count | Average, Min, Max | `Images`, `PoolId`, `ProviderName`, `SKU` |\n| **Ready**<br>Number of Azure DevOps Agents present that are prepared to accept a job | Count | Average, Min, Max | `Images`, `PoolId`, `ProviderName`, `SKU` |\n| **Starting**<br>Number of Azure DevOps Agents being prepared | Count | Average, Min, Max | `Images`, `PoolId`, `ProviderName`, `SKU` |\n| **Total**<br>Total number of Azure DevOps Agents | Count | Average, Min, Max | `Images`, `PoolId`, `ProviderName`, `SKU` |\n| **Count**<br>Total number of agents provisioned, grouped by status | Count | Count | `ErrorCode`, `FailureStage`, `PoolId`, `RequestType`, `Status`, `Type` |\n```\n\n----------------------------------------\n\nTITLE: Defining Moniker Range for Non-Azure DevOps\nDESCRIPTION: Markdown snippet defining a moniker range for content not specific to Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-lookup-guide.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"< azure-devops\"\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for Azure DevOps Updates\nDESCRIPTION: HTML table structure displaying Azure DevOps feature updates with columns for release date, feature description, service area, and availability year.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<tr><td>Inline sprint burndown using story points</td><td>Reporting</td><td>2020</td></tr>\n<tr><td>Short and readable Wiki page URLs</td><td>Wiki</td><td>2020</td></tr>\n<tr><td>Mermaid diagram support in wiki</td><td>Wiki</td><td>Future</td></tr>\n```\n\n----------------------------------------\n\nTITLE: Creating a Next Steps Action Button in Markdown\nDESCRIPTION: This snippet creates a 'Next Steps' action button linking to Azure DevOps using Markdown syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/wiki/sprint-146-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Analytics Sample Reports Links in Markdown\nDESCRIPTION: A markdown formatted list of links to various Azure DevOps analytics sample reports, including bug tracking, feature progress, burndown charts, and cycle time analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/includes/sample-fulllist.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Open bugs](../sample-boards-openbugs.md)  \n- [Bug trend](../sample-boards-bugtrend.md)  \n- [Rollup](../sample-boards-rollup.md)   \n- [Feature progress](../sample-boards-featureprogress.md)  \n- [Work items and direct links](../sample-boards-directlinks.md)  \n- [Release burndown](../sample-boards-releaseburndown.md)  \n- [Sprint burndown](../sample-boards-sprintburndown.md)  \n- [Cumulative Flow Diagram (CFD)](../sample-boards-cfd.md)  \n- [Lead/Cycle Time](../sample-boards-leadcycletime.md)\n```\n\n----------------------------------------\n\nTITLE: Implementing Info Alert with Community Link in HTML\nDESCRIPTION: Creates an info-style alert box containing a help message and hyperlink to the Azure DevOps Services Developer Community. Uses Bootstrap alert classes for styling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/_data/get-help.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"alert alert-info\">\n    <strong>Need help?</strong> Post questions to the <a href=\"https://go.microsoft.com/fwlink/?LinkId=615292\" data-raw-source=\"[Azure DevOps Services Developer Community](https://go.microsoft.com/fwlink/?LinkId=615292)\">Azure DevOps Services Developer Community</a>.\n</div>\n```\n\n----------------------------------------\n\nTITLE: TypeFields Configuration for Scrum Process\nDESCRIPTION: Specification of required TypeField elements for the Scrum process, including system fields, scheduling fields, and feedback related fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_30\n\nLANGUAGE: xml\nCODE:\n```\n<TypeFields>\n    <TypeField refname=\"System.AreaPath\" type=\"Team\" />\n    <TypeField refname=\"Microsoft.AzureDevOps.Scheduling.RemainingWork\" type=\"RemainingWork\" format=\"format h\" />\n    <TypeField refname=\"Microsoft.AzureDevOps.Common.BacklogPriority\" type=\"Order\" />\n    <TypeField refname=\"Microsoft.AzureDevOps.Scheduling.Effort\" type=\"Effort\" />\n    <TypeField refname=\"Microsoft.AzureDevOps.Common.Activity\" type=\"Activity\" />\n    <TypeField refname=\"Microsoft.AzureDevOps.Feedback.ApplicationStartInformation\" type=\"ApplicationStartInformation\" />\n    <TypeField refname=\"Microsoft.AzureDevOps.Feedback.ApplicationLaunchInstructions\" type=\"ApplicationLaunchInstructions\" />\n    <TypeField refname=\"Microsoft.AzureDevOps.Feedback.ApplicationType\" type=\"ApplicationType\">\n        <TypeFieldValues>\n            <TypeFieldValue value=\"Web application\" type=\"WebApp\" />\n            <TypeFieldValue value=\"Remote machine\" type=\"RemoteMachine\" />\n            <TypeFieldValue value=\"Client application\" type=\"ClientApp\" />\n        </TypeFieldValues>\n    </TypeField>\n</TypeFields>\n```\n\n----------------------------------------\n\nTITLE: Creating a Styled Call-to-Action Link (Markdown Extension)\nDESCRIPTION: This uses a Microsoft Docs specific Markdown extension (`[!div class=\"nextstepaction\"]`) to style the subsequent Markdown link. It renders the link as a prominent call-to-action button, directing users to Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"] \n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 233 Update Links in Markdown\nDESCRIPTION: This line uses a Markdown include directive specific to the documentation platform (likely Microsoft Docs). It embeds the content of the specified file, which is expected to contain hyperlinks related to the Sprint 233 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/boards/sprint-233-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-233-update-links](../includes/boards/sprint-233-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps IPv6 Address Ranges for Firewall Configuration\nDESCRIPTION: List of IPv6 address ranges that need to be allowed in firewall rules to permit traffic to Azure DevOps following a front-end routing migration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-153-update.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n* 2620:1ec:4::/48\n* 2620:1ec:a92::/48\n* 2620:1ec:21::/48\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Update Documentation Structure\nDESCRIPTION: Basic markdown structure showing the documentation layout with include statements for Sprint 160 update content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-160-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Azure Pipelines - Sprint 160 Update\ndescription: See the Sprint 160 feature updates for Azure Pipelines, including next steps.\nauthor: gloridelmorales\nms.author: glmorale\nms.date: 11/13/2019\n---\n\n# Azure Pipelines - Sprint 160 Update\n\n## Features\n\n[!INCLUDE [sprint-160-update-links](../includes/pipelines/sprint-160-update-links.md)]\n\n[!INCLUDE [sprint-160-update](../includes/pipelines/sprint-160-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n\nThanks,\n\n[!INCLUDE [sprint-160](../includes/signer/sprint-160.md)]\n```\n\n----------------------------------------\n\nTITLE: Project Collection Administrators Permissions Block\nDESCRIPTION: Markdown code block showing included content for collection-level permissions that lists what Project Collection Administrators can do.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/manage-organization-collection.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [collection-level-permissions](../organizations/security/includes/collection-level-permissions.md)]\n```\n\n----------------------------------------\n\nTITLE: Version Control Include Statement\nDESCRIPTION: Markdown include statement for version control information in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/configure-customize.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Boolean Field Type Operators in Azure DevOps Queries\nDESCRIPTION: Operators supported for Boolean fields in Azure DevOps queries. Boolean fields support True/False values and can be used to query by assignment or workflow changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`= , <> , =[Field] , <>[Field]`\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Services Table in Markdown\nDESCRIPTION: Markdown table listing and describing the five main standalone services available with Azure DevOps: Azure Boards, Azure Repos, Azure Pipelines, Azure Test Plans, and Azure Artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/what-is-azure-devops.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Standalone service |Description |\n|-------------------|------------|\n|[Azure Boards](https://azure.microsoft.com/products/devops/boards/) | Delivers a suite of Agile tools to support planning and tracking work, code defects, and issues by using Kanban and Scrum methods. For more information about Azure Boards, see [What is Azure Boards?](../boards/get-started/what-is-azure-boards.md) |\n|[Azure Repos](https://azure.microsoft.com/products/devops/repos/) | Provides Git repositories or Team Foundation Version Control (TFVC) for source control of your code. For more information about Azure Repos, see [What is Azure Repos?](../repos/get-started/what-is-repos.md) |\n|[Azure Pipelines](https://azure.microsoft.com/products/devops/pipelines/) | Provides build and release services to support continuous integration and delivery of your applications. For more information about Azure Pipelines, see [What is Azure Pipelines?](../pipelines/get-started/what-is-azure-pipelines.md) |\n|[Azure Test Plans](https://azure.microsoft.com/products/devops/test-plans/) | Provides several tools to test your applications, including manual/exploratory testing and continuous testing. For more information about Azure Test Plans, see [Overview of Azure Test Plans](../test/overview.md). |\n|[Azure Artifacts](https://azure.microsoft.com/products/devops/artifacts/) | Allows teams to share packages such as Maven, npm, NuGet, and more from public and private sources and integrate package sharing into your pipelines. For more information about Azure Artifacts, see [Overview of Azure Artifacts](../pipelines/artifacts/artifacts-overview.md). |\n```\n\n----------------------------------------\n\nTITLE: Including Version Applicability Note in Markdown\nDESCRIPTION: This Markdown snippet uses the `[!INCLUDE ...]` directive to insert shared content from the specified file (`../../includes/version-lt-eq-azure-devops.md`). This included content typically renders a note or banner indicating the versions of Azure DevOps (Azure DevOps Server and Azure DevOps Services) to which the surrounding documentation applies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/ecosystems.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Version Control Template in Markdown\nDESCRIPTION: Markdown include statement for version control template used in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/manage-your-branches.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Identifier for Managing Test Configurations Permission\nDESCRIPTION: The symbolic identifier `Project, MANAGE_TEST_CONFIGURATIONS` enables users to create and delete test configurations within an Azure DevOps project. Test configurations define the different environments or setups under which tests are run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\nProject, MANAGE_TEST_CONFIGURATIONS\n```\n\n----------------------------------------\n\nTITLE: Specifying .NET SDK Version and Roll-Forward in global.json - JSON\nDESCRIPTION: This JSON snippet defines a 'global.json' file specifying a required .NET SDK version and explicitly sets 'rollForward' to 'disable'. When used in a pipeline with the new .NET SDK pre-installation policy, builds will fail if the requested version is not the latest installed patch version. Dependencies: .NET SDK and global.json support; Key parameters: 'sdk', 'version', 'rollForward'. Input is a JSON file, output is .NET SDK selection behavior during the build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-190-update.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"sdk\": {\n    \"version\": \"3.1.100\",\n    \"rollForward\": \"disable\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Linking GitHub Commits to Azure Boards Work Items with Syntax\nDESCRIPTION: Demonstrates the syntax for mentioning work items in GitHub commits to create links between GitHub and Azure Boards. This allows tracking work items from commits and can automatically complete items when merged.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-144-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nAB#{work item ID}\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Agent Authentication Documentation Block\nDESCRIPTION: Metadata block defining document properties including service type, manager, author, and last update date for Azure Pipelines documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/unix-authentication-types.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\nms.service: azure-devops-pipelines\nms.manager: mijacobs\nms.author: sdanie\nauthor: steved0x\nms.date: 02/12/2020\n---\n```\n\n----------------------------------------\n\nTITLE: Navigation Property Definitions\nDESCRIPTION: Examples of navigation property definitions showing both collection and referential constraint types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-metadata.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<NavigationProperty Name=\"Teams\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.Team)\"/>\n\n<NavigationProperty Name=\"Project\" Type=\"Microsoft.VisualStudio.Services.Analytics.Model.Project\">\n   <ReferentialConstraint ReferencedProperty=\"ProjectSK\" Property=\"ProjectSK\"/>\n</NavigationProperty>\n```\n\n----------------------------------------\n\nTITLE: Displaying organization URL format in Markdown\nDESCRIPTION: Shows the markdown code used to format an Azure DevOps organization URL using monospaced text formatting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/overview.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```https://dev.azure.com/{orgName}```\n```\n\n----------------------------------------\n\nTITLE: Installing azure-devops-node-api Package\nDESCRIPTION: Installs the azure-devops-node-api NPM package which simplifies making REST API calls to Azure Repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnpm install azure-devops-node-api \n```\n\n----------------------------------------\n\nTITLE: INCLUDE Statement in Markdown for Azure DevOps Version\nDESCRIPTION: Markdown include statement for displaying version-specific content in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/index.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata for Azure DevOps Documentation in YAML\nDESCRIPTION: This YAML snippet defines metadata for an include file in the Azure DevOps documentation. It specifies the Microsoft topic type for the content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/signer/sprint-155.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipeline for macOS-15 VM Image using YAML\nDESCRIPTION: This YAML snippet defines a pipeline job that runs on the new macOS-15 Sequoia hosted agent. It includes a bash step to print a message and display system version details via 'sw_vers'. Requires Azure DevOps Pipelines and access to the macOS-15 image. Inputs are the YAML job definition; outputs are the console outputs of the echo and sw_vers commands. The job must specify 'vmImage: macOS-15' in the pool configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-253-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- job: macOS15\\n  pool:\\n    vmImage: 'macOS-15'\\n  steps:\\n  - bash: |\\n      echo Hello from macOS Sequoia\\n      sw_vers\n```\n\n----------------------------------------\n\nTITLE: Including Task Group Permissions Table in Markdown\nDESCRIPTION: This code snippet uses a Markdown include statement to insert a table showing default permissions for security groups related to task groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/policies/permissions.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../../organizations/security/includes/task-groups.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization URL Format\nDESCRIPTION: The URL format for accessing an Azure DevOps organization's portal. Replace {Your_Organization} with your organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/alternate-credentials.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}\n```\n\n----------------------------------------\n\nTITLE: GUID Field Type Operators in Azure DevOps Queries\nDESCRIPTION: Operators supported for GUID fields in Azure DevOps queries. GUID fields store unique identifiers and support various comparison operators.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n`= , <> , > , < , >= , <= , =[Field], <>[Field], >[Field], <[Field], >=[Field], <=[Field], In, Not In, Was Ever`\n```\n\n----------------------------------------\n\nTITLE: Restoring Deleted Projects using REST API in Azure DevOps\nDESCRIPTION: REST API PATCH request to restore a deleted project in Azure DevOps. The request requires the organization name and projectId, and uses the API version 5.0-preview.3.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-144-update.md#2025-04-22_snippet_5\n\nLANGUAGE: REST API\nCODE:\n```\nPATCH https://dev.azure.com/{organization}/_apis/projects/{projectId}?api-version=5.0-preview.3\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 155 Update Links in Markdown\nDESCRIPTION: This snippet includes a reference to a file containing links related to the Sprint 155 update for Azure Repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-155-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update-links](../includes/repos/sprint-155-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Importing GitHub Repository URL into Azure Repos - Plaintext\nDESCRIPTION: This snippet provides the direct Git repository URL (https://github.com/MicrosoftDocs/pipelines-dotnet-core) intended to be pasted into the 'Clone URL' textbox of the Azure Repos import dialog. No code dependencies are required since this step is performed through the Azure DevOps web interface. The snippet is expected to be used in documentation for manual Git repository import and does not support authentication or automation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/includes/import-code-aspnet-core-docker.md#2025-04-22_snippet_0\n\nLANGUAGE: Plaintext\nCODE:\n```\nhttps://github.com/MicrosoftDocs/pipelines-dotnet-core\n```\n\n----------------------------------------\n\nTITLE: Including General Update Details using Markdown Directive\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/general/sprint-217-update.md`), likely containing detailed information about general updates for Sprint 217. It's used within the Azure DevOps documentation build system (Microsoft Docs).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-217-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update](includes/general/sprint-217-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Image Embedding for UI Screenshot\nDESCRIPTION: This Markdown snippet embeds an image showing the 'Invite new users' dialog box from the Azure DevOps web portal's Project Overview page.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/organization-management.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n![Screenshot shows Web portal, Project Overview page, Invite new users dialog box.](media/org-manage/invite-members-dialog.png)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 231 Azure Boards Update Details\nDESCRIPTION: This snippet uses a Markdown include directive specific to the Microsoft Docs platform to insert content from another file. It includes the detailed updates for Azure Boards corresponding to Sprint 231.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-231-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-231-update](includes/boards/sprint-231-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Azure DevOps Documentation Include\nDESCRIPTION: This YAML snippet defines the front matter for an Azure DevOps documentation include file. It specifies the topic type as 'include', which is likely used for content reuse across multiple pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/signer/sprint-159.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps in Markdown\nDESCRIPTION: This snippet includes a markdown file containing next steps information, likely common across multiple update documents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/testplans/sprint-154-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Service Status Indicators in Markdown\nDESCRIPTION: This code snippet shows how to embed an image in Markdown to display service status indicators for Azure DevOps Services. It uses the image type content syntax to reference a PNG file showing different status levels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/service-status-info.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::image type=\"content\" source=\"media/services-status/status-indicators.png\" alt-text=\"Service status indicators\":::\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Navigation Link in Markdown\nDESCRIPTION: Markdown formatting for a call-to-action link to Azure DevOps portal.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-153-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Creating a Counter Widget in HTML\nDESCRIPTION: This HTML structure demonstrates how to create a widget that displays a large count number. It uses the 'big-count' class to style the numeric value with a large font size.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/styles-from-widget-sdk.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"widget\">\n    <h2 class=\"title\">Counter widget</h2>\n\t<div class=\"big-count\">223</div>\n\t<div>Additional text</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Moniker Range Specification for Azure DevOps\nDESCRIPTION: Markdown block specifying version compatibility for Azure DevOps 2020 and newer versions, including a section header for pinning reports to dashboard.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/pin-incontext-report.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\">= azure-devops-2020\"\n\n## Pin in-context report to a dashboard\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Configuring Generic Webhook Triggers for Azure Pipelines in YAML\nDESCRIPTION: This YAML snippet shows how to define a webhook resource (`MyWebhookTrigger`) in an Azure Pipeline to enable triggers from external events. It links to an 'Incoming Webhook' service connection (`MyWebhookConnection`) and uses `filters` based on JSON payload paths (`repositoryName`, `action`) to control when the pipeline runs. The example also demonstrates accessing webhook payload data (e.g., `repositoryName`, `component.group`) within a PowerShell task using parameter syntax. Requires a pre-configured service connection and an external webhook source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-172-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\n```yml\nresources:\n  webhooks:\n    - webhook: MyWebhookTrigger          ### Webhook alias\n      connection: MyWebhookConnection    ### Incoming webhook service connection\n      filters:\n        - path: repositoryName      ### JSON path in the payload\n          value: maven-releases     ### Expected value in the path provided\n        - path: action\n          value: CREATED\nsteps:\n- task: PowerShell@2\n  inputs:\n    targetType: 'inline'\n    ### JSON payload data is available in the form of ${{ parameters.<WebhookAlias>.<JSONPath>}}\n    script: |\n      Write-Host ${{ parameters.MyWebhookTrigger.repositoryName}}\n      Write-Host ${{ parameters.MyWebhookTrigger.component.group}}\n```\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section (Markdown Directive)\nDESCRIPTION: This directive includes a standard 'next steps' section from a common file. This likely contains generic guidance or links relevant after reading the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-217-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Structure for Azure Artifacts Release Notes\nDESCRIPTION: Basic markdown structure for Azure Artifacts Sprint 156 release notes documentation, including YAML frontmatter and section includes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/artifacts/sprint-156-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Azure Artifacts - Sprint 156 Update\ndescription: See the Sprint 156 feature update for Azure Artifacts, including next steps.\nauthor: gloridelmorales\nms.author: glmorale\nms.date: 08/12/2019\n---\n\n# Azure Artifacts - Sprint 156 Update\n\n## Features\n\n[!INCLUDE [sprint-156-update-links](../includes/artifacts/sprint-156-update-links.md)]\n\n[!INCLUDE [sprint-156-update](../includes/artifacts/sprint-156-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n\nThanks,\n\n[!INCLUDE [sprint-156](../includes/signer/sprint-156.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 237 Update Links for GHASDO (Markdown)\nDESCRIPTION: This directive includes content from the specified markdown file ('../includes/ghazdo/sprint-237-update-links.md'), which likely contains navigation links related to the features updated in Sprint 237 for GitHub Advanced Security for Azure DevOps (GHASDO). This utilizes the include syntax specific to the Microsoft Docs authoring platform (Markdig extensions).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-237-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-237-update-links](../includes/ghazdo/sprint-237-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 161 Signature in Markdown\nDESCRIPTION: Include directive for the Sprint 161 sign-off section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-161-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-161](../includes/signer/sprint-161.md)]\n```\n\n----------------------------------------\n\nTITLE: Accessing Team Projects in Azure DevOps or TFS - Plaintext\nDESCRIPTION: Shows URL templates required for accessing Azure DevOps projects, differentiated for on-premises TFS and Azure Pipelines. No dependencies are required beyond a standard web browser. The placeholders such as {your_server}, {Your_Project}, and {Your_Organization} should be replaced with actual values by the user. The expected input is the completed URL; the output is the project page loaded in the browser. There are no programmatic or automation constraints; this serves as reference documentation for manual navigation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/begin-create-build-definition.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nOn-premises TFS: `http://{your_server}:8080/tfs/DefaultCollection/{Your_Project}`\nAzure Pipelines: `https://dev.azure.com/{Your_Organization}/{Your_Project}`\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: This snippet includes a markdown file containing the next steps section, likely providing guidance on further actions or information related to the update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/ghazdo/sprint-229-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Cloning with blobless and treeless filter options - Git - Bash\nDESCRIPTION: This snippet demonstrates command line options for Git clone or fetch in Azure DevOps using the blobless (--filter=blob:none) and treeless (--filter=tree:0) filters. These options require a recent version of Git that supports partial clone filtering. '--filter=blob:none' skips fetching blob objects, ideal for normal development, while '--filter=tree:0' skips both blobs and tree objects, useful for disposable clones (e.g., CI builds). Both are passed as arguments to git clone or git fetch, and improve performance by reducing network and storage resources. The commands assume pre-installed git and valid repository URLs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/repos/sprint-227-update.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"git clone --filter=blob:none <repo-url>\\ngit clone --filter=tree:0 <repo-url>\\ngit fetch --filter=blob:none\\ngit fetch --filter=tree:0\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure DevOps Release Notes Table in HTML\nDESCRIPTION: This HTML snippet shows a table structure for displaying Azure DevOps release notes. It includes columns for release dates, feature descriptions, and version availability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<tr>\n    <td>Maven and Gradle tasks produce a build summary when running a SonarQube analysis</td>\n    <td></td><td>N/A</td>\n</tr>\n<tr>\n    <td>Work item templates</td>\n    <td></td><td><a href=\"https://go.microsoft.com/fwlink/?LinkId=831912\" data-raw-source=\"[2017](https://go.microsoft.com/fwlink/?LinkId=831912)\">2017</a></td>\n</tr>\n<tr>\n    <td>Quickly \"Unfollow\" work item</td>\n    <td></td><td><a href=\"https://go.microsoft.com/fwlink/?LinkId=831912\" data-raw-source=\"[2017](https://go.microsoft.com/fwlink/?LinkId=831912)\">2017</a></td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: This Markdown directive incorporates a standard 'Next Steps' section from a shared file (`../includes/nextsteps.md`). It ensures consistency across different documentation pages by reusing common concluding information within the documentation build process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/testplans/sprint-245-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Version Control Template in Markdown\nDESCRIPTION: Template include statement for version control information in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/add-run-update-tests.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Task Group Version Format Example\nDESCRIPTION: Shows how minor version updates are formatted in task groups. Minor version updates allow small changes without requiring pipeline definition updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/task-groups.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n1.1\n1.2\n1.3\n1.*\n```\n\n----------------------------------------\n\nTITLE: Including Release Notes Content in Markdown\nDESCRIPTION: Markdown include directives used to compose the release notes document by importing content from external markdown files. These includes pull in Sprint 201 update links, main update content, and next steps information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-201-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-201-update-links](../includes/boards/sprint-201-update-links.md)]\n\n[!INCLUDE [sprint-201-update](../includes/boards/sprint-201-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Action Button\nDESCRIPTION: Creates a next steps action button linking to Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/administration/sprint-150-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Navigation Link in Markdown\nDESCRIPTION: Markdown code for navigation link to Azure DevOps portal with campaign tracking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-150-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Demo Generator Documentation Link\nDESCRIPTION: Markdown link syntax showing the documentation reference for the Azure DevOps Demo Generator tool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/may-07-vsts.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[documentation](/azure/devops/demo-gen)\n```\n\n----------------------------------------\n\nTITLE: Displaying an Image with Alt Text (Markdown)\nDESCRIPTION: This is standard Markdown syntax for embedding an image. The text within the square brackets (`Make a suggestion`) serves as the alternative text (alt text) for accessibility, and the path in the parentheses (`../media/make-a-suggestion.png`) specifies the image file location relative to the document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Markdown Content Include\nDESCRIPTION: Includes external markdown file containing main Sprint 150 update content for administration section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/administration/sprint-150-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-150-update](../includes/administration/sprint-150-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Version History Table in HTML\nDESCRIPTION: HTML table displaying version history information including release versions, dates and build numbers from Visual Studio/Azure DevOps 2012-2013 releases\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_16\n\nLANGUAGE: HTML\nCODE:\n```\n<td>14.0.23128.00</em></td>\n        </tr>\n        <tr>\n          <td>2013.5</td>\n          <td>Jul. 19, 2015</td>\n          <td>12.0.40629.0</td>\n        </tr>\n        <tr>\n          <td>2013.4</td>\n          <td>Nov. 11, 2014</td>\n          <td>12.0.31101.00</td>\n        </tr>\n        <tr>\n          <td>2013.3</td>\n          <td>Aug. 4, 2014</td>\n          <td>12.0.30723.00</td>\n        </tr>\n        <tr>\n          <td>2013.2</td>\n          <td>Apr. 2, 2014</td>\n          <td>12.0.30324.00</td>\n        </tr>\n        <tr>\n          <td>2013 RTM</td>\n          <td>Nov. 18, 2013</td>\n          <td>12.0.21005.01</td>\n        </tr>\n        <tr>\n          <td>2012.4</td>\n          <td>Nov. 12, 2013</td>\n          <td>11.0.61030.0</td>\n        </tr>\n        <tr>\n          <td>2012.3</td>\n          <td>Jun. 26, 2013</td>\n          <td>11.0.60610.01</td>\n        </tr>\n        <tr>\n          <td>2012.2</td>\n          <td>Apr. 4, 2013</td>\n          <td>11.0.60315.01</td>\n        </tr>\n        <tr>\n          <td>2012.1</td>\n          <td>Dec. 12, 2012</td>\n          <td>11.0.51106.01</td>\n        </tr>\n        <tr>\n          <td>2012 RTM</td>\n          <td>Aug. 15, 2012</td>\n          <td>11.0.50727.01</td>\n        </tr>\n      </tbody>\n    </table>\n```\n\n----------------------------------------\n\nTITLE: Viewing Shared Analytics Views Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`AnalyticsViews, Read`) grants the object-level permission to view and consume data from a specific shared Analytics view, typically using tools like Power BI Desktop. This is distinct from the project-level 'View analytics' permission and is managed per view.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_22\n\nLANGUAGE: plaintext\nCODE:\n```\nAnalyticsViews, Read\n```\n\n----------------------------------------\n\nTITLE: Embedding Annotated Images in Azure DevOps Documentation - markdown\nDESCRIPTION: These snippets use markdown image embedding syntax with special class annotations to include user interface screenshots in the documentation. The ![alt text](image-path) structure, optionally wrapped in callouts (like > [!div class=\"mx-imgBorder\"]), is used to visually illustrate updates to pipeline stages and permissions. Dependencies include having the correct image assets accessible via the specified relative paths, and the documentation renderer must support the referenced callout syntax for proper styling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-216-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\\\"mx-imgBorder\\\"]\\n> ![Update Pipelines](../../media/216-pipelines-01.png)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\\\"mx-imgBorder\\\"]\\n> ![Pipelines UI updates](../../media/216-pipelines-02.png)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\\\"mx-imgBorder\\\"]\\n> ![Service Connections](../../media/216-pipelines-03.png)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\\\"mx-imgBorder\\\"]\\n> ![Pipelines Permissions](../../media/216-pipelines-04.png)\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Azure DevOps Documentation\nDESCRIPTION: This YAML snippet defines metadata for the Azure DevOps documentation page, including topic, service, manager, author, and date information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/includes/create-release.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\nms.service: azure-devops-pipelines\nms.manager: mijacobs\nms.author: jukullam\nauthor: juliakm\nms.date: 02/14/2020\n---\n```\n\n----------------------------------------\n\nTITLE: Team Context Retrieval in Azure DevOps Extension\nDESCRIPTION: Function to get current team information from either configuration object or webContext, supporting both vertical and horizontal navigation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/web-navigation.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction getCurrentTeam() {\n  let webContext = SDK.getWebContext();\n  let configuration = SDK.getConfiguration();\n\n  if (\"team\" in configuration) {\n    return configuration.team;\n  } else if (\"team\" in webContext) {\n    return webContext.team;\n  } else {\n    return null; // should only happen if not in a project context\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Cloud Prerequisites Table Definition\nDESCRIPTION: Markdown table defining prerequisites for Azure DevOps cloud version, including access levels, services, and permissions requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/includes/prerequisites-power-bi.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirement |\n|--------------|-------------|\n| **Access levels** | [Project member](../../organizations/accounts/add-organization-users.md) with at least **Basic** access. Anyone with access to the project, except those granted **Stakeholder** access, can view Analytics views. |\n| **Services** | Enable **Boards**. If it's disabled, **Analytics views** doesn't display. [Reenable it](../../organizations/settings/set-services.md) either for individual users or for the entire organization. |\n| **Permissions** | - **View Analytics** permission set to **Allow**. For more information, see [Grant permissions to access the Analytics service](../powerbi/analytics-security.md). By default, all Contributors with Basic access are granted access. <br> - To edit shared **Analytics views**: **Edit shared Analytics views** permission set to **Allow**. For more information, see [Grant permissions to access the Analytics service](../analytics-security.md). |\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 220 Update Details in Markdown\nDESCRIPTION: This Markdown directive uses the `[!INCLUDE ...]` syntax to embed the main content detailing the Sprint 220 updates for the Reporting feature set. The content is sourced from the specified include file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/reporting/sprint-220-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-220-update](../includes/reporting/sprint-220-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Printing 'Hello, World!' in C#\nDESCRIPTION: This C# code snippet demonstrates how to print 'Hello, World!' to the console using the Console.WriteLine method.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nConsole.WriteLine(\"Hello, World!\");\n```\n\n----------------------------------------\n\nTITLE: Managing Relationships in Power BI for CFD Report\nDESCRIPTION: This snippet shows how to manage relationships in Power BI for a Cumulative Flow Diagram report. It involves accessing the Manage Relationships dialog and ensuring a relationship exists between CFD.ColumnName and ColumnOrder.ColumnName.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-cfd.md#2025-04-22_snippet_5\n\nLANGUAGE: powerbi\nCODE:\n```\n1. Select Modeling menu > Manage Relationships\n2. Ensure relationship between CFD.ColumnName and ColumnOrder.ColumnName\n```\n\n----------------------------------------\n\nTITLE: CMMI Field Descriptions Include Statement\nDESCRIPTION: Markdown include statement for CMMI-specific field descriptions in the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/get-started/plan-track-work.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [cmmi field descriptions](../includes/section-cmmi-field-descriptions.md)]\n```\n\n----------------------------------------\n\nTITLE: Applying Recursive Label in TFVC\nDESCRIPTION: Demonstrates how to apply the 'goodbuild' label recursively to a docs folder and all its contents using the TF label command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/label-command-team-foundation-version-control.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf label goodbuild docs /recursive\n```\n\n----------------------------------------\n\nTITLE: Including Azure Repos Sprint 177 Update Links (Markdown)\nDESCRIPTION: Uses a Markdown include directive to insert links to the specific Azure Repos feature updates detailed in Sprint 177. This allows modular content management for release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-177-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-177-update-links](includes/repos/sprint-177-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet packages to a feed in the same organization using dotnet CLI\nDESCRIPTION: Command to publish a NuGet package to a feed within the same Azure DevOps organization using the dotnet CLI. The command specifies the source URL and uses a placeholder for the API key.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/dotnet-exe.md#2025-04-22_snippet_2\n\nLANGUAGE: CLI\nCODE:\n```\ndotnet nuget push --source https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json --api-key <ANY_STRING> <PACKAGE_PATH>\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 177 Update Links (Markdown)\nDESCRIPTION: Uses a Markdown include directive to insert links to the specific Azure Pipelines feature updates detailed in Sprint 177. This directive points to a separate markdown file containing the relevant links.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-177-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-177-update-links](includes/pipelines/sprint-177-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Azure DevOps Documentation\nDESCRIPTION: YAML metadata block defining documentation properties like author, topic type and last modified date for an Azure DevOps documentation page.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-gt-eq-2019.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.author: chcomley\nauthor: chcomley\nms.topic: include\nms.date: 08/08/2022\n---\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 155 Update Links for Azure Artifacts in Markdown\nDESCRIPTION: This snippet includes external markdown content for Sprint 155 update links specific to Azure Artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/artifacts/sprint-155-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update-links](../includes/artifacts/sprint-155-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription Using Azure CLI\nDESCRIPTION: Command to set the correct Azure subscription for the signed-in user using Azure CLI. The subscription ID must be associated with the tenant connected to the Azure DevOps organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/entra.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz account set -s <subscription-id>\n```\n\n----------------------------------------\n\nTITLE: Using the tf msdn Command Syntax in TFVC\nDESCRIPTION: Basic syntax for the tf msdn command used to display documentation for TFVC commands. The command takes an optional commandname parameter to specify which command's documentation to display.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/msdn-command.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ntf msdn commandname\n```\n\n----------------------------------------\n\nTITLE: Azure Boards Slack Authentication URL\nDESCRIPTION: URL to access Slack workspace for authentication troubleshooting. Users should access this in a new browser tab while staying signed in to Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-slack.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://slack.com\n```\n\n----------------------------------------\n\nTITLE: Go Import Statement\nDESCRIPTION: Shows the import keyword usage in Go to specify package import paths for dependencies that can be fetched using go get.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-153-update.md#2025-04-22_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nimport\n```\n\n----------------------------------------\n\nTITLE: Displaying Organization Settings Icon in Markdown\nDESCRIPTION: This snippet shows how to display the gear icon for organization settings using Markdown syntax in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/disable-request-access-policy.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![gear icon](../../media/icons/gear-icon.png) **Organization settings**\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Table Row\nDESCRIPTION: Markdown snippet for creating a table row with two columns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-lookup-guide.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n```\n\n----------------------------------------\n\nTITLE: Adding Extension Icon Configuration\nDESCRIPTION: JSON configuration snippet for specifying the extension's icon path in the manifest file. This is an optional configuration that defines the default icon location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/procedures/create-base-manifest.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    ...\n    \"icons\": {\n        \"default\": \"images/logo.png\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Changing Field Name Using witadmin\nDESCRIPTION: Command to resolve field name conflicts between local collection and Azure DevOps Services by renaming fields using witadmin\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_14\n\nLANGUAGE: cmdline\nCODE:\n```\nwitadmin changefield /collection:http://AdventureWorksServer:8080/DefaultCollection /n:TFSfieldReferenceName /name:VSTSfieldName\n```\n\n----------------------------------------\n\nTITLE: Including Shared Release Notes Sections - Markdown - Documentation\nDESCRIPTION: This snippet demonstrates the use of the Markdown !INCLUDE directive to embed content from shared files into the release notes document. These includes enable modular documentation, allowing updates or links to be defined centrally and reused across multiple files. The expected effect is to inject the referenced content at render time, but this depends on the documentation platform's Markdown processing capabilities (such as Microsoft's Docs Authoring). Limitations include the requirement for matching include file paths and that this syntax may not work in all Markdown processors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/pipelines/sprint-168-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-168-update-links](../includes/pipelines/sprint-168-update-links.md)]\n\n[!INCLUDE [sprint-168-update](../includes/pipelines/sprint-168-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Referencing WorkItemTrackingAdministration Namespace Permissions in Azure DevOps Markdown\nDESCRIPTION: This snippet lists `ManagePermissions` and `DestroyAttachments` as permission tokens for administrating work item tracking in Azure DevOps. The namespace's UUID is included for configuration precision. These permissions are used in policy documentation and programmatic security assignments for administrative tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n`ManagePermissions`\n`DestroyAttachments`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`445d2788-c5fb-4132-bbef-09c4045ad93f`\n```\n\n----------------------------------------\n\nTITLE: Including Boards Update Links using Markdown Directive\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/boards/sprint-217-update-links.md`), likely containing links related to Azure Boards updates for Sprint 217. It's used within the Azure DevOps documentation build system (Microsoft Docs).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-217-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update-links](includes/boards/sprint-217-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating a Markdown Link to Maven Upstream Sources Section\nDESCRIPTION: A markdown link that references the 'Upstream sources for Maven' section in the document. This appears to be part of a table of contents or navigation element in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/artifacts/sprint-149-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Upstream sources for Maven](#upstream-sources-for-maven)\n```\n\n----------------------------------------\n\nTITLE: EntitySet Definition Example\nDESCRIPTION: Example showing how EntitySets are defined with navigation property bindings and annotations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-metadata.md#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<EntitySet Name=\"Projects\" EntityType=\"Microsoft.VisualStudio.Services.Analytics.Model.Project\">\n  <NavigationPropertyBinding Path=\"Areas\" Target=\"Areas\"/>\n  <NavigationPropertyBinding Path=\"Iterations\" Target=\"Iterations\"/>\n  <NavigationPropertyBinding Path=\"Teams\" Target=\"Teams\"/>\n  <Annotation Term=\"Org.OData.Display.V1.DisplayName\" String=\"Projects\"/>\n</EntitySet>\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure DevOps API Version\nDESCRIPTION: Defines the API version parameter used for Azure DevOps REST API requests. Uses preview version 2.0-preview.2.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version2-preview2.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n**api-version** = 2.0-preview.2\n```\n\n----------------------------------------\n\nTITLE: Including Wiki Prerequisites\nDESCRIPTION: Markdown include statement for wiki prerequisites section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/filter-print-wiki.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [wiki-prerequisites](includes/wiki-prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Organization-Scoped Feed Authentication in .npmrc\nDESCRIPTION: This snippet configures authentication credentials for an organization-scoped feed in the user-level .npmrc file. It includes placeholders for a Base64-encoded personal access token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n; begin auth token\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/npm/registry/:username=[ENTER_ANY_VALUE_BUT_NOT_AN_EMPTY_STRING]\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/npm/registry/:_password=[BASE64_ENCODED_PERSONAL_ACCESS_TOKEN]\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/npm/registry/:email=npm requires email to be set but doesn't use the value\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/npm/:username=[ANY_VALUE_BUT_NOT_AN_EMPTY_STRING]\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/npm/:_password=[BASE64_ENCODED_PERSONAL_ACCESS_TOKEN]\n//pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/npm/:email=npm requires email to be set but doesn't use the value\n; end auth token\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: This snippet includes a markdown file containing the next steps section for users after reading the Sprint 222 update notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/ghazdo/sprint-222-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Navigation Links for Azure Repos Documentation\nDESCRIPTION: Markdown formatted navigation links that point to different sections of Azure Repos documentation, including Teams integration, pull request workflows, UI updates and search features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-159-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Azure Repos app for Microsoft Teams](#azure-repos-app-for-microsoft-teams)\n- [Mark files as reviewed in a pull request](#mark-files-as-reviewed-in-a-pull-request)\n- [New Web UI for Azure Repos landing pages (preview)](#new-web-ui-for-azure-repos-landing-pages-preview)\n- [Proximity support for code search](#proximity-support-for-code-search)\n```\n\n----------------------------------------\n\nTITLE: Defining Wiki Access Requirements Table in Markdown\nDESCRIPTION: A markdown table that specifies the requirements for accessing wikis in Azure DevOps projects. It outlines that users need to be members of the project where the wiki is located, belong to the Contributors group, and have at least Basic access level.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/includes/wiki-prerequisites.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Project access** | Member of the project where the wiki's located. If you don't have access, request it from your project administrator. |\n| **Permissions** | Member of the **Contributors** group. |\n| **Access levels** | At least **Basic** access. |\n```\n\n----------------------------------------\n\nTITLE: Global Keyboard Shortcuts Reference Table in Azure DevOps\nDESCRIPTION: A markdown table listing all available global keyboard shortcuts in Azure DevOps 2020 and newer. The table includes shortcuts for navigating to different sections like Projects, Boards, Repos, Pipelines, and Test Plans, as well as shortcuts for searching and navigating between sections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/global-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|--------|------|\n|?|Show keyboard shortcuts|\n|p|Go to [Projects and teams](../../project/navigation/go-to-project-repo.md)|\n|g, h|Go to [Projects home](../../project/navigation/go-to-project-repo.md)|\n|g, b|Go to [Pipelines](../../pipelines/get-started/what-is-azure-pipelines.md)|\n|g, c|Go to [Repos](../../repos/git/index.yml)|\n|g, t|Go to [Test Plans](../../test/index.yml)|\n|g, s|Go to [Project settings](../../organizations/settings/about-settings.md)|\n|g, w|Go to [Boards](../../boards/get-started/what-is-azure-boards.md)|\n|/ *or* s|Move focus to Search|\n|f, n|Move focus to next section|\n|f, p|Move focus to previous section|\n```\n\n----------------------------------------\n\nTITLE: Replacing Changeset Comment Example in TFVC\nDESCRIPTION: Example showing how to replace a comment in changeset 8675309 with a new comment. This opens the Visual Studio Details dialog box where the user can save the changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/changeset-command.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf changeset /comment:\"This is a new comment.\" 8675309\n```\n\n----------------------------------------\n\nTITLE: Updating Azure DevOps CLI Extension\nDESCRIPTION: This command updates the Azure DevOps CLI extension to the latest version, which is required to use the new filtered download feature for Universal Packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/artifacts/sprint-153-update.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz extension update -n azure-devops\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Resources in YAML\nDESCRIPTION: YAML schema for defining pipeline resources including source pipeline, project, branch, version and trigger configurations. This allows referencing other pipelines and enabling CD triggers in multi-stage YAML pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-159-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nresources: \n  pipelines:\n  - pipeline: MyAppCI  # identifier for the pipeline resource\n    project:  DevOpsProject # project for the build pipeline; optional input for current project\n    source: MyCIPipeline  # source pipeline definition name\n    branch: releases/M159  # branch to pick the artifact, optional; defaults to all branches\n    version: 20190718.2 # pipeline run number to pick artifact; optional; defaults to last successfully completed run\n    trigger:     # Optional; Triggers are not enabled by default.\n      branches:  \n        include:  # branches to consider the trigger events, optional; defaults to all branches.\n        - main\n        - releases/*\n        exclude:   # branches to discard the trigger events, optional; defaults to none.\n        - users/*  \n```\n\n----------------------------------------\n\nTITLE: Adding All New Files in a Local TFVC Workspace\nDESCRIPTION: Example of using the 'add' command to add all new files in a local TFVC workspace. This command adds the latest versions of all items, except those that are ignored.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/add-command.md#2025-04-22_snippet_1\n\nLANGUAGE: Batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA\\Project1>tf add\n```\n\n----------------------------------------\n\nTITLE: Including General Next Steps Information (Markdown)\nDESCRIPTION: This directive incorporates content from a shared file ('../includes/nextsteps.md'), which typically provides users with guidance on subsequent actions like exploring new features, providing feedback, or accessing further documentation. This is a common pattern in Azure DevOps release notes for consistency, using the Microsoft Docs include syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-237-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Image Element\nDESCRIPTION: Markdown syntax for displaying images with type, source and alt-text attributes in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/overview.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n:::image type=\"content\" source=\"media/gs-chart-query.png\" alt-text=\"Diagram that is a link to Edit query article.\":::\n```\n\n----------------------------------------\n\nTITLE: Including Wiki Sprint 215 Update Links in Markdown\nDESCRIPTION: Uses a Microsoft Docs specific Markdown include directive to embed the content of 'includes/wiki/sprint-215-update-links.md'. This snippet inserts links related to the Wiki updates for Sprint 215.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-215-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-215-update-links](includes/wiki/sprint-215-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Wiki Prerequisites in Markdown\nDESCRIPTION: This snippet shows how to include a separate file containing wiki prerequisites in a Markdown document. It's used to add common prerequisite information to the main content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-comments-wiki.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [wiki-prerequisites](includes/wiki-prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Moniker-Specific Content in Markdown\nDESCRIPTION: This markdown snippet uses a moniker to conditionally display content. It's commonly used in documentation to show version-specific information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/navigation/preview-features.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Setting Database Recovery Model and Creating SQL Login - SQL Server - SQL\nDESCRIPTION: This set of SQL commands prepares a database for migration by setting the recovery model to SIMPLE and creating a dedicated SQL login with read access and assignment to the 'TFSEXECROLE' role. Dependencies: SQL Server Management Studio access and permissions to alter database and manage logins. Parameters: database name, username, and password must be supplied appropriately. The code changes the recovery model, creates and maps a new SQL login and user, and assigns necessary role membership, which is required for secure and successful use by the Azure DevOps migration tool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-prepare-test-run.md#2025-04-22_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nALTER DATABASE [<Database name>] SET RECOVERY SIMPLE;\n```\n\nLANGUAGE: sql\nCODE:\n```\nUSE [<database name>] \nCREATE LOGIN <pick a username> WITH PASSWORD = '<pick a password>' \nCREATE USER <username> FOR LOGIN <username> WITH DEFAULT_SCHEMA=[dbo] \nEXEC sp_addrolemember @rolename='TFSEXECROLE', @membername='<username>'\n```\n\n----------------------------------------\n\nTITLE: Creating a Feed in Azure Artifacts\nDESCRIPTION: This code snippet includes an instruction to create a new feed in Azure Artifacts. It references a separate include file that contains the actual implementation details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/start-using-azure-artifacts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [](includes/create-feed.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: This snippet includes external markdown content for the next steps section of the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/artifacts/sprint-155-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 222 Update Links (Markdown)\nDESCRIPTION: This directive uses the Microsoft Docs Markdown syntax `[!INCLUDE ...]` to embed the content of another Markdown file. It specifically includes links related to Azure Boards updates for Sprint 222.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update-links](includes/boards/sprint-222-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Reading Task Groups Scope (`vso.taskgroups_read`)\nDESCRIPTION: Grants the ability to read task groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_14\n\nLANGUAGE: text\nCODE:\n```\n`vso.taskgroups_read`\n```\n\n----------------------------------------\n\nTITLE: TestRuns Navigation Properties Table\nDESCRIPTION: Markdown table showing the navigation properties for TestRun entity type, including referential constraints and referenced properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n|**Name**        |**Referential constraint**  |**Referenced property** |\n|----------------|----------------------------|---------------------------|\n| `Branch`       | `BranchSK` | `BranchSK` |\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Structure for Azure Boards Update\nDESCRIPTION: Main markdown structure showing the organization of Azure Boards Sprint 159 update documentation using include directives and sections for features and next steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-159-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Azure Boards - Sprint 159 Update\ndescription: See the Sprint 159 feature update for Azure Boards, including next steps.\nauthor: gloridelmorales\nms.author: glmorale\nms.date: 10/14/2019\n---\n\n# Azure Boards - Sprint 159 Update\n\n## Features\n\n[!INCLUDE [sprint-159-update-links](../includes/boards/sprint-159-update-links.md)]\n\n[!INCLUDE [sprint-159-update](../includes/boards/sprint-159-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n\nThanks,\n\n[!INCLUDE [sprint-159](../includes/signer/sprint-159.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 153 Update Content in Markdown\nDESCRIPTION: Markdown include directive for main Sprint 153 update content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-153-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-153-update](../includes/general/sprint-153-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Organization Access URLs\nDESCRIPTION: Demonstrates the two possible URL formats for accessing an Azure DevOps organization - the modern dev.azure.com format and the legacy visualstudio.com format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/sign-in-github-account.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\ndev.azure.com/{Organization_Name}\n```\n\nLANGUAGE: plaintext\nCODE:\n```\norganizationName.visualstudio.com\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 217 Update Details (Markdown Directive)\nDESCRIPTION: This directive includes the main content detailing the specific features and updates released in Sprint 217 for Azure Pipelines. The actual content resides in the referenced Markdown file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-217-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update](../includes/pipelines/sprint-217-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: This Azure Docs markdown directive incorporates a standard 'Next Steps' section into the document. The content, fetched from '../includes/nextsteps.md', usually provides users with links to related resources, feedback channels, or further actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-203-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 219 Update Content in Markdown\nDESCRIPTION: This snippet includes a markdown file containing the main content of the Sprint 219 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-219-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-219-update](../includes/boards/sprint-219-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Azure DevOps Documentation\nDESCRIPTION: This snippet demonstrates how to include version-specific content in Azure DevOps documentation using a predefined include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/concepts/symbols.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Azure DevOps Documentation\nDESCRIPTION: This YAML snippet defines the frontmatter for an include file in Azure DevOps documentation. It specifies the topic type and is followed by the author's name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/signer/sprint-161.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Version Include Statement\nDESCRIPTION: Markdown include statement for Azure DevOps version compatibility notice\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/agile-culture.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Azure DevOps Documentation Sections in Markdown\nDESCRIPTION: This snippet defines the structure of an Azure DevOps documentation page using markdown. It includes two main sections: Kubernetes integration for Azure Pipelines and multi-stage YAML pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/build-may-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nms.topic: include\n---\n\n- [Kubernetes integration for Azure Pipelines](#kubernetes-integration-for-azure-pipelines)\n- [Multi-stage YAML pipelines](#multi-stage-yaml-pipelines)\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Markdown\nDESCRIPTION: This snippet demonstrates how to include version-specific content in a Markdown file using a predefined include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/what-are-analytics-views.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-gt-eq-2019](../../includes/version-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Navigation Link in Markdown\nDESCRIPTION: Markdown next steps action link directing users to Azure DevOps portal.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/reporting/sprint-147-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Docker Compose v1 Windows Configuration\nDESCRIPTION: Pipeline configuration for using Docker Compose v1 on Windows agents by downloading the specific version and configuring the DockerCompose task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-240-update.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n    dockerComposePath: C:\\docker-compose\n\nsteps:\n- powershell: |\n    mkdir -f $(dockerComposePath)\n    # GitHub now requires TLS1.2. In PowerShell, run the following\n    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n    Start-BitsTransfer -Source \"https://github.com/docker/compose/releases/download/1.29.1/docker-compose-windows-x86_64.exe\" -Destination $(dockerComposePath)\\docker-compose.exe\n  displayName: Download docker-compose\n- task: DockerCompose@0\n  inputs:\n    containerregistrytype: 'Azure Container Registry'\n    dockerComposeFile: '**/docker-compose.yml'\n    action: 'Run a Docker Compose command'\n    dockerComposeCommand: 'run'\n    dockerComposePath: $(dockerComposePath)\\docker-compose.exe\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Azure DevOps Docs\nDESCRIPTION: YAML front matter configuration block that specifies metadata for Azure DevOps Boards documentation pages. Includes service name, author information, content type, and last updated date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-gt-eq-2022.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.service: azure-devops-boards\nms.author: chcomley\nauthor: chcomley\nms.topic: include\nms.date: 08/03/2022\n---\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: Markdown include directive that imports the next steps section from an external file, providing guidance on what users should do after reading the update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-233-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: HTML Release Notes Table Structure\nDESCRIPTION: HTML table structure documenting Azure DevOps feature releases and their availability across different versions. Contains entries spanning multiple release dates from September to November 2016.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<td></td><td><a href=\"https://go.microsoft.com/fwlink/?LinkId=839593\" data-raw-source=\"[2017.1](https://go.microsoft.com/fwlink/?LinkId=839593)\">2017.1</a></td>\n</tr>\n<tr>\n    <td>Search for a file or folder in commit history</td>\n    <td></td><td><a href=\"https://go.microsoft.com/fwlink/?LinkId=839593\" data-raw-source=\"[2017.1](https://go.microsoft.com/fwlink/?LinkId=839593)\">2017.1</a></td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Version Control Include Statement\nDESCRIPTION: Markdown include statement for version control information across Azure DevOps versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/look-up-project-collection-administrators.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 219 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links related to the Sprint 219 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-219-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-219-update-links](../includes/boards/sprint-219-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 237 Update Details for GHASDO (Markdown)\nDESCRIPTION: This directive includes the main content detailing the features and updates released in Sprint 237 for GitHub Advanced Security for Azure DevOps (GHASDO) from the specified file ('../includes/ghazdo/sprint-237-update.md'). It leverages the Microsoft Docs include syntax to modularize documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-237-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-237-update](../includes/ghazdo/sprint-237-update.md)]\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Azure DevOps Documentation\nDESCRIPTION: Metadata block defining documentation properties including author, topic type and last updated date. Used for content management in Microsoft Docs platform.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-lt-eq-azure-devops.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.author: chcomley\nauthor: chcomley\nms.topic: include\nms.date: 08/08/2022\n---\n```\n\n----------------------------------------\n\nTITLE: Publishing to Azure Service Bus using ServiceBus Task\nDESCRIPTION: Example showing how to configure PublishToAzureServiceBus@2 task with Azure service connection to send messages to a Service Bus queue.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-240-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishToAzureServiceBus@2\n  inputs:\n    azureSubscription: my-azure-service-connection\n    serviceBusQueueName: my-service-bus-queue\n    serviceBusNamespace: my-service-bus-namespace\n    useDataContractSerializer: false\n    messageBody: |\n      {\n        \"foo\": \"bar\"\n      }\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Version Support Declaration\nDESCRIPTION: Markdown declaration indicating supported versions of Azure DevOps Server, including 2022, 2020, and 2019 releases.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-gt-eq-2019-lt-azure-devops.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**Azure DevOps Server 2022 | Azure DevOps Server 2020 | Azure DevOps Server 2019**\n```\n\n----------------------------------------\n\nTITLE: Displaying Customize Error Message Dialog in Azure DevOps\nDESCRIPTION: This markdown snippet shows an image of the dialog for customizing the error message when organization creation is restricted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/azure-ad-tenant-policy-restrict-org-creation.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n![Screenshot shows Customize error message dialog.](media/azure-ad-tenant-policy/display-error-message-dialog.png)\n```\n\n----------------------------------------\n\nTITLE: Embedding an Image using Markdown\nDESCRIPTION: Standard Markdown syntax for embedding an image. It displays the 'Make a suggestion' image located at the specified relative path `../media/make-a-suggestion.png`. The alt text is 'Make a suggestion'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Link for New Test Plans Page in Azure DevOps Docs\nDESCRIPTION: This snippet demonstrates how to create a markdown link to a specific section within the Azure DevOps documentation. The link points to the 'New Test Plans page' section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/testplans/sprint-158-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [New Test Plans page](#new-test-plans-page)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint Update Details - Azure DevOps Markdown - Markdown\nDESCRIPTION: This snippet uses the '[!INCLUDE]' directive in Azure DevOps markdown to inject the contents of 'sprint-245-update.md' at runtime. It allows updates to be managed in a separate file for better maintainability and reuse. The referenced file must be present at the specified path and will display its markdown-rendered result inline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-245-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update](../includes/ghazdo/sprint-245-update.md)]\n```\n\n----------------------------------------\n\nTITLE: YAML Build Pipeline Configuration Example\nDESCRIPTION: A reference to YAML-based build pipelines that can be configured by creating a YAML file in your repository. This allows for automated continuous integration with support for multiple jobs, external templates, and matrix execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sep-10-azure-devops-launch.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Note: No actual code snippet was provided in the text, only references to YAML configuration capabilities\n```\n\n----------------------------------------\n\nTITLE: Including Azure Test Plans Update Information in Markdown\nDESCRIPTION: Markdown include statements used to incorporate Sprint 247 update details and next steps information into the release notes document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/testplans/sprint-247-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-247-update-links](../includes/testplans/sprint-247-update-links.md)]\n\n[!INCLUDE [sprint-247-update](../includes/testplans/sprint-247-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Note Block\nDESCRIPTION: A note indicating that feed administrator permissions are required for enabling package sharing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/package-badges.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\\n> You must be a feed administrator to enable package sharing.\n```\n\n----------------------------------------\n\nTITLE: Selecting Maven Pipeline Template in Azure CLI - azurecli-interactive\nDESCRIPTION: This interactive snippet presents a list of available pipeline templates and prompts the user to choose a template for their pipeline. The recommended default is Maven (option 1), but several other templates are available for various project types. The selection defines the structure and build steps of the pipeline. No external dependencies are required; part of the Azure CLI interactive session.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nWhich template do you want to use for this pipeline?\n[1] Maven\n[2] Maven package Java project Web App to Linux on Azure\n[3] Android\n[4] Ant\n[5] ASP.NET\n[6] ASP.NET Core\n[7] ASP .NET Core (.NET Framework)\n[8] Starter pipeline\n[9] C/C++ with GCC\n[10] Go\n[11] Gradle\n[12] HTML\n[13] Jekyll site\n[14] .NET Desktop\n[15] Node.js\n[16] Node.js with Angular\n[17] Node.js with Grunt\n[18] Node.js with gulp\n[19] Node.js with React\n[20] Node.js with Vue\n[21] Node.js with webpack\n[22] PHP\n[23] Python Django\n[24] Python package\n[25] Ruby\n[26] Universal Windows Platform\n[29] Xcode\nPlease enter a choice [Default choice(1)]:\n```\n\n----------------------------------------\n\nTITLE: Constructing OData URL with Project Name for On-Premises Azure DevOps Server\nDESCRIPTION: Alternative OData feed URL format for on-premises Azure DevOps Server that includes project name to filter results to a specific project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/access-analytics-excel.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://{ServerName}:{Port}/tfs/{CollectionName}/{ProjectName}/_odata/{version}/\n```\n\n----------------------------------------\n\nTITLE: Including sprint-202 update links for Azure Boards section\nDESCRIPTION: Markdown include directive for Azure Boards sprint 202 update links\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-202-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update-links](includes/boards/sprint-202-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Modifying HTML content in CSHTML file for Azure DevOps CI/CD demonstration\nDESCRIPTION: This snippet shows how to modify the content of an About page in a CSHTML file. It replaces the default text with a custom message to demonstrate changes in a continuous integration and deployment pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/aspnet/includes/commit-build-release.md#2025-04-22_snippet_0\n\nLANGUAGE: cshtml\nCODE:\n```\n<p>Hello continuous integration and continuous deployment!</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Table of Azure DevOps Feature Releases\nDESCRIPTION: An HTML table structure listing Azure DevOps feature releases, including release dates, feature descriptions, and corresponding version numbers. The table covers releases from August 2012 to December 2012, detailing improvements in version control, build processes, and user interface elements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_15\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n    <tbody>\n        <tr>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.2](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.2</a></td>\n        </tr>\n        <tr>\n            <td>Inline diff of images in version control</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.2](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.2</a></td>\n        </tr>\n        <tr>\n            <td>Collapsible left pane in all left panels in Web UI</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.2](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.2</a></td>\n        </tr>\n        <tr>\n            <td rowspan=\"3\"><a href=\"/previous-versions/azure/devops/2012/dec-10-team-services\" data-raw-source=\"[10 Dec 2012](/previous-versions/azure/devops/2012/dec-10-team-services)\">10 Dec 2012</a></td>\n            <td>Renamed Source to Code in Web UI hub</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.2](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.2</a></td>\n        </tr>\n        <tr>\n            <td>Code Explorer updates in Web UI</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.2](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.2</a></td>\n        </tr>\n        <tr>\n            <td>Hosted build updates for Azure SDK 1.8, TypeScript 0.8.1, and VS 2012 Update 1</td>\n            <td></td><td>N/A</td>\n        </tr>\n        <tr>\n            <td rowspan=\"2\"><a href=\"/previous-versions/azure/devops/2012/nov-19-team-services\" data-raw-source=\"[19 Nov 2012](/previous-versions/azure/devops/2012/nov-19-team-services)\">19 Nov 2012</a></td>\n            <td>Send work items in email from TFS web access</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.2](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.2</a></td>\n        </tr>\n        <tr>\n            <td>Build file counts and sizes in summary reports</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.2](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.2</a></td>\n        </tr>\n        <tr>\n            <td><a href=\"/previous-versions/azure/devops/2012/oct-31-team-services\" data-raw-source=\"[31 Oct 2012](/previous-versions/azure/devops/2012/oct-31-team-services)\">31 Oct 2012</a></td>\n            <td>General availability of Team Foundation Service</td>\n            <td></td><td>N/A</td>\n        </tr>\n        <tr>\n            <td><a href=\"/previous-versions/azure/devops/2012/oct-29-team-services\" data-raw-source=\"[29 Oct 2012](/previous-versions/azure/devops/2012/oct-29-team-services)\">29 Oct 2012</a></td>\n            <td>Build drops</td>\n            <td></td><td>N/A</td>\n        </tr>\n        <tr>\n            <td><a href=\"/previous-versions/azure/devops/2012/oct-08-team-services\" data-raw-source=\"[8 Oct 2012](/previous-versions/azure/devops/2012/oct-08-team-services)\">8 Oct 2012</a></td>\n            <td>400 character server paths for version control</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td rowspan=\"3\"><a href=\"/previous-versions/azure/devops/2012/sep-17-team-services\" data-raw-source=\"[17 Sep 2012](/previous-versions/azure/devops/2012/sep-17-team-services)\">17 Sep 2012</a></td>\n            <td>Drag/drop in sprint planning to assign to person or activity</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td>Web usability improvements (tabs and UX modified, collapse left pane in work items)</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td>Process template updates to Agile 6.1 and Scrum 2.1</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td rowspan=\"4\"><a href=\"/previous-versions/azure/devops/2012/aug-27-team-services\" data-raw-source=\"[27 Aug 2012](/previous-versions/azure/devops/2012/aug-27-team-services)\">27 Aug 2012</a></td>\n            <td>Improved source browsing, viewing, and searching</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td>Improved source \"diff\"</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td>Hosted builds of SharePoint components</td>\n            <td></td><td>N/A</td>\n        </tr>\n        <tr>\n            <td>Basic authentication support</td>\n            <td></td><td>N/A</td>\n        </tr>\n        <tr>\n            <td rowspan=\"3\"><a href=\"/previous-versions/azure/devops/2012/aug-13-team-services\" data-raw-source=\"[13 Aug 2012](/previous-versions/azure/devops/2012/aug-13-team-services)\">13 Aug 2012</a></td>\n            <td>Kanban board</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td>Cumulative Flow Diagram</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td>WIP Limits</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td rowspan=\"2\"><a href=\"/previous-versions/azure/devops/2012/aug-06-team-services\" data-raw-source=\"[6 Aug 2012](/previous-versions/azure/devops/2012/aug-06-team-services)\">6 Aug 2012</a></td>\n            <td>Drag/drop in task board to move tasks between people and stories</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n        <tr>\n            <td>Azure continuous deployment summary report</td>\n            <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=36392\" data-raw-source=\"[2012.1](https://www.microsoft.com/download/details.aspx?id=36392)\">2012.1</a></td>\n        </tr>\n    </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Windows Registry Path for AutoRun\nDESCRIPTION: Registry path to verify VSTSAgent auto-run configuration\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/troubleshooting-autologon.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nComputer\\HKEY_USERS\\<sid>\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\n```\n\n----------------------------------------\n\nTITLE: Including Test Management Permissions Template in Markdown\nDESCRIPTION: This snippet demonstrates the use of a markdown include statement to insert a template containing information about test management permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-permissions-access-work-tracking.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/test.md)]\n```\n\n----------------------------------------\n\nTITLE: Single Item Checkin Example\nDESCRIPTION: Example showing how to check in a single file without displaying the Check In dialog box.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/checkin-command.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf checkin program.cs /noprompt\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Markdown Include\nDESCRIPTION: Markdown include statement for Azure Repos prerequisites section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/pr-status-policy.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [azure-repos-prerequisites](includes/azure-repos-prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Release Notes Markdown Sections\nDESCRIPTION: Markdown include statements for incorporating sprint update links, main update content, and next steps sections into the release notes document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/general/sprint-251-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update-links](../includes/general/sprint-251-update-links.md)]\n\n[!INCLUDE [sprint-251-update](../includes/general/sprint-251-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Organization URL\nDESCRIPTION: This code snippet demonstrates the URL structure for accessing an Azure DevOps organization. It includes a placeholder for the organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/repository-resource.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 155 Update Content for Azure Artifacts in Markdown\nDESCRIPTION: This snippet includes external markdown content for Sprint 155 update details specific to Azure Artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/artifacts/sprint-155-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update](../includes/artifacts/sprint-155-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Paragraph Examples\nDESCRIPTION: Demonstrates how to format paragraphs and line breaks in pull request comments\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nAdd lines between your text with the **Enter** key.\nYour text gets better spaced and makes it easier to read.\n```\n\n----------------------------------------\n\nTITLE: Presenting Sprint Release Notes and Feature Updates - Markdown\nDESCRIPTION: Structures the core release note content using markdown. It provides a main heading, sections for key features, and modularly includes other markdown files for detailed feature lists and next steps. The '[!INCLUDE]' syntax requires decomposition by tools that support markdown includes and expects all referenced paths to be valid. Inputs are static text and include directives; the output is a rendered markdown document composing all parts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-214-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# Azure Pipelines - Sprint 214 Update\\n\\n## Features\\n\\n[!INCLUDE [sprint-214-update-links](../includes/pipelines/sprint-214-update-links.md)]\\n\\n[!INCLUDE [sprint-214-update](../includes/pipelines/sprint-214-update.md)]\\n\\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure Boards Prerequisites Include Statement\nDESCRIPTION: Markdown include statement for team settings prerequisites\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/wip-limits.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/prerequisites-team-settings.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Modular Markdown Content with INCLUDES - Markdown\nDESCRIPTION: These code snippets demonstrate the use of Azure DevOps Documentation-style Markdown INCLUDES to pull in common content, such as update links, feature descriptions, and 'next steps'. This technique helps modularize documentation, allowing content sharing across multiple documentation pages. Each include statement references a relative path to another Markdown file and will be expanded at build/render time; no dependencies are required other than the documentation platform's support for INCLUDES.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/pipelines/sprint-172-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-172-update-links](../includes/pipelines/sprint-172-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-172-update](../includes/pipelines/sprint-172-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Git Feature Branch Workflow Image in Markdown\nDESCRIPTION: This snippet shows how to include an image in Markdown format, specifically displaying the Git feature branch workflow diagram.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/gitworkflow.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]  \n> ![Screenshot shows the Git feature branch workflow.](media/gitworkflow.png)\n```\n\n----------------------------------------\n\nTITLE: Group Reference Bug Fix in XML\nDESCRIPTION: Shows how to properly reference organization-level groups by changing from project-scoped to global scope.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_46\n\nLANGUAGE: text\nCODE:\n```\n\"[project]\\Organization Leaders\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"[global]\\Organization Leaders\"\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Navigation Link in Markdown\nDESCRIPTION: Markdown formatted link to navigate to Azure DevOps with campaign tracking\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-146-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Object Permissions Table for Boards Items\nDESCRIPTION: Markdown table showing permission settings for Boards-related objects like area paths and work items\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/set-object-level-permissions.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n|Object  |Default group membership  |How to access security  |Inherited?  |\n|---------|---------|---------|----------|\n|[Area path](set-permissions-access-work-tracking.md) | [Project Administrator](../../organizations/security/permissions.md#project-level-groups) |Open **Project settings** > **Project configuration** > **Areas** > next to an area, **More** ... > **Security**.         | ✔️ (child node from parent node) |\n|[Iteration path](set-permissions-access-work-tracking.md)    | [Project Administrator](../../organizations/security/permissions.md#project-level-groups)        | Open **Project settings** > **Project configuration** > **Iterations** > next to an iteration, **More** ... > **Security**.        | ✔️ (child node from parent node)    |\n```\n\n----------------------------------------\n\nTITLE: Including Sprint Update Links - Azure DevOps Markdown - Markdown\nDESCRIPTION: This snippet uses a custom Azure DevOps markdown directive '[!INCLUDE]' to incorporate the content of the 'sprint-245-update-links.md' file, enabling modular documentation and centralized maintenance of update links. There are no external code dependencies, but the file referenced must exist in the specified relative path. The main parameter is the file path, and the output is the injected markdown content from the target file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/ghazdo/sprint-245-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update-links](../includes/ghazdo/sprint-245-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Installing HelloWorld Sample NuGet Package\nDESCRIPTION: Command to install a sample NuGet package named HelloWorld with the ExcludeVersion flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/nuget/publish.md#2025-04-22_snippet_0\n\nLANGUAGE: Command\nCODE:\n```\nnuget install HelloWorld -ExcludeVersion\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Azure DevOps Documentation\nDESCRIPTION: Includes a markdown file containing next steps information for users after reading the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/artifacts/sprint-200-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Display File Properties Example\nDESCRIPTION: Example showing how to display properties information for a specific file named 314.cs using the tf info command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/properties-or-info-command.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf info 314.cs\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Pipeline with YAML\nDESCRIPTION: This YAML file defines an Azure Pipeline with parameters, variables (including a variable group), and steps to display and test variable values. It includes both secret and nonsecret variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/cli/pipeline-variable-group-secret-nonsecret-variables.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: image\n  displayName: 'Pool image'\n  default: ubuntu-latest\n  values:\n  - windows-latest\n  - windows-latest\n  - ubuntu-latest\n  - ubuntu-latest\n  - macOS-latest\n  - macOS-latest\n- name: test\n  displayName: Run Tests?\n  type: boolean\n  default: false\n\nvariables:\n- group: \"Contoso Variable Group\"\n- name: va\n  value: $[variables.a]\n- name: vb\n  value: $[variables.b]\n- name: vcontososecret\n  value: $[variables.contososecret]\n\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n- script: |\n    echo \"Hello, world!\"\n    echo \"Pool image: ${{ parameters.image }}\"\n    echo \"Run tests? ${{ parameters.test }}\"\n  displayName: 'Show runtime parameter values'\n\n- script: |\n    echo \"a=$(va)\"\n    echo \"b=$(vb)\"\n    echo \"contososecret=$(vcontososecret)\"\n    echo\n    echo \"Count up to the value of the variable group's nonsecret variable *a*:\"\n    for number in {1..$(va)}\n    do\n        echo \"$number\"\n    done\n    echo \"Count up to the value of the variable group's nonsecret variable *b*:\"\n    for number in {1..$(vb)}\n    do\n        echo \"$number\"\n    done\n    echo \"Count up to the value of the variable group's secret variable *contososecret*:\"\n    for number in {1..$(vcontososecret)}\n    do\n        echo \"$number\"\n    done\n  displayName: 'Test variable group variables (secret and nonsecret)'\n  env:\n    SYSTEM_ACCESSTOKEN: $(System.AccessToken)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 153 Update Links in Markdown\nDESCRIPTION: Markdown include statement for Sprint 153 update navigation links file\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-153-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-153-update-links](../includes/boards/sprint-153-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Rendering Feature Timeline Table in HTML\nDESCRIPTION: This HTML snippet renders a table showing the release timeline of various Azure DevOps and TFS features. It includes columns for feature names, release dates, and version compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<tr>\n    <td></td><td><a href=\"/visualstudio/releasenotes/tfs2018-relnotes\" data-raw-source=\"[2018](/visualstudio/releasenotes/tfs2018-relnotes)\">2018</a></td>\n</tr>\n<tr>\n    <td>Retain filename when moving from Files to Commits</td>\n    <td></td><td><a href=\"/visualstudio/releasenotes/tfs2018-relnotes\" data-raw-source=\"[2018](/visualstudio/releasenotes/tfs2018-relnotes)\">2018</a></td>\n</tr>\n<tr>\n    <td>Pull Request Status Extensibility in Public Preview</td>\n    <td></td><td><em>2018.2</em></td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Querying Areas Data in Power BI M Language\nDESCRIPTION: This query retrieves area data from Azure DevOps Analytics, selecting AreaName and AreaSK fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-team-filter.md#2025-04-22_snippet_1\n\nLANGUAGE: M\nCODE:\n```\nlet\n    #\"Get table\" = VSTS.Feed(\"https://analytics.dev.azure.com/{OrganizationName}/_odata/v2.0/Areas?$select=AreaName,AreaSK\"),\n    #\"Select columns\" = Table.SelectColumns(#\"Get table\", {\"AreaName\", \"AreaSK\"})\nin\n    #\"Select columns\"\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps IPv4 Address Ranges for Firewall Configuration\nDESCRIPTION: List of IPv4 address ranges that need to be allowed in firewall rules to permit traffic to Azure DevOps following a front-end routing migration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-153-update.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n* 13.107.6.0/24\n* 13.107.9.0/24\n* 13.107.42.0/24\n* 13.107.43.0/24\n```\n\n----------------------------------------\n\nTITLE: Including Sprint Update Details - Markdown\nDESCRIPTION: This line brings in the details for the Sprint 236 update using a custom '[!INCLUDE]' statement in Markdown. Dependencies include existence of the referenced Markdown include file and a documentation generation system compatible with these includes (e.g., DocFX or Microsoft Docs pipeline). It will output the update details inline in the document; there are no parameters for this snippet. Not natively supported in regular Markdown renderers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/general/sprint-236-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-236-update](../includes/general/sprint-236-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps in Markdown Document\nDESCRIPTION: Markdown include directive that pulls in the next steps content from an external file located in the includes directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/repos/sprint-192-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Windows AutoRun Command\nDESCRIPTION: Registry value for testing Windows autorun functionality\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v2/troubleshooting-autologon.md#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nC:\\windows\\system32\\cmd.exe /D /S /C start \"AutoRun\" \"D:\\path\\to\\autorun.cmd\"\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 202 Update Content in Azure Boards Documentation\nDESCRIPTION: Markdown include statement that references the main Sprint 202 update content for Azure Boards. This pulls in the detailed content about feature updates and changes from a separate file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-202-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update](../includes/boards/sprint-202-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Rolling Deployment Strategy for VMs\nDESCRIPTION: Demonstrates how to configure rolling deployment strategy for virtual machines in environments, including pre-deploy, deploy, route traffic, and post-deployment steps with parallel execution control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-162-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment:\n  displayName: web\n  environment:\n    name: musicCarnivalProd\n    resourceType: VirtualMachine\n  strategy:                 \n    rolling:\n      maxParallel: 5 #for percentages, mention as x%\n      preDeploy:\n        steps:\n        - script: echo initialize, cleanup, backup, install certs...\n      deploy:              \n        steps:                                     \n        - script: echo deploy ...      \n      routeTraffic:\n        steps:\n        - script: echo routing traffic...   \n      postRouteTraffic:\n        steps:          \n        - script: echo health check post routing traffic...  \n      on:\n        failure:\n          steps:\n          - script: echo restore from backup ..     \n        success:\n          steps:\n          - script: echo notify passed...\n```\n\n----------------------------------------\n\nTITLE: Version Control Include Statement\nDESCRIPTION: Markdown include statement for version control information\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/share-steps-between-test-cases.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 162 Update Content for Azure Repos in Markdown\nDESCRIPTION: This snippet includes the full content of Azure Repos updates for Sprint 162 using a Markdown include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-162-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-162-update](includes/repos/sprint-162-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying a Bordered Image in Markdown\nDESCRIPTION: Uses a Markdown extension (`[!div class=\"mx-imgBorder\"]`) to apply a border style (likely via CSS) around a standard Markdown image (`![...]`). This snippet displays an image guiding users on how to provide feedback or make suggestions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-215-update.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"] \n> ![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Displaying Custom Rollup Field in Azure DevOps Backlog\nDESCRIPTION: This markdown snippet shows an image of a custom rollup field 'Count of Customer Requests' in an Azure DevOps backlog. It demonstrates how custom work item types or fields can be used for rollup calculations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/display-rollup.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Screenshot of custom field, Count of Customer Requests rollup field.](media/rollup/count-of-customer-requests.png)\n```\n\n----------------------------------------\n\nTITLE: Including a Note About Disabled Boards in Markdown\nDESCRIPTION: This snippet shows how to include a predefined note about disabled boards in a Markdown file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/what-are-analytics-views.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [boards disabled note](../includes/boards-disabled.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating Project Dashboard in Azure DevOps\nDESCRIPTION: This snippet illustrates the markdown syntax for including an image that shows how to create a project dashboard without associating it with a team in Azure DevOps. It uses the 'mx-imgBorder' class for image styling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/reporting/sprint-162-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Create a dashboard without a team.](../../media/162_05.png)\n```\n\n----------------------------------------\n\nTITLE: Resource URL Parameter Reference\nDESCRIPTION: Reference showing that service connections cannot be specified using variables in pipeline configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/approvals.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Service connections cannot be specified by variable\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML configuration block defining metadata for the documentation page including title, description, and version information\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/view-branch-hierarchy-team-project.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: View the branch hierarchy of a project\ntitleSuffix: Azure Repos\ndescription: In Team Foundation Version Control, view the branch hierarchy of a project. See properties of branches, and take actions like merging or comparing branches.\nms.assetid: 7ecab78e-f9f5-43d1-982f-b300ee1c4c16\nms.service: azure-devops-repos\nms.topic: conceptual\nms.date: 11/22/2022\nmonikerRange: '<= azure-devops'\nms.subservice: azure-devops-repos-tfvc\n---\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 209 Update Links in Markdown Documentation\nDESCRIPTION: Markdown include directive to import Azure Boards Sprint 209 update links from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-209-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-209-update-links](../includes/boards/sprint-209-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Querying Work Item Snapshots with Date Filtering in OData\nDESCRIPTION: This query demonstrates how to efficiently filter historical work item data using RevisedDateSK. It returns the count of work items for each day since the beginning of 2020, using date surrogate keys for improved performance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_21\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/v1.0/WorkItemSnapshot?\n  $apply=\n    filter(DateSK gt 20200101)/\n    filter(RevisedDateSK eq null or RevisedDateSK gt 20200101)/\n    groupby(\n      (DateValue), \n      aggregate($count as Count)\n    )\n```\n\n----------------------------------------\n\nTITLE: Creating User Journey Diagrams with Mermaid in Azure DevOps Wiki\nDESCRIPTION: This snippet demonstrates how to create a user journey diagram using Mermaid syntax in Azure DevOps Wiki. The diagram describes the steps involved in a home office day, with sections for going to work and going home, and includes different actors (Me, Dog) with activity ratings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_17\n\nLANGUAGE: mermaid\nCODE:\n```\n:::mermaid\njourney\n    title Home office day\n    section Go to work\n      Wake up: 1: Me, Dog\n      Take shower: 2: Me\n      Go downstairs: 3: Me, Dog\n      Make coffee: 4: Me\n      Have a breakfast: 5: Me, Dog\n      Go upstairs: 3: Me, Dog\n      Do work: 1: Me, Dog\n    section Go home\n      Go downstairs: 3: Me, Dog\n      Sit down: 5: Me\n:::\n```\n\n----------------------------------------\n\nTITLE: Character Encoding Table for Wiki Page Titles in Azure DevOps\nDESCRIPTION: A markdown table showing how special characters are translated to their UTF-8 encoded strings when used in Wiki page titles. This allows creating pages with titles containing special characters like colons, brackets, asterisks, and question marks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/apr-03-vsts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Character|Encoded String|\n|-------------|-----------------|\n|         :        |      %3A            |\n|         <       |       %3C           |\n|         >       |         %3E          |\n|        *        |          %2A         |\n|        ?         |          %3F        |\n|        \\|         |        %7C          |\n|        -           |        %2D        |\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Version Selection Notice in Custom Markdown\nDESCRIPTION: Structured content notice using custom Markdown row and column syntax to display version selection instructions with an accompanying image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-selector.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!IMPORTANT] \n> :::row:::\n>    :::column span=\"1\":::\n>      :::image type=\"content\" source=\"../media/version-selector.png\" alt-text=\"Select a version from Azure DevOps Content Version selector.\":::\n>    :::column-end:::\n>    :::column span=\"2\":::\n>       Select the version of this article that corresponds to your platform and version. The version selector is above the table of contents. [Look up your Azure DevOps platform and version](../user-guide/lookup-platform-version.md). \n>    :::column-end:::\n> :::row-end:::\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for Azure DevOps Timeline\nDESCRIPTION: HTML table structure showing feature releases by date, with columns for feature name, description, and version compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\n<td></td><td><a href=\"https://go.microsoft.com/fwlink/?LinkId=831912\" data-raw-source=\"[2017](https://go.microsoft.com/fwlink/?LinkId=831912)\">2017</a></td>\n</tr>\n<tr>\n    <td rowspan=\"7\"><a href=\"/previous-versions/azure/devops/2015/sep-18-team-services\" data-raw-source=\"[18 Sep 2015](/previous-versions/azure/devops/2015/sep-18-team-services)\">18 Sep 2015</a></td>\n    <td>Inline tasks on the Kanban board</td>\n    <td></td><td><a href=\"https://www.microsoft.com/download/details.aspx?id=48260\" data-raw-source=\"[2015.1](https://www.microsoft.com/download/details.aspx?id=48260)\">2015.1</a></td>\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: This Markdown directive incorporates standard 'next steps' information from a shared include file (`../includes/nextsteps.md`), commonly used across Azure DevOps documentation pages. It requires the existence of the `nextsteps.md` file at the relative path specified.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/testplans/sprint-178-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Links for Azure DevOps Wiki\nDESCRIPTION: Internal page navigation links using markdown syntax for Azure DevOps Wiki documentation. Links reference sections about permalinks and work item status integration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-147-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Permalinks for wiki pages](#permalinks-for-wiki-pages)\n- [Show work item status in wiki pages](#show-work-item-status-in-wiki-pages)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 146 Update Links in Markdown\nDESCRIPTION: This snippet includes a file containing links to Sprint 146 Wiki updates using Markdown syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/wiki/sprint-146-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update-links](../includes/wiki/sprint-146-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Navigation Links for Azure DevOps Documentation\nDESCRIPTION: Navigation menu section using markdown bullet points with anchor links to different sections of a document. Includes links to modern UI experience, HTML tag support, and table editing features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-152-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [New modern user experience](#new-modern-user-experience)\n- [Support for HTML tags](#support-for-html-tags)\n- [Improved table creation and editing](#improved-table-creation-and-editing)\n```\n\n----------------------------------------\n\nTITLE: Setting Default Visibility for All Contributions in Azure DevOps Extension Manifest\nDESCRIPTION: This JSON snippet shows how to set the default visibility for all contributions in an extension manifest, with an exception for a member-only widget.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/public-project.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id:\": \"my-extension\",\n    \"name\": \"My Extension\",\n    \"version\": \"1.0.0\",\n    ...\n    \"restrictedTo\": [\n           \"anonymous\",\n           \"public\",\n           \"member\"\n    ],\n    \"contributions\": [\n        {\n            \"id\": \"my-member-only-widget\",\n            \"type\": \"ms.vss-dashboards-web.widget\",\n            \"restrictedTo\": [\n                \"member\"\n            ],\n            \"properties\": {\n                ...\n            }\n        },\n        {\n            \"id\": \"my-hub\",\n            \"type\": \"ms.vss-web.hub\",\n            \"targets\": [\n                \"ms.vss-code-web.code-hub-group\"\n            ],\n            \"properties\": {  \n                ...              \n            }\n        },\n        {\n            \"id\": \"my-second-hub\",\n            \"type\": \"ms.vss-web.hub\",\n            \"targets\": [\n                \"ms.vss-work-web.work-hub-group\"\n            ],\n            \"properties\": {  \n                ...              \n            }\n        }            \n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 162 Update Links for Reporting in Markdown\nDESCRIPTION: This snippet includes links to Reporting updates for Sprint 162 using a Markdown include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-162-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-162-update-links](includes/reporting/sprint-162-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Link for Azure DevOps Billing\nDESCRIPTION: A markdown link for navigating to billing management documentation section within Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/administration/sprint-150-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Manage billing for your organization from Azure DevOps](#manage-billing-for-your-organization-from-azure-devops)\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Pipeline Agent with gMSA Account\nDESCRIPTION: PowerShell command to configure an Azure Pipelines agent using a Group Managed Service Account (gMSA) as the service account. This allows for centralized password management for domain service accounts, eliminating the need for password input during configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-205-update.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n.\\config.cmd --url https://dev.azure.com/<Organization> `\n             --auth pat --token <PAT> `\n             --pool <AgentPool> `\n             --agent <AgentName> --replace `\n             --runAsService `\n             --windowsLogonAccount <DOMAIN>\\<gMSA>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Documentation Version Notice YAML Front Matter\nDESCRIPTION: YAML front matter definition specifying the document type as an include file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-selector.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Decorator Input Consumption in Azure DevOps Extensions JSON\nDESCRIPTION: This JSON snippet shows the configuration within an Azure DevOps extension manifest (`vss-extension.json`) to allow a pipeline decorator to consume input parameters from its target task. The `targettaskinputs` property lists the names of input parameters from the task specified by `targettask`. These inputs become available to the decorator task defined in the `template`. This functionality is specifically for decorators targeting `pre-task-tasks` or `post-task-tasks`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-195-update.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"contributions\": [\n        {\n            \"id\": <my-required-task>,\n            \"type\": \"ms.azure-pipelines.pipeline-decorator\",\n            \"targets\": [\n                \"ms.azure-pipelines-agent-job.pre-task-tasks\",\n                \"ms.azure-pipelines-agent-job.post-task-tasks\"\n            ],\n            \"properties\": {\n                \"template\": \"my-decorator.yml\",\n                \"targettask\": <target-task-id>,\n                \"targettaskinputs\": [\"<name of input>\"]\n            }\n        }\n    ],\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Including General Sprint 222 Update Links (Markdown)\nDESCRIPTION: This directive uses the Microsoft Docs Markdown syntax `[!INCLUDE ...]` to embed the content of another Markdown file. It specifically includes links related to general updates for Sprint 222 from the specified path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update-links](includes/general/sprint-222-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 200 Update Content for Azure Artifacts in Markdown\nDESCRIPTION: Includes a markdown file containing the main content for the Sprint 200 update for Azure Artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/artifacts/sprint-200-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-200-update](../includes/artifacts/sprint-200-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Link to Azure DevOps Portal\nDESCRIPTION: Next steps action link directing users to the Azure DevOps portal with campaign tracking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-150-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 161 Update Content in Markdown\nDESCRIPTION: Include directive for the main Sprint 161 update content for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-161-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-161-update](../includes/pipelines/sprint-161-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Reporting Information in Markdown\nDESCRIPTION: This snippet shows how to include external reporting-related content in a Markdown file using the INCLUDE directive.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-access.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/report.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding Search Improvement Link List - Markdown - Markdown\nDESCRIPTION: Creates a markdown bullet list entry linking to guidance about improving search result precision using wildcard prefixes and substring searching. No dependencies are required except basic markdown rendering support. The input is a markdown file, and the output is a clickable link in rendered documentation. Intended for quick reader access to related documentation guidance within a navigation or include context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/general/sprint-238-update-links.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- [Improve search results with wildcard prefixes and substrings](#improve-search-results-with-wildcard-prefixes-and-substrings)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 178 Update Details in Markdown\nDESCRIPTION: This Markdown directive embeds the main feature descriptions for the Azure Test Plans Sprint 178 update from an external file (`../includes/testplans/sprint-178-update.md`). The referenced markdown file must exist at the specified relative path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/testplans/sprint-178-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-178-update](../includes/testplans/sprint-178-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Project URL Format\nDESCRIPTION: Code showing the URL format for accessing an Azure DevOps project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/automate-work-item-state-transitions.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}/{Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Including Wiki Sprint 200 Documentation Sections\nDESCRIPTION: Markdown includes for Wiki Sprint 200 update documentation sections including update links, main content, and next steps information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/wiki/sprint-200-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-200-update-links](../includes/wiki/sprint-200-update-links.md)]\n\n[!INCLUDE [sprint-200-update](../includes/wiki/sprint-200-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding HTML Header in ASP.NET Core View\nDESCRIPTION: This snippet demonstrates how to add a simple HTML header to the Index.cshtml file in an ASP.NET Core application. The change is made above the slide carousel div tag to showcase the CI/CD process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/includes/change-aspnet-core-code.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<h1>Demo of CI/CD!!</h1>\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure DevOps API Version Parameter\nDESCRIPTION: Defines the API version parameter for Azure DevOps REST API calls. Uses version 1.0-preview.2 which indicates this is a preview release of the API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version-preview2.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\napi-version = 1.0-preview.2\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 147 Update Content in Markdown\nDESCRIPTION: Markdown include statement for main Sprint 147 update content related to Azure reporting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/reporting/sprint-147-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-147-update](../includes/reporting/sprint-147-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Query Macro Example - Recent Activity\nDESCRIPTION: Example showing how to find recently modified work items using @MyRecentActivity macro\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/feature-matrix-query-macros.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nID In @MyRecentActivity\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure DevOps API Version Parameter\nDESCRIPTION: Defines the API version parameter for Azure DevOps REST API calls. Uses version 2.0-preview which indicates a preview release of the v2.0 API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/version2-preview.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\napi-version = 2.0-preview\n```\n\n----------------------------------------\n\nTITLE: Tree Query Example\nDESCRIPTION: WIQL query showing a tree structure query that returns all work item types in the current project with recursive mode.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_23\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT\n    [System.Id],\n    [System.Title],\n    [System.State],\n    [System.IterationPath]\nFROM workitemLinks\nWHERE\n    (\n        [Source].[System.TeamProject] = @project\n        AND [Source].[System.WorkItemType] <> ''\n        AND [Source].[System.State] <> ''\n    )\n    AND (\n        [System.Links.LinkType] = 'System.LinkTypes.Hierarchy-Forward'\n    )\n    AND (\n        [Target].[System.TeamProject] = @project\n        AND [Target].[System.WorkItemType] <> ''\n    )\nMODE (Recursive)\n```\n\n----------------------------------------\n\nTITLE: Code Block - Moniker Range Conditional\nDESCRIPTION: Markdown conditional syntax for version-specific content display in Azure DevOps documentation\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/create-your-backlog.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<=azure-devops\"\n\nFrom the **View options** selector, you can turn on **In Progress Items**. If you turn it off, items that are in the *Active*, *Committed*, or *Resolved* states or states that map to the [In Progress category state](../work-items/workflow-and-state-categories.md) don't appear in the backlog.\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Collection-Scoped Feed NPM Authentication Configuration\nDESCRIPTION: NPM registry authentication configuration for collection-scoped feeds in Azure DevOps. Includes username, password (base64 encoded PAT), and email settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/npmrc.md#2025-04-22_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n; begin auth token\n//<SERVER_NAME>/<COLLECTION_NAME>/_packaging/<FEED_NAME>/npm/registry/:username=DefaultCollection\n//<SERVER_NAME>/<COLLECTION_NAME>/_packaging/<FEED_NAME>/npm/registry/:_password=[BASE64_ENCODED_PERSONAL_ACCESS_TOKEN]\n//<SERVER_NAME>/<COLLECTION_NAME>/_packaging/<FEED_NAME>/npm/registry/:email=npm requires email to be set but doesn't use the value\n//<SERVER_NAME>/<COLLECTION_NAME>/_packaging/<FEED_NAME>/npm/:username=DefaultCollection\n//<SERVER_NAME>/<COLLECTION_NAME>/_packaging/<FEED_NAME>/npm/:_password=[BASE64_ENCODED_PERSONAL_ACCESS_TOKEN]\n//<SERVER_NAME>/<COLLECTION_NAME>/_packaging/<FEED_NAME>/npm/:email=npm requires email to be set but doesn't use the value\n; end auth token\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for Azure DevOps Branch Restoration\nDESCRIPTION: Markdown content showing the documentation structure and includes for Azure DevOps branch restoration guide. Contains front matter metadata and version-specific content blocks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/restore-deleted-branch.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Restore a deleted branch in your Git repo\ntitleSuffix: Azure Repos\ndescription: Use the branches page to restore a deleted Git branch in Azure DevOps.\nms.assetid:\nms.service: azure-devops-repos\nms.topic: conceptual\nms.date: 02/17/2025\nmonikerRange: '<= azure-devops'\nms.subservice: azure-devops-repos-git\n---\n```\n\n----------------------------------------\n\nTITLE: Example .npmrc file with real values\nDESCRIPTION: A concrete example of an .npmrc file configured for a specific organization (FabrikamOrg), project (NpmDemo), and feed (FabrikamFeed) with the scope '@local'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/npm/scopes.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n@local:registry=https://pkgs.dev.azure.com/FabrikamOrg/NpmDemo/_packaging/FabrikamFeed/npm/registry/\n    \nalways-auth=true\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directives for Wiki Sprint Updates\nDESCRIPTION: Markdown include directives to pull in sprint update content, links and next steps from separate files into the main release notes document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/wiki/sprint-246-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-246-update-links](../includes/wiki/sprint-246-update-links.md)]\n\n[!INCLUDE [sprint-246-update](../includes/wiki/sprint-246-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Services About Page URL\nDESCRIPTION: URL format to access the About page for Azure DevOps Services, which displays the version information. Replace 'YourOrganizationName' with the actual organization name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/lookup-platform-version.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/YourOrganizationName/_home/About\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Include Statement\nDESCRIPTION: Markdown include statement for prerequisites section of the documentation\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/share-steps-between-test-cases.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites-define](includes/prerequisites-define.md)]\n```\n\n----------------------------------------\n\nTITLE: Showing Wiki Information using Azure DevOps CLI\nDESCRIPTION: Command to view and open a wiki page defined for a project. The command allows specifying the wiki name/ID and includes options to open the wiki in a browser.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/includes/open-wiki-hub.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki show --wiki\n                      [--open]\n                      [--project]\n                      [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Including Markdown Content with Custom Syntax - Markdown\nDESCRIPTION: This snippet demonstrates how to embed shared or reusable markdown content into a documentation file using the [!INCLUDE] custom syntax. This method references external markdown files containing contextual feature updates and guidance, enhancing maintainability and avoiding content duplication. Dependencies include the documentation toolchain's support for the [!INCLUDE] directive, and paths provided must be valid relative file paths. Expected input is the path to the included file within brackets, and output is the inline insertion of that markdown fragment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-160-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-160-update-links](../includes/repos/sprint-160-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-160-update](../includes/repos/sprint-160-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-160](../includes/signer/sprint-160.md)]\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Control Logic in TypeScript\nDESCRIPTION: This TypeScript code demonstrates how to implement the logic for a custom work item form control. It shows how to register event handlers, read user inputs, and update the control based on field changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/custom-control.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Control } from \"control\";\nimport * as SDK from \"azure-devops-extension-sdk\";\nimport * as ExtensionContracts from \"azure-devops-extension-api/WorkItemTracking/WorkItemTracking\";\n\nlet control;\n\nconst provider = () => {\n    return {\n        onLoaded: (workItemLoadedArgs) => {\n            // create the control\n            const config = SDK.getConfiguration();\n            const fieldName = config.witInputs[\"FieldName\"];\n            const colors = config.witInputs[\"Colors\"];\n            control = new Control(fieldName, colors);\n        },\n        onFieldChanged: (fieldChangedArgs) => {\n            const changedValue = fieldChangedArgs.changedFields[control.getFieldName()];\n            if (changedValue !== undefined) {\n                control.updateExternal(changedValue);\n            }\n        }\n    };\n};\n\nSDK.init();\nSDK.ready().then(() => {\n    SDK.register(SDK.getContributionId(), provider);\n});\n```\n\n----------------------------------------\n\nTITLE: Azure Boards Delivery Plans Prerequisites Table\nDESCRIPTION: Markdown table defining access levels, permissions, and configuration requirements for using Delivery Plans feature.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/review-team-plans.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Access levels** | To view a delivery plan: Member of the **Project Collection Valid Users** group. Users granted **Stakeholder** access for a private project can view plans. Users granted **Stakeholder** access for a public project can add and view plans. |\n| **Permissions** | To open or modify a work item or add work items to a plan: **Edit work items in this node** permission set to **Allow** for the area paths assigned to the work item. For more information, see [Set permissions and access for work tracking](../../organizations/security/set-permissions-access-work-tracking.md#set-permissions-area-path). |\n| **Configuration** |- Work items belong to a team's [product backlog](../backlogs/create-your-backlog.md) or [portfolio backlog](../backlogs/define-features-epics.md). Only work items that belong to a category selected for viewing on a team's backlog appear on the plan.<br> - [Team product or portfolio backlog enabled](../../organizations/settings/select-backlog-navigation-levels.md).<br> - [Sprints selected for each team](../../organizations/settings/set-iteration-paths-sprints.md#select-team-sprints-and-set-the-default-iteration-path) defined in the plan.<br> - [Start and end dates](../../organizations/settings/set-iteration-paths-sprints.md#add-iterations-and-set-iteration-dates) defined for each iteration.<br> - [Iteration paths](../sprints/assign-work-sprint.md) assigned to each work item.<br> - For dependency icons and lines to show: [work items linked](../backlogs/add-link.md) via the **Predecessor-Successor** link type or other custom dependency link type. (Remote link types aren't supported.) You can add custom link types only for on-premises environments. |\n```\n\n----------------------------------------\n\nTITLE: Publishing RSpec Test Results in Azure Pipelines (YAML)\nDESCRIPTION: This step publishes JUnit-style test result XML files (produced by RSpec and Rake) to Azure DevOps for reporting. The 'PublishTestResults' task supports advanced conditionals, ensuring results are uploaded even if previous steps failed. Key parameters specify the path pattern for result files and a test run title for identification. Prerequisites: tests must be configured to output in JUnit XML format and place the files at matching locations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/ruby.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishTestResults@2\\n  condition: succeededOrFailed()\\n  inputs:\\n    testResultsFiles: '**/test-*.xml'\\n    testRunTitle: 'Ruby tests'\\n\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 162 Update Links for Azure Repos in Markdown\nDESCRIPTION: This snippet includes links to Azure Repos updates for Sprint 162 using a Markdown include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-162-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-162-update-links](includes/repos/sprint-162-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directives for Sprint 227 Documentation\nDESCRIPTION: Markdown include directives that pull in content for Sprint 227 release notes, including update links, main content, and next steps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-227-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-227-update-links](../includes/boards/sprint-227-update-links.md)]\n\n[!INCLUDE [sprint-227-update](../includes/boards/sprint-227-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including My Work Note\nDESCRIPTION: Markdown snippet that includes a note about My Work code review support using INCLUDE syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/develop-code-manage-pending-changes.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/note-my-work-code-review-support.md)]\n```\n\n----------------------------------------\n\nTITLE: Client Cache Management Command for Azure DevOps Server\nDESCRIPTION: Command for rebuilding the client cache in Azure DevOps Server. Used after certain maintenance operations like moving, restoring, renaming, or failing over a data-tier or application-tier server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-customize-and-manage-objects-for-tracking-work.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nrebuildcache\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 162 Update Content for Azure Pipelines in Markdown\nDESCRIPTION: This snippet includes the full content of Azure Pipelines updates for Sprint 162 using a Markdown include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-162-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-162-update](includes/pipelines/sprint-162-update.md)]\n```\n\n----------------------------------------\n\nTITLE: TFVC Shelveset Name Restrictions\nDESCRIPTION: Specifies naming conventions for TFVC shelvesets, which are temporary storage locations for pending changes. Names must be under 64 characters with specific character restrictions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/naming-restrictions.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n|Restriction type |Restriction |\n|---------|----------|\n|Length    |Must not contain more than 64 Unicode characters.  |\n|Special characters | Must not contain the following printable characters: `\\ / : * ? \" < > & ;` &#124;. |\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 162 Update Links for Azure Pipelines in Markdown\nDESCRIPTION: This snippet includes links to Azure Pipelines updates for Sprint 162 using a Markdown include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-162-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-162-update-links](includes/pipelines/sprint-162-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Version Control Note in Markdown\nDESCRIPTION: Markdown include statement for version control compatibility notice in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/add-task-checklists.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Reference Link for Basic Process Documentation\nDESCRIPTION: A markdown reference link that points to a section about simplifying work organization using the Basic process in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/boards/sprint-146-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Simplify the organization of your work using the Basic process](#simplify-the-organization-of-your-work-using-the-basic-process)\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for Azure DevOps Release Notes\nDESCRIPTION: HTML table structure containing release notes and feature updates for Azure DevOps services organized by sprint dates. The table includes columns for feature description, service area, and version availability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<tr><td>Control over automated task updates from Marketplace</td><td>Pipelines</td><td>Future</td></tr>\n<tr><td>The Test and Feedback extension is now available in the Microsoft Edge store</td><td>Test Plans</td><td>Future</td></tr>\n<tr>\n<td rowspan=\"13\"><a href=\"2020/sprint-174-update.md\" data-raw-source=\"[24 August 2020](2020/sprint-174-update.md)\">24 August 2020</a></td>\n<td>System work item types on backlogs and boards</td><td>Boards</td><td>2020.1</td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Feedback Image Reference in Markdown\nDESCRIPTION: Markdown syntax for displaying a feedback suggestion image using div class and img border\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-147-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Make a suggestion](../../media/help-make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Including General Sprint 251 Update Links (Markdown)\nDESCRIPTION: This Markdown snippet uses the `[!INCLUDE ...]` directive, specific to the Microsoft Docs platform, to embed content from another file. It inserts links related to the General updates for Sprint 251.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update-links](includes/general/sprint-251-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Sample Git Log Output\nDESCRIPTION: Example output from git log --oneline command showing commit history with abbreviated SHA-1 checksums and commit messages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/undo.md#2025-04-22_snippet_6\n\nLANGUAGE: output\nCODE:\n```\ne745d06 (HEAD -> main) Add a test initialization class\n31da50b Add network switch test\n0c14391 Add readme file\n32e3946 Add project files.\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 178 Update Links in Azure Boards Documentation\nDESCRIPTION: This code snippet includes a Markdown file containing links related to the Sprint 178 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/Boards/sprint-178-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-178-update-links](../includes/boards/sprint-178-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Shared Release Note Segments in Azure DevOps Documentation - Markdown\nDESCRIPTION: These Markdown snippets use Azure DevOps documentation include syntax to embed shared content blocks for release notes. Dependencies include external files referenced relative to the current document. The key parameters are the paths to the include files; the expected output is the inserted content rendered in the documentation page, allowing centralized management. Limitations include reliance on the existence and accuracy of referenced include files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/pipelines/sprint-169-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-169-update-links](../includes/pipelines/sprint-169-update-links.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-169-update](../includes/pipelines/sprint-169-update.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 224 Update Links for Azure Boards\nDESCRIPTION: This directive includes content from a shared file containing links related to the Sprint 224 updates specifically for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-224-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-224-update-links](includes/boards/sprint-224-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Advanced Security Sprint 222 Update Links (Markdown)\nDESCRIPTION: This directive uses the Microsoft Docs Markdown syntax `[!INCLUDE ...]` to embed the content of another Markdown file. It specifically includes links related to GitHub Advanced Security for Azure DevOps updates for Sprint 222.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update-links](includes/ghazdo/sprint-222-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Azure Boards Documentation\nDESCRIPTION: Markdown include directive that references external content for the next steps section in the Azure Boards documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-205-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Documentation Front Matter in YAML\nDESCRIPTION: YAML front matter metadata for an Azure DevOps documentation page, specifying service, authors, topic type and date information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/note-new-boards-hub-default-images.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.service: azure-devops-boards\nms.author: chcomley\nauthor: chcomley\nms.topic: include\nms.date: 11/26/2024\n---\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Markdown\nDESCRIPTION: This snippet demonstrates how to include version-specific content in a Markdown document using a custom include directive. It's used to add content that applies to specific versions of Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/commit-history.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Navigation Links in Markdown\nDESCRIPTION: Internal document navigation links for Ubuntu 22.04 and macOS 12 Monterey preview announcements in Azure Pipelines hosted pools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-204-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Ubuntu 22.04 in preview for Azure Pipelines hosted pools](#ubuntu-2204-in-preview-for-azure-pipelines-hosted-pools)\n- [Preview of macOS 12 Monterey for Azure Pipeline hosted pools](#preview-of-macos-12-monterey-for-azure-pipeline-hosted-pools)\n```\n\n----------------------------------------\n\nTITLE: Markdown Links Block\nDESCRIPTION: Includes external markdown file containing Sprint 150 update links for administration section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/administration/sprint-150-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-150-update-links](../includes/administration/sprint-150-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Stack Overflow Reference Link\nDESCRIPTION: Markdown link to Stack Overflow questions tagged with VSTS.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/may-07-vsts.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[Stack Overflow](https://stackoverflow.com/questions/tagged/vsts)\n```\n\n----------------------------------------\n\nTITLE: Including General Feature Details for Sprint 146 Update\nDESCRIPTION: This Markdown directive includes a file containing the detailed descriptions of the General features introduced in the Azure DevOps Sprint 146 update. It embeds specific content into the main release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update](includes/general/sprint-146-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Example of Listing Branch Policies for Pull Request #28\nDESCRIPTION: This example demonstrates how to use the Azure CLI to list the policies in effect for pull request #28. The output is formatted as a table for easy readability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/complete-pull-requests.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz repos pr policy list --id 28 --output table\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Navigation Action Button in Markdown\nDESCRIPTION: Markdown code for rendering a next step action button linking to Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-153-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Statement for Sprint 150 Update Content\nDESCRIPTION: Markdown include directive to embed main sprint 150 update content from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-150-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-150-update](../includes/general/sprint-150-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 194 Update Links in Markdown\nDESCRIPTION: Markdown include directive that imports content from a file containing links related to the Sprint 194 update for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-194-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-194-update-links](../includes/pipelines/sprint-194-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 154 Update Content in Markdown\nDESCRIPTION: This snippet includes a markdown file containing the main content for the Sprint 154 update for Azure Test Plans.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/testplans/sprint-154-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-154-update](../includes/testplans/sprint-154-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 150 Update Links in Markdown\nDESCRIPTION: Markdown include statement for Sprint 150 update links documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-150-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-150-update-links](../includes/pipelines/sprint-150-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Version Control Template in Markdown\nDESCRIPTION: Markdown include statement for version control template used in Azure DevOps documentation\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/pipeline-default-branch.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-gt-eq-2020](../../includes/version-gt-eq-2020.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Azure DevOps Documentation\nDESCRIPTION: Markdown include directive that imports the standard 'next steps' section. This reusable component provides consistent guidance across documentation pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-241-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Test Plans Update Links (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/testplans/sprint-245-update-links.md`), likely containing links related to Sprint 245 updates for Azure Test Plans. It's used within the context of Azure DevOps release notes to consolidate links for Test Plan updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update-links](includes/testplans/sprint-245-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Test Report Field Names for Power BI Table\nDESCRIPTION: List of field names to add to the Power BI table visualization columns. These fields represent different test execution metrics including test names, counts for different test states, and pass rates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-failed-tests.md#2025-04-22_snippet_10\n\nLANGUAGE: powerbi\nCODE:\n```\nTest.TestName\nTotalCount\nPassedCount\nFailedCount\nNotImpactedCount\nNotExecutedCount\nFlakyCount\nPassRate\n```\n\n----------------------------------------\n\nTITLE: Styling an Image with a Border (Markdown Extension)\nDESCRIPTION: This uses a Microsoft Docs specific Markdown extension (`[!div class=\"mx-imgBorder\"]`) to apply a border style to the following Markdown image element. The image illustrates how users can provide feedback.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"] \n> ![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Markdown Version Header\nDESCRIPTION: YAML frontmatter defining the document type as an include file, followed by version compatibility notice for Azure DevOps Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/version-lt-eq-2020.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nms.topic: include\n---\n\n**Azure DevOps Server 2020 | Azure DevOps Server 2019**\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Link for Go Get Command\nDESCRIPTION: A markdown internal page link targeting the Go get command support section in Azure Repos documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-153-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Go get command support in Azure Repos](#go-get-command-support-in-azure-repos)\n```\n\n----------------------------------------\n\nTITLE: Capturing Resource Utilization Details with PowerShell in Azure DevOps Pipelines\nDESCRIPTION: A PowerShell script that captures disk usage, memory availability, and CPU utilization metrics during pipeline execution. The script outputs these metrics to a text file which is uploaded to the pipeline logs for later analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# Place this task in your pipeline to log the current resource utilization\n# of the pipeline. This task appends the specified resource usage to a logfile\n# which is uploaded at the end of the current pipeline job.\n- pwsh: |\n      $logFile = '$(Agent.TempDirectory)\\resource-usage.txt'\n      if (!(Test-Path $logFile))\n      {\n        New-Item $logFile\n      }\n      Get-Date | Out-File -FilePath $logFile -Append\n      Get-Volume | Out-File -FilePath $logFile -Append\n      Get-Counter '\\Memory\\Available MBytes' | Out-File -FilePath $logFile -Append\n      Get-Counter '\\Processor(_Total)\\% Processor Time' | Out-File -FilePath $logFile -Append\n      sleep 10\n  displayName: 'Check resource utilization'\n\n# Other tasks here, and you can repeat the \"Check resource utilization\"\n# step if desired, and the results will be appended to the resource-usage.txt file\n\n- pwsh: Write-Host \"##vso[task.uploadfile]$(Agent.TempDirectory)\\resource-usage.txt\"\n  displayName: 'Upload resource usage from pipeline run'\n  condition: always()\n```\n\n----------------------------------------\n\nTITLE: Example TFSSecurity Command Execution for ISVError:100014 (cmdline)\nDESCRIPTION: This command-line snippet provides a concrete example of executing the TFSSecurity.exe command to fix a missing permission error (ISVError:100014). It shows the command with the scope, group SID (partially redacted), and collection URL filled in, based on information typically found in the corresponding error message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_9\n\nLANGUAGE: cmdline\nCODE:\n```\nTFSSecurity.exe /a+ Identity \"397c326b-b97c-4510-8271-75aac13de7a9\\\\\" Read sid:S-1-9-XXXXXXXXXX-XXXXXXXXXX-XXXXXXXXXX-XXXXXXXXXX-0-0-0-0-3 ALLOW /collection:https://localhost:8080/defaultcollection\n```\n\n----------------------------------------\n\nTITLE: Specifying Profile Page URL in Markdown Documentation - Markdown\nDESCRIPTION: This snippet demonstrates how to display a URL in Markdown text by wrapping it in backticks. There are no dependencies; this is standard Markdown and is typically used for presenting configuration, endpoint references, or direct navigation links for user guidance. For this file, it specifies the Azure DevOps profile management endpoint to guide users toward their application management page. No parameters, input, or output; this is purely instructional.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_8\n\nLANGUAGE: Markdown\nCODE:\n```\n`https://app.vssps.visualstudio.com/profile/view`\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Pass Rate by Build Reason\nDESCRIPTION: PowerBI query that retrieves pipeline pass rate data filtered by build reason (Manual, BatchedCI, Pull Request etc). Groups results by run reason and completion date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-pass-rate-trend.md#2025-04-22_snippet_5\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\"\n        &\"$apply=filter( \"\n                &\"Pipeline/PipelineName eq '{pipelineName}' \"\n                &\"and CompletedDate ge {startdate} \"\n                &\"and CanceledCount ne 1 \"\n        &\") \"\n        &\"/groupby( \"\n            &\"(RunReason, CompletedOn/Date), \"\n                &\"aggregate \"\n                &\"($count as TotalCount, \"\n            &\"SucceededCount with sum as SucceededCount , \"\n                &\"FailedCount with sum as FailedCount, \"\n            &\"PartiallySucceededCount with sum as PartiallySucceededCount)) \"\n        &\"/compute( \"\n    &\"SucceededCount mul 100.0 div TotalCount as PassRate, \"\n    &\"FailedCount mul 100.0 div TotalCount as FailRate, \"\n    &\"PartiallySucceededCount mul 100.0 div TotalCount as PartiallySuccessfulRate) \"\n    &\"&$orderby=CompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Including Release Notes Content with Markdown Include Directives\nDESCRIPTION: These markdown include directives reference external content files that contain the Sprint 199 update links, update details, and next steps information for Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/general/sprint-199-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-199-update-links](../includes/general/sprint-199-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-199-update](../includes/general/sprint-199-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Test Plans Sprint 251 Update Links (Markdown)\nDESCRIPTION: This Markdown snippet employs the `[!INCLUDE ...]` directive to embed content from the specified file path. It inserts links detailing the Test Plans updates for Sprint 251.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-251-update-links](includes/testplans/sprint-251-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating a Next Steps Action Button in Markdown\nDESCRIPTION: This snippet creates a button link to Azure DevOps using Markdown syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-155-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Marking Tests as Flaky in Azure DevOps\nDESCRIPTION: This snippet demonstrates the process of manually marking or unmarking a test as flaky in Azure DevOps. It includes screenshots of the user interface for this action.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/flaky-test-management.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Mark flaky Test](media/flaky-test-management/mark-flaky-1.png)\n\n> [!div class=\"mx-imgBorder\"]\n> ![Confirm flaky Test](media/flaky-test-management/markflaky.png)\n```\n\n----------------------------------------\n\nTITLE: Including next steps in Markdown document\nDESCRIPTION: Markdown include directive to pull in next steps content from an external file located in the includes directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/general/sprint-202-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Prerequisites in Markdown\nDESCRIPTION: This snippet demonstrates how to include prerequisites content in a Markdown file using a special include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/custom-rules.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/process-prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 154 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links related to the Sprint 154 update for Azure Test Plans.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/testplans/sprint-154-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-154-update-links](../includes/testplans/sprint-154-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Pipelines Image Demand in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to specify a demand for an Azure Pipelines image in an Azure Pipelines YAML file. It uses the 'ImageOverride' demand to request the Windows Server 2022 image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-images.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: fabrikam-dev-pool # Name of Managed DevOps Pool\n  demands:\n  - ImageOverride -equals windows-2022\n```\n\n----------------------------------------\n\nTITLE: Inserting an Image with Border in Markdown\nDESCRIPTION: This snippet inserts an image with a border class using Markdown syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-155-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Make a suggestion](../../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Warning for Collation Validation Failure Due to No Internet (cmdline)\nDESCRIPTION: This command-line output is a warning from the Data Migration Tool when it cannot validate the conversion of a non-natively supported collation due to a lack of internet connectivity. It allows the migration process to continue but notes that validation will occur during the 'prepare' command, which requires an internet connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_5\n\nLANGUAGE: cmdline\nCODE:\n```\nThe collections database's collation '{collation}' is not natively supported in Azure DevOps Services. It could not be validated that the collation can be converted during migration to a supported Azure DevOps Services collation, as there was no internet connection. Please run the command again from a machine with an internet connection. See more details at https://aka.ms/AzureDevOpsImportCollations\n```\n\n----------------------------------------\n\nTITLE: Creating a Styled 'Next Step' Link in Markdown\nDESCRIPTION: Uses a Markdown extension (`[!div class=\"...\"]`) to apply specific styling (CSS class 'nextstepaction') to a standard Markdown link. This enhances the visual presentation of call-to-action links.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-206-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!div class=\"nextstepaction\"] \n[Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Example .tfignore File Configuration for Azure DevOps\nDESCRIPTION: A sample .tfignore file that demonstrates various ignore patterns including folder-specific rules, file extension filtering, and exception patterns. The file shows how to ignore .cpp files in specific subfolders, ignore .txt files in the current folder, ignore .xml files recursively, ignore an entire subfolder, and create exceptions for .dll files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/add-files-server.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n######################################\n# Ignore .cpp files in the ProjA subfolder and all its subfolders\nProjA\\*.cpp\n#\n# Ignore .txt files in this folder\n\\*.txt\n#\n# Ignore .xml files in this folder and all its sub-folders\n*.xml\n#\n# Ignore all files in the Temp sub-folder\n\\Temp\n#\n# Don't ignore .dll files in this folder nor in any of its subfolders\n!*.dll\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Links\nDESCRIPTION: Internal page navigation links for Azure DevOps documentation, referencing sections about pipeline extensions, migration improvements, and API updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-201-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [New extension points for Pipelines details view](#new-extension-points-for-pipelines-details-view)\n- [Improved migration to Azure DevOps Services](#improved-migration-to-azure-devops-services)\n- [Improvement to Pipelines Runs REST API](#improvement-to-pipelines-runs-rest-api)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 202 update links in Markdown document\nDESCRIPTION: Markdown include directive to pull in Sprint 202 update links from an external file located in the includes/general directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/general/sprint-202-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update-links](../includes/general/sprint-202-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Git-tf in Bash\nDESCRIPTION: Sets up the JAVA_HOME and PATH environment variables to include the Java runtime and Git-tf directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/share-your-code-in-tfvc-xcode.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport JAVA_HOME=/Library/Java/Home \nexport PATH=$PATH:$JAVA_HOME/bin:/git_tf\n```\n\n----------------------------------------\n\nTITLE: Including sprint-202 update content for Azure Pipelines section\nDESCRIPTION: Markdown include directive for Azure Pipelines sprint 202 update content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-202-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update](includes/pipelines/sprint-202-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Inserting Bordered Image in Markdown\nDESCRIPTION: This snippet demonstrates how to insert an image with a border in Markdown, specifically showing a 'Make a suggestion' interface.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/nextsteps.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Make a suggestion](../../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Creating a Markdown Link Reference for Build Policy Prevention in Azure DevOps\nDESCRIPTION: A markdown link reference pointing to a section about preventing unauthorized users from configuring pipelines as build policies in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/repos/sprint-234-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Prevention for unauthorized users to configure pipeline as a Build Policy](#prevention-for-unauthorized-users-to-configure-pipeline-as-a-build-policy)\n```\n\n----------------------------------------\n\nTITLE: Including Pipelines Feature Details for Sprint 166 (Markdown)\nDESCRIPTION: Uses a Markdown include directive to embed content from 'includes/pipelines/sprint-166-update.md'. This inserts the detailed descriptions of the Azure Pipelines features updated in Sprint 166.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-166-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-166-update](includes/pipelines/sprint-166-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Video Embedding Markdown Syntax\nDESCRIPTION: Markdown syntax for embedding a YouTube video explaining new features in VSTS.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/mar-05-vsts.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!VIDEO https://www.youtube.com/embed/ph2yNok4-QY?rel=0]\n```\n\n----------------------------------------\n\nTITLE: Package Link URL Format in VSTS\nDESCRIPTION: URL format for sharing package links at the account level in VSTS. This format allows sharing packages without requiring a specific project context, making it more flexible for recipients.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/feb-14-vsts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`https://<account>.visualstudio.com/_packaging?feed=<feed>&package=<package>&version=<version>&protocolType=<NuGet|npm|Maven>&_a=package`\n```\n\n----------------------------------------\n\nTITLE: Adding User with Stakeholder Access in Azure DevOps CLI\nDESCRIPTION: Command to add a new user to Azure DevOps organization with stakeholder license type. Returns user details including ID, display name, email, license type, access level, and status.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/add-organization-users.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops user add --email-id contoso@contoso.com --license-type stakeholder --output table\n```\n\n----------------------------------------\n\nTITLE: Including External Markdown Content\nDESCRIPTION: These snippets show how to include content from external markdown files using the INCLUDE directive. This is used to modularize the content for different sections of the update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-155-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update-links](includes/general/sprint-155-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update-links](includes/boards/sprint-155-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update-links](includes/repos/sprint-155-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update-links](includes/artifacts/sprint-155-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update-links](includes/pipelines/sprint-155-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update](includes/general/sprint-155-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update](includes/boards/sprint-155-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update](includes/repos/sprint-155-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update](includes/artifacts/sprint-155-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155-update](includes/pipelines/sprint-155-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155](includes/signer/sprint-155.md)]\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group using Azure CLI\nDESCRIPTION: This Azure CLI command deletes the Azure resource group specified by `<resource-group-name>`. The `-n` flag is shorthand for `--name`. This permanently removes the group and all resources contained within it, typically used for cleanup after Bicep deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-arm-template.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete -n  <resource-group-name>\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Azure DevOps Docs\nDESCRIPTION: This snippet demonstrates how to include version-specific content in Azure DevOps documentation using a custom include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/disable-request-access-policy.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-eq-azure-devops](../../includes/version-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directive\nDESCRIPTION: An include directive used to add version-specific content to the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/about-pull-requests.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group using Azure CLI\nDESCRIPTION: This Azure CLI command uses `az group delete` to remove the specified resource group ('myapp-rg') and all the resources contained within it, such as the Azure Container Registry created during the tutorial. This is a cleanup step to avoid incurring further Azure charges.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/acr-template.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name myapp-rg\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Link to User Management Section in Azure DevOps Docs\nDESCRIPTION: A markdown link that references a section about managing users from the command line. This is likely part of a table of contents or navigation structure in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/administration/sprint-152-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Manage users from the command line](#manage-users-from-the-command-line)\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Information\nDESCRIPTION: This Markdown directive includes content, typically guidance or links for users on what to do next after reviewing the release notes, from the specified file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-228-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Using Azure DevOps CLI with Access Token Environment Variable\nDESCRIPTION: Example showing two ways to use the Azure DevOps CLI with an access token: the script shortcut syntax and the equivalent task syntax. The environment variable AZURE_DEVOPS_EXT_PAT is set for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# Using the script shortcut syntax\n- script: az pipelines variable-group list --output table\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n  displayName: 'List variable groups using the script step'\n\n# Using the task syntax\n- task: CmdLine@2\n  inputs:\n    script: az pipelines variable-group list --output table\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n  displayName: 'List variable groups using the command line task'\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Project URL Format\nDESCRIPTION: A URL template for signing into an Azure DevOps project. This format is used to access the project where wiki permissions can be managed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-readme-wiki-permissions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```https://dev.azure.com/{Your_Organization/Your_Project}```\n```\n\n----------------------------------------\n\nTITLE: Subscribing to a Specific Repository in Slack\nDESCRIPTION: Command to monitor a specific Git or TFVC repository for events. For Git repositories, this subscribes to PR created events, while for TFVC it subscribes to code check-in events.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-slack.md#2025-04-22_snippet_1\n\nLANGUAGE: slash command\nCODE:\n```\n/azrepos subscribe [repository url]\n```\n\n----------------------------------------\n\nTITLE: Including Modular Content in Azure DevOps Docs - Markdown\nDESCRIPTION: This snippet demonstrates the use of Markdown 'include' directives to modularize documentation content in Azure DevOps. It references shared content such as update links, feature summaries, and next steps by including partial Markdown files. Dependencies include the referenced Markdown partials, and the target environment is a documentation platform or static site generator that recognizes the 'INCLUDE' syntax. These includes centralize updates and ensure consistency, but require the referenced files to exist and be updated accordingly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/general/sprint-238-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-238-update-links](../includes/general/sprint-238-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-238-update](../includes/general/sprint-238-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Test Plans Prerequisites Include\nDESCRIPTION: Markdown snippet for including prerequisites section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/navigate-test-plans.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites](includes/prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Applying Checkout Lock to Folder in TFVC\nDESCRIPTION: Example of preventing changes to an entire folder by applying a checkout lock to the source directory in the server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/lock-command.md#2025-04-22_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf lock /lock:checkout $/src\n```\n\n----------------------------------------\n\nTITLE: Filtering User Stories Closed by Current User in Azure Boards (WIQL)\nDESCRIPTION: This clause finds user stories that the current user closed by specifying `Work Item Type = User Story` and `Closed By = @Me`. This allows filtering by both item type and closer's identity, ideal for reviewing personally completed work.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_10\n\nLANGUAGE: WIQL\nCODE:\n```\nWork Item Type = User Story\nAnd Closed By = @Me\n```\n\n----------------------------------------\n\nTITLE: Structuring HTML for Chart Widget in Azure DevOps Extension\nDESCRIPTION: HTML structure for a chart widget in an Azure DevOps extension. It includes references to the VSS SDK and a custom JavaScript file for the pie chart implementation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-chart.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <script src=\"sdk/scripts/VSS.SDK.js\"></script>\n    <script src=\"scripts/pie-chart.js\"></script>\n</head>\n<body>\n    <div class=\"widget\">\n        <h2 class=\"title\">Chart Widget</h2>\n        <div id=\"Chart-Container\"></div>\n    </div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating Unit Tests for Floating-Point Equality in C#\nDESCRIPTION: Unit test code that demonstrates the issue with direct floating-point comparisons. The test validates that the equality method should allow for small rounding errors by testing various combinations of values and acceptable error margins.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-suspend-work-fix-bug-conduct-code-review.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\n// Added 2022-02-02 for bug 654321:\n/// <summary>\n/// Make sure that number equality test allows for \n/// small rounding errors.\n/// </summary>\n[TestMethod]\npublic void TestDoublesEqual()\n{\n    // Allow a rounding error of 1 in 1000000:\n    TestEqual(1, 1e-7, true); // Less than allowed error\n    TestEqual(1, 1e-5, false); // More than allowed error\n    TestEqual(1000, 1e-7, true); // Less than allowed error\n    TestEqual(1000, 1e-5, false); // More than allowed error\n}\nprivate void TestEqual(double value, double error, bool result)\n{\n    // Try different combinations of error and value:\n    Assert.IsTrue(result == LocalMath.EqualTo(value + error, value));\n    Assert.IsTrue(result == LocalMath.EqualTo(value, value + error));\n    Assert.IsTrue(result == LocalMath.EqualTo(value - error, value));\n    Assert.IsTrue(result == LocalMath.EqualTo(value, value - error));\n}\n```\n\n----------------------------------------\n\nTITLE: Work Item Count Query Response in Azure DevOps Services\nDESCRIPTION: This snippet shows the JSON response from the Analytics service after querying for work item count in Azure DevOps Services. It includes the OData context and the count value in the results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_6\n\nLANGUAGE: OData\nCODE:\n```\n{\n\"@odata.context\": \"https://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/$metadata#WorkItems(Count)\",\n\"value\": [\n   {\n   \"@odata.id\": null,\n   \"Count\": 1399\n   }\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Using Mathematical Notation with KaTeX in Azure DevOps\nDESCRIPTION: Demonstrates how to add mathematical notation using KaTeX in wiki pages and pull requests. Examples include Greek characters, algebraic notation, and sums/integrals.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_11\n\nLANGUAGE: KaTeX\nCODE:\n```\n$\n\\alpha, \\beta, \\gamma, \\delta, \\epsilon, \\zeta, \\eta, \\theta, \\kappa, \\lambda, \\mu, \\nu, \\omicron, \\pi, \\rho, \\sigma, \\tau, \\upsilon, \\phi, ...\n$  \n\n$\\Gamma,  \\Delta,  \\Theta, \\Lambda, \\Xi, \\Pi, \\Sigma, \\Upsilon, \\Phi, \\Psi, \\Omega$\n```\n\nLANGUAGE: KaTeX\nCODE:\n```\nArea of a circle is $\\pi r^2$\n\nAnd, the area of a triangle is:\n\n$$\nA_{triangle}=\\frac{1}{2}({b}\\cdot{h})\n$$\n```\n\nLANGUAGE: KaTeX\nCODE:\n```\n$$\n\\sum_{i=1}^{10} t_i\n$$\n\n$$\n\\int_0^\\infty \\mathrm{e}^{-x}\\,\\mathrm{d}x\n$$     \n```\n\n----------------------------------------\n\nTITLE: Configuring Workload Identity Federation for DotNet CLI Task\nDESCRIPTION: YAML configuration for using workload identity federation with the DotNetCoreCLI task. Requires setting the connectedService property and SYSTEM_ACCESSTOKEN environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-246-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'run'\n    connectedService: <Azure service connection configured with workload identity federation>\n  env:\n    SYSTEM_ACCESSTOKEN: $(System.AccessToken)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 231 Azure Pipelines Update Links\nDESCRIPTION: This snippet uses a Markdown include directive specific to the Microsoft Docs platform to insert content from another file. It includes links related to the Sprint 231 updates for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-231-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-231-update-links](includes/pipelines/sprint-231-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 232 Feature Links using Markdown Directive\nDESCRIPTION: This Markdown directive `[!INCLUDE ...]` is utilized by the documentation build system (likely DocFX/Markdig) to embed the content from the specified file (`../includes/general/sprint-232-update-links.md`). This included file typically contains hyperlinks to individual feature descriptions pertinent to the Sprint 232 update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/general/sprint-232-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-232-update-links](../includes/general/sprint-232-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Example of Deleting a Test Run with TCM\nDESCRIPTION: This example demonstrates deleting a test run with ID 1000082 for the Fabrikam Fiber project in the fabrikamprime organization. The command prompts for confirmation before deletion and displays a confirmation message after successful deletion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_9\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /delete /id:1000082 /collection:https://fabrikamprime.visualstudio.com /teamproject:\"Fabrikam Fiber\"\n\nAre you sure you want to delete run [MyTestRun]? (Yes/No) y\n\nRun [MyTestRun] has been deleted.\n```\n\n----------------------------------------\n\nTITLE: Markdown Link Reference\nDESCRIPTION: Internal documentation link reference for Analytics Services OData version changes section using markdown syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/reporting/sprint-149-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Analytics services OData version change for test entity sets](#analytics-services-odata-version-change-for-test-entity-sets)\n```\n\n----------------------------------------\n\nTITLE: Include Azure DevOps Version Directive\nDESCRIPTION: This Markdown directive is used within the Microsoft Docs platform to include a standard content snippet indicating that the document applies specifically to Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/organization-management.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-eq-azure-devops](../../includes/version-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating a TFVC Workspace with Command-Line Syntax in Batch\nDESCRIPTION: Command syntax for creating a new TFVC workspace, with options for template, computer, comment, permissions and other workspace attributes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspace-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Batch\nCODE:\n```\ntf workspace /new [/noprompt] [/template:<workspace-name>[;<workspace-owner>]]\n[/computer:<computer-name>] [/comment:(\"<comment>\"|@<comment-file>)]\n[<workspace-name>[;<workspace-owner>]] [/login:<username>,[<password>]]\n[/collection:<team-project-collection-url>] [/permission:(Private|PublicLimited|Public)]\n[/location:(local|server)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 147 Update Content in Markdown\nDESCRIPTION: Markdown include directive for main Sprint 147 update content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-147-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-147-update](../includes/repos/sprint-147-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Extending YAML Pipeline Template with Context Information for Testing\nDESCRIPTION: This pipeline extends the testing-template.yml template and passes templateContext information for two test jobs. It demonstrates how to structure a pipeline that runs both positive and negative tests with different expected HTTP response codes and component requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-202-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: none\n\npool:\n  vmImage: ubuntu-latest\n\nextends:\n  template: testing-template.yml\n  parameters:\n    testSet:\n    - job: positive_test\n      templateContext:\n        expectedHTTPResponseCode: 200\n        requiredComponents: dimensionsapi\n      steps:\n      - script: ./runPositiveTest.sh\n    - job: negative_test\n      templateContext:\n        expectedHTTPResponseCode: 500\n        requiredComponents: dimensionsapi\n      steps:\n      - script: ./runNegativeTest.sh\n```\n\n----------------------------------------\n\nTITLE: Iterative Insertion in Job Template in YAML\nDESCRIPTION: This example demonstrates how to use the 'each' directive for iterative insertion in a job template.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-expressions.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# job.yml\nparameters:\n- name: 'jobs'\n  type: jobList\n  default: []\n\njobs:\n- ${{ each job in parameters.jobs }}: # Each job\n  - ${{ each pair in job }}:          # Insert all properties other than \"steps\"\n      ${{ if ne(pair.key, 'steps') }}:\n        ${{ pair.key }}: ${{ pair.value }}\n    steps:                            # Wrap the steps\n    - task: SetupMyBuildTools@1       # Pre steps\n    - ${{ job.steps }}                # Users steps\n    - task: PublishMyTelemetry@1      # Post steps\n      condition: always()\n```\n\n----------------------------------------\n\nTITLE: Creating a Next Steps Action Button in Markdown\nDESCRIPTION: This snippet creates a 'Next Steps' action button in markdown, linking to the Azure DevOps platform.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-150-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"]\n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section using Markdown Directive\nDESCRIPTION: This Markdown directive `[!INCLUDE ...]` incorporates a standardized 'next steps' or concluding section into the release notes page by embedding the content from the `../includes/nextsteps.md` file. This promotes consistency and reusability of common concluding information across documentation pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/general/sprint-232-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 155 Signer Information in Markdown\nDESCRIPTION: This snippet includes a reference to a file containing signer information for Sprint 155.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-155-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155](../includes/signer/sprint-155.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Link for GitHub Collaborator Invitation in Azure DevOps\nDESCRIPTION: This snippet demonstrates how to create a markdown link for a section about inviting GitHub collaborators into Azure DevOps. It uses the standard markdown link syntax with a hash symbol to reference an internal section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-155-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Invite GitHub collaborators into Azure DevOps](#invite-github-collaborators-into-azure-devops)\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Statements for Azure DevOps Versioning\nDESCRIPTION: Markdown include statements to specify Azure DevOps version compatibility for the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/get-started/what-is-repos.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)] \n[!INCLUDE [version-vs-gt-eq-2019](../../includes/version-vs-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Linking Azure Boards Work Items in GitHub Commits/PRs using AB# Syntax\nDESCRIPTION: Describes the syntax `AB#{Id}` used within GitHub commit messages or pull request descriptions to link to a specific Azure Boards work item. Replacing `{Id}` with the actual work item ID establishes the connection. When used with specific keywords (like 'Fixes') in the PR description or commit messages, it can automatically update the linked work item's state upon PR completion/merge. The surrounding text discusses enhancing this to support transitions to states other than 'Closed'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/roadmap/2024/boards-state-transitions-with-github-repos.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAB#{Id}\n```\n\n----------------------------------------\n\nTITLE: Displaying Iteration Paths Image in Markdown\nDESCRIPTION: This snippet shows how to include an image of iteration paths in a markdown document using Azure DevOps-specific syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/configure-customize.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n:::image type=\"content\" source=\"media/config-custom/iteration-paths-flat-or-grouped.png\" alt-text=\"Screenshot of Iteration paths, grouped.\":::\n```\n\n----------------------------------------\n\nTITLE: Configuring macOS 13 Ventura Preview Agent in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure an Azure Pipelines job to run on the macOS 13 Ventura preview image. It specifies the `vmImage` property within the `pool` definition as 'macOS-13'. The example includes a simple bash script to confirm the operating system version. Note that this image is in preview and may have longer queue times or lack some tooling compared to the stable macOS 12 image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-222-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- job: macOS13\n  pool:\n    vmImage: 'macOS-13'\n  steps:\n  - bash: |\n      echo Hello from macOS Ventura Preview\n      sw_vers\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 221 Azure Pipelines Update Links (Markdown)\nDESCRIPTION: This Markdown directive incorporates content from the specified file (`includes/pipelines/sprint-221-update-links.md`), expected to contain links relevant to Azure Pipelines updates in Sprint 221. This approach helps manage documentation structure by reusing content blocks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-221-update-links](includes/pipelines/sprint-221-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Bug Traceability Implementation Steps\nDESCRIPTION: Markdown code showing the step-by-step process for implementing bug traceability in Azure DevOps, including linking bugs to test results and viewing bug details in context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/requirements-traceability.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the results section of the Tests tab, select the tests against which the bug should be created and choose **Bug**.\n\n2. Open the work item. The bug captures the complete context of the test results.\n\n3. View the bug with the test result, directly in context, within the **Tests** tab.\n\n4. From a work item, navigate directly to the associated test results.\n\n5. In the work item, select **Test case** or **Test result** to go directly to the **Tests** page\n   for the selected build or release.\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Retrospectives to Azure Boards Retrospectives Tool in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® practice 'Retrospectives and reviews' to the Azure Boards 'Retrospectives' feature. It mentions that teams can use a board for capturing and prioritizing improvement actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Retrospectives and reviews \n   :::column-end:::\n   :::column span=\"3\":::\n      [**Retrospectives**](safe-concepts.md#retrospectives). Each team can add a board to capture, prioritize, and create action items to support their improvement processes. \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Sprint 158 Update Content\nDESCRIPTION: Markdown includes for assembling the Sprint 158 update documentation, incorporating feature links, update details, next steps, and signature block.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/boards/sprint-158-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-158-update-links](../includes/boards/sprint-158-update-links.md)]\n\n[!INCLUDE [sprint-158-update](../includes/boards/sprint-158-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n\n[!INCLUDE [sprint-158](../includes/signer/sprint-158.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 245 Update Details in Markdown\nDESCRIPTION: This Markdown directive includes the main content detailing the features and updates of Sprint 245 for Azure Test Plans from the specified file (`../includes/testplans/sprint-245-update.md`). This allows for modular content management within the documentation system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/testplans/sprint-245-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update](../includes/testplans/sprint-245-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps CLI Extension in PowerShell\nDESCRIPTION: PowerShell script that checks if the azure-devops extension is installed and adds it if not found. This script is designed to run in a release pipeline task to ensure the Azure DevOps CLI extension is available.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-release-pipeline.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$extensions = az extension list -o json | ConvertFrom-Json\n\n$devopsFound = $False\nforeach($extension in $extensions)\n{\n    if($extension.name -eq 'azure-devops'){\n        $devopsFound = $True\n    }\n}\n\nif ($devopsFound -eq $False){\n    az extension add -n azure-devops\n}\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 240 Update Content in Markdown\nDESCRIPTION: This snippet includes the main content of the Sprint 240 update for Azure Pipelines using the INCLUDE directive.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-240-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-240-update](../includes/pipelines/sprint-240-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: This Markdown directive uses the `[!INCLUDE ...]` syntax to include a standard 'Next Steps' section from a shared file. This typically provides users with links to further resources, related documentation, or suggested actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/reporting/sprint-220-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Definition of TestRunType Enumerated Type in Azure DevOps\nDESCRIPTION: This table defines the members of the TestRunType enumerated type in Azure DevOps, which distinguishes between Automated and Manual test runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n|Member name             | Value        | Display name  | \n|------------------------|--------------|---------------------|\n|`Automated`             | 1            | Automated           |  \n|`Manual`                | 2            | Manual              |\n```\n\n----------------------------------------\n\nTITLE: Including Azure DevOps Version Information using Markdown\nDESCRIPTION: This Markdown snippet uses the Microsoft Docs `[!INCLUDE ...]` syntax to embed content from the specified file (`../../includes/version-eq-azure-devops.md`). This is typically used to display version applicability information, indicating that the content applies specifically to Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/pipelines-sign-up.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-eq-azure-devops](../../includes/version-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Building .NET Solution using dotnet CLI (Shell)\nDESCRIPTION: This command uses the .NET CLI to build the solution. It restores dependencies defined in the project files and compiles the source code. It should be run from the directory containing the solution file or a project file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/demo-gen/configure.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ndotnet build\n```\n\n----------------------------------------\n\nTITLE: Providing a Sample GitHub Repository URL in Text Format\nDESCRIPTION: This snippet provides a plain text URL to a sample GitHub repository for Java pipeline templates. The URL is meant to be copied and used as a base for forking or accessing example repositories for pipeline setup. It does not require dependencies and serves as a reference input; no parameters or code execution are involved.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/java.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/MicrosoftDocs/pipelines-java\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 202 Update Links in Azure Boards Documentation\nDESCRIPTION: Markdown include statement that references Sprint 202 update links for Azure Boards. This pulls in content from a separate file containing relevant links to documentation and resources for the Sprint 202 release.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/boards/sprint-202-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-202-update-links](../includes/boards/sprint-202-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Restrict Organization Creation Toggle in Azure DevOps\nDESCRIPTION: This markdown snippet displays an image showing the toggle to restrict organization creation in Azure DevOps Microsoft Entra ID settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/azure-ad-tenant-policy-restrict-org-creation.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:::image type=\"content\" source=\"media/azure-ad-tenant-policy/restrict-organization-creation-toggle.png\" alt-text=\"Screenshot shows highlighted toggle for Restrict organization creation.\":::\n```\n\n----------------------------------------\n\nTITLE: Nested HTML Table Structure for Azure DevOps Updates\nDESCRIPTION: HTML table structure containing version history entries with dates, feature descriptions, and version compatibility information. Each row represents a release or update event.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/features-timeline-released.md#2025-04-22_snippet_12\n\nLANGUAGE: HTML\nCODE:\n```\n<td>Application Insights in the Azure portal (Preview)</td>\n<td></td><td>N/A</td>\n</tr>\n<tr>\n<td><a href=\"https://devblogs.microsoft.com/devops/announcing-limited-preview-for-visual-studio-online-code-search/\" data-raw-source=\"[13 Feb 2015](https://devblogs.microsoft.com/devops/announcing-limited-preview-for-visual-studio-online-code-search/)\">13 Feb 2015</a></td>\n<td>Limited preview for Code Search</td>\n<td></td><td>N/A</td>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Work Item Field Structure in Markdown\nDESCRIPTION: Documentation structure showing field definitions and usage instructions for Azure DevOps work items. Each field includes a name and detailed usage instructions covering purpose, limitations, and configuration guidance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/section-basic-field-descriptions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      **Field**\n   :::column-end:::\n   :::column span=\"3\":::\n      **Usage**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Including General Feature Links for Sprint 146 Update\nDESCRIPTION: This Markdown directive includes a file containing links related to the General features introduced in the Azure DevOps Sprint 146 update. It is used within the main release notes document to incorporate shared content and maintain modularity.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update-links](includes/general/sprint-146-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Writing Variable Groups Scope (`vso.variablegroups_write`)\nDESCRIPTION: Grants the ability to read and create variable groups. Depends on `vso.variablegroups_read`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_27\n\nLANGUAGE: text\nCODE:\n```\n`vso.variablegroups_write`\n```\n\n----------------------------------------\n\nTITLE: Markdown Permission Matrix Structure\nDESCRIPTION: Structured markdown table defining dashboard access permissions across different user roles in Azure DevOps. Uses custom row and column syntax for formatting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/report-tfs-2013.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"2\":::\n      **Task** \n   :::column-end:::\n   :::column span=\"1\":::\n     **Readers**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Contributors**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Team admins**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Project admins**\n   :::column-end:::\n:::row-end:::\n---\n:::row:::\n   :::column span=\"2\":::\n      View team dashboard \n   :::column-end:::\n   :::column span=\"1\":::\n      \n   :::column-end:::\n   :::column span=\"1\":::\n      ✔️\n   :::column-end:::\n   :::column span=\"1\":::\n      ✔️\n   :::column-end:::\n   :::column span=\"1\":::\n      ✔️\n   :::column-end:::\n:::row-end:::\n---\n:::row:::\n   :::column span=\"2\":::\n      Edit team dashboard \n   :::column-end:::\n   :::column span=\"1\":::\n      \n   :::column-end:::\n   :::column span=\"1\":::\n      \n   :::column-end:::\n   :::column span=\"1\":::\n      ✔️\n   :::column-end:::\n   :::column span=\"1\":::\n      ✔️\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Collection Synchronization Read Permission Setting\nDESCRIPTION: Collection-level permission that grants access to synchronization APIs. This permission should only be assigned to service accounts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/collection-level-permissions-reference-table-cloud.md#2025-04-22_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\nCollection, SYNCHRONIZE_READ\n```\n\n----------------------------------------\n\nTITLE: Displaying Workload Identity Federation Issuer and Subject in REST API JSON\nDESCRIPTION: This JSON code snippet references parameters returned by the Azure DevOps REST API during service endpoint creation, which should be used for workload identity federation setup. No explicit dependencies but requires a REST API call for context. Inputs are the REST API response; outputs are parameter values to be used in federation credential configuration. The keys are shown as dotted paths, not as a concrete example object.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/pipelines/sprint-253-update.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\nauthorization.parameters.workloadIdentityFederationIssuer\\nauthorization.parameters.workloadIdentityFederationSubject\n```\n\n----------------------------------------\n\nTITLE: Defining Task Category in Categories Definition\nDESCRIPTION: XML configuration for adding a new work item type to the Task Category.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_14\n\nLANGUAGE: XML\nCODE:\n```\n<CATEGORY name=\"Task Category\" refname=\"Microsoft.TaskCategory\">\n   <DEFAULTWORKITEMTYPE name=\"Task\" />\n   <WORKITEMTYPE name=\"Service Task\" />\n</CATEGORY>\n```\n\n----------------------------------------\n\nTITLE: Creating Work Item Template URL for Azure DevOps Cloud\nDESCRIPTION: Basic URL structure for creating a work item template in Azure DevOps cloud version. The template allows specifying multiple field values through URL parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/work-item-template.md#2025-04-22_snippet_0\n\nLANGUAGE: URL\nCODE:\n```\nhttps://dev.azure.com/{OrganizationName}/{ProjectName}/_workItems/create/{WorkItemType}?\n[FieldReferenceName 1]={FieldValue 1}&\n[FieldReferenceName 2]={FieldValue 2}&\n[FieldReferenceName 3]={FieldValue 3}&\n. . .\n```\n\n----------------------------------------\n\nTITLE: Exporting Test Runs with TCM Command-Line Interface\nDESCRIPTION: This command exports a test run to a specified file location. It requires the run ID, result file path, collection URL, and team project name to identify the test run and specify the export destination.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/run-manual-tests.md#2025-04-22_snippet_10\n\nLANGUAGE: tcm\nCODE:\n```\ntcm run /export /id:id /resultsfile:path /collection:teamprojectcollectionurl /teamproject:project [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Configuring Twine for Azure Artifacts Feed\nDESCRIPTION: Example configuration for .pypirc file to connect Twine to an Azure Artifacts feed. This should be added to the user's home directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/python/project-setup-python.md#2025-04-22_snippet_2\n\nLANGUAGE: INI\nCODE:\n```\n[distutils]\nIndex-servers =\nFEED_NAME\n\n[FEED_NAME]\nRepository = https://pkgs.dev.azure.com/ORGANIZATION_NAME/PROJECT_NAME/_packaging/FEED_NAME/pypi/upload/\n```\n\n----------------------------------------\n\nTITLE: Setting Variables in Batch Script for Azure DevOps Pipelines\nDESCRIPTION: Demonstrates how to set regular and secret variables using Batch script in Azure DevOps pipelines. The script uses the task.setvariable logging command to define variables that can be accessed in subsequent tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/set-variables-in-scripts.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\n@echo ##vso[task.setvariable variable=sauce]crushed tomatoes\n@echo ##vso[task.setvariable variable=secret.Sauce;issecret=true]crushed tomatoes with garlic\n```\n\n----------------------------------------\n\nTITLE: Implementing Canary Deployment Strategy for Kubernetes in Azure DevOps Pipelines\nDESCRIPTION: This YAML snippet demonstrates how to configure a canary deployment strategy for Kubernetes in a multi-stage pipeline. It defines a deployment job that incrementally rolls out changes to 10% then 20% of pods, with pre-deployment, deployment, post-traffic monitoring, and conditional failure/success handling steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-160-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment:\n  environment: musicCarnivalProd\n  pool:\n    name: musicCarnivalProdPool \n  strategy:                 \n    canary:     \n      increments: [10,20] \n      preDeploy:                                    \n        steps:          \n        - script: initialize, cleanup....  \n      deploy:            \n        steps:\n        - script: echo deploy updates...\n        - task: KubernetesManifest@0\n          inputs:\n            action: $(strategy.action)      \n            namespace: 'default'\n            strategy: $(strategy.name)\n            percentage: $(strategy.increment)\n            manifests: 'manifest.yml'\n      postRouteTraffic:\n        pool: server\n        steps:          \n        - script: echo monitor application health...  \n      on:\n        failure:\n          steps:\n\t  - script: echo clean-up, rollback...  \n        success:\n          steps:\n          - script: echo checks passed, notify...\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Advanced Security Update Details (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/ghazdo/sprint-245-update.md`), likely containing detailed information about Sprint 245 updates for GitHub Advanced Security for Azure DevOps. It's used within the context of Azure DevOps release notes to embed the full update description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update](includes/ghazdo/sprint-245-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Resolve Command Syntax\nDESCRIPTION: The base syntax for the tf resolve command showing all possible parameters and options for resolving conflicts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/resolve-command.md#2025-04-22_snippet_0\n\nLANGUAGE: Command Line\nCODE:\n```\ntf resolve [itemspec] \n[/auto:(AutoMerge|TakeTheirs|KeepYours|OverwriteLocal|DeleteConflict|KeepYoursRenameTheirs)] \n[/preview] [(/overridetype:overridetype | /converttotype:converttype] [/recursive] [/newname:path] [/noprompt] [/login:username, [password]]\n```\n\n----------------------------------------\n\nTITLE: Including Reporting Update Details using Markdown Directive\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/reporting/sprint-217-update.md`), likely containing detailed information about Reporting updates for Sprint 217. It's used within the Azure DevOps documentation build system (Microsoft Docs).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-217-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update](includes/reporting/sprint-217-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 185 Update Content in Markdown\nDESCRIPTION: Markdown include directive that references the sprint-185-update.md file in the reporting section of the includes directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/reporting/sprint-185-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-185-update](../includes/reporting/sprint-185-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Swimlane Rules in Azure Boards Kanban (Markdown)\nDESCRIPTION: This snippet shows a markdown image reference to demonstrate the new swimlane rules feature in Azure Boards Kanban. It includes an important note about the feature's availability in the New Boards Hubs preview.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/boards/sprint-219-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Gif to demo editing of shareable picklist fields.](../../media/219-boards-01.gif \"gif to demo editing of shareable picklist fields\")\n\n> [!NOTE]\n> This feature will only be available with the [**New Boards Hubs** preview](https://devblogs.microsoft.com/devops/new-boards-hub-public-preview/).\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 150 Update Content in Markdown\nDESCRIPTION: This snippet includes a markdown file containing the main content of the Sprint 150 update for Azure Repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-150-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-150-update](../includes/repos/sprint-150-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Running the witAdmin Tool from Command Line\nDESCRIPTION: Example command showing how to run the witAdmin tool with parameters specifying the collection name, project name, and command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-customize-and-manage-objects-for-tracking-work.md#2025-04-22_snippet_0\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin [command] [/collection:CollectionURL] [/p:Project] [options]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Boards Feature Details for Sprint 146 Update\nDESCRIPTION: This Markdown directive embeds the content of a file detailing the Azure Boards features from the Azure DevOps Sprint 146 update into the main document. This facilitates content reuse and modular documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/sprint-146-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update](includes/boards/sprint-146-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Skipping Source Sync in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to configure the pipeline to skip fetching new commits by setting the checkout step to 'none'. This can be useful for custom Git operations or running automation that doesn't depend on version-controlled code.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/source-options.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: none  # Don't sync sources\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Pipeline YAML Header\nDESCRIPTION: YAML frontmatter configuration for the Azure DevOps documentation page, specifying metadata like title, description, and version range.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deploy-multiple-branches.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Deploy to different stages from multiple branches\ndescription: Learn how to use Classic release pipelines to deploy to different stages from multiple branches.\nms.topic: tutorial\nms.date: 08/06/2024\nmonikerRange: \"<=azure-devops\"\n\"recommendations\": \"true\"\n---\n```\n\n----------------------------------------\n\nTITLE: Adding SourceLink for Azure Repos Projects (XML)\nDESCRIPTION: XML snippet to add the Microsoft.SourceLink.AzureRepos.Git package reference to a project file for projects hosted on Azure Repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/symbols.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<ItemGroup>\n  <PackageReference Include=\"Microsoft.SourceLink.AzureRepos.Git\" Version=\"1.1.1\" PrivateAssets=\"All\"/>\n</ItemGroup>\n```\n\n----------------------------------------\n\nTITLE: Downloading Docker Desktop Installer using PowerShell\nDESCRIPTION: PowerShell command using `Invoke-WebRequest` to download the Docker Desktop for Windows installer executable from the official Docker distribution URL to a specified local download path (`<DOWNLOAD_PATH>`) on the VM.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-WebRequest -URI https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe -OutFile <DOWNLOAD_PATH>\n```\n\n----------------------------------------\n\nTITLE: Reading Settings Scope (`vso.settings`)\nDESCRIPTION: Grants the ability to read settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_9\n\nLANGUAGE: text\nCODE:\n```\n`vso.settings`\n```\n\n----------------------------------------\n\nTITLE: TFVC Conflict Resolution Options Table\nDESCRIPTION: A markdown table showing different conflict scenarios and their corresponding resolution options in TFVC.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/resolve-team-foundation-version-control-conflicts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   **Cause of conflict**\n   :::column-end:::\n   :::column span=\"1\":::\n   **Example**\n   :::column-end:::\n   :::column span=\"1\":::\n   **Checkbox selection**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Setting the PAT Environment Variable for Azure DevOps CLI (Windows) - PowerShell\nDESCRIPTION: Sets the 'AZURE_DEVOPS_EXT_PAT' environment variable for the current PowerShell process to enable automated, non-interactive CLI authentication. No external dependencies except for PowerShell and Azure CLI with its extension. 'xxxxxxxxxx' should be replaced with the actual PAT value. Applies to scripts or terminals running on Windows and supports automation scenarios by eliminating the need for direct command input. This does not affect system-wide environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/log-in-via-pat.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n# set environment variable for current process\n$env:AZURE_DEVOPS_EXT_PAT = 'xxxxxxxxxx'\n```\n\n----------------------------------------\n\nTITLE: Note Block in Markdown\nDESCRIPTION: Markdown note explaining Stakeholder access limitations\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/change-project-level-permissions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]   \n> Users granted **Stakeholder** access can't access select features even if granted permissions to those features. For more information, see [Stakeholder access quick reference](stakeholder-access.md).\n```\n\n----------------------------------------\n\nTITLE: Previewing Azure Pipelines YAML via API Request (JSON)\nDESCRIPTION: This JSON payload is used with a POST request to the Azure DevOps REST API endpoint `dev.azure.com/<org>/<project>/_apis/pipelines/<pipelineId>/runs?api-version=5.1-preview` to preview the fully rendered YAML definition of a pipeline run without actually executing it. The `PreviewRun: true` flag activates the preview mode, and the optional `YamlOverride` field allows specifying new YAML content to test changes. The API response will contain the fully parsed YAML.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-165-update.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n```json\n{\n  \"PreviewRun\": true,\n  \"YamlOverride\": \"\n# your new YAML here, optionally\n\"\n}\n```\n```\n\n----------------------------------------\n\nTITLE: OData API URL Structure for Azure DevOps Cloud\nDESCRIPTION: URL pattern for accessing OData API metadata in Azure DevOps cloud environment\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-api-version.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}/$metadata\n```\n\n----------------------------------------\n\nTITLE: Specifying Task Versions in Azure DevOps YAML Pipelines - YAML\nDESCRIPTION: This snippet demonstrates how to reference tasks by both their major version and by a specific full version (major.minor.patch) within an Azure DevOps YAML pipeline. Referencing by major version allows pipelines to receive minor updates automatically, while specifying the complete version pins the pipeline to a precise release of the task. This approach requires that the desired version is already present in your organization; specifying a non-existent version will result in a pipeline failure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-175-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\\n- task: MyTask@1  # a normal, major-version only reference\\n- task: MyOtherTask@2.3.4   # pinned to a precise version\\n\n```\n\n----------------------------------------\n\nTITLE: Querying User Stories with Task Rollups in OData\nDESCRIPTION: This OData query retrieves User Stories with aggregated Task work metrics. It filters User Stories that aren't removed, are in a specific area path, and have descendants. The query expands related entities and calculates total remaining and completed work from child Tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-rollup.md#2025-04-22_snippet_7\n\nLANGUAGE: odata\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\n    $filter=WorkItemType eq 'User Story'\n        and State ne 'Removed'\n        and startswith(Area/AreaPath,'{areapath}')\n        and Descendants/any()\n    &$select=WorkItemId,Title,WorkItemType,State,AreaSK\n    &$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath),\n        Descendants(\n        $apply=filter(WorkItemType eq 'Task')\n        /aggregate(RemainingWork with sum as TotalRemainingWork, CompletedWork with sum as TotalCompletedWork)\n        )\n```\n\n----------------------------------------\n\nTITLE: Restricting Settable Variables in Azure Pipelines Task Definition (JSON)\nDESCRIPTION: This JSON snippet, intended for a `task.json` file, demonstrates how task authors can restrict the behavior of logging commands within their task. By setting `commands.mode` to `restricted`, it limits command execution. The `settableVariables.allowed` array specifies exactly which variables the task is permitted to set using the `setVariable` logging command, enhancing security by preventing unauthorized variable manipulation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-184-update.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"restrictions\": {\n        \"commands\": {\n            \"mode\": \"restricted\"\n        },\n        \"settableVariables\": {\n            \"allowed\": [\n                \"myVar\",\n                \"otherVar\"\n            ]\n        }\n    },\n}​ \n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Guidance - Markdown - Documentation\nDESCRIPTION: This snippet uses the Markdown include directive to pull in next steps or follow-up guidance from a common documentation module. It ensures that after reading the release notes, users are directed towards recommended actions or further resources, supporting user onboarding and orientation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/general/sprint-253-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 229 Update Content in Markdown\nDESCRIPTION: This snippet includes a markdown file containing the actual content of the Sprint 229 update for GitHub Advanced Security in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/ghazdo/sprint-229-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-229-update](../includes/ghazdo/sprint-229-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure DevOps Documentation Anchors - Markdown\nDESCRIPTION: This Markdown snippet uses front-matter metadata (ms.topic: include) and provides an unordered list of anchor links to different Azure DevOps pipeline documentation sections, including YAML preview functionality, pool-level agent upgrade control, and AzCopy V10 support for file copying. The snippet is designed to be incorporated via Markdown's include mechanism, and assumes referenced anchor links are present elsewhere in the documentation. There are no language or library dependencies, but the anchors must match sections in the larger doc set.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-165-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n---\\nms.topic: include\\n---\\n\\n- [Preview fully parsed YAML document without committing or running the pipeline](#preview-fully-parsed-yaml-document-without-committing-or-running-the-pipeline)\\n- [Disable automatic agents upgrades at a pool level](#disable-automatic-agents-upgrades-at-a-pool-level)\\n- [Azure File Copy Task now supports AzCopy V10](#azure-file-copy-task-now-supports-azcopy-v10)\n```\n\n----------------------------------------\n\nTITLE: Using System.AccessToken in PowerShell Script\nDESCRIPTION: Shows how to use the OAuth token to access the REST API in a PowerShell script within an Azure DevOps pipeline. This token provides authentication for API calls.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_27\n\nLANGUAGE: powershell\nCODE:\n```\n$url = \"$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/builds/$($env:BUILD_BUILDID)?api-version=6.0\"\n$pipeline = Invoke-RestMethod -Uri $url -Headers @{\n   Authorization = \"Bearer $env:SYSTEM_ACCESSTOKEN\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Agents in ARM Template\nDESCRIPTION: This JSON snippet demonstrates how to set the maximum number of agents for a Managed DevOps Pool using an ARM template. It uses the 'maximumConcurrency' property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_6\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                ...\n                \"maximumConcurrency\": 4\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Moniker Range Code Block for Azure DevOps Pre-2022\nDESCRIPTION: Markdown code block showing configuration instructions for Azure Boards-GitHub integration on Azure DevOps versions before 2022, supporting up to 100 GitHub repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/index.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"< azure-devops-2022\"\nAzure DevOps Server supports integration with GitHub Enterprise Server repositories. \n\nYou can start from either Azure Boards or GitHub to integrate and connect up to 100 GitHub repositories to an Azure Boards project. \n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: OData API Version References in Azure DevOps Analytics\nDESCRIPTION: References to the latest supported OData API versions for Azure DevOps Analytics. This shows that v2.0 is the latest supported version and v4.0-preview is the latest preview version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/analytics-preview.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`v2.0`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`v4.0-preview`\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Proxy for macOS/Linux Agents with Charles Proxy\nDESCRIPTION: Command to configure a macOS or Linux agent to use Charles Proxy for capturing detailed HTTP traffic logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport VSTS_HTTP_PROXY=http://127.0.0.1:8888\n```\n\n----------------------------------------\n\nTITLE: Listing Work Item Link Types using witadmin in Azure DevOps CLI\nDESCRIPTION: This CLI command uses the witadmin tool to list all link types for a specific Azure DevOps collection. It displays information such as reference name, names, topology, and active status for each link type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/link-type-reference.md#2025-04-22_snippet_5\n\nLANGUAGE: CLI\nCODE:\n```\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer>witadmin listlinktypes /collection:http://fabrikam-server/DefaultCollection\n\nReference Name: Microsoft.VSTS.TestCase.SharedParameterReferencedBy\nNames: Referenced By, References\nTopology: Dependency\nIs Active: True\n\nReference Name: Microsoft.VSTS.Common.TestedBy\nNames: Tested By, Tests\nTopology: Dependency\nIs Active: True\n\nReference Name: Microsoft.VSTS.TestCase.SharedStepReferencedBy\nNames: Test Case, Shared Steps\nTopology: Dependency\nIs Active: True\n\nReference Name: System.LinkTypes.Duplicate\nNames: Duplicate, Duplicate Of\nTopology: Tree\nIs Active: True\n\nReference Name: System.LinkTypes.Dependency\nNames: Successor, Predecessor\nTopology: Dependency\nIs Active: True\n\nReference Name: System.LinkTypes.Hierarchy\nNames: Child, Parent\nTopology: Tree\nIs Active: True\n\nReference Name: System.LinkTypes.Related\nName: Related\nTopology: Network\nIs Active: True\n```\n\n----------------------------------------\n\nTITLE: Server Task Retry Configuration\nDESCRIPTION: Example of configuring retry attempts for server tasks that make external system calls using retryCountOnTaskFailure property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-240-update.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- stage: deploy\n  jobs:\n  - job:\n    pool: server\n    steps:\n    - task: AzureFunction@1\n      retryCountOnTaskFailure: 2\n      inputs:\n        function: 'https://api.fabrikamfiber.com'\n        key: $(functionKey)\n        method: 'POST'\n        waitForCompletion: 'false'\n```\n\n----------------------------------------\n\nTITLE: Update Workspace Computer Name Command\nDESCRIPTION: Command to update the computer name associated with a TFVC workspace after a machine name change.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/create-work-workspaces.md#2025-04-22_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\ntf workspaces /updatecomputername\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Project URL Pattern\nDESCRIPTION: URL format for accessing an Azure DevOps project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/connect-to-github.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization/Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Analyzing Maven Dependencies for Vulnerabilities\nDESCRIPTION: Console output from the Maven dependency plugin showing the dependency tree for jackson-databind, which helps identify the vulnerable version that needs to be addressed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning.md#2025-04-22_snippet_9\n\nLANGUAGE: console\nCODE:\n```\n> $ mvn dependency:tree -Dincludes=com.fasterxml.jackson.core:jackson-databind\n [INFO] Scanning for projects...\n [INFO]\n [INFO] ------------< com.microsoft.customer360:maven-dependencies >------------\n [INFO] Building maven-dependencies 1.0-SNAPSHOT\n [INFO] --------------------------------[ jar ]---------------------------------\n [INFO]\n [INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ maven-dependencies ---\n [INFO] com.microsoft.customer360:maven-dependencies:jar:1.0-SNAPSHOT\n [INFO] \\- com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.10.3:compile\n [INFO]    \\- com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:jar:2.10.3:compile\n [INFO]       \\- com.fasterxml.jackson.core:jackson-databind:jar:2.10.3:compile\n [INFO] ------------------------------------------------------------------------\n [INFO] BUILD SUCCESS\n [INFO] ------------------------------------------------------------------------\n [INFO] Total time:  0.928 s\n [INFO] Finished at: 2020-04-27T14:30:55+02:00\n [INFO] ------------------------------------------------------------------------\n```\n\n----------------------------------------\n\nTITLE: Configuring pom.xml for On-Premises Azure DevOps Maven Feed\nDESCRIPTION: This XML snippet shows how to configure the pom.xml file for connecting to an on-premises Azure DevOps Maven feed. It includes repository and distribution management settings with placeholders for server, collection, project, and feed names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/includes/maven/pom-and-settings.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n  <repositories>\n    <repository>\n      <id>MavenDemo</id>\n      <url>http://<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1</url>\n      <releases>\n        <enabled>true</enabled>\n      </releases>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </repository>\n  </repositories>\n  <distributionManagement>\n    <repository>\n      <id>MavenDemo</id>\n      <url>http://<SERVER_NAME>/<COLLECTION_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/maven/v1</url>\n      <releases>\n        <enabled>true</enabled>\n      </releases>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </repository>\n  </distributionManagement>\n```\n\n----------------------------------------\n\nTITLE: Displaying a Note Block (Markdown Extension)\nDESCRIPTION: This Markdown extension directive (`[!NOTE]`) is used in the Microsoft Docs platform to render the subsequent paragraph(s) as a highlighted note block. It helps emphasize important information or context for the reader.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\n> These features will roll out over the next two to three weeks.\n```\n\n----------------------------------------\n\nTITLE: Committing Pipeline YAML File to Repository - azurecli-interactive\nDESCRIPTION: This CLI prompt provides options for how to commit the created pipeline YAML file to the repository. Users can either commit directly to the main branch or create a new branch for a pull request. The default is direct commit (option 1), and changing this affects the change management and review process for pipeline definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_11\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nHow do you want to commit the files to the repository?\n[1] Commit directly to the main branch.\n[2] Create a new branch for this commit and start a pull request.\nPlease enter a choice [Default choice(1)]:\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 216 Update Links for Azure Pipelines (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file path (`includes/pipelines/sprint-216-update-links.md`). It serves to insert shared content related to the links for the Sprint 216 update for Azure Pipelines into the main document.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-216-update-links](includes/pipelines/sprint-216-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Signer Information (Markdown)\nDESCRIPTION: Uses a Markdown include directive to embed content from 'includes/signer/signer.md'. This likely inserts a standard signature or closing block used across release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-166-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [signer](includes/signer/signer.md)]\n```\n\n----------------------------------------\n\nTITLE: Resolving 'DefaultValue' Error in Azure DevOps CLI Team Area Addition (Azure CLI)\nDESCRIPTION: Provides guidance on resolving the `DefaultValue` error encountered when adding the first area path to a team using `az devops boards area team add`. The error occurs if the `--set-as-default` flag isn't used. Resolution involves either including this flag during the initial add operation or using the `az boards area team update` command later to set the default area. Use `az boards area team add -h` for help.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/troubleshooting.md#2025-04-22_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards area team update\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz boards area team add -h\n```\n\n----------------------------------------\n\nTITLE: List All Users Workspaces Example\nDESCRIPTION: Command example showing how to list workspaces for all users on all computers in a specific collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workspaces-command.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf workspaces /owner:* /computer:* /collection:https://myserver:8080/tfs/DefaultCollection\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Job with Agent Pool for Azure DevOps Server\nDESCRIPTION: Defines a build job for Azure DevOps Server that runs on an agent from the specified pool with Python capabilities. This allows specifying either capabilities-based agent selection or targeting specific self-hosted agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\n  - job: BuildJob\n    pool:\n      name: <your-pool-name>\n      demands: python\n```\n\n----------------------------------------\n\nTITLE: Filtering User Stories by Custom Field Value in Azure DevOps Analytics\nDESCRIPTION: Power BI query that filters User Stories by a custom field value, area path, and date range, excluding completed items. The query allows for filtering by fields like 'Milestone' by replacing the custom field name parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-releaseburndown.md#2025-04-22_snippet_8\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot?\"\n        &\"$apply=filter(WorkItemType eq 'User Story' \"\n            &\"and StateCategory ne 'Completed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and {customfieldname} eq '{releasevalue}' \"\n            &\"and DateValue ge {startdate} \"\n            &\"and DateValue le {enddate} \"\n            &\") \"\n        &\"/groupby ( \"\n            &\"(DateValue,StateCategory,State,Area/AreaPath,AreaSK), \"\n            &\"aggregate ($count as Count, StoryPoints with sum as TotalStoryPoints) \"\n        &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Power BI Query for Task Duration by Branch\nDESCRIPTION: A Power BI query that calculates the 80th percentile task duration for a specific pipeline task, grouped by branch. This enables filtering task duration trends by specific branches using a slicer in the visualization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-task-duration-trend.md#2025-04-22_snippet_6\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRunActivityResults?\"\n        &\"$apply=filter( \"\n                &\" Pipeline/PipelineName eq '{pipelinename}' \"\n                &\" and TaskDisplayName eq '{taskname}' \"\n                &\" and PipelineRunCompletedOn/Date ge {startdate} \"\n        &\" and (PipelineRunOutcome eq 'Succeed' or PipelineRunOutcome eq 'PartiallySucceeded') \"\n        &\" and (CanceledCount ne 1 and SkippedCount ne 1 and AbandonedCount ne 1) \"\n            &\" ) \"\n                &\"/compute( \"\n                &\" percentile_cont(ActivityDurationSeconds, 0.8, BranchSK, PipelineRunCompletedDateSK) as TaskDuration80thPercentileInSeconds) \"\n            &\"/groupby( \"\n                &\" (TaskDuration80thPercentileInSeconds, Branch/BranchName, PipelineRunCompletedOn/Date)) \"\n            &\"&$orderby=PipelineRunCompletedOn/Date asc \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Update Links (Markdown)\nDESCRIPTION: Uses a Markdown include directive to insert the content of 'sprint-214-update-links.md' located in the 'includes/pipelines/' path. This file likely contains a list of links related to Azure Pipelines updates introduced in Sprint 214.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-214-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-214-update-links](includes/pipelines/sprint-214-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: Markdown include directive that references the nextsteps.md file in the includes directory for adding next steps information to the documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/reporting/sprint-185-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Editing Pipeline YAML Before Proceeding - azurecli-interactive\nDESCRIPTION: This Azure CLI prompt asks the user if they wish to view or edit the automatically generated pipeline YAML before finalization. Selecting option '2' opens the YAML in an editor for manual modifications, while option '1' continues with the default. This allows customization of the pipeline definition, affecting build and deployment behavior. No dependencies outside the Azure CLI session.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nDo you want to view/edit the template yaml before proceeding?\n[1] Continue with the generated yaml\n[2] View or edit the yaml\nPlease enter a choice [Default choice(1)]:2\n```\n\n----------------------------------------\n\nTITLE: Displaying Test Management Work Item Types Relationships in Markdown\nDESCRIPTION: This markdown snippet shows an image that illustrates the relationships between different test management work item types, including Test Cases, Shared Steps, and Test Suites.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cross-service/cross-service-overview.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n![Screenshot of the Test management work item types.](../boards/work-items/guidance/media/ALM_PT_WITS_TestExperience.png)\n```\n\n----------------------------------------\n\nTITLE: Running Azure Pipelines Linux Agent for a Single Job\nDESCRIPTION: Command to run the Azure Pipelines Linux agent in a mode where it accepts only one job and then stops. This is useful for containerized environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/linux-agent.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh --once\n```\n\n----------------------------------------\n\nTITLE: TFX Node Runner Validation Warning Message - Text Output\nDESCRIPTION: This text block shows the warning produced by the TFX extension packaging tool when a task is found to depend on the deprecated Node 6 runner. The message is intended for task authors and signals that the referenced runner is end-of-life, recommending review and upgrading per the provided link. There are no parameters or dependencies; this is an output message string.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-218-update.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nTask <TaskName> is dependent on a task runner that is end-of-life and will be removed in the future. Authors should review Node upgrade guidance: https://aka.ms/node-runner-guidance.\\n\n```\n\n----------------------------------------\n\nTITLE: Running IpList Command for Azure DevOps Services in cmdline\nDESCRIPTION: Command to get the list of IPs that need to be granted access to allow connections from a specific Azure DevOps Services region.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-prepare-test-run.md#2025-04-22_snippet_1\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator IpList /collection:{CollectionURI} /tenantDomainName:{name} /region:{region}\n```\n\n----------------------------------------\n\nTITLE: Querying Iteration Path Properties in Azure DevOps Analytics\nDESCRIPTION: OData query that returns the IterationSK property for a specific Iteration Path. This query uses the $filter operator to match a specific IterationPath value and $select to return only the IterationSK property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/wit-analytics.md#2025-04-22_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/fabrikam/Fabrikam%20Fiber/_odata/v4.0-preview/Iterations?$filter=IterationPath eq 'Fabrikam Fiber\\Release 1\\Sprint 3' &$select=IterationSK\n```\n\n----------------------------------------\n\nTITLE: Moniker Range Code Block for Azure DevOps 2022\nDESCRIPTION: Markdown code block showing configuration instructions for Azure Boards-GitHub integration specifically for Azure DevOps 2022, supporting up to 500 GitHub repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/github/index.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:::moniker range=\"= azure-devops-2022\"\nAzure Boards and Azure DevOps support integration with GitHub.com and GitHub Enterprise Server repositories.\n\nYou can start from either Azure Boards or GitHub to integrate and connect up to 500 GitHub repositories to an Azure Boards project. \n\n- [Install and configure the Azure Boards app for GitHub](install-github-app.md)\n- [Connect an Azure Boards project to one or more GitHub repositories](connect-to-github.md)\n\n:::moniker-end\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section - Markdown\nDESCRIPTION: This snippet uses the '[!INCLUDE]' directive to insert a 'Next Steps' section from a shared Markdown include. It depends on the referenced file being present and processed by the Microsoft Docs documentation engine. The snippet adds a standardized 'Next Steps' content block at its position, with no parameters. General Markdown tools will not interpret this syntax unless extended for '[!INCLUDE]'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/general/sprint-236-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Pull Request Comment Event Payload in Azure DevOps\nDESCRIPTION: Sample JSON payload for a pull request comment edit event in Azure DevOps. Contains detailed information about the comment, author, pull request details, and repository information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_23\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"00000000-0000-0000-0000-000000000000af07be1b-f3ad-44c8-a7f1-c4835f2df06b\",\n    \"eventType\": \"ms.vss-code.git-pullrequest-comment-event\",\n    \"publisherId\": \"azure-devops\",\n    \"message\": {\n        \"text\": \"Jamal Hartnett has edited a pull request comment\",\n        \"html\": \"Jamal Hartnett has <a href=\\\"https://fabrikam.visualstudio.com/DefaultCollection/_git/Fabrikam/pullrequest/1?discussionId=5\\\">edited</a> a pull request comment\",\n        \"markdown\": \"Jamal Hartnett has [edited](https://fabrikam.visualstudio.com/DefaultCollection/_git/Fabrikam/pullrequest/1?discussionId=5) a pull request comment\"\n    },\n    \"detailedMessage\": {\n        \"text\": \"Jamal Hartnett has edited a pull request comment\\r\\nThis is my comment.\\r\\n\",\n        \"html\": \"Jamal Hartnett has <a href=\\\"https://fabrikam.visualstudio.com/DefaultCollection/_git/Fabrikam/pullrequest/1?discussionId=5\\\">edited</a> a pull request comment<p>This is my comment.</p>\",\n        \"markdown\": \"Jamal Hartnett has [edited](https://fabrikam.visualstudio.com/DefaultCollection/_git/Fabrikam/pullrequest/1?discussionId=5) a pull request comment\\r\\nThis is my comment.\\r\\n\"\n    },\n    \"resource\": {...},\n    \"resourceVersion\": \"2.0\",\n    \"resourceContainers\": {...},\n    \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Including Feature and Next Steps Content with Markdown Directives - Markdown\nDESCRIPTION: This snippet uses custom Markdown INCLUDES to insert content from partial Markdown files into the release notes. Dependencies include the supporting include files referenced by relative paths and a documentation processor capable of handling the [!INCLUDE] syntax (such as Microsoft Docs or DocFX). No parameters are present, but the paths must resolve relative to this file. The expected output is a compiled document where each INCLUDES directive is replaced with the content of the referenced file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-229-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-229-update-links](../includes/pipelines/sprint-229-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-229-update](../includes/pipelines/sprint-229-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Querying Bug Trends Filtered by Area Path in Power BI\nDESCRIPTION: This Power BI query retrieves bug trend data filtered by area path and start date. It counts bugs that aren't closed, grouping them by date, state, work item type, and other fields to support trend analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-bugtrend.md#2025-04-22_snippet_0\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItemSnapshot? \"\n        &\"$apply=filter( \"\n            &\"WorkItemType eq 'Bug' \"\n            &\"and State ne 'Closed' \"\n            &\"and startswith(Area/AreaPath,'{areapath}') \"\n            &\"and DateValue ge {startdate}  \"\n            &\") \"\n        &\"/groupby( \"\n            &\"(DateValue,State,WorkItemType,Priority,Severity,Area/AreaPath,Iteration/IterationPath,AreaSK), \"\n            &\"aggregate($count as Count) \"\n            &\") \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Release Notes Frontmatter\nDESCRIPTION: YAML frontmatter metadata for the Azure DevOps documentation page, containing title, description, author information and date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-216-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Azure DevOps Release Notes - Azure Boards Sprint 216 Update\ndescription: See the Sprint 216 feature updates for Azure Boards, including next steps.\nauthor: ckanyika\nms.author: ckanyika\nms.date: 2/7/2023\n---\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 210 Update Content in Markdown\nDESCRIPTION: Markdown include statement that pulls in the Sprint 210 update content from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/general/sprint-210-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-210-update](../includes/general/sprint-210-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Installing a Specific .NET SDK Version Using UseDotNet Task in Azure DevOps Pipeline - YAML\nDESCRIPTION: This YAML snippet uses the UseDotNet@2 pipeline task to install a specific version of the .NET Core SDK during the build. It must be included in the pipeline steps, with the 'version' parameter specified as desired. Dependencies: Azure DevOps pipelines, UseDotNet@2 task installed and enabled. Inputs: 'version' (required), which dictates which .NET SDK version to install for the build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-190-update.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: UseDotNet@2\n  displayName: 'Use .NET Core sdk'\n  inputs:\n    version: <dotnet version>\n```\n\n----------------------------------------\n\nTITLE: Structuring Release Notes Content with Markdown Includes - Markdown\nDESCRIPTION: This snippet uses Markdown and Azure Docs INCLUDE syntax to modularize the content, bringing in external sections such as sprint update links, features, and next steps. Dependencies include Azure Docs build system or tools supporting the [!INCLUDE] syntax. Inputs are references to external Markdown or MD files; outputs are the dynamically included content sections in the rendered documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/repos/sprint-179-update.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-179-update-links](../includes/repos/sprint-179-update-links.md)]\\n\\n[!INCLUDE [sprint-179-update](../includes/repos/sprint-179-update.md)]\\n\\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Git Branch Naming Convention in Markdown\nDESCRIPTION: Shows the recommended naming convention for branches in Git repositories. Following this pattern helps to organize branches and identify owners easily.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/remove-binaries.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n* Do use a naming convention when publishing topic branches. Name the branch \"`users/<alias>/<branchname>`\".\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 206 Update Details for Azure Pipelines (Markdown)\nDESCRIPTION: Uses a Markdown include directive, specific to the documentation system (likely DocFX), to insert the full content detailing the Sprint 206 updates for Azure Pipelines from a separate file. This centralizes the detailed update information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-206-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-206-update](includes/pipelines/sprint-206-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Shared Content in Azure DevOps Docs Using Markdown Directives - Markdown\nDESCRIPTION: This snippet demonstrates how to embed shared or reusable documentation sections in Markdown files using the custom [!INCLUDE] directive. Each directive references an external Markdown file that contains pre-defined text or links, allowing for efficient content management and reuse across multiple documentation pages. No additional dependencies are required apart from support for the [!INCLUDE] syntax in the documentation build system. Inputs are the relative paths to the partial Markdown files, and the outputs are the inlined content at the specified locations. Limitations include dependency on the documentation engine's support for the custom include syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/general/sprint-182-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-182-update-links](../includes/general/sprint-182-update-links.md)]\n\n[!INCLUDE [sprint-182-update](../includes/general/sprint-182-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Documentation Metadata - YAML - Documentation\nDESCRIPTION: This YAML front matter sets key metadata attributes for documentation, including author username, Microsoft author alias, last update date, and content topic for inclusion. Requires a documentation build system that parses YAML headers for page organization. Inputs include author metadata, topic, and update date; outputs are determined by the consuming documentation platform.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-182-update-links.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\nauthor: sid-ah\nms.author: simerzou\nms.date: 02/04/2021\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Example: Custom Folder Mapping\nDESCRIPTION: Demonstrates how to map a specific server folder to a different local folder, replacing any previous mapping for that server folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/workfold-command.md#2025-04-22_snippet_10\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf workfold $/projects/project_one C:\\DifferentWorkfold\n```\n\n----------------------------------------\n\nTITLE: Deleting a Local Branch Using Git Command Line\nDESCRIPTION: Command to delete a local Git branch. This command must be run while checked out to a different branch than the one being deleted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/delete-git-branch.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit branch -d <branch_name>\n```\n\n----------------------------------------\n\nTITLE: Migrator Prepare Command with Explicit Connection String (cmdline)\nDESCRIPTION: This command structure demonstrates running the `Migrator prepare` command while explicitly providing the connection string to the Azure DevOps Server configuration database using the `/connectionString` parameter. This is necessary if the tool cannot automatically detect the database or if running remotely. Other required parameters include the collection URL, tenant domain name, and region.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_6\n\nLANGUAGE: cmdline\nCODE:\n```\nMigrator prepare  /collection:{collection URL} /tenantDomainName:{name} /region:{region} /connectionString:\"Data Source={sqlserver};Initial Catalog=Configuration;Integrated Security=True\"\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 184 Update Links for Azure Repos\nDESCRIPTION: Markdown include directive that pulls in links related to Sprint 184 updates for Azure Repos.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/repos/sprint-184-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-184-update-links](../includes/repos/sprint-184-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating State Previous Column with LOOKUPVALUE in Azure DevOps Analytics\nDESCRIPTION: This calculation determines the previous state of a work item by using LOOKUPVALUE to find the state value that matches the work item ID and the previous date value. It requires the 'Date Previous' calculated column to be defined.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_8\n\nLANGUAGE: DAX\nCODE:\n```\nState Previous =\nLOOKUPVALUE (\n    'View Name'[State],\n    'View Name'[Work Item Id], 'View Name'[Work Item Id],\n    'View Name'[Date], 'View Name'[Date Previous]\n)\n```\n\n----------------------------------------\n\nTITLE: Opening Board URL Template in Azure DevOps\nDESCRIPTION: URL template for accessing a project's board in Azure DevOps, showing the basic structure needed to access a specific organization and project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/kanban-epics-features-stories.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://dev.azure.com/{Your_Organization}/{Your_Project}\n```\n\n----------------------------------------\n\nTITLE: Verifying Updated Service Hooks Permissions in Azure DevOps\nDESCRIPTION: Command to verify the updated permissions for a group, showing that the View Subscriptions permission (bit value 1) is now granted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/view-permission.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n> az devops security permission list --id cb594ebe-87dd-4fc9-ac2c-6a10a4c92046 --subject <Group or user descriptor> --output table\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps On-Premises Documentation Block\nDESCRIPTION: Markdown conditional block for Azure DevOps on-premises specific content using moniker range syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/work-items/quick-ref.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<azure-devops\"\n\nYou customize work item types using either the Inheritance process model or On-premises XML process model. The model in effect for the project depends on the [selection made for the project collection](/azure/devops/server/admin/manage-project-collections) where the project is defined.\n\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Build Links in Markdown\nDESCRIPTION: Markdown include statement for Azure Pipelines build announcement links from May 2019.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/build-may.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [build-may-links](../includes/pipelines/build-may-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including External Markdown Content in Documentation - Markdown\nDESCRIPTION: This snippet demonstrates using the [!INCLUDE] syntax to embed external markdown files within the current documentation. It requires that the referenced files exist relative to the current file and contain reusable markdown fragments. Each inclusion dynamically injects content from '../includes/boards/sprint-185-update-links.md', '../includes/boards/sprint-185-update.md', and '../includes/nextsteps.md', enabling modular and maintainable documentation. No input or output values are expected as this is processed at build-time by the documentation pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/Boards/sprint-185-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-185-update-links](../includes/boards/sprint-185-update-links.md)]\n\n[!INCLUDE [sprint-185-update](../includes/boards/sprint-185-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Applying Azure DevOps Policy Configuration using Azure CLI\nDESCRIPTION: This command utilizes the Azure DevOps CLI (`az repos policy create`) to apply repository policies defined within a specified JSON configuration file. The `--policy-configuration` parameter points to the local path (`C:\\policyConfiguration.txt`) of the JSON file containing the policy details, including type, settings, and scopes. Requires the Azure CLI with the Azure DevOps extension installed and authenticated, and the specified configuration file must exist.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/policy-configuration-file.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz repos policy create --policy-configuration C:\\policyConfiguration.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Manually Triggered YAML Pipeline Stages\nDESCRIPTION: YAML pipeline configuration that demonstrates how to set up manually triggered stages using the 'trigger: manual' property. This allows stages to be run on-demand rather than automatically with the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-243-update.md#2025-04-22_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nstages:\n- stage: stage_WUS1\n  displayName: Deploy WUS1\n  trigger: manual\n  jobs:\n  - job: DeployJob\n    steps:\n    - task: AzureCLI@2\n      inputs:\n        azureSubscription: 'AzureWIF'\n        scriptType: 'ps'\n        scriptLocation: 'inlineScript'\n        inlineScript: 'Write-host ''hello, world'''     \n- stage: stage_WUS2\n  displayName: Deploy WUS2\n  trigger: manual\n  jobs:\n  - job: DeployJob\n    steps:\n    - task: AzureCLI@2\n      inputs:\n        azureSubscription: 'AzureWIF'\n        scriptType: 'ps'\n        scriptLocation: 'inlineScript'\n        inlineScript: 'Write-host ''hello, world'''\n```\n\n----------------------------------------\n\nTITLE: Including Azure Repos Sprint 177 Update Details (Markdown)\nDESCRIPTION: Uses a Markdown include directive to embed the detailed feature descriptions for Azure Repos released in Sprint 177 from a separate file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/sprint-177-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-177-update](includes/repos/sprint-177-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Change Field Reporting Type Commands\nDESCRIPTION: Changes how fields are reported in the data warehouse using witadmin changefield and reportfield commands\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/manage-work-item-fields.md#2025-04-22_snippet_5\n\nLANGUAGE: command-line\nCODE:\n```\nwitadmin changefield /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:AdventureWorks.CreatedOn /reportingtype:dimension\n\nwitadmin reportfield /collection:http://AdventureWorksServer:8080/tfs/DefaultCollection /n:AdventureWorks.Field /reportingtype:measure\n```\n\n----------------------------------------\n\nTITLE: Including Linked Feature Notes in Markdown - Markdown\nDESCRIPTION: This snippet uses the Markdown !INCLUDE directive to embed the contents of another Markdown file that lists feature update links for Sprint 205. This relies on the documentation tooling supporting the !INCLUDE syntax. There are no input parameters; the output is the rendered content from the referenced file, making it easier to maintain and update sprint notes documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-205-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-205-update-links](../includes/pipelines/sprint-205-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Example: Preparing Database and Login for Migration - SQL Server - SQL\nDESCRIPTION: This example SQL batch demonstrates end-to-end setup for migration: setting the recovery model, creating the login/user, and assigning the required role. Pre-requisites: Replace placeholder values (database, username, password) with actual settings. Expected input is the name of the database and the credentials for the migration tool; no outputs are produced but operations must complete without errors. This is required to ensure the Data Migration Tool can access the target database during migration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-prepare-test-run.md#2025-04-22_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nALTER DATABASE [Foo] SET RECOVERY SIMPLE; \n \nUSE [Foo] \nCREATE LOGIN fabrikam WITH PASSWORD = 'fabrikampassword' \nCREATE USER fabrikam FOR LOGIN fabrikam WITH DEFAULT_SCHEMA=[dbo] \nEXEC sp_addrolemember @rolename='TFSEXECROLE', @membername='fabrikam'\n```\n\n----------------------------------------\n\nTITLE: Defining Documentation Metadata - YAML - Markdown\nDESCRIPTION: Specifies document-level metadata, including the author, author alias, date, and topic. The metadata is written in YAML front matter and is required by Azure DevOps Docs to populate author attributions, filter topics, and handle publishing workflows. No parameters are required for inclusion, but each field must be filled with appropriate values. This block only works when placed at the start of a markdown file. Outputs include document attribution, organization, and pipeline triggers within Microsoft documentation tooling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/general/sprint-238-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nauthor: ckanyika\nms.author: ckanyika\nms.date: 5/2/2024\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Prerequisites for Azure Pipelines Agent on Ubuntu\nDESCRIPTION: This command installs necessary libraries (libunwind8 and libcurl3) for the Azure Pipelines build and release agent on an Ubuntu 16.04 VM.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/includes/create-linux-deployment-group.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install -y libunwind8 libcurl3\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Update Details (Markdown)\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/pipelines/sprint-245-update.md`), likely containing detailed information about Sprint 245 updates for Azure Pipelines. It's used within the context of Azure DevOps release notes to incorporate the description of new Pipeline features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/sprint-245-update.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-245-update](includes/pipelines/sprint-245-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Listing Group Management Events for Azure DevOps Auditing\nDESCRIPTION: This table lists Azure DevOps audit events associated with group management. It covers actions such as group creation, deletion, modification, and membership changes (add/remove), providing the `Action` identifier and a `Description` with placeholders for group and member identities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/audit/auditing-events.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Group events\n\n| Action | Description |\n|--------|-------------|\n| `Group.CreateGroups` | {GroupName} group was created. |\n| `Group.UpdateGroupMembership.Add` | {ResolveIdentity:MemberId} was added as a member of group {ResolveIdentity:GroupId}. |\n| `Group.UpdateGroupMembership.Remove` | {ResolveIdentity:MemberId} was removed as a member of group {ResolveIdentity:GroupId}. |\n| `Group.UpdateGroups.Delete` | {ResolveIdentity:GroupId} group was deleted. |\n| `Group.UpdateGroups.Modify` | {ResolveIdentity:GroupId} group information was updated. |\n```\n\n----------------------------------------\n\nTITLE: Checkin with Comment Example\nDESCRIPTION: Example demonstrating how to check in all pending changes with a descriptive comment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/checkin-command.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nc:\\code\\SiteApp\\Main>tf checkin /comment:\"Re-implemented Pi calculator\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Disk Type using ARM Template for Managed DevOps Pools\nDESCRIPTION: This ARM template snippet shows how to configure the OS disk type for a Managed DevOps Pool. It sets the 'osDiskStorageAccountType' property to 'Standard' in the 'storageProfile' section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                ...\n                \"storageProfile\": {\n                    \"osDiskStorageAccountType\": \"Standard\"\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Invalid Group Reference Example in XML Process\nDESCRIPTION: Example of an invalid XML rule that doesn't qualify the specified group with a valid token. The 'Dev Team' group needs to be prefixed with a token like [Project], [GLOBAL], or [Team Foundation].\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_19\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD name=\"Title\">\n    <READONLY for=\"Dev Team\"/>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Querying Test Summary for Release Workflow in Power BI\nDESCRIPTION: Power BI query that retrieves test result summary data from the TestResultsDaily entity for a specified pipeline with Release workflow. The query filters for release pipelines and aggregates counts across all test result types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-test-analytics-test-summary.md#2025-04-22_snippet_2\n\nLANGUAGE: powerbi\nCODE:\n```\nlet\n   Source = OData.Feed (\n      \"https://analytics.dev.azure.com/mseng/AzureDevOps/_odata/v4.0-preview/TestResultsDaily?\"\n      &\"$apply=filter(\"\n      &\"Pipeline/PipelineName eq '{pipelineName}' \"\n      &\"And DateSK ge {startdate} \"\n      &\"And Workflow eq 'Release'\"\n      &\")/aggregate(\"\n      &\"ResultCount with sum as ResultCount, \"\n      &\"ResultPassCount with sum as ResultPassCount, \"\n      &\"ResultFailCount with sum as ResultFailCount, \"\n      &\"ResultNotExecutedCount with sum as ResultNotExecutedCount, \"\n      &\"ResultNotImpactedCount with sum as ResultNotImpactedCount\"\n      &\")\",\n      null, [Implementation=\"2.0\", OmitValues = ODataOmitValues.Nulls, ODataVersion = 4]\n   )\nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Capturing ETW Network Traces on Windows Agents in Azure DevOps\nDESCRIPTION: Uses netsh commands to start and stop ETW (Event Tracing for Windows) network traces on a Windows-based pipeline agent. The resulting trace files are uploaded to the pipeline logs for network troubleshooting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n# Add this task to start the ETW trace\n- script: netsh trace start scenario=InternetClient capture=yes tracefile=$(Agent.TempDirectory)\\networktrace.etl\n  displayName: 'Start ETW trace'\n\n# Other tasks here\n\n# Add these 2 tasks to stop the trace and upload\n# the trace to the pipeline logs\n- script: netsh trace stop\n  displayName: 'Stop ETW trace'\n\n- pwsh: |\n    Write-Host \"##vso[task.uploadfile]$(Agent.TempDirectory)\\networktrace.etl\"\n    Write-Host \"##vso[task.uploadfile]$(Agent.TempDirectory)\\networktrace.cab\"\n  displayName: 'Upload ETW trace logs'\n```\n\n----------------------------------------\n\nTITLE: Using KubernetesManifest Tasks for Baking and Deploying Manifests in Azure Pipelines\nDESCRIPTION: This YAML snippet demonstrates how to use the KubernetesManifest task to bake Kubernetes manifests from Helm charts and deploy them to a Kubernetes cluster. It showcases the bake action to generate manifests and the deploy action to apply them with container image specification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-150-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from Helm chart\n  inputs:\n    action: bake\n    helmChart: charts/sample\n    overrides: 'image.repository:nginx'\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: k8sSC1\n    manifests: $(bake.manifestsBundle)\n    containers: |\n      nginx: 1.7.9\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 178 Update Content in Azure Boards Documentation\nDESCRIPTION: This code snippet includes a Markdown file containing the main content of the Sprint 178 update for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/Boards/sprint-178-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-178-update](../includes/boards/sprint-178-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Build Numbers with Conditions in YAML Pipeline\nDESCRIPTION: Example showing how to dynamically set build numbers based on conditions using variables and conditional expressions. This approach changes the build number format depending on the build reason (pull request, manual, etc.).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/run-number.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  - name: why\n    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:\n      value: pr\n    ${{ elseif eq(variables['Build.Reason'], 'Manual' ) }}:\n      value: manual\n    ${{ elseif eq(variables['Build.Reason'], 'IndividualCI' ) }}:\n      value: indivci\n    ${{ else }}:\n      value: other\n\nname: $(TeamProject)_$(SourceBranchName)_$(why)_$(Date:yyyyMMdd).$(Rev:r)\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- script: echo '$(Build.BuildNumber)'\n```\n\n----------------------------------------\n\nTITLE: Deployment Environment Validation in Rego\nDESCRIPTION: Policy to verify if container images have been deployed to required environments before proceeding to specific target environments\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/artifact-policy.md#2025-04-22_snippet_3\n\nLANGUAGE: rego\nCODE:\n```\npredeployedEnvironments = {\n    \"env/resource1\",\n    \"env2/resource3\"\n}\n\ncheckDeployedEnvironments[errors] {\n    trace(sprintf(\"Checking if the image has been pre-deployed to one of: [%s]\", [concat(\", \", predeployedEnvironments)]))\n    deployments := values[index].deployment\n    deployedAddress := deployments[i].deployment.address\n    trace(sprintf(\"deployed to : %s\",[deployedAddress]))\n    resourceUri := deployments[i].resourceUri\n    image := fetchImage(resourceUri)\n    not predeployedEnvironments[deployedAddress]\n    trace(sprintf(\"%s: fails pre-deployed environment condition. found %s\", [image,deployedAddress]))\n    errors := sprintf(\"image %s fails pre-deployed environment condition. found %s\", [image,deployedAddress])\n}\n\nfetchRegistry(uri) = reg {\n    out := regex.find_n(\"//.*/\", uri, 1)\n    reg = trim(out[0], \"/\")\n}\n\nfetchImage(uri) = img {\n    out := regex.find_n(\"/.*@\", uri, 1)\n    img := trim(out[0], \"/@\")\n}\n```\n\n----------------------------------------\n\nTITLE: Creating SQL Login for Migration Access in SQL\nDESCRIPTION: SQL commands to create a login with the necessary permissions for Azure DevOps Services to access the database during migration. This creates a user with read access to the database and assigns it to the 'TFSEXECROLE' role.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-test-run.md#2025-04-22_snippet_13\n\nLANGUAGE: sql\nCODE:\n```\nUSE [<database name>]\nCREATE LOGIN <pick a username> WITH PASSWORD = '<pick a password>'\nCREATE USER <username> FOR LOGIN <username> WITH DEFAULT_SCHEMA=[dbo]\nEXEC sp_addrolemember @rolename='TFSEXECROLE', @membername='<username>'\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 218 Update Details in Markdown\nDESCRIPTION: These Markdown directives leverage the `[!INCLUDE]` syntax to incorporate detailed content about the Sprint 218 updates directly into the document. They reference separate files containing the specific updates for Azure Pipelines and Reporting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-218-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-218-update](includes/pipelines/sprint-218-update.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-218-update](includes/reporting/sprint-218-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Viewing TF Workspace Command Help Using /help\nDESCRIPTION: Demonstrates how to display the complete help documentation for the TF workspace command using the /help parameter. Shows full command syntax including options for creating, deleting, and modifying workspaces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/help-command-team-foundation-version-control.md#2025-04-22_snippet_3\n\nLANGUAGE: tf\nCODE:\n```\n>tf workspace /help \nMicrosoft (R) TF - Team Foundation Version Control Tool, Version 16.171.31930.1\nCopyright (c) Microsoft Corporation.  All rights reserved.\n\nCreates, deletes, displays, or modifies properties and mappings associated\nwith a workspace.\n\ntf vc workspace /new [/noprompt] [/template:workspacename[;workspaceowner]]\n                [/computer:computername] [/comment:(\"comment\"|@commentfile)]\n                [workspacename[;workspaceowner]]\n                [/collection:TeamProjectCollectionUrl]\n                [/permission:(Private|PublicLimited|Public)]\n                [/location:(local|server)]\n                [/filetime:(current|checkin)]\n                [/login:username,[password]]\n\ntf vc workspace /delete [/collection:TeamProjectCollectionUrl]\n                workspacename[;workspaceowner]\n                [/login:username,[password]]\n\ntf vc workspace [/collection:TeamProjectCollectionUrl]\n                [/comment:(\"comment\"|@commentfile)]\n                [/newname:workspacename] [workspacename[;workspaceowner]]\n                [/newowner:ownername] [/computer:computername]\n                [/permission:(Private|PublicLimited|Public)]\n                [/location:(local|server)]\n                [/filetime:(current|checkin)]\n                [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Capturing Feedback Process Diagram in Markdown\nDESCRIPTION: This markdown code snippet displays a schematic showing the three-step process of capturing feedback: Capture, Create, and Collaborate. It uses an image reference to illustrate the steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/feedback/index.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Schematic showing process steps Capture, Create, Collaborate](../../test/media/perform-exploratory-tests/getstarted-05.png)\n```\n\n----------------------------------------\n\nTITLE: Querying Open Bugs Filtered by Teams in Power BI\nDESCRIPTION: This Power BI query retrieves open bugs filtered by specific team names. It allows filtering by multiple teams and selects relevant fields including AssignedTo, Iteration, and Area information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-openbugs.md#2025-04-22_snippet_2\n\nLANGUAGE: Power BI M\nCODE:\n```\nlet\n   Source = OData.Feed (\"https://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/WorkItems?\"\n        &\"$filter=WorkItemType eq 'Bug' \"\n            &\"and StateCategory ne 'Completed'' \"\n            &\"and (Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}') or Teams/any(x:x/TeamName eq '{teamname}')) \"\n        &\"&$select=WorkItemId,Title,WorkItemType,State,Priority,Severity,TagNames,AreaSK \"\n        &\"&$expand=AssignedTo($select=UserName),Iteration($select=IterationPath),Area($select=AreaPath) \"\n    ,null, [Implementation=\"2.0\",OmitValues = ODataOmitValues.Nulls,ODataVersion = 4]) \nin\n    Source\n```\n\n----------------------------------------\n\nTITLE: Changing Directory to witadmin Tool Location in Azure DevOps\nDESCRIPTION: Command to change the current directory to the location of the witadmin tool in a typical Visual Studio installation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/witadmin/witadmin-import-export-process-configuration.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\ncd %programfiles(x86)%\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\n```\n\n----------------------------------------\n\nTITLE: Specifying Localhost OAuth Callback URL in Markdown Documentation - Markdown\nDESCRIPTION: This snippet uses Markdown inline code formatting for representing a callback URL configuration in OAuth registrations. The content instructs users to use `https://localhost` as the prefix of the callback URL when running web apps locally for Azure DevOps. No dependencies or prerequisites are required. The snippet is static and intended to clarify usage to the reader.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/authentication/azure-devops-oauth.md#2025-04-22_snippet_9\n\nLANGUAGE: Markdown\nCODE:\n```\n`https://localhost`\n```\n\n----------------------------------------\n\nTITLE: HTML Widget Template with Query Information Container\nDESCRIPTION: HTML template for an Azure DevOps dashboard widget that displays query information. It initializes the SDK, registers the widget, and includes a container for displaying query details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-dashboard-widget.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <script src=\"sdk/scripts/VSS.SDK.min.js\"></script>\n        <script type=\"text/javascript\">\n            VSS.init({\n                explicitNotifyLoaded: true,\n                usePlatformStyles: true\n            });\n\n            VSS.require(\"TFS/Dashboards/WidgetHelpers\", function (WidgetHelpers) {\n                WidgetHelpers.IncludeWidgetStyles();\n                VSS.register(\"HelloWorldWidget2\", function () {\n                    return {\n                        load: function (widgetSettings) {\n                            var $title = $('h2.title');\n                            $title.text('Hello World');\n\n                            return WidgetHelpers.WidgetStatusHelper.Success();\n                        }\n                    }\n                });\n                VSS.notifyLoadSucceeded();\n            });\n        </script>\n    </head>\n    <body>\n        <div class=\"widget\">\n            <h2 class=\"title\"></h2>\n            <div id=\"query-info-container\"></div>\n        </div>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Project Entity Type Definition in XML\nDESCRIPTION: XML definition of the Project entity type including its key, properties, and navigation properties in the Analytics data model.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/analytics-metadata.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<EntityType Name=\"Project\">\n  <Key>\n    <PropertyRef Name=\"ProjectSK\"/>\n  </Key>\n  <Property Name=\"ProjectSK\" Type=\"Edm.Guid\" Nullable=\"false\"/>\n  <Property Name=\"ProjectId\" Type=\"Edm.Guid\" Nullable=\"false\">\n    <Annotation Term=\"Display.DisplayName\" String=\"Project Id\"/>\n  </Property>\n  <Property Name=\"ProjectName\" Type=\"Edm.String\" Nullable=\"false\">\n    <Annotation Term=\"Display.DisplayName\" String=\"Project Name\"/>\n  </Property>\n  <Property Name=\"AnalyticsUpdatedDate\" Type=\"Edm.DateTimeOffset\"/>\n  <Property Name=\"ProjectVisibility\" Type=\"Microsoft.VisualStudio.Services.Analytics.Model.ProjectVisibility\">\n    <Annotation Term=\"Display.DisplayName\" String=\"Project Visibility\"/>\n  </Property>\n  <NavigationProperty Name=\"Areas\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.Area)\"/>\n  <NavigationProperty Name=\"Iterations\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.Iteration)\"/>\n  <NavigationProperty Name=\"Teams\" Type=\"Collection(Microsoft.VisualStudio.Services.Analytics.Model.Team)\"/>\n</EntityType>\n```\n\n----------------------------------------\n\nTITLE: Getting History up to a Specific Date in TFVC\nDESCRIPTION: Demonstrates how to show changes made to all items in a folder up to a specific date using the tf history command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/history-command.md#2025-04-22_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history /noprompt * /recursive /v:D4/24/2012\n```\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history /noprompt * /recursive /v:D2012-04-24T12:00\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Variables Configuration\nDESCRIPTION: Configuration example showing required pipeline variables for deploying a PartsUnlimited application to Azure VMs, including database connection settings and server parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deployment-groups/deploying-azure-vms-deployment-groups.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nDatabaseName: PartsUnlimited-Dev\nDBPassword: xxxxxxxx\nDBUserName: xxxxxxxx\nDefaultConnectionString: Data Source=[YOUR_DNS_NAME];Initial Catalog=PartsUnlimited-Dev;User ID=xxxxxxxx;Password=xxxxxxxx;MultipleActiveResultSets=False;Connection Timeout=30;\nServerName: localhost\n```\n\n----------------------------------------\n\nTITLE: Reading Test Management Scope (`vso.test`)\nDESCRIPTION: Grants the ability to read test plans, cases, results and other test management related artifacts. Depends on `vso.profile`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_19\n\nLANGUAGE: text\nCODE:\n```\n`vso.test`\n```\n\n----------------------------------------\n\nTITLE: Viewing Non-recursive Folder History\nDESCRIPTION: Shows commands for viewing the history of a specific folder without including subfolders. Includes both interactive and non-interactive command variants.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/history-command.md#2025-04-22_snippet_8\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history .\n```\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history . /noprompt\n```\n\n----------------------------------------\n\nTITLE: Setting Up Azure DevOps API Connection in Node.js\nDESCRIPTION: Initializes a connection to Azure DevOps using the azure-devops-node-api package with authentication via personal access token. Gets an instance of the Git API and demonstrates posting a status to a pull request.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nconst vsts = require(\"azure-devops-node-api\")\n\nconst collectionURL = process.env.COLLECTIONURL    \nconst token = process.env.TOKEN\n\nvar authHandler = vsts.getPersonalAccessTokenHandler(token)\nvar connection = new vsts.WebApi(collectionURL, authHandler)\n\nvar vstsGit = connection.getGitApi().then( \n    vstsGit => {                                    \n        vstsGit.createPullRequestStatus(prStatus, repoId, pullRequestId).then( result => {\n            console.log(result);\n        },\n        error => {\n            console.log(error);\n        })\n    }, \n    error => { \n        console.log(error);\n    } \n);\n```\n\n----------------------------------------\n\nTITLE: Defining Query Parameter Substitutions for Azure DevOps Analytics\nDESCRIPTION: This snippet lists the placeholders used in Azure DevOps Analytics queries and provides examples of how to replace them with actual values. It covers organization name, project name, pipeline name, start date, and task name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/includes/pipelines-sample-query-substitutions-task-name.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `{organization}` - Your organization name\n- `{project}` - Your team project name\n- `{pipelinename}` - Your pipeline name. Example: **Fabrikam hourly build pipeline**\n- `{startdate}` - The date to start your report. Format: YYYY-MM-DDZ. Example: **2021-09-01Z** represents September 1, 2021. Don't enclose in quotes or brackets and use two digits for both, month and date\n- `{taskname}` - The display name of the task for which the duration trend is needed.\n```\n\n----------------------------------------\n\nTITLE: Including Shared Update Links in Azure DevOps Release Notes - Markdown\nDESCRIPTION: This snippet demonstrates how to include a shared set of update links in the Markdown release note file using the Azure Docs content build system's [!INCLUDE ...] syntax. It references a relative path to an include file for Sprint 187 update links. This requires the build system to resolve the include, and the referenced file must exist in the path provided for proper content assembly. No direct parameters are accepted by the include directive—content is replaced at build time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/Boards/sprint-187-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-187-update-links](../includes/boards/sprint-187-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Wiki Features List\nDESCRIPTION: A markdown list outlining the main features covered in the documentation including monospaced font settings, page title formatting, table insertion, and Azure Boards query integration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-146-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Monospaced font for Wiki Markdown editor](#monospaced-font-for-wiki-markdown-editor)\n- [Bold Wiki page titles](#bold-wiki-page-titles)\n- [Insert Markdown table](#insert-markdown-table)\n- [Embed Azure Boards query results in Wiki](#embed-azure-boards-query-results-in-wiki)\n```\n\n----------------------------------------\n\nTITLE: Applying Image Border Style (Markdown Extension)\nDESCRIPTION: This Markdown extension directive applies the CSS class `mx-imgBorder` to the following element, usually an image. This is used in the Microsoft Docs platform to add a standard border style around images for visual consistency.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-216-update.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"] \n> ![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Common .gitignore File Patterns for Git Repositories\nDESCRIPTION: Examples of common file search patterns used in .gitignore files to exclude specific files or file types from Git version control. Includes patterns for ignoring files by name, extension, and folder path with explanatory comments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/ignore-files.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n# Ignore all files with the specified name.\n# Scope is all repo folders.\nconfig.json\n\n# Ignore all files with the specified extension.\n# Scope is all repo folders.\n*.json\n\n# Add an exception to prevent ignoring a file with the specified name.\n# Scope is all repo folders.\n!package.json\n\n# Ignore a file with the specified name.\n# Scoped to the 'logs' subfolder.\n/logs/test.logfile\n\n# Ignore all files with the specified name.\n# Scoped to the 'logs' subfolder and all folders beneath it.\n/logs/**/test.logfile\n\n# Ignore all files in the 'logs' subfolder.\n/logs/\n```\n\n----------------------------------------\n\nTITLE: Identifying State Changes with DAX in Azure DevOps Analytics\nDESCRIPTION: This formula creates a boolean indicator that identifies rows where a state transition occurred. It handles two conditions: when a work item is created (marked as a state change) and when the previous state differs from the current state.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_9\n\nLANGUAGE: DAX\nCODE:\n```\nState Changed =\nIF (\n    ISBLANK ( 'View Name'[State Previous] ),\n    'View Name'[Created Date].[Date] = 'View Name'[Date],\n    'View Name'[State Previous] <> 'View Name'[State]\n)\n```\n\n----------------------------------------\n\nTITLE: Common Process Validation Error Messages in Azure DevOps Migration\nDESCRIPTION: Sample error messages shown when the Data Migration Tool detects process-related issues during migration from older versions of Azure DevOps Server to Azure DevOps Services.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-validate.md#2025-04-22_snippet_4\n\nLANGUAGE: no-highlight\nCODE:\n```\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402571: Required element PortfolioBacklog is missing from Process Configuration.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402571: Required element BugWorkItems is missing from Process Configuration.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402571: Required element FeedbackRequestWorkItems is missing from Process Configuration.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402571: Required element FeedbackResponseWorkItems is missing from Process Configuration.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402574: ProcessConfiguration doesn't specify required TypeField Team.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402574: ProcessConfiguration doesn't specify required TypeField RemainingWork.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402574: ProcessConfiguration doesn't specify required TypeField Order.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402574: ProcessConfiguration doesn't specify required TypeField Effort.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402574: ProcessConfiguration doesn't specify required TypeField Activity.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402574: ProcessConfiguration doesn't specify required TypeField ApplicationStartInformation.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402574: ProcessConfiguration doesn't specify required TypeField ApplicationLaunchInstructions.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF402574: ProcessConfiguration doesn't specify required TypeField ApplicationType.\nInvalid process template: WorkItem Tracking\\Process\\ProcessConfiguration.xml:: TF400572: The Project Process Settings must be configured for this feature to be used.\n```\n\n----------------------------------------\n\nTITLE: Publishing with Microsoft Entra Token using Azure PowerShell\nDESCRIPTION: PowerShell script to authenticate as a service principal and retrieve the service principal's profile information needed for publisher membership.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/publish/command-line.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n# Variable block\n$tenantId = \"<tenant-id>\"\n$appId = \"<appId>\"\n$password = \"<password>\"\n$resource = \"499b84ac-1321-427f-aa17-267ca6975798\" # specifies azure devops\n$url = \"https://app.vssps.visualstudio.com/_apis/profile/profiles/me\"\n\nConnect-AzAccount -ServicePrincipal -Tenant $tenantId -ApplicationId $appId -Credential (New-Object System.Management.Automation.PSCredential($appId, (ConvertTo-SecureString $password -AsPlainText -Force)))\n\n$accessToken = (Get-AzAccessToken -ResourceUrl $resource).Token\n$response = Invoke-RestMethod -Uri $url -Headers @{Authorization = \"Bearer $accessToken\"}\n$response\n```\n\n----------------------------------------\n\nTITLE: Interpreting Analytics Metadata Response Structure\nDESCRIPTION: This XML snippet illustrates the structure of the metadata response from an Analytics OData query. It shows the main schemas defined in the Analytics metadata, including entity types, enumerated types, and entity containers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<edmx:Edmx xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\" Version=\"4.0\">\n    <edmx:DataServices>\n        <Schema xmlns=\"http://docs.oasis-open.org/odata/ns/edm\" Namespace=\"Microsoft.VisualStudio.Services.Analytics.Model\">\n           <EntityType Name=\"Entity Name\"/>\n        </Schema>\n        <Schema xmlns=\"http://docs.oasis-open.org/odata/ns/edm\" Namespace=\"Default\">\n           <EntityContainer Name=\"Container\"/>\n        </Schema>\n    </edmx:DataServices>\n</edmx:Edmx>\n```\n\n----------------------------------------\n\nTITLE: Updating Release Name in Azure DevOps Pipeline\nDESCRIPTION: This command allows you to update the release name for a running release in Azure DevOps. It is supported in Azure DevOps and Azure DevOps Server version 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/scripts/logging-commands.md#2025-04-22_snippet_25\n\nLANGUAGE: plaintext\nCODE:\n```\n##vso[release.updatereleasename]my-new-release-name\n```\n\n----------------------------------------\n\nTITLE: Cloning Java Pipeline Repository from GitHub - shell\nDESCRIPTION: This snippet provides the URL of the sample Java pipelines repository to be forked and cloned for Azure Pipelines exercises. The surrounding instructions advise users to fork and then clone the repository onto their local machine before pipeline setup. There are no special tools required beyond git.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nhttps://github.com/MicrosoftDocs/pipelines-java\n```\n\n----------------------------------------\n\nTITLE: Authenticating to Azure with Azure CLI - azurecli-interactive\nDESCRIPTION: This snippet demonstrates how to authenticate to the Azure cloud environment using the Azure CLI command 'az login'. The command prompts the user for authentication and sets up credentials for subsequent Azure CLI commands. No special parameters are needed; it initiates an interactive login session. Required dependency: Azure CLI must be installed on the system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Navigation Properties of TestResults Entity in Azure DevOps\nDESCRIPTION: This table defines the navigation properties available for the TestResult entity type, showing the referential constraints and referenced properties for each navigation relationship.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-test-plans.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n|**Name**        |**Referential constraint**  |**Referenced property** |\n|----------------|----------------------------|---------------------------|\n| `CompletedOn`  | `CompletedDateSK` | `DateSK` | \n| `StartedOn`    | `StartedDateSK` | `DateSK` | \n| `Branch`       | `BranchSK` | `BranchSK` | \n|`Project`       | `ProjectSK` | `ProjectSK` | \n|`Pipeline`      | `PipelineSK` | `PipelineSK` | \n| `PipelineRun`  | `PipelineRunSK` | `PipelineRunSK` |\n|`Test`          | `TestSK` | `TestSK` |\n| `TestRun`      | `TestRunSK` |`TestRunSK` |   \n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Requirements Table (Previous Versions)\nDESCRIPTION: Markdown table defining the access requirements for older Azure DevOps versions, covering project access, permissions, access levels, and iteration requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/prerequisites.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Project access** | [Project member](../../organizations/security/add-users-team-project.md). |\n| **Permissions** | - Member of the **Contributors** or **Project Administrators** security group. <br> - To view or modify work items: **View work items in this node** and **Edit work items in this node** permissions set to **Allow**. By default, the **Contributors** group has this permission set to **Allow**. For more information, see [Set work tracking permissions](../../organizations/security/set-permissions-access-work-tracking.md). |\n| **Access levels** | To add or modify work items: At least [**Basic** access](../../organizations/security/stakeholder-access.md). |\n| **Defined iterations** | To use the **Planning** pane: Ensure your team administrator [defined iteration (sprint) paths and configure team iterations](../../organizations/settings/set-iteration-paths-sprints.md). |\n```\n\n----------------------------------------\n\nTITLE: Including .NET Core 3.0 Removal Reference - Markdown - Documentation\nDESCRIPTION: This Markdown snippet creates a bulleted link to a section outlining the removal of .NET Core 3.0 from Linux and macOS hosted agents. There are no dependencies beyond standard Markdown rendering, and the snippet expects the presence of a corresponding anchor in the target file. Suitable for including in warning or change notes sections of documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-182-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [.NET Core 3.0 to be removed from Linux and macOS hosted agents](#net-core-30-to-be-removed-from-linux-and-macos-hosted-agents)\n```\n\n----------------------------------------\n\nTITLE: Variable Management with Azure DevOps CLI (PowerShell)\nDESCRIPTION: YAML configuration demonstrating how to store and use Azure DevOps CLI command results in pipeline variables using PowerShell, including authentication handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n- name: variableGroupId\n\ntrigger: none\n\npool:\n  vmImage: \"windows-latest\"\n\nsteps:\n- pwsh: az devops configure --defaults organization='$(System.TeamFoundationCollectionUri)' project='$(System.TeamProject)' --use-git-aliases true\n  displayName: 'Set default Azure DevOps organization and project'\n\n- pwsh: echo \"##vso[task.setvariable variable=variableGroupId]$(az pipelines variable-group list --group-name Fabrikam-2023 --query [].id -o tsv)\"\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n  displayName: 'Get Fabrikam-2023 variable group id'\n\n- pwsh: az pipelines variable-group variable list --group-id '$(variableGroupId)'\n  env:\n    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)\n  displayName: 'List variables in Fabrikam-2023 variable group'\n```\n\n----------------------------------------\n\nTITLE: Configuring Agent Profile for Managed DevOps Pool\nDESCRIPTION: JSON configuration for a stateless agent profile in the Managed DevOps Pool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-azure-cli.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Stateless\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Using Team Foundation Token for Server-Scoped Group in XML Process\nDESCRIPTION: Example of using the [Team Foundation] token to reference a server-scoped security group in a field rule. This makes the Title field read-only for all Team Foundation Valid Users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_17\n\nLANGUAGE: xml\nCODE:\n```\n<FIELD name=\"Title\">\n    <READONLY for=\"[Team Foundation]\\Team Foundation Valid Users\"/>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Clearing a Dependent Field Value in XML Process\nDESCRIPTION: This XML snippet shows how to clear the value of Story Points field when the Start Date field changes, using the WHENCHANGED and EMPTY rules.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-samples.md#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<FIELDS>\n ...\n   <FIELD name=\"Story Points\" refname=\"Microsoft.VSTS.Scheduling.StoryPoints\" type=\"Double\" reportable=\"measure\" formula=\"sum\">\n       <HELPTEXT>The size of work estimated for implementing this user story</HELPTEXT>\n       <WHENCHANGED field=\"Microsoft.VSTS.Scheduling.StartDate\">  \n           <EMPTY />  \n       </WHENCHANGED>\n   </FIELD>\n   ...\n</FIELDS>\n```\n\n----------------------------------------\n\nTITLE: Updating Wiki Page with Inline Content\nDESCRIPTION: This example demonstrates updating a wiki page with inline content using the Azure DevOps CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/add-edit-wiki.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki page update --path 'my page' --wiki myprojectwiki --content \"Hello World\" --version 4ae78ad5835cb7dd55072fe210c9ee7eb6d6413b\n```\n\n----------------------------------------\n\nTITLE: History Field Type Operators in Azure DevOps Queries\nDESCRIPTION: Operators supported for History fields in Azure DevOps queries. The History field is a custom formatted field used for tracking historical information with text search capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nContains Words, Does Not Contain Words\n```\n\n----------------------------------------\n\nTITLE: Displaying Last Five Changes to Folder Items in TFVC\nDESCRIPTION: Demonstrates how to show the latest five changes made to items in a folder, including subfolders, using the tf history command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/history-command.md#2025-04-22_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history * /noprompt /recursive /stopafter:5\n```\n\n----------------------------------------\n\nTITLE: Sample Payload for Repository Status Changed Event in Azure DevOps\nDESCRIPTION: JSON payload structure for the git.repository.statusChanged event in Azure DevOps. Includes details about the repository, old and new status, and project information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/service-hooks/events.md#2025-04-22_snippet_28\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"publisherId\": \"azure-devops\",\n    \"eventId\": \"git.repository.statusChanged\",\n    \"resource\": {\n        \"repository\": {\n            \"id\": \"00000000-0000-0000-0000-000000000000repository-id\",\n            \"name\": \"repository-name\",\n            \"url\": \"repository-url\",\n            \"project\": {\n                \"id\": \"00000000-0000-0000-0000-000000000000project-id\",\n                \"name\": \"project-name\"\n            },\n            \"oldStatus\": \"old-status\",\n            \"newStatus\": \"new-status\"\n        }\n    },\n    \"createdDate\": \"2024-07-17T21:34:22.338Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Next Step Action Link (Markdown)\nDESCRIPTION: This snippet uses a Markdown extension `[!div class=\"nextstepaction\"]` specific to the Microsoft Docs platform to create a styled block containing a hyperlink, typically used to guide users to the next relevant action or page.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/sprint-251-update.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"] \n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Error for Unsupported Database Collation for Migration (cmdline)\nDESCRIPTION: This command-line output is an error message from the Data Migration Tool indicating that the collection database's collation cannot be converted and is not supported for migration to Azure DevOps Services. The user must change the database collation to a supported one before the import can proceed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-troubleshooting.md#2025-04-22_snippet_6\n\nLANGUAGE: cmdline\nCODE:\n```\nThe collection database's collation '{collation}' is not supported for migration to Azure DevOps Services. It will need to be changed to a supported collation before it can be imported. See more details at https://aka.ms/AzureDevOpsImportCollations\n```\n\n----------------------------------------\n\nTITLE: Assigning Activated By and Activated Date Fields in XML\nDESCRIPTION: This XML snippet defines how the Activated By and Activated Date fields are assigned during certain workflow transitions. The Activated By field is copied from the current user and set as required, while the Activated Date is set to the current server time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-by-workflow-changes.md#2025-04-22_snippet_18\n\nLANGUAGE: XML\nCODE:\n```\n<FIELDS>\n   <FIELD refname=\"Microsoft.VSTS.Common.ActivatedBy\">\n       <COPY from=\"currentuser\" />\n           <VALIDUSER />\n           <REQUIRED />\n    </FIELD>\n    <FIELD refname=\"Microsoft.VSTS.Common.ActivatedDate\">\n        <SERVERDEFAULT from=\"clock\" />\n   </FIELD>\n</FIELDS>\n```\n\n----------------------------------------\n\nTITLE: Running npm Compile Script in YAML\nDESCRIPTION: Executes the `npm run compile` command within a script step in Azure Pipelines YAML. This runs the script defined under the `compile` key in the `scripts` section of the project's `package.json` file. Assumes such a script exists. Applicable for Azure DevOps 2020 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n- script: npm run compile\n```\n\n----------------------------------------\n\nTITLE: Setting up NuGet package restore before dependency scanning in .NET Core\nDESCRIPTION: YAML snippet showing how to configure a pipeline to restore NuGet packages before running the AdvancedSecurity-Dependency-Scanning task for a C# (.NET Core) project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-dependency-scanning-troubleshoot.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DotNetCoreCLI@2\n  displayName: 'Restore NuGet packages'\n  inputs:\n    command: 'restore'\n    projects: '**/*.csproj'\n\n    # If you are using a private package feed such as Azure Artifacts, you will need additional variables.\n    # For more information, see https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/dotnet-core-cli-v2?view=azure-pipelines \n    feedsToUse: 'select'\n    ...\n\n- task: AdvancedSecurity-Dependency-Scanning@1\n```\n\n----------------------------------------\n\nTITLE: Querying Pipeline Duration Trend for All Project Pipelines in OData\nDESCRIPTION: OData query to retrieve pipeline duration trend data for all project pipelines. It filters runs by completion date and success status, then computes the 80th percentile duration for each pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-pipelines-duration-trend.md#2025-04-22_snippet_6\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{organization}/{project}/_odata/v3.0-preview/PipelineRuns?\n$apply=filter(\n    CompletedDate ge {startdate}\n    and (SucceededCount eq 1 or PartiallySucceededCount eq 1)\n    )\n/compute(\n    percentile_cont(TotalDurationSeconds, 0.8,PipelineId, CompletedDateSK) as Duration80thPercentileInSeconds)\n/groupby(\n    (Duration80thPercentileInSeconds, Pipeline/PipelineName, CompletedOn/Date))\n&$orderby=CompletedOn/Date asc\n```\n\n----------------------------------------\n\nTITLE: Job Conditions Based on Other Jobs' Results in Azure DevOps YAML Pipeline\nDESCRIPTION: Example showing three jobs with dependencies. Job A is skipped, Job B always runs, and Job C runs conditionally based on the results of Jobs A and B, demonstrating complex conditional logic.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: a\n  condition: false\n  steps:\n  - script: echo Job a\n- job: b\n  steps:\n  - script: echo Job b\n- job: c\n  dependsOn:\n  - a\n  - b\n  condition: |\n    and\n    (\n      in(dependencies.a.result, 'Succeeded', 'SucceededWithIssues', 'Skipped'),\n      in(dependencies.b.result, 'Succeeded', 'SucceededWithIssues', 'Skipped')\n    )\n  steps:\n  - script: echo Job c\n```\n\n----------------------------------------\n\nTITLE: Requirements Quality Widget Configuration Steps\nDESCRIPTION: Markdown code showing configuration steps for setting up the Requirements quality widget in Azure DevOps dashboard. It includes steps for linking test results to requirements and configuring the widget settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/requirements-traceability.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the results section under **Tests** tab of a build or release summary,\n   select the test to be linked to requirements and choose **Link**. \n\n2. Choose a work item to be linked to the selected test in one of the following ways:\n\n   * Choose an applicable work item from the list of suggested work items\n   * Specify a work item ID\n   * Search for a work item based on the title text\n\n3. Teams often want to pin the summarized view of requirements traceability to a dashboard.\n   Use the [Requirements quality](../../report/dashboards/widget-catalog.md) widget to do so.\n\n4. Configure the **Requirements quality** widget with the required options and save it.\n\n   * **Requirements query**: Select a work item query that captures the requirements\n   * **Quality data**: Specify the stage of the pipeline for requirements quality tracing\n```\n\n----------------------------------------\n\nTITLE: Dashboard Focus Types Table in Markdown\nDESCRIPTION: Markdown table defining different dashboard focus types, their descriptions, and appropriate dashboard types in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/dashboard-focus.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Focus** | **Description** | **Dashboard type** |\n|-----------|-----------------|--------------------||\n|[**Stakeholder**](#stakeholder-dashboard)|Share team and organizational goals, information, links to work item templates to create bugs or new feature requests, and more. |Team or Project | \n|[**Personal**](#personal-dashboard)|Help each team member to focus on their backlog and current work.| Project or Team |\n|[**Team**](#team-dashboard)|Provide information for a team to monitor status, track progress, identify bottlenecks, and ensure backlog items are well defined. |Team |\n|[**Sprint**](#sprint-dashboard)|Review in daily stand-ups to ensure the team is on track to meet sprint goals and address any issues that affect those goals.|Team |\n|[**Release**](#release-dashboard)|Monitor status and track progress toward a major release that might involve contributions from several teams. |Project |\n|[**Test and deploy**](#test-deploy-dashboard)| Monitor continuous integration, builds, deployments, and releases. | Project or Team|\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: An include directive that adds the standardized next steps section from a separate file. This provides consistent guidance on what users should do after reading the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-191-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Test Plans Operation Shortcuts\nDESCRIPTION: Keyboard shortcuts for common test plan operations including test execution, status updates, and view controls.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/test-shortcuts.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|1|Open tests|\n|2|Open charts|\n|e|Execute tests|\n|t, b|Mark selected tests as blocked|\n|t, f|Fail selected tests|\n|t, n|Mark selected tests as NA|\n|t, p|Pass selected tests|\n|t, r|Reset tests to active|\n|Ctrl+Shift+f|Filter results|\n|v, g|View grid|\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Links in Azure DevOps Docs\nDESCRIPTION: Internal navigation links for the Analytics documentation section, including links to build reports and analytics availability sections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/reporting/sprint-150-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Build failure and duration reports](#build-failure-and-duration-reports)\n- [General availability of Analytics](#general-availability-of-analytics)\n```\n\n----------------------------------------\n\nTITLE: Fixing Floating-Point Equality Comparison in C#\nDESCRIPTION: The corrected implementation of the floating-point equality comparison method, which now allows for small rounding errors by checking if the absolute difference between values is less than an acceptable error margin.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-suspend-work-fix-bug-conduct-code-review.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\npublic static bool EqualTo(double a, double b)\n{\n    // Allow for rounding errors.\n    // For example, a == 2.0 and b = 1.99999999999\n\n    const double allowedError = 1/1000000;\n    return System.Math.Abs(a - b) < allowedError;\n}\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 220 Update Links in Markdown\nDESCRIPTION: This Markdown directive uses the `[!INCLUDE ...]` syntax, specific to the Microsoft Docs platform (Markdig parser), to embed content from another file. It includes a shared file containing links related to the features described in the Sprint 220 update for the Reporting area.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/reporting/sprint-220-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-220-update-links](../includes/reporting/sprint-220-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Correct Node StructureType and Name Attributes - Azure DevOps XML\nDESCRIPTION: These snippets show proper and improper assignment of the StructureType attribute in Node elements. The attribute must be 'ProjectModelHierarchy' or 'ProjectLifecycle' only. Misspellings or unsupported attribute values should be corrected, as in the resolution example.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_20\n\nLANGUAGE: xml\nCODE:\n```\n<Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Iteration\\\" xmlns=\\\"\\\">\\n  <Children>\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 1\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 2\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 3\\\" />\\n  </Children>\\n</Node>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Iteration\\\" xmlns=\\\"\\\">\\n  <Children>\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 1\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 2\\\" />\\n    <Node StructureType=\\\"ProjectLifecycle\\\" Name=\\\"Sprint 3\\\" />\\n  </Children>\\n</Node>\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Resource Setup Commands\nDESCRIPTION: Series of Azure CLI commands to create required Azure resources including resource group, storage account, and shared image gallery for VM scale set deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/deploy-virtual-scale-set-java.md#2025-04-22_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group create --name myVMSSResourceGroup --location eastus2\n\naz storage account create \\\n  --name vmssstorageaccount \\\n  --resource-group myVMSSResourceGroup \\\n  --location eastus2 \\\n  --sku Standard_LRS\n\naz sig create --resource-group myVMSSResourceGroup --gallery-name myVMSSGallery\n\naz sig image-definition create -g myVMSSResourceGroup --gallery-name myVMSSGallery --gallery-image-definition MyImage --publisher GreatPublisher --offer GreatOffer --sku GreatSku --os-type linux\n\naz identity create -g myVMSSResourceGroup -n myVMSSIdentity\n```\n\n----------------------------------------\n\nTITLE: Accessing Python Package API Endpoint for Organization Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting Python packages in an organization scoped feed using the REST API. This requires a PATCH request to update the PyPI package version views.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_4\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/_apis/packaging/feeds/{feedId}/pypi/packages/{packageName}/versions/{packageVersion}?api-version=7.1\n```\n\n----------------------------------------\n\nTITLE: Getting Sample JavaScript Code Repository URL\nDESCRIPTION: Provides the GitHub repository URL containing sample JavaScript code, specifically a Node.js Express server application. Users should fork this repository into their own GitHub account to follow the guide for creating their first JavaScript pipeline in Azure Pipelines. This repository is used by Azure Pipelines to analyze the code and suggest a suitable pipeline template (Node.js).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/create-first-pipeline.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/Azure-Samples/js-e2e-express-server\n```\n\n----------------------------------------\n\nTITLE: Retrieving Branches with Advanced Security Analysis via Azure DevOps REST API - HTTP\nDESCRIPTION: This HTTP request demonstrates how to retrieve all branches in a specific Azure DevOps repository where Advanced Security analysis has been performed. Users must replace placeholders in the URL ({organization}, {project}, {repository}) and use API version 7.2-preview.1. Proper authentication with the vso.advsec token scope or Advanced Security read alerts permissions is required. The endpoint returns a JSON list of branches analyzed; no body is needed, only an authenticated GET request.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/ghazdo/sprint-244-update.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET https://advsec.dev.azure.com/{organization}/{project}/_apis/alert/repositories/{repository}/filters/branches?api-version=7.2-preview.1\n```\n\n----------------------------------------\n\nTITLE: Note About Requirements Terminology in Azure Boards\nDESCRIPTION: An included note about how the term 'requirements' is used generically to refer to different work item types depending on the process template being used (User Stories, Issues, Product backlog items, etc.).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/best-practices-agile-project-management.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [define requirements](includes/note-requirements-terms.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Agent Size using ARM Template in Azure DevOps\nDESCRIPTION: This ARM template snippet demonstrates how to configure the agent size for a Managed DevOps Pool. It specifies a Standard_D2ads_v5 VM size using the 'sku' property in the 'fabricProfile' section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-pool-settings.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                ...\n                \"fabricProfile\": {\n                    \"sku\": {\n                        \"name\": \"Standard_D2ads_v5\"\n                    }\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: ARM Template for Managed Pool with Manual Scaling\nDESCRIPTION: ARM template for creating an Azure DevOps managed pool with manual standby agent provisioning. The template configures a pool with 1 agent scheduled on Monday mornings from midnight to 4:00 AM EST.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-scaling.md#2025-04-22_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n                ...\n                \"agentProfile\": {\n                    \"kind\": \"Stateless\",\n                    \"resourcePredictionsProfile\": {\n                        \"kind\": \"Manual\"\n                    },\n                    \"resourcePredictions\": {\n                        \"timeZone\": \"Eastern Standard Time\",\n                        \"daysData\": [\n                            {},\n                            {\n                                \"00:00:00\": 1,\n                                \"04:00:00\": 0\n                            },\n                            {},\n                            {},\n                            {},\n                            {},\n                            {}\n                        ]\n                    }\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Reading Work Items Scope (`vso.work`)\nDESCRIPTION: Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks. Depends on `vso.hooks_write`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_31\n\nLANGUAGE: text\nCODE:\n```\n`vso.work`\n```\n\n----------------------------------------\n\nTITLE: Custom Configuration File for CodeQL Analysis in YAML\nDESCRIPTION: Example of a custom configuration file for CodeQL analysis. It specifies custom queries, query packs, and filters for analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/security/github-advanced-security-code-scanning-queries.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: \"Run custom queries\"\n\ndisable-default-queries: true\n\nqueries:\n  - name: Use security-extended query suite\n    uses: security-extended\n  - name: Use local custom query (single query)\n    uses: ./customQueries/javascript/FindTestFunctions.ql\n  - name: Use local custom query (directory of queries)\n    uses: ./customQueries/javascript/MemoryLeakQueries  \n\npacks:\n - mygithuborg/mypackname\n\npaths:\n - src\n\npaths-ignore:\n  - src/node_modules\n  - '**/*.test.js'\n\nquery-filters:\n - include:\n    kind: problem\n - include:\n     precision: medium\n - exclude:\n    id:\n      - js/angular/disabling-sce\n      - js/angular/insecure-url-allowlist\n```\n\n----------------------------------------\n\nTITLE: Including Pipelines Update Details using Markdown Directive\nDESCRIPTION: This Markdown directive includes content from the specified file (`includes/pipelines/sprint-217-update.md`), likely containing detailed information about Azure Pipelines updates for Sprint 217. It's used within the Azure DevOps documentation build system (Microsoft Docs).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-217-update.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update](includes/pipelines/sprint-217-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining and Accessing Repository References and Variables in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to define multiple Git repositories as resources, assign variables using runtime expressions to access repository references, and integrate multiple checkouts in the pipeline. The example shows how to assign the checked out commit reference of an auxiliary repository to a variable, and check out both the default and an external repository for use in subsequent steps. Dependencies include Azure Pipelines YAML schema compliance and repository access configuration. Parameters specified include 'repository' definitions, variable assignment, and usage of the 'checkout' step. The output enables pipeline steps to access branch or commit data at runtime and share state between steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-168-update.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  repositories:\n  - repository: other\n    type: git\n    name: MyProject/OtherTools\nvariables:\n  tools.ref: $[ resources.repositories['other'].ref ]\n\nsteps:\n- checkout: self\n- checkout: other\n```\n\nLANGUAGE: bash\nCODE:\n```\nbash: echo \"Tools version: $TOOLS_REF\"\n```\n\n----------------------------------------\n\nTITLE: Editing Team Dashboards Default Permission Identifier (Plaintext)\nDESCRIPTION: This identifier (`DashboardsPrivileges, Edit`) represents the default permission allowing users (typically team administrators) to add widgets and modify the layout of team dashboards within a project in Azure DevOps. This is part of the default permission set applicable to team dashboards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_28\n\nLANGUAGE: plaintext\nCODE:\n```\nDashboardsPrivileges, Edit\n```\n\n----------------------------------------\n\nTITLE: Displaying an Image with Border (Markdown)\nDESCRIPTION: This Markdown snippet utilizes a blockquote (`>`) and a specific `div` class (`[!div class=\"mx-imgBorder\"]`) to display an image (`![Make a suggestion... ]`) with a predefined border style. This enhances the visual presentation of the embedded image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"] \n> ![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Account Sign-Up/In Steps using Markdown\nDESCRIPTION: This Markdown snippet employs the Microsoft Docs `[!INCLUDE ...]` syntax to embed the standard sign-up/sign-in procedure for Azure DevOps via a GitHub account, sourced from the shared content file `../../includes/sign-in-github-account.md`. This ensures consistency across documentation pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/pipelines-sign-up.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sign-in-github-account](../../includes/sign-in-github-account.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Matrix Strategy in Azure DevOps YAML Pipeline\nDESCRIPTION: Creates a job that executes multiple times with different variable combinations. This example runs three variations of a test job with different location and browser combinations, with a maximum of 2 jobs running in parallel.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Test\n  strategy:\n    maxParallel: 2\n    matrix: \n      US_IE:\n        Location: US\n        Browser: IE\n      US_Chrome:\n        Location: US\n        Browser: Chrome\n      Europe_Chrome:\n        Location: Europe\n        Browser: Chrome\n```\n\n----------------------------------------\n\nTITLE: Using VSTS.AccountContents Function in Power Query M\nDESCRIPTION: The VSTS.AccountContents function is a specialized alternative to Web.Contents that handles Azure DevOps authentication. It returns contents downloaded from Analytics URLs as binary values and supports the same arguments and options as Web.Contents. This function is limited to Azure Boards (work items) data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/data-connector-functions.md#2025-04-22_snippet_0\n\nLANGUAGE: Power Query M\nCODE:\n```\nVSTS.AccountContents(url, [options])\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: Include directive for next steps section of the documentation\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-157-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Caching with Glob Patterns in YAML\nDESCRIPTION: A YAML configuration snippet for Azure Pipelines showing how to use glob patterns in cache keys to include multiple files while excluding specific directories. The example demonstrates caching npm dependencies by specifying package-lock.json files while excluding node_modules.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-156-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: CacheBeta@0\n  inputs:\n    key:\n    packages/**/package-lock.json, !node_modules/** | $(Agent.OS)\n    path:\n$(npm_config_cache)\n```\n\n----------------------------------------\n\nTITLE: Embedding a Bordered Image in Markdown\nDESCRIPTION: This Markdown snippet displays an image using standard Markdown image syntax (`![alt text](path)`). It's wrapped in a `div` element with the `mx-imgBorder` class, a Microsoft Docs convention, to add a border around the image for visual emphasis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-218-update.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"] \n> ![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Downloading Filtered Universal Packages using Azure CLI\nDESCRIPTION: This command demonstrates how to download a subset of files from a Universal Package using the Azure CLI. It uses a minimatch pattern to specify which files to download, allowing for more efficient and targeted package retrieval.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/artifacts/sprint-153-update.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz artifacts universal download --organization \"https://dev.azure.com/myorganization/\" --feed \"myFeed\" --name \"myPackageName\" --version 1.0.0 --path .  --file-filter \"**/*.exe;**/*.dll\"\n```\n\n----------------------------------------\n\nTITLE: Signing out of Azure DevOps via URL\nDESCRIPTION: This URL (`https://aka.ms/VsSignout`) forces a sign-out from Azure DevOps within the browser. This action is recommended as a troubleshooting step when encountering configuration failures, potentially due to incorrect or stale authentication sessions, before attempting reconfiguration in a private browser window.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/includes/boards-troubleshoot-authentication.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://aka.ms/VsSignout\n```\n\n----------------------------------------\n\nTITLE: OData URL Structure for Analytics Queries in Azure DevOps\nDESCRIPTION: This snippet demonstrates the structure of an OData URL for querying Analytics in Azure DevOps Services (cloud version). It shows the components including the service root URL, organization/project path, OData version, entity type, and query options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/analytics-query-parts.md#2025-04-22_snippet_4\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/OrganizationName/ProjectName/_odata/version/EntityType?{Query-options}\n\\______________________________/\\__________________________/ \\____________/\\_________/\\_____________/\n               |                             |                    |               |          |\n    Analytics service root URL     Organization/Project      OData version    Entity   Query parts\n```\n\n----------------------------------------\n\nTITLE: Cloning Sample JavaScript Docker App Repository\nDESCRIPTION: Provides the Git URL to clone the sample JavaScript application repository needed for the tutorial on building Docker images with Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/containers/publish-to-acr.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/MicrosoftDocs/pipelines-javascript-docker\n```\n\n----------------------------------------\n\nTITLE: Visualizing State Transitions with State Flow in Azure DevOps Analytics\nDESCRIPTION: This formula creates a text representation of state transitions, showing the flow from previous state to current state. It depends on the 'State Previous' and 'State Changed' calculated columns to identify transition points.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/create-timeinstate-report.md#2025-04-22_snippet_10\n\nLANGUAGE: DAX\nCODE:\n```\nState Flow = \nIF([State Changed], [State Previous], [State]) & \" => \" & [State]\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Advanced Security Sprint 222 Update Details (Markdown)\nDESCRIPTION: This directive uses the Microsoft Docs Markdown syntax `[!INCLUDE ...]` to embed the full content of another Markdown file. It includes detailed information about GitHub Advanced Security for Azure DevOps updates from Sprint 222.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update](includes/ghazdo/sprint-222-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Creating Windows Registry AutoRun Test Command\nDESCRIPTION: This registry value can be used to test if Windows registry keys are working correctly on the machine. It should be added as a new key-value pair with the key 'AutoRun' in the same registry path as the VSTSAgent key.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/troubleshooting-autologon.md#2025-04-22_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nC:\\windows\\system32\\cmd.exe /D /S /C start \"AutoRun\" \"D:\\path\\to\\autorun.cmd\"\n```\n\n----------------------------------------\n\nTITLE: Permissions Token Format Example for Identity Namespace\nDESCRIPTION: Examples showing the token format for project-level permissions and group level permissions in the Identity namespace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\nxxxxxxxx-a1de-4bc8-b751-188eea17c3ba\\2b087996-2e64-4cc1-a1dc-1ccd5e7eb95b\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Azure DevOps Documentation\nDESCRIPTION: YAML frontmatter block defining metadata for the Azure DevOps documentation page, including title, description, author information, and version compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/associate-automated-test-with-test-case.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Associate automated tests with test cases\ndescription: Continuous testing. Associate an automated test with a test case using Microsoft Test Manager and Azure DevOps with a build or release pipeline\nms.assetid: 606679F2-1604-40EA-A720-63CDDA93DD76\nms.service: azure-devops-test-plans\nms.custom: UpdateFrequency3\nms.topic: how-to\nms.author: jeom\nauthor: rohit-batra\nms.date: 01/28/2025\nmonikerRange: '<= azure-devops'\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Node 10 Task Runner in Azure Pipelines\nDESCRIPTION: YAML configuration showing how to install the Node 10 execution handler on an agent that doesn't have Node 10 bundled. This is needed for tasks that still require Node 10 after its removal from the pipelines-* agent packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/pipelines/sprint-238-update.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  steps:\n  - task: NodeTaskRunnerInstaller@0\n    inputs:\n      runnerVersion: 10\n```\n\n----------------------------------------\n\nTITLE: Markdown Link to UI Feed Creation Feature\nDESCRIPTION: This snippet is a Markdown list item containing an internal link. It points to a section within the documentation titled 'Ability to create org-scoped feeds from UI'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/artifacts/sprint-172-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Ability to create org-scoped feeds from UI](#ability-to-create-org-scoped-feeds-from-ui)\n```\n\n----------------------------------------\n\nTITLE: Accessing Maven Package API Endpoint for Organization Scoped Feed\nDESCRIPTION: HTTP endpoint URL pattern for promoting Maven packages in an organization scoped feed using the REST API. This preview API requires group, artifact, and version identifiers for the Maven package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/feeds/views.md#2025-04-22_snippet_6\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://pkgs.dev.azure.com/{organization}/_apis/packaging/feeds/{feed}/maven/groups/{groupId}/artifacts/{artifactId}/versions/{version}?api-version=7.1-preview.1\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Matrix in Azure Pipelines\nDESCRIPTION: Equivalent Azure Pipelines configuration for creating a matrix of builds with different environment variable values. This example shows how to implement the same functionality as the Travis CI matrix approach but using Azure Pipelines syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'macOS-latest'\nstrategy:\n  matrix:\n    set_env_to_one:\n      MY_ENVIRONMENT_VARIABLE: 'one'\n    set_env_to_two:\n      MY_ENVIRONMENT_VARIABLE: 'two'\n    set_env_to_three:\n      MY_ENVIRONMENT_VARIABLE: 'three'\nsteps:\n- script: echo $(MY_ENVIRONMENT_VARIABLE)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 221 Reporting Update Links (Markdown)\nDESCRIPTION: Uses a Markdown include directive to embed content from the specified file (`includes/reporting/sprint-221-update-links.md`), which probably lists links concerning Reporting feature updates in Sprint 221. It aids in maintaining organized and modular documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-221-update-links](includes/reporting/sprint-221-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Interactive Mode in ARM Template (JSON)\nDESCRIPTION: This JSON snippet demonstrates configuring interactive mode within an Azure Resource Manager (ARM) template for a Managed DevOps Pool. The `logonType` property within `properties.fabricProfile.osProfile` is set to `Interactive` to enable it, or `Service` to disable it. This section is part of the `microsoft.devopsinfrastructure/pools` resource definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-security.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"name\": \"fabrikam-managed-pool\",\n            \"type\": \"microsoft.devopsinfrastructure/pools\",\n            \"apiVersion\": \"2024-10-19\",\n            \"location\": \"eastus\",\n            \"properties\": {\n            ...\n            \"fabricProfile\": {\n                \"sku\": {...},\n                \"images\": [...],\n                \"osProfile\": {\n                    \"secretsManagementSettings\": {...},\n                    \"logonType\": \"Interactive\"\n                },\n                \"storageProfile\": {...},\n                \"kind\": \"Vmss\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Project Access and Permissions Table in Markdown\nDESCRIPTION: This markdown snippet creates a table that outlines the project access and permissions requirements for Azure DevOps Boards. It specifies that users need to be project members and belong to the Project Administrators security group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/prerequisites-project-admin.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Project access**| [Project member](../../organizations/security/add-users-team-project.md).|\n|**Permissions**| Member of the **Project Administrators** security group.|\n```\n\n----------------------------------------\n\nTITLE: Creating a Next Step Action Block in Markdown\nDESCRIPTION: Uses a specific Markdown extension (`[!div class=\"nextstepaction\"]`) likely styled by CSS to create a prominent call-to-action block containing a link to Azure DevOps. This enhances user navigation towards relevant actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-215-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"] \n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Setting Output Variables in Same Job Using Bash\nDESCRIPTION: Sets two variables in Bash: a regular variable 'myJobVar' and an output variable 'myOutputJobVar' with isOutput=true. This demonstrates the two ways to set variables for use in the same job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/set-variables-scripts.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - bash: |\n     echo \"##vso[task.setvariable variable=myJobVar]this is the same job\"\n  - bash: |\n     echo \"##vso[task.setvariable variable=myOutputJobVar;isOutput=true]this is the same job too\"\n    name: setOutput\n```\n\n----------------------------------------\n\nTITLE: Reading Variables in Batch Script for Azure DevOps Pipelines\nDESCRIPTION: Shows how to read previously set variables in a Batch script task. The example demonstrates accessing variables through arguments and environment variables, with special handling for secret variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/includes/set-variables-in-scripts.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\n@echo off\nset sauceArgument=%~1\nset secretSauceArgument=%~2\n@echo No problem reading %sauceArgument% or %SAUCE%\n@echo But I cannot read %SECRET_SAUCE%\n@echo But I can read %secretSauceArgument% (but the log is redacted so I do not spoil the secret)\n```\n\n----------------------------------------\n\nTITLE: Displaying Default Permissions for Team Contributors in Azure DevOps\nDESCRIPTION: This image shows the default permissions assigned to team contributors in Azure DevOps. It illustrates the access levels and rights granted to team members by default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/about-teams-and-settings.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n![Default permissions assigned to team contributors](media/add-team/default-permissions-assigned-to-team-contributors.png)\n```\n\n----------------------------------------\n\nTITLE: Running GAC Tool Commands for Office 2016/2013 Integration\nDESCRIPTION: Command Prompt commands to register Office interoperability assemblies using the Global Assembly Cache Tool (GACUTIL) for Office 2016 and 2013.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/office/tfs-office-integration-issues.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nGACUTIL /I C:\\Windows\\assembly\\GAC_MSIL\\Policy.12.0.Microsoft.Office.Interop.Excel\\15.0.0.0__71e9bce111e9429c\\Policy.12.0.Microsoft.Office.Interop.Excel.dll\nGACUTIL /I C:\\Windows\\assembly\\GAC_MSIL\\Policy.12.0.office\\15.0.0.0__71e9bce111e9429c\\Policy.12.0.Office.dll\n```\n\n----------------------------------------\n\nTITLE: Including Sprint Feature Bulletin - Markdown - Documentation\nDESCRIPTION: This Markdown snippet incorporates feature updates by including a bulletin or change summary from a shared include file. The directive references a relative path to modularize frequently updated content, ensuring synchronization across multiple documentation pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/general/sprint-253-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-253-update](../includes/general/sprint-253-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Variables with Compile-time and Runtime Expressions in Azure Pipelines\nDESCRIPTION: Examples of using both compile-time (${{ }}) and runtime ($[ ]) expressions to define pipeline variables. Compile-time expressions are evaluated when the YAML file is compiled, while runtime expressions are evaluated during execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/expressions.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Two examples of expressions used to define variables\n# The first one, a, is evaluated when the YAML file is compiled into a plan.\n# The second one, b, is evaluated at runtime.\n# Note the syntax ${{}} for compile time and $[] for runtime expressions.\nvariables:\n  a: ${{ <expression> }}\n  b: $[ <expression> ]\n```\n\n----------------------------------------\n\nTITLE: Using Build.Repository.Provider Variable in Azure DevOps Pipelines\nDESCRIPTION: Specifies the type of the triggering repository (e.g., 'TfsGit', 'TfsVersionControl', 'Git', 'GitHub', 'Svn'). It's agent-scoped, usable as an environment variable or task parameter, but not in build numbers or version control tags. Not available in templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/build/includes/variables-hosted.md#2025-04-22_snippet_17\n\nLANGUAGE: azure-pipelines\nCODE:\n```\nBuild.Repository.Provider\n```\n\n----------------------------------------\n\nTITLE: Merging Branches in Azure DevOps (Batch)\nDESCRIPTION: This command merges all items from $/BranchA/ to $/BranchB/. It's used to perform a full merge between two branches in Azure DevOps version control.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rollback-command-team-foundation-version-control.md#2025-04-22_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nc:\\workspace> tf merge $/BranchA $/BranchB\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 218 Update Links in Markdown\nDESCRIPTION: These Markdown directives use the `[!INCLUDE]` syntax specific to Microsoft Docs to embed content from external files. These particular includes pull in lists of links related to the Sprint 218 updates for Azure Pipelines and Reporting respectively.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-218-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-218-update-links](includes/pipelines/sprint-218-update-links.md)]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-218-update-links](includes/reporting/sprint-218-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Running GAC Tool Commands for Microsoft 365 Integration\nDESCRIPTION: Command Prompt commands to register Office interoperability assemblies using the Global Assembly Cache Tool (GACUTIL) for Microsoft 365.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/office/tfs-office-integration-issues.md#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nGACUTIL /I C:\\Windows\\assembly\\GAC_MSIL\\Policy.14.0.Microsoft.Office.Interop.Excel\\15.0.0.0__71e9bce111e9429c\\Policy.14.0.Microsoft.Office.Interop.Excel.dll\nGACUTIL /I C:\\Windows\\assembly\\GAC_MSIL\\Policy.14.0.office\\15.0.0.0__71e9bce111e9429c\\Policy.14.0.Office.dll\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 217 Update Links (Markdown Directive)\nDESCRIPTION: This directive is used within the documentation system (likely Markdown with extensions) to include content from another file. Specifically, it inserts the links related to the features updated in Sprint 217 for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-217-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-217-update-links](../includes/pipelines/sprint-217-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Document Structure for Release Notes\nDESCRIPTION: Basic markdown structure for Azure DevOps release notes documentation, including frontmatter metadata and section organization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/ghazdo/sprint-253-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Azure DevOps release notes - GitHub Advanced Security for Azure DevOps 253 Update\ndescription: See the Sprint 253 feature updates for GitHub Advanced Security for Azure DevOps, including next steps.\nauthor: ckanyika\nms.author: ckanyika\nms.date: 3/20/2025\n---\n\n# GitHub Advanced Security for Azure DevOps - Sprint 253 Update\n\n## Features\n\n[!INCLUDE [sprint-253-update-links](../includes/ghazdo/sprint-253-update-links.md)]\n\n[!INCLUDE [sprint-253-update](../includes/ghazdo/sprint-253-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Referencing UtilizationPermissions Namespace in Azure DevOps Markdown\nDESCRIPTION: The code snippet shows the `QueryUsageSummary` permission used to control querying of usage summaries for Azure DevOps utilization data. It also provides the namespace ID required for API calls and automation. These values are intended for use in documentation, REST API requests, or administrative scripting, and are literal tokens with no external dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n`QueryUsageSummary`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`83abde3a-4593-424e-b45f-9898af99034d`\n```\n\n----------------------------------------\n\nTITLE: GitHub App Detailed Permissions Comment Block in Markdown\nDESCRIPTION: A markdown comment block listing additional detailed permissions not shown during installation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/github.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<!--\nDetailed permissions not displayed to the user during installation:\n| Checks (read & write)\n| Repository contents (read & write)\n| Deployments (read & write)\n| Issues (read & write)\n| Repository metadata (read)\n| Pull requests (read & write)\n| Commit statuses (read & write)\n -->\n```\n\n----------------------------------------\n\nTITLE: Defining Extended Requirements Table for Azure DevOps 2020-2022 in Markdown\nDESCRIPTION: This snippet expands on the previous table, adding a tools requirement for Analytics widgets in Azure DevOps versions 2020 to 2022.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/dashboard-prerequisites.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md).<br>- At least **Basic** access or specific [dashboard permissions](../dashboards/dashboard-permissions.md). |\n| **Permissions** | To add, edit, or manage a team dashboard: Member of the team and member of the **Project Administrators** group. |\n|**Tools** | For [Analytics widgets](../dashboards/analytics-widgets.md) to work with your dashboard: [Analytics enabled](../dashboards/analytics-extension.md).|\n```\n\n----------------------------------------\n\nTITLE: Defining Multi-Platform Pipeline Strategy in YAML\nDESCRIPTION: YAML configuration that specifies a matrix strategy for running the same pipeline steps across Windows, macOS, and Linux agents. This allows defining multi-platform pipelines in a single file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/sprint-144-update.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nstrategy:\n  matrix:\n    win:\n      vm: windows-latest\n    mac:\n      vm: macOS-latest\n    linux:\n      vm: ubuntu-latest\n\npool:\n  vmImage: $(vm)\n\nsteps:\n- script: npm install\n- script: npm run test\n```\n\n----------------------------------------\n\nTITLE: Converting SVN Tags to Git Tags\nDESCRIPTION: PowerShell script to convert Subversion tags (which git-svn converts to branches) into proper Git tags. This script creates Git tags and then deletes the corresponding branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/perform-migration-from-svn-to-git.md#2025-04-22_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\ncd c:\\new-bare.git\ngit for-each-ref --format='%(refname)' refs/heads/svn/tags | % { $_.Replace('refs/heads/svn/tags/','') } | % { git tag $_ \"refs/heads/svn/tags/$_\"; git branch -D \"svn/tags/$_\" }\n```\n\n----------------------------------------\n\nTITLE: Displaying Error Message for Long-Running Query in Azure DevOps\nDESCRIPTION: This code snippet shows the error message returned when a query in Azure DevOps runs longer than the 30-second timeout period. It's important to handle such errors gracefully in API integrations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/concepts/integration-bestpractices.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nVS402335: The timeout period (30 seconds) elapsed prior to completion of the query or the server is not responding.\n```\n\n----------------------------------------\n\nTITLE: Downloading Specific Files from Organization-Scoped Feed\nDESCRIPTION: Azure CLI command to download specific files from a Universal Package in an organization-scoped feed. It uses the --file-filter parameter to specify which files to download based on a match pattern.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/download-universal-packages.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz artifacts universal download --organization https://dev.azure.com/<YOUR_ORGANIZATION_NAME> --feed <FEED_NAME> --name <PACKAGE_NAME> --version <PACKAGE_VERSION> --path <DOWNLOAD_PATH> --file-filter <MATCH_PATTERN>\n```\n\n----------------------------------------\n\nTITLE: Registering Azure Pipelines Agent with Service Principal via CLI – Shell\nDESCRIPTION: Demonstrates the shell command-line arguments needed to register an Azure Pipelines agent using a Service Principal instead of a Personal Access Token (PAT). This method requires specifying the authentication type as 'SP', the service principal's client ID, client secret (securely prompted or specified), and tenant ID. Inputs are provided as CLI arguments, and dependencies include access to Azure DevOps and a provisioned Service Principal with correct permissions. Outputs are agent registration with the specified Azure DevOps organization and project; ensure client secrets are handled securely.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-227-update.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n--auth 'SP' --clientid 00001111-aaaa-2222-bbbb-3333cccc4444 --clientsecret --tenantid aaaabbbb-0000-cccc-1111-dddd2222eeee\n```\n\n----------------------------------------\n\nTITLE: Including Microsoft Account Sign-Up Steps using Markdown\nDESCRIPTION: This Markdown snippet utilizes the Microsoft Docs `[!INCLUDE ...]` syntax to incorporate the standard sign-up instructions for Azure DevOps using a Microsoft account from the shared content file `../../includes/sign-up-msft-account.md`. This promotes content reuse and consistency.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/get-started/pipelines-sign-up.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sign-up-msft-account](../../includes/sign-up-msft-account.md)]\n```\n\n----------------------------------------\n\nTITLE: Signing In with Organization-Specific Azure DevOps URL (Markdown)\nDESCRIPTION: This Markdown code snippet demonstrates the format for signing in to an Azure DevOps organization using an organization-specific URL. Users should replace {yourorganization} with their organization's unique name. The snippet is not an executable command or code block but is provided in inline code syntax for reference within a procedural step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/add-external-user.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://dev.azure.com/{yourorganization}\n```\n\n----------------------------------------\n\nTITLE: Managing Azure DevOps Teams with REST API\nDESCRIPTION: Reference to the Azure DevOps REST API endpoint for managing teams. This API allows for creating, reading, updating, and deleting teams programmatically.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-configure-boards.md#2025-04-22_snippet_3\n\nLANGUAGE: restapi\nCODE:\n```\n- **Teams**: [Teams (REST API)](/rest/api/azure/devops/core/teams)\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Include Statement in Markdown\nDESCRIPTION: Markdown include statement for inserting project admin prerequisites content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/safe-plan-track-boards.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites-project-admin](../includes/prerequisites-project-admin.md)]\n```\n\n----------------------------------------\n\nTITLE: Cloning a Private Repository with PAT Authentication\nDESCRIPTION: Bash script to clone a private repository using a Personal Access Token (PAT) for authentication. This method uses Basic authentication with the PAT as the password field to access private repositories across projects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\nAUTH=$(echo -n \":$REPO_PAT\" | openssl base64 | tr -d '\\n')\ngit -c http.<repo URL>.extraheader=\"AUTHORIZATION: basic $AUTH\" clone <repo URL> --no-checkout --branch master\n```\n\n----------------------------------------\n\nTITLE: Building .NET Core Projects with Command Line Script in YAML Pipeline\nDESCRIPTION: Shows how to build .NET Core projects using a direct script command in a YAML pipeline. This approach uses the dotnet CLI directly instead of the DotNetCoreCLI task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/dotnet-core.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: dotnet build --configuration $(buildConfiguration)\n  displayName: 'dotnet build $(buildConfiguration)'\n```\n\n----------------------------------------\n\nTITLE: Complete Azure CLI and DevOps Extension Setup (Bash)\nDESCRIPTION: Complete YAML pipeline configuration combining Python setup, Azure CLI installation, and Azure DevOps extension installation using Bash commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/cli/azure-devops-cli-in-yaml.md#2025-04-22_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n# Specify python version if you have side-by-side versions\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '3.x'\n    architecture: 'x64'\n\n# Update pip to latest\n- bash: python -m pip install --upgrade pip\n  displayName: 'Upgrade pip'\n\n# Update to latest Azure CLI version, min version required for Azure DevOps is 2.10.1\n- bash: pip install --pre azure-cli\n  displayName: 'Upgrade Azure CLI'\n\n# Install Azure DevOps extension\n- bash: az extension add -n azure-devops\n  displayName: 'Install Azure DevOps extension'\n\n# Now you can make calls into Azure DevOps CLI\n# ...\n```\n\n----------------------------------------\n\nTITLE: Scheduling Builds with Cron Syntax in YAML Azure Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to schedule a daily midnight build for specific branches using cron syntax in Azure Pipelines. It includes branch inclusions, exclusions, and the 'always' flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-153-update.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: \"0 0 * * *\"\n  displayName: Daily midnight build\n  branches:\n    include:\n    - main\n    - releases/*\n    exclude:\n    - releases/ancient/*\n  always: true\n```\n\n----------------------------------------\n\nTITLE: Rolling Back Changes With /keepmergehistory in Azure DevOps (Batch)\nDESCRIPTION: This command rolls back the changes made in changeset 314 using the /keepmergehistory option. This prevents the rolled-back changes from being reapplied in future merges between the same branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/rollback-command-team-foundation-version-control.md#2025-04-22_snippet_7\n\nLANGUAGE: batch\nCODE:\n```\nc:\\workspace> tf rollback /changeset:314 /keepmergehistory\n```\n\n----------------------------------------\n\nTITLE: WIQL Query with ORDER BY Clause\nDESCRIPTION: Example showing how to sort query results using the ORDER BY clause with multiple fields in different sort directions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/wiql-syntax.md#2025-04-22_snippet_21\n\nLANGUAGE: WIQL\nCODE:\n```\nSELECT\n    [System.Id],\n    [System.Title],\n    [System.State],\n    [System.IterationPath]\nFROM workitems\nWHERE\n    [System.TeamProject] = @project\n    AND [System.WorkItemType] <> ''\n    AND [System.State] =  'Active'\n    AND [System.AssignedTo] = 'Jamal Hartnett <fabrikamfiber4@hotmail.com>'\nORDER BY [Microsoft.VSTS.Common.Priority],\n    [System.CreatedDate] DESC\n```\n\n----------------------------------------\n\nTITLE: OData Query for Iteration-Based Bug Trend\nDESCRIPTION: OData query that retrieves bug trend data filtered by iteration name and dates. Shows how to query trends within specific sprint boundaries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/querying-for-trend-data.md#2025-04-22_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/{ProjectName}/_odata/{version}//WorkItemSnapshot?\n  $apply=\n    filter(WorkItemType eq 'Bug')/\n    filter(Iteration/IterationName eq 'Sprint 99')/\n    filter(DateValue ge Iteration/StartDate and (Iteration/EndDate eq null or DateValue le Iteration/EndDate))/\n    groupby((DateValue, State), aggregate($count as Count))\n  &$orderby=DateValue\n```\n\n----------------------------------------\n\nTITLE: Illustrating the Azure DevOps Pipeline Work Directory Structure\nDESCRIPTION: A plaintext representation of the standard work directory structure used by Azure DevOps pipeline agents. It shows the hierarchy of directories including build directory/pipeline workspace, source directory, binaries directory, artifacts staging directory, and TestResults directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/agent-directory-structure.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n    - /work directory\n        - /1 build directory/pipeline workspace\n            - /s source/working directory\n            - /b binaries directory\n            - /a artifacts staging directory\n            - /TestResults Test results directory\n```\n\n----------------------------------------\n\nTITLE: Checking Windows Registry Path for Azure DevOps Agent AutoLogon\nDESCRIPTION: This registry path is where the VSTSAgent key should be located for the runAsAutoLogon feature to work. The <sid> should be replaced with the user's Security Identifier obtained from the 'whoami /user' command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/troubleshooting-autologon.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nComputer\\HKEY_USERS\\<sid>\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\n```\n\n----------------------------------------\n\nTITLE: Configuring Files Property in Extension Manifest\nDESCRIPTION: JSON configuration for specifying which files should be included and made addressable in the extension package. Demonstrates how to include both folders and individual files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/static-content.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"files\": [\n    {\n        \"path\": \"scripts\", \"addressable\": true\n    },\n    {\n        \"path\": \"images/extra/icon1.png\", \"addressable\": true\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Conditional Job Execution Based on Previous Job Status\nDESCRIPTION: Example showing how to run jobs conditionally based on the status of previous jobs. Job B runs only when Job A fails, and Job C runs only when Job B succeeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/phases.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: A\n  steps:\n  - script: exit 1\n\n- job: B\n  dependsOn: A\n  condition: failed()\n  steps:\n  - script: echo this will run when A fails\n\n- job: C\n  dependsOn:\n  - A\n  - B\n  condition: succeeded('B')\n  steps:\n  - script: echo this will run when B runs and succeeds\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Permission Management\nDESCRIPTION: Namespace identifier for managing permissions in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_38\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, AdminProjectRights\n```\n\n----------------------------------------\n\nTITLE: Providing Related Azure Monitor Documentation Links in Markdown\nDESCRIPTION: This code snippet presents a markdown list of related Azure Monitor documentation links for further reference. It includes links to the Azure Monitor documentation, overview, and best practices for analyzing and visualizing monitoring data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/monitor-pool.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- [Azure Monitor documentation](/azure/azure-monitor/)\n- [Azure Monitor overview](/azure/azure-monitor/overview)\n- [Analyze and visualize monitoring data](/azure/azure-monitor/best-practices-analysis)\n```\n\n----------------------------------------\n\nTITLE: Referencing WorkItemTrackingProvision Namespace Permissions and Token Formats in Azure DevOps Markdown\nDESCRIPTION: These code snippets represent tokens for permissions (`Administer`, `ManageLinkTypes`) and illustrate root and project token formats (`/$`, `$/PROJECT_ID`) used for older on-premises Azure DevOps installations. Inclusion of the namespace ID ensures compatibility when working with APIs or legacy scripts. The tokens are designed for documentation and backward compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n`Administer`\n`ManageLinkTypes`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`/$`\n`$/PROJECT_ID`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`5a6cd233-6615-414d-9393-48dbb252bd23`\n```\n\n----------------------------------------\n\nTITLE: Installing and Using Multiple Node.js Versions in YAML Pipeline\nDESCRIPTION: Configures a pipeline to install a specific version of Node.js using the UseNode task and verifies the installation. This example shows how to control tool dependencies in a CI build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n# Node install\n- task: UseNode@1\n  displayName: Node install\n  inputs:\n    version: '16.x' # The version we're installing\n# Write the installed version to the command line\n- script: which node\n```\n\n----------------------------------------\n\nTITLE: Language Version Matrix in Travis CI\nDESCRIPTION: This Travis CI configuration creates a matrix for testing against multiple Ruby versions. It leverages Travis CI's built-in language support to run the same script on different Ruby environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nos: linux\nmatrix:\n  include:\n  - rvm: 2.3.7\n  - rvm: 2.4.4\n  - rvm: 2.5.1\nscript: ruby --version\n```\n\n----------------------------------------\n\nTITLE: Defining BoardColumnSplit Enumerated Members in Markdown\nDESCRIPTION: This snippet defines the member names, values, and display names for the BoardColumnSplit enumerated type used to filter work items in board columns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/analytics/entity-reference-boards.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Member name           | Value        | Display name          |  \n|-----------------------|--------------|-----------------------|  \n|`Doing`                | 0            | Doing                 |        \n|`Done`                 | 1            | Done                  |       \n|`Unknown`              | 2            | Unknown (not split)   |   \n```\n\n----------------------------------------\n\nTITLE: Branching a File from a Specific Date\nDESCRIPTION: Creates a new branch of 314.cs as it was on December 12, 2003, naming it 314_branch and saving it to both the current directory and the Azure DevOps Server folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/branch-command.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf branch 314.cs;D12/12/03 314_branch\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Field Value Documentation\nDESCRIPTION: A markdown table structure defining various fields and their usage in Azure Boards features and epics, including Value Area, Effort, Business Value, Time Criticality, and Target Date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/define-features-epics.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   **Field**\n   :::column-end:::\n   :::column span=\"3\":::\n   **Usage**\n   :::column-end:::\n:::row-end:::\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring CI Trigger for Main Branch in Azure Pipelines\nDESCRIPTION: YAML configuration to trigger continuous integration builds only for the main branch, avoiding duplicate builds for pull requests. This prevents multiple builds from being triggered when pull requests are created.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-146-update.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n```\n\n----------------------------------------\n\nTITLE: Filtering Work Items by Date Surrogate Key in OData\nDESCRIPTION: Query that filters work items created since the beginning of 2020 using the CreatedDateSK surrogate key property. Using date surrogate keys provides better performance than filtering on date properties or navigation counterparts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_29\n\nLANGUAGE: OData\nCODE:\n```\nhttps://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems?\n  $filter=CreatedDateSK ge 20200101\n```\n\n----------------------------------------\n\nTITLE: HTML Field Type Operators in Azure DevOps Queries\nDESCRIPTION: Operators supported for HTML fields in Azure DevOps queries. HTML fields support formatted text like Description or Repro Steps and are indexed for full-text search.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/query-index-quick-ref.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n`Contains Words`, `Does Not Contain Words`, `Is Empty`<sup>2</sup>, `Is Not Empty`<sup>2</sup>\n```\n\n----------------------------------------\n\nTITLE: Publishing NuGet Package to Different Organization\nDESCRIPTION: CLI command to publish a NuGet package to a feed in a different Azure DevOps organization. It uses the NuGet push command with the package path, source name, and an API key.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/publish.md#2025-04-22_snippet_4\n\nLANGUAGE: CLI\nCODE:\n```\nnuget push <PACKAGE_PATH> -src <SOURCE_NAME> -ApiKey <ANY_STRING>\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Cloud Access Requirements Table\nDESCRIPTION: Markdown table defining access levels and permissions required for query operations in Azure DevOps cloud version. Includes specifications for project members and Basic access users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/prerequisites-queries.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Access levels** | - To view and run shared queries: [Project member](../../organizations/security/add-users-team-project.md). <br> - To add and save a shared query: At least **Basic** access. |\n| **Permissions** | **Contribute** permission set to **Allow** for the folder that you want to add a query to. By default, the **Contributors** group doesn't have this permission. |\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Links for Azure DevOps Analytics\nDESCRIPTION: A structured list of markdown links to various Azure DevOps Analytics documentation pages covering test plans, requirements tracking, and test execution reports.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/includes/sample-full-list-test-plans.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Progress status](../sample-test-plans-progress-status.md)  \n- [Requirements tracking](../sample-stories-overview.md)  \n- [Requirements tracking - Rollup](../sample-stories-overview-rollup.md)  \n- [Execution Trend](../sample-test-plans-execution-trend.md)  \n- [Test suites aggregated view](../sample-test-plans-aggregate-data-level.md)   \n- [Tester by outcome matrix](../sample-test-plans-tester-by-outcome.md)  \n- [Configuration by outcome matrix](../sample-test-plans-configuration-by-outcome.md)\n```\n\n----------------------------------------\n\nTITLE: Western US 2 Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps Team Foundation Server (tfsprod) services in the Western US 2 region. Contains multiple instances for this geographical location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\ntfsprodwus22ip1    40.91.93.92\t\t\n\t\t\ntfsprodwus23ip1    40.91.93.56\t\t\n\t\t\ntfsprodwus24ip1    40.91.88.106\t\t\n\t\t\ntfsprodwus25ip1    51.143.58.182\t\t\n\t\t\ntfsprodwus2su6ip1  40.91.75.130\n```\n\n----------------------------------------\n\nTITLE: Deleting Documents with Azure DevOps SDK\nDESCRIPTION: Demonstrates how to delete a document from a specified collection using the Azure DevOps SDK's data service. Returns a 404 if the collection or document doesn't exist.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/data-storage.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n    // Get data service\n    SDK.getService(SDK.getContributionId()).then(function(dataService) {\n        var docId = \"1234-4567-8910\";\n        // Delete document\n        dataService.deleteDocument(\"MyCollection\", docId).then(function() {\n            console.log(\"Doc deleted\");\n        });\n    });\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Exclude Pattern Matching in File Selection\nDESCRIPTION: Examples showing how to use exclude patterns (!) to filter out specific files from a broader selection, including excluding XML files and then re-including specific XML files with double exclamation marks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/tasks/file-matching-patterns.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n*\n!*.xml\n```\n\nLANGUAGE: text\nCODE:\n```\nConsoleHost.exe\nConsoleHost.pdb\nConsoleHost.xml\nFabrikam.dll\nFabrikam.pdb\nFabrikam.xml\n```\n\nLANGUAGE: text\nCODE:\n```\n*\n!*.xml\n!!Fabrikam.xml\n```\n\nLANGUAGE: text\nCODE:\n```\n**\n!sample/**\n```\n\n----------------------------------------\n\nTITLE: Listing Test Suites with TCM CLI\nDESCRIPTION: Command-line syntax for listing test suites in a project using the TCM command-line tool. This command displays suite IDs and hierarchical names for all test suites in the specified project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/copy-clone-test-items.md#2025-04-22_snippet_2\n\nLANGUAGE: tcm\nCODE:\n```\ntcm suites /list [/planid:id  |  /querytext:query] /collection:teamprojectcollectionurl\n           /teamproject:project [/login:username,[password]]\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet for Organization-scoped Feed in Azure DevOps\nDESCRIPTION: XML configuration for nuget.config file to connect to an organization-scoped feed in Azure DevOps. This snippet specifies the package source URL for the feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/nuget/publish.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"<SOURCE_NAME>\" value=\"https://pkgs.dev.azure.com/<ORGANIZATION_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Installing npm Packages with Force Flag\nDESCRIPTION: npm command to force the installation of packages from remote sources, ignoring any local copies that may exist in the cache.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_4\n\nLANGUAGE: command\nCODE:\n```\nnpm install --force\n```\n\n----------------------------------------\n\nTITLE: Using Template Expressions in Repository Resource Definition with Build.SourceBranch\nDESCRIPTION: YAML configuration that demonstrates using template expressions to dynamically select the branch of a repository resource based on the current build's source branch. This allows the pipeline to check out the same branch from the library repository as the branch it's running on.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/includes/pipelines/sprint-212-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n    - repository: library\n      type: git\n      name: FabrikamLibrary\n      ref: ${{ variables['Build.SourceBranch'] }}\n\nsteps:\n- checkout: library\n- script: echo ./build.sh\n- script: echo ./test.sh\n```\n\n----------------------------------------\n\nTITLE: Defining GitHub Package Resource in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to define a GitHub package (specifically an npm package in this example) as a resource within an Azure Pipelines YAML file. It specifies an alias (`myPackageAlias`), the package type (`Npm`), the GitHub service connection (`GitHubConn` using PAT), the package repository and name (`nugetTest/nodeapp`), an optional version (`1.0.9`), and enables automated triggers (`trigger: true`). Currently, only PAT authentication is supported for the GitHub connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-170-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nresources:\n  packages:\n    - package: myPackageAlias # alias for the package resource\n      type: Npm # type of the package NuGet/npm\n      connection: GitHubConn # GitHub service connection of type PAT\n      name: nugetTest/nodeapp # <Repository>/<Name of the package>\n      version: 1.0.9 # Version of the package to consume; Optional; Defaults to latest\n      trigger: true # To enable automated triggers (true/false); Optional; Defaults to no triggers\n```\n\n----------------------------------------\n\nTITLE: OData Server URL Structure for On-premises Version\nDESCRIPTION: The URL structure to use for accessing OData in on-premises versions of Azure DevOps, showing the server, port, organization, and project parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\nhttps://{servername}:{port}/tfs/{OrganizationName}/{ProjectName}/_odata/{version}/\n```\n\n----------------------------------------\n\nTITLE: Defining Requirements Table for Azure DevOps in Markdown\nDESCRIPTION: This snippet creates a markdown table specifying the access levels and permissions required for project members to work with dashboards in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/dashboard-prerequisites.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Category  | Requirements |\n|-------------|-------------|\n| **Access levels** | - [Project member](../../organizations/security/add-users-team-project.md).<br>- At least **Basic** access or specific [dashboard permissions](../dashboards/dashboard-permissions.md). |\n| **Permissions** | To add, edit, or manage a team dashboard: Member of the team and member of the **Project Administrators** group. |\n```\n\n----------------------------------------\n\nTITLE: Sorting Columns in Power BI for Cumulative Flow Diagram\nDESCRIPTION: This snippet demonstrates how to sort columns in a Power BI report for a Cumulative Flow Diagram. It involves expanding the ColumnOrder query, selecting the ColumnName field, and setting the sort order based on the ColumnOrder field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/sample-boards-cfd.md#2025-04-22_snippet_4\n\nLANGUAGE: powerbi\nCODE:\n```\n1. Expand the ColumnOrder query and select ColumnName\n2. Select Column Tools > Sort by Column > Choose ColumnOrder\n```\n\n----------------------------------------\n\nTITLE: Downloading Pipeline Artifact with Patterns using YAML in Azure DevOps\nDESCRIPTION: This YAML snippet demonstrates how to download specific files from a pipeline artifact using file matching patterns. It downloads all .js and .zip files from the 'WebApp' artifact.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- download: current\n  artifact: WebApp\n  patterns: |\n    **/*.js\n    **/*.zip\n```\n\n----------------------------------------\n\nTITLE: Source Traceability Implementation Steps\nDESCRIPTION: Markdown code showing how to implement source code traceability for test failures, including steps to trace back to initial changes and analyze code commits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/test/requirements-traceability.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the **Tests** tab, select a test failure to be analyzed.\n   Based on whether it's a build or release, choose the **Failing build** or **Failing release** column for the test.\n\n2. Based on the build or release pipeline, you can choose the timeline or pipeline view to see what code changes were committed.\n   You can analyze the code changes to identify the potential root cause of the test failure.\n```\n\n----------------------------------------\n\nTITLE: Setting TFSPROXY Environment Variable in Windows\nDESCRIPTION: Commands to set the TFSPROXY environment variable on Windows systems to configure an agent to get sources through a Team Foundation Proxy. Includes options for both temporary and permanent variable settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/troubleshooting.md#2025-04-22_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\nset TFSPROXY=http://tfvcproxy:8081\nsetx TFSPROXY=http://tfvcproxy:8081\n```\n\n----------------------------------------\n\nTITLE: HTTP Request with VSTS.Analytics.MaxSize Header\nDESCRIPTION: Example of setting a maximum result size limit of 1000 records using the VSTS.Analytics.MaxSize preference header in an HTTP request to the Analytics API.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-query-guidelines.md#2025-04-22_snippet_31\n\nLANGUAGE: http\nCODE:\n```\nGET https://analytics.dev.azure.com/{OrganizationName}/_odata/{version}/WorkItems HTTP/1.1\nUser-Agent: {application}\nPrefer: VSTS.Analytics.MaxSize=1000\nOData-MaxVersion: 4.0\nAccept: application/json;odata.metadata=minimal\nHost: analytics.dev.azure.com/{OrganizationName}\n```\n\n----------------------------------------\n\nTITLE: Deleting Individual Team Dashboard Permission Identifier (Plaintext)\nDESCRIPTION: The identifier (`DashboardsPrivileges, Delete`) represents the specific permission required to delete an *individual* team dashboard in Azure DevOps. Team administrators can manage this permission for specific dashboards belonging to their team.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_29\n\nLANGUAGE: plaintext\nCODE:\n```\nDashboardsPrivileges, Delete\n```\n\n----------------------------------------\n\nTITLE: Writing Service Hooks Scope (`vso.hooks_write`)\nDESCRIPTION: Grants the ability to create and update service hook subscriptions and read metadata, including supported events, consumers, and actions. (No longer public.) Depends on `vso.hooks`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n`vso.hooks_write`\n```\n\n----------------------------------------\n\nTITLE: Setting Task Board Work Item Limit in TaskBacklog Element\nDESCRIPTION: XML configuration to set a custom work item count limit for the task board. This example reduces the default limit of 1000 to 800 items for performance optimization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/xml/process-configuration-xml-element.md#2025-04-22_snippet_8\n\nLANGUAGE: XML\nCODE:\n```\n<TaskBacklog category=\"Microsoft.TaskCategory\" pluralName=\"Tasks\" singularName=\"Task\" workItemCountLimit=\"800\" >\n. . .\n</TaskBacklog>\n```\n\n----------------------------------------\n\nTITLE: Configuring Hosted Agent Selection in Azure Pipelines\nDESCRIPTION: Demonstrates how to select a cloud-hosted build agent in Azure Pipelines using the vmimage keyword to specify the build environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-jenkins.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmimage: macOS-latest\n```\n\n----------------------------------------\n\nTITLE: Referencing Release Management Permissions in Azure DevOps Markdown\nDESCRIPTION: These code snippets represent permission tokens (e.g., `ViewCDWorkflowEditor`, `ExportReleaseDefinition`) for managing access to Release Management user interface elements in Azure DevOps. Each token is intended to be used in documentation or configuration to specify granular access controls. They do not require dependencies and are used as literal values in YAML, REST API calls, or documentation contexts. These permission IDs or names are expected as part of broader access management implementations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/namespace-reference.md#2025-04-22_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n`ViewCDWorkflowEditor`\n`ExportReleaseDefinition`\n`ViewLegacyUI`\n`DeploymentSummaryAcrossProjects`\n`ViewExternalArtifactCommitsAndWorkItems`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`7c7d32f7-0e86-4cd6-892e-b35dbba870bd`\n```\n\n----------------------------------------\n\nTITLE: Defining Base URI for Azure DevOps Extension in Markdown\nDESCRIPTION: Demonstrates how to specify a base URL for relative URLs in an Azure DevOps extension manifest. This is optional and should be left empty if the extension's contents are packaged with it.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/includes/manifest-extension-runtime.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```https://myapp.com/{{account.name}}/```\n```\n\n----------------------------------------\n\nTITLE: Adding a Site-specific Proxy Record for TFVC\nDESCRIPTION: Example command that adds a site-specific proxy record for developers in a specific Active Directory domain, redirecting their requests to the specified proxy server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/proxy-command.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nc:\\projects>tf proxy /add http://server:8081 /default:site /site:corp /collection:http://tfsserver:8080/\n```\n\n----------------------------------------\n\nTITLE: Setting YAML Front Matter for Azure DevOps Documentation\nDESCRIPTION: This YAML snippet sets the ms.topic metadata for an Azure DevOps documentation file. It specifies that this file is an include file, which is likely used to insert common content across multiple documentation pages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/signer/sprint-160.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Allowing Contributors to Create Branches in Feature Folder\nDESCRIPTION: TF Git command to allow Contributors to create branches within the 'feature' folder, providing a designated location for feature development branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/require-branch-folders.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntf git permission /allow:CreateBranch /group:[FabrikamProject]\\Contributors /collection:https://dev.azure.com/fabrikam-fiber/ /teamproject:FabrikamProject /repository:FabrikamRepo /branch:feature\n```\n\n----------------------------------------\n\nTITLE: Adding Build Task Contribution in Extension Manifest\nDESCRIPTION: This JSON snippet adds a build task contribution to the vss-extension.json file, linking it to the task definition in the BuildTaskFolder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/service-endpoints.md#2025-04-22_snippet_2\n\nLANGUAGE: JSON\nCODE:\n```\n{\n      \"id\": \"build-task\",\n      \"description\": \"Task with a dynamic property getting data from an endpoint REST data source\",\n      \"type\": \"ms.vss-distributed-task.task\",\n      \"targets\": [ \"ms.vss-distributed-task.tasks\" ],\n      \"properties\": {\n        \"name\": \"BuildTaskFolder\"\n      }\n    }\n```\n\n----------------------------------------\n\nTITLE: Creating Percentage Complete Custom Column in Power BI\nDESCRIPTION: This Power BI formula creates a custom column to calculate the percentage of completed work items. It divides the number of completed items by the total number of items across all workflow states.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/transform-analytics-data-report-generation.md#2025-04-22_snippet_0\n\nLANGUAGE: Power BI\nCODE:\n```\n= [Completed]/([Proposed]+[InProgress]+[Resolved]+[Completed])\n```\n\n----------------------------------------\n\nTITLE: East US Azure DevOps IP Addresses\nDESCRIPTION: Lists the server names and IP addresses for Azure DevOps services in the East US region. Includes multiple SharePoint (shprod) and Team Foundation Server (tfsprod) instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/includes/ip-addresses.md#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\ntfsprodeus2su5ip1\t20.41.47.137\n\t\t\ntfsprodeus2su3ip1\t20.44.80.98\n\t\t\nshprodeus2su1ip1\t20.36.242.132\n\t\t\ntfsprodeus2su1ip1\t20.44.80.197\n```\n\n----------------------------------------\n\nTITLE: Markdown Moniker Range Directive for Azure DevOps\nDESCRIPTION: A conditional content block that only displays the tenant definition for Azure DevOps cloud service version using moniker range directive.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/navigation/glossary.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"azure-devops\"\n\n## Tenant\n\nA Microsoft Entra ID used to manage access or billing. For more information, see [Change Microsoft Entra tenant.](../../organizations/accounts/change-organization-location.md)\n\n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Defining Stack Rank Field for Agile/CMMI\nDESCRIPTION: XML configuration for the Stack Rank field used in Agile and CMMI process templates to prioritize work items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_11\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Stack Rank\" refname=\"Microsoft.VSTS.Common.StackRank\" type=\"Double\" reportable=\"dimension\">  \n<HELPTEXT>Work first on items with lower-valued stack rank. Set in triage.  \n</HELPTEXT>   \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Creating Collapsible Sections with HTML in Azure DevOps Wiki\nDESCRIPTION: Demonstrates how to use the 'details' and 'summary' HTML tags to create collapsible sections in wiki pages. The 'open' attribute can be used to keep the section expanded by default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-152-update.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<details open>\n  <summary>Collapsible Section</summary>\n  This is the content of the collapsible section.\n</details>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 192 Update Content in Markdown Document\nDESCRIPTION: Markdown include directive that pulls in the main Sprint 192 update content from an external file located in the includes/repos directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/repos/sprint-192-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-192-update](../includes/repos/sprint-192-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Git Protocols FAQ in Azure DevOps Docs\nDESCRIPTION: Demonstrates how to include a FAQ section about Git protocols in Azure DevOps documentation using the INCLUDE directive within a HTML comment block.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- BEGINSECTION class=\"md-qanda\" -->\n\n[!INCLUDE [temp](includes/git-protocols.md)]\n\n::: moniker range=\"< azure-devops\"\n[!INCLUDE [temp](../includes/qa-versions.md)]\n::: moniker-end\n\n<!-- ENDSECTION -->\n```\n\n----------------------------------------\n\nTITLE: HTML Anchor Tag with Name Attribute for Azure AD\nDESCRIPTION: This HTML anchor tag, using the 'name' attribute (though 'id' is preferred in modern HTML), creates an internal link target for the section discussing Microsoft Entra ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/organization-management.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a name='azure-ad'></a>\n```\n\n----------------------------------------\n\nTITLE: Analytics $batch Endpoint URL for Azure DevOps Server\nDESCRIPTION: The URL structure for accessing the $batch endpoint in on-premises Azure DevOps Server. You need to substitute your server information, and note that while $batch endpoint doesn't support project scoping, queries within a batch can contain project scoping.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/odata-batch.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://{servername}:{port}/tfs/{OrganizationName}/_odata/{version}/$batch\n```\n\n----------------------------------------\n\nTITLE: Including Note About Deleting Area Paths in Markdown\nDESCRIPTION: This snippet demonstrates how to include a note about deleting area paths using Azure DevOps-specific Markdown syntax. It references an external file containing the note content.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/configure-burndown-burnup-widgets.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [note-delete-area-paths](../../boards/includes/note-delete-area-paths.md)]\n```\n\n----------------------------------------\n\nTITLE: Example: Listing Security Group Members\nDESCRIPTION: Examples showing how to list members of a security group with table output format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group membership list --id vssgp.Uy0xLTktMTU1MTM3NDI0NS0yMjc3MTY5NTAtOTkzNjA1MTg2LTI1ODQxNTkyOTktMjYzMDUyNzA2OC0xLTQxNDY0Mzc4MzktMzgxMDM2MDM5MS0yNjE0MjU5MzI3LTI5MjI2MTc3OTA --output table\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Table in Markdown\nDESCRIPTION: Markdown table defining the permissions required for cleaning up files when users leave, specifically requiring membership in Azure DevOps Administrators or Team Foundation Administrators security groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/clean-up-files-when-users-leave.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n|**Permissions**|Member of the **Azure DevOps Administrators** or **Team Foundation Administrators** security group. |\n```\n\n----------------------------------------\n\nTITLE: Using Default Variables in PowerShell Scripts\nDESCRIPTION: Example showing how to access default release variables in a PowerShell script by replacing dots with underscores in the variable name. This demonstrates printing the definition name of an artifact with alias 'ASPNET4.CI'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/variables.md#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n$env:RELEASE_ARTIFACTS_ASPNET4_CI_DEFINITIONNAME\n```\n\n----------------------------------------\n\nTITLE: Linking to a Wiki Page in Markdown Widget\nDESCRIPTION: Demonstrates the syntax for creating a link to a wiki page within the Markdown widget. This format is specific to Azure DevOps and allows direct navigation to wiki content from the dashboard.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/add-markdown-to-dashboard.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n/ProjectName/_wiki/wikis/WikiRepositoryName?pagePath=/FileName\n```\n\n----------------------------------------\n\nTITLE: Adding Backlog Priority Field for Scrum Work Item Type in Azure DevOps\nDESCRIPTION: XML definition for the Backlog Priority field used in the Scrum process template. This field helps prioritize items in the product backlog.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Backlog Priority\" refname=\"Microsoft.VSTS.Common.BacklogPriority\" type=\"Double\" reportable=\"detail\" />\n```\n\n----------------------------------------\n\nTITLE: Rendering Development Status Alert Banner in HTML\nDESCRIPTION: HTML markup for displaying a red alert banner with development status message and a clickable team contact link. Uses Bootstrap alert styling classes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/_data/draft.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"alert alert-danger\">\n   This page is under development. Have feedback or questions? Contact the <a href=\"https://go.microsoft.com/fwlink/?LinkId=615292\" data-raw-source=\"[team](https://go.microsoft.com/fwlink/?LinkId=615292)\">team</a>.\n</div>\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Table in Markdown\nDESCRIPTION: Markdown table defining the basic requirements for accessing test features, including project access and access levels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/manual-test-permissions.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirement |\n|--------------|-------------|\n| **Project access** | [Project member](../organizations/security/add-users-team-project.md). |\n| **Access levels** |- To access the Test Plans web portal: At least **Basic** access.<br>- To define and manage test plans, test suites, and test cases: **Basic + Test Plans** access.|\n```\n\n----------------------------------------\n\nTITLE: Getting Latest Version in Git (Pull)\nDESCRIPTION: This command fetches the latest changes from the remote repository and merges them into your current branch. It's equivalent to 'Get Latest Version' in TFVC.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/mapping-my-tfvc-actions-to-git.md#2025-04-22_snippet_8\n\nLANGUAGE: console\nCODE:\n```\ngit pull\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 224 Update Links for Azure Pipelines\nDESCRIPTION: This directive includes content from a shared file containing links related to the Sprint 224 updates specifically for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-224-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-224-update-links](includes/pipelines/sprint-224-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure Web App Deployment with Startup Command\nDESCRIPTION: Extends the AzureWebApp deployment task with a custom startup command specified in a startup.txt file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/python-webapp.md#2025-04-22_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\n      - task: AzureWebApp@1\n         displayName: 'Deploy Azure Web App : $(webAppName)'\n         inputs:\n           azureSubscription: $(azureServiceConnectionId)\n           appName: $(webAppName)\n           package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip\n           startUpCommand: 'startup.txt'\n```\n\n----------------------------------------\n\nTITLE: Defining an Implicit Stage in Azure Pipelines YAML\nDESCRIPTION: A simple pipeline example with one implicit stage and one implicit job. This configuration uses a Ubuntu-latest pool and runs a basic Bash command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/stages.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# this has one implicit stage and one implicit job\npool:\n  vmImage: 'ubuntu-latest'\nsteps:\n- bash: echo \"Hello world\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure DevOps Server About Page URL\nDESCRIPTION: URL format to access the About page for Azure DevOps Server (on-premises), which displays the version information. Replace 'ServerName' and 'CollectionName' with the actual server and collection names.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/lookup-platform-version.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://ServerName/CollectionName/_home/About\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Artifact using YAML Task in Azure DevOps\nDESCRIPTION: This YAML snippet shows how to use the PublishPipelineArtifact@1 task to publish a pipeline artifact. It specifies the target path and artifact name as inputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pipeline-artifacts.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: PublishPipelineArtifact@1\n  inputs:\n    targetPath: $(System.DefaultWorkingDirectory)/bin/WebApp\n    artifactName: WebApp\n```\n\n----------------------------------------\n\nTITLE: Installing Timetracker Extension Example\nDESCRIPTION: This example demonstrates how to install the 'Timetracker' extension using the Azure DevOps CLI. It specifies the extension ID, publisher ID, and outputs the result in YAML format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/marketplace/install-extension.md#2025-04-22_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops extension install --extension-id Timetracker --publisher-id 7pace --output yaml\n```\n\n----------------------------------------\n\nTITLE: Basic Success and Failure Handling in Travis CI\nDESCRIPTION: Travis CI configuration showing how to execute different scripts based on the success or failure of the build. This uses Travis CI's after_success and after_failure phases.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nbuild: ./build.sh\nafter_success: echo Success \nafter_failure: echo Failed \n```\n\n----------------------------------------\n\nTITLE: Example of Deleting a Specific Git Repository with Azure DevOps CLI\nDESCRIPTION: Practical example of using the Azure DevOps CLI to delete a repository named Fabrikam with a specific ID. The command includes a confirmation prompt before deletion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/delete-existing-repo.md#2025-04-22_snippet_1\n\nLANGUAGE: CLI\nCODE:\n```\naz repos delete --id  0d58f562-4a10-495d-94d7-7ac61a22d7cc\nAre you sure you want to delete this repository? (y/n): y\n```\n\n----------------------------------------\n\nTITLE: Adding Table of Contents in Wiki Using Markdown\nDESCRIPTION: Shows how to add a table of contents to a wiki page that has at least one heading using the special syntax [[_TOC_]].\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/aug-21-vsts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[[_TOC_]]\n```\n\n----------------------------------------\n\nTITLE: Adding Image Captions with HTML in Azure DevOps Wiki\nDESCRIPTION: Shows how to use the 'figure' and 'figcaption' HTML tags to add captions to images in wiki pages. The 'figcaption' can be placed above or below the image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-152-update.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<figure>\n  <img src=\"image.jpg\" alt=\"Description of image\">\n  <figcaption>This is the image caption</figcaption>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Configuring Pool for Azure Pipeline YAML\nDESCRIPTION: This YAML snippet shows how to specify a Managed DevOps Pool in an Azure Pipeline configuration. It demonstrates replacing the default Microsoft-hosted Linux agent with a custom Managed DevOps Pool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/quickstart-arm-template.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  name: fabrikam-managed-pool\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directives for Sprint 214 Documentation\nDESCRIPTION: A set of markdown include directives that combine multiple content files to create the complete Sprint 214 release notes document for Azure Boards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-214-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-214-update-links](../includes/boards/sprint-214-update-links.md)]\n\n[!INCLUDE [sprint-214-update](../includes/boards/sprint-214-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Personal Access Token Authentication for Azure DevOps REST Services\nDESCRIPTION: Shows how to authenticate with Azure DevOps using a Personal Access Token (PAT) through the VssConnection class.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/get-started/client-libraries/samples.md#2025-04-22_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\npublic static void PersonalAccessTokenRestSample()\n{\n    VssConnection connection = new VssConnection(orgUrl, new VssBasicCredential(string.Empty, personalAccessToken));\n}\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps in Azure Pipelines Documentation\nDESCRIPTION: Markdown include directive to insert the next steps section from an external file. This provides guidance on what users should do after reviewing the Sprint 246 update information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-246-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including External Markdown Content in Azure DevOps Docs\nDESCRIPTION: Shows how to include external markdown content in Azure DevOps documentation using the INCLUDE directive. This snippet includes content about preferring Git from the system path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [include](../agents/includes/system-prefer-git-from-path.md)]\n```\n\n----------------------------------------\n\nTITLE: Installing Build and Twine in Classic Pipeline\nDESCRIPTION: This command line script installs the 'build' and 'twine' Python packages, which are necessary for building and publishing Python packages in a Classic pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/artifacts/pypi.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npip install build\npip install twine\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Library Roles Matrix in Markdown\nDESCRIPTION: Markdown table defining the four main library access roles (Administrator, Creator, Reader, User) and their associated permissions for managing and consuming library assets in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/library-roles.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Role | Description |  \n|------------|-------------| \n| **Administrator** | Edit, delete, and manage security for library assets. The creator of an asset is automatically assigned this role for the asset. |\n| **Creator** | Create library assets. |\n| **Reader** | Read library assets. |  \n| **User** | Consume library assets in pipelines. |\n```\n\n----------------------------------------\n\nTITLE: Task Resolution to GUIDs in YAML\nDESCRIPTION: Illustrates how task names and keywords in YAML are resolved to task GUIDs before decorators run, showing the transformation of a YAML pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/pipeline-decorator-context.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self\n- bash: echo This is the Bash task\n- task: PowerShell@2\n  inputs:\n    targetType: inline\n    script: Write-Host This is the PowerShell task\n```\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: 6D15AF64-176C-496D-B583-FD2AE21D4DF4@1\n  inputs:\n    repository: self\n- task: 6C731C3C-3C68-459A-A5C9-BDE6E6595B5B@3\n  inputs:\n    targetType: inline\n    script: echo This is the Bash task\n- task: E213FF0F-5D5C-4791-802D-52EA3E7BE1F1@2\n  inputs:\n    targetType: inline\n    script: Write-Host This is the PowerShell task\n```\n\n----------------------------------------\n\nTITLE: Agent Lost Communication Error Message\nDESCRIPTION: The error message that appears when a build agent loses communication with the Azure DevOps service for several minutes. This can be caused by automatic updates, sleep settings, VM migrations, or resource constraints.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/troubleshoot-start.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nThe job has been abandoned because agent did not renew the lock. Ensure agent is running, not sleeping, and has not lost communication with the service.\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 194 Update Content in Markdown\nDESCRIPTION: Markdown include directive that imports the main content of the Sprint 194 update for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-194-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-194-update](../includes/pipelines/sprint-194-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Pipeline Resource Predefined Variables in Azure DevOps\nDESCRIPTION: This code snippet lists the predefined variables available for pipeline resources. These variables provide metadata about referenced pipeline resources including project details, pipeline information, run data, source control information, and requester details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-160-update.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nresources.pipeline.<Alias>.projectName \nresources.pipeline.<Alias>.projectID \nresources.pipeline.<Alias>.pipelineName \nresources.pipeline.<Alias>.pipelineID \nresources.pipeline.<Alias>.runName \nresources.pipeline.<Alias>.runID\nresources.pipeline.<Alias>.runURI\nresources.pipeline.<Alias>.sourceBranch \nresources.pipeline.<Alias>.sourceCommit\nresources.pipeline.<Alias>.sourceProvider \nresources.pipeline.<Alias>.requestedFor\nresources.pipeline.<Alias>.requestedForID\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Region\nDESCRIPTION: Azure CLI command to set the default region for resource creation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/azure-key-vault.md#2025-04-22_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz config set defaults.location=<YOUR_REGION>\n```\n\n----------------------------------------\n\nTITLE: Creating Service Principal for Azure Key Vault Access\nDESCRIPTION: Azure CLI command to create a service principal for authentication between Azure Pipelines and Azure Key Vault. This generates the necessary credentials for secure access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/key-vault-in-own-project.md#2025-04-22_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad sp create-for-rbac --name YOUR_SERVICE_PRINCIPAL_NAME\n```\n\n----------------------------------------\n\nTITLE: HTML Warning Notice for Preview API\nDESCRIPTION: HTML comment block containing a warning section that notifies users about the API's preview status and provides a link to additional information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/api/_data/disclaimer.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<!-- BEGINSECTION class=\"alert alert-warning\" id=\"version-statement\" -->\n\nThis API in preview. [Learn more](https://visualstudio.microsoft.com/integrate/support/support-faq-vsi#API_Q1)\n\n<!-- ENDSECTION -->\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 228 Update Details\nDESCRIPTION: This Markdown directive incorporates the main content detailing the features and changes introduced in the Azure Pipelines Sprint 228 update from the specified file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/pipelines/sprint-228-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-228-update](../includes/pipelines/sprint-228-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying Moniker-Specific Content in Markdown\nDESCRIPTION: This snippet demonstrates how to use moniker ranges to display version-specific content in markdown documentation for Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/includes/process-customize-backlogs.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\">= azure-devops-2020\"\n- [Add an inherited work item type](../work/customize-process-backlogs-boards.md#add-oob-to-backlog) \n::: moniker-end\n```\n\n----------------------------------------\n\nTITLE: Cloning Git Repository\nDESCRIPTION: Command to clone a Git repository from Azure DevOps to local machine. Uses HTTPS authentication with a sample Fabrikam project repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/code-with-git.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://FabrikamFiber01@dev.azure.com/FabrikamFiber01/FabrikamFiber01-01/_git/FabrikamFiber01-01\n```\n\n----------------------------------------\n\nTITLE: Running Grunt in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to run Grunt in an Azure Pipelines YAML file. It includes an optional npmAuthenticate task for scenarios requiring authentication with an npm registry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/ecosystems/customize-javascript.md#2025-04-22_snippet_24\n\nLANGUAGE: YAML\nCODE:\n```\n- script: grunt                      # include any additional options that are needed\n```\n\nLANGUAGE: YAML\nCODE:\n```\n- task: npmAuthenticate@0\n  inputs:\n    customEndpoint: <Name of npm service connection>\n\n- script: grunt                      # include any additional options that are needed\n```\n\n----------------------------------------\n\nTITLE: CollectionURL Format for TCM Command-Line Parameters\nDESCRIPTION: Specifies the format for the CollectionURL parameter which is required when using the TCM command-line tool. The format differs between Azure DevOps Services and Azure DevOps Server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/includes/prerequisites-tcm.md#2025-04-22_snippet_1\n\nLANGUAGE: plain text\nCODE:\n```\nhttp://dev.azure.com/OrganizationName\n```\n\nLANGUAGE: plain text\nCODE:\n```\nhttp://ServerName:Port/VirtualDirectoryName/CollectionName\n```\n\nLANGUAGE: plain text\nCODE:\n```\nhttp://ServerName:Port/CollectionName\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 199 Update Links in Azure Pipelines Documentation\nDESCRIPTION: Markdown include directive that incorporates the Sprint 199 update links section from an external file located in the includes/pipelines directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-199-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-199-update-links](../includes/pipelines/sprint-199-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Workspace Cleaning in Deployment Jobs\nDESCRIPTION: Example of using workspace clean options to clean the deployment workspace when using self-hosted agents. The 'clean: all' option ensures a clean workspace before deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/deployment-jobs.md#2025-04-22_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n  jobs:\n  - deployment: MyDeploy\n    pool:\n      vmImage: 'ubuntu-latest'\n    workspace:\n      clean: all\n    environment: staging\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 199 Update Content in Azure Pipelines Documentation\nDESCRIPTION: Markdown include directive that incorporates the main Sprint 199 update content from an external file located in the includes/pipelines directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-199-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-199-update](../includes/pipelines/sprint-199-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Installing body-parser Package for JSON Parsing in Node.js\nDESCRIPTION: Installs the body-parser NPM package which helps parse JSON payloads from service hooks in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/create-pr-status-server.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnpm install body-parser\n```\n\n----------------------------------------\n\nTITLE: Including Azure DevOps Version Range in Markdown\nDESCRIPTION: This snippet demonstrates how to include a version range for Azure DevOps documentation using a predefined include statement in Markdown.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/insights-exploratory-testing.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Metadata Block for Azure DevOps Docs\nDESCRIPTION: YAML frontmatter block defining metadata for the documentation page, including author information, service details, and publication date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/includes/pin-incontext-report.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.subservice: azure-devops-analytics\nms.author: chcomley\nauthor: chcomley\nms.topic: include\nms.date: 07/14/2020\n---\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Section in Markdown\nDESCRIPTION: This snippet includes a markdown file containing next steps for users after reading the Sprint 240 update information using the INCLUDE directive.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-240-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Field with Sync Name Changes in Azure DevOps Work Item Type\nDESCRIPTION: Example of defining a field with the 'syncnamechanges' attribute set to true in an Azure DevOps work item type. This attribute is used for fields that should synchronize name changes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_42\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Assigned To\" refname=\"System.AssignedTo\" type=\"String\" reportable=\"dimension\" syncnamechanges=\"true\" >\n  ...\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 246 Update Content in Azure Pipelines Documentation\nDESCRIPTION: Markdown include directive to insert the main Sprint 246 update content from an external file. This pulls in the detailed update information for the Sprint 246 release.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-246-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-246-update](../includes/pipelines/sprint-246-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Team Explorer Query Results Keyboard Shortcuts\nDESCRIPTION: Defines keyboard shortcuts for navigating and interacting with query results in Team Explorer. Includes shortcuts for scrolling, selection, expanding/collapsing rows, and refreshing results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/queries-te-shortcuts.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|Left arrow|Scroll left|\n|Right arrow|Scroll right|\n|Page up|Scroll up|\n|Page down|Scroll down|\n|Shift+Up arrow |Highlight consecutive rows|\n|Shift+Down arrow|Highlight consecutive rows|\n|Shift+Alt+n|Move focus to next item|\n|Shift+Alt+p|Move focus to previous item|\n|End|Move focus to bottom of list|\n|Enter|Open selected work item |\n|Home|Move focus to top of list|\n|+|Expand current row|\n|-|Collapse current row|\n|Ctrl+s|Save changes (results)|\n|F5 |Refresh |\n```\n\n----------------------------------------\n\nTITLE: Classic Pipeline Work Item Integration\nDESCRIPTION: Shows pipeline settings configuration for enabling automatic work item linking in classic build pipelines. Includes branch filtering and work item relationship tracking options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/integrations/configure-pipelines-work-tracking.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Adding Custom Field to Bug Work Item in XML\nDESCRIPTION: Example of adding a custom field 'Foo' to a Bug work item type definition. The field is defined as a String type and is reportable as a dimension.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/import-process/resolve-errors.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Foo\" refname=\"MyCompany.CustomFields.Foo\" type=\"String\" reportable=\"dimension\" />\n```\n\n----------------------------------------\n\nTITLE: Allowing Administrators to Create Main Branch\nDESCRIPTION: Grants CreateBranch permission to project administrators for the main branch as a recovery mechanism.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/git-permission-command.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ntf git permission /allow:CreateBranch \n                  /group:\"[FabrikamProject]\\Project Administrators\" \n                  /collection:https://dev.azure.com/fabrikam-fiber/ \n                  /teamproject:FabrikamProject \n                  /repository:FabrikamRepo \n                  /branch:main\n```\n\n----------------------------------------\n\nTITLE: Formatting Azure DevOps Documentation Header with YAML\nDESCRIPTION: YAML frontmatter defining metadata for the Azure DevOps documentation page including service, author, and date information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/show-bugs-matrix-options.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nms.service: azure-devops-boards\nms.author: chcomley\nauthor: chcomley\nms.topic: include\nms.date: 04/30/2021\n```\n\n----------------------------------------\n\nTITLE: Using Template Expression Functions in YAML\nDESCRIPTION: This example shows how to use template expression functions like 'format' and 'coalesce' in a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/template-expressions.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: 'restoreProjects'\n  default: ''\n  type: string\n- name: 'buildProjects'\n  default: ''\n  type: string\n\nsteps:\n- script: echo ${{ coalesce(parameters.foo, parameters.bar, 'Nothing to see') }}\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Link for Azure Boards GitHub Integration\nDESCRIPTION: A markdown navigation link that points to a section about Azure Boards integration with GitHub Enterprise Cloud, specifically focusing on data residency features in preview.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/includes/boards/sprint-248-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Azure Boards Integration with GitHub Enterprise Cloud with Data Residency](#azure-boards-integration-with-github-enterprise-cloud-with-data-residency-preview)\n```\n\n----------------------------------------\n\nTITLE: Viewing Standard Git Log\nDESCRIPTION: This snippet shows how to view the standard Git log, which displays the commit hash, author date, and commit message. By default, the log shows only the author date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/git-dates.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit log\n```\n\n----------------------------------------\n\nTITLE: Final Square Root Implementation with Exception Handling in C#\nDESCRIPTION: Complete implementation including input validation and exception handling for negative values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-write-new-code-user-story.md#2025-04-22_snippet_8\n\nLANGUAGE: csharp\nCODE:\n```\npublic double SquareRoot(double x)\n{\n    if (x < 0.0)  // not <=\n    {\n        throw new ArgumentOutOfRangeException();\n    }\n```\n\n----------------------------------------\n\nTITLE: Reverting a Specific Commit\nDESCRIPTION: Command to revert a specific commit that has been pushed to a remote repository. This creates a new commit that undoes the changes from the specified commit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/command-prompt.md#2025-04-22_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\ngit revert commitID\n```\n\n----------------------------------------\n\nTITLE: Adding Check-in Notes to a Changeset in TFVC\nDESCRIPTION: Example showing how to add check-in notes to changeset 8675309. This command associates two notes with the specified values to the changeset.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/changeset-command.md#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nc:\\projects>tf changeset /notes:reviewer=Jo;Security = checked 8675309\n```\n\n----------------------------------------\n\nTITLE: Project-Level OData Query Base URL - On-premises\nDESCRIPTION: Base URL structure for making project-scoped OData queries in Azure DevOps Server on-premises environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/extend-analytics/account-scoped-queries.md#2025-04-22_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\nhttps://{servername}:{port}/tfs/{CollectionName}/{ProjectName}/_odata/{version}/\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 166 Update Links in Markdown\nDESCRIPTION: This snippet includes a Markdown file containing links to Sprint 166 update details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/general/sprint-166-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-166-update-links](../includes/general/sprint-166-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Specifying macOS 10.14 Image Identifier in Azure Pipelines (Deprecated)\nDESCRIPTION: The identifier `macOS-1014` is used to specify the macOS 10.14 Mojave hosted image pool in Azure Pipelines configuration (typically YAML). This image is announced for retirement starting December 10th.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/includes/pipelines/sprint-196-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmacOS-1014\n```\n\n----------------------------------------\n\nTITLE: Configuring PyPIRC for Azure Artifacts\nDESCRIPTION: Configuration template for .pypirc file to connect to Azure Artifacts feed\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/quickstarts/python-packages.md#2025-04-22_snippet_2\n\nLANGUAGE: ini\nCODE:\n```\n[distutils]\nIndex-servers =\n    FEED_NAME\n\n[FEED_NAME]\nRepository = https://pkgs.dev.azure.com/ORGANIZATION_NAME/PROJECT_NAME/_packaging/FEED_NAME/pypi/upload/\n```\n\n----------------------------------------\n\nTITLE: Validating Collection for Azure DevOps Migration\nDESCRIPTION: This command validates a collection for migration to Azure DevOps Services. It requires specifying the collection URL, tenant domain name, and region.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/migrate/migration-prerequisites.md#2025-04-22_snippet_1\n\nLANGUAGE: cmd\nCODE:\n```\nMigrator validate /collection:{collection URL} /tenantDomainName:{name} /region:{region}\n```\n\n----------------------------------------\n\nTITLE: Pipeline with Decorator Opt-Out in YAML\nDESCRIPTION: Shows how a pipeline author can opt out of a decorator by setting a specific variable, preventing the decorator from being injected.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/pipeline-decorator-context.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  skipInjecting: true\nsteps:\n- script: echo This is the only step. No decorator is added.\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: Markdown include directive that imports content containing next steps information for users after reading the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-194-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Linux Agent Working Directory Configuration\nDESCRIPTION: YAML configuration for specifying a custom work folder on a Linux agent's data disk using WorkFolder demand.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/managed-devops-pools/configure-storage.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npool: \n  name: fabrikam-managed-pool # Name of Managed DevOps Pool\n  demands:\n  - WorkFolder -equals /mnt/storage/sdc/custom-work-folder\n```\n\n----------------------------------------\n\nTITLE: Including Process Admin Context in Markdown\nDESCRIPTION: This snippet shows how to include process admin context content in a Markdown file using a special include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/custom-rules.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](../includes/open-process-admin-context-ts.md)]\n```\n\n----------------------------------------\n\nTITLE: Writing Wiki Scope (`vso.wiki_write`)\nDESCRIPTION: Grants the ability to read, create and updates wikis, wiki pages and wiki attachments. Depends on `vso.wiki`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_30\n\nLANGUAGE: text\nCODE:\n```\n`vso.wiki_write`\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: Markdown include directive that references a file containing next steps for users after reviewing the Sprint 196 updates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-196-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Prerequisites Block in Markdown\nDESCRIPTION: Markdown table showing permission requirements for configuring work item automation rules in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/backlogs/automate-work-item-state-transitions.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|:-------------|:------------|\n|**Permissions**| To configure work item automation rules for your team: [Team Administrator](../../organizations/settings/add-team-administrator.md) role or member of the [**Project Administrators**](../../organizations/security/change-project-level-permissions.md) group.|\n```\n\n----------------------------------------\n\nTITLE: Including External Content for Workflow in Markdown\nDESCRIPTION: This snippet shows how to include external content about workflow processes in a markdown document using Azure DevOps-specific syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/configure-customize.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/four-process-workflow.md)]\n```\n\n----------------------------------------\n\nTITLE: Showing Wiki Example\nDESCRIPTION: Example command for showing wiki details and opening in browser.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/manage-wikis.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops wiki show --wiki myprojectwiki --open\n```\n\n----------------------------------------\n\nTITLE: Retrieving History up to a Specific Version in TFVC\nDESCRIPTION: Shows how to display changes made to all items in a folder up to a specific version using the tf history command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/history-command.md#2025-04-22_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nc:\\code\\SiteApp\\Main\\SolutionA>tf history /noprompt * /recursive /v:30\n```\n\n----------------------------------------\n\nTITLE: Recent Activity Query Example\nDESCRIPTION: Query clauses for filtering work items created or updated by the current user within a specific timeframe\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/dashboard-focus.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nCreated By = @Me AND Created Date >= @Today-30\n```\n\n----------------------------------------\n\nTITLE: Branch Locking Prerequisites Table in Markdown\nDESCRIPTION: Markdown table defining the permissions required to lock and unlock branches in Azure DevOps Git repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/lock-branches.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|-------------|-------------|\n|**Permissions**|User who locked the branch or [**Remove Others' Locks** permissions](set-git-repository-permissions.md#git-repository) for the branch.|\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Pipeline Decorator YAML Template\nDESCRIPTION: YAML template for a basic pipeline decorator that injects a simple command-line task to run after each job.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-pipeline-decorator.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: CmdLine@2\n  displayName: 'Run my script (injected from decorator)'\n  inputs:\n    script: dir\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 196 Update Content in Markdown\nDESCRIPTION: Markdown include directive that references a file containing the actual content of Sprint 196 updates for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-196-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-196-update](../includes/pipelines/sprint-196-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Executing Azure Boards Slack Commands\nDESCRIPTION: Commands to sign out and sign back in to the Azure Boards Slack app to resolve authentication issues. These commands should be run in the Slack web client.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/integrations/boards-slack.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n/azboards signout\n```\n\nLANGUAGE: bash\nCODE:\n```\n/azboards signin\n```\n\n----------------------------------------\n\nTITLE: Filtering Phrases with Dashes in Azure DevOps Queries (Value)\nDESCRIPTION: This snippet demonstrates the string value required in an Azure DevOps query condition (e.g., `Title ~ \"...\"`) to find work items whose titles include a phrase containing dashes (`-`). The dash needs to be escaped with a backslash (`\\`) within the string literal.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/titles-ids-descriptions.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n\"feature-update\\-2023\"\n```\n\n----------------------------------------\n\nTITLE: Change process of project Permission Reference\nDESCRIPTION: Permission that allows users to change the Inheritance process for a project when combined with the 'Edit project-level information' permission.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, CHANGE_PROCESS`\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Link for Azure AD User Resolution\nDESCRIPTION: A markdown link that navigates to documentation about resolving disconnected Azure Active Directory users in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/general/sprint-149-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Resolve Azure Active Directory (Azure AD) disconnected users](#resolve-azure-active-directory-azure-ad-disconnected-users)\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps On-Premises Access Requirements Table\nDESCRIPTION: Markdown table defining access levels and permissions required for query operations in Azure DevOps on-premises version. Includes specifications for project members and Basic access users.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/prerequisites-queries.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Requirements |\n|--------------|-------------|\n| **Access levels** | - To view and run shared queries: [Project member](../../organizations/security/add-users-team-project.md). <br> - To add and save a shared query: At least [**Basic** access](../../organizations/security/access-levels.md). |\n| **Permissions** | **Contribute** permission set to **Allow** for the folder that you want to add a query to. By default, the **Contributors** group doesn't have this permission. |\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 164 Signer Information in Markdown\nDESCRIPTION: This snippet includes a markdown file containing signer information for the Sprint 164 update documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/general/sprint-164-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-164](../includes/signer/sprint-164.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Repo Triggers in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to define multiple repository resources within an Azure Pipeline configuration. It sets up triggers for the 'main' branch of the primary repository ('self') and the 'main' and 'release' branches of a secondary repository named 'tools' (located at 'MyProject/tools'). This setup causes the pipeline to run automatically upon code updates in any of the specified branches within their respective Azure Repos Git repositories. Note that this multi-repo trigger functionality is currently limited to Azure Repos Git repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-173-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\ntrigger:\n  - main\n\nresources:\n  repositories:\n    - repository: tools\n      type: git\n      name: MyProject/tools\n      ref: main\n      trigger:\n        branches:\n          include:\n            - main\n            - release\n```\n```\n\n----------------------------------------\n\nTITLE: Markdown Links for Azure DevOps Documentation\nDESCRIPTION: A markdown list of related documentation links covering team management, backlogs, bug tracking, and swimlane configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/boards/customize-cards.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Related articles\n\n- [Manage and configure team tools](../../organizations/settings/manage-teams.md)\n- [Setup your backlogs and boards](../backlogs/set-up-your-backlog.md)\n- [Show bugs on backlogs and boards](../../organizations/settings/show-bugs-on-backlog.md)  \n- [Set up swimlanes](expedite-work.md)\n```\n\n----------------------------------------\n\nTITLE: Managing Security Permissions Scope (`vso.security_manage`)\nDESCRIPTION: Grants the ability to read, write, and manage security permissions. Requires full access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n`vso.security_manage`\n```\n\n----------------------------------------\n\nTITLE: Counting Records in JavaScript\nDESCRIPTION: This JavaScript code snippet shows how to count the number of records in an array by accessing its length property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/markdown-guidance.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst count = records.length;\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Databricks Workspace\nDESCRIPTION: Commands to install Databricks extension and create a new workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/apps/cd/azure/build-data-pipeline.md#2025-04-22_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name databricks\n\naz databricks workspace create \\\n    --resource-group $rgName \\\n    --name databricks-cicd-ws  \\\n    --location eastus2  \\\n    --sku trial\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 192 Update Content in Markdown\nDESCRIPTION: Markdown include directive that pulls in the main content for the Sprint 192 update of Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/pipelines/sprint-192-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-192-update](../includes/pipelines/sprint-192-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Adding Value Area Field for Work Item Type in Azure DevOps\nDESCRIPTION: XML definition for the Value Area field that categorizes work items as either Business (delivering value to users or systems) or Architectural (supporting other stories or components).\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/reference/add-wits-to-backlogs-and-boards.md#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD name=\"Value Area\" refname=\"Microsoft.VSTS.Common.ValueArea\" type=\"String\"> \n<REQUIRED />   \n<ALLOWEDVALUES>    \n   <LISTITEM value=\"Architectural\" />   \n   <LISTITEM value=\"Business\"/>   \n </ALLOWEDVALUES>   \n<DEFAULT from=\"value\" value=\"Business\" /> \n<HELPTEXT>Business = delivers value to a user or another system; Architectural = work to support other stories or components  \n</HELPTEXT>   \n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Managing Team Dashboards Scope (`vso.dashboards_manage`)\nDESCRIPTION: Grants the ability to manage team dashboard information. Depends on `vso.dashboards`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/integrate/includes/scopes.md#2025-04-22_snippet_18\n\nLANGUAGE: text\nCODE:\n```\n`vso.dashboards_manage`\n```\n\n----------------------------------------\n\nTITLE: VSTS Next Steps Navigation Link\nDESCRIPTION: Markdown action link for navigating to VSTS main page.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2018/may-07-vsts.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[Go to VSTS](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Including Signer Information in Markdown\nDESCRIPTION: This snippet includes a Markdown file containing signer information for the release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/general/sprint-166-update.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [signer](../includes/signer/signer.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Link Reference\nDESCRIPTION: Standard markdown link reference directing to a section about advanced filtering for Lead and Cycle Time widgets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/reporting/sprint-157-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Lead and Cycle Time widgets advanced filtering](#lead-and-cycle-time-widgets-advanced-filtering)\n```\n\n----------------------------------------\n\nTITLE: Markdown Note Block\nDESCRIPTION: Markdown note block for explaining field limits in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/customize-process-field.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE] \n> Each organization or collection can define up to 2048 picklists. Each picklist can contain up to 2048 items. Picklist items must be 256 or fewer characters. If you want to add dependent picklists, see [Cascading lists](https://marketplace.visualstudio.com/items?itemName=ms-devlabs.cascading-picklists-extension).\n```\n\n----------------------------------------\n\nTITLE: Test Plans Navigation Elements Markdown Include\nDESCRIPTION: Markdown snippet for including version compatibility notice for Azure DevOps 2020 and later versions\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/navigate-test-plans.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-gt-eq-2020](../includes/version-gt-eq-2020.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 233 Update Content in Markdown\nDESCRIPTION: Markdown include directive that imports the main content of the Azure Pipelines Sprint 233 update from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-233-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-233-update](../includes/pipelines/sprint-233-update.md)]\n```\n\n----------------------------------------\n\nTITLE: TFVC Localversions Recursive Detailed Check\nDESCRIPTION: Example demonstrating how to recursively check versions of all files in a directory with detailed formatting output.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/localversions-command.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nc:\\workspaces\\FeatureA\\catalog\\>tf localversions . /recursive /format:detailed\n```\n\n----------------------------------------\n\nTITLE: Git Repository Keyboard Shortcuts Table\nDESCRIPTION: Markdown table defining keyboard shortcuts for Git repository navigation and operations in Azure DevOps\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/code-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|z|Toggle full-screen mode|\n|e|Open explorer|\n|h|Open history|\n|b|Open branches|\n|q|Open pull requests|\n|c, p|Create pull request|\n|r|Select repository|\n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Markdown\nDESCRIPTION: This snippet demonstrates how to include version-specific content in a markdown file using a specific Azure DevOps include statement.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/accounts/create-organization.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Listing Group Memberships\nDESCRIPTION: Command to list memberships for a group or user with optional relationship parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/add-manage-security-groups.md#2025-04-22_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz devops security group membership list --id\n                                         [--relationship {memberof, members}]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Navigation Link in Markdown\nDESCRIPTION: Markdown link directive for navigating to Azure DevOps portal with campaign tracking\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/repos/sprint-147-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 246 Update Content for Azure Repos in Markdown\nDESCRIPTION: Markdown include directive that references the main content for Azure Repos Sprint 246 update details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/repos/sprint-246-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-246-update](../includes/repos/sprint-246-update.md)]\n```\n\n----------------------------------------\n\nTITLE: WIQL Query Filter Examples\nDESCRIPTION: Examples of WIQL syntax for various query operations including wildcard (*), MODE operator for linked items, and ASOF operator for historical queries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/includes/feature-matrix-filter-queries.md#2025-04-22_snippet_0\n\nLANGUAGE: WIQL\nCODE:\n```\n* (wildcard)\nMODE ([WIQL syntax])\nASOF ([WIQL syntax])\n=[Field], <>[Field], >[Field], <[Field], >=[Field], <=[Field]\n```\n\n----------------------------------------\n\nTITLE: Pipeline Resource with Branch Triggers\nDESCRIPTION: Pipeline resource configuration with trigger conditions based on branch patterns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/resources.md#2025-04-22_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: SmartHotel\n    project: DevOpsProject\n    source: SmartHotel-CI\n    trigger:\n      branches:\n      - releases/*\n      - resources.triggeringAlias\n```\n\n----------------------------------------\n\nTITLE: Including Version Notice in Azure DevOps Documentation\nDESCRIPTION: Markdown include statement for inserting a version-related Q&A section from an external file qa1.md\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/bitbucket.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [qa](includes/qa1.md)]\n```\n\n----------------------------------------\n\nTITLE: Navigation Links in Markdown for Azure DevOps Testing Features\nDESCRIPTION: A markdown list of navigation links for Azure DevOps testing features, including links to 'Quick Copy and Import with Test Plan or Suite ID' and 'Update for Azure Test Runner'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/includes/testplans/sprint-235-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Quick Copy and Import with Test Plan or Suite ID](#quick-copy-and-import-with-test-plan-or-suite-id)\n- [Update for Azure Test Runner](#update-for-azure-test-runner)\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Azure Repos in Microsoft Teams\nDESCRIPTION: This snippet shows the command syntax for subscribing to all Git repositories in a project using the Azure Repos app in Microsoft Teams. It includes the command structure and an example with a project URL.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/repos/sprint-161-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nCommand: @Azure Repos subscribe [project url] ​\n\nExample: @Azure Repos subscribe `https://dev.azure.com/myorg/myproject​`\n```\n\n----------------------------------------\n\nTITLE: Creating a Table in Markdown\nDESCRIPTION: This snippet demonstrates how to create a table in a markdown document using Azure DevOps-specific syntax for row and column formatting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/configure-customize.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"1\":::\n   **Task**\n   :::column-end:::\n   :::column span=\"1\":::\n   **Requirement**\n   :::column-end:::\n   :::column span=\"1\":::\n   **Epic or feature**\n   :::column-end:::\n:::row-end:::\n:::row:::\n   :::column span=\"1\":::\n   - Child work items of the new WIT appear on the product backlog\n\t- Work items based on the new WIT appear on the sprint backlogs and Taskboards\n   :::column-end:::\n   :::column span=\"1\":::\n   - Work items based on the new WIT appear on the product backlog and \\board\n\t- Each team must configure the \\board to support the new WIT \n   :::column-end:::\n   :::column span=\"1\":::\n   - Work items based on the new WIT appear on the corresponding portfolio backlogs and boards\n\t- Each team must configure the \\boards to support the new WIT\n\t- The new WITs might not appear on one or more of the portfolio planning tools\n   :::column-end:::  \n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Definition for MS Docs Topic Include\nDESCRIPTION: YAML frontmatter block defining this file as an include file for Microsoft documentation with topic metadata.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/signer/sprint-158.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Profile Access URL\nDESCRIPTION: URL endpoint for accessing Azure DevOps profile page to manage organization settings and permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/includes/repos-troubleshoot-authentication.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://aex.dev.azure.com/me\n```\n\n----------------------------------------\n\nTITLE: Git Clean Commands\nDESCRIPTION: Git commands used to clean the local repository and reset changes when the clean option is enabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/repos/pipeline-options-for-git.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clean -ffdx\ngit reset --hard HEAD\n```\n\n----------------------------------------\n\nTITLE: TFVC Permission Namespace - Unlock Others\nDESCRIPTION: Namespace identifier for unlocking other users' changes in TFVC\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions.md#2025-04-22_snippet_42\n\nLANGUAGE: plaintext\nCODE:\n```\nVersionControlItems, UnlockOther\n```\n\n----------------------------------------\n\nTITLE: Including Default Branch Instructions Template in Markdown\nDESCRIPTION: Markdown include statement for default branch instructions template used in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/manage-your-branches.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [](includes/change-default-branch-instructions.md)]\n```\n\n----------------------------------------\n\nTITLE: Including a Warning Message in Markdown\nDESCRIPTION: This snippet shows how to include a predefined warning message about Analytics views in a Markdown file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/what-are-analytics-views.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [analytics views warning](includes/analytics-views-warning.md)]\n```\n\n----------------------------------------\n\nTITLE: Installing Azure DevOps Extension SDK\nDESCRIPTION: NPM command to install the required Azure DevOps Extension SDK package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/extend/develop/add-hub.md#2025-04-22_snippet_1\n\nLANGUAGE: no-highlight\nCODE:\n```\nnpm install azure-devops-extension-sdk\n```\n\n----------------------------------------\n\nTITLE: Task Version Specification\nDESCRIPTION: Demonstrates how to specify a major version for a task using the @ syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/tasks.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: PublishTestResults@2\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts Table in Markdown\nDESCRIPTION: A markdown table listing keyboard shortcuts and their corresponding actions in Azure DevOps Delivery Plans interface. Includes shortcuts for item selection, movement, timeline navigation, backlog management, team focus, and filtering.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/includes/keyboard-shortcuts/delivery-plan-shortcuts.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Shortcut|Action|\n|---|---|\n|Home|Select first item|\n|Enter|Open item|\n|n|New item|\n|Ctrl+Up arrow|Move item up|\n|Ctrl+Down arrow|Move item down|\n|Ctrl+Left arrow|Move item left|\n|Ctrl+Right arrow|Move item right|\n|Shift+Left arrow|Pan timeline left|\n|Shift+Right arrow|Pan timeline right|\n|u|Collapse all backlogs|\n|o|Expand all backlogs|\n|Shift+Page up|Focus on previous team|\n|Shift+Page down|Focus on next team|\n|Ctrl+Shift+f|Filter results|\n```\n\n----------------------------------------\n\nTITLE: Markdown Link Structure for Test Result Trend Widget\nDESCRIPTION: Internal markdown link structure pointing to the Test Result Trend (Advanced) widget documentation section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/reporting/sprint-147-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Test result trend (Advanced) widget](#test-result-trend-advanced-widget)\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group\nDESCRIPTION: Azure CLI command to create a new resource group for Key Vault resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/azure-key-vault.md#2025-04-22_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name <YOUR_RESOURCE_GROUP_NAME>\n```\n\n----------------------------------------\n\nTITLE: Including Prerequisites Section\nDESCRIPTION: Markdown include statement for contributor prerequisites section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/roll-back-changesets.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [contributor-only-prerequisites](includes/contributor-only-prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 242 Update Links in Markdown\nDESCRIPTION: Markdown include directive that pulls in the Sprint 242 update links from an external file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-242-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-242-update-links](../includes/pipelines/sprint-242-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Listing Feature Preview Links - Markdown - Documentation\nDESCRIPTION: This snippet creates a bulleted list of hyperlink references using Markdown syntax, each pointing to a section within a documentation file about Azure DevOps pipeline features in preview. It does not require any dependencies or special environment, but is intended for inclusion within Markdown-based documentation such as README or TOC files. Each link uses an anchor tag to facilitate intra-document navigation, making it easier for users to access information about scale set agents, Ubuntu 20.04, and GitHub package support. The expected input is static Markdown text; the output is a rendered list of clickable links.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/includes/pipelines/sprint-170-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n- [Preview of scale set agents](#preview-of-scale-set-agents)\n- [Ubuntu 20.04 in preview for Azure Pipelines hosted pools](#ubuntu-2004-in-preview-for-azure-pipelines-hosted-pools)\n- [Support for GitHub packages in YAML pipelines](#support-for-github-packages-in-yaml-pipelines)\n```\n\n----------------------------------------\n\nTITLE: Version Control Include Statement\nDESCRIPTION: Markdown include statement for version control documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/dashboards/add-widget-to-dashboard.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 155 Signer Information in Markdown\nDESCRIPTION: This snippet includes external markdown content for the signer information specific to Sprint 155.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/artifacts/sprint-155-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-155](../includes/signer/sprint-155.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Release Note Components - Markdown - Documentation\nDESCRIPTION: This snippet demonstrates how to include shared Markdown content using the !INCLUDE directive, which pulls in reusable sections such as update links, feature summaries, and next steps from external partial files. Dependencies include the referenced Markdown files (e.g., ../includes/repos/sprint-224-update-links.md), and usage requires a documentation system that processes !INCLUDE. The expected output is rendered content where the referenced files are inserted in place; limitations depend on the documentation tool's support for this syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/repos/sprint-224-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-224-update-links](../includes/repos/sprint-224-update-links.md)]\n\n[!INCLUDE [sprint-224-update](../includes/repos/sprint-224-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Implementing a Flawed Floating-Point Equality Comparison in C#\nDESCRIPTION: This code snippet shows a problematic implementation of a method that compares two double values for equality. The issue is that it performs a direct equality comparison, which is problematic for floating-point values due to potential rounding errors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/day-life-alm-developer-suspend-work-fix-bug-conduct-code-review.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\npublic class LocalMath\n{\n    public static bool EqualTo(double a, double b)\n    {\n        return a == b;\n    }\n\n```\n\n----------------------------------------\n\nTITLE: Managing Subscriptions in Microsoft Teams\nDESCRIPTION: Command to view, add, and remove Azure Repos subscriptions for a Microsoft Teams channel.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/integrations/repos-teams.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\n@azure repos subscriptions\n```\n\n----------------------------------------\n\nTITLE: Generating a PowerShell Module Manifest\nDESCRIPTION: Command to create a new module manifest file for a PowerShell module project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nNew-ModuleManifest -Path .\\PowerShell-Demo.psd1\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 147 Update Content in Markdown\nDESCRIPTION: Markdown include statement for main Sprint 147 update content for Azure Artifacts\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/artifacts/sprint-147-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-147-update](../includes/artifacts/sprint-147-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Navigating to Repository Directory\nDESCRIPTION: Command to change directory to the cloned repository folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/user-guide/code-with-git.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd fabrikam-web\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Statement\nDESCRIPTION: An include statement for version-specific content in Azure DevOps documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/package-badges.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [version-lt-eq-azure-devops](../includes/version-lt-eq-azure-devops.md)]\n```\n\n----------------------------------------\n\nTITLE: Displaying a Note in Markdown\nDESCRIPTION: This snippet utilizes standard Markdown alert syntax (`[!NOTE]`) to display an informational note to the reader. The note informs users about the rollout schedule for the announced features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\n> These features will roll out over the next two to three weeks.\n```\n\n----------------------------------------\n\nTITLE: Generating PowerShell Module Manifest\nDESCRIPTION: Command to create a new module manifest file (.psd1)\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/private-powershell-library.md#2025-04-22_snippet_16\n\nLANGUAGE: powershell\nCODE:\n```\nNew-ModuleManifest -Path .\\Get-Hello.psd1\n```\n\n----------------------------------------\n\nTITLE: Including Analytics Prerequisites\nDESCRIPTION: Markdown include statement for Analytics prerequisites section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/troubleshooting-views.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites-simple](../includes/analytics-prerequisites-simple.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Moniker Range Block\nDESCRIPTION: A conditional content block for Azure DevOps version-specific documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/package-badges.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n::: moniker range=\"<=azure-devops\"\n```\n\n----------------------------------------\n\nTITLE: Maven Install Command\nDESCRIPTION: Command to install Maven dependencies specified in the pom.xml file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/maven/google-maven.md#2025-04-22_snippet_1\n\nLANGUAGE: command\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Creating a Next Step Action Link in Markdown\nDESCRIPTION: This Markdown snippet uses a `div` element styled with the `nextstepaction` class, specific to Microsoft Docs formatting, to create a prominent call-to-action button. The button contains a hyperlink directing users to the Azure DevOps portal.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-218-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"nextstepaction\"] \n> [Go to Azure DevOps](https://go.microsoft.com/fwlink/?LinkId=307137&campaign=o~msft~docs~product-vsts~release-notes)\n```\n\n----------------------------------------\n\nTITLE: Including Markdown Content Links\nDESCRIPTION: Include directive to pull in Sprint 252 update navigation links from a separate markdown file\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2025/general/sprint-252-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-252-update-links](../includes/general/sprint-252-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Modular Content in Azure Docs - Markdown\nDESCRIPTION: These snippets demonstrate the use of Microsoft Docs 'INCLUDE' syntax to reference external Markdown content blocks. This approach enables modularity and content reuse across multiple documentation pages. Each include references a relative path to content such as update links, feature summaries, or next steps, enhancing maintainability and consistency. Inputs are the include path identifiers, and the output is the transclusion of targeted content during documentation build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2020/pipelines/sprint-173-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-173-update-links](../includes/pipelines/sprint-173-update-links.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-173-update](../includes/pipelines/sprint-173-update.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps and Azure Prerequisites Table\nDESCRIPTION: Markdown table defining the requirements for both Azure DevOps and Azure to set up key vault integration with variable groups. Includes necessary permissions and resource requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/process/includes/variable-groups-link-secrets.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Product | Requirements|\n|---------|-------------|\n| Azure DevOps | - An [Azure DevOps project](../../../organizations/projects/create-project.md).<br> - An [Azure Resource Manager service connection](../../library/connect-to-azure.md) for your project.<br>  - **Permissions:**<br>     &nbsp;&nbsp;&nbsp;&nbsp;- To use service connections: Have at least the *User* role for the [service connection](../../policies/permissions.md#set-service-connection-security-in-azure-pipelines).<br>    &nbsp;&nbsp;&nbsp;&nbsp;- To create a variable group: Have at least *Creator* [library permission](../../policies/permissions.md#set-library-security-in-azure-pipelines).  |\n| Azure | - An Azure account with an active subscription. [Create an account for free](https://azure.microsoft.com/free/).<br> - **Permissions:**<br>     &nbsp;&nbsp;&nbsp;&nbsp;To create a key vault: Have at least the *Owner* role for the subscription.|\n```\n\n----------------------------------------\n\nTITLE: Including Next Steps Content in Markdown\nDESCRIPTION: This code snippet includes external markdown content that contains next steps information for users after reading the Azure Pipelines Sprint 236 update notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/pipelines/sprint-236-update.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Prerequisites INCLUDE Statement\nDESCRIPTION: Markdown include statement for prerequisites section.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/test/add-to-bugs-exploratory-testing.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [prerequisites](includes/prerequisites.md)]\n```\n\n----------------------------------------\n\nTITLE: Wiki Page Link Reference in Markdown\nDESCRIPTION: A markdown link reference for navigating to wiki notifications section\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/wiki/sprint-150-update-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Notifications on wiki pages](#notifications-on-wiki-pages)\n```\n\n----------------------------------------\n\nTITLE: Including Azure Pipelines Sprint 222 Update Details (Markdown)\nDESCRIPTION: This directive uses the Microsoft Docs Markdown syntax `[!INCLUDE ...]` to embed the full content of another Markdown file. It includes detailed information about Azure Pipelines updates introduced in Sprint 222.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-222-update.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-222-update](includes/pipelines/sprint-222-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Restoring .NET Packages Interactively\nDESCRIPTION: Command to restore .NET packages with interactive mode enabled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/artifacts/tutorials/protect-oss-packages-with-upstream-sources.md#2025-04-22_snippet_14\n\nLANGUAGE: Command\nCODE:\n```\ndotnet restore --interactive\n```\n\n----------------------------------------\n\nTITLE: Mapping SAFe® Strategic Themes to Azure Boards Wiki in Markdown Table\nDESCRIPTION: This Markdown snippet defines a table row using DocFX directives to map the SAFe® concept 'Strategic Themes' to the Azure Boards 'Wiki', similar to how Portfolio Vision is handled.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/scaled-agile-framework.md#2025-04-22_snippet_25\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"\":::\n      Strategic Themes \n   :::column-end:::\n   :::column span=\"3\":::\n      [**Wiki**](safe-concepts.md#wiki). Strategic Themes, similar to Portfolio Vision, can be captured in a project wiki.  \n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Including Feature and Update Markdown Files in Azure DevOps Release Notes - Markdown\nDESCRIPTION: This snippet demonstrates how to modularly include external markdown content—such as feature lists and updates—into a primary documentation file using Azure DevOps' special include syntax. These include directives require referenced files to be present in the relative project path, and ensure that shared content remains consistent across multiple documents. Key parameters are the paths to shared markdown file fragments; these are embedded in-place for rendering in documentation portals. The approach streamlines updates by maintaining reusable documentation blocks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2021/general/sprint-193-update.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-193-update-links](../includes/general/sprint-193-update-links.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [sprint-193-update](../includes/general/sprint-193-update.md)]\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Document Structure Definition\nDESCRIPTION: Defines the basic structure of the release notes document including title, description, author information, and content sections using markdown formatting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/boards/sprint-230-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Azure DevOps Release Notes - Azure Boards Sprint 230 Update\ndescription: See the Sprint 230 feature updates for Azure Boards, including next steps.\nauthor: ckanyika\nms.author: ckanyika\nms.date: 11/16/2023\n---\n\n# Azure Boards - Sprint 230 Update\n\n## Features\n\n[!INCLUDE [sprint-230-update-links](../includes/boards/sprint-230-update-links.md)]\n\n[!INCLUDE [sprint-230-update](../includes/boards/sprint-230-update.md)]\n\n[!INCLUDE [nextsteps](../includes/nextsteps.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 221 Azure Boards Update Details (Markdown)\nDESCRIPTION: This Markdown directive includes the main content detailing the Azure Boards updates for Sprint 221 from the specified file (`includes/boards/sprint-221-update.md`). This is part of the documentation system's content inclusion mechanism to keep release notes concise.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/sprint-221-update.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-221-update](includes/boards/sprint-221-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Using Logical Expressions in Query Filters\nDESCRIPTION: Example showing how logical expressions are constructed in work item queries using AND/OR operators and grouped clauses. The expressions demonstrate different ways to combine conditions for Work Item Type, State, and Assigned To fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/queries/using-queries.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> |Query| Grouped clauses|Logical expression|\n> |---|---|---|\n> |**1** |AND State=Active OR Assigned to @Me|\n> |**2** |AND (State=Active OR Assigned to @Me)|\n> |**3** |OR (State=Active AND Assigned to @Me)|\n```\n\n----------------------------------------\n\nTITLE: Installing Open Policy Agent in Azure Pipeline\nDESCRIPTION: Task configuration for installing Open Policy Agent (OPA) in an Azure Pipeline. OPA is used for policy enforcement, particularly with Infrastructure as Code. The task allows specifying the version of OPA to install.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/pipelines/sprint-158-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntask: OpenPolicyAgentInstaller@0\n    inputs:\n          opaVersion: '0.13.5'\n```\n\n----------------------------------------\n\nTITLE: Disabling Git Submodules in Travis CI (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to disable Git submodule cloning in Travis CI. It uses the 'git' key with 'submodules' set to false.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\ngit:\n  submodules: false\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 213 Update Content in Markdown\nDESCRIPTION: Include directive for main Sprint 213 update markdown content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/pipelines/sprint-213-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-213-update](../includes/pipelines/sprint-213-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for AGENT_ACKNOWLEDGE_NO_UPDATES (Bash)\nDESCRIPTION: Sets the AGENT_ACKNOWLEDGE_NO_UPDATES environment variable on the agent machine using Bash syntax. This allows Azure DevOps pipeline agents (version 2.218 or later) to continue running on unsupported operating systems without job failure. This method requires access to the agent machine's environment configuration (e.g., /etc/environment or similar) and may require administrative permissions. No parameters are needed; outputs are not produced by this command directly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-219-update.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nAGENT_ACKNOWLEDGE_NO_UPDATES=true\n```\n\n----------------------------------------\n\nTITLE: Grouping Steps in Azure Pipelines\nDESCRIPTION: Example showing how to group and name related steps in Azure Pipelines for better organization and readability, combining installation commands into a single step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/migrate/from-travis.md#2025-04-22_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- script: |\n    npm install -g bower\n    npm install\n    bower install\n  displayName: 'Install dependencies'\n- script: npm run build\n- script: npm test\n```\n\n----------------------------------------\n\nTITLE: Basic TFVC Folderdiff Command Syntax\nDESCRIPTION: The basic syntax for the TFVC folderdiff command, showing the main arguments and options available.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/folderdiff-command.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntf folderdiff [sourcePath] targetPath [/recursive] [/noprompt] [/collection:TeamProjectCollectionUrl] [/filter:filter] [/filterLocalPathsOnly] [/login:username,[password]] [/view:same,different,sourceOnly,targetOnly]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 229 Update Links in Markdown\nDESCRIPTION: This snippet includes a markdown file containing links to Sprint 229 update information for GitHub Advanced Security in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/ghazdo/sprint-229-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-229-update-links](../includes/ghazdo/sprint-229-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 161 Feature Links in Markdown\nDESCRIPTION: Include directive for linking to Sprint 161 feature updates for Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/pipelines/sprint-161-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-161-update-links](../includes/pipelines/sprint-161-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: Defining Variables with Functions in Azure Pipelines YAML\nDESCRIPTION: This snippet shows how to define variables in an Azure Pipelines YAML file using expressions and functions. It specifically demonstrates the use of the `counter` function and string formatting. The example contains an intentional typo (`format` instead of a correct function name or case) within the expression for the `Patch` variable, which the improved YAML validation feature is designed to detect.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2023/includes/pipelines/sprint-231-update.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\nvariables:\n  Major: '1'\n  Minor: '0'\n  Patch: $[counter(format('{0}.{1}', variables.Major, variables.Minor ), 0)]\n```\n```\n\n----------------------------------------\n\nTITLE: Using EMPTY Rule During State Transition in XML\nDESCRIPTION: This XML snippet demonstrates how to use the EMPTY element to clear a field value during a state transition in a work item.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/settings/work/rule-reference.md#2025-04-22_snippet_7\n\nLANGUAGE: XML\nCODE:\n```\n<FIELD refname=\"MyCorp.SubStatus\" />\n   <WHEN field=\"MyCorp.Status\" value=\"Approve\" >\n     <EMPTY />\n   </WHEN>\n</FIELD>\n```\n\n----------------------------------------\n\nTITLE: Running macOS Agent Interactively\nDESCRIPTION: Command to run the macOS agent interactively after configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/v2-osx-agent.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh\n```\n\n----------------------------------------\n\nTITLE: Displaying a Styled Image in Markdown\nDESCRIPTION: Uses a Markdown extension (`[!div class=\"...\"]`) to apply specific styling (CSS class 'mx-imgBorder') to a standard Markdown image. This is likely used to add a border or other visual treatment to embedded images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2022/sprint-206-update.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[!div class=\"mx-imgBorder\"] \n![Make a suggestion](../media/make-a-suggestion.png)\n```\n\n----------------------------------------\n\nTITLE: Displaying Inline Sprint Burndown Thumbnail in Azure DevOps\nDESCRIPTION: This snippet shows the markdown syntax for embedding an image of the inline sprint burndown thumbnail in Azure DevOps documentation. It demonstrates how to use the 'mx-imgBorder' class for styling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/reporting/sprint-162-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"mx-imgBorder\"]\n> ![Inline sprint burndown thumbnail.](../../media/162_04.png)\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 246 Update Links for Azure Repos in Markdown\nDESCRIPTION: Markdown include directive that references update links for Azure Repos Sprint 246 features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2024/repos/sprint-246-update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-246-update-links](../includes/repos/sprint-246-update-links.md)]\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Include File\nDESCRIPTION: YAML front matter block specifying this as an include file for Microsoft documentation system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/includes/signer/sprint-162.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\n---\n```\n\n----------------------------------------\n\nTITLE: Including Analytics Views Warning\nDESCRIPTION: Markdown include statement for Analytics views warning message.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/troubleshooting-views.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/analytics-views-warning.md)]\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 158 Update Content in Markdown\nDESCRIPTION: This snippet includes the main content of the Sprint 158 update in markdown format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-158-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-158-update](../includes/general/sprint-158-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Viewing Branch History in Visual Studio\nDESCRIPTION: Instructions for opening the History tab for the current branch in Visual Studio.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/git/includes/undo-revert-branch.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. From the menu bar, choose **Git > View Branch History** to open the **History** tab for the current branch.\n\n   :::image type=\"content\" source=\"../media/undo/visual-studio-2019/git-experience/view-history.png\" border=\"true\" alt-text=\"Screenshot of the View Branch History option in the Git menu in Visual Studio.\" lightbox=\"../media/undo/visual-studio-2019/git-experience/view-history-lrg.png\":::\n```\n\n----------------------------------------\n\nTITLE: Including Sprint 146 Update Content in Markdown\nDESCRIPTION: Markdown include directive for main Sprint 146 update content\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/release-notes/2019/general/sprint-146-update.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [sprint-146-update](../includes/general/sprint-146-update.md)]\n```\n\n----------------------------------------\n\nTITLE: Accessing the tool configuration via command prompt\nDESCRIPTION: Command to open the file comparison tool configuration dialog from a developer command prompt.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/repos/tfvc/associate-file-type-file-comparison-tool.md#2025-04-22_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\ntf diff /configure\n```\n\n----------------------------------------\n\nTITLE: Repository Security Include Statements\nDESCRIPTION: Include statements for repository security and code access permissions\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/permissions-access.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [temp](includes/advanced-security.md)]\n[!INCLUDE [temp](includes/code-git.md)]\n[!INCLUDE [temp](includes/code-tfvc.md)]\n```\n\n----------------------------------------\n\nTITLE: Getting Deleted Projects with PowerShell in Azure DevOps\nDESCRIPTION: PowerShell script to retrieve a list of deleted projects from an Azure DevOps collection. Uses Invoke-RestMethod to call the projects API with a deleted state filter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/projects/delete-project.md#2025-04-22_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n$collectionUrl = \"https://localhost/defaultcollection\"\n(irm -Uri \"$collectionUrl/_apis/projects?stateFilter=\ndeleted&api-version=5.0-preview.3\" -UseDefaultCredentials).value\n```\n\n----------------------------------------\n\nTITLE: Deleting a Repository in Azure DevOps\nDESCRIPTION: HTTP DELETE request to remove a repository from Azure DevOps using the repository ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/project/wiki/restore-deleted-wiki.md#2025-04-22_snippet_3\n\nLANGUAGE: HTTP\nCODE:\n```\nDELETE https://dev.azure.com/christiechurch/fabrikamfiber/_apis/git/repositories/052a83ac-af70-4194-b53f-df073e5f1786?api-version=7.1-preview.1\n```\n\n----------------------------------------\n\nTITLE: Displaying Parent Items Owned by Other Teams in Markdown\nDESCRIPTION: This markdown snippet shows how to display parent items owned by other teams in a backlog view, using an information icon and an example image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/boards/plans/visibility-across-teams.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nItems that are owned by other teams appear with an information icon,  :::image type=\"icon\" source=\"../../media/icons/info.png\" border=\"false\"::: . \n\n> [!div class=\"mx-imgBorder\"]  \n> ![Items that are owned by other teams appear with an information icon.](media/visibility/web-team-backlog-multi-team-ownership-new-nav.png)   \n```\n\n----------------------------------------\n\nTITLE: Including Version-Specific Content in Azure DevOps Docs\nDESCRIPTION: This YAML snippet is used to include version-specific content in Azure DevOps documentation. It references a file that likely contains conditional content based on the Azure DevOps version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/release/deploy-pull-request-builds.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n[!INCLUDE [version-gt-eq-2019](../../includes/version-gt-eq-2019.md)]\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Proxy for Windows Agents with Fiddler\nDESCRIPTION: Command to configure a Windows agent to use Fiddler as an HTTP proxy for capturing detailed HTTP traffic logs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/troubleshooting/review-logs.md#2025-04-22_snippet_2\n\nLANGUAGE: cmd\nCODE:\n```\nset VSTS_HTTP_PROXY=http://127.0.0.1:8888\n```\n\n----------------------------------------\n\nTITLE: Retrieving Network Virtualization Provider Address with PowerShell\nDESCRIPTION: This PowerShell command retrieves the provider address for the physical NIC configured in trunk mode with a VLAN ID. It's used to verify the network virtualization setup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/targets/create-virtual-network.md#2025-04-22_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-NetVirtualizationProviderAddress\n```\n\n----------------------------------------\n\nTITLE: Configuring URL Access for *.visualstudio.com Domain in Azure Pipelines\nDESCRIPTION: This code snippet lists the URLs that need to be accessible by the Azure Pipelines agent when using the *.visualstudio.com domain. These URLs should be configured in the web proxy to allow direct access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/pipelines/agents/includes/v3/web-proxy-bypass.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://login.microsoftonline.com\nhttps://app.vssps.visualstudio.com \nhttps://{organization_name}.visualstudio.com\nhttps://{organization_name}.vsrm.visualstudio.com\nhttps://{organization_name}.vstmr.visualstudio.com\nhttps://{organization_name}.pkgs.visualstudio.com\nhttps://{organization_name}.vssps.visualstudio.com\n```\n\n----------------------------------------\n\nTITLE: Rename project Permission Reference\nDESCRIPTION: Permission that allows users to change the name of the project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/project-level-permissions-reference-table-cloud.md#2025-04-22_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n`Project, RENAME`\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Test Management Permission Matrix Markdown Table\nDESCRIPTION: Structured markdown table defining permissions for test management operations across different user roles. Includes project-level and area path permissions with checkmark indicators for allowed actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/organizations/security/includes/test.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::row:::\n   :::column span=\"2\":::\n      **Permission** \n   :::column-end:::\n   :::column span=\"1\":::\n     **Level**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Readers**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Contributors**\n   :::column-end:::\n   :::column span=\"1\":::\n     **Project Admins**\n   :::column-end:::\n:::row-end:::\n```\n\n----------------------------------------\n\nTITLE: Constructing OData URL for On-Premises Azure DevOps Server\nDESCRIPTION: OData feed URL format for connecting Excel to on-premises Azure DevOps Server Analytics. Includes server name, port, collection name and version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-docs/blob/main/docs/report/powerbi/access-analytics-excel.md#2025-04-22_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\nhttps://{ServerName}:{Port}/tfs/{CollectionName}/_odata/{version}/\n```"
  }
]
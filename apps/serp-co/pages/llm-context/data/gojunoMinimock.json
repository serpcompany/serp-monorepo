[
  {
    "owner": "gojuno",
    "repo": "minimock",
    "content": "TITLE: Setting Up a Mock with Builder Pattern\nDESCRIPTION: Go code example showing how to set up a mock using the builder pattern with Expect/Return methods for a simple formatter interface.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nformatterMock := NewFormatterMock(mc).FormatMock.Expect(\"hello %s!\", \"world\").Return(\"hello world!\")\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Mock with When/Then Helpers\nDESCRIPTION: Go code example showing how to set up multiple expectations and results for a method using When/Then pattern for different argument sets.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_13\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nformatterMock := NewFormatterMock(mc)\nformatterMock.FormatMock.When(\"Hello %s!\", \"world\").Then(\"Hello world!\")\nformatterMock.FormatMock.When(\"Hi %s!\", \"there\").Then(\"Hi there!\")\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Mock with Custom Function Implementation\nDESCRIPTION: Go code example showing how to set a custom implementation function for a mock method that can contain any logic.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_15\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nformatterMock := NewFormatterMock(mc).FormatMock.Set(func(string, ...interface{}) string {\n  return \"minimock\"\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Multi-Method Mock with Builder Pattern\nDESCRIPTION: Go code example showing how to set up expectations for multiple methods of a mock using the builder pattern in a single line.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nreadCloserMock := NewReadCloserMock(mc).ReadMock.Expect([]byte(1,2,3)).Return(3, nil).CloseMock.Return(nil)\n```\n\n----------------------------------------\n\nTITLE: Validating Mock Usage with Controller\nDESCRIPTION: Go test function example showing how the minimock controller automatically validates that mocks are called as expected during tests.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_21\n\nLANGUAGE: go\nCODE:\n```\nfunc TestSomething(t *testing.T) {\n  // it will mark this example test as failed because there are no calls\n  // to formatterMock.Format() and readCloserMock.Read() below\n  mc := minimock.NewController(t)\n\n  formatterMock := NewFormatterMock(mc)\n  formatterMock.FormatMock.Return(\"minimock\")\n\n  readCloserMock := NewReadCloserMock(mc)\n  readCloserMock.ReadMock.Return(5, nil)\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Concurrent Code with Wait Method\nDESCRIPTION: Go test function example showing how to use the Wait method of the controller to test code that calls mocks in goroutines.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_22\n\nLANGUAGE: go\nCODE:\n```\nfunc TestSomething(t *testing.T) {\n  mc := minimock.NewController(t)\n\n  //Wait ensures that all mocked methods have been called within the given time span\n  //if any of the mocked methods have not been called Wait marks the test as failed\n  defer mc.Wait(time.Second)\n\n  formatterMock := NewFormatterMock(mc)\n  formatterMock.FormatMock.Return(\"minimock\")\n\n  //tested code can run the mocked method in a goroutine\n  go formatterMock.Format(\"hello world!\")\n}\n```\n\n----------------------------------------\n\nTITLE: Using Inspect Helper for Parameter Validation\nDESCRIPTION: Go code example showing how to use the Inspect helper to validate specific parts of method arguments rather than exact matching.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nreadCloserMock := NewReadCloserMock(mc).ReadMock.Inspect(func(p []byte){\n  assert.Equal(mc, 2, p[1])\n}).Return(3, nil).CloseMock.Return(nil)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Expected Call Count with Times Helper\nDESCRIPTION: Go code example showing how to set an expectation for the exact number of times a mock method should be called during the test.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_17\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nformatterMock := NewFormatterMock(mc).FormatMock.Times(10).Expect(\"hello %s!\", \"world\").Return(\"hello world!\")\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Mock with ExpectParams Helpers\nDESCRIPTION: Go code example showing how to set expectations for specific individual parameters using the ExpectParams helper methods.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_12\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nifMock := NewIfMock(mc).DoMock.ExpectIntArgParam1(10).ExpectFloatArgParam3(10.2).Return()\n```\n\n----------------------------------------\n\nTITLE: Mocking Context Using When/Then\nDESCRIPTION: Go code example showing how to use minimock.AnyContext to ignore the specific context value when setting up mock expectations with When/Then.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_19\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nsenderMock := NewSenderMock(mc).\n  SendMock.\n    When(minimock.AnyContext, \"message1\").Then(nil).\n    When(minimock.AnyContext, \"message2\").Then(errors.New(\"invalid message\"))\n```\n\n----------------------------------------\n\nTITLE: Mocking Context Using Expect/Return\nDESCRIPTION: Go code example showing how to use minimock.AnyContext to ignore the specific context value when setting up mock expectations with Expect/Return.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_20\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nsenderMock := NewSenderMock(mc).\n  SendMock.Expect(minimock.AnyContext, \"message\").Return(nil)\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Mock with When/Then as One-Liner\nDESCRIPTION: Go code example showing how to set up multiple expectations and results for a method using When/Then pattern in a single line of code.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_14\n\nLANGUAGE: go\nCODE:\n```\nformatterMock = NewFormatterMock(mc).FormatMock.When(\"Hello %s!\", \"world\").Then(\"Hello world!\").FormatMock.When(\"Hi %s!\", \"there\").Then(\"Hi there!\")\n```\n\n----------------------------------------\n\nTITLE: Using Invocation Counters in Mocks\nDESCRIPTION: Go code example showing how to use invocation counters to track the number of times a mock method is called and use it in the implementation.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_16\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nformatterMock := NewFormatterMock(mc)\nformatterMock.FormatMock.Set(func(string, ...interface{}) string {\n  return fmt.Sprintf(\"minimock: %d\", formatterMock.BeforeFormatCounter())\n})\n```\n\n----------------------------------------\n\nTITLE: Making Mock Methods Optional\nDESCRIPTION: Go code example showing how to mark a mock method as optional so the test doesn't fail if the method isn't called during the test.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_18\n\nLANGUAGE: go\nCODE:\n```\nmc := minimock.NewController(t)\nformatterMock := NewFormatterMock(mc).FormatMock.Optional().Expect(\"hello %s!\", \"world\").Return(\"hello world!\")\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Minimock CLI\nDESCRIPTION: Command-line usage pattern for Minimock showing available flags including interface selection, output location, and other configuration options.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nminimock [-i source.interface] [-o output/dir/or/file.go] [-g]\n```\n\n----------------------------------------\n\nTITLE: Installing Minimock with Go Modules\nDESCRIPTION: Command to install the latest version of Minimock using Go modules. This installs the command-line tool that generates mock implementations.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo install github.com/gojuno/minimock/v3/cmd/minimock@latest\n```\n\n----------------------------------------\n\nTITLE: Generating Mocks for All Interfaces in a Package\nDESCRIPTION: Command to generate mock implementations for all interfaces defined in the current package. This assumes you're in the package directory.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ cd ~/go/src/github.com/gojuno/minimock/tests\n$ minimock\n```\n\n----------------------------------------\n\nTITLE: Generating a Mock for a Specific Interface\nDESCRIPTION: Command to generate a mock implementation for only the Formatter interface in the current package.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ cd ~/go/src/github.com/gojuno/minimock/tests\n$ minimock -i Formatter\n```\n\n----------------------------------------\n\nTITLE: Generating a Mock with Relative Package Notation\nDESCRIPTION: Command to generate a mock using relative package notation to specify the interface to mock.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ minimock -i ./tests.Formatter\n```\n\n----------------------------------------\n\nTITLE: Generating a Mock with Full Import Path\nDESCRIPTION: Command to generate a mock using the full import path of the source package and specifying an output directory.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ minimock -i github.com/gojuno/minimock/tests.Formatter -o ./tests/\n```\n\n----------------------------------------\n\nTITLE: Interface Declaration for Mocking Example\nDESCRIPTION: Sample Go interface declaration used to demonstrate how Minimock generates mock implementations. This example shows a simple Formatter interface.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntype Formatter interface {\n\tFormat(string, ...interface{}) string\n}\n```\n\n----------------------------------------\n\nTITLE: ReadCloser Interface Declaration Example\nDESCRIPTION: Sample interface declaration for io.ReadCloser that has multiple methods to demonstrate more complex mocking scenarios.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ntype ReadCloser interface {\n\tRead(p []byte) (n int, err error)\n\tClose() error\n}\n```\n\n----------------------------------------\n\nTITLE: Multi-Argument Interface for ExpectParams Example\nDESCRIPTION: Interface declaration with multiple arguments to demonstrate the use of ExpectParams helpers for selective argument matching.\nSOURCE: https://github.com/gojuno/minimock/blob/master/README.md#2025-04-23_snippet_11\n\nLANGUAGE: go\nCODE:\n```\ntype If interface {\n\tDo(intArg int, stringArg string, floatArg float)\n}\n```"
  }
]
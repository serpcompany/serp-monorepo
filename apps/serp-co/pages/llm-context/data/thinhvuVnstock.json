[
  {
    "owner": "thinh-vu",
    "repo": "vnstock",
    "content": "TITLE: Retrieving Financial Statements with Vnstock (Python)\nDESCRIPTION: This code snippet shows how to retrieve various financial statements for a given stock using the `vnstock` library. It demonstrates fetching balance sheets (yearly and quarterly), income statements, cash flow statements, and financial ratios. The code specifies the period, language, and whether to drop null values.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='VCI', source='VCI')\n# Bảng cân đối kế toán - năm\nstock.finance.balance_sheet(period='year', lang='vi', dropna=True)\n# Bảng cân đối kế toán - quý\nstock.finance.balance_sheet(period='quarter', lang='en', dropna=True)\n# Kết quả hoạt động kinh doanh\nstock.finance.income_statement(period='year', lang='vi', dropna=True)\n# Lưu chuyển tiền tệ\nstock.finance.cash_flow(period='year', dropna=True)\n# Chỉ số tài chính\nstock.finance.ratio(period='year', lang='vi', dropna=True)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Financial Reports (vnstock)\nDESCRIPTION: Retrieves various financial reports, including balance sheet, income statement, cash flow, and financial ratios, using the `Vnstock` class. The examples demonstrate how to specify the report type, period (yearly or quarterly), language, and whether to drop rows with missing values.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_24\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='VCI', source='VCI')\n\n# Balance Sheet - yearly\nstock.finance.balance_sheet(period='year', lang='vi', dropna=True)\n\n# Balance Sheet - quarterly\nstock.finance.balance_sheet(period='quarter', lang='en', dropna=True)\n\n# Income Statement\nstock.finance.income_statement(period='year', lang='vi', dropna=True)\n\n# Cash Flow\nstock.finance.cash_flow(period='year', dropna=True)\n\n# Financial Ratios\nstock.finance.ratio(period='year', lang='vi', dropna=True)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Intraday Stock Data with Vnstock (Python)\nDESCRIPTION: This code snippet demonstrates how to retrieve intraday stock data using the `vnstock` library.  It calls the `intraday` function from the `stock.quote` module with specified parameters. The function fetches and returns the intraday trading data (tick data) for a given stock symbol.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.intraday(symbol='ACB', page_size=10_000, show_log=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Stock Prices - Python\nDESCRIPTION: This code snippet retrieves historical stock prices for a specified date range (2024-01-01 to 2024-06-21) and interval (1 day) using the stock.quote.history method. The result is stored in a Pandas DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndf = stock.quote.history(start='2024-01-01', end='2024-06-21', interval='1D')\ndf\n```\n\n----------------------------------------\n\nTITLE: Retrieving historical stock data\nDESCRIPTION: This snippet retrieves historical stock data for a given symbol (default ACB), start date, and end date, with a specified interval. The history() method from stock.quote is used, returning a Pandas DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_10\n\nLANGUAGE: python\nCODE:\n```\ndf = stock.quote.history(start='2024-01-01', end='2025-03-19', interval='1D')\ndf\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Financial Ratios Summary\nDESCRIPTION: This code retrieves a summary of the company's financial ratios using the `ratio_summary()` method. This provides key financial metrics for assessing the company's performance.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_27\n\nLANGUAGE: python\nCODE:\n```\ncompany.ratio_summary()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Stock Prices (vnstock)\nDESCRIPTION: Fetches historical stock prices using the `Vnstock` or `Quote` class from the vnstock library. The code demonstrates how to specify the stock symbol, data source, start date, end date, and interval for the historical data.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='ACB', source='VCI')\nstock.quote.history(start='2024-01-01', end='2025-03-19', interval='1D')\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Quote\nquote = Quote(symbol='ACB', source='VCI')\nquote.history(start='2024-01-01', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cash Flow Statement Data (Yearly)\nDESCRIPTION: This code retrieves the company's cash flow statement data on a yearly basis, dropping rows with missing values, and displays the first few rows. The `cash_flow()` method is used.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_38\n\nLANGUAGE: python\nCODE:\n```\nfinance.cash_flow(period='year', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Data\nDESCRIPTION: This snippet shows how to retrieve historical price data for a given security using the history() method of the Quote class. It specifies the start and end dates, as well as the interval (e.g., '1D' for daily data).\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_17\n\nLANGUAGE: python\nCODE:\n```\ndf = quote.history(start='2024-01-01', end='2025-03-19', interval='1D')\ndf\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Information (vnstock)\nDESCRIPTION: Retrieves overview information for a specific company using the `Vnstock` or `Company` class. It shows how to specify the stock symbol and data source. It provides comprehensive company details for analysis.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_23\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\ncompany = Vnstock().stock(symbol='ACB', source='VCI').company\ncompany.overview()\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Company\ncompany = Company(symbol='ACB', source='VCI')\ncompany.overview()\n```\n\n----------------------------------------\n\nTITLE: Getting historical stock data - Python\nDESCRIPTION: This code snippet demonstrates two different methods of retrieving historical stock data using the vnstock library. The first method uses the main Vnstock class, while the second method uses the Quote class. Both methods retrieve historical data for the 'ACB' symbol from the 'VCI' data source, between '2024-01-01' and '2025-03-19', with a daily ('1D') interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='ACB', source='VCI')\nstock.quote.history(start='2024-01-01', end='2025-03-19', interval='1D')\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Quote\nquote = Quote(symbol='ACB', source='VCI')\nquote.history(start='2024-01-01', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cash Flow (Yearly)\nDESCRIPTION: This snippet retrieves the cash flow statement for a company on a yearly basis. The `.head()` method shows the first 5 rows. The `dropna=True` argument removes rows with missing values.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_50\n\nLANGUAGE: python\nCODE:\n```\nfin.cash_flow(period='year', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving intraday quote data\nDESCRIPTION: This snippet retrieves intraday (real-time or latest available) quote data for a stock symbol (ACB). It uses the intraday() method with specified page size and logging options.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n# Dữ liệu khớp lệnh trong ngày giao dịch realtime hoặc ngày gần nhất (ngoài giờ giao dịch)\nstock.quote.intraday(symbol='ACB', page_size=10_000, show_log=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving stock listing - Python\nDESCRIPTION: This code snippet demonstrates how to retrieve a list of all stock symbols using the Listing class from the vnstock library. This is a basic function for getting the symbols which is required for other functions to operate.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Listing\nlisting = Listing()\nlisting.all_symbols()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Market Price Board (vnstock)\nDESCRIPTION: Fetches real-time quotes for multiple stock tickers using the `Trading` class from the vnstock library. The `price_board` method accepts a list of stock symbols as input.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_22\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Trading\nTrading(source='VCI').price_board(['VCB','ACB','TCB','BID'])\n```\n\n----------------------------------------\n\nTITLE: Filtering Stocks with Screener in Vnstock (Python)\nDESCRIPTION: This code snippet demonstrates how to use the stock screener feature of the `vnstock` library to filter stocks based on certain criteria. It imports the `Screener` class and then calls the `stock` function with specified parameters, such as the exchange names and a limit on the number of results.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Screener\nstock.screener.stock(params={\"exchangeName\": \"HOSE,HNX,UPCOM\"}, limit=1700)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Intraday Data\nDESCRIPTION: This snippet demonstrates retrieving intraday (realtime or latest available) trading data using the intraday() method of the Quote class. Parameters include page_size for number of records and show_log to hide the API call logs.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nquote.intraday(page_size=10_000, show_log=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving price board data\nDESCRIPTION: This snippet retrieves price board data for a list of stock symbols (ACB).  It utilizes the price_board() method from the stock.trading object.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nstock.trading.price_board(['ACB'])\n```\n\n----------------------------------------\n\nTITLE: Listing Stock Symbols by Industry\nDESCRIPTION: This code retrieves stock symbols categorized by industry using the `symbols_by_industries()` method.  The output maps each industry to the stock symbols belonging to that industry.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nlisting.symbols_by_industries()\n```\n\n----------------------------------------\n\nTITLE: Exporting Data to Excel and CSV (vnstock)\nDESCRIPTION: Exports financial data to Excel and CSV formats using Pandas `DataFrame` methods. Demonstrates saving financial ratio data to a variable and then exporting it to files. Specify the save path for the files.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_29\n\nLANGUAGE: python\nCODE:\n```\n# Save ratio data to memory\nratio_df = stock.finance.ratio(period='year', lang='vi', dropna=True)\n\n# Export to Excel\nratio_df.to_excel('/your_save_path/ratio_df.xlsx', index=False)\n\n# Export to CSV\nratio_df.to_csv('/your_save_path/ratio_df.csv', index=False)\n```\n\n----------------------------------------\n\nTITLE: Listing Stock Symbols by Group\nDESCRIPTION: This code snippet retrieves a list of stock symbols belonging to a specific group, such as VN30, using the `symbols_by_group()` method.  It takes the group name as input and returns the corresponding stock symbols.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nlisting.symbols_by_group('VN30')\n```\n\n----------------------------------------\n\nTITLE: Listing Symbols by Group\nDESCRIPTION: This snippet demonstrates how to retrieve a list of stock symbols belonging to a specific group (e.g., VN30) using the Listing class. It initializes a Listing object and then calls the symbols_by_group() method, passing the group name as an argument.  Available groups: HOSE, VN30, VNMidCap, VNSmallCap, VNAllShare, VN100, ETF, HNX, HNX30, HNXCon, HNXFin, HNXLCap, HNXMSCap, HNXMan, UPCOM, FU_INDEX, CW\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.symbols_by_group('VN30')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Price Depth Data\nDESCRIPTION: This snippet retrieves price depth data (bid and ask prices and volumes) for a specified stock symbol using the `price_depth()` method.  It provides a snapshot of the order book.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nquote.price_depth('ACB')\n```\n\n----------------------------------------\n\nTITLE: Listing all symbols\nDESCRIPTION: This snippet retrieves a list of all listed stock symbols using the VCI data source. It utilizes the all_symbols() method from the stock.listing object.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# VCI là nguồn dữ liệu từ CK Vietcap bên cạnh nguồn từ TCBS\nstock.listing.all_symbols()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Information with Vnstock (Python)\nDESCRIPTION: This code snippet illustrates how to retrieve company information using the `vnstock` library. It showcases two equivalent approaches using the `Vnstock` and `Company` classes. Both methods fetch company overview data for a specified stock symbol from a defined data source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\ncompany = Vnstock().stock(symbol='ACB', source='VCI').company\ncompany.overview()\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Company\ncompany = Company(symbol='ACB', source='VCI')\ncompany.overview()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Futures Contract History - Python\nDESCRIPTION: This code snippet retrieves historical data for a specific futures contract (VN30F2504) within a specified timeframe, using a daily interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='VN30F2504', start='2025-03-01', end='2025-03-27', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Futures Contract History - Python\nDESCRIPTION: This code snippet retrieves historical data for a futures contract (VN30F1M) within a specified timeframe, using a daily interval. It shows an example of how to fetch historical data for derivatives using the `vnstock` library.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='VN30F1M', start='2024-01-02', end='2024-11-01', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Filtering Stocks with Screener\nDESCRIPTION: This code snippet demonstrates how to use the `Screener` class from the `vnstock` library to filter stocks based on certain criteria. It initializes the `Screener` object with the 'tcbs' data source and retrieves stocks from HOSE, HNX and UPCOM exchanges.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_41\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Screener\n\nscreener = Screener(source=\"tcbs\")\nscreener_df = screener.stock(params={\"exchangeName\": \"HOSE,HNX,UPCOM\"}, limit=1700)\nscreener_df\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Stock Symbols\nDESCRIPTION: This example shows how to retrieve all stock symbols from the specified data source using the `all_symbols()` method of the `Listing` object. It lists all symbols regardless of their listing status.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nlisting.all_symbols()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Intraday Trading Data - Python\nDESCRIPTION: This code snippet retrieves intraday trading data for a specified stock symbol (ACB).  show_log=False prevents the library from printing logs to the console.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n# Dữ liệu khớp lệnh trong ngày giao dịch realtime hoặc ngày gần nhất (ngoài giờ giao dịch)\nstock.quote.intraday(symbol='ACB', show_log=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Ratio Summary\nDESCRIPTION: This snippet retrieves a summary of financial ratios for a company using the ratio_summary() method of the Company class.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_33\n\nLANGUAGE: python\nCODE:\n```\ncompany.ratio_summary()\n```\n\n----------------------------------------\n\nTITLE: Initializing Quote for an Index\nDESCRIPTION: This snippet demonstrates how to initialize a Quote object for a stock market index (e.g., VNINDEX).\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nquote = Quote(symbol='VNINDEX')\n```\n\n----------------------------------------\n\nTITLE: Importing vnstock Classes\nDESCRIPTION: This snippet imports specific classes from the vnstock library, such as Listing, Quote, Company, Finance, Trading, and Screener. This allows for direct access to specific modules without using the main Vnstock wrapper.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n## Có thể gọi các class chi tiết trong thư viện thay vì sử dụng cấp cao nhất là Vnstock\nfrom vnstock import Listing, Quote, Company, Finance, Trading, Screener \n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Overview - Python\nDESCRIPTION: This code snippet retrieves the company overview data and transposes the result using `.T` for display purposes.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_15\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .T để xoay dòng thành cột\ncompany.overview().T\n```\n\n----------------------------------------\n\nTITLE: Importing vnstock Classes from Specific Modules\nDESCRIPTION: This snippet demonstrates importing classes from specific submodules within vnstock, such as vnstock.explorer.vci and vnstock.explorer.tcbs. This allows for granular access to data sources from VCI or TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n## Bạn cũng có thể gọi các class trong theo vị trí chi tiết của nguồn dữ liệu\nfrom vnstock.explorer.vci import Listing, Quote, Company, Finance, Trading\n\n# hoặc\n\nfrom vnstock.explorer.tcbs import Quote, Company, Finance, Trading, Screener\n```\n\n----------------------------------------\n\nTITLE: Retrieving Intraday Stock Data\nDESCRIPTION: This code retrieves intraday stock data using the `intraday()` method of the `Quote` object. It specifies the stock symbol, page size, and whether to show log messages. The method retrieves real-time or the most recent available intraday data.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nquote.intraday(symbol='ACB', page_size=10_000, show_log=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving NAV report\nDESCRIPTION: This snippet retrieves the Net Asset Value (NAV) report for a specific fund, in this case, 'SSISCA', using `fund.details.nav_report('SSISCA')`. This provides information on the fund's NAV performance over time. The returned data includes historical NAV values.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/4_funds_vnstock3.ipynb#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfund.details.nav_report('SSISCA')\n```\n\n----------------------------------------\n\nTITLE: Listing Funds\nDESCRIPTION: This snippet retrieves a list of available funds using the `fund.listing()` method. The `.head()` method displays the first few rows of the retrieved data, providing a quick overview of the fund list.  The output is a DataFrame containing fund information.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/4_funds_vnstock3.ipynb#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfund.listing().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company overview (VCI)\nDESCRIPTION: This snippet retrieves the overview information of a company using the overview() method of the Company object, which sources its data from VCI.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_24\n\nLANGUAGE: python\nCODE:\n```\ncompany.overview()\n```\n\n----------------------------------------\n\nTITLE: Listing Symbols by Industry\nDESCRIPTION: This snippet demonstrates how to retrieve a list of stock symbols by industry using the Listing class. It initializes a Listing object and then calls the symbols_by_industries() method to fetch the list of symbols for each industry.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.symbols_by_industries()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Bond Data\nDESCRIPTION: This code retrieves historical data for a listed bond using the `history()` method of the `Quote` object. It specifies the bond symbol, start date, end date, and interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nquote.history(symbol='CII424002', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Exporting All Symbols to CSV\nDESCRIPTION: This snippet demonstrates how to export a list of all stock symbols to a CSV file using the Listing class. It initializes a Listing object, retrieves the list of symbols using the all_symbols() method, and then exports the result to a CSV file named 'assets/data/all_symbols.csv'.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.all_symbols().to_csv('assets/data/all_symbols.csv', index=False)\n```\n\n----------------------------------------\n\nTITLE: Listing symbols by industry\nDESCRIPTION: This snippet retrieves a list of stock symbols categorized by industry, based on the ICB (Industry Classification Benchmark) classification. The symbols_by_industries() method is used for this purpose.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nstock.listing.symbols_by_industries()\n```\n\n----------------------------------------\n\nTITLE: Listing All Symbols\nDESCRIPTION: This snippet demonstrates how to retrieve a list of all listed stock symbols using the Listing class. It initializes a Listing object and then calls the all_symbols() method to fetch the list of symbols. The result is a Pandas DataFrame containing the symbols.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.all_symbols()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Price Depth\nDESCRIPTION: This snippet demonstrates how to retrieve the price depth (bid and ask prices) for a security in realtime using the price_depth() method of the Quote class.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nquote.price_depth()\n```\n\n----------------------------------------\n\nTITLE: Retrieving quarterly balance sheet data\nDESCRIPTION: This snippet retrieves the quarterly balance sheet data for a stock in English, dropping missing values, and displaying the first few rows of the resulting DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_46\n\nLANGUAGE: python\nCODE:\n```\nstock.finance.balance_sheet(period='quarter', lang='en', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Exporting Symbols by Exchange to CSV\nDESCRIPTION: This snippet demonstrates how to export a list of stock symbols by exchange to a CSV file using the Listing class. It initializes a Listing object, retrieves the list of symbols by exchange using the symbols_by_exchange() method, and then exports the result to a CSV file named 'assets/data/symbols_by_exchange.csv'.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.symbols_by_exchange().to_csv('assets/data/symbols_by_exchange.csv', index=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Dividends (TCBS Source)\nDESCRIPTION: This snippet retrieves dividends information for a company using the dividends() method of the Company class, using data from TCBS. The `.head()` displays the first 5 rows.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_44\n\nLANGUAGE: python\nCODE:\n```\ncompany.dividends().head()\n```\n\n----------------------------------------\n\nTITLE: Listing symbols by exchange\nDESCRIPTION: This snippet retrieves stock symbols filtered by exchange (e.g., HOSE, HNX, UPCOM). It returns all symbols, regardless of their listing status, using the symbols_by_exchange() method.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n# Dữ liệu bao gồm tất cả các mã không kể đang niêm yết hay không\nstock.listing.symbols_by_exchange()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company shareholders (TCBS)\nDESCRIPTION: This snippet retrieves information about the shareholders of a company using the shareholders() method of the Company object. Data comes from TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_37\n\nLANGUAGE: python\nCODE:\n```\ncompany.shareholders()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Trading Statistics\nDESCRIPTION: This code retrieves trading statistics for the company's stock using the `trading_stats()` method. This provides information on trading volume, price volatility, and other trading-related metrics.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_28\n\nLANGUAGE: python\nCODE:\n```\ncompany.trading_stats()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company news (VCI)\nDESCRIPTION: This snippet retrieves news articles related to the company using the news() method of the Company object. The .head(3) limits the output to the first 3 news articles.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_29\n\nLANGUAGE: python\nCODE:\n```\ncompany.news().head(3)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Reports Data\nDESCRIPTION: This code retrieves analysis reports related to the company using the `reports()` method. This provides access to research and analysis on the company's performance and prospects.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_26\n\nLANGUAGE: python\nCODE:\n```\ncompany.reports()\n```\n\n----------------------------------------\n\nTITLE: Exporting Symbols by Industry to CSV\nDESCRIPTION: This snippet shows how to export the list of stock symbols by industry to a CSV file using the Listing class. It initializes a Listing object, calls the symbols_by_industries() method, and saves to 'assets/data/symbols_by_industries.csv'.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.symbols_by_industries().to_csv('assets/data/symbols_by_industries.csv', index=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving company news (TCBS)\nDESCRIPTION: This snippet retrieves news related to a company using the news() method of the Company object. The .head() limits the output to the first few news articles. Data source is TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_42\n\nLANGUAGE: python\nCODE:\n```\ncompany.news().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Price Board Data\nDESCRIPTION: This snippet shows how to retrieve price board data for a list of stock symbols using the price_board() method of the Trading class. It accepts a list of symbols as input (e.g., ['ACB']).\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_22\n\nLANGUAGE: python\nCODE:\n```\ntrading.price_board(['ACB'])\n```\n\n----------------------------------------\n\nTITLE: Importing VCI Modules\nDESCRIPTION: This snippet imports specific modules from the vnstock.explorer.vci package. These modules include Listing, Quote, Company, Finance, and Trading, which provide access to various stock market data functionalities. Importing these modules allows for direct use of their classes and functions.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.vci import Listing, Quote, Company, Finance, Trading\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Events\nDESCRIPTION: This snippet retrieves events related to a company using the events() method of the Company class. The `.head(3)` displays the first 3 events.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_31\n\nLANGUAGE: python\nCODE:\n```\ncompany.events().head(3)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Balance Sheet Data (Quarterly, English)\nDESCRIPTION: This code retrieves the company's balance sheet data on a quarterly basis in English, dropping any rows with missing values. It uses the `balance_sheet()` method and displays the first few rows.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_35\n\nLANGUAGE: python\nCODE:\n```\nfinance.balance_sheet(period='quarter', lang='en', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Officers - Python\nDESCRIPTION: This code snippet retrieves information about the company's officers and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_20\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\ncompany.officers().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving historical future contract data\nDESCRIPTION: This snippet retrieves historical data for a futures contract (VN30F1M) within a specific date range. The history() method of the stock.quote object is used.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='VN30F1M', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Initializing Company Object - Python\nDESCRIPTION: This code snippet initializes a Vnstock object, specifying the symbol (VCB) and data source (TCBS), then accesses the `.company` attribute to create a `company` object. The `company` object allows accessing company-specific information.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\n\ncompany = Vnstock().stock(symbol='VCB', source='TCBS').company\n```\n\n----------------------------------------\n\nTITLE: Retrieving company ratio summary (VCI)\nDESCRIPTION: This snippet retrieves a summary of financial ratios for the company, using the ratio_summary() method of the Company object when using VCI as data source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_32\n\nLANGUAGE: python\nCODE:\n```\ncompany.ratio_summary()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Income Statement Data (Quarterly, English)\nDESCRIPTION: This code retrieves the company's income statement data on a quarterly basis in English, dropping rows with missing values, and displays the first few rows. It uses the `income_statement()` method.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_37\n\nLANGUAGE: python\nCODE:\n```\nfinance.income_statement(period='quarter', lang='en', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Insider Deals (TCBS Source)\nDESCRIPTION: This snippet retrieves insider deals information for a company using the insider_deals() method of the Company class, using data from TCBS. The `.head(3)` method displays only the first 3 records.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_39\n\nLANGUAGE: python\nCODE:\n```\ncompany.insider_deals().head(3)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Futures Data\nDESCRIPTION: This code retrieves historical data for a futures contract using the `history()` method of the `Quote` object.  It specifies the futures contract symbol, start date, end date, and interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nquote.history(symbol='VN30F1M', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\nLANGUAGE: python\nCODE:\n```\nquote.history(symbol='VN30F2411', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Initializing Company object (TCBS source)\nDESCRIPTION: This snippet initializes a Company object using TCBS as the data source.  The Company object is obtained from the Vnstock object after initializing it with the desired symbol and source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_34\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\n\ncompany = Vnstock().stock(symbol='VCB', source='TCBS').company\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Trading Stats\nDESCRIPTION: This snippet retrieves trading statistics for a company using the trading_stats() method of the Company class.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_34\n\nLANGUAGE: python\nCODE:\n```\ncompany.trading_stats()\n```\n\n----------------------------------------\n\nTITLE: Retrieving quarterly income statement data\nDESCRIPTION: This snippet retrieves quarterly income statement data for a stock, in English, dropping missing values, and displaying the first few rows of the resulting DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_50\n\nLANGUAGE: python\nCODE:\n```\nstock.finance.income_statement(period='quarter', lang='en', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company trading statistics (VCI)\nDESCRIPTION: This snippet retrieves trading statistics for the company using the trading_stats() method of the Company object. Data source is VCI.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_33\n\nLANGUAGE: python\nCODE:\n```\ncompany.trading_stats()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Price Board Data - Python\nDESCRIPTION: This code snippet retrieves price board data for a list of stock symbols (ACB, FPT, VNM).\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nstock.trading.price_board(['ACB, FPT, VNM'])\n```\n\n----------------------------------------\n\nTITLE: Retrieving Profile (TCBS Source)\nDESCRIPTION: This snippet shows how to retrieve the profile information for a company using the profile() method of the Company class, using data from TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_37\n\nLANGUAGE: python\nCODE:\n```\ncompany.profile()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Reports\nDESCRIPTION: This snippet retrieves analyst reports related to a company using the reports() method of the Company class.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_32\n\nLANGUAGE: python\nCODE:\n```\ncompany.reports()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Financial Ratios (Yearly, Vietnamese)\nDESCRIPTION: This snippet retrieves financial ratios for a company on a yearly basis, in Vietnamese, flattens the multi-level column headers, and drops any rows with missing values. The `.head()` method shows the first 5 rows.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_51\n\nLANGUAGE: python\nCODE:\n```\nfin.ratio(period='year', lang='vi', flatten_columns=True, drop_levels=[0], dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Printing Dataframe Metadata\nDESCRIPTION: This snippet demonstrates how to access and print the name and category attributes of a DataFrame returned by the Quote class. The name attribute represents the stock symbol, and the category attribute represents the asset type.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nprint(f'Mã chứng khoán: {df.name}')\nprint(f'Loại tài sản: {df.category}')\n```\n\n----------------------------------------\n\nTITLE: Printing Stock Metadata\nDESCRIPTION: This code retrieves and prints the name and category metadata associated with a stock data DataFrame. The DataFrame's `name` and `category` attributes contain the stock symbol and asset type, respectively.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nprint(f'Mã chứng khoán: {df.name}')\nprint(f'Loại tài sản: {df.category}')\n```\n\n----------------------------------------\n\nTITLE: Importing Main Functional Classes from Vnstock (Python)\nDESCRIPTION: This code snippet demonstrates importing specific classes from the Vnstock library. These core modules support dynamic switching between different data providers. This method allows for more flexibility in selecting data sources for different functions.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Listing, Quote, Company, Finance, Trading, Screener\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Profile Data\nDESCRIPTION: This code retrieves the company's profile information using the `profile()` method. This method is specific to the TCBS data source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_30\n\nLANGUAGE: python\nCODE:\n```\ncompany.profile()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Financial Ratios (Quarterly, English)\nDESCRIPTION: This snippet retrieves financial ratios for a company on a quarterly basis, in English, flattens the multi-level column headers, and drops any rows with missing values. The `.head()` method shows the first 5 rows.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_52\n\nLANGUAGE: python\nCODE:\n```\nfin.ratio(period='quarter', lang='en', flatten_columns=True, drop_levels=[0], dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Events - Python\nDESCRIPTION: This code snippet retrieves information about the company's events and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_21\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\ncompany.events().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving price depth data\nDESCRIPTION: This snippet retrieves price depth data for a given stock symbol (ACB). This data represents the bid and ask prices and volumes at each level. It uses the price_depth() method of the stock.quote object.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_20\n\nLANGUAGE: python\nCODE:\n```\n# Bước giá và khối lượng giao dịch: realtime\nstock.quote.price_depth('ACB')\n```\n\n----------------------------------------\n\nTITLE: Retrieving quarterly income statement data\nDESCRIPTION: This snippet retrieves quarterly income statement data for a stock, in English, dropping missing values, and displaying the first few rows of the resulting DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_48\n\nLANGUAGE: python\nCODE:\n```\nstock.finance.income_statement(period='quarter', lang='en', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving balance sheet data\nDESCRIPTION: This snippet retrieves balance sheet data for a stock, filtering by year, using Vietnamese language, and dropping rows with missing values. It uses the balance_sheet() method.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_45\n\nLANGUAGE: python\nCODE:\n```\nstock.finance.balance_sheet(period='year', lang='vi', dropna=True)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Quarterly Income Statement - Python\nDESCRIPTION: This code snippet retrieves the quarterly income statement data and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_28\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\nstock.finance.income_statement(period='quarter').head()\n```\n\n----------------------------------------\n\nTITLE: Finance object initialization\nDESCRIPTION: This snippet initializes a Vnstock object to create a Finance object, specifying the stock symbol (ACB) and data source (VCI). This Finance object will then be used to retrieve financial statements and ratios.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_44\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='ACB', source='VCI')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Income Statement Data (Yearly, Vietnamese)\nDESCRIPTION: This code retrieves the company's income statement data on a yearly basis in Vietnamese, dropping rows with missing values, and displays the first few rows. It uses the `income_statement()` method.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_36\n\nLANGUAGE: python\nCODE:\n```\nfinance.income_statement(period='year', lang='vi', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Annual Income Statement - Python\nDESCRIPTION: This code snippet retrieves the annual income statement data and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_27\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\nstock.finance.income_statement(period='year').head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving yearly cash flow statement\nDESCRIPTION: This snippet retrieves the yearly cash flow statement, dropping missing values and displaying the first few rows of the resulting DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_49\n\nLANGUAGE: python\nCODE:\n```\nstock.finance.cash_flow(period='year', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Dividends Data\nDESCRIPTION: This code retrieves data about the company's dividend payments using the `dividends()` method. The `.head()` method limits the output.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_32\n\nLANGUAGE: python\nCODE:\n```\ncompany.dividends().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Quarterly Balance Sheet - Python\nDESCRIPTION: This code snippet retrieves the quarterly balance sheet data and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_26\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\nstock.finance.balance_sheet(period='quarter').head()\n```\n\n----------------------------------------\n\nTITLE: Listing Stock Symbols by Exchange\nDESCRIPTION: This snippet demonstrates how to list stock symbols by exchange using the `symbols_by_exchange()` method.  The output includes all symbols for each exchange, regardless of their current listing status.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nlisting.symbols_by_exchange()\n```\n\n----------------------------------------\n\nTITLE: Retrieving yearly financial ratios\nDESCRIPTION: This snippet retrieves financial ratios on a yearly basis, using Vietnamese language, dropping missing values, and displaying the first few rows of the resulting DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_51\n\nLANGUAGE: python\nCODE:\n```\nstock.finance.ratio(period='year', lang='vi', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Initializing Company Class (VCI Source)\nDESCRIPTION: This snippet demonstrates how to initialize the Company class from vnstock.explorer.vci. It takes a stock symbol as an argument (e.g., 'ACB').\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_24\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.vci import Company\ncompany = Company('ACB')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Profile - Python\nDESCRIPTION: This code snippet retrieves the company profile data and transposes the result using `.T` for display purposes.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .T để xoay dòng thành cột\ncompany.profile().T\n```\n\n----------------------------------------\n\nTITLE: Retrieving Balance Sheet Data (Yearly, Vietnamese)\nDESCRIPTION: This code retrieves the company's balance sheet data on a yearly basis in Vietnamese, dropping any rows with missing values. It utilizes the `balance_sheet()` method with specified parameters.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_34\n\nLANGUAGE: python\nCODE:\n```\nfinance.balance_sheet(period='year', lang='vi', dropna=True)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Annual Balance Sheet - Python\nDESCRIPTION: This code snippet retrieves the annual balance sheet data and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_25\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\nstock.finance.balance_sheet(period='year').head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Annual Cash Flow Statement - Python\nDESCRIPTION: This code snippet retrieves the annual cash flow statement data and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_29\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\nstock.finance.cash_flow(period='year').head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company shareholders (VCI)\nDESCRIPTION: This snippet retrieves information about the shareholders of a company using the shareholders() method of the Company object, using VCI as the data source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ncompany.shareholders()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company profile (TCBS)\nDESCRIPTION: This snippet retrieves the profile information of a company using the profile() method of the Company object, using TCBS as a source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_36\n\nLANGUAGE: python\nCODE:\n```\ncompany.profile()\n```\n\n----------------------------------------\n\nTITLE: Initializing Trading Class\nDESCRIPTION: This snippet initializes an object of the Trading class. This class provides access to real-time trading information.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.vci import Trading\ntrading = Trading()\n```\n\n----------------------------------------\n\nTITLE: Listing Symbols by Exchange\nDESCRIPTION: This snippet shows how to retrieve a list of stock symbols by exchange using the Listing class. It initializes a Listing object and then calls the symbols_by_exchange() method to fetch the symbols for each exchange. The resulting DataFrame includes all symbols, regardless of their listing status.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.symbols_by_exchange()\n```\n\n----------------------------------------\n\nTITLE: Exporting Data to Excel/CSV with Vnstock (Python)\nDESCRIPTION: This code snippet demonstrates how to export data retrieved using the `vnstock` library to Excel and CSV formats. It first retrieves financial ratio data and stores it in a Pandas DataFrame. Then, it uses the `to_excel` and `to_csv` functions to export the data to the specified file paths.  Note that the file paths should be updated to the correct locations.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_14\n\nLANGUAGE: python\nCODE:\n```\n# Biến ratio_df lưu giá trị của phép tính vào bộ nhớ\nratio_df = stock.finance.ratio(period='year', lang='vi', dropna=True)\n\n# Xuất dữ liệu ra Excel\nratio_df.to_excel('/nơi_lưu_file_của_bạn/tên_file-ratio_df.xlsx`, index=False')\n# Xuất dữ liệu ra CSV\nratio_df.to_csv('/nơi_lưu_file_của_bạn/tên_file-ratio_df.csv`, index=False')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Financial Ratios (Annual) - Python\nDESCRIPTION: This code snippet retrieves annual financial ratios, drops rows with missing values (`dropna=True`), and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_31\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\nstock.finance.ratio(period='year', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving yearly income statement data\nDESCRIPTION: This snippet retrieves yearly income statement data for a stock, in Vietnamese, dropping missing values, and displaying the first few rows of the resulting DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_47\n\nLANGUAGE: python\nCODE:\n```\nstock.finance.income_statement(period='year', lang='vi', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Overview (TCBS Source)\nDESCRIPTION: This snippet shows how to retrieve the overview information for a company using the overview() method of the Company class, using data from TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_36\n\nLANGUAGE: python\nCODE:\n```\ncompany.overview()\n```\n\n----------------------------------------\n\nTITLE: Exporting Symbols by Group to CSV\nDESCRIPTION: This snippet demonstrates exporting the list of stock symbols belonging to a particular group (e.g., VN30) to a CSV file.  It retrieves the symbols and saves them to 'assets/data/vn30_symbols.csv'.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.symbols_by_group('VN30').to_csv('assets/data/vn30_symbols.csv', index=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving HNX Index History - Python\nDESCRIPTION: This code snippet retrieves historical data for the HNXINDEX index within a specified timeframe, using a daily interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='HNXINDEX', start='2024-01-02', end='2024-11-01', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Financial Ratios (Quarterly) - Python\nDESCRIPTION: This code snippet retrieves quarterly financial ratios and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_32\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\nstock.finance.ratio(period='quarter').head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Affiliates Data\nDESCRIPTION: This code retrieves data about the company's affiliate companies using the `affiliate()` method.  This method is not available for all data sources.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_22\n\nLANGUAGE: python\nCODE:\n```\ncompany.affiliate()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Insider Deals - Python\nDESCRIPTION: This code snippet retrieves information about insider deals and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\ncompany.insider_deals().head()\n```\n\n----------------------------------------\n\nTITLE: Searching Symbol ID with vnstock\nDESCRIPTION: This snippet searches for a symbol ID using the Listing class from the vnstock.explorer.msn module.  It initializes the Listing class with a specified API version and calls the search_symbol_id method to find the ID for a given symbol.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.msn import Listing\nListing(api_version='20250317').search_symbol_id('USDEUR')\n```\n\n----------------------------------------\n\nTITLE: Retrieving historical VNINDEX data\nDESCRIPTION: This snippet retrieves historical data for the VNINDEX index within a specified date range. It uses the history() method of the stock.quote object.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='VNINDEX', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Exporting Industries ICB to CSV\nDESCRIPTION: This snippet shows how to export a list of industries according to the ICB to a CSV file using the Listing class.  The resulting file will be named 'assets/data/industries_icb.csv'.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.industries_icb().to_csv('assets/data/industries_icb.csv', index=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Intraday Tick Data (vnstock)\nDESCRIPTION: Retrieves granular trade data per tick for a specific stock symbol using the `quote.intraday` method. The `page_size` parameter controls the number of ticks retrieved per page, and `show_log` determines whether to display logging information.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.intraday(symbol='ACB', page_size=10_000, show_log=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company News\nDESCRIPTION: This snippet retrieves news articles related to a company using the news() method of the Company class. The `.head(3)` displays the first 3 news articles.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_30\n\nLANGUAGE: python\nCODE:\n```\ncompany.news().head(3)\n```\n\n----------------------------------------\n\nTITLE: Importing vnstock library - Python\nDESCRIPTION: This code snippet imports the Vnstock class from the vnstock library. This class serves as the main interface for interacting with the library and accessing its functionalities.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\n```\n\n----------------------------------------\n\nTITLE: Retrieving UPCOM Index History - Python\nDESCRIPTION: This code snippet retrieves historical data for the UPCOMINDEX index within a specified timeframe, using a daily interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='UPCOMINDEX', start='2024-01-02', end='2024-11-01', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Initializing Stock Object for Finance Data - Python\nDESCRIPTION: This code snippet initializes a `Vnstock` object and accesses the `finance` attribute for accessing financial data. The stock symbol is set to 'VCI', and the data source is 'TCBS'.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_24\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='VCI', source='TCBS')\n```\n\n----------------------------------------\n\nTITLE: Installing vnstock Package\nDESCRIPTION: This code snippet installs the vnstock Python package using pip. The -U flag ensures that the package is upgraded to the latest version if it is already installed.  It's the first step before using any of the library's functions.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n!pip install -U vnstock\n```\n\n----------------------------------------\n\nTITLE: Retrieving company officers (VCI)\nDESCRIPTION: This snippet retrieves information about the officers (leaders) of a company using the officers() method of the Company object.  The filter_by parameter is used to filter officers by their status (working, all, or resigned).\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_28\n\nLANGUAGE: python\nCODE:\n```\ncompany.officers(filter_by='working').head() # filter_by='all' hoặc 'working' hoặc 'resigned'\n```\n\n----------------------------------------\n\nTITLE: Installing vnstock\nDESCRIPTION: This snippet installs the vnstock library using pip, ensuring that you have the latest version installed.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n!pip install -U vnstock\n```\n\n----------------------------------------\n\nTITLE: Retrieving Crypto History with vnstock\nDESCRIPTION: This snippet retrieves historical cryptocurrency data using the Vnstock class. It initializes the Vnstock class, calls the crypto method with the symbol and source, and then retrieves the historical data using the quote.history method.  It takes the start date, end date, and interval as parameters.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ncrypto = Vnstock().crypto(symbol='BTC', source='MSN')\ndf = crypto.quote.history(start='2023-01-01', end='2024-12-31', interval='1D')\ndf.head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company dividends (TCBS)\nDESCRIPTION: This snippet retrieves dividend information for a company using the dividends() method of the Company object. The .head() limits the output to the first few dividends. Data comes from TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_43\n\nLANGUAGE: python\nCODE:\n```\ncompany.dividends().head()\n```\n\n----------------------------------------\n\nTITLE: Running Fmarket Fund Tests with python3.10\nDESCRIPTION: This command executes the Fmarket fund tests using Python 3.10 and the unittest module. It specifies the `tests.explorer.fmarket.test_fund` module to be tested.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/tests/README.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npython3.10 -m unittest tests.explorer.fmarket.test_fund\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Shareholders\nDESCRIPTION: This snippet retrieves shareholder information for a company using the shareholders() method of the Company class.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_26\n\nLANGUAGE: python\nCODE:\n```\ncompany.shareholders()\n```\n\n----------------------------------------\n\nTITLE: Running a Specific Test Case with python3\nDESCRIPTION: This command runs a particular test case within a specified file.  It uses `run_tests.py` to target the `test_vnstock_init_invalid_source` test method within the `TestVnstock` class of the `tests.common.test_data_explorer` module.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/tests/README.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npython3 run_tests.py tests.common.test_data_explorer.TestVnstock.test_vnstock_init_invalid_source\n```\n\n----------------------------------------\n\nTITLE: Retrieving Price Board Data and Transposing - Python\nDESCRIPTION: This code retrieves price board data for specified stock symbols (VCB, ACB, TCB, BID). The `.T` transposes the resulting DataFrame, switching rows and columns for a different presentation.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nstock.trading.price_board(['VCB','ACB','TCB','BID']).T # Bỏ .T để xoay trở lại đúng kiểu hiển thị bảng giá\n```\n\n----------------------------------------\n\nTITLE: Retrieving International Market Data with Vnstock (Python)\nDESCRIPTION: This code snippet demonstrates how to retrieve international market data (FX rates) using the `vnstock` library. It fetches historical data for a specified currency pair within a given date range and interval. The example uses 'JPYVND' as the symbol and MSN as the data source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nfx = Vnstock().fx(symbol='JPYVND', source='MSN')\ndf = fx.quote.history(start='2025-01-02', end='2025-03-20', interval='1D')\ndf\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Overview\nDESCRIPTION: This snippet shows how to retrieve the overview information for a company using the overview() method of the Company class.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ncompany.overview()\n```\n\n----------------------------------------\n\nTITLE: Fetching Exchange Rates and Gold Prices with Vnstock (Python)\nDESCRIPTION: This code snippet demonstrates how to retrieve exchange rates and gold prices using the `vnstock` library. It imports the necessary functions from the `vnstock.explorer.misc` module and then calls the `vcb_exchange_rate` and `sjc_gold_price` functions to retrieve the data.  The example uses a specific date for the exchange rate.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.misc import *\n\n# Tỷ giá ngoại tệ VCB\nvcb_exchange_rate(date='2024-03-21')\n\n# Giá vàng SJC\nsjc_gold_price()\n```\n\n----------------------------------------\n\nTITLE: Listing Investment Funds with Vnstock (Python)\nDESCRIPTION: This code snippet shows how to retrieve a list of investment funds using the `vnstock` library. It imports the `Fund` class from the `vnstock.explorer.fmarket.fund` module and then calls the `listing` function to fetch the fund data.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.fmarket.fund import Fund\nfund = Fund()\nfund.listing()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Dividends - Python\nDESCRIPTION: This code snippet retrieves information about the company's dividends.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ncompany.dividends()\n```\n\n----------------------------------------\n\nTITLE: Retrieving historical warrant data\nDESCRIPTION: This snippet retrieves historical data for a warrant (CFPT2314) within a given date range, utilizing the history() method of stock.quote.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='CFPT2314', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Crypto History by ID with vnstock\nDESCRIPTION: This snippet retrieves historical cryptocurrency data using the Quote class.  It initializes the Quote class with a symbol ID ('c2111' represents BTC) and then retrieves the historical data using the history method, specifying the start date, end date, and interval. It takes the start date, end date, and interval as parameters.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb#_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n# c2111 là symbol_id của BTC\ncrypto = Quote(symbol_id='c2111')\ncrypto.history(start='2023-01-01', end='2024-12-31', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Importing Vnstock modules by data source - Python\nDESCRIPTION: This code snippet demonstrates how to import specific modules from the vnstock library based on the data source. It shows how to import modules from either the 'vci' or 'tcbs' explorer, which provides data from different sources.  This approach helps to ensure that the correct functions and data structures are being used for the selected data source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.vci import Listing, Quote, Company, Finance, Trading\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.tcbs import Quote, Company, Finance, Trading, Screener\n```\n\n----------------------------------------\n\nTITLE: Initializing Company object (VCI source)\nDESCRIPTION: This snippet initializes a Company object using the VCI data source. It retrieves company information for a given stock symbol (ACB) either through Vnstock wrapper or directly from the vci module.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_23\n\nLANGUAGE: python\nCODE:\n```\n# # Khởi tạo đối tượng\n# from vnstock import Vnstock\n# company = Vnstock().stock(symbol='ACB', source='VCI').company\n\n# hoặc\nfrom vnstock.explorer.vci import Company\ncompany = Company('ACB')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Officers Data\nDESCRIPTION: This code retrieves data about the company's officers using the `officers()` method.  The `filter_by` parameter allows filtering by working, all, or resigned officers. The `head()` method limits the output to the first 5 rows.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ncompany.officers(filter_by='working').head() # filter_by='all' hoặc 'working' hoặc 'resigned'\n```\n\n----------------------------------------\n\nTITLE: Retrieving company events (TCBS)\nDESCRIPTION: This snippet retrieves events related to a company using the events() method of the Company object. The .head() limits the output to the first few events. The data is sourced from TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_41\n\nLANGUAGE: python\nCODE:\n```\ncompany.events().head()\n```\n\n----------------------------------------\n\nTITLE: Importing Vnstock with Unified Interface (Python)\nDESCRIPTION: This code snippet shows the recommended method of importing and using the Vnstock library. It uses a unified interface, loading the library and defining the data source once for reuse. This approach is ideal for analyzing a single stock with consistent settings across functions.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='VCI', source='VCI')\nstock.quote.history(start='2020-01-01', end='2024-05-25')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Industry Allocation\nDESCRIPTION: This snippet retrieves the industry allocation breakdown for a specific fund ('SSISCA') using `fund.details.industry_holding('SSISCA')`. This shows how the fund's assets are distributed across different industries, offering insights into the fund's investment strategy.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/4_funds_vnstock3.ipynb#_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfund.details.industry_holding('SSISCA')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Affiliates\nDESCRIPTION: This snippet retrieves affiliate information for a company using the affiliate() method of the Company class. This method is available only when sourced from VCI.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_28\n\nLANGUAGE: python\nCODE:\n```\ncompany.affiliate()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Index History with vnstock\nDESCRIPTION: This snippet retrieves historical index data using the Vnstock class. It initializes the Vnstock class, calls the world_index method with the symbol and source, and then retrieves the historical data using the quote.history method.  It takes the start date, end date, and interval as parameters.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nindex = Vnstock().world_index(symbol='DJI', source='MSN')\ndf = index.quote.history(start='2023-01-01', end='2024-12-31', interval='1D')\ndf\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Officers\nDESCRIPTION: This snippet retrieves information about a company's officers (leadership) using the officers() method of the Company class. The filter_by parameter filters the officers based on their working status ('all', 'working', or 'resigned').  The `.head()` method displays only the first 5 rows of the DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_29\n\nLANGUAGE: python\nCODE:\n```\ncompany.officers(filter_by='working').head() # filter_by='all' hoặc 'working' hoặc 'resigned'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Subsidiaries (TCBS Source)\nDESCRIPTION: This snippet retrieves subsidiaries information for a company using the subsidiaries() method of the Company class, using data from TCBS. The `.head()` displays the first 5 rows.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_40\n\nLANGUAGE: python\nCODE:\n```\ncompany.subsidiaries().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Subsidiaries Data\nDESCRIPTION: This code retrieves information about the company's subsidiaries using the `subsidiaries()` method.  It provides a list of the company's subsidiary entities.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_21\n\nLANGUAGE: python\nCODE:\n```\ncompany.subsidiaries()\n```\n\n----------------------------------------\n\nTITLE: Listing symbols by group\nDESCRIPTION: This snippet retrieves stock symbols based on specific group classifications, such as VN30, HOSE, or ETF. The symbols_by_group() method is used with the desired group as a parameter.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n# Liệt kê tất cả mã chứng khoán theo nhóm phân loại. Ví dụ HOSE, VN30, VNMidCap, VNSmallCap, VNAllShare, VN100, ETF, HNX, HNX30, HNXCon, HNXFin, HNXLCap, HNXMSCap, HNXMan, UPCOM, FU_INDEX (mã chỉ số hợp đồng tương lai), CW (chứng quyền)\nstock.listing.symbols_by_group('VN30')\n```\n\n----------------------------------------\n\nTITLE: Retrieving company subsidiaries (TCBS)\nDESCRIPTION: This snippet retrieves information about a company's subsidiaries using the subsidiaries() method of the Company object. The .head() limits the output to the first few subsidiaries. Data is sourced from TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_39\n\nLANGUAGE: python\nCODE:\n```\ncompany.subsidiaries().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving News (TCBS Source)\nDESCRIPTION: This snippet retrieves news information for a company using the news() method of the Company class, using data from TCBS. The `.head()` displays the first 5 rows.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_43\n\nLANGUAGE: python\nCODE:\n```\ncompany.news().head()\n```\n\n----------------------------------------\n\nTITLE: Initializing Company Class (TCBS Source)\nDESCRIPTION: This snippet demonstrates how to initialize the Company class from vnstock using TCBS as the data source.  It takes a stock symbol as an argument (e.g., 'VCB').\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_35\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\n\ncompany = Vnstock().stock(symbol='VCB', source='TCBS').company\n```\n\n----------------------------------------\n\nTITLE: Retrieving VCB Exchange Rate\nDESCRIPTION: This code snippet imports the necessary module from the vnstock library and retrieves the exchange rate from Vietcombank (VCB) for a specific date. It requires the vnstock library to be installed. The `date` parameter specifies the date for which the exchange rate is to be fetched.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.misc import *\nvcb_exchange_rate(date='2024-05-25')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Asset Allocation\nDESCRIPTION: This snippet retrieves the asset allocation breakdown for a specific fund ('SSISCA') using `fund.details.asset_holding('SSISCA')`. This shows the distribution of assets across different asset classes such as stocks, bonds, and cash, providing a view of the fund's risk profile.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/4_funds_vnstock3.ipynb#_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfund.details.asset_holding('SSISCA')\n```\n\n----------------------------------------\n\nTITLE: Retrieving quarterly financial ratios\nDESCRIPTION: This snippet retrieves financial ratios on a quarterly basis, using English language, dropping missing values, and displaying the first few rows of the resulting DataFrame.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_52\n\nLANGUAGE: python\nCODE:\n```\nstock.finance.ratio(period='quarter', lang='en', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Screening stocks\nDESCRIPTION: This snippet screens stocks based on exchange name (HOSE, HNX, UPCOM) with a limit of 1700 results, using the stock screener function. The screener is available only using TCBS data source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_53\n\nLANGUAGE: python\nCODE:\n```\n# from vnstock import Screener\n\nscreener_df = stock.screener.stock(params={\"exchangeName\": \"HOSE,HNX,UPCOM\"}, limit=1700)\nscreener_df\n```\n\n----------------------------------------\n\nTITLE: Accessing Stock Metadata - Python\nDESCRIPTION: This code snippet demonstrates how to access metadata (name and category) associated with a stock DataFrame.  It prints the stock symbol and asset type associated with the data retrieved in the previous step.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n# Tất cả dataframe dữ liệu sẽ được gán thuộc tính tên và loại tài sản tương ứng\nprint(f'Mã chứng khoán: {df.name}')\nprint(f'Loại tài sản: {df.category}')\n```\n\n----------------------------------------\n\nTITLE: Retrieving company reports (VCI)\nDESCRIPTION: This snippet retrieves analytical reports related to the company using the reports() method of the Company object, using VCI as source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_31\n\nLANGUAGE: python\nCODE:\n```\ncompany.reports()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company events (VCI)\nDESCRIPTION: This snippet retrieves information about events related to the company using the events() method of the Company object. The .head(3) limits the output to the first 3 events.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_30\n\nLANGUAGE: python\nCODE:\n```\ncompany.events().head(3)\n```\n\n----------------------------------------\n\nTITLE: Retrieving price board data\nDESCRIPTION: This snippet retrieves price board data for a list of stock symbols (VCB, ACB, TCB, BID). It utilizes the price_board() method from the stock.trading object and transposes the result.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_22\n\nLANGUAGE: python\nCODE:\n```\nstock.trading.price_board(['VCB','ACB','TCB','BID']).T # Bỏ .T để xoay trở lại đúng kiểu hiển thị bảng giá\n```\n\n----------------------------------------\n\nTITLE: Performing Stock Screening (vnstock)\nDESCRIPTION: Performs stock screening based on specified parameters using the `Screener` class.  The example demonstrates how to specify exchange names and limit the number of results returned.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_25\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Screener\nstock.screener.stock(params={\"exchangeName\": \"HOSE,HNX,UPCOM\"}, limit=1700)\n```\n\n----------------------------------------\n\nTITLE: Listing Stock Symbols with vnstock\nDESCRIPTION: This snippet demonstrates how to use the `Listing` class from the `vnstock` library to retrieve a list of stock symbols.  It initializes the `Listing` object with the specified data source ('vci') and then retrieves all symbols.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Listing\nlisting = Listing(source='vci')\n```\n\n----------------------------------------\n\nTITLE: Installing Vnstock using pip - Bash\nDESCRIPTION: This command is used to install the Vnstock library using pip, the Python package installer. The -U flag ensures that the library is upgraded if it is already installed. This command needs to be executed in a terminal or command prompt.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -U vnstock\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Formatting Price Board Data\nDESCRIPTION: This snippet demonstrates retrieving price board data for multiple symbols and then formatting it by flattening columns and dropping levels for a more readable output. The .T transposes the table.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ntrading.price_board(['VCB','ACB','TCB','BID'], flatten_columns=True, drop_levels=[0]).T # Bỏ .T để xoay trở lại đúng kiểu hiển thị bảng giá\n```\n\n----------------------------------------\n\nTITLE: Retrieving Exchange Rates and Gold Prices (vnstock)\nDESCRIPTION: Retrieves exchange rates and gold prices using functions from the `vnstock.explorer.misc` module. The example demonstrates how to fetch the VCB exchange rate for a specific date and the SJC gold price.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_28\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.misc import *\n\n# VCB exchange rate\nvcb_exchange_rate(date='2024-03-21')\n\n# SJC gold price\nsjc_gold_price()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Income Statement (Yearly, Vietnamese)\nDESCRIPTION: This snippet retrieves the income statement for a company on a yearly basis, in Vietnamese. The `.head()` method shows the first 5 rows.  The `dropna=True` argument removes rows with missing values.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_48\n\nLANGUAGE: python\nCODE:\n```\nfin.income_statement(period='year', lang='vi', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Income Statement (Quarterly, English)\nDESCRIPTION: This snippet retrieves the income statement for a company on a quarterly basis, in English. The `.head()` method shows the first 5 rows. The `dropna=True` argument removes rows with missing values.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_49\n\nLANGUAGE: python\nCODE:\n```\nfin.income_statement(period='quarter', lang='en', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Balance Sheet (Quarterly, English)\nDESCRIPTION: This snippet retrieves the balance sheet for a company on a quarterly basis, in English. The `.head()` method shows the first 5 rows.  The `dropna=True` argument removes rows with missing values.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_47\n\nLANGUAGE: python\nCODE:\n```\nfin.balance_sheet(period='quarter', lang='en', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Stock Data\nDESCRIPTION: This code retrieves historical stock data for a specified period and interval using the `history()` method of the `Quote` object. It requires a start date, end date, and interval (e.g., '1D' for daily).\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_8\n\nLANGUAGE: python\nCODE:\n```\ndf = quote.history(start='2024-01-01', end='2025-03-19', interval='1D')\ndf\n```\n\n----------------------------------------\n\nTITLE: Initializing Company Object with VCI Source\nDESCRIPTION: This snippet initializes the `Company` class from the `vnstock` library for retrieving company-related information, using VCI as the data source.  It specifies the stock symbol ('ACB').\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Company\ncompany = Company(symbol='ACB', source='vci')\n```\n\n----------------------------------------\n\nTITLE: Initializing Quote for a Stock\nDESCRIPTION: This snippet demonstrates how to initialize a Quote object for a specific stock symbol (e.g., FPT). The Quote class is used to retrieve price-related information for a particular security. The symbol is specified during initialization.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nquote = Quote(symbol='FPT')\n```\n\n----------------------------------------\n\nTITLE: Retrieving company subsidiaries (VCI)\nDESCRIPTION: This snippet retrieves a list of subsidiaries for a company using the subsidiaries() method of the Company object, which sources data from VCI.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_26\n\nLANGUAGE: python\nCODE:\n```\ncompany.subsidiaries()\n```\n\n----------------------------------------\n\nTITLE: Initializing Company Object with TCBS Source\nDESCRIPTION: This snippet initializes the `Company` class from the `vnstock` library for retrieving company-related information, using TCBS as the data source. It specifies the stock symbol ('ACB').\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_29\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Company\ncompany = Company(symbol='ACB', source='tcbs')\n```\n\n----------------------------------------\n\nTITLE: Importing from Specific Data Providers (vnstock)\nDESCRIPTION: Imports specific modules from vnstock.explorer for accessing financial data from various providers like VCI and TCBS. Users can choose providers depending on data requirements.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.vci import Listing, Quote, Company, Finance, Trading\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.tcbs import Quote, Company, Finance, Trading, Screener\n```\n\n----------------------------------------\n\nTITLE: Retrieving Financial Ratios (Yearly, Vietnamese)\nDESCRIPTION: This code retrieves the company's financial ratios on a yearly basis in Vietnamese, dropping rows with missing values, and displays the first few rows. The `ratio()` method is used.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_39\n\nLANGUAGE: python\nCODE:\n```\nfinance.ratio(period='year', lang='vi', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Installing vnstock package\nDESCRIPTION: This command installs the vnstock library using pip, a package installer for Python.  It's a necessary prerequisite for running the other code snippets. The vnstock library provides access to Vietnamese stock market data.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/4_funds_vnstock3.ipynb#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n!pip install vnstock\n```\n\n----------------------------------------\n\nTITLE: Retrieving Forex History by ID with vnstock\nDESCRIPTION: This snippet retrieves historical Forex data using the Quote class from the vnstock.explorer.msn.quote module. It initializes the Quote class with a symbol ID and then retrieves the history data using the history method, specifying the start and end dates. The symbol_id is 'avyn9c' which represents USDEUR\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb#_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n# avyufr là symbol_id của USDEUR\nfrom vnstock.explorer.msn.quote import *\n\nfx = Quote(symbol_id='avyn9c')\nfx.history(start='2020-01-01', end='2024-12-31')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Index Data\nDESCRIPTION: This code retrieves historical data for a stock market index using the `history()` method of the `Quote` object.  It requires the index symbol, start date, end date, and interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nquote.history(symbol='VNINDEX', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\nLANGUAGE: python\nCODE:\n```\nquote.history(symbol='HNXINDEX', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\nLANGUAGE: python\nCODE:\n```\nquote.history(symbol='UPCOMINDEX', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Financial Ratios (Quarterly, English)\nDESCRIPTION: This code retrieves the company's financial ratios on a quarterly basis in English, dropping rows with missing values, and displays the first few rows using `ratio()` function.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_40\n\nLANGUAGE: python\nCODE:\n```\nfinance.ratio(period='quarter', lang='en', dropna=True).head()\n```\n\n----------------------------------------\n\nTITLE: Initializing Vnstock object with source\nDESCRIPTION: This code snippet initializes a Vnstock object and specifies the data source as VCI, along with the stock symbol ACB. This object will be used for subsequent data retrieval operations.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='ACB', source='VCI')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Stock Quote Data\nDESCRIPTION: This snippet initializes the `Quote` class from the `vnstock` library for retrieving stock quote data.  It specifies the data source ('vci') and the stock symbol ('ACB') for which to retrieve data.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Quote\nquote = Quote(source='vci', symbol='ACB')\n```\n\n----------------------------------------\n\nTITLE: Installing VNStock Library\nDESCRIPTION: This code snippet installs the vnstock library using pip. The -U flag ensures that the library is upgraded to the latest version if it is already installed. This is a prerequisite for using the functions related to retrieving data.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n!pip install -U vnstock\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Covered Warrant Data\nDESCRIPTION: This code retrieves historical data for a covered warrant using the `history()` method of the `Quote` object. It specifies the warrant symbol, start date, end date, and interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nquote.history(symbol='CFPT2314', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Listing Industries ICB\nDESCRIPTION: This snippet shows how to retrieve a list of industries according to the ICB (Industry Classification Benchmark) using the Listing class. The industries_icb() method returns a DataFrame containing industry information.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nlisting = Listing()\nlisting.industries_icb()\n```\n\n----------------------------------------\n\nTITLE: Listing Industries by ICB Code\nDESCRIPTION: This code snippet retrieves a list of industries based on their ICB (Industry Classification Benchmark) codes using the `industries_icb()` method.  It provides a mapping between ICB codes and industry names.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nlisting.industries_icb()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company affiliates (VCI)\nDESCRIPTION: This snippet retrieves information about the affiliated companies of a given company using the affiliate() method. This method is only available when using VCI as the data source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_27\n\nLANGUAGE: python\nCODE:\n```\n# Phương thức này không có trong nguồn TCBS\ncompany.affiliate()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Forex History with vnstock\nDESCRIPTION: This snippet retrieves historical Forex data using the Vnstock class, it initializes the Vnstock class, calls the fx method with the symbol and source, and then retrieves the history data using the quote.history method, which takes the start date, end date, and interval as parameters.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nfx = Vnstock().fx(symbol='JPYVND', source='MSN')\ndf = fx.quote.history(start='2025-01-02', end='2025-03-20', interval='1D')\ndf.head()\n```\n\n----------------------------------------\n\nTITLE: Initializing Finance Class\nDESCRIPTION: This snippet initializes the Finance class, which is used to retrieve financial statements and ratios. The `symbol` parameter specifies the stock symbol (e.g., 'VCI').\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_45\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.vci import Finance\nfin =  Finance(symbol='VCI')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Officers (TCBS Source)\nDESCRIPTION: This snippet retrieves officers (leadership) information for a company using the officers() method of the Company class, using data from TCBS. The `.head()` displays the first 5 rows.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_41\n\nLANGUAGE: python\nCODE:\n```\ncompany.officers().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving company officers (TCBS)\nDESCRIPTION: This snippet retrieves information about the officers of a company using the officers() method of the Company object. The .head() limits the output to the first few officers. Data source is TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_40\n\nLANGUAGE: python\nCODE:\n```\ncompany.officers().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving historical bond data\nDESCRIPTION: This snippet retrieves historical data for a listed bond (CII424002) within a specified date range, using the history() method of the stock.quote object.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='CII424002', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving International Market Data (vnstock)\nDESCRIPTION: Retrieves data for international markets, such as stocks, FX, and indices, using the `Vnstock` class. The example demonstrates how to fetch historical data for a specific currency pair and time range.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_27\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nfx = Vnstock().fx(symbol='JPYVND', source='MSN')\ndf = fx.quote.history(start='2025-01-02', end='2025-03-20', interval='1D')\ndf\n```\n\n----------------------------------------\n\nTITLE: Retrieving Events (TCBS Source)\nDESCRIPTION: This snippet retrieves events information for a company using the events() method of the Company class, using data from TCBS. The `.head()` displays the first 5 rows.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_42\n\nLANGUAGE: python\nCODE:\n```\ncompany.events().head()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Balance Sheet (Yearly, Vietnamese)\nDESCRIPTION: This snippet retrieves the balance sheet for a company on a yearly basis, in Vietnamese.  The `dropna=True` argument removes rows with missing values.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_46\n\nLANGUAGE: python\nCODE:\n```\nfin.balance_sheet(period='year', lang='vi', dropna=True)\n```\n\n----------------------------------------\n\nTITLE: Retrieving historical HNXINDEX data\nDESCRIPTION: This snippet retrieves historical data for the HNXINDEX index within a specified date range, using the history() method of the stock.quote object.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='HNXINDEX', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving insider deals (TCBS)\nDESCRIPTION: This snippet retrieves insider trading deals for the company using the insider_deals() method of the Company object.  The .head(3) limits the output to the first 3 deals.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_38\n\nLANGUAGE: python\nCODE:\n```\ncompany.insider_deals().head(3)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Bao Tin Minh Chau Gold Price\nDESCRIPTION: This code snippet retrieves the gold prices from Bao Tin Minh Chau. The vnstock library must be installed. This function fetches the gold price data from Bao Tin Minh Chau.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nbtmc_goldprice()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Subsidiaries Information - Python\nDESCRIPTION: This code snippet retrieves information about the company's subsidiaries and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\ncompany.subsidiaries().head()\n```\n\n----------------------------------------\n\nTITLE: Initializing Trading Object\nDESCRIPTION: This snippet initializes the `Trading` class from the `vnstock` library for accessing trading-related information.  It specifies the stock symbol ('ACB') and the data source ('vci').\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Trading\ntrading = Trading(symbol='ACB', source='vci')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Insider Deals Data\nDESCRIPTION: This code retrieves data about insider trading activity using the `insider_deals()` method. The `.head(3)` method limits the output to the first 3 transactions.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_31\n\nLANGUAGE: python\nCODE:\n```\ncompany.insider_deals().head(3)\n```\n\n----------------------------------------\n\nTITLE: Initializing Stock Object - Python\nDESCRIPTION: This code snippet initializes a Vnstock object for accessing stock data. It specifies the stock symbol (ACB) and data source (TCBS).\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='ACB', source='TCBS')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Price Board Data\nDESCRIPTION: This code retrieves price board data for a list of stock symbols using the `price_board()` method. It provides a snapshot of key trading data for the specified stocks.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_17\n\nLANGUAGE: python\nCODE:\n```\ntrading.price_board(['ACB'])\n```\n\nLANGUAGE: python\nCODE:\n```\ntrading.price_board(['VCB','ACB','TCB','BID']).T # Bỏ .T để xoay trở lại đúng kiểu hiển thị bảng giá\n```\n\n----------------------------------------\n\nTITLE: Retrieving Index History - Python\nDESCRIPTION: This code snippet retrieves historical data for the VNINDEX index within a specified timeframe, using a daily interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='VNINDEX', start='2024-01-02', end='2024-11-01', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving historical UPCOMINDEX data\nDESCRIPTION: This snippet retrieves historical data for the UPCOMINDEX index within a specific date range using the history() method.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='UPCOMINDEX', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Installing vnstock library - Python\nDESCRIPTION: This code snippet installs the vnstock library using pip. The -U flag ensures that the library is updated to the latest version if it is already installed.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n!pip install -U vnstock\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company News Data\nDESCRIPTION: This code retrieves news articles related to the company using the `news()` method.  The `head(3)` method limits the output to the first 3 news items.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_24\n\nLANGUAGE: python\nCODE:\n```\ncompany.news().head(3)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Overview Data\nDESCRIPTION: This code retrieves an overview of company information using the `overview()` method of the `Company` object.  This might include summary data and key metrics.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_19\n\nLANGUAGE: python\nCODE:\n```\ncompany.overview()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Events Data\nDESCRIPTION: This code retrieves data about events related to the company using the `events()` method. The `.head(3)` method displays only the first 3 events.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ncompany.events().head(3)\n```\n\n----------------------------------------\n\nTITLE: Installing vnstock library\nDESCRIPTION: This snippet installs the vnstock library using pip. It ensures the library is up to date with the -U flag. This installation is necessary to use any of the vnstock functionalities.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n!pip install -U vnstock\n```\n\n----------------------------------------\n\nTITLE: Initializing Quote for a Futures Contract\nDESCRIPTION: This snippet demonstrates how to initialize a Quote object for a futures contract (e.g., VN30F1M or VN30F2506).  The symbol is specified during initialization of the Quote object.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nquote = Quote(symbol='VN30F1M')\n# hoặc\n# quote = Quote(symbol='VN30F2506')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Shareholders (TCBS Source)\nDESCRIPTION: This snippet retrieves shareholder information for a company using the shareholders() method of the Company class, using data from TCBS.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_38\n\nLANGUAGE: python\nCODE:\n```\ncompany.shareholders()\n```\n\n----------------------------------------\n\nTITLE: Listing All Stock Symbols (vnstock)\nDESCRIPTION: Retrieves a list of all available stock symbols using the `Listing` class from the vnstock library. This is useful for generating a comprehensive list of tickers for batch operations.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Listing\nlisting = Listing()\nlisting.all_symbols()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Shareholders Data\nDESCRIPTION: This snippet retrieves data about the company's shareholders using the `shareholders()` method of the `Company` object.  This includes information about major shareholders.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ncompany.shareholders()\n```\n\n----------------------------------------\n\nTITLE: Running a Test File with python3\nDESCRIPTION: This command executes the tests in the specified test file using the `run_tests.py` script. It targets the `tests.common.test_data_explorer` module for execution.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/tests/README.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npython3 run_tests.py tests.common.test_data_explorer\n```\n\n----------------------------------------\n\nTITLE: Printing stock info to DF\nDESCRIPTION: This snippet extract and print the stock name and category as dataframe attributes.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n# Tất cả dataframe dữ liệu sẽ được gán thuộc tính tên và loại tài sản tương ứng\nprint(f'Mã chứng khoán: {df.name}')\nprint(f'Loại tài sản: {df.category}')\n```\n\n----------------------------------------\n\nTITLE: Retrieving company overview (TCBS)\nDESCRIPTION: This snippet retrieves the overview information of a company using the overview() method of the Company object, using TCBS as the data source.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_35\n\nLANGUAGE: python\nCODE:\n```\ncompany.overview()\n```\n\n----------------------------------------\n\nTITLE: Retrieving historical future contract data\nDESCRIPTION: This snippet retrieves historical data for a futures contract (VN30F2411) within a specific date range. The history() method of the stock.quote object is used.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='VN30F2411', start='2024-01-02', end='2025-03-19', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Mutual Fund Data (vnstock)\nDESCRIPTION: Retrieves a listing of mutual funds using the `Fund` class from the `vnstock.explorer.fmarket.fund` module.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_26\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.fmarket.fund import Fund\nfund = Fund()\nfund.listing()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Subsidiaries\nDESCRIPTION: This snippet retrieves subsidiary information for a company using the subsidiaries() method of the Company class.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_27\n\nLANGUAGE: python\nCODE:\n```\ncompany.subsidiaries()\n```\n\n----------------------------------------\n\nTITLE: Initializing Quote for a Covered Warrant\nDESCRIPTION: This snippet demonstrates how to initialize a Quote object for a covered warrant (e.g., CFPT2314).\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nquote = Quote(symbol='CFPT2314')\n```\n\n----------------------------------------\n\nTITLE: Retrieving SJC Gold Price Snapshot\nDESCRIPTION: This code snippet imports the required module from the vnstock library and retrieves the snapshot of SJC gold prices. It depends on the vnstock library. The function `sjc_gold_price()` fetches the current gold price data from SJC.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock.explorer.misc import *\n\nsjc_gold_price()\n```\n\n----------------------------------------\n\nTITLE: Initializing Quote for a Bond\nDESCRIPTION: This snippet demonstrates how to initialize a Quote object for a listed bond (e.g., CII424002).\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nquote = Quote(symbol='CII424002')\n```\n\n----------------------------------------\n\nTITLE: Initializing Fund object\nDESCRIPTION: This snippet initializes the Fund object from the vnstock library. It demonstrates two ways of importing and initializing: directly from the core `explorer` module and using the `Vnstock` wrapper. It sets up the environment for subsequent fund-related operations.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/4_funds_vnstock3.ipynb#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# Gọi từ core module\nfrom vnstock.explorer import Fund\nfund = Fund()\n\n# # Gọi từ Vnstock wrapper module - version 3.0.7\n# from vnstock import Vnstock\n# fund = Vnstock().fund()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Top Holdings\nDESCRIPTION: This snippet retrieves the top 10 holdings of a specific fund ('SSISCA') using `fund.details.top_holding('SSISCA')`.  It provides insight into the fund's major investments, indicating the allocation of assets to specific companies.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/4_funds_vnstock3.ipynb#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfund.details.top_holding('SSISCA')\n```\n\n----------------------------------------\n\nTITLE: Installing Vnstock Package using Pip (Bash)\nDESCRIPTION: This code snippet is a bash command that demonstrates how to install or upgrade the Vnstock library using pip, the Python package installer. The `-U` flag ensures that the package is upgraded to the latest version if it's already installed.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\npip install -U vnstock\n```\n\n----------------------------------------\n\nTITLE: Filtering Funds by name\nDESCRIPTION: This snippet filters the list of funds based on a provided string. The `fund.filter('DC')` method filters funds whose name contains 'DC'. This returns a subset of funds matching the specified criteria.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/4_funds_vnstock3.ipynb#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# Nhập 1 phần tên viết tắt để lọc\nfund.filter('DC')\n```\n\n----------------------------------------\n\nTITLE: Installing vnstock library\nDESCRIPTION: This code snippet installs the vnstock library using pip. It ensures the library is up to date by using the -U flag. This is a prerequisite for using any of the vnstock functionalities.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n!pip install -U vnstock\n```\n\n----------------------------------------\n\nTITLE: Listing industries by ICB code\nDESCRIPTION: This snippet retrieves a list of industries based on the ICB (Industry Classification Benchmark) coding system. The industries_icb() method is used to obtain this list.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nstock.listing.industries_icb()\n```\n\n----------------------------------------\n\nTITLE: Initializing Finance Object\nDESCRIPTION: This snippet initializes the `Finance` class from the `vnstock` library to access financial statement data. It specifies the stock symbol ('ACB') and the data source ('vci').\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb#_snippet_33\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Finance\nfinance = Finance(symbol='ACB', source='vci')\n```\n\n----------------------------------------\n\nTITLE: Importing vnstock Wrapper\nDESCRIPTION: This snippet imports the main Vnstock wrapper, providing access to the library's core functionalities. It's the primary way to interact with the vnstock library.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n## Nạp Wrapper làm việc chính (UI chính của thư viện)\nfrom vnstock import Vnstock\n```\n\n----------------------------------------\n\nTITLE: Retrieving Warrant History - Python\nDESCRIPTION: This code snippet retrieves historical data for a warrant (CFPT2314) within a specified timeframe, using a daily interval.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nstock.quote.history(symbol='CFPT2314', start='2024-01-02', end='2024-11-01', interval='1D')\n```\n\n----------------------------------------\n\nTITLE: Importing Vnstock main class - Python\nDESCRIPTION: This code snippet demonstrates how to import the main Vnstock class from the vnstock library. It then shows how to instantiate the class and access stock data for a specific symbol (VCI) from a specified data source (VCI). Finally, it retrieves the historical stock data between the specified start and end dates.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Vnstock\nstock = Vnstock().stock(symbol='VCI', source='VCI')\nstock.quote.history(start='2020-01-01', end='2024-05-25')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company News - Python\nDESCRIPTION: This code snippet retrieves news related to the company and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_22\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\ncompany.news().head()\n```\n\n----------------------------------------\n\nTITLE: Fetching Price Board Data with Vnstock (Python)\nDESCRIPTION: This code snippet demonstrates how to fetch price board data for a list of stocks using the `vnstock` library. It imports the `Trading` class and then instantiates it with a specified data source.  The `price_board` function is then called with a list of stock symbols to retrieve their current price information.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Trading\nTrading(source='VCI').price_board(['VCB','ACB','TCB','BID'])\n```\n\n----------------------------------------\n\nTITLE: Retrieving Company Shareholders - Python\nDESCRIPTION: This code snippet retrieves information about the company's shareholders.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_17\n\nLANGUAGE: python\nCODE:\n```\ncompany.shareholders()\n```\n\n----------------------------------------\n\nTITLE: Importing vnstock modules\nDESCRIPTION: This snippet demonstrates how to import specific modules or the entire library, it imports the Vnstock wrapper which is the main user interface for the library.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n## Nạp toàn bộ thư viện\n# from vnstock import *\n\n## Nạp Wrapper làm việc chính (UI chính của thư viện)\nfrom vnstock import Vnstock\n```\n\n----------------------------------------\n\nTITLE: Importing Vnstock classes - Python\nDESCRIPTION: This code snippet demonstrates how to import several classes from the vnstock library, including Listing, Quote, Company, Finance, Trading, and Screener. These classes provide various functionalities for accessing and analyzing stock market data.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/README.md#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom vnstock import Listing, Quote, Company, Finance, Trading, Screener\n```\n\n----------------------------------------\n\nTITLE: Retrieving Quarterly Income Statement (Duplicated) - Python\nDESCRIPTION: This code snippet is a duplicate.  It retrieves the quarterly income statement data and displays the first few rows using `.head()`.\nSOURCE: https://github.com/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb#_snippet_30\n\nLANGUAGE: python\nCODE:\n```\n# Bỏ .head() để hiển thị toàn bộ dữ liệu\nstock.finance.income_statement(period='quarter').head()\n```"
  }
]
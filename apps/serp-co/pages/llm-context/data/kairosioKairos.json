[
  {
    "owner": "kairos-io",
    "repo": "kairos",
    "content": "TITLE: Kairos Cloud Config for Keylime Agent\nDESCRIPTION: Cloud-init configuration for Kairos that sets up the Keylime agent including user configuration, certificates, agent configuration, and IMA policy settings.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/keylime/README.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ninstall:\n  bind_mounts:\n    - /var/lib/keylime\n  grub_options:\n    extra_cmdline: \"ima_appraise=fix ima_template=ima-sig ima_policy=tcb\"\n\nstages:\n  initramfs:\n    - name: \"Set keylime user and password\"\n      users:\n        kairos:\n          passwd: \"kairos\"\n          groups:\n            - \"admin\"\n        keylime:\n          groups:\n            - \"tss\"\n  boot:\n    - name: \"Set Keylime config\"\n      files:\n        - path: /var/lib/keylime/cv_ca/cacert.crt\n          content: |\n            -----BEGIN CERTIFICATE-----\n            MIID8zCCAtugAwIBAgIBATANBgkqhkiG9w0BAQsFADBzMQswCQYDVQQGEwJVUzEm\n            MCQGA1UEAwwdS2V5bGltZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxCzAJBgNVBAgM\n            Ak1BMRIwEAYDVQQHDAlMZXhpbmd0b24xDjAMBgNVBAoMBU1JVExMMQswCQYDVQQL\n            DAI1MzAeFw0yNDEwMzAxMTQyNDNaFw0zNDEwMjgxMTQyNDNaMHMxCzAJBgNVBAYT\n            AlVTMSYwJAYDVQQDDB1LZXlsaW1lIENlcnRpZmljYXRlIEF1dGhvcml0eTELMAkG\n            A1UECAwCTUExEjAQBgNVBAcMCUxleGluZ3RvbjEOMAwGA1UECgwFTUlUTEwxCzAJ\n            BgNVBAsMAjUzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjiRxfpyt\n            ro1FSEprtrDOUo66AmobNO4j2oNeFBbwG31a4bZqHcD7Tjke9V9cwFRM8TtBrg0r\n            L5dlZZyM5betmGbgZTwGtPFZthbPvusEOHUrNrwR0imTJtYbqUk5nsRtyyxDJdec\n            kh4ibfugyYJu1gEKkZe4BiUisAp5tNifaEdfs9uTz4Ijr4jSniveL1Kio6ngARvM\n            xpQgYj4M7fn5q1rIVeZyTFNWFBUY13rViQkvK69b2oz+RwARPgDYkl6kRW/7Z07f\n            T7CrEzhbxfbAlPKpfAhcgusHUcajQXfh8T8OtlTNNbTedlFS4dHWkEUKRfoUA09h\n            p2ZNCIaGPqQ34QIDAQABo4GRMIGOMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\n            FHxXU4zLckC2WtgM6kxL4c1nxmB1MCsGA1UdHwQkMCIwIKAeoByGGmh0dHA6Ly9s\n            b2NhbGhvc3Q6MzgwODAvY3JsMA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBR8\n            V1OMy3JAtlrYDOpMS+HNZ8ZgdTANBgkqhkiG9w0BAQsFAAOCAQEAb9ZyuWPLQDd+\n            H2MHr4VEADuXY/EXlBKf+YH9tfWfiWkUkOVPFanX9+dO/EDcOMKItTd6u8FI05SL\n            UCjLsjLSwufxC8SpCo3XgkL/1q2wRlZ0IZcHPZV+7qATkqBl54k/ImZwENs0oXuT\n            uDcfdJ4FgP/M47HnJaP9/8IRxOgLn370zhxrjx56+A1BPiRAYfWyqCYOEHbFd+Cf\n            q9pFQQOHdmarzF/EScq6UvndtXRAthu1I1ArqzSisLV55O5eu6L+5h2ZAoBHlCD6\n            Imgvg/m5BbmUo3G5QlfGpU1H7edNsn+OPfC9SDI9jYSKJ8lbyb/fn1QRnjEEnzqs\n            AV0t3VsfgQ==\n            -----END CERTIFICATE-----\n          owner_string: \"keylime\"\n          permissions: 0640\n        - path: /etc/keylime/agent.conf.d/10-config.conf\n          content: |\n            [agent]\n            ip = '0.0.0.0'\n            registrar_ip = '192.168.100.184'\n            uuid = '61388a67-baa4-4f2b-8221-d539b7b4d98b'\n          owner_string: \"keylime\"\n          permissions: 0640\n    - name: \"Set keylime owner to /var/lib/keylime\"\n      commands:\n        - chown -R keylime:keylime /var/lib/keylime\n    - name: \"Set default IMA policy\"\n      path: /etc/ima/ima-policy\n      permissions: 0644\n      content: |\n        # PROC_SUPER_MAGIC\n        dont_measure fsmagic=0x9fa0\n        # SYSFS_MAGIC\n        dont_measure fsmagic=0x62656572\n        # DEBUGFS_MAGIC\n        dont_measure fsmagic=0x64626720\n        # TMPFS_MAGIC\n        dont_measure fsmagic=0x01021994\n        # RAMFS_MAGIC\n        dont_measure fsmagic=0x858458f6\n        # SECURITYFS_MAGIC\n        dont_measure fsmagic=0x73636673\n        # SELINUX_MAGIC\n        dont_measure fsmagic=0xf97cff8c\n        # CGROUP_SUPER_MAGIC\n        dont_measure fsmagic=0x27e0eb\n        # OVERLAYFS_MAGIC\n        # when containers are used we almost always want to ignore them\n        dont_measure fsmagic=0x794c7630\n        # Don't measure log, audit or tmp files\n        dont_measure obj_type=var_log_t\n        dont_measure obj_type=auditd_log_t\n        dont_measure obj_type=tmp_t\n        # MEASUREMENTS\n        measure func=BPRM_CHECK\n        measure func=FILE_MMAP mask=MAY_EXEC\n        measure func=MODULE_CHECK uid=0\n    - name: \"Enable keylime-agent service\"\n      systemctl:\n        enable:\n        - keylime-agent\n        start:\n        - keylime-agent\n```\n\n----------------------------------------\n\nTITLE: Configuring FIPS Mode in Kairos Cloud-Config\nDESCRIPTION: A cloud-config YAML example that shows how to enable FIPS mode during Kairos installation by adding the 'fips=1' flag to the kernel boot options. SELinux must be disabled with 'selinux=0' as it's not yet supported.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/builds/fedora-fips/README.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#cloud-config\n\ninstall:\n  # ...\n  # Set grub options\n  grub_options:\n    # additional Kernel option cmdline to apply\n    extra_cmdline: \"fips=1 selinux=0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring FIPS Mode with Cloud-Config in Kairos Ubuntu Focal\nDESCRIPTION: This cloud-config snippet shows how to enable FIPS mode during Kairos installation by adding the 'fips=1' parameter to the kernel command line through grub_options.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/builds/ubuntu-fips/README.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#cloud-config\n\ninstall:\n  # ...\n  # Set grub options\n  grub_options:\n    # additional Kernel option cmdline to apply\n    extra_cmdline: \"fips=1\"\n```\n\n----------------------------------------\n\nTITLE: Configuring FIPS and SELinux in Kairos Rockylinux cloud-config\nDESCRIPTION: This YAML configuration snippet demonstrates how to enable FIPS mode and disable SELinux during Kairos Rockylinux installation. It sets the 'fips=1' and 'selinux=0' kernel boot options.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/builds/rockylinux-fips/README.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#cloud-config\n\ninstall:\n  # ...\n  # Set grub options\n  grub_options:\n    # additional Kernel option cmdline to apply\n    extra_cmdline: \"fips=1 selinux=0\"\n```\n\n----------------------------------------\n\nTITLE: Building Kairos Image with Keylime Agent\nDESCRIPTION: Dockerfile configuration to create a Kairos derivative image with the keylime-agent package installed using luet package manager.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/keylime/README.md#2025-04-22_snippet_0\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM quay.io/kairos/ubuntu:24.04-core-amd64-generic-v3.2.1 AS base\nCOPY luet.yaml /etc/luet/luet.yaml\nRUN luet install -y --relax utils/keylime-agent\n```\n\n----------------------------------------\n\nTITLE: Building Verity+Signed Sysextension with systemd-repart\nDESCRIPTION: Command to create a verity+signed sysextension using systemd-repart. This generates the work.raw file that will be properly recognized by the system, using the test keys from the assets directory.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/tests/assets/sysext/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsystemd-repart -S -s SOURCE_DIR OUTPUT_FILE --private-key=tests/assets/keys/db.key --certificate=tests/assets/keys/db.pem\n```\n\n----------------------------------------\n\nTITLE: Building Ubuntu non-HWE Base Image with Docker\nDESCRIPTION: This command sequence builds a custom Ubuntu 22.04 container image without the Hardware Enablement (HWE) kernel. It shows the complete Docker build process, which removes HWE kernel packages and installs the standard kernel instead for use as a Kairos base image.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/builds/ubuntu-non-hwe/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd examples/byoi/ubuntu-non-hwe\n$ docker build -t ubuntu-non-hwe:22.04 .\n[+] Building 58.7s (13/13) FINISHED                                                      docker:default\n => [internal] load build definition from Dockerfile                                               0.0s\n => => transferring dockerfile: 577B                                                               0.0s\n => [internal] load metadata for docker.io/library/ubuntu:22.04                                    0.4s\n => [internal] load metadata for quay.io/kairos/kairos-init:v0.2.6                                 0.5s\n => [internal] load .dockerignore                                                                  0.0s\n => => transferring context: 2B                                                                    0.0s\n => [kairos-init 1/1] FROM quay.io/kairos/kairos-init:v0.2.6@sha256:35f581dbc480385b21f7a22317fc5  0.0s\n => [base-kairos 1/7] FROM docker.io/library/ubuntu:22.04@sha256:ed1544e454989078f5dec1bfdabd8c5c  0.0s\n => CACHED [base-kairos 2/7] COPY --from=kairos-init /kairos-init /kairos-init                     0.0s\n => CACHED [base-kairos 3/7] RUN /kairos-init -l debug -s install --version \"v0.0.1\"               0.0s\n => [base-kairos 4/7] RUN apt-get remove -y linux-base linux-image-generic-hwe-22.04 && apt-get a  2.3s\n => [base-kairos 5/7] RUN apt-get install -y --no-install-recommends linux-image-generic          18.4s\n => [base-kairos 6/7] RUN /kairos-init -l debug -s init --version \"v0.0.1\"                        34.1s \n => [base-kairos 7/7] RUN rm /kairos-init                                                          0.2s \n => exporting to image                                                                             3.3s \n => => exporting layers                                                                            3.3s \n => => writing image sha256:eea47e62c3238b7f51301ce7ab99bbe43036b401d288dd27b7f1eb6f4193a5fa       0.0s \n => => naming to docker.io/library/ubuntu-non-hwe:22.04   \n```\n\n----------------------------------------\n\nTITLE: Verifying FIPS Mode in Kairos\nDESCRIPTION: Commands to verify that FIPS mode is properly enabled after installation. The first command checks the crypto subsystem status while the second shows kernel information including the FIPS designation.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/builds/fedora-fips/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkairos@localhost:~$ cat /proc/sys/crypto/fips_enabled\n1\nkairos@localhost:~$ uname -a\nLinux localhost 5.4.0-1007-fips #8-Ubuntu SMP Wed Jul 29 21:42:48 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n----------------------------------------\n\nTITLE: Verifying FIPS Mode Status in Kairos Ubuntu Focal\nDESCRIPTION: These commands demonstrate how to verify that FIPS mode is enabled in a Kairos Ubuntu system by checking the fips_enabled kernel parameter and confirming the FIPS kernel in the system information.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/builds/ubuntu-fips/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkairos@localhost:~$ cat /proc/sys/crypto/fips_enabled\n1\nkairos@localhost:~$ uname -a\nLinux localhost 5.4.0-1007-fips #8-Ubuntu SMP Wed Jul 29 21:42:48 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n----------------------------------------\n\nTITLE: Verifying FIPS enablement in Kairos Rockylinux\nDESCRIPTION: These Bash commands demonstrate how to verify that FIPS mode is enabled after installation. They check the FIPS status and display system information.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/builds/rockylinux-fips/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n[root@localhost ~]# cat /proc/sys/crypto/fips_enabled\n1\n[root@localhost ~]# uname -a\nLinux localhost 5.14.0-284.18.1.el9_2.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jun 22 17:36:46 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n----------------------------------------\n\nTITLE: Regenerating UEFI Firmware Variables File with virt-fw-vars\nDESCRIPTION: This command regenerates the efivars.fd file using virt-fw-vars. It takes the standard OVMF_VARS.fd as the base template, applies variables from the efivars.json configuration file, and outputs a new efivars.fd that enables SecureBoot with default keys plus custom test certificates.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/tests/assets/efivars.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nvirt-fw-vars -i /usr/share/OVMF/OVMF_VARS.fd --set-json efivars.json -o efivars.fd\n```\n\n----------------------------------------\n\nTITLE: Keylime Agent Policy Update Command\nDESCRIPTION: Bash command to update the TPM policy for a Keylime agent with specific PCR values for verification.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/keylime/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkeylime_tenant -c update --uuid UID_OF_AGENT -t IP_OF_AGENT  --tpm_policy '{\"15\":[\"0000000000000000000000000000000000000000\",\"0000000000000000000000000000000000000000000000000000000000000000\",\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"]}'\n```\n\n----------------------------------------\n\nTITLE: Building Unsigned Sysextension with sysext-bakery\nDESCRIPTION: Command to create an unsigned sysextension using the sysext-bakery tool. This generates the hello-broke.raw file that won't be properly recognized by the UKI since it lacks signing and verity checking.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/tests/assets/sysext/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbake.sh SOURCE_DIR\n```\n\n----------------------------------------\n\nTITLE: TPM PCR Extension Test Command\nDESCRIPTION: Command to extend PCR 15 with a test value to demonstrate revocation functionality.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/examples/keylime/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntpm2_pcrextend 15:sha256=f1d2d2f924e986ac86fdf7b36c94bcdf32beec15324234324234234333333333\n```\n\n----------------------------------------\n\nTITLE: Creating a Git commit with signed-off DCO and issue reference\nDESCRIPTION: Example of how to create a Git commit that includes a signed-off Developer Certificate of Origin (DCO) and references an issue number in the commit message.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -s -am \":seedling: Drop foo flag (fixes #123)\"\n```\n\n----------------------------------------\n\nTITLE: Rebasing against upstream repository\nDESCRIPTION: Commands to fetch the latest changes from the upstream repository and rebase your feature branch on top of them, minimizing merge conflicts.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit fetch upstream\ngit rebase upstream/master\n```\n\n----------------------------------------\n\nTITLE: Adding upstream remote for Kairos repository in Git\nDESCRIPTION: Command to add the upstream source repository for the Kairos project to your local Git repository. This allows you to sync your fork with the main project repository.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add upstream git@github.com:kairos-io/kairos.git\n```\n\n----------------------------------------\n\nTITLE: Running YAML linting on GitHub workflow files for Linux\nDESCRIPTION: Command to run YAML linting checks on GitHub workflow files in a Linux environment using Docker, excluding the examples directory.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nfind .github/workflows/ -path \"./examples\" -prune -o -name \"*.yml\" -or -name \"*.yaml\" -print  | xargs -r -n1 docker run -v \"$PWD\":/work -w /work cytopia/yamllint\n```\n\n----------------------------------------\n\nTITLE: Running YAML linting on GitHub workflow files for Windows\nDESCRIPTION: Command to run YAML linting checks on GitHub workflow files in a Windows environment using Docker, excluding the examples directory.\nSOURCE: https://github.com/kairos-io/kairos/blob/master/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nfind .github/workflows/ -path \"./examples\" -prune -o -name \"*.yml\" -or -name \"*.yaml\" -print  | xargs -r -n1 docker run -v \"$PWD\":/work -w /work cytopia/yamllint\n```"
  }
]
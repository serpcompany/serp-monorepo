[
  {
    "owner": "tektoncd",
    "repo": "website",
    "content": "TITLE: Defining a Tekton Pipeline for Git Clone\nDESCRIPTION: YAML definition of a Tekton Pipeline that uses the git-clone Task to clone a repository. It includes parameters for the repo URL and a shared workspace.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n  name: clone-build-push\nspec:\n  description: | \n    This pipeline clones a git repo, builds a Docker image with Kaniko and\n    pushes it to a registry\n  params:\n  - name: repo-url\n    type: string\n  workspaces:\n  - name: shared-data\n  tasks:\n  - name: fetch-source\n    taskRef:\n      name: git-clone\n    workspaces:\n    - name: output\n      workspace: shared-data\n    params:\n    - name: url\n      value: $(params.repo-url)\n```\n\n----------------------------------------\n\nTITLE: Hello World Tekton Task Definition\nDESCRIPTION: YAML configuration for a basic Tekton Task that prints 'Hello World' using an Alpine container.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/tasks.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  name: hello\nspec:\n  steps:\n    - name: echo\n      image: alpine\n      script: |\n        #!/bin/sh\n        echo \"Hello World\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Goodbye Task in Tekton\nDESCRIPTION: Defines a Task that outputs a goodbye message using a parameter for the username. This Task will be used as part of a Pipeline workflow.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/pipelines.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  name: goodbye\nspec:\n  params:\n  - name: username\n    type: string\n  steps:\n    - name: goodbye\n      image: ubuntu\n      script: |\n        #!/bin/bash\n        echo \"Goodbye $(params.username)!\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Tekton Pipeline with Multiple Tasks\nDESCRIPTION: Defines a Pipeline that combines both hello and goodbye Tasks in sequence, with parameter passing between them. The goodbye Task runs after the hello Task completes.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/pipelines.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n  name: hello-goodbye\nspec:\n  params:\n  - name: username\n    type: string\n  tasks:\n    - name: hello\n      taskRef:\n        name: hello\n    - name: goodbye\n      runAfter:\n        - hello\n      taskRef:\n        name: goodbye\n      params:\n      - name: username\n        value: $(params.username)\n```\n\n----------------------------------------\n\nTITLE: Adding Docker Credentials Workspace to Pipeline\nDESCRIPTION: YAML snippets showing how to add a Docker credentials workspace to the Pipeline and Kaniko Task.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nworkspaces:\n- name: docker-credentials\n\n# Under the build-push Task:\nworkspaces:\n- name: dockerconfig\n  workspace: docker-credentials\n```\n\n----------------------------------------\n\nTITLE: Tekton Pipeline Definition\nDESCRIPTION: YAML definition of a Tekton pipeline that clones a git repo and builds/pushes a Docker image using Kaniko\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n  name: clone-build-push\nspec:\n  description: |\n    This pipeline clones a git repo, builds a Docker image with Kaniko and\n    pushes it to a registry\n  params:\n  - name: repo-url\n    type: string\n  - name: image-reference\n    type: string\n  workspaces:\n  - name: shared-data\n  - name: docker-credentials\n  tasks:\n  - name: fetch-source\n    taskRef:\n      name: git-clone\n    workspaces:\n    - name: output\n      workspace: shared-data\n    params:\n    - name: url\n      value: $(params.repo-url)\n  - name: build-push\n    runAfter: [\"fetch-source\"]\n    taskRef:\n      name: kaniko\n    workspaces:\n    - name: source\n      workspace: shared-data\n    - name: dockerconfig\n      workspace: docker-credentials\n    params:\n    - name: IMAGE\n      value: $(params.image-reference)\n```\n\n----------------------------------------\n\nTITLE: Extending Pipeline with Kaniko Task for Image Building\nDESCRIPTION: YAML snippet showing how to add the Kaniko Task to the existing Pipeline for building and pushing a Docker image.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nparams: \n- name: image-reference\n  type: string\n\ntasks:\n...\n  - name: build-push\n    runAfter: [\"fetch-source\"]\n    taskRef:\n      name: kaniko\n    workspaces:\n    - name: source\n      workspace: shared-data\n    params:\n    - name: IMAGE\n      value: $(params.image-reference)\n```\n\n----------------------------------------\n\nTITLE: Tekton Pipeline Definition\nDESCRIPTION: YAML definition of a Pipeline that clones a git repository and reads its README file. Uses git-clone and show-readme tasks with shared workspaces for data passing.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n  name: clone-read\nspec:\n  description: | \n    This pipeline clones a git repo, then echoes the README file to the stout.\n  params:\n  - name: repo-url\n    type: string\n    description: The git repo URL to clone from.\n  workspaces:\n  - name: shared-data\n    description: | \n      This workspace contains the cloned repo files, so they can be read by the\n      next task.\n  - name: git-credentials\n    description: My ssh credentials\n  tasks:\n  - name: fetch-source\n    taskRef:\n      name: git-clone\n    workspaces:\n    - name: output\n      workspace: shared-data\n    - name: ssh-directory\n      workspace: git-credentials\n    params:\n    - name: url\n      value: $(params.repo-url)\n  - name: show-readme\n    runAfter: [\"fetch-source\"]\n    taskRef:\n      name: show-readme\n    workspaces:\n    - name: source\n      workspace: shared-data\n```\n\n----------------------------------------\n\nTITLE: Creating RBAC resources for EventListener\nDESCRIPTION: Define the necessary RBAC (Role-Based Access Control) resources for the EventListener, including a ServiceAccount, RoleBinding, and ClusterRoleBinding.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/triggers.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: tekton-robot\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: triggers-example-eventlistener-binding\nsubjects:\n- kind: ServiceAccount\n  name: tekton-robot\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: tekton-triggers-eventlistener-roles\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: triggers-example-eventlistener-clusterbinding\nsubjects:\n- kind: ServiceAccount\n  name: tekton-robot\n  namespace: default\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: tekton-triggers-eventlistener-clusterroles\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton Triggers with kubectl\nDESCRIPTION: Use kubectl to install Tekton Triggers and its interceptors on a Kubernetes cluster. This snippet shows the commands to apply the necessary YAML files.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/triggers.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/triggers/latest/release.yaml\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/triggers/latest/interceptors.yaml\n```\n\n----------------------------------------\n\nTITLE: Hello World TaskRun Definition\nDESCRIPTION: YAML configuration for a TaskRun that instantiates and executes the Hello World Task.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/tasks.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: TaskRun\nmetadata:\n  name: hello-task-run\nspec:\n  taskRef:\n    name: hello\n```\n\n----------------------------------------\n\nTITLE: Setting Up Workload Identity Mapping for GCP Service Account\nDESCRIPTION: Command to add IAM binding to the Google Service Account, allowing it to be impersonated by the Kubernetes Service Account. This completes the Workload Identity configuration.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/registry-authentication.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngcloud iam service-accounts add-iam-policy-binding \\\n  --role roles/iam.workloadIdentityUser \\\n  --member \"serviceAccount:<project_id>.svc.id.goog[default/<sa-name>]\" \\\n  build-robot@<project_id>.iam.gserviceaccount.com\n```\n\n----------------------------------------\n\nTITLE: Tekton PipelineRun Configuration\nDESCRIPTION: YAML configuration for executing the build pipeline\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/supply-chain-security.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n{{% readfile file=\"samples/build-push-run.yaml\" code=\"true\" lang=\"yaml\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating a TriggerBinding in YAML\nDESCRIPTION: Define a TriggerBinding that extracts the 'username' from the event payload and passes it to the TriggerTemplate.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/triggers.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: triggers.tekton.dev/v1beta1\nkind: TriggerBinding\nmetadata:\n  name: hello-binding\nspec: \n  params:\n  - name: username\n    value: $(body.username)\n```\n\n----------------------------------------\n\nTITLE: Creating a PipelineRun to Execute the Pipeline\nDESCRIPTION: Defines a PipelineRun that references the hello-goodbye Pipeline and provides the actual value for the username parameter. This triggers the execution of the Pipeline.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/pipelines.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: hello-goodbye-run\nspec:\n  pipelineRef:\n    name: hello-goodbye\n  params:\n  - name: username\n    value: \"Tekton\"\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Secret for Git Credentials\nDESCRIPTION: YAML definition for a Kubernetes Secret containing SSH credentials for git authentication.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: git-credentials\ndata:\n  id_rsa: AS0tLS...\n  known_hosts: AG033S...\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton Tasks\nDESCRIPTION: Commands to install the git-clone and kaniko Tasks from Tekton Hub\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ntkn hub install task git-clone\ntkn hub install task kaniko\n```\n\n----------------------------------------\n\nTITLE: Granting Artifact Registry Permissions to Service Account\nDESCRIPTION: Command to add IAM policy bindings to the service account, granting read and write permissions to the Artifact Registry repository.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/registry-authentication.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngcloud artifacts repositories add-iam-policy-binding <ar-repository> \\\n  --location <location> \\\n  --member=serviceAccount:build-robot@<project_id>.iam.gserviceaccount.com \\\n  --role=roles/artifactregistry.reader \\\n  --role=roles/artifactregistry.writer\n```\n\n----------------------------------------\n\nTITLE: Creating an EventListener in YAML\nDESCRIPTION: Define an EventListener that combines the TriggerTemplate and TriggerBinding. It specifies the service account to use and the trigger configuration.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/triggers.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: triggers.tekton.dev/v1beta1\nkind: EventListener\nmetadata:\n  name: hello-listener\nspec:\n  serviceAccountName: tekton-robot\n  triggers:\n    - name: hello-trigger \n      bindings:\n      - ref: hello-binding\n      template:\n        ref: hello-template\n```\n\n----------------------------------------\n\nTITLE: HTML Template Configuration for Tekton Pipelines Installation Guide\nDESCRIPTION: HTML comment block containing frontmatter configuration for the Tekton Pipelines installation documentation page. Defines page title, link title, weight and description.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Installation/pipelines.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--\n---\ntitle: \"Install Tekton Pipelines\"\nlinkTitle: \"Tekton Pipelines\"\nweight: 2\ndescription: >\n  Install Tekton Pipelines on your cluster\n---\n-->\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Cluster with Minikube\nDESCRIPTION: Command to create a Kubernetes cluster using minikube with a specific Kubernetes version.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/tasks.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nminikube start --kubernetes-version v1.30.2\n```\n\n----------------------------------------\n\nTITLE: Tekton PipelineRun Definition\nDESCRIPTION: YAML definition for PipelineRun that executes the clone-read pipeline with necessary workspace configurations and git credentials.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  generateName: clone-read-run-\nspec:\n  pipelineRef:\n    name: clone-read\n  podTemplate:\n    securityContext:\n      fsGroup: 65532\n  workspaces:\n  - name: shared-data\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  - name: git-credentials\n    secret:\n      secretName: git-credentials\n  params:\n  - name: repo-url\n    value: git@github.com:tektoncd/website.git\n```\n\n----------------------------------------\n\nTITLE: Tekton PipelineRun Definition\nDESCRIPTION: YAML definition for executing the pipeline with specific parameters and workspace configurations\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  generateName: clone-build-push-run-\nspec:\n  pipelineRef:\n    name: clone-build-push\n  podTemplate:\n    securityContext:\n      fsGroup: 65532\n  workspaces:\n  - name: shared-data\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  - name: docker-credentials\n    secret:\n      secretName: docker-credentials\n  params:\n  - name: repo-url\n    value: https://github.com/google/docsy-example.git\n  - name: image-reference\n    value: container.registry.com/sublocation/my_app:version\n```\n\n----------------------------------------\n\nTITLE: Setting up namespace and configuring service accounts in OpenShift\nDESCRIPTION: Commands to create a new project namespace for Tekton Pipelines and grant the necessary service accounts the 'anyuid' security context constraint. This allows the Tekton controller and webhook pods to run with the required permissions.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/redhat/pipelines-install.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\noc new-project tekton-pipelines\noc adm policy add-scc-to-user anyuid -z tekton-pipelines-controller\noc adm policy add-scc-to-user anyuid -z tekton-pipelines-webhook\n```\n\n----------------------------------------\n\nTITLE: Setting Up Workload Identity Mapping on Kubernetes\nDESCRIPTION: Command to annotate the Kubernetes Service Account with the Google Service Account, establishing the first part of the Workload Identity mapping.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/registry-authentication.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate serviceaccount \\\n<sa-name> \\\niam.gke.io/gcp-service-account=build-robot@<project_id>.iam.gserviceaccount.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Clone Task\nDESCRIPTION: Task configuration for cloning git repository using the git-clone community task.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntasks:\n- name: fetch-source\n  taskRef:\n    name: git-clone\n  workspaces:\n  - name: output\n    workspace: shared-data\n  params:\n  - name: url\n    value: $(params.repo-url)\n```\n\n----------------------------------------\n\nTITLE: Kaniko Build Task with Base Image Caching\nDESCRIPTION: Extended Kaniko task configuration that includes both layer caching and base image caching using a persistent volume\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n- name: build-and-push\n      workingDir: $(workspaces.source.path)/sample-app/\n      image: gcr.io/kaniko-project/executor:latest\n      args:\n        - --dockerfile=$(params.DOCKERFILE)\n        - --context=$(params.CONTEXT) # The user does not need to care the workspace and the source.\n        - --destination=$(params.IMAGE):$(params.commit)\n        - --digest-file=$(results.IMAGE_DIGEST.path)\n        - --cache=true\n      securityContext:\n        runAsUser: 0\n      volumeMounts:\n        - name: basecache\n          mountPath: /cache\n    - name: write-url\n      image: docker.io/library/bash:5.1.4@sha256:b208215a4655538be652b2769d82e576bc4d0a2bb132144c060efc5be8c3f5d6\n      script: |\n        set -e\n        image=\"$(params.IMAGE):$(params.commit)\"\n        echo -n \"${image}\" | tee \"$(results.IMAGE_URL.path)\"\n  volumes:\n    - name: basecache\n      persistentVolumeClaim:\n        claimName: basecache-pvc\n```\n\n----------------------------------------\n\nTITLE: Applying the PipelineRun to Start Pipeline Execution\nDESCRIPTION: Command to apply the PipelineRun YAML definition to the Kubernetes cluster, which starts the execution of the Pipeline.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/pipelines.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --filename hello-goodbye-pipeline-run.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Credentials Secret\nDESCRIPTION: YAML definition of a Kubernetes Secret containing Docker registry credentials for authentication.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: docker-credentials\ndata:\n  config.json: efuJAmF1...\n```\n\n----------------------------------------\n\nTITLE: Tekton Pipeline Definition for Container Build\nDESCRIPTION: YAML pipeline definition for building and pushing a container image using Kaniko\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/supply-chain-security.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n{{% readfile file=\"samples/build-push.yaml\" code=\"true\" lang=\"yaml\" %}}\n```\n\n----------------------------------------\n\nTITLE: Logging in as admin to OpenShift\nDESCRIPTION: Command to log in to OpenShift with cluster-admin privileges using the system:admin user. This is required to perform administrative actions needed for the Tekton installation.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/redhat/pipelines-install.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\noc login -u system:admin\n```\n\n----------------------------------------\n\nTITLE: Creating a Tekton PipelineRun for SLSA Level 2 Build\nDESCRIPTION: This command creates a Tekton PipelineRun using a predefined YAML file from the Tekton Chains repository. The PipelineRun defines a build process that clones a GitHub repo, builds a container, and uploads it to a Docker repository.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/slsa-2/index.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -f \n    https://raw.githubusercontent.com/tektoncd/chains/main/docs/vendor/gcp/slsa-2/pipeline_run.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Kaniko Build Task with Layer Caching\nDESCRIPTION: YAML configuration for Kaniko executor task with layer caching enabled using --cache=true flag. This configuration allows Kaniko to cache layers from RUN and COPY commands in a remote repository.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- name: build-and-push\n      workingDir: $(workspaces.source.path)/sample-app/\n      image: gcr.io/kaniko-project/executor:latest\n      args:\n        - --dockerfile=$(params.DOCKERFILE)\n        - --context=$(params.CONTEXT) # The user does not need to care the workspace and the source.\n        - --destination=$(params.IMAGE):$(params.commit)\n        - --digest-file=$(results.IMAGE_DIGEST.path)\n        - --cache=true\n      securityContext:\n        runAsUser: 0\n```\n\n----------------------------------------\n\nTITLE: Tekton show-readme Task Definition\nDESCRIPTION: YAML definition of a Task that reads and displays the README.md file from a workspace directory using an Alpine container.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  name: show-readme\nspec:\n  description: Read and display README file.\n  workspaces:\n  - name: source\n  steps:\n  - name: read\n    image: alpine:latest\n    script: | \n      #!/usr/bin/env sh\n      cat $(workspaces.source.path)/README.md\n```\n\n----------------------------------------\n\nTITLE: Creating Tekton Task for Tracetest Execution\nDESCRIPTION: YAML definition for a Tekton Task that installs Tracetest CLI, configures it, and runs a Tracetest test as part of a CI/CD pipeline.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  name: install-and-run-tracetest\nspec:\n  steps:\n    - name: create-test-files\n      image: ubuntu\n      script: |\n        #!/usr/bin/env bash\n        cat <<EOF >/workspace/test-api.yaml\n        type: Test\n        spec:\n          id: L7wr5xeVR\n          name: Pokeshop - List\n          description: Get a Pokemon\n          trigger:\n            type: http\n            httpRequest:\n              method: GET\n              url: http://demo-pokemon-api.demo/pokemon?take=20&skip=0\n              headers:\n              - key: Content-Type\n                value: application/json\n          specs:\n          - selector: span[tracetest.span.type=\"database\"]\n            name: Database queries less than 500ms\n            assertions:\n            - attr:tracetest.span.duration < 500ms\n        EOF\n      volumeMounts:\n      - name: custom\n        mountPath: /workspace\n    - name: install-and-run-tracetest\n      image: kubeshop/tracetest:v0.13.3\n      # The official Tracetest image comes with the Tracetest CLI installed\n      script: |\n        # Configure and Run Tracetest CLI\n        tracetest configure -g --endpoint http://tracetest.tracetest.svc.cluster.local:11633/\n        tracetest run test --file /workspace/test-api.yaml --required-gates test-specs --output pretty\n      volumeMounts:\n      - name: custom\n        mountPath: /workspace\n  volumes:\n  - name: custom\n    emptyDir: {}\n```\n\n----------------------------------------\n\nTITLE: Configuring PipelineRun Workspace\nDESCRIPTION: Workspace configuration for PipelineRun using PersistentVolumeClaim.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nworkspaces:\n- name: shared-data\n  volumeClaimTemplate:\n    spec:\n      accessModes:\n      - ReadWriteOnce\n      resources:\n        requests:\n          storage: 1Gi\n```\n\n----------------------------------------\n\nTITLE: Updating Firewall Rules for Private Clusters\nDESCRIPTION: Command to update firewall rules to allow TCP port 8443 access, which is necessary for private clusters with DNS resolution issues\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/pipelines-install.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute firewall-rules update <firewall_rule_name> --allow tcp:8443\n```\n\n----------------------------------------\n\nTITLE: Configuring Tekton EventListener\nDESCRIPTION: YAML configuration for Tekton EventListener and associated RBAC settings to enable automated test triggering through HTTP endpoints.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: triggers.tekton.dev/v1beta1\nkind: EventListener\nmetadata:\n  name: install-and-run-tracetest-event-listener\nspec:\n  serviceAccountName: tekton-robot\n  triggers:\n    - name: install-and-run-tracetest-trigger \n      bindings:\n      - ref: install-and-run-tracetest-binding\n      template:\n        ref: install-and-run-tracetest-template\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: tekton-robot\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: triggers-example-eventlistener-binding\nsubjects:\n- kind: ServiceAccount\n  name: tekton-robot\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: tekton-triggers-eventlistener-roles\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: triggers-example-eventlistener-clusterbinding\nsubjects:\n- kind: ServiceAccount\n  name: tekton-robot\n  namespace: default\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: tekton-triggers-eventlistener-clusterroles\n```\n\n----------------------------------------\n\nTITLE: Viewing Pipeline Execution Logs with Tekton CLI\nDESCRIPTION: Command to view the logs of the running Pipeline using the Tekton CLI (tkn). The -f flag allows following the logs in real-time.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/pipelines.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ntkn pipelinerun logs hello-goodbye-run -f -n default\n```\n\n----------------------------------------\n\nTITLE: Updating PipelineRun with Docker Credentials\nDESCRIPTION: YAML snippet showing how to update the PipelineRun to include the Docker credentials secret as a workspace.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- name: docker-credentials\n  secret:\n    secretName: docker-credentials\n```\n\n----------------------------------------\n\nTITLE: Triggering the EventListener with curl\nDESCRIPTION: Use curl to send a POST request to the EventListener, simulating an event that triggers the pipeline execution.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/triggers.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -v \\\n   -H 'content-Type: application/json' \\\n   -d '{\"username\": \"Tekton\"}' \\\n   http://localhost:8080\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton Pipelines via kubectl\nDESCRIPTION: Command to install Tekton Pipelines in a Kubernetes cluster using kubectl apply.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml\n```\n\n----------------------------------------\n\nTITLE: Optimized Maven Dockerfile with Layer Caching\nDESCRIPTION: Dockerfile configuration optimized for layer caching, separating dependency downloads from code builds to improve cache efficiency\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_9\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM maven as build\nCOPY mvnw .\nCOPY pom.xml .\nRUN mvn dependency:go-offline\nCOPY src src\nRUN mvn package -Dmaven.test.skip=true\n\nFROM eclipse-temurin:19-jdk-alpine\nCOPY --from=build /target/demo-0.0.1-SNAPSHOT.jar app.jar\nCMD [\"java\", \"-jar\", \"app.jar\"]\n```\n\n----------------------------------------\n\nTITLE: Applying Modified Resources to Destination Cluster\nDESCRIPTION: This command applies the cleaned and modified Tekton resources to the destination cluster using kubectl. It takes the YAML file that has been modified for the new environment.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/test-content/content.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f cleaned-pr.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating GKE Cluster with Workload Identity\nDESCRIPTION: Command to create a new GKE cluster with Workload Identity enabled, specifying the number of nodes, region, and workload pool\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/pipelines-install.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngcloud container clusters create tekton-cluster \\\n  --num-nodes=<nodes> \\\n  --region=<location> \\\n  --workload-pool=<project-id>.svc.id.goog\n```\n\n----------------------------------------\n\nTITLE: Creating Show README Task\nDESCRIPTION: Task definition to read and display the README file from the cloned repository.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  name: show-readme\nspec:\n  description: Read and display README file.\n  workspaces:\n  - name: source\n  steps:\n  - name: read\n    image: alpine:latest\n    script: | \n      #!/usr/bin/env sh\n      cat $(workspaces.source.path)/README.md\n```\n\n----------------------------------------\n\nTITLE: Creating a TriggerTemplate in YAML\nDESCRIPTION: Define a TriggerTemplate that specifies what happens when an event is detected. This template creates a PipelineRun for the 'hello-goodbye' pipeline with a 'username' parameter.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/triggers.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: triggers.tekton.dev/v1beta1\nkind: TriggerTemplate\nmetadata:\n  name: hello-template\nspec:\n  params:\n  - name: username\n    default: \"Kubernetes\"\n  resourcetemplates:\n  - apiVersion: tekton.dev/v1beta1\n    kind: PipelineRun\n    metadata:\n      generateName: hello-goodbye-run-\n    spec:\n      pipelineRef:\n        name: hello-goodbye\n      params:\n      - name: username\n        value: $(tt.params.username)\n```\n\n----------------------------------------\n\nTITLE: Applying Kaniko Cache Configuration\nDESCRIPTION: kubectl command to apply the modified image-build configuration with caching enabled\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f kaniko-cache/image-build-cache.yaml\n```\n\n----------------------------------------\n\nTITLE: Tekton CLI Commands for Task Management\nDESCRIPTION: Collection of Tekton CLI commands for starting tasks, viewing logs, and listing TaskRuns. Shows how to interact with the Tekton pipeline through command line.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ./install-and-run-tracetest-run.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs --selector=tekton.dev/taskRun=install-and-run-tracetest-run\n```\n\nLANGUAGE: bash\nCODE:\n```\ntkn task start install-and-run-tracetest\n```\n\nLANGUAGE: bash\nCODE:\n```\ntkn taskrun logs install-and-run-tracetest-run-gccjk -f -n default\n```\n\nLANGUAGE: bash\nCODE:\n```\ntkn taskrun list\n```\n\n----------------------------------------\n\nTITLE: Defining Tekton Trigger Components\nDESCRIPTION: YAML configurations for Tekton TriggerTemplate and TriggerBinding that enable automated test execution based on events.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: triggers.tekton.dev/v1beta1\nkind: TriggerTemplate\nmetadata:\n  name: install-and-run-tracetest-template\nspec:\n  resourcetemplates:\n  - apiVersion: tekton.dev/v1beta1\n    kind: TaskRun\n    metadata:\n      generateName: install-and-run-tracetest-run-\n    spec:\n      taskRef:\n        name: install-and-run-tracetest\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: triggers.tekton.dev/v1beta1\nkind: TriggerBinding\nmetadata:\n  name: install-and-run-tracetest-binding\nspec:\n  params:\n  - name: run\n    value: $(body.run)\n```\n\n----------------------------------------\n\nTITLE: Monitoring Pipeline Execution\nDESCRIPTION: Command to monitor pipeline execution logs\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ntkn pipelinerun logs  clone-build-push-run-4kgjr -f\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Service Account\nDESCRIPTION: Command to create a Kubernetes Service Account that will be used by the Tekton Pipeline to authenticate with Google Cloud.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/registry-authentication.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create serviceaccount <sa-name>\n```\n\n----------------------------------------\n\nTITLE: Applying the Pipeline Definition to Kubernetes Cluster\nDESCRIPTION: Command to apply the Pipeline YAML definition to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/pipelines.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --filename hello-goodbye-pipeline.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Parameters\nDESCRIPTION: Pipeline specification with repository URL parameter definition.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  description: | \n    This pipeline clones a git repo, then echoes the README file to the stdout.\n  params:\n  - name: repo-url\n    type: string\n    description: The git repo URL to clone from.\n```\n\n----------------------------------------\n\nTITLE: Starting Tekton Pipeline with Source Workspace\nDESCRIPTION: Command to start the Tekton pipeline with the source-pvc as the workspace, which will clone the repository and build the container image.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntkn pipeline start pipeline-clone-and-build --workspace name=source,claimName=source-pvc --showlog\n```\n\n----------------------------------------\n\nTITLE: Creating PipelineRun Definition\nDESCRIPTION: PipelineRun configuration to execute the clone-read pipeline with security context.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  generateName: clone-read-run-\nspec:\n  pipelineRef:\n    name: clone-read\n  podTemplate:\n    securityContext:\n      fsGroup: 65532\n```\n\n----------------------------------------\n\nTITLE: Configuring VSCode Settings for Tekton Kubernetes Connection\nDESCRIPTION: JSON configuration for setting up the connection between VSCode Tekton extension and a Kubernetes cluster. Includes API URL, namespace settings, and path to kubeconfig file.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/test-content/nested/content.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vs-tekton.tekton-hub.api-url\": \"https://api.hub.tekton.dev/v1\",\n  \"vs-tekton.tekton-hub.catalog-refresh\": true,\n  \"vs-tekton.tekton-hub.catalog-refresh-interval-in-hours\": 1,\n  \"kubernetes.namespace\": \"tekton-pipelines\",\n  \"vs-kubernetes.kubeconfig\": \"<path to kubeconfig file>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Minikube with Insecure Registry\nDESCRIPTION: Commands to start minikube with insecure registry support\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/supply-chain-security.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nminikube delete\nminikube start --insecure-registry \"10.0.0.0/24\"\n```\n\n----------------------------------------\n\nTITLE: Updating PipelineRun for Image Building\nDESCRIPTION: YAML snippet showing how to update the PipelineRun to include the image reference parameter for the Kaniko Task.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nparams:\n- name: image-reference\n  value: container.registry.com/sublocation/my_app:version\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Workspace\nDESCRIPTION: Workspace configuration for storing cloned repository files.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nworkspaces:\n- name: shared-data\n  description: | \n    This workspace contains the cloned repo files, so they can be read by the\n    next task.\n```\n\n----------------------------------------\n\nTITLE: Setting PipelineRun Parameters\nDESCRIPTION: Parameter configuration for the repository URL in PipelineRun.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nparams:\n- name: repo-url\n  value: https://github.com/tektoncd/website\n```\n\n----------------------------------------\n\nTITLE: Installing Tracetest in Kubernetes Cluster\nDESCRIPTION: Command to initiate the Tracetest server installation process in a Kubernetes cluster using the Tracetest CLI.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntracetest server install\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Structure\nDESCRIPTION: Initial Pipeline definition with metadata and name specification.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n  name: clone-read\n```\n\n----------------------------------------\n\nTITLE: Version Management Examples\nDESCRIPTION: Examples of using the versions script to add and remove version configurations for Tekton projects\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n./sync/versions.py add v0.18.0 --project pipeline\n./sync/versions.py add v0.9.1 --project triggers\n./sync/versions.py rm v0.9.0 --project triggers\n```\n\n----------------------------------------\n\nTITLE: Applying the Goodbye Task to Kubernetes Cluster\nDESCRIPTION: Command to apply the Task YAML definition to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/pipelines.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --filename goodbye-world.yaml\n```\n\n----------------------------------------\n\nTITLE: Build Provenance JSON Output\nDESCRIPTION: Example JSON output showing the build provenance metadata\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/supply-chain-security.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{{% readfile file=\"samples/provenance.json\" code=\"true\" lang=\"json\" %}}\n```\n\n----------------------------------------\n\nTITLE: Defining Tekton TaskRun for Tracetest\nDESCRIPTION: YAML configuration for a Tekton TaskRun that executes Tracetest tests. Defines the basic TaskRun structure referencing the install-and-run-tracetest task.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: TaskRun\nmetadata:\n  name: install-and-run-tracetest-run\nspec:\n  taskRef:\n    name: install-and-run-tracetest\n```\n\n----------------------------------------\n\nTITLE: Defining Tracetest Test in YAML\nDESCRIPTION: YAML definition for a Tracetest test that performs HTTP requests and asserts on database query performance using distributed traces.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ntype: Test\nspec:\n  id: L7wr5xeVR\n  name: Pokeshop - List\n  description: Get a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      method: GET\n      url: http://demo-pokemon-api.demo/pokemon?take=20&skip=0\n      headers:\n      - key: Content-Type\n        value: application/json\n  specs:\n  - selector: span[tracetest.span.type=\"database\"]\n    name: Database queries less than 500ms\n    assertions:\n    - attr:tracetest.span.duration < 500ms\n```\n\n----------------------------------------\n\nTITLE: Docker Credentials Secret\nDESCRIPTION: Kubernetes Secret definition for storing Docker registry credentials\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: docker-credentials\ndata:\n  config.json: efuJAmF1...\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton Pipelines, Triggers, and Dashboard in Kubernetes\nDESCRIPTION: A series of kubectl commands to install Tekton Pipelines, Triggers, and Dashboard components in a Kubernetes cluster.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml\n\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/triggers/latest/release.yaml\n\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/triggers/latest/interceptors.yaml\n\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/dashboard/latest/release.yaml\n```\n\n----------------------------------------\n\nTITLE: Building Docker Container for Sync\nDESCRIPTION: Docker build command for creating a container to run the sync process\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t tekton/web sync/.\n```\n\n----------------------------------------\n\nTITLE: Applying M2 Cache Configuration in Tekton\nDESCRIPTION: Command to apply the modified image-build configuration that includes M2 cache mapping\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f m2cache/image-build-m2cache.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating a PipelineRun for Git Clone\nDESCRIPTION: YAML definition of a PipelineRun that executes the clone-build-push Pipeline. It specifies the workspace volume and parameters for the repository URL.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  generateName: clone-build-push-run-\nspec:\n  pipelineRef:\n    name: clone-build-push\n  podTemplate:\n    securityContext:\n      fsGroup: 65532\n  workspaces:\n  - name: shared-data\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  params:\n  - name: repo-url\n    value: https://github.com/google/docsy-example.git\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton Pipelines\nDESCRIPTION: Command to install the latest version of Tekton Pipelines using kubectl.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/tasks.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Maven Cache PVC in Kubernetes\nDESCRIPTION: Command to create a Persistent Volume Claim (PVC) for storing Maven dependencies cache\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f m2cache/pvc-m2cache.yaml\n```\n\n----------------------------------------\n\nTITLE: Applying Tekton Task to Kubernetes Cluster\nDESCRIPTION: kubectl command to apply the Tekton Task definition to the Kubernetes cluster.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ./install-and-run-tracetest.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton Pipelines with kubectl\nDESCRIPTION: Command to install Tekton Pipelines in a Kubernetes cluster using kubectl.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Up Base Image Cache Components\nDESCRIPTION: Series of kubectl commands to set up and configure base image caching components\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f kaniko-basecache/image-build-basecache.yaml\nkubectl apply -f kaniko-basecache/pvc-basecache.yaml\nkubectl apply -f kaniko-basecache/kaniko-warmer.yaml\nkubectl logs -f kaniko-warmer\n```\n\n----------------------------------------\n\nTITLE: Example of Pipeline Parameter Inputs\nDESCRIPTION: Example showing how to provide parameter values when starting the pipeline, including the git repository URL and target container image name.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n➜  ~ tkn pipeline start pipeline-clone-and-build --workspace name=source,claimName=source-pvc --showlog\n? Value for param `git-url` of type `string`? https://github.com/ggalloro/tekton-speed-builds\n? Value for param `image-name` of type `string`? europe-west1-docker.pkg.dev/galloro-demos/tektoncd/javasample\n```\n\n----------------------------------------\n\nTITLE: Managing Tekton and Tracetest Services\nDESCRIPTION: Commands for applying configurations, port forwarding, and triggering tests through the EventListener endpoint.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f tekton-robot-rbac.yaml\nkubectl apply -f install-and-run-tracetest-event-listener.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward service/el-install-and-run-tracetest-event-listener 8080\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --namespace tekton-pipelines port-forward svc/tekton-dashboard 9097:9097\n```\n\n----------------------------------------\n\nTITLE: Sed command for bulk migration from gcr.io to ghcr.io\nDESCRIPTION: A sed command that can be used to automatically replace all gcr.io/tekton-releases references with ghcr.io/tektoncd in deployment manifests and scripts.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2025/ghcr-migration/index.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nsed -e 's,gcr.io/tekton-releases,ghcr.io/tektoncd,g'\n```\n\n----------------------------------------\n\nTITLE: Applying Tekton Resources to Kubernetes Cluster\nDESCRIPTION: Command to apply the Tekton resource manifests to the Kubernetes cluster, including PVC, tasks, and pipeline definitions needed for the build process.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f tekton-assets\n```\n\n----------------------------------------\n\nTITLE: Installing git-clone Task from Tekton Hub\nDESCRIPTION: Commands to install the git-clone Task from Tekton Hub using either tkn CLI or kubectl\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ntkn hub install task git-clone\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f \\\nhttps://raw.githubusercontent.com/tektoncd/catalog/main/task/git-clone/0.6/git-clone.yaml\n```\n\n----------------------------------------\n\nTITLE: Comparing old and new container image paths for Tekton\nDESCRIPTION: Examples showing the difference between old gcr.io image paths and new ghcr.io image paths that users need to update in their deployments.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2025/ghcr-migration/index.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# old\ngcr.io/tekton-releases/github/tektoncd/pipeline/cmd/entrypoint:v0.9.2\n\n# new\nghcr.io/tektoncd/github.com/tektoncd/pipeline/cmd/entrypoint:v0.9.2\n```\n\n----------------------------------------\n\nTITLE: Viewing TaskRun Pipeline Results\nDESCRIPTION: Sample output showing the execution times of pipeline tasks with improved performance from caching\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nNAME                                             STARTED          DURATION   STATUS\npipeline-clone-and-build-run-lk8x2-image-build   1 minute ago     46s        Succeeded\npipeline-clone-and-build-run-lk8x2-git-clone     1 minute ago     14s        Succeeded\npipeline-clone-and-build-run-w7sd5-image-build   3 minutes ago    59s        Succeeded\npipeline-clone-and-build-run-w7sd5-git-clone     3 minutes ago    12s        Succeeded\n```\n\n----------------------------------------\n\nTITLE: Encoding Docker Config for Secret\nDESCRIPTION: Bash command to base64 encode the Docker config file for use in a Kubernetes Secret.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncat ~/.docker/config.json | base64 -w0\n```\n\n----------------------------------------\n\nTITLE: Configuring Tekton Website Content Sync in YAML\nDESCRIPTION: YAML configuration template for syncing content from Tekton repositories. Defines component name, repository source, archive location, and version tags with folder structures for content organization.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# The name of the component.\n# sync.py will use this value to build directories in content/ and vault/.\ncomponent: <Component>\n# The GitHub repository where documentation resides.\nrepository: https://github.com/tektoncd/<component>\n# The directory in the GitHub repository where contents reside.\narchive: https://github.com/tektoncd/<component>/tags\n# The tags (versions) of contents to sync.\n# Note that sync.py and related script reads tags in the order specified in\n# the following list; the first entry in tags will automatically become the\n# latest version of contents.\n# To add a new version, append to the list as below\ntags:\n- name: vX.Y.Z               # The first tag in the least is considered latest\n  displayName: vX.Y.Z\n  folders:\n    docs:\n      target: ''             # optional, default value ''\n      index: README.md       # optional, if _index.md exists\n      include: ['*.md']      # optional, default value ['*']\n      exclude: ['not_in.md'] # optional, default value []\n      header: <dict>         # optional, no header added if not set\n        See https://www.docsy.dev/docs/adding-content/navigation/#section-menu\n    other:\n      target: 'other'        # optional, default value ''\n      index: README.md       # optional, if _index.md exists\n      include: ['*.md']      # optional, default value ['*']\n      exclude: ['not_in.md'] # optional, default value []\n      header: <dict>         # optional, no header added if not set\n        See https://www.docsy.dev/docs/adding-content/navigation/#section-menu\n- name: vX.Z.Z               # The first tag in the least is considered latest\n  displayName: vX.Z.Z\n  folders:\n    docs:\n      target: ''             # optional, default value ''\n      index: README.md       # optional, if _index.md exists\n      include: ['*.md']      # optional, default value ['*']\n      exclude: ['not_in.md'] # optional, default value []\n      header: <dict>         # optional, no header added if not set\n        See https://www.docsy.dev/docs/adding-content/navigation/#section-menu\n```\n\n----------------------------------------\n\nTITLE: Applying Tekton Pipeline Components\nDESCRIPTION: Commands to apply the show-readme Task, Pipeline, and PipelineRun configurations\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/clone-repository.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f show-readme.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pipeline.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -f pipelinerun.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\ntkn pipelinerun logs  clone-read-run-4kgjr -f\n```\n\n----------------------------------------\n\nTITLE: Creating Google Service Account with Matching Name\nDESCRIPTION: Command to create a Google Service Account with the same name as the Kubernetes Service Account, which is required for Workload Identity configuration.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/registry-authentication.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngcloud iam service-accounts create <sa-name>\n```\n\n----------------------------------------\n\nTITLE: Visualizing Tekton Chains Workflow with Mermaid Diagram\nDESCRIPTION: This Mermaid diagram illustrates the workflow of Tekton Chains within a Kubernetes environment. It shows how the Tekton Chains controller observes pipeline runs, generates provenance, and signs metadata, while Tekton Pipelines execute tasks.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Concepts/supply-chain-security.md#2025-04-22_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\n  subgraph TOP[Kubernetes]\n    direction TB\n\n    subgraph C[Tekton Chains controller]\n      direction TB\n      c1(Observe Runs)\n      c2(Generate Provenance) \n      c3(Sign Metadata)\n    end\n\n    subgraph B[Pipelines]\n      direction LR\n      subgraph B1[Pipeline]\n        direction TB\n        i1[Task] --> f1[Task]\n      end\n\n      subgraph B2[Pipeline]\n        direction TB\n        i2[Task] --> f2[Task]\n      end\n      B1 --> B2\n    end\n  end\n\n  A[Sources] -.-> B -.-> D[Artifacts]\n```\n\n----------------------------------------\n\nTITLE: Viewing Tekton TaskRun Information\nDESCRIPTION: Command to list TaskRun resources created by the pipeline execution, showing the execution status and duration of each task.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ntkn tr ls\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Repository in Artifact Registry\nDESCRIPTION: Command to create a Docker repository in Artifact Registry where pipeline-built images will be stored. Requires specifying a repository name and location.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/registry-authentication.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngcloud artifacts repositories create <repository-name> \\\n  --repository-format=docker \\\n  --location=us-central1 --description=\"Docker repository\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Subdirectory Content Sync in YAML\nDESCRIPTION: YAML configuration example for syncing content from subdirectories, showing how to set up folder configurations for nested documentation structures.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/config/README.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nfolders:\n  docs:\n    index: README.md\n    include: ['*.md']\n  docs/subdir:\n    target: subdir\n    index: README.md\n    include: ['*.md']\n```\n\n----------------------------------------\n\nTITLE: Disabling Affinity Assistant for Autopilot\nDESCRIPTION: Command to disable the affinity assistant in Tekton Pipelines when running on GKE Autopilot mode\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/pipelines-install.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch cm feature-flags -n tekton-pipelines \\\n  -p '{\"data\":{\"disable-affinity-assistant\":\"true\"}}'\n```\n\n----------------------------------------\n\nTITLE: Enabling Artifact Registry API in GCP\nDESCRIPTION: Command to enable the Artifact Registry API in Google Cloud Platform, which is necessary before creating repositories.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/registry-authentication.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud services enable artifactregistry.googleapis.com\n```\n\n----------------------------------------\n\nTITLE: Sync Configuration Schema\nDESCRIPTION: YAML configuration schema for defining how documentation is synchronized from Tekton repositories\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/README.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncomponent: Foobar\nrepository: https://github.com/tektoncd/foobar\narchive: https://github.com/tektoncd/foobar/tags\ntags:\n- name: master\n  displayName: master\n  files:\n    foo.md : bar.md\n```\n\n----------------------------------------\n\nTITLE: Enabling GKE API\nDESCRIPTION: Command to enable the Google Kubernetes Engine API in your Google Cloud project\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/google/pipelines-install.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud services enable container.googleapis.com\n```\n\n----------------------------------------\n\nTITLE: Running Tracetest Test with CLI\nDESCRIPTION: Command to run a Tracetest test using the Tracetest CLI, specifying the test file and required gates.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ntracetest run test --file test-api.yaml --required-gates test-specs --output pretty\n```\n\n----------------------------------------\n\nTITLE: Creating Tabbed Code Samples Using Shortcodes in HTML\nDESCRIPTION: Shows how to create tabbed code samples using the 'tabs' and 'tab' shortcodes along with the 'readfile' shortcode. This example embeds two different YAML files in separate tabs.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/doc-con-formatting.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{</* tabs */>}}\n{{</* tab \"v1beta1\" */>}}\n{{</* readfile file=\"samples/pipeline1.yaml\" code=\"true\" lang=\"yaml\" */>}}\n{{</* /tab */>}}\n\n{{</* tab \"v1\" */>}}\n{{</* readfile file=\"samples/pipeline2.yaml\" code=\"true\" lang=\"yaml\" */>}}\n{{</* /tab */>}}\n{{</* /tabs */>}}\n```\n\n----------------------------------------\n\nTITLE: Building Docker Container for Tekton Docs\nDESCRIPTION: Commands to build and run the Tekton documentation site using Docker Compose\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/run-locally.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose rm\n```\n\n----------------------------------------\n\nTITLE: Git Operations for Dockerfile Updates\nDESCRIPTION: Git commands to commit and push Dockerfile changes\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ngit add .\ngit commit -m \"update to Dockerfile\"\ngit push\n```\n\n----------------------------------------\n\nTITLE: Complete Installation Guide Template in Markdown\nDESCRIPTION: Full example of a vendor installation guide file including front matter, disclaimer, and content import.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/README.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Install Tekton on my cloud service\nlinkTitle: Install Tekton on my cloud service\nweight: 3\ndescription: >\n  Installation guide to run Tekton on my cloud service.\n---\n\n{{%/* pageinfo */%}}\n{{%/* readfile \"/vendor/disclaimer.md\" */%}}\n{{%/* /pageinfo */%}}\n\n{{%/* readfile \"/vendor/my-vendor/installation.md\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Hugo Card Shortcode with GitHub Source Link\nDESCRIPTION: Hugo card shortcode that displays a link to the source document on GitHub.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Installation/additional-configs.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{< card  >}}\nSource for this document [available on GitHub](https://github.com/tektoncd/pipeline/blob/main/docs/additional-configs.md).\n{{< /card >}}\n```\n\n----------------------------------------\n\nTITLE: Monitoring Tekton Pipelines installation in OpenShift\nDESCRIPTION: Command to monitor the installation process of Tekton Pipelines by watching the pods in the tekton-pipelines namespace. This allows verification that all components are running successfully before proceeding.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/redhat/pipelines-install.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noc get pods --namespace tekton-pipelines --watch\n```\n\n----------------------------------------\n\nTITLE: Verifying Tracetest Installation in Kubernetes\nDESCRIPTION: kubectl command to check the status of Tracetest components after installation in the Kubernetes cluster.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get all -n tracetest\n```\n\n----------------------------------------\n\nTITLE: Markdown Template Inclusion\nDESCRIPTION: Template directives for including external content and adding a source reference card to the documentation.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Installation/triggers.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% readfile \"/docs/Triggers/install.md\" %}}\n\n---\n{{< card  >}}\nSource for this document [available on GitHub](https://github.com/tektoncd/triggers/blob/main/docs/install.md).\n{{< /card >}}\n```\n\n----------------------------------------\n\nTITLE: Running tek-get-pr Command to Fetch PipelineRun\nDESCRIPTION: This command retrieves a PipelineRun from the source cluster using the tek-get-pr script from the tektoncd/plumbing repository. It specifies the namespace and name of the PipelineRun to fetch.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/test-content/content.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntek-get-pr -n tekton-pipelines -p pipeline-run-name > pr.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Tracetest CLI on Different Operating Systems\nDESCRIPTION: Commands to install the Tracetest CLI on MacOS, Linux, and Windows using package managers or installation scripts.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install kubeshop/tracetest/tracetest\n```\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://raw.githubusercontent.com/kubeshop/tracetest/main/install-cli.sh | bash\n```\n\nLANGUAGE: bash\nCODE:\n```\nchoco source add --name=kubeshop_repo --source=https://chocolatey.kubeshop.io/chocolatey ; choco install tracetest\n```\n\n----------------------------------------\n\nTITLE: HTML Front Matter for Tekton Concepts Page\nDESCRIPTION: Hugo/markdown front matter configuration for the Tekton concepts documentation page, defining metadata like title, link text, navigation weight and description.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Concepts/_index.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--\n---\ntitle: \"Concepts\"\nlinkTitle: \"Concepts\"\nweight: 3\ndescription: >\n  Conceptual and technical information about Tekton\n---\n-->\n```\n\n----------------------------------------\n\nTITLE: Running tek-resource-exists Command to Check Resource\nDESCRIPTION: Command to verify if a specified resource exists in the given namespace. This helps determine if resources need to be created before applying migrated resources.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/test-content/content.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntek-resource-exists -n namespace -p resourcename\n```\n\n----------------------------------------\n\nTITLE: Running Tekton Website in Docker Container\nDESCRIPTION: Command to run the built Docker image and start the Tekton website locally using Docker Compose.\nSOURCE: https://github.com/tektoncd/website/blob/main/DEVELOPMENT.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up\n```\n\n----------------------------------------\n\nTITLE: HTML Comment Block for Tekton How-to Guides Page Frontmatter\nDESCRIPTION: HTML comment block containing YAML frontmatter that defines metadata for the 'How-to Guides' page in the Tekton documentation website. It specifies the title, link title, weight for navigation order, and a description explaining that the guides help users complete specific goals.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/_index.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--\n---\ntitle: \"How-to Guides\"\nlinkTitle: \"How-to Guides\"\nweight: 4\ndescription: >\n  Guides to help you complete a specific goal\n---\n-->\n```\n\n----------------------------------------\n\nTITLE: Command for Cleaning Up Timestamp and Status from Migrated Resources\nDESCRIPTION: This command uses jq to clean up Tekton resources before migration by removing system-specific metadata fields like timestamps, status, and other Kubernetes management data that should not be transferred.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/test-content/content.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncat pr.yaml |\\njq 'del(.metadata.creationTimestamp,.metadata.resourceVersion,.metadata.selfLink,.metadata.uid,.metadata.generation,.metadata.annotations,.status)'\n```\n\n----------------------------------------\n\nTITLE: Cloning Tekton Website Repository\nDESCRIPTION: Command to clone the Tekton website GitHub repository and change into the project directory.\nSOURCE: https://github.com/tektoncd/website/blob/main/DEVELOPMENT.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/tektoncd/website && cd website\n```\n\n----------------------------------------\n\nTITLE: Updating Local Cache for Sync Script\nDESCRIPTION: Command to force an update of the local cache used by the sync script to refresh documentation content.\nSOURCE: https://github.com/tektoncd/website/blob/main/DEVELOPMENT.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n./sync/sync.py --update-cache\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Minikube Cluster\nDESCRIPTION: Command to delete the minikube cluster and clean up resources.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/tasks.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nminikube delete\n```\n\n----------------------------------------\n\nTITLE: Removing Docker Images for Tekton Website\nDESCRIPTION: Command to clean up and remove the Docker images created for the Tekton website.\nSOURCE: https://github.com/tektoncd/website/blob/main/DEVELOPMENT.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose rm\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for Tekton Website\nDESCRIPTION: Command to build the Docker image for the Tekton website using Docker Compose.\nSOURCE: https://github.com/tektoncd/website/blob/main/DEVELOPMENT.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build\n```\n\n----------------------------------------\n\nTITLE: Overview Text Block in Markdown\nDESCRIPTION: Markdown content explaining the overview and setup requirements for Tekton Pipelines and container image building optimization. Includes information about system requirements and repository setup.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Overview\n\nWhen DevOps or developer teams evaluate the move from a persistent CI server (or a CI server using persistent workers) to a system using non-persistent workers backed by Kubernetes pods, such as Tekton Pipelines, they might also wonder how to speed up container image building using cached layers. While using cached layers is relatively easy when builds always run on the same server where layers can be stored locally, it is more challenging in an environment where the builds are run in non-persistent containers on Kubernetes. This article will show how to use Kaniko caching capabilities to speed up builds in your Tekton Pipeline.\n```\n\n----------------------------------------\n\nTITLE: Cloning the Tekton Website Repository\nDESCRIPTION: Command to clone the forked Tekton website repository to your local machine. This is the first step in setting up a local development environment for creating blog posts.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/blog-guidelines.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/<your-git-username>/website.git\n```\n\n----------------------------------------\n\nTITLE: Defining Front Matter for Tekton Community Page in YAML\nDESCRIPTION: YAML front matter that configures the web page title as 'Community' and sets its weight in the main menu to 30, determining its position in navigation.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/community/_index.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Community\nmenu:\n  main:\n    weight: 30\n---\n```\n\n----------------------------------------\n\nTITLE: Setting up Python Environment for Versions Script\nDESCRIPTION: Commands to create a Python virtual environment and install dependencies for running the versions script\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv .venv\nsource .venv/bin/activate\npip3 install -r requirements.txt\n./sync/versions.py add --project <project-name> <version-name>\n```\n\n----------------------------------------\n\nTITLE: Examining Initial Tekton Pipeline Commit in Git\nDESCRIPTION: The very first commit to the Tekton project (originally part of Knative) by Christie Wilson in August 2018, showing the initial creation of the Pipeline CRD and evolution of the Build CRD into a more generic Task CRD.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2022/graduation/index.md#2025-04-22_snippet_0\n\nLANGUAGE: git\nCODE:\n```\ncommit 49d2316d71e8c315e0a8fd76008bc2920f56b3c3\nAuthor: Christie Wilson <bobcatfish@gmail.com>\nDate:   Fri Aug 31 17:15:35 2018 -0700\n\nAdd pipeline strawman example\n\n@dlorenc @ImJasonH @tejal29 @aaron-prindle and I have been working on a\nstrawman proposal for adding a Pipeline CRD and also for possibly\nenvolving the Build CRD into a slightly more generic Task CRD.\n\nThis PR demonstrates some paper prototype examples of what it could look\nlike to define pipelines using the CRDs described in the README.\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Documentation Page\nDESCRIPTION: YAML frontmatter configuration block that defines metadata for the documentation page, including title, link title, weight, and description.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/doc-con-writing.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Tips and tricks for good writing\"\nlinkTitle: \"Tips and tricks for good writing\"\nweight: 5\ndescription:\n  Tips and tricks to write high quality documentation\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-Stage Dockerfile for Spring Boot Application\nDESCRIPTION: A multi-stage Dockerfile that builds a Spring Boot Java application using Maven in the first stage, then copies the compiled JAR to a lightweight JDK Alpine image for the runtime environment.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_1\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM maven as build\nCOPY mvnw .\nCOPY pom.xml .\nCOPY src src\nRUN mvn package -Dmaven.test.skip=true\n\n\nFROM eclipse-temurin:19-jdk-alpine\nCOPY --from=build /target/demo-0.0.1-SNAPSHOT.jar app.jar\nCMD [\"java\", \"-jar\", \"app.jar\"]\n\n```\n\n----------------------------------------\n\nTITLE: Sync Script Usage Example\nDESCRIPTION: Shows the command-line usage format for the sync script with available flags\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n       USAGE: sync.py [flags]\nflags:\n\nsync.py:\n  -c,--config: Config directory\n    (default: 'config')\n\nTry --helpfull to get a list of all flags.\n```\n\n----------------------------------------\n\nTITLE: HTML/Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration block for the documentation page, defining title, link title, weight and description for the Tekton Triggers installation guide.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Installation/triggers.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--\n---\ntitle: \"Install and set up Tekton Triggers\"\nlinkTitle: \"Tekton Triggers\"\nweight: 2\ndescription: >\n  Install Tekton Triggers on your cluster\n---\n-->\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton Migration Dependencies with Go\nDESCRIPTION: This command installs the tektoncd/plumbing tool required for Tekton resource migration using Go's package management system.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/test-content/content.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/tektoncd/plumbing/tekton/migration\n```\n\n----------------------------------------\n\nTITLE: Running Sync Script for Tekton Website\nDESCRIPTION: Command to execute the sync script that clones required repositories and prepares documentation content for the website.\nSOURCE: https://github.com/tektoncd/website/blob/main/DEVELOPMENT.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n./sync/sync.py\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration for Local Cluster Documentation\nDESCRIPTION: YAML frontmatter configuration for the documentation page, specifying title, link title, weight and description for the local Kubernetes cluster setup guide.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Installation/local-installation.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Local Kubernetes cluster\"\nlinkTitle: \"Local cluster\"\nweight: 1\ndescription: >\n  Set up a Kubernetes cluster on your computer to test Tekton.\n---\n```\n\n----------------------------------------\n\nTITLE: Setting up Python Environment for Sync Script\nDESCRIPTION: Commands to create a Python virtual environment and install dependencies for running the sync script\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv .venv\nsource .venv/bin/activate\npip3 install -r requirements.txt\n./sync/sync.py\n```\n\n----------------------------------------\n\nTITLE: Serving Tekton Website Locally\nDESCRIPTION: Command to start the Tekton website development server on localhost port 8888.\nSOURCE: https://github.com/tektoncd/website/blob/main/DEVELOPMENT.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Hugo Content Include Shortcode\nDESCRIPTION: Hugo shortcode that includes content from an external markdown file containing additional configuration documentation.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Installation/additional-configs.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% readfile \"/docs/Pipelines/additional-configs.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Adding Tabbed Authentication Content in HTML\nDESCRIPTION: Example showing how to use Hugo shortcodes to add vendor-specific authentication steps using tabs alongside default content.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n## Authentication\n\n{{</* tabs */>}}\n\n{{</* tab \"Default\" */>}}\n  Default authentication process:\n\n  1. Step 1\n  2. Step 2\n{{</* /tab */>}}\n\n{{</* tab \"My cloud provider\" */>}}\n{{</* readfile file=\"/vendor/my-vendor/my-service-auth.md\" */>}}\n{{</* /tab */>}}\n\n{{</* /tabs */>}}\n```\n\n----------------------------------------\n\nTITLE: Native Setup Commands for Tekton Docs\nDESCRIPTION: Series of commands for setting up and running the Tekton documentation site natively, including repository cloning, dependency installation, and local serving\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/run-locally.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/tektoncd/website && cd website\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv .venv\nsource .venv/bin/activate    \npip3 install -r requirements.txt\n```\n\nLANGUAGE: bash\nCODE:\n```\n./sync/sync.py\n```\n\nLANGUAGE: bash\nCODE:\n```\nnetlify dev\n```\n\n----------------------------------------\n\nTITLE: Hugo Readfile Shortcode\nDESCRIPTION: Hugo shortcode to include content from an external vendor README file.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/vendor-docs.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% readfile \"/vendor/README.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Embedding Code Sample Using Readfile Shortcode in HTML\nDESCRIPTION: Demonstrates how to use the 'readfile' shortcode to embed external code files into the documentation. This example shows embedding a YAML file with syntax highlighting.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/doc-con-formatting.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n{{</* readfile file=\"samples/task.yaml\" code=\"true\" lang=\"yaml\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Starting the Local Website Server\nDESCRIPTION: Commands to navigate to the website directory and start the development server using Docker Compose. This allows you to preview your blog post as you write it.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/blog-guidelines.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd website\ndocker-compose up\n```\n\n----------------------------------------\n\nTITLE: HTML Comment Block with Front Matter\nDESCRIPTION: Front matter metadata block defining the title, link title, weight and description for the documentation page.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/vendor-docs.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--\n---\ntitle: \"Platform-specific documentation\"\nlinkTitle: \"Platform-specific documentation\"\nweight: 3\ndescription: >\n  Content guidelines for documents describing how to use Tekton with a\n  particular cloud service\n---\n-->\n```\n\n----------------------------------------\n\nTITLE: Creating YAML Front Matter for Blog Post\nDESCRIPTION: Example YAML front matter template for a Tekton blog post. This metadata section defines the title, author, date, and description of the blog post.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/blog-guidelines.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Title\nlikTitle: Title\ndate: <date, for example 2022-10-26>\nauthor: \"Author name\"\ndescription: >\n  A heading sentence about your post\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Up Python Environment for Sync Script\nDESCRIPTION: Commands to create a Python virtual environment and install the required dependencies for the sync script that manages documentation content.\nSOURCE: https://github.com/tektoncd/website/blob/main/DEVELOPMENT.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv .venv\nsource .venv/bin/activate    \npip3 install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Example for Tekton Docs\nDESCRIPTION: Example directory structure showing the organization of documentation files in a Tekton repository.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/config/README.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ndocs\n├── subdir\n│   └── README.md\n└── README.md\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Page in YAML\nDESCRIPTION: YAML front matter configuration that specifies the title and layout for the search page functionality.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/search.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Search\nlayout: search\n\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Node Dependencies for Tekton Website\nDESCRIPTION: Command to install the required Node.js modules for running the Tekton website locally.\nSOURCE: https://github.com/tektoncd/website/blob/main/DEVELOPMENT.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Committing and Pushing Code Changes\nDESCRIPTION: Git commands to commit and push changes to the source code repository before running the pipeline again to test the build process with modified code.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/speeding-up-container-image-builds-in-tekton-pipelines/index.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit add .\ngit commit -m \"change to index.html\"\ngit push\n```\n\n----------------------------------------\n\nTITLE: Configuring Blog Menu Item in YAML for Tekton Website\nDESCRIPTION: This YAML snippet defines the configuration for the Blog section in the main menu of the Tekton website. It sets the title and weight for menu ordering.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/_index.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Blog\nmenu:\n  main:\n    weight: 40\n---\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Asciinema Cast for Tekton Website\nDESCRIPTION: This bash script rebuilds the asciinema cast file for the Tekton website. It runs the demo, removes the old cast file, and moves the new one to the correct location.\nSOURCE: https://github.com/tektoncd/website/blob/main/asciinema/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh\nrm -f ../static/asciinema/demo.cast\nmv ./demo.cast ../static/asciinema/demo.cast\n```\n\n----------------------------------------\n\nTITLE: HTML Frontmatter Comment for Disclaimer Page\nDESCRIPTION: HTML comment containing YAML frontmatter that defines the page title for the disclaimer documentation.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/disclaimer.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!-- \n---\ntitle: \"Disclaimer\"\n---\n-->\n```\n\n----------------------------------------\n\nTITLE: Deleting the Minikube Cluster\nDESCRIPTION: Command to delete the Minikube cluster used for the tutorial, cleaning up all resources.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Getting-started/pipelines.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nminikube delete\n```\n\n----------------------------------------\n\nTITLE: Configuring Netlify Continuous Deployment Settings for Tekton Website\nDESCRIPTION: This snippet shows the Netlify continuous deployment configuration for the Tekton website. It specifies base directory, build command, and publish directory settings.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/test-content/nested/another.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nBase directory: content/en\nBuild command: \"cd ../.. && npm install && npm run build\"\nPublish directory: dist\n```\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton Pipelines with OpenShift-specific modifications\nDESCRIPTION: Command to download the Tekton Pipelines release YAML, modify it to remove security context user and group settings (required for OpenShift's random user ID model), and apply it to the cluster. This uses yq to process the YAML file before applying it.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/redhat/pipelines-install.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://storage.googleapis.com/tekton-releases/pipeline/latest/release.notags.yaml | yq 'del(.spec.template.spec.containers[].securityContext.runAsUser, .spec.template.spec.containers[].securityContext.runAsGroup)' | oc apply -f -\n```\n\n----------------------------------------\n\nTITLE: Accessing Tracetest Web UI via Port Forwarding\nDESCRIPTION: kubectl command to set up port forwarding for accessing the Tracetest Web UI from a local machine.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/blog/2023/distributed-traces-for-testing-with-tekton-pipelines-and-tracetest/index.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --kubeconfig <path-to-your-home>/.kube/config --context <your-cluster-context> --namespace tracetest port-forward svc/tracetest 11633\n```\n\n----------------------------------------\n\nTITLE: Python Package Dependencies Declaration\nDESCRIPTION: Specifies required Python packages and their version constraints. Includes packages for Google Cloud integration, web utilities, markdown processing, testing tools, and Git operations.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nwget==3.2\nwheel>=0.36.0\nruamel.yaml==0.16.12\ngoogle-cloud-storage==1.23.0\nJinja2==3.1.6\ngoogle-auth==1.14.0\nurlopen==1.0.0\nmarkdown==3.1.1\ncoverage==5.3\nflake8==3.8.3\nclick>=7.1.2\ngitpython>=3.1.11\ngitdb-speedups>=0.1.0\nbeautifulsoup4==4.9.3\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements\nDESCRIPTION: List of Python package dependencies with specific version requirements. Includes core utilities like wget and wheel, cloud services packages like google-cloud-storage, templating with Jinja2, markdown processing, testing tools, and Git integration packages.\nSOURCE: https://github.com/tektoncd/website/blob/main/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nwget==3.2\nwheel>=0.36.0\nruamel.yaml==0.16.12\ngoogle-cloud-storage==1.23.0\nJinja2==3.1.6\ngoogle-auth==1.14.0\nurlopen==1.0.0\nmarkdown==3.1.1\ncoverage==5.3\nflake8==3.8.3\nclick>=7.1.2\ngitpython>=3.1.11\ngitdb-speedups>=0.1.0\nbeautifulsoup4==4.9.3\n```\n\n----------------------------------------\n\nTITLE: Creating Installation Guide Front Matter in YAML\nDESCRIPTION: Example YAML front matter for a vendor-specific installation guide, including title, weight, and description.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/README.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Install Tekton on my cloud service\nlinkTitle: Install Tekton on my cloud service\nweight: 3\ndescription: >\n  Installation guide to run Tekton on my cloud service.\n---\n```\n\n----------------------------------------\n\nTITLE: Adding Vendor Disclaimer in HTML\nDESCRIPTION: Shortcode example for including a standard vendor disclaimer at the top of vendor documentation.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/vendor/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{%/* pageinfo */%}}\n{{%/* readfile \"/vendor/disclaimer.md\" */%}}\n{{%/* /pageinfo */%}}\n```\n\n----------------------------------------\n\nTITLE: Hugo Template Shortcodes for Content Inclusion\nDESCRIPTION: Hugo template shortcodes for including external content and creating a card component with a link to the source documentation on GitHub.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Installation/pipelines.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{< readfile \"/docs/Pipelines/install.md\" >}}\n\n---\n{{< card  >}}\nSource for this document [available on GitHub](https://github.com/tektoncd/pipeline/blob/main/docs/install.md).\n{{< /card >}}\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton Pipelines VSCode Extension via URL\nDESCRIPTION: Command to install the Tekton Pipelines extension for Visual Studio Code directly from a URL using the code CLI.\nSOURCE: https://github.com/tektoncd/website/blob/main/sync/test-content/nested/content.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncode --install-extension https://github.com/redhat-developer/vscode-tekton/releases/download/v0.12.0/tekton-pipelines-0.12.0.vsix\n```\n\n----------------------------------------\n\nTITLE: Hugo Frontmatter Configuration in HTML Comments\nDESCRIPTION: HTML comment block containing Hugo frontmatter configuration that defines the page title, link title, weight and description for the documentation page.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Installation/additional-configs.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--\n---\ntitle: \"Additional Configuration Options\"\nlinkTitle: \"Additional Configuration Options\"\nweight: 4\ndescription: >\n  Additional configurations when installing Tekton Pipelines\n---\n-->\n```\n\n----------------------------------------\n\nTITLE: Hugo Shortcode for Page Info Block\nDESCRIPTION: Hugo shortcode block containing important licensing information for documentation contributions and code samples.\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/Contribute/vendor-docs.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% pageinfo %}}\n**Important**: Documentation contributions to this website must be licensed\nunder the [Creative Commons Attribution 4.0 License][ccl4], and the code samples\nmust be licensed under the [Apache 2.0 License][apache2].\n\n[ccl4]: https://creativecommons.org/licenses/by/4.0/\n[apache2]: https://www.apache.org/licenses/LICENSE-2.0\n{{% /pageinfo %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Dockerfile for TektonCD Website Container\nDESCRIPTION: This Dockerfile sets up a container image for serving the TektonCD website. It uses Python 3.8 as the base image, sets the working directory to /app, copies the website content, and specifies the command to serve the site using a Python HTTP server.\nSOURCE: https://github.com/tektoncd/website/blob/main/runtime.txt#2025-04-22_snippet_0\n\nLANGUAGE: Dockerfile\nCODE:\n```\nFROM python:3.8\n\nWORKDIR /app\n\nCOPY . .\n\nCMD [\"python\", \"-m\", \"http.server\", \"8080\"]\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Resources\nDESCRIPTION: Commands to apply the necessary Kubernetes resources including secrets, pipeline, and pipeline run\nSOURCE: https://github.com/tektoncd/website/blob/main/content/en/docs/How-to-guides/kaniko-build-push.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f docker-credentials.yaml\nkubectl apply -f pipeline.yaml\nkubectl create -f pipelinerun.yaml\n```"
  }
]
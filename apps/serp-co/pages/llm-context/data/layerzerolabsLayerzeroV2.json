[
  {
    "owner": "layerzero-labs",
    "repo": "layerzero-v2",
    "content": "TITLE: Deploy Solana Program to Network (shell)\nDESCRIPTION: Deploys the compiled Solana program (.so file) to the Solana network (e.g., devnet, testnet, mainnet-beta). The `--program-id` flag specifies the program's address using its keypair file.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/README.md#_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nsolana program deploy --program-id ./keypair/xxx.json ./target/deploy/xxx.so\n```\n\n----------------------------------------\n\nTITLE: Run Project Tests (shell)\nDESCRIPTION: Executes all test cases defined in the project. Tests for Solana programs are typically written in JavaScript or TypeScript and interact with a local validator or test network.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/README.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Building Solana Program using Anchor\nDESCRIPTION: Changes the directory to the Solana programs location within the monorepo (`packages/layerzero-v2/solana/programs`) and runs `anchor build`. This command compiles the Solana smart contracts using the Anchor framework.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\ncd ~/Desktop/layerzero/monorepo/packages/layerzero-v2/solana/programs\nanchor build\n```\n\n----------------------------------------\n\nTITLE: Build Solana Anchor Program (shell)\nDESCRIPTION: Compiles the Solana program source code written using the Anchor framework. This command processes the Rust code, generates necessary IDLs (Interface Definition Language), and produces the BPF (.so) executable file ready for deployment.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/README.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nanchor build\n```\n\n----------------------------------------\n\nTITLE: Fetching On-Chain Program Hash with solana-verify using Bash\nDESCRIPTION: Uses the `solana-verify get-program-hash` command to retrieve the bytecode of the specified program address (`76y...`) from the Solana Mainnet Beta RPC endpoint (`-u https://api.mainnet-beta.solana.com`) and compute its hash. This hash represents the deployed version of the program.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nsolana-verify get-program-hash -u  https://api.mainnet-beta.solana.com 76y77prsiCMvXMjuoZ5VRrhG5qYBrUMYTE5WgHqgjEn6\n```\n\n----------------------------------------\n\nTITLE: Generating Local Program Hash with solana-verify using Bash\nDESCRIPTION: Uses the `solana-verify get-executable-hash` command to compute the SHA256 hash of the compiled Solana program artifact located at `./target/deploy/endpoint.so`. This hash represents the locally built version of the program.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nsolana-verify get-executable-hash ./target/deploy/endpoint.so\n```\n\n----------------------------------------\n\nTITLE: Building and Testing LayerZero V2 Project with Yarn\nDESCRIPTION: This script installs dependencies, builds the project, and runs tests to ensure the LayerZero V2 codebase functions correctly. It is essential for development and quality assurance workflows.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn && yarn build && yarn test\n```\n\n----------------------------------------\n\nTITLE: Installing solana-verify Tool via Cargo using Bash\nDESCRIPTION: Installs the `solana-verify` utility using `cargo install`. This tool is specifically used for comparing the hash of a locally built Solana program executable with the hash of the program deployed on-chain. Requires Rust and Cargo.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\ncargo install solana-verify\n```\n\n----------------------------------------\n\nTITLE: Installing Anchor Framework via Cargo using Bash\nDESCRIPTION: Installs the Anchor Version Manager (`avm`) using `cargo install` from the Coral-XYZ Anchor repository. Then, it uses `avm` to install Anchor version 0.29.0 and sets it as the active version. Requires Rust and Cargo.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\ncargo install --git https://github.com/coral-xyz/anchor avm --force\navm install 0.29.0\navm use 0.29.0\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies using Yarn\nDESCRIPTION: Navigates into the LayerZero-v2 monorepo directory and executes the `yarn` command. This installs all JavaScript dependencies defined in the project's `package.json` files, managed via Yarn (enabled by Corepack). Requires Node.js and Corepack/Yarn.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\ncd ~/Desktop/layerzero/monorepo\nyarn\n```\n\n----------------------------------------\n\nTITLE: Run Tests Skipping Build (shell)\nDESCRIPTION: Executes the test suite without rebuilding the program binary. Useful for quickly re-running tests after code changes that don't require a recompile, saving development time.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/README.md#_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nanchor test --skip-build\n```\n\n----------------------------------------\n\nTITLE: Installing Solana CLI Tools v1.17.31 using Bash\nDESCRIPTION: Downloads and executes the Solana tool suite installation script using `curl`, targeting version 1.17.31. It then exports the path to the Solana binaries, adding them to the system's PATH environment variable.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ncurl -o- -sSfL https://release.solana.com/v1.17.31/install | bash\n\nexport PATH=\"/Users/carmencheng/.local/share/solana/install/active_release/bin:$PATH\"\n```\n\n----------------------------------------\n\nTITLE: Installing Homebrew on macOS Host using Bash\nDESCRIPTION: Downloads and executes the official Homebrew installation script using `curl` and `bash`. Homebrew is a package manager for macOS, required here to install the Tart VM manager.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js v20 via NVM using Bash\nDESCRIPTION: Uses the Node Version Manager (`nvm`) command `install` to download and install Node.js version 20. Requires NVM to be installed and loaded into the shell environment.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnvm install 20\n```\n\n----------------------------------------\n\nTITLE: Installing Node Version Manager (NVM) using Bash\nDESCRIPTION: Downloads and executes the NVM installation script using `curl`. It then exports the `NVM_DIR` environment variable and sources the `nvm.sh` script to enable NVM commands in the current shell.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash\n\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n```\n\n----------------------------------------\n\nTITLE: Installing Coreutils via Homebrew using Bash\nDESCRIPTION: Installs the `coreutils` package using Homebrew (`brew`). This package provides essential GNU utilities, including `sha256sum`, which is needed for hash verification later.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nbrew install coreutils\n```\n\n----------------------------------------\n\nTITLE: Enabling Corepack for Node.js using Bash\nDESCRIPTION: Runs the `corepack enable` command. Corepack is included with Node.js and is used to manage package managers like Yarn and pnpm, ensuring the correct version is used for the project.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ncorepack enable\n```\n\n----------------------------------------\n\nTITLE: Set Rust Toolchain Default to Nightly (shell)\nDESCRIPTION: Configures `rustup` to use the nightly channel as the default toolchain for Rust development. This is often necessary for Solana development which relies on features only available in recent or nightly Rust versions.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/README.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nrustup default nightly\n```\n\n----------------------------------------\n\nTITLE: Installing Homebrew within macOS VM using Bash\nDESCRIPTION: Installs Homebrew within the virtual machine environment for the `carmencheng` user. This command downloads and executes the official installation script via `curl` and `bash`.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Homebrew Environment in Zsh using Bash\nDESCRIPTION: Appends the Homebrew environment setup command to the `.zprofile` file for persistent configuration and then executes it in the current shell session using `eval`. This makes the `brew` command available in the PATH. Assumes Zsh is the default shell.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\necho 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> /Users/carmencheng/.zprofile\neval \"$(/opt/homebrew/bin/brew shellenv)\"\n```\n\n----------------------------------------\n\nTITLE: Installing Rust Toolchain v1.75.0 using Bash\nDESCRIPTION: Downloads and executes the `rustup` installation script using `curl`, specifically installing and setting the default Rust toolchain to version 1.75.0. It then sources the Cargo environment setup script to add Rust binaries to the PATH.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain=1.75.0\n\n. \"$HOME/.cargo/env\"\n```\n\n----------------------------------------\n\nTITLE: Installing Tart VM Manager via Homebrew using Bash\nDESCRIPTION: Uses the `brew` command to install `tart` from the `cirruslabs/cli` tap. Tart is required for creating and managing macOS virtual machines on Apple Silicon.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install cirruslabs/cli/tart\n```\n\n----------------------------------------\n\nTITLE: Creating Admin User within macOS VM using Bash\nDESCRIPTION: Creates a new user account named `carmencheng` with password `admin` using `sysadminctl` and grants it administrative privileges by adding it to the `admin` group using `dscl`. The specific username is noted as mandatory due to tooling limitations.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo sysadminctl -addUser carmencheng -fullName \"\" -password admin\nsudo dscl . -append /Groups/admin GroupMembership carmencheng\n```\n\n----------------------------------------\n\nTITLE: Connecting to a Tart VM via SSH using Bash\nDESCRIPTION: Establishes an SSH connection to the running `sonoma-base` Tart VM. It uses command substitution `$(tart ip sonoma-base)` to dynamically get the VM's IP address and connects as the default `admin` user.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nssh admin@$(tart ip sonoma-base)\n```\n\n----------------------------------------\n\nTITLE: Cloning LayerZero-v2 Repository using Git\nDESCRIPTION: Clones the LayerZero-v2 monorepo from its GitHub URL into the specified directory `~/Desktop/layerzero/monorepo` using the `git clone` command.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/LayerZero-Labs/LayerZero-v2.git ~/Desktop/layerzero/monorepo\n```\n\n----------------------------------------\n\nTITLE: Checking Out Specific Git Commit using Bash\nDESCRIPTION: Changes the current directory to the cloned repository and uses `git checkout` to switch the working tree to a specific commit hash (`37c598b...`). This ensures the source code matches the version intended for verification.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncd ~/Desktop/layerzero/monorepo\ngit checkout 37c598b3e6e218c5e00c8b0dcd42f984e5b13147\n```\n\n----------------------------------------\n\nTITLE: Deleting a Tart VM using Bash\nDESCRIPTION: Removes the specified Tart virtual machine (`sonoma-base`) using the `tart delete` command. This is intended to be run after verification is complete to free up disk space.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntart delete sonoma-base\n```\n\n----------------------------------------\n\nTITLE: Switching User Account within macOS VM using Bash\nDESCRIPTION: Switches the current user session to the newly created `carmencheng` account using the `su -` command. Requires entering the password (`admin`) for the `carmencheng` user.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsu - carmencheng\n```\n\n----------------------------------------\n\nTITLE: Run Specific Test Scopes (shell)\nDESCRIPTION: Executes a subset of tests filtered by the `TEST_SCOPES` environment variable. This allows developers to target specific groups of tests, such as those related to the ULN (Unified Logging Network).\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/README.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nTEST_SCOPES=uln yarn test\n```\n\n----------------------------------------\n\nTITLE: Cloning and Running a macOS Tart VM using Bash\nDESCRIPTION: Clones a base macOS Sonoma image from GitHub Container Registry using `tart clone` and then starts the virtual machine named `sonoma-base` using `tart run`.\nSOURCE: https://github.com/layerzero-labs/layerzero-v2/blob/main/packages/layerzero-v2/solana/programs/verify-contracts.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntart clone ghcr.io/cirruslabs/macos-sonoma-base:latest sonoma-base\ntart run sonoma-base\n```"
  }
]
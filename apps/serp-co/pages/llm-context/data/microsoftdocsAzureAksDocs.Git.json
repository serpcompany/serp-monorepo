[
  {
    "owner": "microsoftdocs",
    "repo": "azure-aks-docs.git",
    "content": "TITLE: Creating Azure Resource Group\nDESCRIPTION: Creates a new resource group in Azure using the Azure CLI to contain all related resources for the deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name $MY_RESOURCE_GROUP_NAME --location $MY_LOCATION --output table\n```\n\n----------------------------------------\n\nTITLE: Deploying Pod with Key Vault Integration\nDESCRIPTION: Kubernetes manifest for deploying a pod that accesses Azure Key Vault using workload identity. Includes environment variables for key vault URL and secret name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-deploy-cluster.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: v1\nkind: Pod\nmetadata:\n    name: sample-workload-identity-key-vault\n    namespace: ${SERVICE_ACCOUNT_NAMESPACE}\n    labels:\n        azure.workload.identity/use: \"true\"\nspec:\n    serviceAccountName: ${SERVICE_ACCOUNT_NAME}\n    containers:\n      - image: ghcr.io/azure/azure-workload-identity/msal-go\n        name: oidc\n        env:\n          - name: KEYVAULT_URL\n            value: ${KEYVAULT_URL}\n          - name: SECRET_NAME\n            value: ${KEYVAULT_SECRET_NAME}\n    nodeSelector:\n        kubernetes.io/os: linux\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Zone Spanning Configuration\nDESCRIPTION: Commands to create an AKS cluster with zone spanning system nodepool across three availability zones and add a user nodepool with balanced node distribution.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/availability-zones-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Create an AKS Cluster, and create a zone spanning System Nodepool in all three AZs, one node in each AZ\naz aks create --resource-group example-rg --name example-cluster --node-count 3 --zones 1 2 3\n# Add one new zone spanning User Nodepool, two nodes in each\naz aks nodepool add --resource-group example-rg --cluster-name example-cluster --name userpool-a  --node-count 6 --zones 1 2 3\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Resource Group for AKS\nDESCRIPTION: Creates a resource group in Azure to contain the AKS cluster and related resources. The resource group name and location are specified using previously defined environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group create --name $MY_RESOURCE_GROUP_NAME --location $REGION\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Principal using Azure CLI\nDESCRIPTION: Uses the az ad sp create-for-rbac command to create a new Microsoft Entra service principal that can be used with an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad sp create-for-rbac --name myAKSClusterServicePrincipal\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with User-Assigned Managed Identity\nDESCRIPTION: This command creates an AKS cluster with a user-assigned managed identity. It configures the cluster with Azure CNI networking plugin, custom VNet, and other network settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --network-plugin azure \\\n    --vnet-subnet-id <subnet-id> \\\n    --dns-service-ip 10.2.0.10 \\\n    --service-cidr 10.2.0.0/24 \\\n    --assign-identity $RESOURCE_ID \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Manifest for AKS Store Application\nDESCRIPTION: Complete YAML manifest defining deployments and services for RabbitMQ, order service, product service, and store front components. Includes configurations for container images, environment variables, resource limits, and service exposures.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: rabbitmq\n        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine\n        ports:\n        - containerPort: 5672\n          name: rabbitmq-amqp\n        - containerPort: 15672\n          name: rabbitmq-http\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"username\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"password\"\n        resources:\n          requests:\n            cpu: 10m\n            memory: 128Mi\n          limits:\n            cpu: 250m\n            memory: 256Mi\n        volumeMounts:\n        - name: rabbitmq-enabled-plugins\n          mountPath: /etc/rabbitmq/enabled_plugins\n          subPath: enabled_plugins\n      volumes:\n      - name: rabbitmq-enabled-plugins\n        configMap:\n          name: rabbitmq-enabled-plugins\n          items:\n          - key: rabbitmq_enabled_plugins\n            path: enabled_plugins\n---\napiVersion: v1\ndata:\n  rabbitmq_enabled_plugins: |\n    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].\nkind: ConfigMap\nmetadata:\n  name: rabbitmq-enabled-plugins            \n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n    - name: rabbitmq-amqp\n      port: 5672\n      targetPort: 5672\n    - name: rabbitmq-http\n      port: 15672\n      targetPort: 15672\n  type: ClusterIP\n```\n\n----------------------------------------\n\nTITLE: Assigning Key Vault Secrets User Role to User-Assigned Managed Identity\nDESCRIPTION: This command assigns the Key Vault Secrets User role to a user-assigned managed identity, granting it permissions to access secrets in a key vault. The role assignment is scoped to the key vault resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz role assignment create \\\n    --assignee $CLIENT_ID \\\n    --role \"Key Vault Secrets User\" \\\n    --scope \"<keyvault-resource-id>\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to the AKS Automatic Cluster\nDESCRIPTION: Commands to configure kubectl to connect to the AKS cluster and verify the connection by listing cluster nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSAutomaticCluster\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Defining Developer Role YAML\nDESCRIPTION: YAML manifest that defines a Role with full access permissions for the dev namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: dev-user-full-access\n  namespace: dev\nrules:\n- apiGroups: [\"\", \"extensions\", \"apps\"]\n  resources: [\"*\"]\n  verbs: [\"*\"]\n- apiGroups: [\"batch\"]\n  resources:\n  - jobs\n  - cronjobs\n  verbs: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Azure ARM Template Variables Configuration\nDESCRIPTION: JSON structure showing the ARM template variables section containing plan details and cluster extension type name that are required for Kubernetes application deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-application-az-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"variables\": {\n    \"plan-name\": \"DONOTMODIFY\",\n    \"plan-publisher\": \"DONOTMODIFY\",\n    \"plan-offerID\": \"DONOTMODIFY\",\n    \"releaseTrain\": \"DONOTMODIFY\",\n    \"clusterExtensionTypeName\": \"DONOTMODIFY\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring maxUnavailable for Controlled Rolling Updates in Kubernetes\nDESCRIPTION: A deployment manifest that sets maxUnavailable to 1 to limit the number of pods that can be unavailable during rolling updates. This ensures the application remains operational with minimal disruption during updates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 4\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1 # Maximum number of pods that can be unavailable during the update\n```\n\n----------------------------------------\n\nTITLE: PowerShell - Getting ACR Login Server\nDESCRIPTION: PowerShell command to get the login server address for an Azure Container Registry instance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-application.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n(Get-AzContainerRegistry -ResourceGroupName myResourceGroup -Name $ACRNAME).LoginServer\n```\n\n----------------------------------------\n\nTITLE: Configuring MaxSurge for AKS Node Pool Upgrades\nDESCRIPTION: This Azure CLI command updates a node pool in an AKS cluster to set the maxSurge value to 1. This configuration improves reliability and minimizes downtime during upgrade operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update \\\n  --resource-group myResourceGroup \\\n  --cluster-name myAKSCluster \\\n  --name myNodePool \\\n  --max-surge 1\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with RBAC and Managed Identity\nDESCRIPTION: Deploys an AKS cluster with Azure RBAC, managed identity, and AAD integration enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-flyte.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz aks create --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --enable-azure-rbac --enable-managed-identity --enable-aad --dns-name-prefix $DNS_NAME_PREFIX  --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Key Vault using DefaultAzureCredential in Node.js\nDESCRIPTION: This Node.js code snippet demonstrates how to use DefaultAzureCredential from @azure/identity to authenticate with Azure Key Vault and retrieve a secret. It uses environment variables for the Key Vault URL and secret name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-overview.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { DefaultAzureCredential } from \"@azure/identity\";\nimport { SecretClient } from \"@azure/keyvault-secrets\";\n\nconst main = async () => {\n    const keyVaultUrl = process.env[\"KEYVAULT_URL\"];\n    const secretName = process.env[\"SECRET_NAME\"];\n\n    const credential = new DefaultAzureCredential();\n    const client = new SecretClient(keyVaultUrl, credential);\n\n    const secret = await client.getSecret(secretName);\n}\n\nmain().catch((error) => {\n    console.error(\"An error occurred:\", error);\n    process.exit(1);\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod CPU and Memory Limits in Kubernetes\nDESCRIPTION: Example of setting CPU and memory resource limits for a pod using YAML configuration. Demonstrates how to define both resource requests and limits to ensure proper resource allocation and prevent resource overconsumption.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: mypod\nspec:\n  containers:\n  - name: mypod\n    image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 250m\n        memory: 256Mi\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Quotas in Kubernetes for AKS\nDESCRIPTION: A YAML manifest that defines resource quotas for a namespace, setting hard limits of 10 CPUs, 20Gi of memory, and 10 pods. Used to enforce resource constraints for a development team.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-scheduler.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: dev-app-team\nspec:\n  hard:\n    cpu: \"10\"\n    memory: 20Gi\n    pods: \"10\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with ACR Integration using Azure CLI\nDESCRIPTION: Creates a 3-node AKS cluster with access to Azure Container Registry using Azure CLI. Configures node size, SSH keys and attaches ACR.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-count 3 \\\n    --node-vm-size standard_l8s_v3 \\\n    --generate-ssh-keys \\\n    --attach-acr $ACRNAME\n```\n\n----------------------------------------\n\nTITLE: Deploying a StatefulSet with NFS-backed Azure File Share in AKS\nDESCRIPTION: YAML definition for creating a StatefulSet that uses an NFS-backed Azure File share via the CSI driver. The StatefulSet creates pods that write timestamps to a file in the mounted volume with ReadWriteMany access mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f\n\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: statefulset-azurefile\n  labels:\n    app: nginx\nspec:\n  podManagementPolicy: Parallel  # default is OrderedReady\n  serviceName: statefulset-azurefile\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n        - name: statefulset-azurefile\n          image: mcr.microsoft.com/oss/nginx/nginx:1.19.5\n          command:\n            - \"/bin/bash\"\n            - \"-c\"\n            - set -euo pipefail; while true; do echo $(date) >> /mnt/azurefile/outfile; sleep 1; done\n          volumeMounts:\n            - name: persistent-storage\n              mountPath: /mnt/azurefile\n  updateStrategy:\n    type: RollingUpdate\n  selector:\n    matchLabels:\n      app: nginx\n  volumeClaimTemplates:\n    - metadata:\n        name: persistent-storage\n      spec:\n        storageClassName: azurefile-csi-nfs\n        accessModes: [\"ReadWriteMany\"]\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Implementing Graceful Pod Termination in Kubernetes\nDESCRIPTION: YAML configuration showing how to implement graceful pod termination using PreStop hooks to ensure proper cleanup before container shutdown.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: lifecycle-demo\nspec:\n  containers:\n  - name: lifecycle-demo-container\n    image: nginx\n    lifecycle:\n      preStop:\n        exec:\n          command: [\"/bin/sh\", \"-c\", \"nginx -s quit; while killall -0 nginx; do sleep 1; done\"]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Kubernetes Pod\nDESCRIPTION: This command removes a pod from the Kubernetes cluster using the specified YAML manifest file. It's used to clean up resources after testing policy enforcement.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-policy.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f nginx-unprivileged.yaml\n```\n\n----------------------------------------\n\nTITLE: Deploying Pod with Workload Identity Configuration\nDESCRIPTION: Kubernetes manifest for deploying a pod that uses workload identity authentication. The manifest includes necessary metadata labels and service account configuration for workload identity functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-deploy-cluster.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Pod\nmetadata:\n  name: sample-workload-identity\n  namespace: ${SERVICE_ACCOUNT_NAMESPACE}  # Replace with your namespace\n  labels:\n    azure.workload.identity/use: \"true\"  # Required. Only pods with this label can use workload identity.\nspec:\n  serviceAccountName: ${SERVICE_ACCOUNT_NAME}  # Replace with your service account name\n  containers:\n    - name: rabbitmq  # Replace with your container name\n      image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine  # Replace with your Docker image\n      ports:\n        - containerPort: 5672\n          name: rabbitmq-amqp\n        - containerPort: 15672\n          name: rabbitmq-http\n      env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"username\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"password\"\n      resources:\n        requests:\n          cpu: 10m\n          memory: 128Mi\n        limits:\n          cpu: 250m\n          memory: 256Mi\nEOF\n```\n\n----------------------------------------\n\nTITLE: Setting a Secret in Azure Key Vault\nDESCRIPTION: Sets a plain-text secret in the Azure Key Vault using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-driver.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault secret set --vault-name <keyvault-name> --name ExampleSecret --value MyAKSExampleSecret\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Replica Deployments in Kubernetes\nDESCRIPTION: A deployment manifest that specifies three replicas of an NGINX application to ensure high availability. Multiple replicas provide resiliency during node failures and can be distributed across availability zones if enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Liveness Probes in Kubernetes\nDESCRIPTION: A pod definition that demonstrates how to configure an HTTP GET liveness probe with custom headers. The probe checks if a server is responding correctly at the /healthz endpoint on port 8080.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    test: liveness\n  name: liveness-http\nspec:\n  containers:\n  - name: liveness\n    image: registry.k8s.io/liveness\n    args:\n    - /server\n    livenessProbe:\n      httpGet:\n        path: /healthz\n        port: 8080\n        httpHeaders:\n        - name: Custom-Header\n          value: Awesome\n      initialDelaySeconds: 3\n      periodSeconds: 3\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with AI Toolchain Operator\nDESCRIPTION: Command to create a new AKS cluster with the AI toolchain operator add-on enabled, which is required for AI model deployment. The command also enables the OIDC issuer for identity federation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --location $AZURE_LOCATION \\\n    --resource-group $AZURE_RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --enable-oidc-issuer \\\n    --enable-ai-toolchain-operator \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating a Static Gateway Configuration resource\nDESCRIPTION: YAML definition for a StaticGatewayConfiguration custom resource that specifies which node pool and public IP prefix to use. This configuration can also exclude specific CIDR ranges from being routed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-static-egress-gateway.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: egressgateway.kubernetes.azure.com/v1alpha1\nkind: StaticGatewayConfiguration\nmetadata:\n  name: <gateway-config-name>\n  namespace: <namespace>\nspec:\n  gatewayNodepoolName: <nodepool-name>\n  excludeCidrs:  # Optional\n  - 10.0.0.0/8\n  - 172.16.0.0/12\n  - 169.254.169.254/32\n  publicIpPrefixId: /subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.Network/publicIPPrefixes/<prefix-name> # Optional\n```\n\n----------------------------------------\n\nTITLE: Configuring API Priority and Fairness in Kubernetes\nDESCRIPTION: A table showing the custom resources PriorityLevelConfigurations and FlowSchemas used to implement API Priority and Fairness (APF) in Kubernetes. These resources help prioritize and manage API requests to protect the cluster's API server and reduce HTTP 429 errors.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-performance-scale.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Custom resource | Key features |\n| -------------------- | ------------ |\n| PriorityLevelConfigurations | • Define different priority levels for API requests.<br/> • Specifies a unique name and assigns an integer value representing the priority level. Higher priority levels have lower integer values, indicating they're more critical.<br/> • Can use multiple to categorize requests into different priority levels based on their importance.<br/> • Allow you to specify whether requests at a particular priority level should be subject to rate limits. |\n| FlowSchemas | • Define how API requests should be routed to different priority levels based on request attributes.<br/> • Specify rules that match requests based on criteria like API groups, versions, and resources.<br/> • When a request matches a given rule, the request is directed to the priority level specified in the associated PriorityLevelConfiguration.<br/> • Can use to set the order of evaluation when multiple FlowSchemas match a request to ensure that certain rules take precedence. |\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure RBAC using Azure CLI\nDESCRIPTION: This snippet demonstrates how to create a new AKS cluster with managed Microsoft Entra integration and Azure RBAC for Kubernetes Authorization using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\nexport RESOURCE_GROUP=<resource-group-name>\nexport LOCATION=<azure-region>\n\naz group create --name $RESOURCE_GROUP --location $LOCATION\n\nexport CLUSTER_NAME=<cluster-name>\n\naz aks create \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --enable-aad \\\n    --enable-azure-rbac \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Implementing Network Policy for Pod Traffic Control in AKS\nDESCRIPTION: YAML configuration that defines a Kubernetes NetworkPolicy to control pod-to-pod communication. This policy allows ingress traffic only from pods labeled 'app: frontend' to pods labeled 'app: backend', implementing fine-grained traffic control within the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-network.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: NetworkPolicy\napiVersion: networking.k8s.io/v1\nmetadata:\n  name: backend-policy\nspec:\n  podSelector:\n    matchLabels:\n      app: backend\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app: frontend\n```\n\n----------------------------------------\n\nTITLE: Defining Pod Disruption Budget with Maximum Unavailable Pods\nDESCRIPTION: A YAML manifest that defines a PodDisruptionBudget setting a maximum of 2 unavailable pods with the label 'app: nginx-frontend' during voluntary disruption events.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-scheduler.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n   name: nginx-pdb\nspec:\n   maxUnavailable: 2\n   selector:\n    matchLabels:\n      app: nginx-frontend\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network with Subnets for AKS Nodes and Pods\nDESCRIPTION: Sets up a virtual network with separate subnets for AKS nodes and pods. This is required for the virtual network IP address assignment method with Azure CNI Powered by Cilium.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-powered-by-cilium.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a virtual network with a subnet for nodes and a subnet for pods\naz network vnet create --resource-group <resourceGroupName> --location <location> --name <vnetName> --address-prefixes <address prefix, example: 10.0.0.0/8> -o none\naz network vnet subnet create --resource-group <resourceGroupName> --vnet-name <vnetName> --name nodesubnet --address-prefixes <address prefix, example: 10.240.0.0/16> -o none\naz network vnet subnet create --resource-group <resourceGroupName> --vnet-name <vnetName> --name podsubnet --address-prefixes <address prefix, example: 10.241.0.0/16> -o none\n```\n\n----------------------------------------\n\nTITLE: Creating Microsegmentation Network Policy in Kubernetes\nDESCRIPTION: This network policy implements microsegmentation by allowing frontend pods to only communicate with backend pods on port 8080 within the same namespace. It demonstrates fine-grained control over pod-to-pod communication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: frontend-to-backend\n  namespace: team-a\nspec:\n  podSelector:\n    matchLabels:\n      app: frontend\n  policyTypes:\n    - Egress\n  egress:\n    - to:\n        - podSelector:\n            matchLabels:\n              app: backend\n      ports:\n        - protocol: TCP\n          port: 8080\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Cluster Autoscaler Enabled\nDESCRIPTION: Creates a new AKS cluster with cluster autoscaler enabled, setting minimum node count to 1 and maximum to 3. The cluster uses virtual machine scale sets and standard load balancer.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks create \\\n--resource-group myResourceGroup \\\n--name myAKSCluster \\\n--node-count 1 \\\n--vm-set-type VirtualMachineScaleSets \\\n--load-balancer-sku standard \\\n--enable-cluster-autoscaler \\\n--min-count 1 \\\n--max-count 3 \\\n--generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Stopping AKS Cluster using Azure CLI\nDESCRIPTION: Command to stop a running AKS cluster including nodes and control plane using Azure CLI. Requires cluster name and resource group parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/start-stop-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks stop --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Store Application Kubernetes Manifest\nDESCRIPTION: Kubernetes manifest file that defines the complete deployment of the AKS Store demo application including RabbitMQ, order service, product service, and store front components with their respective services and configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: rabbitmq\n        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine\n        ports:\n        - containerPort: 5672\n          name: rabbitmq-amqp\n        - containerPort: 15672\n          name: rabbitmq-http\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"username\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"password\"\n        resources:\n          requests:\n            cpu: 10m\n            memory: 128Mi\n          limits:\n            cpu: 250m\n            memory: 256Mi\n        volumeMounts:\n        - name: rabbitmq-enabled-plugins\n          mountPath: /etc/rabbitmq/enabled_plugins\n          subPath: enabled_plugins\n      volumes:\n      - name: rabbitmq-enabled-plugins\n        configMap:\n          name: rabbitmq-enabled-plugins\n          items:\n          - key: rabbitmq_enabled_plugins\n            path: enabled_plugins\n---\napiVersion: v1\ndata:\n  rabbitmq_enabled_plugins: |\n    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].\nkind: ConfigMap\nmetadata:\n  name: rabbitmq-enabled-plugins\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n    - name: rabbitmq-amqp\n      port: 5672\n      targetPort: 5672\n    - name: rabbitmq-http\n      port: 15672\n      targetPort: 15672\n  type: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: order-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: order-service\n  template:\n    metadata:\n      labels:\n        app: order-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: order-service\n        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: ORDER_QUEUE_HOSTNAME\n          value: \"rabbitmq\"\n        - name: ORDER_QUEUE_PORT\n          value: \"5672\"\n        - name: ORDER_QUEUE_USERNAME\n          value: \"username\"\n        - name: ORDER_QUEUE_PASSWORD\n          value: \"password\"\n        - name: ORDER_QUEUE_NAME\n          value: \"orders\"\n        - name: FASTIFY_ADDRESS\n          value: \"0.0.0.0\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n      initContainers:\n      - name: wait-for-rabbitmq\n        image: busybox\n        command: ['sh', '-c', 'until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: order-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3000\n    targetPort: 3000\n  selector:\n    app: order-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-service\n  template:\n    metadata:\n      labels:\n        app: product-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: product-service\n        image: ghcr.io/azure-samples/aks-store-demo/product-service:latest\n        ports:\n        - containerPort: 3002\n        resources:\n          requests:\n            cpu: 1m\n            memory: 1Mi\n          limits:\n            cpu: 1m\n            memory: 7Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3002\n    targetPort: 3002\n  selector:\n    app: product-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: store-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: store-front\n  template:\n    metadata:\n      labels:\n        app: store-front\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: store-front\n        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest\n        ports:\n        - containerPort: 8080\n          name: store-front\n        env:\n        - name: VUE_APP_ORDER_SERVICE_URL\n          value: \"http://order-service:3000/\"\n        - name: VUE_APP_PRODUCT_SERVICE_URL\n          value: \"http://product-service:3002/\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 200Mi\n          limits:\n            cpu: 1000m\n            memory: 512Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: store-front\nspec:\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: store-front\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Creating Internal Load Balancer Service in AKS\nDESCRIPTION: YAML configuration for creating a Kubernetes service of type LoadBalancer with internal load balancer annotation. This creates an Azure load balancer in the node resource group connected to the AKS cluster's virtual network.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/internal-lb.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: internal-app\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n  selector:\n    app: internal-app\n```\n\n----------------------------------------\n\nTITLE: Deploying an AKS Cluster\nDESCRIPTION: Creates an AKS cluster with one node and automatically generates SSH keys for node access. The cluster uses a system-assigned managed identity for Azure resource authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks create \\\n    --resource-group $MY_RESOURCE_GROUP_NAME \\\n    --name $MY_AKS_CLUSTER_NAME \\\n    --node-count 1 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Upgrading AKS Cluster Using Azure CLI\nDESCRIPTION: Commands to upgrade an Azure Kubernetes Service cluster to a specific Kubernetes version using Azure CLI. The upgrade command is followed by a verification command to check the successful upgrade.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks upgrade \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --kubernetes-version <KUBERNETES_VERSION>\n```\n\n----------------------------------------\n\nTITLE: Creating New AKS Cluster with Auto-Upgrade\nDESCRIPTION: Azure CLI command to create a new AKS cluster with stable auto-upgrade channel enabled. The command configures automatic upgrades during cluster creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/auto-upgrade-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group myResourceGroup --name myAKSCluster --auto-upgrade-channel stable --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with OIDC Issuer\nDESCRIPTION: Deploys an AKS cluster with OIDC issuer and workload identity enabled using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-deploy-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport CLUSTER_NAME=\"myAKSCluster$RANDOM_ID\"\naz aks create \\\n    --resource-group \"${RESOURCE_GROUP}\" \\\n    --name \"${CLUSTER_NAME}\" \\\n    --enable-oidc-issuer \\\n    --enable-workload-identity \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with ACR Integration using Azure CLI\nDESCRIPTION: Creates a new AKS cluster and integrates it with an existing ACR using Azure CLI. Configures AcrPull role for the managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nMYACR=mycontainerregistry\n\naz aks create --name myAKSCluster --resource-group myResourceGroup --generate-ssh-keys --attach-acr $MYACR\n```\n\n----------------------------------------\n\nTITLE: Configuring AKS Diagnostic Settings Using Azure CLI\nDESCRIPTION: A CLI command to create diagnostic settings for an AKS cluster, enabling various control plane logs and directing them to a Log Analytics workspace with resource-specific collection mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz monitor diagnostic-settings create --name AKS-Diagnostics --resource /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myresourcegroup/providers/Microsoft.ContainerService/managedClusters/my-cluster --logs '[{\"category\": \"kube-audit\",\"enabled\": true}, {\"category\": \"kube-audit-admin\", \"enabled\": true}, {\"category\": \"kube-apiserver\", \"enabled\": true}, {\"category\": \"kube-controller-manager\", \"enabled\": true}, {\"category\": \"kube-scheduler\", \"enabled\": true}, {\"category\": \"cluster-autoscaler\", \"enabled\": true}, {\"category\": \"cloud-controller-manager\", \"enabled\": true}, {\"category\": \"guard\", \"enabled\": true}, {\"category\": \"csi-azuredisk-controller\", \"enabled\": true}, {\"category\": \"csi-azurefile-controller\", \"enabled\": true}, {\"category\": \"csi-snapshot-controller\", \"enabled\": true}]'  --workspace /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myresourcegroup/providers/microsoft.operationalinsights/workspaces/myworkspace --export-to-resource-specific true\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Autoscaler in Azure CLI\nDESCRIPTION: This command creates an AKS cluster with the cluster autoscaler enabled, setting minimum and maximum node counts. It uses Virtual Machine Scale Sets and a standard load balancer.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-count 2 \\\n    --vm-set-type VirtualMachineScaleSets \\\n    --load-balancer-sku standard \\\n    --enable-cluster-autoscaler  \\\n    --min-count 1 \\\n    --max-count 3 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Enabling Cluster Autoscaler on Existing AKS Cluster\nDESCRIPTION: Updates an existing AKS cluster to enable the cluster autoscaler on its node pool, setting minimum count to 1 and maximum count to 3 nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --enable-cluster-autoscaler \\\n  --min-count 1 \\\n  --max-count 3\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Status with kubectl describe\nDESCRIPTION: This Bash command uses kubectl to describe the pod and verify its status after deployment. Replace 'podName' with the actual name of your deployed pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pods podName\n```\n\n----------------------------------------\n\nTITLE: Managing AKS Cluster Upgrades with PowerShell\nDESCRIPTION: PowerShell commands for checking available Kubernetes versions and performing cluster upgrades. These commands provide an alternative to Azure CLI for maintaining cluster security through version updates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-cluster-security.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzAksUpgradeProfile -ResourceGroupName myResourceGroup -ClusterName myAKSCluster |\nSelect-Object -Property Name, ControlPlaneProfileKubernetesVersion -ExpandProperty ControlPlaneProfileUpgrade |\nFormat-Table -Property *\n\nSet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -KubernetesVersion <KUBERNETES_VERSION>\n```\n\n----------------------------------------\n\nTITLE: Deployment Model Comparison for AKS High Availability and Disaster Recovery\nDESCRIPTION: A markdown table comparing three deployment models (active-active, active-passive, and passive-cold) for AKS high availability and disaster recovery, listing their advantages and disadvantages.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ha-dr-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Deployment model|Pros|Cons|\n|----------------|----|----|\\n|[Active-active](#active-active-high-availability-deployment-model)|• No data loss or inconsistency during failover <br> • High resiliency <br> • Better utilization of resources with higher performance|• Complex implementation and management <br> • Higher cost <br> • Requires a load balancer and form of traffic routing|\n|[Active-passive](#active-passive-disaster-recovery-deployment-model)|• Simpler implementation and management <br> • Lower cost <br> • Doesn't require a load balancer or traffic manager|• Potential for data loss or inconsistency during failover <br> • Longer recovery time and downtime <br> • Underutilization of resources|\n|[Passive-cold](#passive-cold-failover-deployment-model)|• Lowest cost <br> • Doesn't require synchronization, replication, load balancer, or traffic manager <br> • Suitable for low-priority, non-critical workloads|• High risk of data loss or inconsistency during failover <br> • Longest recovery time and downtime <br> • Requires manual intervention to activate cluster and trigger backup|\n```\n\n----------------------------------------\n\nTITLE: Configuring Startup Probes in Kubernetes\nDESCRIPTION: A YAML snippet for configuring a startup probe that uses an HTTP GET request to determine when an application has successfully started. Includes failureThreshold and periodSeconds to allow sufficient time for startup.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nstartupProbe:\n  httpGet:\n    path: /healthz\n    port: 8080\n  failureThreshold: 30\n  periodSeconds: 10\n```\n\n----------------------------------------\n\nTITLE: Checking Available Kubernetes Versions with Azure CLI\nDESCRIPTION: This command uses the Azure CLI to check which Kubernetes releases are available for your AKS cluster. It retrieves upgrade options and displays the current version along with available upgrades.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-upgrades --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod Security Context in AKS\nDESCRIPTION: This YAML manifest defines a pod with specific security context settings that limit privileges. It runs as a non-root user (ID 1000), is part of group ID 2000, prevents privilege escalation, and allows only specific Linux capabilities for network administration and system time access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/developer-best-practices-pod-security.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: security-context-demo\nspec:\n  securityContext:\n    fsGroup: 2000\n  containers:\n    - name: security-context-demo\n      image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n      securityContext:\n        runAsUser: 1000\n        allowPrivilegeEscalation: false\n        capabilities:\n          add: [\"NET_ADMIN\", \"SYS_TIME\"]\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster for MongoDB Deployment\nDESCRIPTION: Creates an AKS cluster with workload identity and OIDC issuer enabled, adds a user node pool for MongoDB pods, and configures necessary permissions using az aks create, az aks nodepool add, and az role assignment create commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz aks create \\\n--location $MY_LOCATION \\\n--name $MY_CLUSTER_NAME \\\n--tier standard \\\n--resource-group $MY_RESOURCE_GROUP_NAME \\\n--network-plugin azure \\\n--node-vm-size Standard_DS4_v2 \\\n--node-count 1 \\\n--nodepool-name systempool \\\n--nodepool-tags \"pool=system\" \\\n--auto-upgrade-channel stable \\\n--node-os-upgrade-channel NodeImage \\\n--attach-acr ${MY_ACR_REGISTRY} \\\n--enable-oidc-issuer \\\n--enable-workload-identity \\\n--zones 1 2 3 \\\n--generate-ssh-keys \\\n--output none\n\naz aks nodepool add \\\n--resource-group $MY_RESOURCE_GROUP_NAME \\\n--cluster-name $MY_CLUSTER_NAME \\\n--name mongodbpool \\\n--node-vm-size Standard_DS4_v2 \\\n--node-count 3 \\\n--zones 1 2 3 \\\n--mode User \\\n--output table\n\nexport OIDC_URL=$(az aks show --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --query oidcIssuerProfile.issuerUrl -o tsv)\n\nexport KUBELET_IDENTITY=$(az aks show -g $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME -o tsv --query identityProfile.kubeletidentity.objectId)\naz role assignment create \\\n--assignee ${KUBELET_IDENTITY} \\\n--role \"AcrPull\" \\\n--scope ${MY_ACR_REGISTRY_ID} \\\n--output none\n```\n\n----------------------------------------\n\nTITLE: Creating AKS cluster with Azure CNI and pod-managed identity\nDESCRIPTION: Azure CLI commands to create a resource group and an AKS cluster with Azure CNI networking and pod-managed identity enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --enable-pod-identity \\\n    --network-plugin azure \\\n    --generate-ssh-keys\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Inspecting Pod-Specific Events\nDESCRIPTION: Commands to first list all pods and then describe a specific pod to view its events. This helps troubleshoot issues related to a particular pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/events.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n\nkubectl describe pod <pod-name>\n```\n\n----------------------------------------\n\nTITLE: Checking Available AKS Upgrades with Azure CLI\nDESCRIPTION: This snippet demonstrates how to use the Azure CLI to check for available Kubernetes upgrades for an AKS cluster. It uses the 'az aks get-upgrades' command to retrieve upgrade information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-upgrades --resource-group myResourceGroup --name myAKSCluster --output table\n```\n\n----------------------------------------\n\nTITLE: Configuring Readiness Probes in Kubernetes\nDESCRIPTION: A YAML snippet for configuring a readiness probe that uses an exec command to determine if a container is ready to accept traffic. Includes initialDelaySeconds and periodSeconds settings to control probe timing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nreadinessProbe:\n  exec:\n    command:\n    - cat\n    - /tmp/healthy\n  initialDelaySeconds: 5\n  periodSeconds: 5\n```\n\n----------------------------------------\n\nTITLE: Creating Private AKS Cluster with Custom DNS Zone and Subdomain using Azure CLI\nDESCRIPTION: This Azure CLI command creates a private AKS cluster with a custom private DNS zone and subdomain. It uses the az aks create command with flags for specifying both a custom private DNS zone resource ID and a subdomain.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name <private-cluster-name> \\\n    --resource-group <private-cluster-resource-group> \\\n    --load-balancer-sku standard \\\n    --enable-private-cluster \\\n    --assign-identity <resourceID> \\\n    --private-dns-zone <custom private dns zone resourceID> \\\n    --fqdn-subdomain <subdomain> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure CNI Networking using PowerShell\nDESCRIPTION: This PowerShell script creates a resource group and an AKS cluster with Azure CNI networking. The script specifies the network plugin as 'azure' to enable Azure CNI networking.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni.md#2025-04-21_snippet_0\n\nLANGUAGE: azurepowershell\nCODE:\n```\n## Create a resource group for the AKS cluster. ##\n$rg = @{\n    Name = \"test-rg\"\n    Location = \"eastus2\"\n}\nNew-AzResourceGroup @rg\n\n$net = @{\n      NetworkPlugin = \"azure\"\n      ResourceGroupName = \"test-rg\"\n      Name = \"aks-cluster\"\n}\nNew-AzAksCluster @net\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Manifest for AKS Store Application Deployment\nDESCRIPTION: Complete YAML manifest defining the AKS Store application components including StatefulSet for RabbitMQ, ConfigMap, Services, and Deployments for store-front, product-service, and order-service. Contains configuration for container images, environment variables, resource limits, health probes, and service exposures.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: rabbitmq\nspec:\n  serviceName: rabbitmq\n  replicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: rabbitmq\n        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine\n        ports:\n        - containerPort: 5672\n          name: rabbitmq-amqp\n        - containerPort: 15672\n          name: rabbitmq-http\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"username\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"password\"\n        resources:\n          requests:\n            cpu: 10m\n            memory: 128Mi\n          limits:\n            cpu: 250m\n            memory: 256Mi\n        volumeMounts:\n        - name: rabbitmq-enabled-plugins\n          mountPath: /etc/rabbitmq/enabled_plugins\n          subPath: enabled_plugins\n      volumes:\n      - name: rabbitmq-enabled-plugins\n        configMap:\n          name: rabbitmq-enabled-plugins\n          items:\n          - key: rabbitmq_enabled_plugins\n            path: enabled_plugins\n```\n\n----------------------------------------\n\nTITLE: Storage Types Comparison Table in AKS\nDESCRIPTION: Markdown table showing different storage types available in AKS and their capabilities, including read/write access patterns and Windows Server container support.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-storage.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Use case | Volume plugin | Read/write once | Read-only many | Read/write many | Windows Server container support |\n|----------|---------------|-----------------|----------------|-----------------|-----------------|\n| Shared configuration | Azure Files | Yes | Yes | Yes | Yes |\n| Structured app data | Azure Disks | Yes | No | No | Yes |\n| Unstructured data, file system operations | [BlobFuse] | Yes | Yes | Yes | No |\n```\n\n----------------------------------------\n\nTITLE: Managing AKS Cluster Upgrades with Azure CLI\nDESCRIPTION: Azure CLI commands for checking available Kubernetes versions and performing cluster upgrades. These commands help maintain cluster security by enabling version updates with minimal disruption to running workloads.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-cluster-security.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-upgrades --resource-group myResourceGroup --name myAKSCluster --output table\n\naz aks upgrade --resource-group myResourceGroup --name myAKSCluster --kubernetes-version KUBERNETES_VERSION\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure RBAC on Existing AKS Cluster using Azure CLI\nDESCRIPTION: This snippet shows how to enable Azure RBAC for Kubernetes Authorization on an existing AKS cluster using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks update --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --enable-azure-rbac\n```\n\n----------------------------------------\n\nTITLE: Specific Managed Identity Authentication for AKS\nDESCRIPTION: Shows how to authenticate using a specific managed identity by providing its client ID. Sets KUBECONFIG path and converts kubeconfig with msi login method and specific client ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l msi --client-id <msi-client-id>\n```\n\n----------------------------------------\n\nTITLE: Creating Scheduled PostgreSQL Backups with CNPG Operator\nDESCRIPTION: Commands to set up a scheduled backup that runs hourly using a cron-like schedule expression. This automates the backup process for regular point-in-time recovery options.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport BACKUP_SCHEDULED_NAME=\"scheduled-backup-1\"\n\ncat <<EOF | kubectl apply --context $AKS_PRIMARY_CLUSTER_NAME --namespace $PG_NAMESPACE -v 9 -f -\napiVersion: postgresql.cnpg.io/v1\nkind: ScheduledBackup\nmetadata:\n  name: $BACKUP_SCHEDULED_NAME\nspec:\n  # Backup once per hour\n  schedule: \"0 15 * ? * *\"\n  backupOwnerReference: self\n  cluster:\n    name: $PG_PRIMARY_CLUSTER_NAME\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating a Managed Identity for AKS Workload\nDESCRIPTION: Creates a user-assigned managed identity in Azure and exports its client ID and tenant ID. This identity will be used to access Key Vault resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz identity create --name $UAMI --resource-group $RESOURCE_GROUP\n\nexport USER_ASSIGNED_CLIENT_ID=\"$(az identity show --resource-group $RESOURCE_GROUP --name $UAMI --query 'clientId' -o tsv)\"\nexport IDENTITY_TENANT=$(az aks show --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP --query identity.tenantId -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Configuring Hubble UI Resources in Kubernetes\nDESCRIPTION: Complete YAML configuration for Hubble UI deployment including ServiceAccount, ClusterRole, ClusterRoleBinding, ConfigMap, Deployment and Service resources. Sets up necessary RBAC permissions, nginx configuration, and defines frontend and backend containers with required parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: hubble-ui\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: hubble-ui\n  labels:\n    app.kubernetes.io/part-of: retina\nrules:\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - networkpolicies\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - componentstatuses\n      - endpoints\n      - namespaces\n      - nodes\n      - pods\n      - services\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - apiextensions.k8s.io\n    resources:\n      - customresourcedefinitions\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - cilium.io\n    resources:\n      - \"*\"\n    verbs:\n      - get\n      - list\n      - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: hubble-ui\n  labels:\n    app.kubernetes.io/part-of: retina\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: hubble-ui\nsubjects:\n  - kind: ServiceAccount\n    name: hubble-ui\n    namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: hubble-ui-nginx\n  namespace: kube-system\ndata:\n  nginx.conf: |\n    server {\n        listen       8081;\n        server_name  localhost;\n        root /app;\n        index index.html;\n        client_max_body_size 1G;\n        location / {\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            # CORS\n            add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n            add_header Access-Control-Allow-Origin *;\n            add_header Access-Control-Max-Age 1728000;\n            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n            if ($request_method = OPTIONS) {\n                return 204;\n            }\n            # /CORS\n            location /api {\n                proxy_http_version 1.1;\n                proxy_pass_request_headers on;\n                proxy_hide_header Access-Control-Allow-Origin;\n                proxy_pass http://127.0.0.1:8090;\n            }\n            location / {\n                try_files $uri $uri/ /index.html /index.html;\n            }\n            # Liveness probe\n            location /healthz {\n                access_log off;\n                add_header Content-Type text/plain;\n                return 200 'ok';\n            }\n        }\n    }\n---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: hubble-ui\n  namespace: kube-system\n  labels:\n    k8s-app: hubble-ui\n    app.kubernetes.io/name: hubble-ui\n    app.kubernetes.io/part-of: retina\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      k8s-app: hubble-ui\n  template:\n    metadata:\n      labels:\n        k8s-app: hubble-ui\n        app.kubernetes.io/name: hubble-ui\n        app.kubernetes.io/part-of: retina\n    spec:\n      serviceAccountName: hubble-ui\n      automountServiceAccountToken: true\n      containers:\n      - name: frontend\n        image: mcr.microsoft.com/oss/cilium/hubble-ui:v0.12.2   \n        imagePullPolicy: Always\n        ports:\n        - name: http\n          containerPort: 8081\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: 8081\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8081\n        resources: {}\n        volumeMounts:\n        - name: hubble-ui-nginx-conf\n          mountPath: /etc/nginx/conf.d/default.conf\n          subPath: nginx.conf\n        - name: tmp-dir\n          mountPath: /tmp\n        terminationMessagePolicy: FallbackToLogsOnError\n        securityContext: {}\n      - name: backend\n        image: mcr.microsoft.com/oss/cilium/hubble-ui-backend:v0.12.2\n        imagePullPolicy: Always\n        env:\n        - name: EVENTS_SERVER_PORT\n          value: \"8090\"\n        - name: FLOWS_API_ADDR\n          value: \"hubble-relay:443\"\n        - name: TLS_TO_RELAY_ENABLED\n          value: \"true\"\n        - name: TLS_RELAY_SERVER_NAME\n          value: ui.hubble-relay.cilium.io\n        - name: TLS_RELAY_CA_CERT_FILES\n          value: /var/lib/hubble-ui/certs/hubble-relay-ca.crt\n        - name: TLS_RELAY_CLIENT_CERT_FILE\n          value: /var/lib/hubble-ui/certs/client.crt\n        - name: TLS_RELAY_CLIENT_KEY_FILE\n          value: /var/lib/hubble-ui/certs/client.key\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: 8090\n        readinessProbe:\n          httpGet:\n            path: /healthz\n            port: 8090\n        ports:\n        - name: grpc\n          containerPort: 8090\n        resources: {}\n        volumeMounts:\n        - name: hubble-ui-client-certs\n          mountPath: /var/lib/hubble-ui/certs\n          readOnly: true\n        terminationMessagePolicy: FallbackToLogsOnError\n        securityContext: {}\n      nodeSelector:\n        kubernetes.io/os: linux \n      volumes:\n      - configMap:\n          defaultMode: 420\n          name: hubble-ui-nginx\n        name: hubble-ui-nginx-conf\n      - emptyDir: {}\n        name: tmp-dir\n      - name: hubble-ui-client-certs\n        projected:\n          defaultMode: 0400\n          sources:\n          - secret:\n              name: hubble-relay-client-certs\n              items:\n                - key: tls.crt\n                  path: client.crt\n                - key: tls.key\n                  path: client.key\n                - key: ca.crt\n                  path: hubble-relay-ca.crt\n---\nkind: Service\napiVersion: v1\nmetadata:\n  name: hubble-ui\n  namespace: kube-system\n  labels:\n    k8s-app: hubble-ui\n    app.kubernetes.io/name: hubble-ui\n    app.kubernetes.io/part-of: retina\nspec:\n  type: ClusterIP\n  selector:\n    k8s-app: hubble-ui\n  ports:\n    - name: http\n      port: 80\n      targetPort: 8081\n```\n\n----------------------------------------\n\nTITLE: Upgrading AKS Cluster with Azure CLI\nDESCRIPTION: This Azure CLI command initiates the upgrade process for an AKS cluster to a specified Kubernetes version. It requires confirmation before proceeding with the upgrade of both the control plane and all node pools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks upgrade \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --kubernetes-version KUBERNETES_VERSION\n```\n\n----------------------------------------\n\nTITLE: Updating Kubernetes Manifest with ACR Image References\nDESCRIPTION: YAML configuration showing how to update container image references in a Kubernetes manifest file to use Azure Container Registry (ACR) hosted images.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-application.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncontainers:\n...\n- name: order-service\n  image: <acrName>.azurecr.io/aks-store-demo/order-service:latest\n...\n- name: product-service\n  image: <acrName>.azurecr.io/aks-store-demo/product-service:latest\n...\n- name: store-front\n  image: <acrName>.azurecr.io/aks-store-demo/store-front:latest\n...\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Store Application in YAML\nDESCRIPTION: This YAML configuration deploys the Azure Store application, including RabbitMQ, order service, product service, and store front components. It sets up deployments, services, and a ConfigMap for RabbitMQ plugins.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-portal.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: rabbitmq\n        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine\n        ports:\n        - containerPort: 5672\n          name: rabbitmq-amqp\n        - containerPort: 15672\n          name: rabbitmq-http\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"username\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"password\"\n        resources:\n          requests:\n            cpu: 10m\n            memory: 128Mi\n          limits:\n            cpu: 250m\n            memory: 256Mi\n        volumeMounts:\n        - name: rabbitmq-enabled-plugins\n          mountPath: /etc/rabbitmq/enabled_plugins\n          subPath: enabled_plugins\n      volumes:\n      - name: rabbitmq-enabled-plugins\n        configMap:\n          name: rabbitmq-enabled-plugins\n          items:\n          - key: rabbitmq_enabled_plugins\n            path: enabled_plugins\n---\napiVersion: v1\ndata:\n  rabbitmq_enabled_plugins: |\n    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].\nkind: ConfigMap\nmetadata:\n  name: rabbitmq-enabled-plugins\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n    - name: rabbitmq-amqp\n      port: 5672\n      targetPort: 5672\n    - name: rabbitmq-http\n      port: 15672\n      targetPort: 15672\n  type: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: order-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: order-service\n  template:\n    metadata:\n      labels:\n        app: order-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: order-service\n        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: ORDER_QUEUE_HOSTNAME\n          value: \"rabbitmq\"\n        - name: ORDER_QUEUE_PORT\n          value: \"5672\"\n        - name: ORDER_QUEUE_USERNAME\n          value: \"username\"\n        - name: ORDER_QUEUE_PASSWORD\n          value: \"password\"\n        - name: ORDER_QUEUE_NAME\n          value: \"orders\"\n        - name: FASTIFY_ADDRESS\n          value: \"0.0.0.0\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n      initContainers:\n      - name: wait-for-rabbitmq\n        image: busybox\n        command: ['sh', '-c', 'until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: order-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3000\n    targetPort: 3000\n  selector:\n    app: order-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-service\n  template:\n    metadata:\n      labels:\n        app: product-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: product-service\n        image: ghcr.io/azure-samples/aks-store-demo/product-service:latest\n        ports:\n        - containerPort: 3002\n        resources:\n          requests:\n            cpu: 1m\n            memory: 1Mi\n          limits:\n            cpu: 1m\n            memory: 7Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3002\n    targetPort: 3002\n  selector:\n    app: product-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: store-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: store-front\n  template:\n    metadata:\n      labels:\n        app: store-front\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: store-front\n        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest\n        ports:\n        - containerPort: 8080\n          name: store-front\n        env:\n        - name: VUE_APP_ORDER_SERVICE_URL\n          value: \"http://order-service:3000/\"\n        - name: VUE_APP_PRODUCT_SERVICE_URL\n          value: \"http://product-service:3002/\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 200Mi\n          limits:\n            cpu: 1000m\n            memory: 512Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: store-front\nspec:\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: store-front\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Setting Up Azure CLI Authentication for AKS\nDESCRIPTION: Commands to authenticate using the Azure CLI method, which uses the signed-in Azure CLI context to obtain access tokens. This method only works with AKS managed Microsoft Entra ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz login\n\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l azurecli\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Calico Network Policy\nDESCRIPTION: Command to create an AKS cluster with Calico network policy enabled. This configures both Linux and Windows node pools to use Calico for network policy enforcement.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --node-count 1 \\\n    --windows-admin-username $WINDOWS_USERNAME \\\n    --network-plugin azure \\\n    --network-policy calico \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Verifying Connection to Private AKS Cluster\nDESCRIPTION: Uses kubectl to verify the connection to the private AKS cluster by retrieving a list of cluster nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Storage Class for Private Azure Files Endpoint\nDESCRIPTION: YAML manifest for creating a custom StorageClass that connects to Azure Files with a private endpoint. Includes configuration for resource group, storage account name, and mount options for security and performance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: private-azurefile-csi\nprovisioner: file.csi.azure.com\nallowVolumeExpansion: true\nparameters:\n  resourceGroup: <resourceGroup>\n  storageAccount: <storageAccountName>\n  server: <storageAccountName>.file.core.windows.net\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\nmountOptions:\n  - dir_mode=0777\n  - file_mode=0777\n  - uid=0\n  - gid=0\n  - mfsymlinks\n  - cache=strict  # https://linux.die.net/man/8/mount.cifs\n  - nosharesock  # reduce probability of reconnect race\n  - actimeo=30  # reduce latency for metadata-heavy workload\n```\n\n----------------------------------------\n\nTITLE: Persistent Volume Claim with ZRS\nDESCRIPTION: YAML configuration for creating a persistent volume claim using Zone-Redundant Storage (ZRS) with Azure Managed Disks.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/availability-zones-overview.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: azure-managed-disk\nspec:\n  accessModes:\n  - ReadWriteOnce\n  storageClassName: managed-csi\n  #storageClassName: managed-csi-premium\n  resources:\n    requests:\n      storage: 5Gi\n```\n\n----------------------------------------\n\nTITLE: Manually Resizing an AKS Cluster Using Azure CLI\nDESCRIPTION: This command allows you to scale an AKS cluster by specifying the resource group, cluster name, desired node count, and node pool name. It should be repeated for each node pool you want to resize.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks scale --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --node-count $NUM_NODES --nodepool-name $NODE_POOL_NAME\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Ultra Disk Support using Azure CLI\nDESCRIPTION: This Azure CLI command creates an AKS cluster that can use Azure ultra disks. It uses the --enable-ultra-ssd parameter to enable the EnableUltraSSD feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-ultra-disks.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group MyResourceGroup \\\n    --name myAKSCluster \\\n    --location westus2 \\\n    --node-vm-size Standard_D2s_v3 \\\n    --zones 1 2 \\\n    --node-count 2 \\\n    --enable-ultra-ssd \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Autoscaler Profile\nDESCRIPTION: Creates a new AKS cluster with cluster autoscaler enabled and custom scan interval configuration. Sets up basic autoscaling parameters including min-count, max-count, and scan interval.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-count 1 \\\n    --enable-cluster-autoscaler \\\n    --min-count 1 \\\n    --max-count 3 \\\n    --cluster-autoscaler-profile scan-interval=30s \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Cluster Status using Azure CLI\nDESCRIPTION: Command to verify the stopped status of an AKS cluster using Azure CLI. Shows cluster power state and provisioning state.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/start-stop-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with a Single Node Pool\nDESCRIPTION: Creates an AKS cluster with a single node pool using the Azure CLI. The cluster is configured with Virtual Machine Scale Sets, 2 nodes, and a standard load balancer, which are requirements for supporting multiple node pools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --vm-set-type VirtualMachineScaleSets \\\n    --node-count 2 \\\n    --location $LOCATION \\\n    --load-balancer-sku standard \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Using Azure CLI\nDESCRIPTION: Commands to configure kubectl credentials and verify cluster connectivity using Azure CLI. Gets credentials for myAKSCluster and lists cluster nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME                                STATUS   ROLES   AGE   VERSION\naks-nodepool1-19366578-vmss000000   Ready    agent   47h   v1.30.9\naks-nodepool1-19366578-vmss000001   Ready    agent   47h   v1.30.9\naks-nodepool1-19366578-vmss000002   Ready    agent   47h   v1.30.9\n```\n\n----------------------------------------\n\nTITLE: Custom Storage Class Definition for Azure Files\nDESCRIPTION: YAML manifest for creating a custom storage class with specific mount options and parameters for Azure Files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: my-azurefile\nprovisioner: file.csi.azure.com\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\nallowVolumeExpansion: true\nmountOptions:\n  - dir_mode=0640\n  - file_mode=0640\n  - uid=0\n  - gid=0\n  - mfsymlinks\n  - cache=strict\n  - nosharesock\nparameters:\n  skuName: Standard_LRS\n```\n\n----------------------------------------\n\nTITLE: AKS Component Version Check Command\nDESCRIPTION: Azure CLI command to check the current Kubernetes version of an AKS cluster, showing how to retrieve the complete version number including patch level.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/supported-kubernetes-versions.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n \"apiServerAccessProfile\": null,\n  \"autoScalerProfile\": null,\n  \"autoUpgradeProfile\": null,\n  \"azurePortalFqdn\": \"myaksclust-myresourcegroup.portal.hcp.eastus.azmk8s.io\",\n  \"currentKubernetesVersion\": \"1.29.2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Public FQDN for New Private AKS Cluster\nDESCRIPTION: Creates a new private AKS cluster with the public FQDN disabled. This configuration enhances privacy by preventing public DNS resolution of the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name <private-cluster-name> \\\n    --resource-group <private-cluster-resource-group> \\\n    --load-balancer-sku standard \\\n    --enable-private-cluster \\\n    --assign-identity <resourceID> \\\n    --private-dns-zone <private-dns-zone-mode> \\\n    --disable-public-fqdn \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating GitHub Actions Workflow for AKS Deployment\nDESCRIPTION: A complete GitHub Actions workflow that builds a container image, pushes it to Azure Container Registry, and deploys to an AKS cluster. The workflow is triggered when changes are pushed to the azure-vote directory.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-action.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: build_deploy_aks\\non:\\n  push:\\n    paths:\\n      - \"azure-vote/**\"\\njobs:\\n  build:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout source code \\n        uses: actions/checkout@v3\\n      - name: ACR build\\n        id: build-push-acr\\n        uses: azure/acr-build@v1\\n        with:\\n          service_principal: ${{ secrets.service_principal }}\\n          service_principal_password: ${{ secrets.service_principal_password }}\\n          tenant: ${{ secrets.tenant }}\\n          registry: ${{ secrets.registry }}\\n          repository: ${{ secrets.repository }}\\n          image:  azure-vote-front\\n          folder: azure-vote\\n          branch: master\\n          tag: ${{ github.sha }}\\n      - name: Azure login\\n        id: login\\n        uses: azure/login@v1.4.3\\n        with:\\n          creds: ${{ secrets.AZURE_CREDENTIALS }}\\n      - name: Set AKS context\\n        id: set-context\\n        uses: azure/aks-set-context@v3\\n        with:\\n          resource-group: '${{ secrets.resource_group }}' \\n          cluster-name: '${{ secrets.cluster_name }}'\\n      - name: Setup kubectl\\n        id: install-kubectl\\n        uses: azure/setup-kubectl@v3\\n      - name: Deploy to AKS\\n        id: deploy-aks\\n        uses: Azure/k8s-deploy@v4\\n        with:\\n          namespace: 'default'\\n          manifests: |\\n             azure-vote-all-in-one-redis.yaml\\n          images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/azure-vote-front:${{ github.sha }}'\\n          pull-images: false \n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster and Verifying Nodes with Azure PowerShell\nDESCRIPTION: This snippet shows how to use Azure PowerShell to obtain credentials for an AKS cluster and verify the connection by listing cluster nodes. It uses the 'Import-AzAksCredential' cmdlet to configure kubectl and then 'kubectl get nodes' to list the nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-portal.md#2025-04-21_snippet_1\n\nLANGUAGE: azurepowershell\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\n```\n\nLANGUAGE: azurepowershell\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Creating a RoleBinding to assign permissions to a Microsoft Entra user in Kubernetes\nDESCRIPTION: YAML manifest that binds a Microsoft Entra ID user to a previously created Role using a RoleBinding. This grants the user 'developer1@contoso.com' full access permissions to resources in the 'finance-app' namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-identity.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: finance-app-full-access-role-binding\n  namespace: finance-app\nsubjects:\n- kind: User\n  name: developer1@contoso.com\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: finance-app-full-access-role\n  apiGroup: rbac.authorization.k8s.io\n```\n\n----------------------------------------\n\nTITLE: Monitoring Service Deployment for External IP Assignment in Azure AKS\nDESCRIPTION: Watches the Kubernetes service 'store-front' until it receives an external IP address. The --watch flag keeps the command running until manually interrupted, displaying changes to the service in real-time.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-portal.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get service store-front --watch\n```\n\n----------------------------------------\n\nTITLE: Connecting to the AKS Cluster with kubectl\nDESCRIPTION: Downloads AKS cluster credentials and configures kubectl to use them, enabling cluster management through the Kubernetes command line.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_AKS_CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Creating Microsoft Entra ID User for Application Developer\nDESCRIPTION: This snippet creates a new user in Microsoft Entra ID for an application developer using the az ad user create command and assigns the resulting user ID to a variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nAKSDEV_ID=$(az ad user create \\\n  --display-name \"AKS Dev\" \\\n  --user-principal-name $AAD_DEV_UPN \\\n  --password $AAD_DEV_PW \\\n  --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Deploying Application with kubectl\nDESCRIPTION: Console commands to deploy the application using kubectl and verify the deployment status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-application.md#2025-04-21_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f aks-store-quickstart.yaml\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Listing All Installed Extensions on an AKS Cluster\nDESCRIPTION: Lists all extension instances that are currently installed on a specific AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-extensions-az-cli.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension list --cluster-name <clusterName> --resource-group <resourceGroupName> --cluster-type managedClusters\n```\n\n----------------------------------------\n\nTITLE: Creating a Role with full access to namespace resources in Kubernetes RBAC\nDESCRIPTION: YAML manifest for creating a Role that grants full access to all resources within the 'finance-app' namespace. This demonstrates how to define granular permissions at the namespace level in Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-identity.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: finance-app-full-access-role\n  namespace: finance-app\nrules:\n- apiGroups: [\"\"]\n  resources: [\"*\"]\n  verbs: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Deployment YAML for Virtual Node Sample Application\nDESCRIPTION: YAML manifest for deploying a sample application to run on the virtual node. The configuration includes nodeSelector and tolerations that ensure the pod is scheduled on the virtual node rather than regular AKS nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: aci-helloworld\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: aci-helloworld\n  template:\n    metadata:\n      labels:\n        app: aci-helloworld\n    spec:\n      containers:\n      - name: aci-helloworld\n        image: mcr.microsoft.com/azuredocs/aci-helloworld\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        kubernetes.io/role: agent\n        beta.kubernetes.io/os: linux\n        type: virtual-kubelet\n      tolerations:\n      - key: virtual-kubelet.io/provider\n        operator: Exists\n      - key: azure.com/aci\n        effect: NoSchedule\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with System-Assigned Managed Identity\nDESCRIPTION: Deploys an AKS cluster with kubenet network plugin, configuring service CIDR, DNS service IP, and pod CIDR ranges. Uses system-assigned managed identity for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --network-plugin kubenet \\\n    --service-cidr 10.0.0.0/16 \\\n    --dns-service-ip 10.0.0.10 \\\n    --pod-cidr 10.244.0.0/16 \\\n    --vnet-subnet-id $SUBNET_ID \\\n    --generate-ssh-keys \n```\n\n----------------------------------------\n\nTITLE: Creating New Service Principal with Azure CLI\nDESCRIPTION: This snippet demonstrates how to create a new service principal with Contributor role for an AKS cluster using Azure CLI. It creates the service principal and outputs its details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/update-credentials.md#2025-04-21_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz ad sp create-for-rbac --role Contributor --scopes /subscriptions/$SUBSCRIPTION_ID\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume Claim for Blob Storage using Blobfuse in YAML\nDESCRIPTION: This YAML snippet defines a PersistentVolumeClaim for Azure Blob Storage using the Blobfuse protocol. It specifies the access mode, storage request, and references the previously created PersistentVolume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-blob\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\n  volumeName: pv-blob\n  storageClassName: azureblob-fuse-premium\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Service Principal using Azure CLI\nDESCRIPTION: Creates a new AKS cluster with the az aks create command, specifying the service principal's appId and password for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --service-principal <appId> \\\n    --client-secret <password> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with ACR Integration using PowerShell\nDESCRIPTION: Creates a new AKS cluster and integrates it with an existing ACR using PowerShell. Configures AcrPull role for the managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$MYACR = 'mycontainerregistry'\n\nNew-AzAksCluster -Name myAKSCluster -ResourceGroupName myResourceGroup -GenerateSshKey -AcrNameToAttach $MYACR\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with API Server VNet Integration (Bring-Your-Own VNet)\nDESCRIPTION: Create resources and deploy a public or private AKS cluster with API Server VNet Integration using a custom VNet configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-vnet-integration.md#2025-04-21_snippet_3\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group create --location <location> --name <resource-group>\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz network vnet create --name <vnet-name> \\\n--resource-group <resource-group> \\\n--location <location> \\\n--address-prefixes 172.19.0.0/16\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz network vnet subnet create --resource-group <resource-group> \\\n--vnet-name <vnet-name> \\\n--name <apiserver-subnet-name> \\\n--delegations Microsoft.ContainerService/managedClusters \\\n--address-prefixes 172.19.0.0/28\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz network vnet subnet create --resource-group <resource-group> \\\n--vnet-name <vnet-name> \\\n--name <cluster-subnet-name> \\\n--address-prefixes 172.19.1.0/24\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz identity create --resource-group <resource-group> --name <managed-identity-name> --location <location>\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz role assignment create --scope <apiserver-subnet-resource-id> \\\n--role \"Network Contributor\" \\\n--assignee <managed-identity-client-id>\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz role assignment create --scope <cluster-subnet-resource-id> \\\n--role \"Network Contributor\" \\\n--assignee <managed-identity-client-id>\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks create --name <cluster-name> \\\n    --resource-group <resource-group> \\\n    --location <location> \\\n    --network-plugin azure \\\n    --enable-apiserver-vnet-integration \\\n    --vnet-subnet-id <cluster-subnet-resource-id> \\\n    --apiserver-subnet-id <apiserver-subnet-resource-id> \\\n    --assign-identity <managed-identity-resource-id> \\\n    --generate-ssh-keys\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks create --name <cluster-name> \\\n--resource-group <resource-group> \\\n--location <location> \\\n--network-plugin azure \\\n--enable-private-cluster \\\n--enable-apiserver-vnet-integration \\\n--vnet-subnet-id <cluster-subnet-resource-id> \\\n--apiserver-subnet-id <apiserver-subnet-resource-id> \\\n--assign-identity <managed-identity-resource-id> \\\n--generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Adding GPU Node Pool to AKS Cluster\nDESCRIPTION: This Azure CLI command adds a GPU-based node pool to an existing AKS cluster. It specifies the node pool name, node count, and VM size (Standard_NC6s_v3) which is powered by NVIDIA Tesla K80 GPUs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name gpunodepool \\\n    --node-count 1 \\\n    --node-vm-size Standard_NC6s_v3 \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Enabling ACNS on Existing AKS Cluster\nDESCRIPTION: Updates an existing AKS cluster to enable Advanced Container Networking Services features including Container Network Observability and Security.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/advanced-container-networking-services-overview.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --enable-acns\n```\n\n----------------------------------------\n\nTITLE: Creating Default Deny Network Policy in Kubernetes\nDESCRIPTION: This network policy implements a zero-trust model by denying all ingress and egress traffic by default in the specified namespace. It serves as the foundation for more specific allow policies to be added.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny\n  namespace: default\nspec:\n  podSelector: {}\n  policyTypes:\n    - Ingress\n    - Egress\n```\n\n----------------------------------------\n\nTITLE: Assigning Azure Kubernetes Service Cluster User Role to SRE Group\nDESCRIPTION: This command creates an Azure role assignment for the opssre group, granting them the Azure Kubernetes Service Cluster User Role for the specified AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create \\\n  --assignee $OPSSRE_ID \\\n  --role \"Azure Kubernetes Service Cluster User Role\" \\\n  --scope $AKS_ID\n```\n\n----------------------------------------\n\nTITLE: Retrieving Principal ID for AKS System-Assigned Managed Identity\nDESCRIPTION: This command retrieves the principal ID for a system-assigned managed identity of an AKS cluster. The principal ID is required when assigning Azure RBAC roles to the managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n# Get the principal ID for a system-assigned managed identity.\nCLIENT_ID=$(az aks show \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --query identity.principalId \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Registering Image Integrity Feature Flags in Azure CLI\nDESCRIPTION: Commands to register the EnableImageIntegrityPreview and AKS-AzurePolicyExternalData feature flags for Azure subscription\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Register the EnableImageIntegrityPreview feature flag\naz feature register --namespace \"Microsoft.ContainerService\" --name \"EnableImageIntegrityPreview\"\n\n# Register the AKS-AzurePolicyExternalData feature flag\naz feature register --namespace \"Microsoft.ContainerService\" --name \"AKS-AzurePolicyExternalData\"\n```\n\n----------------------------------------\n\nTITLE: AKS Cluster Deployment with Bicep\nDESCRIPTION: Bicep template for deploying an Azure Kubernetes Service cluster. The template defines a Microsoft.ContainerService/managedClusters resource with default settings, suitable for evaluation purposes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_2\n\nLANGUAGE: bicep\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP L7 Network Policy in AKS\nDESCRIPTION: This Cilium network policy enforces L7 (application layer) rules, allowing only GET requests to the '/api' path from frontend pods to backend services on port 8080. It demonstrates granular API security controls.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"cilium.io/v2\"\nkind: CiliumNetworkPolicy\nmetadata:\n  name: frontend-l7-policy\n  namespace: default\nspec:\n  endpointSelector:\n    matchLabels:\n      app: frontend\n  egress:\n    - toEndpoints:\n        - matchLabels:\n            app: backend\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n                path: \"/api\"\n```\n\n----------------------------------------\n\nTITLE: Creating Private AKS Cluster with Advanced Networking\nDESCRIPTION: Deploys a private AKS cluster with advanced networking options. This configuration includes specifying the network plugin, subnet, DNS service IP, and service CIDR.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group <private-cluster-resource-group> \\\n    --name <private-cluster-name> \\\n    --load-balancer-sku standard \\\n    --enable-private-cluster \\\n    --network-plugin azure \\\n    --vnet-subnet-id <subnet-id> \\\n    --dns-service-ip 10.2.0.10 \\\n    --service-cidr 10.2.0.0/24 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: StatefulSet Configuration with NFS Storage\nDESCRIPTION: YAML configuration for creating a StatefulSet that uses Azure Blob storage with NFS protocol, including persistent volume claim template and nginx container setup.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-blob-csi.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: statefulset-blob-nfs\n  labels:\n    app: nginx\nspec:\n  serviceName: statefulset-blob-nfs\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n        - name: statefulset-blob-nfs\n          image: mcr.microsoft.com/oss/nginx/nginx:1.22\n          volumeMounts:\n            - name: persistent-storage\n              mountPath: /mnt/blob\n  updateStrategy:\n    type: RollingUpdate\n  selector:\n    matchLabels:\n      app: nginx\n  volumeClaimTemplates:\n    - metadata:\n        name: persistent-storage\n      spec:\n        storageClassName: azureblob-nfs-premium\n        accessModes: [\"ReadWriteMany\"]\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Viewing AKS Container Logs in Real Time via Azure Portal\nDESCRIPTION: Step-by-step instructions for accessing live logs from AKS container resources through the Azure portal. This process allows users to view real-time log data as it's generated by the container engine.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the [Azure portal](https://portal.azure.com/), navigate to your AKS cluster.\n1. Under **Kubernetes resources**, select **Workloads**.\n1. Select the *Deployment*, *Pod*, *Replica Set*, *Stateful Set*, *Job*, or *Cron Job* that you want to view logs for, and then select **Live Logs**.\n1. Select the resource you want to view logs for.\n```\n\n----------------------------------------\n\nTITLE: Defining Pod Disruption Budget with Minimum Available Pods\nDESCRIPTION: A YAML manifest that defines a PodDisruptionBudget to ensure at least 3 pods with the label 'app: nginx-frontend' remain available during voluntary disruption events like cluster upgrades.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-scheduler.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n   name: nginx-pdb\nspec:\n   minAvailable: 3\n   selector:\n    matchLabels:\n      app: nginx-frontend\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Key Vault using DefaultAzureCredential in Python\nDESCRIPTION: This Python code snippet shows how to use DefaultAzureCredential from azure.identity to authenticate with Azure Key Vault and retrieve a secret. It uses environment variables for the Key Vault URL and secret name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-overview.md#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nimport os\n\nfrom azure.keyvault.secrets import SecretClient\nfrom azure.identity import DefaultAzureCredential\n\ndef main():\n    keyvault_url = os.getenv('KEYVAULT_URL', '')\n    secret_name = os.getenv('SECRET_NAME', '')\n\n    client = SecretClient(vault_url=keyvault_url, credential=DefaultAzureCredential())\n    secret = client.get_secret(secret_name)\n\nif __name__ == '__main__':\n    main()\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Deployment and Service for ASP.NET Application in YAML\nDESCRIPTION: This YAML manifest defines a Kubernetes Deployment for an ASP.NET sample application and a LoadBalancer Service to expose it. The Deployment specifies a Windows node selector and resource limits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-portal.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sample\n  labels:\n    app: sample\nspec:\n  replicas: 1\n  template:\n    metadata:\n      name: sample\n      labels:\n        app: sample\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": windows\n      containers:\n      - name: sample\n        image: mcr.microsoft.com/dotnet/framework/samples:aspnetapp\n        resources:\n          limits:\n            cpu: 1\n            memory: 800M\n        ports:\n          - containerPort: 80\n  selector:\n    matchLabels:\n      app: sample\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: sample\nspec:\n  type: LoadBalancer\n  ports:\n  - protocol: TCP\n    port: 80\n  selector:\n    app: sample\n```\n\n----------------------------------------\n\nTITLE: Manually Scaling AKS Nodes with Azure CLI\nDESCRIPTION: This Azure CLI command scales the number of nodes in an AKS cluster to 3.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-scale.md#2025-04-21_snippet_4\n\nLANGUAGE: console\nCODE:\n```\naz aks scale --resource-group myResourceGroup --name myAKSCluster --node-count 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod Resource Requests and Limits in YAML\nDESCRIPTION: Example YAML configuration demonstrating how to set CPU and memory requests and limits for a Kubernetes pod running NGINX. Shows proper resource allocation with 100m CPU request, 250m CPU limit, 128Mi memory request, and 256Mi memory limit.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/developer-best-practices-resource-management.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: mypod\nspec:\n  containers:\n  - name: mypod\n    image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 250m\n        memory: 256Mi\n```\n\n----------------------------------------\n\nTITLE: Adding a Node Pool with Taints in AKS using Azure CLI\nDESCRIPTION: Azure CLI command to add a new node pool with a GPU taint that prevents pods without matching tolerations from being scheduled on these nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-advanced-scheduler.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name taintnp \\\n    --node-taints sku=gpu:NoSchedule \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Listing Node Pools in an AKS Cluster\nDESCRIPTION: Lists all node pools in the AKS cluster to view their configuration and status. The example output shows both the default system node pool and the newly added user node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool list --resource-group $RESOURCE_GROUP_NAME --cluster-name $CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Updating Private AKS Cluster DNS Zone to Public using Azure CLI\nDESCRIPTION: This Azure CLI command updates a private AKS cluster's DNS zone from private to public. It uses the az aks update command with the --private-dns-zone flag set to 'none'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --name <private-cluster-name> \\\n    --resource-group <private-cluster-resource-group> \\\n    --private-dns-zone none\n```\n\n----------------------------------------\n\nTITLE: Verifying Helm Version in Azure Kubernetes Service\nDESCRIPTION: This command checks the installed version of Helm in your environment. Helm 3 is required for the procedures in this guide.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nhelm version\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Key Vault Secrets Provider\nDESCRIPTION: Creates an AKS cluster with Azure Key Vault provider for Secrets Store CSI Driver enabled using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-driver.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --enable-addons azure-keyvault-secrets-provider \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Automatic Cluster Bicep Template with Azure CLI\nDESCRIPTION: This Azure CLI command deploys the Bicep template for creating the AKS Automatic cluster. It specifies the resource group, Bicep file, and various parameters required for the cluster configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group <resource-group> --template-file aks.bicep \\\n--parameters apiServerSubnetId=<API server subnet resource id> \\\n--parameters clusterSubnetId=<cluster subnet resource id> \\\n--parameters uamiPrincipalId=<user assigned identity prinicipal id>\n```\n\n----------------------------------------\n\nTITLE: Configuring Airflow Values for Helm Deployment in YAML\nDESCRIPTION: This YAML configuration file sets up the Airflow deployment parameters, including image repositories, executor type, environment variables, and persistence settings. It also configures Git sync for DAGs and disables log groomer sidecars.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ncat <<EOF> airflow_values.yaml\n\nimages:\n  airflow:\n    repository: $MY_ACR_REGISTRY.azurecr.io/airflow\n    tag: 2.9.3\n    # Specifying digest takes precedence over tag.\n    digest: ~\n    pullPolicy: IfNotPresent\n  # To avoid images with user code, you can turn this to 'true' and\n  # all the 'run-airflow-migrations' and 'wait-for-airflow-migrations' containers/jobs\n  # will use the images from 'defaultAirflowRepository:defaultAirflowTag' values\n  # to run and wait for DB migrations .\n  useDefaultImageForMigration: false\n  # timeout (in seconds) for airflow-migrations to complete\n  migrationsWaitTimeout: 60\n  pod_template:\n    # Note that `images.pod_template.repository` and `images.pod_template.tag` parameters\n    # can be overridden in `config.kubernetes` section. So for these parameters to have effect\n    # `config.kubernetes.worker_container_repository` and `config.kubernetes.worker_container_tag`\n    # must be not set .\n    repository: $MY_ACR_REGISTRY.azurecr.io/airflow\n    tag: 2.9.3\n    pullPolicy: IfNotPresent\n  flower:\n    repository: $MY_ACR_REGISTRY.azurecr.io/airflow\n    tag: 2.9.3\n    pullPolicy: IfNotPresent\n  statsd:\n    repository: $MY_ACR_REGISTRY.azurecr.io/statsd-exporter\n    tag: v0.26.1\n    pullPolicy: IfNotPresent\n  pgbouncer:\n    repository: $MY_ACR_REGISTRY.azurecr.io/airflow\n    tag: airflow-pgbouncer-2024.01.19-1.21.0\n    pullPolicy: IfNotPresent\n  pgbouncerExporter:\n    repository: $MY_ACR_REGISTRY.azurecr.io/airflow\n    tag: airflow-pgbouncer-exporter-2024.06.18-0.17.0\n    pullPolicy: IfNotPresent\n  gitSync:\n    repository: $MY_ACR_REGISTRY.azurecr.io/git-sync\n    tag: v4.1.0\n    pullPolicy: IfNotPresent\n\n\n# Airflow executor\nexecutor: \"KubernetesExecutor\"\n\n# Environment variables for all airflow containers\nenv:\n  - name: ENVIRONMENT\n    value: dev\n\nextraEnv: |\n  - name: AIRFLOW__CORE__DEFAULT_TIMEZONE\n    value: 'America/New_York'\n\n# Configuration for postgresql subchart\n# Not recommended for production! Instead, spin up your own Postgresql server and use the `data` attribute in this\n# yaml file.\npostgresql:\n  enabled: true\n\n# Enable pgbouncer. See https://airflow.apache.org/docs/helm-chart/stable/production-guide.html#pgbouncer\npgbouncer:\n  enabled: true\n\ndags:\n  gitSync:\n    enabled: true\n    repo: https://github.com/donhighmsft/airflowexamples.git\n    branch: main\n    rev: HEAD\n    depth: 1\n    maxFailures: 0\n    subPath: \"dags\"\n    # sshKeySecret: airflow-git-ssh-secret\n    # knownHosts: |\n    #   github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\n\nlogs:\n  persistence:\n    enabled: true\n    existingClaim: pvc-airflow-logs\n    storageClassName: azureblob-fuse-premium\n\n# We disable the log groomer sidecar because we use Azure Blob Storage for logs, with lifecyle policy set.\ntriggerer:\n  logGroomerSidecar:\n    enabled: false\n\nscheduler:\n  logGroomerSidecar:\n    enabled: false\n\nworkers:\n  logGroomerSidecar:\n    enabled: false\n\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Interactive Client Pod in Kubernetes\nDESCRIPTION: Command to create an interactive client pod with a bash shell. This pod will be used to test connectivity to the server pod with and without network policies.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_17\n\nLANGUAGE: console\nCODE:\n```\nkubectl run -it client -n demo --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 --command -- bash\n```\n\n----------------------------------------\n\nTITLE: Listing Supported Kubernetes Versions - Azure CLI\nDESCRIPTION: Command to retrieve available Kubernetes versions for a specific region using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/supported-kubernetes-versions.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-versions --location eastus --output table\n```\n\n----------------------------------------\n\nTITLE: Update AKS Cluster from LoadBalancer to ManagedNATGateway\nDESCRIPTION: Updates an existing AKS cluster's outbound type from loadbalancer to managedNATGateway. Requires Azure CLI version >= 2.56 and allows specification of managed outbound IP count.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/egress-outboundtype.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group <resourceGroup> --name <clusterName> --outbound-type managedNATGateway --nat-gateway-managed-outbound-ip-count <number of managed outbound ip>\n```\n\n----------------------------------------\n\nTITLE: Creating Role Assignment for AKS Cluster Access using Azure CLI\nDESCRIPTION: This snippet shows how to create a role assignment for the Azure Kubernetes Service RBAC Admin role using the Azure CLI. It first retrieves the AKS resource ID and then creates the role assignment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_3\n\nLANGUAGE: Azure CLI\nCODE:\n```\nAKS_ID=$(az aks show --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --query id --output tsv)\n\naz role assignment create --role \"Azure Kubernetes Service RBAC Admin\" --assignee <AAD-ENTITY-ID> --scope $AKS_ID\n```\n\n----------------------------------------\n\nTITLE: Installing Calico Network Policy on Existing AKS Cluster\nDESCRIPTION: Command to update an existing AKS cluster to use Calico for network policy enforcement. This enables Calico on an already deployed cluster for both Linux and Windows nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --network-policy calico\n```\n\n----------------------------------------\n\nTITLE: Implementing MongoDB Load Testing Client\nDESCRIPTION: Creates a Locust load testing implementation for MongoDB using PyMongo client. Includes functionality for inserting documents and measuring performance metrics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport os\nimport random\nimport logging\nimport time\nimport uuid\nfrom locust import User, task, constant_throughput, events, tag, between\nfrom pymongo import MongoClient\nfrom pymongo.errors import ServerSelectionTimeoutError\nfrom pymongo.errors import ConnectionFailure\nfrom faker import Faker\n\n# Set up Faker for generating random names and departments\nfake = Faker()\n\n# Configure logging\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\n# List of department names for random selection\ndepartment_keywords = [\n    \"Accounting\", \"Marketing\", \"Human Resources\", \"Sales\", \"Research and Development\",\n    \"IT\", \"Customer Support\", \"Legal\", \"Operations\", \"Finance\", \"Product Management\",\n    \"Public Relations\", \"Engineering\", \"Data Science\", \"Business Development\"\n]\n\nclass MongoDBLocust(User):\n    # Set constant throughput (requests per second)\n    wait_time = constant_throughput(20)\n    # MongoDB connection details (make sure these are set correctly in your environment)\n    host = \"${MY_CLUSTER_NAME}-mongodb-mongos.mongodb.svc.cluster.local\"\n    port = \"27017\"\n    username = os.getenv('MONGODB_USERNAME')\n    password = os.getenv('MONGODB_PASSWORD')\n\n    def __init__(self, *args, **kwargs):\n        super(MongoDBLocust, self).__init__(*args, **kwargs)\n        self.client = MongoDBClient(self.username, self.password)  # Initialize MongoDB client\n\n    def on_stop(self):\n        \"\"\"Called when the simulated user stops, to close the MongoDB client.\"\"\"\n        self.client.close()\n\n    @task\n    @tag(\"insert\")\n    def insert_document(self):\n        \"\"\"Task to insert a document into MongoDB.\"\"\"\n        self.client.insert_document(\"insert_document\")\n\nclass MongoDBClient(object):\n    \"\"\"MongoDB client for managing database interactions.\"\"\"\n  \n    def __init__(self, username, password):\n        # Set MongoDB connection parameters\n        self.host = \"${MY_CLUSTER_NAME}-mongodb-mongos.mongodb.svc.cluster.local\"\n        self.port = \"27017\"\n        self.username = username\n        self.password = password\n        self.client = MongoClient(f\"mongodb://{self.username}:{self.password}@{self.host}:{self.port}/\")\n        self.db = self.client['employeeDB']\n        self.collection = self.db['employees']\n        self.document_id = None  # Placeholder for the inserted document ID\n\n    def insert_document(self, task_name, command='INSERT'):\n        \"\"\"Insert a document into MongoDB and measure the time.\"\"\"\n        employee_id = str(uuid.uuid4())\n        start_time = time.time()\n        logger.info(f\"{employee_id} - Start Time -> start_time: {start_time}\")\n        try:\n            # Create a new fake employee document\n            new_document = {\n                'Id': str(uuid.uuid4()),\n                'EmployeeId': employee_id,\n                'FirstName': fake.first_name(),\n                'LastName': fake.last_name(),\n                'Department': random.choice(department_keywords)\n            }\n            # Insert the document\n            result = self.collection.insert_one(new_document)\n            self.document_id = str(result.inserted_id)  # Store the document ID for future reads\n\n            # Measure the time taken for the MongoDB operation (in milliseconds)\n            total_time = (time.time() - start_time) * 1000  # Convert to ms\n            logger.info(f\"{employee_id} - Task - {task_name} -> total_time: {total_time} ms\")\n\n            # Fire the event to report the request\n            events.request.fire(\n                request_type=command,\n                name=task_name,\n                response_time=total_time,\n                response_length=len(str(result))  # Length of the result returned by the operation\n            )\n        except Exception as e:\n            total_time = (time.time() - start_time) * 1000  # Time taken with error\n            logger.error(f\"{employee_id} - Error in {task_name}: {e} -> total_time: {total_time} ms\")\n            events.request.fire(\n                request_type=command,\n                name=task_name,\n                response_time=total_time,\n                response_length=0,  # No response in case of error\n                exception=e\n            )\n        logger.info(f\"{employee_id} - End Time -> end time: {time.time()}\")\n    def close(self):\n        \"\"\"Close the MongoDB connection.\"\"\"\n        self.client.close()\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with System Node Pool using Azure PowerShell\nDESCRIPTION: Creates a new AKS cluster named 'myAKSCluster' with a single system node pool containing two nodes using Azure PowerShell. This default node pool is automatically configured as a system node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n# Create a new AKS cluster with a single system pool\nNew-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeCount 2 -GenerateSshKey\n```\n\n----------------------------------------\n\nTITLE: Creating Kafka Node Pools using kubectl in Azure Kubernetes Service\nDESCRIPTION: This snippet applies a YAML manifest to create two Kafka node pools (controller and broker) using kubectl. It defines resource requirements, affinity rules, storage configurations, and JVM options for each node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n kafka -f - <<EOF\n---\napiVersion: kafka.strimzi.io/v1beta2\nkind: KafkaNodePool\nmetadata:\n  name: controller\n  labels:\n    strimzi.io/cluster: kafka-aks-cluster\nspec:\n  replicas: 3\n  roles:\n    - controller\n  resources:\n    requests:\n      memory: 4Gi\n    limits:\n      memory: 6Gi\n  template:\n    pod:\n      metadata:\n        labels:\n          kafkaRole: controller\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: app\n                operator: In\n                values:\n                - kafka\n        podAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 100\n              podAffinityTerm:\n                labelSelector:\n                  matchLabels:\n                    kafkaRole: broker\n                topologyKey: kubernetes.io/hostname\n      topologySpreadConstraints:\n        - labelSelector:\n            matchLabels:\n              kafkaRole: controller\n          maxSkew: 1\n          topologyKey: topology.kubernetes.io/zone\n          whenUnsatisfiable: ScheduleAnyway\n        - labelSelector:\n            matchLabels:\n              kafkaRole: controller\n          maxSkew: 1\n          topologyKey: kubernetes.io/hostname\n          whenUnsatisfiable: ScheduleAnyway\n  storage:\n    type: jbod\n    volumes:\n      - id: 0\n        type: persistent-claim\n        size: 25Gi\n        kraftMetadata: shared\n        deleteClaim: false\n        class: acstor-azuredisk-zr\n  jvmOptions:\n    \"-Xms\": \"3g\"\n    \"-Xmx\": \"3g\"\n    \"-XX\":\n      \"MetaspaceSize\": \"96m\"\n      \"UseG1GC\": \"true\"\n      \"MaxGCPauseMillis\": \"20\"\n      \"InitiatingHeapOccupancyPercent\": \"35\"\n      \"G1HeapRegionSize\": \"16M\"\n      \"MinMetaspaceFreeRatio\": \"50\"\n      \"MaxMetaspaceFreeRatio\": \"80\"\n      \"ExplicitGCInvokesConcurrent\": \"true\" \n---\napiVersion: kafka.strimzi.io/v1beta2\nkind: KafkaNodePool\nmetadata:\n  name: broker\n  labels:\n    strimzi.io/cluster: kafka-aks-cluster\nspec:\n  replicas: 3\n  roles:\n    - broker\n  resources:\n    requests:\n      memory: 8Gi\n    limits:\n      memory: 10Gi\n  template:\n    pod:\n      metadata:\n        labels:\n          kafkaRole: broker\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: app\n                operator: In\n                values:\n                - kafka\n        podAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 100\n              podAffinityTerm:\n                labelSelector:\n                  matchLabels:\n                    kafkaRole: controller\n                topologyKey: kubernetes.io/hostname\n      topologySpreadConstraints:\n        - labelSelector:\n            matchLabels:\n              kafkaRole: broker\n          maxSkew: 1\n          topologyKey: topology.kubernetes.io/zone\n          whenUnsatisfiable: ScheduleAnyway\n        - labelSelector:\n            matchLabels:\n              kafkaRole: broker\n          maxSkew: 1\n          topologyKey: kubernetes.io/hostname\n          whenUnsatisfiable: ScheduleAnyway \n  storage:\n    type: jbod\n    volumes:\n      - id: 0\n        type: persistent-claim\n        size: 50Gi\n        deleteClaim: false\n        class: acstor-azuredisk-zr\n      - id: 1\n        type: persistent-claim\n        size: 25Gi\n        kraftMetadata: shared\n        deleteClaim: false\n        class: acstor-azuredisk-zr\n  jvmOptions:\n    \"-Xms\": \"6g\"\n    \"-Xmx\": \"6g\"\n    \"-XX\":\n      \"MetaspaceSize\": \"96m\"\n      \"UseG1GC\": \"true\"\n      \"MaxGCPauseMillis\": \"20\"\n      \"InitiatingHeapOccupancyPercent\": \"35\"\n      \"G1HeapRegionSize\": \"16M\"\n      \"MinMetaspaceFreeRatio\": \"50\"\n      \"MaxMetaspaceFreeRatio\": \"80\"\n      \"ExplicitGCInvokesConcurrent\": \"true\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating a Virtual Network and Subnet for AKS\nDESCRIPTION: Creates a virtual network with address space 192.168.0.0/16 and a subnet with address prefix 192.168.1.0/24 to host the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet create \\\n    --resource-group myResourceGroup \\\n    --name myAKSVnet \\\n    --address-prefixes 192.168.0.0/16 \\\n    --subnet-name myAKSSubnet \\\n    --subnet-prefix 192.168.1.0/24 \\\n    --location eastus\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with System Node Pool\nDESCRIPTION: Deploys a multizone AKS cluster with managed identity, network plugins, and monitoring integration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nexport SYSTEM_NODE_POOL_VMSKU=\"standard_d2s_v3\"\nexport USER_NODE_POOL_NAME=\"postgres\"\nexport USER_NODE_POOL_VMSKU=\"standard_d4s_v3\"\n\naz aks create \\\n    --name $AKS_PRIMARY_CLUSTER_NAME \\\n    --tags $TAGS \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --location $PRIMARY_CLUSTER_REGION \\\n    --generate-ssh-keys \\\n    --node-resource-group $AKS_PRIMARY_MANAGED_RG_NAME \\\n    --enable-managed-identity \\\n    --assign-identity $AKS_UAMI_WORKLOAD_RESOURCEID \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --network-dataplane cilium \\\n    --nodepool-name systempool \\\n    --enable-oidc-issuer \\\n    --enable-workload-identity \\\n    --enable-cluster-autoscaler \\\n    --min-count 2 \\\n    --max-count 3 \\\n    --node-vm-size $SYSTEM_NODE_POOL_VMSKU \\\n    --enable-azure-monitor-metrics \\\n    --azure-monitor-workspace-resource-id $AMW_RESOURCE_ID \\\n    --grafana-resource-id $GRAFANA_RESOURCE_ID \\\n    --api-server-authorized-ip-ranges $MY_PUBLIC_CLIENT_IP \\\n    --tier standard \\\n    --kubernetes-version $AKS_CLUSTER_VERSION \\\n    --zones 1 2 3 \\\n    --output table\n```\n\n----------------------------------------\n\nTITLE: Creating Azure User-Assigned Managed Identity\nDESCRIPTION: Creates a user-assigned managed identity in Azure, which will be used to authenticate with Azure OpenAI from AKS pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set the managed identity name variable\nMANAGED_IDENTITY_NAME=myIdentity\n\n# Create the managed identity\naz identity create \\\n    --resource-group $RG_NAME \\\n    --name $MANAGED_IDENTITY_NAME\n```\n\n----------------------------------------\n\nTITLE: Configuring Ratify Certificate Store and Verifier in YAML\nDESCRIPTION: A YAML configuration that sets up Ratify verification components: a CertificateStore with a self-signed CA certificate, an ORAS Store for artifact storage, and a Notation Verifier for signature validation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: config.ratify.deislabs.io/v1beta1\nkind: CertificateStore\nmetadata:\n  name: certstore-inline\nspec:\n  provider: inline\n  parameters:\n    value: |\n      -----BEGIN CERTIFICATE-----\n      MIIDQzCCAiugAwIBAgIUDxHQ9JxxmnrLWTA5rAtIZCzY8mMwDQYJKoZIhvcNAQEL\n      BQAwKTEPMA0GA1UECgwGUmF0aWZ5MRYwFAYDVQQDDA1SYXRpZnkgU2FtcGxlMB4X\n      DTIzMDYyOTA1MjgzMloXDTMzMDYyNjA1MjgzMlowKTEPMA0GA1UECgwGUmF0aWZ5\n      MRYwFAYDVQQDDA1SYXRpZnkgU2FtcGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\n      MIIBCgKCAQEAshmsL2VM9ojhgTVUUuEsZro9jfI27VKZJ4naWSHJihmOki7IoZS8\n      3/3ATpkE1lGbduJ77M9UxQbEW1PnESB0bWtMQtjIbser3mFCn15yz4nBXiTIu/K4\n      FYv6HVdc6/cds3jgfEFNw/8RVMBUGNUiSEWa1lV1zDM2v/8GekUr6SNvMyqtY8oo\n      ItwxfUvlhgMNlLgd96mVnnPVLmPkCmXFN9iBMhSce6sn6P9oDIB+pr1ZpE4F5bwa\n      gRBg2tWN3Tz9H/z2a51Xbn7hCT5OLBRlkorHJl2HKKRoXz1hBgR8xOL+zRySH9Qo\n      3yx6WvluYDNfVbCREzKJf9fFiQeVe0EJOwIDAQABo2MwYTAdBgNVHQ4EFgQUKzci\n      EKCDwPBn4I1YZ+sDdnxEir4wHwYDVR0jBBgwFoAUKzciEKCDwPBn4I1YZ+sDdnxE\n      ir4wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAgQwDQYJKoZIhvcNAQEL\n      BQADggEBAGh6duwc1MvV+PUYvIkDfgj158KtYX+bv4PmcV/aemQUoArqM1ECYFjt\n      BlBVmTRJA0lijU5I0oZje80zW7P8M8pra0BM6x3cPnh/oZGrsuMizd4h5b5TnwuJ\n      hRvKFFUVeHn9kORbyQwRQ5SpL8cRGyYp+T6ncEmo0jdIOM5dgfdhwHgb+i3TejcF\n      90sUs65zovUjv1wa11SqOdu12cCj/MYp+H8j2lpaLL2t0cbFJlBY6DNJgxr5qync\n      cz8gbXrZmNbzC7W5QK5J7fcx6tlffOpt5cm427f9NiK2tira50HU7gC3HJkbiSTp\n      Xw10iXXMZzSbQ0/Hj2BF4B40WfAkgRg=\n      -----END CERTIFICATE-----\n---\napiVersion: config.ratify.deislabs.io/v1beta1\nkind: Store\nmetadata:\n  name: store-oras\nspec:\n  name: oras\n# If you want to you use Workload Identity for Ratify to access Azure Container Registry,\n# uncomment the following lines, and fill the proper ClientID:\n# See more: https://ratify.dev/docs/reference/oras-auth-provider\n# parameters:\n#  authProvider:\n#    name: azureWorkloadIdentity\n#    clientID: XXX\n---\napiVersion: config.ratify.deislabs.io/v1beta1\nkind: Verifier\nmetadata:\n  name: verifier-notary-inline\nspec:\n  name: notation\n  artifactTypes: application/vnd.cncf.notary.signature\n  parameters:\n    verificationCertStores:  # certificates for validating signatures\n      certs: # name of the trustStore\n        - certstore-inline # name of the certificate store CRD to include in this trustStore\n    trustPolicyDoc: # policy language that indicates which identities are trusted to produce artifacts\n      version: \"1.0\"\n      trustPolicies:\n        - name: default\n          registryScopes:\n            - \"*\"\n          signatureVerification:\n            level: strict\n          trustStores:\n            - ca:certs\n          trustedIdentities:\n            - \"*\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Pod with Microsoft Entra Workload Identity\nDESCRIPTION: Creates a Kubernetes deployment with a Pod configured to use the service account and workload identity for Azure OpenAI authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ai-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: ai-service\n  template:\n    metadata:\n      labels:\n        app: ai-service\n        azure.workload.identity/use: \"true\"\n    spec:\n      serviceAccountName: $SERVICE_ACCOUNT_NAME\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: ai-service\n        image: ghcr.io/azure-samples/aks-store-demo/ai-service:latest\n        ports:\n        - containerPort: 5001\n        env:\n        - name: USE_AZURE_OPENAI\n          value: \"True\"\n        - name: USE_AZURE_AD\n          value: \"True\"\n        - name: AZURE_OPENAI_DEPLOYMENT_NAME\n          value: \"${AOAI_DEPLOYMENT_NAME}\"\n        - name: AZURE_OPENAI_ENDPOINT\n          value: \"${AOAI_ENDPOINT}\"\n        resources:\n          requests:\n            cpu: 20m\n            memory: 50Mi\n          limits:\n            cpu: 50m\n            memory: 128Mi\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying to Kubernetes Cluster in Azure Pipeline\nDESCRIPTION: YAML configuration for the deployment stage that creates image pull secrets and deploys to Kubernetes cluster using manifest files. Includes steps for downloading artifacts, creating secrets, and deploying using Kubernetes manifests.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/devops-pipeline.md#2025-04-21_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n- stage: Deploy\n  displayName: Deploy stage\n  dependsOn: Build\n  jobs:\n  - deployment: Deploy\n    displayName: Deploy job\n    pool:\n      vmImage: $(vmImageName)\n    environment: 'myenv.aksnamespace' #customize with your environment\n    strategy:\n      runOnce:\n        deploy:\n          steps:\n          - task: DownloadPipelineArtifact@2\n            inputs:\n              artifactName: 'manifests'\n              downloadPath: '$(System.ArtifactsDirectory)/manifests'\n\n          - task: KubernetesManifest@1\n            displayName: Create imagePullSecret\n            inputs:\n              action: 'createSecret'\n              connectionType: 'kubernetesServiceConnection'\n              kubernetesServiceConnection: 'myapp-default' #customize for your Kubernetes service connection\n              secretType: 'dockerRegistry'\n              secretName: '$(imagePullSecret)'\n              dockerRegistryEndpoint: '$(dockerRegistryServiceConnection)'\n\n          - task: KubernetesManifest@1\n            displayName: Deploy to Kubernetes cluster\n            inputs:\n              action: 'deploy'\n              connectionType: 'kubernetesServiceConnection'\n              kubernetesServiceConnection: 'myapp-default' #customize for your Kubernetes service connection\n              manifests: |\n                $(Pipeline.Workspace)/manifests/deployment.yml\n                $(Pipeline.Workspace)/manifests/service.yml\n              containers: '$(containerRegistry)/$(imageRepository):$(tag)'\n              imagePullSecrets: '$(imagePullSecret)'\n```\n\n----------------------------------------\n\nTITLE: Defining Multi-Container Application Structure with Docker Compose\nDESCRIPTION: This Docker Compose YAML file defines the structure and configuration of a multi-container application including RabbitMQ, order service, product service, and store front. It specifies image builds, environment variables, port mappings, health checks, and network configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-app.md#2025-04-21_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nservices:\n  rabbitmq:\n    image: rabbitmq:3.13.2-management-alpine\n    container_name: 'rabbitmq'\n    restart: always\n    environment:\n      - \"RABBITMQ_DEFAULT_USER=username\"\n      - \"RABBITMQ_DEFAULT_PASS=password\"\n    ports:\n      - 15672:15672\n      - 5672:5672\n    healthcheck:\n      test: [\"CMD\", \"rabbitmqctl\", \"status\"]\n      interval: 30s\n      timeout: 10s\n      retries: 5\n    volumes:\n      - ./rabbitmq_enabled_plugins:/etc/rabbitmq/enabled_plugins\n    networks:\n      - backend_services\n  order-service:\n    build: src/order-service\n    container_name: 'order-service'\n    restart: always\n    ports:\n      - 3000:3000\n    healthcheck:\n      test: [\"CMD\", \"wget\", \"-O\", \"/dev/null\", \"-q\", \"http://order-service:3000/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 5\n    environment:\n      - ORDER_QUEUE_HOSTNAME=rabbitmq\n      - ORDER_QUEUE_PORT=5672\n      - ORDER_QUEUE_USERNAME=username\n      - ORDER_QUEUE_PASSWORD=password\n      - ORDER_QUEUE_NAME=orders\n      - ORDER_QUEUE_RECONNECT_LIMIT=3\n    networks:\n      - backend_services\n    depends_on:\n      rabbitmq:\n        condition: service_healthy\n  product-service:\n    build: src/product-service\n    container_name: 'product-service'\n    restart: always\n    ports:\n      - 3002:3002\n    healthcheck:\n      test: [\"CMD\", \"wget\", \"-O\", \"/dev/null\", \"-q\", \"http://product-service:3002/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 5\n    environment:\n      - AI_SERVICE_URL=http://ai-service:5001/\n    networks:\n      - backend_services\n  store-front:\n    build: src/store-front\n    container_name: 'store-front'\n    restart: always\n    ports:\n      - 8080:8080\n    healthcheck:\n      test: [\"CMD\", \"wget\", \"-O\", \"/dev/null\", \"-q\", \"http://store-front:80/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 5\n    environment:\n      - VUE_APP_PRODUCT_SERVICE_URL=http://product-service:3002/\n      - VUE_APP_ORDER_SERVICE_URL=http://order-service:3000/\n    networks:\n      - backend_services\n    depends_on:\n      - product-service\n      - order-service\nnetworks:\n  backend_services:\n    driver: bridge\n```\n\n----------------------------------------\n\nTITLE: Sample Kubernetes Deployment YAML with Service Account and Secret\nDESCRIPTION: This YAML snippet illustrates the essential parts of a Kubernetes deployment that references a service account and secret created by Service Connector, which are needed for passwordless authentication to Azure SQL Database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nserviceAccountName: <service-account-name>\ncontainers:\n- name: raw-linux\n   envFrom:\n      - secretRef:\n         name: <secret-name>\n```\n\n----------------------------------------\n\nTITLE: Exporting Environment Variables for Configuration\nDESCRIPTION: Command to define environment variables that simplify the configuration steps in the deployment process, storing subscription ID, resource group, location, and cluster name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nexport AZURE_SUBSCRIPTION_ID=\"mySubscriptionID\"\nexport AZURE_RESOURCE_GROUP=\"myResourceGroup\"\nexport AZURE_LOCATION=\"myLocation\"\nexport CLUSTER_NAME=\"myClusterName\"\n```\n\n----------------------------------------\n\nTITLE: Configuring kubectl to Connect to AKS Cluster\nDESCRIPTION: Downloads the credentials for the AKS cluster and configures kubectl to use them. This command enables kubectl to communicate with the AKS cluster for deployment and management operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_19\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --overwrite-existing \\\n    --admin\n```\n\n----------------------------------------\n\nTITLE: Manually Scaling a Node Pool in AKS\nDESCRIPTION: Use the az aks nodepool scale command to manually scale the number of nodes in a specific node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_3\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks nodepool scale \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name mynodepool \\\n    --node-count 5 \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: AKS Cluster Configuration Presets Comparison Table\nDESCRIPTION: A detailed comparison table of the different configuration options available across the four AKS cluster presets, showing node pool sizes, autoscaling ranges, networking configurations, and security features for each preset type.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quotas-skus-regions.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n|                              | Production Standard |Dev/Test|Production Economy|Production Enterprise|\n|------------------------------|---------|--------|--------|--------|\n|**System node pool node size**|Standard_D8ds_v5|Standard_D4ds_v5|Standard_D8ds_v5|Standard_D16ds_v5|\n|**System node pool autoscaling range**|2-5 nodes|2-5 nodes|2-5 nodes|2-5 nodes|\n|**User node pool node size**|Standard_D8ds_v5|-|Standard_D8as_v4|Standard_D8ds_v5|\n|**User node pool autoscaling range**|2-100 nodes|-|0-25 nodes|2-100 nodes|\n|**Private cluster**|-|-|-|:::image type=\"icon\" source=\"./media/quotas-skus-regions/yes-icon.svg\":::|\n|**Availability zones**|:::image type=\"icon\" source=\"./media/quotas-skus-regions/yes-icon.svg\":::|-|-|:::image type=\"icon\" source=\"./media/quotas-skus-regions/yes-icon.svg\":::|\n|**Azure Policy**|:::image type=\"icon\" source=\"./media/quotas-skus-regions/yes-icon.svg\":::|-|-|:::image type=\"icon\" source=\"./media/quotas-skus-regions/yes-icon.svg\":::|\n|**Azure Monitor**|:::image type=\"icon\" source=\"./media/quotas-skus-regions/yes-icon.svg\":::|-|-|:::image type=\"icon\" source=\"./media/quotas-skus-regions/yes-icon.svg\":::|\n|**Secrets store CSI driver**|:::image type=\"icon\" source=\"./media/quotas-skus-regions/yes-icon.svg\":::|-|-|:::image type=\"icon\" source=\"./media/quotas-skus-regions/yes-icon.svg\":::|\n|**Network configuration**|Azure CNI Overlay|Azure CNI Overlay|Azure CNI Overlay|Azure CNI Overlay|\n|**Network policy**|None|None|None|None|\n|**Authentication and Authorization**|Local accounts with Kubernetes RBAC|Local accounts with Kubernetes RBAC|Microsoft Entra ID Authentication with Azure RBAC|Microsoft Entra ID authentication with Azure RBAC|\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio's Strict mTLS Mode\nDESCRIPTION: Applies PeerAuthentication resources to enforce strict mTLS mode for the bookbuyer, bookthief, bookstore, and bookwarehouse namespaces in Istio.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: bookbuyer\n  namespace: bookbuyer\nspec:\n  mtls:\n    mode: STRICT\n---\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: bookthief\n  namespace: bookthief\nspec:\n  mtls:\n    mode: STRICT\n---\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: bookstore\n  namespace: bookstore\nspec:\n  mtls:\n    mode: STRICT\n---\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: bookwarehouse\n  namespace: bookwarehouse\nspec:\n  mtls:\n    mode: STRICT\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with KEDA Enabled\nDESCRIPTION: Creates a new AKS cluster with the KEDA add-on enabled using Azure CLI. This command specifies the resource group, cluster name, and enables KEDA using the --enable-keda flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --enable-keda \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Objects for AKS Store Application in YAML\nDESCRIPTION: This YAML manifest defines all the Kubernetes objects required to run the AKS Store application, including StatefulSets, ConfigMaps, Services, and Deployments for RabbitMQ, order service, product service, and store front components.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-portal.md#2025-04-21_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: rabbitmq\nspec:\n  serviceName: rabbitmq\n  replicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: rabbitmq\n        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine\n        ports:\n        - containerPort: 5672\n          name: rabbitmq-amqp\n        - containerPort: 15672\n          name: rabbitmq-http\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"username\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"password\"\n        resources:\n          requests:\n            cpu: 10m\n            memory: 128Mi\n          limits:\n            cpu: 250m\n            memory: 256Mi\n        volumeMounts:\n        - name: rabbitmq-enabled-plugins\n          mountPath: /etc/rabbitmq/enabled_plugins\n          subPath: enabled_plugins\n      volumes:\n      - name: rabbitmq-enabled-plugins\n        configMap:\n          name: rabbitmq-enabled-plugins\n          items:\n          - key: rabbitmq_enabled_plugins\n            path: enabled_plugins\n---\napiVersion: v1\ndata:\n  rabbitmq_enabled_plugins: |\n    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].\nkind: ConfigMap\nmetadata:\n  name: rabbitmq-enabled-plugins            \n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n    - name: rabbitmq-amqp\n      port: 5672\n      targetPort: 5672\n    - name: rabbitmq-http\n      port: 15672\n      targetPort: 15672\n  type: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: order-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: order-service\n  template:\n    metadata:\n      labels:\n        app: order-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: order-service\n        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: ORDER_QUEUE_HOSTNAME\n          value: \"rabbitmq\"\n        - name: ORDER_QUEUE_PORT\n          value: \"5672\"\n        - name: ORDER_QUEUE_USERNAME\n          value: \"username\"\n        - name: ORDER_QUEUE_PASSWORD\n          value: \"password\"\n        - name: ORDER_QUEUE_NAME\n          value: \"orders\"\n        - name: FASTIFY_ADDRESS\n          value: \"0.0.0.0\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n        startupProbe:\n          httpGet:\n            path: /health\n            port: 3000\n          failureThreshold: 5\n          initialDelaySeconds: 20\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 3000\n          failureThreshold: 3\n          initialDelaySeconds: 3\n          periodSeconds: 5\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 3000\n          failureThreshold: 5\n          initialDelaySeconds: 3\n          periodSeconds: 3\n      initContainers:\n      - name: wait-for-rabbitmq\n        image: busybox\n        command: ['sh', '-c', 'until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi    \n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: order-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3000\n    targetPort: 3000\n  selector:\n    app: order-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-service\n  template:\n    metadata:\n      labels:\n        app: product-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: product-service\n        image: ghcr.io/azure-samples/aks-store-demo/product-service:latest\n        ports:\n        - containerPort: 3002\n        env: \n        - name: AI_SERVICE_URL\n          value: \"http://ai-service:5001/\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 1Mi\n          limits:\n            cpu: 2m\n            memory: 20Mi\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 3002\n          failureThreshold: 3\n          initialDelaySeconds: 3\n          periodSeconds: 5\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 3002\n          failureThreshold: 5\n          initialDelaySeconds: 3\n          periodSeconds: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3002\n    targetPort: 3002\n  selector:\n    app: product-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: store-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: store-front\n  template:\n    metadata:\n      labels:\n        app: store-front\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: store-front\n        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest\n        ports:\n        - containerPort: 8080\n          name: store-front\n        env: \n        - name: VUE_APP_ORDER_SERVICE_URL\n          value: \"http://order-service:3000/\"\n        - name: VUE_APP_PRODUCT_SERVICE_URL\n          value: \"http://product-service:3002/\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 200Mi\n          limits:\n            cpu: 1000m\n            memory: 512Mi\n        startupProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          failureThreshold: 3\n          initialDelaySeconds: 5\n          periodSeconds: 5\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          failureThreshold: 3\n          initialDelaySeconds: 3\n          periodSeconds: 3\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          failureThreshold: 5\n          initialDelaySeconds: 3\n          periodSeconds: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: store-front\nspec:\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: store-front\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Deploying an AKS Cluster with Azure PowerShell\nDESCRIPTION: Creates a new AKS cluster named 'myAKSCluster' with a single node in the previously created resource group. The command enables a system-assigned managed identity and generates SSH keys for node access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-powershell.md#2025-04-21_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\nNew-AzAksCluster -ResourceGroupName myResourceGroup `\n    -Name myAKSCluster `\n    -NodeCount 1 `\n    -EnableManagedIdentity `\n    -GenerateSshKey\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster to Enable OIDC Issuer\nDESCRIPTION: This command updates an existing AKS cluster named 'myAKSCluster' to enable the OIDC issuer feature. This enables the cluster to use OIDC for authentication with external identity providers like Microsoft Entra ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-oidc-issuer.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myAKSCluster --enable-oidc-issuer \n```\n\n----------------------------------------\n\nTITLE: Creating Federated Identity Credential\nDESCRIPTION: Establishes a trust relationship between the Azure managed identity and the Kubernetes service account using federated credentials. This enables workload identity authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nexport FEDERATED_IDENTITY_NAME=\"aksfederatedidentity\" # can be changed as needed\n\naz identity federated-credential create --name $FEDERATED_IDENTITY_NAME --identity-name $UAMI --resource-group $RESOURCE_GROUP --issuer ${AKS_OIDC_ISSUER} --subject system:serviceaccount:${SERVICE_ACCOUNT_NAMESPACE}:${SERVICE_ACCOUNT_NAME}\n```\n\n----------------------------------------\n\nTITLE: Creating Pod YAML to Mount the Azure Disk\nDESCRIPTION: YAML configuration for creating a pod that mounts the previously claimed persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mypod\nspec:\n  nodeSelector:\n    kubernetes.io/os: linux\n  containers:\n    - image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n      name: mypod\n      resources:\n        requests:\n          cpu: 100m\n          memory: 128Mi\n        limits:\n          cpu: 250m\n          memory: 256Mi\n      volumeMounts:\n        - name: azure\n          mountPath: /mnt/azure\n  volumes:\n    - name: azure\n      persistentVolumeClaim:\n        claimName: pvc-azuredisk\n```\n\n----------------------------------------\n\nTITLE: Creating NGINX Ingress Controller with Static IP in YAML\nDESCRIPTION: YAML manifest for creating an NGINX ingress controller with a static IP address by referencing an existing Azure public IP resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_13\n\nLANGUAGE: yml\nCODE:\n```\napiVersion: approuting.kubernetes.azure.com/v1alpha1\nkind: NginxIngressController\nmetadata:\n  name: nginx-static\nspec:\n  ingressClassName: nginx-static\n  controllerNamePrefix: nginx-static\n  loadBalancerAnnotations: \n    service.beta.kubernetes.io/azure-pip-name: \"myIngressPublicIP\"\n    service.beta.kubernetes.io/azure-load-balancer-resource-group: \"myNetworkResourceGroup\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Node Autoprovisioning\nDESCRIPTION: Azure CLI command to create a new AKS cluster with node autoprovisioning enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name $CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --node-provisioning-mode Auto \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --network-dataplane cilium \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes RBAC Binding Configuration using kubectl\nDESCRIPTION: This command applies the ClusterRoleBinding configuration to the Kubernetes cluster using kubectl, enabling Microsoft Entra authentication for the specified user.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_12\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f basic-azure-ad-binding.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating a Persistent Volume Claim for Premium SSD v2 Disk\nDESCRIPTION: This YAML manifest defines a PersistentVolumeClaim named 'premium2-disk' that requests a 1000GB Premium SSD v2 disk with ReadWriteOnce access mode using the previously created storage class.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-premium-v2-disks.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: premium2-disk\nspec:\n  accessModes:\n  - ReadWriteOnce\n  storageClassName: premium2-disk-sc\n  resources:\n    requests:\n      storage: 1000Gi\n```\n\n----------------------------------------\n\nTITLE: VPA Test Deployment Configuration\nDESCRIPTION: YAML manifest for testing Vertical Pod Autoscaler that includes a VPA resource and a Deployment with two pods. The deployment intentionally underestimates resources to demonstrate VPA's adjustment capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"autoscaling.k8s.io/v1\"\nkind: VerticalPodAutoscaler\nmetadata:\n  name: hamster-vpa\nspec:\n  targetRef:\n    apiVersion: \"apps/v1\"\n    kind: Deployment\n    name: hamster\n  resourcePolicy:\n    containerPolicies:\n      - containerName: '*'\n        minAllowed:\n          cpu: 100m\n          memory: 50Mi\n        maxAllowed:\n          cpu: 1\n          memory: 500Mi\n        controlledResources: [\"cpu\", \"memory\"]\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hamster\nspec:\n  selector:\n    matchLabels:\n      app: hamster\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: hamster\n    spec:\n      securityContext:\n        runAsNonRoot: true\n        runAsUser: 65534\n      containers:\n        - name: hamster\n          image: registry.k8s.io/ubuntu-slim:0.1\n          resources:\n            requests:\n              cpu: 100m\n              memory: 50Mi\n          command: [\"/bin/sh\"]\n          args:\n            - \"-c\"\n            - \"while true; do timeout 0.5s yes >/dev/null; sleep 0.5s; done\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Encrypted Ephemeral OS Disks\nDESCRIPTION: Command to create an AKS cluster with ephemeral OS disks encrypted using customer-managed keys, which requires specifying a compatible VM size.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --name myAKSCluster --resource-group myResourceGroup --node-osdisk-diskencryptionset-id $diskEncryptionSetId --generate-ssh-keys --node-osdisk-type Ephemeral --node-vm-size Standard_DS3_v2\n```\n\n----------------------------------------\n\nTITLE: Configuring Vertical Pod Autoscaler Resource\nDESCRIPTION: VPA manifest that configures automatic resource adjustment for the deployment with Recreate update mode, allowing VPA to delete and recreate pods with adjusted resource requests.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: autoscaling.k8s.io/v1\nkind: VerticalPodAutoscaler\nmetadata:\n  name: vpa-auto\nspec:\n  targetRef:\n    apiVersion: \"apps/v1\"\n    kind:       Deployment\n    name:       vpa-auto-deployment\n  updatePolicy:\n    updateMode: \"Recreate\"\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Network Policy Manager on Existing AKS Cluster\nDESCRIPTION: Command to update an existing AKS cluster to use Azure Network Policy Manager. This enables network policy enforcement on an already deployed cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --network-policy azure\n```\n\n----------------------------------------\n\nTITLE: Deploying PostgreSQL Cluster with Azure Disk Storage\nDESCRIPTION: Kubernetes manifest for deploying a 3-node PostgreSQL cluster using Azure Disk Premium SSD storage. Includes configuration for high availability, resource allocation, backup settings, and workload identity integration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-postgresql-ha.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply --context $AKS_PRIMARY_CLUSTER_NAME -n $PG_NAMESPACE -v 9 -f -\napiVersion: postgresql.cnpg.io/v1\nkind: Cluster\nmetadata:\n  name: $PG_PRIMARY_CLUSTER_NAME\nspec:\n  inheritedMetadata:\n    annotations:\n      service.beta.kubernetes.io/azure-dns-label-name: $AKS_PRIMARY_CLUSTER_PG_DNSPREFIX\n    labels:\n      azure.workload.identity/use: \"true\"\n\n  instances: 3\n  startDelay: 30\n  stopDelay: 30\n  minSyncReplicas: 1\n  maxSyncReplicas: 1\n  replicationSlots:\n    highAvailability:\n      enabled: true\n    updateInterval: 30\n\n  topologySpreadConstraints:\n  - maxSkew: 1\n    topologyKey: topology.kubernetes.io/zone\n    whenUnsatisfiable: DoNotSchedule\n    labelSelector:\n      matchLabels:\n        cnpg.io/cluster: $PG_PRIMARY_CLUSTER_NAME\n        \n  affinity:\n    nodeSelector:\n      workload: postgres\n\n  resources:\n    requests:\n      memory: '8Gi'\n      cpu: 2\n    limits:\n      memory: '8Gi'\n      cpu: 2\n\n  bootstrap:\n    initdb:\n      database: appdb\n      owner: app\n      secret:\n        name: db-user-pass\n      dataChecksums: true\n\n  storage:\n    size: 32Gi\n    pvcTemplate:\n      accessModes:\n        - ReadWriteOnce\n      resources:\n        requests:\n          storage: 32Gi\n      storageClassName: $POSTGRES_STORAGE_CLASS\n\n  walStorage:\n    size: 32Gi\n    pvcTemplate:\n      accessModes:\n        - ReadWriteOnce\n      resources:\n        requests:\n          storage: 32Gi\n      storageClassName: $POSTGRES_STORAGE_CLASS\n\n  monitoring:\n    enablePodMonitor: true\n\n  postgresql:\n    parameters:\n      wal_compression: lz4\n      max_wal_size: 6GB\n      checkpoint_timeout: 15min\n      checkpoint_flush_after: 2MB\n      wal_writer_flush_after: 2MB\n      min_wal_size: 4GB\n      shared_buffers: 4GB\n      effective_cache_size: 12GB\n      work_mem: 62MB\n      maintenance_work_mem: 1GB\n      autovacuum_vacuum_cost_limit: \"2400\"\n      random_page_cost: \"1.1\"\n      effective_io_concurrency: \"64\"\n      maintenance_io_concurrency: \"64\"\n    pg_hba:\n      - host all all all scram-sha-256\n\n  serviceAccountTemplate:\n    metadata:\n      annotations:\n        azure.workload.identity/client-id: \"$AKS_UAMI_WORKLOAD_CLIENTID\"\n      labels:\n        azure.workload.identity/use: \"true\"\n\n  backup:\n    barmanObjectStore:\n      destinationPath: \"https://${PG_PRIMARY_STORAGE_ACCOUNT_NAME}.blob.core.windows.net/backups\"\n      azureCredentials:\n        inheritFromAzureAD: true\n    retentionPolicy: '7d'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Kubelet Configuration for Linux Node Pools\nDESCRIPTION: This JSON configuration file specifies custom kubelet settings for Linux node pools in AKS. It includes settings for CPU manager policy, CPU CFS quota, image garbage collection thresholds, topology manager policy, allowed unsafe sysctls, and swap behavior.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-node-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n \"cpuManagerPolicy\": \"static\",\n \"cpuCfsQuota\": true,\n \"cpuCfsQuotaPeriod\": \"200ms\",\n \"imageGcHighThreshold\": 90,\n \"imageGcLowThreshold\": 70,\n \"topologyManagerPolicy\": \"best-effort\",\n \"allowedUnsafeSysctls\": [\n  \"kernel.msg*\",\n  \"net.*\"\n],\n \"failSwapOn\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New AKS Cluster with LTS Enabled\nDESCRIPTION: Creates a new Azure Kubernetes Service cluster with long-term support enabled on the Premium tier. Requires specifying the resource group, cluster name, and Kubernetes version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/long-term-support.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group <resource-group-name> \\\n    --name <cluster-name> \\\n    --tier premium \\\n    --k8s-support-plan AKSLongTermSupport \\\n    --kubernetes-version 1.27 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Configuring kubectl for Private AKS Cluster\nDESCRIPTION: Sets up kubectl to connect to the private AKS cluster by downloading credentials and configuring the Kubernetes CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group <private-cluster-resource-group> --name <private-cluster-name>\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Managed Identity\nDESCRIPTION: Creates a new AKS cluster with Microsoft Entra integration enabled and admin group access configured.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-authentication-microsoft-entra-id.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --enable-aad \\\n    --aad-admin-group-object-ids <id> [--aad-tenant-id <id>] \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Installing Azure CLI AKS Preview Extension\nDESCRIPTION: Commands to install and update the AKS preview extension for Azure CLI, which is required to access the AI toolchain operator functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Standard Load Balancer and VMSS using Terraform\nDESCRIPTION: This Terraform configuration creates a resource group and an AKS cluster with auto-scaling enabled and specific network settings. It includes main configuration, outputs, provider settings, and variables.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/aks-migration.md#2025-04-21_snippet_1\n\nLANGUAGE: Terraform\nCODE:\n```\n# main.tf content\n# outputs.tf content\n# providers.tf content\n# variables.tf content\n\n# Note: Actual Terraform code is not provided in the original text, just placeholders.\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster and Verifying Nodes with Azure CLI\nDESCRIPTION: This snippet demonstrates how to use Azure CLI to obtain credentials for an AKS cluster and verify the connection by listing cluster nodes. It uses the 'az aks get-credentials' command to configure kubectl and then 'kubectl get nodes' to list the nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-portal.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Node Pool with GPU Support and Skipping Driver Installation\nDESCRIPTION: Command to add a new node pool to an AKS cluster with GPU capabilities while skipping the automatic GPU driver installation using the --skip-gpu-driver-install flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name gpunp \\\n    --node-count 1 \\\n    --skip-gpu-driver-install \\\n    --node-vm-size Standard_NC6s_v3 \\\n    --enable-cluster-autoscaler \\\n    --min-count 1 \\\n    --max-count 3\n```\n\n----------------------------------------\n\nTITLE: Azure AKS Cost Optimization Parameters\nDESCRIPTION: Configuration parameters recommended for cost optimization in AKS cluster autoscaler. These settings enable more aggressive scale-down behavior and resource utilization.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* Reduce `scale-down-unneeded-time`\n* Reduce `scale-down-delay-after-add`\n* Increase `scale-down-utilization-threshold`\n* Increase `max-empty-bulk-delete`\n* Set `skip-nodes-with-local-storage` to false\n* Increase `ok-total-unready-count`and `max-total-unready-percentage`\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod to Use SecretProviderClass\nDESCRIPTION: YAML configuration for a pod that mounts secrets from Key Vault using the SecretProviderClass.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: busybox-secrets-store-inline-user-msi\nspec:\n  containers:\n    - name: busybox\n      image: registry.k8s.io/e2e-test-images/busybox:1.29-4\n      command:\n        - \"/bin/sleep\"\n        - \"10000\"\n      volumeMounts:\n      - name: secrets-store01-inline\n        mountPath: \"/mnt/secrets-store\"\n        readOnly: true\n  volumes:\n    - name: secrets-store01-inline\n      csi:\n        driver: secrets-store.csi.k8s.io\n        readOnly: true\n        volumeAttributes:\n          secretProviderClass: \"azure-kvname-user-msi\"\n```\n\n----------------------------------------\n\nTITLE: Enabling VPA on Existing AKS Cluster\nDESCRIPTION: Command to update an existing AKS cluster to enable the Vertical Pod Autoscaler feature using az aks update command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name <cluster-name> --resource-group <resource-group-name> --enable-vpa\n```\n\n----------------------------------------\n\nTITLE: Defining a Kubernetes StorageClass for Encrypted Data Disks\nDESCRIPTION: Kubernetes StorageClass YAML definition that specifies the DiskEncryptionSet to use for encrypting data disks provisioned through Persistent Volume Claims.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: byok\nprovisioner: disk.csi.azure.com # replace with \"kubernetes.io/azure-disk\" if aks version is less than 1.21\nparameters:\n  skuname: StandardSSD_LRS\n  kind: managed\n  diskEncryptionSetID: \"/subscriptions/{myAzureSubscriptionId}/resourceGroups/{myResourceGroup}/providers/Microsoft.Compute/diskEncryptionSets/{myDiskEncryptionSetName}\"\n```\n\n----------------------------------------\n\nTITLE: Creating a TensorFlow GPU Workload Job in Kubernetes\nDESCRIPTION: YAML manifest for creating a GPU-enabled TensorFlow job that runs the MNIST dataset. It requests one NVIDIA GPU using the nvidia.com/gpu: 1 resource limit.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app: samples-tf-mnist-demo\n  name: samples-tf-mnist-demo\nspec:\n  template:\n    metadata:\n      labels:\n        app: samples-tf-mnist-demo\n    spec:\n      containers:\n      - name: samples-tf-mnist-demo\n        image: mcr.microsoft.com/azuredocs/samples-tf-mnist-demo:gpu\n        args: [\"--max_steps\", \"500\"]\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n           nvidia.com/gpu: 1\n      restartPolicy: OnFailure\n      tolerations:\n      - key: \"sku\"\n        operator: \"Equal\"\n        value: \"gpu\"\n        effect: \"NoSchedule\"\n```\n\n----------------------------------------\n\nTITLE: Creating Key in Azure Key Vault\nDESCRIPTION: This command creates a new key in the specified Azure Key Vault, which will be used for KMS encryption in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault key create --name MyKeyName --vault-name MyKeyVault\n```\n\n----------------------------------------\n\nTITLE: Assigning AKS Cluster Admin Role using Azure CLI\nDESCRIPTION: Azure CLI commands to get cluster resource ID, user account credentials, and assign the Cluster Admin role to a user. Requires Azure CLI 2.0.65+ and an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-kubeconfig-access.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Get the resource ID of your AKS cluster\nAKS_CLUSTER=$(az aks show --resource-group myResourceGroup --name myAKSCluster --query id -o tsv)\n\n# Get the account credentials for the logged in user\nACCOUNT_UPN=$(az account show --query user.name -o tsv)\nACCOUNT_ID=$(az ad user show --id $ACCOUNT_UPN --query objectId -o tsv)\n\n# Assign the 'Cluster Admin' role to the user\naz role assignment create \\\n    --assignee $ACCOUNT_ID \\\n    --scope $AKS_CLUSTER \\\n    --role \"Azure Kubernetes Service Cluster Admin Role\"\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with Azure CNI Overlay and Dual-Stack\nDESCRIPTION: This command creates an AKS cluster with Azure CNI in overlay mode supporting dual-stack (IPv4 and IPv6) networking. It specifies cluster name, resource group, and location along with network configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nclusterName=\"myOverlayCluster\"\nresourceGroup=\"myResourceGroup\"\nlocation=\"westcentralus\"\n\naz aks create \\\n    --name $clusterName \\\n    --resource-group $resourceGroup \\\n    --location $location \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --ip-families ipv4,ipv6 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating a New AKS Cluster with Cost Analysis Enabled (Azure CLI)\nDESCRIPTION: This command creates a new AKS cluster in the Standard tier with cost analysis enabled using the Azure CLI. It specifies the resource group, cluster name, location, and enables managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cost-analysis.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group <resource-group> --name <cluster-name> --location <location> --enable-managed-identity --generate-ssh-keys --tier standard --enable-cost-analysis\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Rules for Alpine-based Containers in Cilium Network Policies\nDESCRIPTION: This YAML snippet demonstrates how to configure DNS rules in a Cilium Network Policy to work around DNS resolution issues in Alpine-based containers. It explicitly defines search domains using wildcard patterns to ensure proper DNS resolution.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-security-concepts.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrules:\n  dns:\n  - matchPattern: \"*.example.com\"\n  - matchPattern: \"*.example.com.*.*\"\n  - matchPattern: \"*.example.com.*.*.*\"\n  - matchPattern: \"*.example.com.*.*.*.*\"\n  - matchPattern: \"*.example.com.*.*.*.*.*\"\n- toFQDNs:\n  - matchPattern: \"*.example.com\"\n```\n\n----------------------------------------\n\nTITLE: Updating Cluster-wide Autoscaler Settings\nDESCRIPTION: Updates the cluster-wide autoscaler settings by changing the minimum and maximum node counts. This affects all node pools with autoscaling enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --update-cluster-autoscaler \\\n  --min-count 1 \\\n  --max-count 5\n```\n\n----------------------------------------\n\nTITLE: Zone-Aware Deployment Configuration\nDESCRIPTION: YAML configuration for a Kubernetes deployment that ensures pod distribution across availability zones using topology spread constraints.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/availability-zones-overview.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-deployment\nspec:\n  selector:\n    matchLabels:\n      app: my-app\n  template:\n    metadata:\n      labels:\n        app: my-app\n    spec:\n      topologySpreadConstraints:\n      - maxSkew: 1\n        topologyKey: topology.kubernetes.io/zone\n        whenUnsatisfiable: DoNotSchedule\n        labelSelector:\n          matchLabels:\n            app: my-app\n      containers:\n      - name: my-container\n        image: my-image\n```\n\n----------------------------------------\n\nTITLE: Generating Helm Chart Structure in Bash\nDESCRIPTION: Uses the helm create command to generate the initial structure for a Helm chart named azure-vote-front.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nhelm create azure-vote-front\n```\n\n----------------------------------------\n\nTITLE: Creating New AKS Cluster with Host-based Encryption\nDESCRIPTION: Creates a new AKS cluster with host-based encryption enabled using Azure CLI. Requires CLI extension v2.23 or higher and must be used in supported Azure regions with compatible VM sizes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-host-encryption.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --node-vm-size Standard_DS2_v2 \\\n    --location westus2 \\\n    --enable-encryption-at-host \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Listing Supported Kubernetes Versions - PowerShell\nDESCRIPTION: Command to retrieve available Kubernetes versions for a specific region using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/supported-kubernetes-versions.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzAksVersion -Location eastus\n```\n\n----------------------------------------\n\nTITLE: Removing AKS Resource Group Using Azure PowerShell\nDESCRIPTION: Uses the Remove-AzResourceGroup cmdlet to delete an Azure resource group containing an AKS cluster and all its associated resources. This command performs a complete cleanup of the AKS deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep.md#2025-04-21_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nRemove-AzResourceGroup -Name myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Upgrading Specific Windows Node Pool to containerd\nDESCRIPTION: Azure CLI command to upgrade a specific Windows Server node pool from Docker to containerd runtime. Requires specifying the target node pool name and Kubernetes version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool upgrade \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --name $CONTAINER_D_NODE_POOL_NAME \\\n    --kubernetes-version 1.20.7 \\\n    --aks-custom-headers WindowsContainerRuntime=containerd\n```\n\n----------------------------------------\n\nTITLE: Updating Ingress configuration for application routing add-on\nDESCRIPTION: This YAML snippet shows how to update an Ingress resource configuration to work with the application routing add-on. It includes removing the old annotation, setting the new ingressClassName, and updating the host.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-migration.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: aks-helloworld\nspec:\n  ingressClassName: webapprouting.kubernetes.azure.com # Set the ingress class property to refer to the application routing add-on ingress class\n  rules:\n  - host: aks-helloworld.<CLUSTER_SPECIFIC_DNS_ZONE> # Replace with your own hostname\n    http: \n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: aks-helloworld\n            port:\n              number: 80\n```\n\n----------------------------------------\n\nTITLE: Deploying MongoDB Cluster with Percona Operator on AKS\nDESCRIPTION: Deploys a MongoDB cluster using the Percona Operator with high-availability configuration including replica sets, sharding across availability zones, and backup solution using Azure Blob Storage. The configuration specifies resource limits, persistence requirements, and deployment strategy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: psmdb.percona.com/v1\nkind: PerconaServerMongoDB\nmetadata:\n  name: ${AKS_MONGODB_CLUSTER_NAME}\n  namespace: ${AKS_MONGODB_NAMESPACE}\n  finalizers:\n    - delete-psmdb-pods-in-order\nspec:\n  crVersion: 1.16.0\n  image: ${MY_ACR_REGISTRY}.azurecr.io/percona-server-mongodb:7.0.8-5\n  imagePullPolicy: Always\n  updateStrategy: SmartUpdate\n  upgradeOptions:\n    versionServiceEndpoint: https://check.percona.com\n    apply: disabled\n    schedule: \"0 2 * * *\"\n    setFCV: false\n  secrets:\n    users: \"${AKS_MONGODB_SECRETS_NAME}\"\n    encryptionKey: \"${AKS_MONGODB_SECRETS_ENCRYPTION_KEY}\"\n  pmm:\n    enabled: true\n    image: ${MY_ACR_REGISTRY}.azurecr.io/pmm-client:2.41.2\n    serverHost: monitoring-service\n  replsets:\n    - name: rs0\n      size: 3\n      affinity:\n        antiAffinityTopologyKey: \"failure-domain.beta.kubernetes.io/zone\"\n      nodeSelector:\n        kubernetes.azure.com/agentpool: \"mongodbpool\"\n      podDisruptionBudget:\n        maxUnavailable: 1\n      expose:\n        enabled: false\n        exposeType: ClusterIP\n      resources:\n        limits:\n          cpu: \"300m\"\n          memory: \"0.5G\"\n        requests:\n          cpu: \"300m\"\n          memory: \"0.5G\"\n      volumeSpec:\n        persistentVolumeClaim:\n          storageClassName: managed-csi-premium\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 1Gi\n      nonvoting:\n        enabled: false\n        size: 3\n        affinity:\n          antiAffinityTopologyKey: \"failure-domain.beta.kubernetes.io/zone\"\n        nodeSelector:\n          kubernetes.azure.com/agentpool: \"mongodbpool\"\t\t \n        podDisruptionBudget:\n          maxUnavailable: 1\n        resources:\n          limits:\n            cpu: \"300m\"\n            memory: \"0.5G\"\n          requests:\n            cpu: \"300m\"\n            memory: \"0.5G\"\n        volumeSpec:\n          persistentVolumeClaim:\n            storageClassName: managed-csi-premium\n            accessModes: [\"ReadWriteOnce\"]\n            resources:\n              requests:\n                storage: 1Gi\n      arbiter:\n        enabled: false\n        size: 1\n        affinity:\n          antiAffinityTopologyKey: \"failure-domain.beta.kubernetes.io/zone\"\n        nodeSelector:\n          kubernetes.azure.com/agentpool: \"mongodbpool\"\n        resources:\n          limits:\n            cpu: \"300m\"\n            memory: \"0.5G\"\n          requests:\n            cpu: \"300m\"\n            memory: \"0.5G\"\n  sharding:\n    enabled: true\n    configsvrReplSet:\n      size: 3\n      affinity:\n        antiAffinityTopologyKey: \"failure-domain.beta.kubernetes.io/zone\"\n      nodeSelector:\n        kubernetes.azure.com/agentpool: \"mongodbpool\"\n      podDisruptionBudget:\n        maxUnavailable: 1\n      expose:\n        enabled: false\n      resources:\n        limits:\n          cpu: \"300m\"\n          memory: \"0.5G\"\n        requests:\n          cpu: \"300m\"\n          memory: \"0.5G\"\n      volumeSpec:\n        persistentVolumeClaim:\n          storageClassName: managed-csi-premium\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 1Gi\n    mongos:\n      size: 3\n      affinity:\n        antiAffinityTopologyKey: \"failure-domain.beta.kubernetes.io/zone\"\n      nodeSelector:\n        kubernetes.azure.com/agentpool: \"mongodbpool\"\n      podDisruptionBudget:\n        maxUnavailable: 1\n      resources:\n        limits:\n          cpu: \"300m\"\n          memory: \"0.5G\"\n        requests:\n          cpu: \"300m\"\n          memory: \"0.5G\"\n      expose:\n        exposeType: ClusterIP\n  backup:\n    enabled: true\n    image: ${MY_ACR_REGISTRY}.azurecr.io/percona-backup-mongodb:2.4.1\n    storages:\n      azure-blob:\n        type: azure\n        azure:\n          container: \"${AKS_MONGODB_BACKUP_STORAGE_CONTAINER_NAME}\"\n          prefix: psmdb\n          endpointUrl: \"https://${AKS_MONGODB_BACKUP_STORAGE_ACCOUNT_NAME}.blob.core.windows.net\"\n          credentialsSecret: \"${AKS_AZURE_SECRETS_NAME}\"\n    pitr:\n      enabled: false\n      oplogOnly: false\n      compressionType: gzip\n      compressionLevel: 6\n    tasks:\n      - name: daily-azure-us-east\n        enabled: true\n        schedule: \"0 0 * * *\"\n        keep: 3\n        storageName: azure-blob    \n        compressionType: gzip\n        compressionLevel: 6\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating a New AKS Cluster with Deployment Safeguards\nDESCRIPTION: Command to create a new AKS cluster with deployment safeguards enabled in Warning mode using version 2.0.0. The Azure Policy add-on must be enabled for safeguards to work.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deployment-safeguards.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --enable-addons azure-policy \\\n    --safeguards-level Warning \\\n    --safeguards-version v2.0.0 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with App Routing\nDESCRIPTION: Azure CLI command to create a new AKS cluster with application routing enabled using the --enable-app-routing flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group <ResourceGroupName> \\\n    --name <ClusterName> \\\n    --location <Location> \\\n    --enable-app-routing \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Example output of AKS cluster security profile with custom CA certificates\nDESCRIPTION: Sample output showing the security profile of an AKS cluster that includes custom CA trust certificates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-certificate-authority.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n\"securityProfile\": {\n  \"azureKeyVaultKms\": null,\n  \"customCaTrustCertificates\": [\n      \"values\"\n```\n\n----------------------------------------\n\nTITLE: Querying AKS Log Data with Kusto Query Language\nDESCRIPTION: Example Kusto query for retrieving log data from AKS clusters. This query demonstrates how to access and analyze log information using Azure Monitor's query language.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks.md#2025-04-21_snippet_5\n\nLANGUAGE: kusto\nCODE:\n```\nContainerLog\n| where TimeGenerated >= ago(1h)\n| where ContainerID != \"\"\n| summarize count() by ContainerID, _ResourceId\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS cluster with dynamic IP allocation using Azure CNI\nDESCRIPTION: This command creates an AKS cluster with Azure CNI networking configured for dynamic IP allocation. It specifies separate subnets for nodes and pods using the --vnet-subnet-id and --pod-subnet-id parameters, and enables the monitoring add-on.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-dynamic-ip-allocation.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nCLUSTER_NAME=\"myAKSCluster\"\nSUBSCRIPTION=\"aaaaaaa-aaaaa-aaaaaa-aaaa\"\n\naz aks create \\\n    --name $CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --location $LOCATION \\\n    --max-pods 250 \\\n    --node-count 2 \\\n    --network-plugin azure \\\n    --vnet-subnet-id /subscriptions/$SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Network/virtualNetworks/$VNET_NAME/subnets/$SUBNET_NAME_1 \\\n    --pod-subnet-id /subscriptions/$SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Network/virtualNetworks/$VNET_NAME/subnets/$SUBNET_NAME_2 \\\n    --enable-addons monitoring \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Cluster Upgrade Using Azure CLI\nDESCRIPTION: Command to verify the successful upgrade of an AKS cluster by displaying cluster details in a table format, showing the new Kubernetes version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --output table\n```\n\n----------------------------------------\n\nTITLE: Removing PDB and Node Labels\nDESCRIPTION: Commands to remove Pod Disruption Budget and quarantine labels from nodes to resolve undrainable conditions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pdb nginx-pdb\nkubectl label nodes <node-name> <label-key>-\n```\n\n----------------------------------------\n\nTITLE: Checking KMS Status in AKS Cluster\nDESCRIPTION: Query to check if KMS is enabled on AKS clusters and view associated key IDs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_29\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks list --query \"[].{Name:name, KmsEnabled:securityProfile.azureKeyVaultKms.enabled, KeyId:securityProfile.azureKeyVaultKms.keyId}\" -o table\n```\n\n----------------------------------------\n\nTITLE: Creating a StatefulSet with Azure Blobfuse Storage in Kubernetes\nDESCRIPTION: YAML configuration for a Kubernetes StatefulSet that uses Azure Blob storage with the Blobfuse CSI driver. The configuration specifies a single replica with an Nginx container that mounts the Blob storage at /mnt/blob using the azureblob-fuse-premium storage class with ReadWriteMany access mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-blob-csi.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: statefulset-blob\n  labels:\n    app: nginx\nspec:\n  serviceName: statefulset-blob\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n        - name: statefulset-blob\n          image: mcr.microsoft.com/oss/nginx/nginx:1.22\n          volumeMounts:\n            - name: persistent-storage\n              mountPath: /mnt/blob\n  updateStrategy:\n    type: RollingUpdate\n  selector:\n    matchLabels:\n      app: nginx\n  volumeClaimTemplates:\n    - metadata:\n        name: persistent-storage\n      spec:\n        storageClassName: azureblob-fuse-premium\n        accessModes: [\"ReadWriteMany\"]\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Creating Managed Identity in Azure\nDESCRIPTION: Azure CLI command to create a managed identity that will be used for authentication with Azure services. This is part of the Azure implementation for the EDW workload.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmanagedIdentity=$(az identity create \\\n    --resource-group $resourceGroup \\\n    --name $managedIdentityName\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Authorized IP Ranges and Custom Outbound IPs\nDESCRIPTION: Creates an AKS cluster with API server authorized IP ranges enabled and specifies custom outbound IP addresses for the Standard SKU load balancer, allowing both the specified ranges and outbound IPs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 73.140.245.0/24 --load-balancer-outbound-ips <public-ip-id-1>,<public-ip-id-2> --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Secret Rotation Enabled\nDESCRIPTION: Creates a new AKS cluster with the Azure Key Vault Secrets Provider add-on and enables secret rotation using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz aks create \\\n    --name myAKSCluster2 \\\n    --resource-group myResourceGroup \\\n    --enable-addons azure-keyvault-secrets-provider \\\n    --enable-secret-rotation \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Custom Outbound Public IP Prefixes\nDESCRIPTION: This Azure CLI command creates a new AKS cluster with custom outbound public IP prefixes. It uses the --load-balancer-outbound-ip-prefixes parameter to specify the IDs of the custom public IP prefixes during cluster creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --load-balancer-outbound-ip-prefixes <publicIpPrefixId1>,<publicIpPrefixId2> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Assigning Admin Role to Admin Group\nDESCRIPTION: Assigns the Azure Kubernetes Service RBAC Admin role to the admin group, providing full administrative access to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create \\\n    --role \"Azure Kubernetes Service RBAC Admin\" \\\n    --assignee $ADMIN_ID \\\n    --scope $AKS_ID\n```\n\n----------------------------------------\n\nTITLE: Defining a SecretProviderClass for Azure Key Vault Integration\nDESCRIPTION: This YAML configuration defines a SecretProviderClass that integrates with Azure Key Vault to fetch TLS certificates. It specifies how to retrieve the certificate and configure it as a Kubernetes TLS secret.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: azure-tls\nspec:\n  provider: azure\n  secretObjects:                            # secretObjects defines the desired state of synced K8s secret objects\n    - secretName: ingress-tls-csi\n      type: kubernetes.io/tls\n      data: \n        - objectName: $CERT_NAME\n          key: tls.key\n        - objectName: $CERT_NAME\n          key: tls.crt\n  parameters:\n    usePodIdentity: \"false\"\n    useVMManagedIdentity: \"true\"\n    userAssignedIdentityID: <client id>\n    keyvaultName: $AKV_NAME                 # the name of the AKV instance\n    objects: |\n      array:\n        - |\n          objectName: $CERT_NAME\n          objectType: secret\n    tenantId: $TENANT_ID                    # the tenant ID of the AKV instance\n```\n\n----------------------------------------\n\nTITLE: PodMonitor Configuration for GPU Metrics\nDESCRIPTION: YAML configuration for the PodMonitor resource to export GPU metrics to Azure Managed Prometheus.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-gpu-metrics.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: azmonitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  name: nvidia-dcgm-exporter\n  labels:\n    app.kubernetes.io/name: nvidia-dcgm-exporter\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: nvidia-dcgm-exporter\n  podMetricsEndpoints:\n  - port: metrics\n    interval: 30s\n  podTargetLabels:\n```\n\n----------------------------------------\n\nTITLE: Building and Running Multi-Container Application with Docker Compose\nDESCRIPTION: This command uses Docker Compose to build container images, download the RabbitMQ image, and start the multi-container application defined in the docker-compose-quickstart.yml file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-app.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ndocker compose -f docker-compose-quickstart.yml up -d\n```\n\n----------------------------------------\n\nTITLE: Defining Pod with Ultra Disk Volume Mount in Kubernetes YAML\nDESCRIPTION: This YAML manifest defines a Kubernetes pod that uses an ultra disk persistent volume claim. It specifies the container image, resource limits, and volume mount configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-ultra-disks.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: nginx-ultra\nspec:\n  containers:\n - name: nginx-ultra\n    image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 250m\n        memory: 256Mi\n    volumeMounts:\n    - mountPath: \"/mnt/azure\"\n      name: volume\n  volumes:\n    - name: volume\n      persistentVolumeClaim:\n        claimName: ultra-disk\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster using Azure CLI\nDESCRIPTION: Command to delete an AKS cluster named 'myAKSCluster' from the specified resource group using Azure CLI. This operation is irreversible and removes all associated resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/delete-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks delete --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod Topology Spread Constraints in Kubernetes\nDESCRIPTION: A pod definition template that demonstrates how to use topologySpreadConstraints to distribute pods across different nodes or zones in a cluster, improving availability and reliability by preventing pod concentration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: example-pod\nspec:\n  # Configure a topology spread constraint\n  topologySpreadConstraints:\n    - maxSkew: <integer>\n      minDomains: <integer> # optional\n      topologyKey: <string>\n      whenUnsatisfiable: <string>\n      labelSelector: <object>\n      matchLabelKeys: <list> # optional\n      nodeAffinityPolicy: [Honor|Ignore] # optional\n      nodeTaintsPolicy: [Honor|Ignore] # optional\n```\n\n----------------------------------------\n\nTITLE: Applying kube-proxy Configuration to AKS Clusters\nDESCRIPTION: Azure CLI commands to create a new AKS cluster or update an existing one with custom kube-proxy configuration using the --kube-proxy-config parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kube-proxy.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a new cluster\naz aks create \\\n    --resource-group <resourceGroup> \\\n    --name <clusterName> \\\n    --kube-proxy-config kube-proxy.json \\\n    --generate-ssh-keys\n```\n\nLANGUAGE: azurecli\nCODE:\n```\n# Update an existing cluster\naz aks update \\\n    --resource-group <resourceGroup> \\\n    --name <clusterName> \\\n    --kube-proxy-config kube-proxy.json\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster with kubectl\nDESCRIPTION: Commands to configure kubectl to connect to the AKS cluster and verify the connection by retrieving the list of nodes in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group $AZURE_RESOURCE_GROUP --cluster-name $CLUSTER_NAME\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Applying KAITO Workspace Configuration\nDESCRIPTION: This command applies the KAITO workspace configuration to the AKS cluster, initiating the deployment of the custom language model.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kaito-custom-inference-model.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f docs/custom-model-integration/reference_image_deployment.yaml\n```\n\n----------------------------------------\n\nTITLE: LRS Storage Class Configuration\nDESCRIPTION: YAML configuration for creating a storage class using Locally Redundant Storage (LRS) for zone-aligned deployments.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/availability-zones-overview.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkind: StorageClass\nmetadata:\n  name: azuredisk-csi-standard-lrs\nprovisioner: disk.csi.azure.com\nparameters:\n  skuname: StandardSSD_LRS\n  #skuname: PremiumV2_LRS\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Azure CLI\nDESCRIPTION: Command to obtain credentials for connecting to an AKS cluster using Azure CLI. Requires CLUSTER_NAME and RESOURCE_GROUP environment variables to be set.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-marketplace.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: Setting key vault policy for non-RBAC vault in Azure CLI\nDESCRIPTION: This command sets a policy on a non-RBAC Azure Key Vault to allow decrypt and encrypt operations for a specific identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_8\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz keyvault set-policy --name MyKeyVault --key-permissions decrypt encrypt --object-id $IDENTITY_OBJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Resources for AKS Store Application in YAML\nDESCRIPTION: This YAML manifest defines the Kubernetes resources required to deploy the AKS Store application, including deployments and services for RabbitMQ, order service, product service, and store front.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: rabbitmq\n        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine\n        ports:\n        - containerPort: 5672\n          name: rabbitmq-amqp\n        - containerPort: 15672\n          name: rabbitmq-http\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"username\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"password\"\n        resources:\n          requests:\n            cpu: 10m\n            memory: 128Mi\n          limits:\n            cpu: 250m\n            memory: 256Mi\n        volumeMounts:\n        - name: rabbitmq-enabled-plugins\n          mountPath: /etc/rabbitmq/enabled_plugins\n          subPath: enabled_plugins\n      volumes:\n      - name: rabbitmq-enabled-plugins\n        configMap:\n          name: rabbitmq-enabled-plugins\n          items:\n          - key: rabbitmq_enabled_plugins\n            path: enabled_plugins\n---\napiVersion: v1\ndata:\n  rabbitmq_enabled_plugins: |\n    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].\nkind: ConfigMap\nmetadata:\n  name: rabbitmq-enabled-plugins            \n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n    - name: rabbitmq-amqp\n      port: 5672\n      targetPort: 5672\n    - name: rabbitmq-http\n      port: 15672\n      targetPort: 15672\n  type: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: order-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: order-service\n  template:\n    metadata:\n      labels:\n        app: order-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: order-service\n        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: ORDER_QUEUE_HOSTNAME\n          value: \"rabbitmq\"\n        - name: ORDER_QUEUE_PORT\n          value: \"5672\"\n        - name: ORDER_QUEUE_USERNAME\n          value: \"username\"\n        - name: ORDER_QUEUE_PASSWORD\n          value: \"password\"\n        - name: ORDER_QUEUE_NAME\n          value: \"orders\"\n        - name: FASTIFY_ADDRESS\n          value: \"0.0.0.0\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n      initContainers:\n      - name: wait-for-rabbitmq\n        image: busybox\n        command: ['sh', '-c', 'until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi    \n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: order-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3000\n    targetPort: 3000\n  selector:\n    app: order-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-service\n  template:\n    metadata:\n      labels:\n        app: product-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: product-service\n        image: ghcr.io/azure-samples/aks-store-demo/product-service:latest\n        ports:\n        - containerPort: 3002\n        resources:\n          requests:\n            cpu: 1m\n            memory: 1Mi\n          limits:\n            cpu: 1m\n            memory: 7Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3002\n    targetPort: 3002\n  selector:\n    app: product-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: store-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: store-front\n  template:\n    metadata:\n      labels:\n        app: store-front\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: store-front\n        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest\n        ports:\n        - containerPort: 8080\n          name: store-front\n        env: \n        - name: VUE_APP_ORDER_SERVICE_URL\n          value: \"http://order-service:3000/\"\n        - name: VUE_APP_PRODUCT_SERVICE_URL\n          value: \"http://product-service:3002/\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 200Mi\n          limits:\n            cpu: 1000m\n            memory: 512Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: store-front\nspec:\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: store-front\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Requests and Limits in Kubernetes YAML\nDESCRIPTION: This YAML snippet shows how to define CPU resource requests and limits for a container in a Kubernetes deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-scale.md#2025-04-21_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n...\n  containers:\n  - name: store-front\n    image: ghcr.io/azure-samples/aks-store-demo/store-front:latest\n    ports:\n    - containerPort: 8080\n      name: store-front\n...\n    resources:\n      requests:\n        cpu: 1m\n...\n      limits:\n        cpu: 1000m\n...\n```\n\n----------------------------------------\n\nTITLE: Assigning Azure Kubernetes Service Cluster User Role to Group\nDESCRIPTION: This command creates an Azure role assignment for the appdev group, granting them the Azure Kubernetes Service Cluster User Role for the specified AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create \\\n  --assignee $APPDEV_ID \\\n  --role \"Azure Kubernetes Service Cluster User Role\" \\\n  --scope $AKS_ID\n```\n\n----------------------------------------\n\nTITLE: Migrating AKS Disk Volumes to CSI Driver\nDESCRIPTION: Bash script (MigrateToCSI.sh) for migrating AKS disk volumes from in-tree to CSI driver. It creates snapshots, volume snapshot content, and new PVCs using the CSI driver.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n#kubectl get pvc -n <namespace> --sort-by=.metadata.creationTimestamp -o custom-columns=NAME:.metadata.name,CreationTime:.metadata.creationTimestamp,StorageClass:.spec.storageClassName,Size:.spec.resources.requests.storage\n# TimeFormat 2022-04-20T13:19:56Z\nNAMESPACE=$1\nFILENAME=$NAMESPACE-$(date +%Y%m%d%H%M)\nEXISTING_STORAGE_CLASS=$2\nSTORAGE_CLASS_NEW=$3\nVOLUME_STORAGE_CLASS=$4\nSTART_TIME_STAMP=$5\nEND_TIME_STAMP=$6\ni=1\nfor PVC in $(kubectl get pvc -n $NAMESPACE | awk '{ print $1}'); do\n  # Ignore first record as it contains header\n  if [ $i -eq 1 ]; then\n    i=$((i + 1))\n  else\n    PVC_CREATION_TIME=$(kubectl get pvc $PVC -n $NAMESPACE -o jsonpath='{.metadata.creationTimestamp}')\n    if [[ $PVC_CREATION_TIME > $START_TIME_STAMP ]]; then\n      if [[ $END_TIME_STAMP > $PVC_CREATION_TIME ]]; then\n        PV=\"$(kubectl get pvc $PVC -n $NAMESPACE -o jsonpath='{.spec.volumeName}')\"\n        RECLAIM_POLICY=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.persistentVolumeReclaimPolicy}')\"\n        STORAGE_CLASS=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.storageClassName}')\"\n        echo $PVC\n        RECLAIM_POLICY=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.persistentVolumeReclaimPolicy}')\"\n        if [[ $STORAGE_CLASS == $EXISTING_STORAGE_CLASS ]]; then\n          STORAGE_SIZE=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.capacity.storage}')\"\n          SKU_NAME=\"$(kubectl get storageClass $STORAGE_CLASS_NEW -o jsonpath='{.parameters.skuname}')\"\n          DISK_URI=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.azureDisk.diskURI}')\"\n          TARGET_RESOURCE_GROUP=\"$(cut -d'/' -f5 <<\"$DISK_URI\")\"\n          echo $DISK_URI\n          SUBSCRIPTION_ID=\"$(echo $DISK_URI | grep -o 'subscriptions/[^/]*' | sed 's#subscriptions/##g')\"\n          echo $TARGET_RESOURCE_GROUP\n          PERSISTENT_VOLUME_RECLAIM_POLICY=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.persistentVolumeReclaimPolicy}')\"\n          az snapshot create --resource-group $TARGET_RESOURCE_GROUP --name $PVC-$FILENAME --source \"$DISK_URI\" --subscription ${SUBSCRIPTION_ID}\n          SNAPSHOT_PATH=$(az snapshot list --resource-group $TARGET_RESOURCE_GROUP --query \"[?name == '$PVC-$FILENAME'].id | [0]\" --subscription ${SUBSCRIPTION_ID})\n          SNAPSHOT_HANDLE=$(echo \"$SNAPSHOT_PATH\" | tr -d '\"')\n          echo $SNAPSHOT_HANDLE\n          sleep 10\n          # Create Restore File\n          cat <<EOF >$PVC-csi.yml\n    apiVersion: snapshot.storage.k8s.io/v1\n    kind: VolumeSnapshotContent\n    metadata:\n      name: $PVC-$FILENAME\n    spec:\n      deletionPolicy: 'Delete'\n      driver: 'disk.csi.azure.com'\n      volumeSnapshotClassName: $VOLUME_STORAGE_CLASS\n      source:\n        snapshotHandle: $SNAPSHOT_HANDLE\n      volumeSnapshotRef:\n        apiVersion: snapshot.storage.k8s.io/v1\n        kind: VolumeSnapshot\n        name: $PVC-$FILENAME\n        namespace: $1\n---\n    apiVersion: snapshot.storage.k8s.io/v1\n    kind: VolumeSnapshot\n    metadata:\n      name: $PVC-$FILENAME\n      namespace: $1\n    spec:\n      volumeSnapshotClassName: $VOLUME_STORAGE_CLASS\n      source:\n        volumeSnapshotContentName: $PVC-$FILENAME\n---\n    apiVersion: v1\n    kind: PersistentVolumeClaim\n    metadata:\n      name: csi-$PVC\n      namespace: $1\n    spec:\n      accessModes:\n      - ReadWriteOnce\n      storageClassName: $STORAGE_CLASS_NEW\n      resources:\n        requests:\n          storage: $STORAGE_SIZE\n      dataSource:\n        name: $PVC-$FILENAME\n        kind: VolumeSnapshot\n        apiGroup: snapshot.storage.k8s.io\n\nEOF\n          kubectl create -f $PVC-csi.yml\n          LINE=\"OLDPVC:$PVC,OLDPV:$PV,VolumeSnapshotContent:volumeSnapshotContent-$FILENAME,VolumeSnapshot:volumesnapshot$FILENAME,OLDdisk:$DISK_URI\"\n          printf '%s\\n' \"$LINE\" >>$FILENAME\n        fi\n      fi\n    fi\n  fi\ndone\n```\n\n----------------------------------------\n\nTITLE: Generate Service Certificate\nDESCRIPTION: Creates a certificate and private key for the productpage service domain.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -out bookinfo_certs/productpage.bookinfo.com.csr -newkey rsa:2048 -nodes -keyout bookinfo_certs/productpage.bookinfo.com.key -subj \"/CN=productpage.bookinfo.com/O=product organization\"\nopenssl x509 -req -sha256 -days 365 -CA bookinfo_certs/bookinfo.com.crt -CAkey bookinfo_certs/bookinfo.com.key -set_serial 0 -in bookinfo_certs/productpage.bookinfo.com.csr -out bookinfo_certs/productpage.bookinfo.com.crt\n```\n\n----------------------------------------\n\nTITLE: Listing Helm Releases in AKS Namespace\nDESCRIPTION: This command lists all Helm releases deployed in the specified namespace, showing their status and version information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nhelm list --namespace ingress-basic\n```\n\n----------------------------------------\n\nTITLE: Retrieving OIDC Issuer URL for AKS Cluster\nDESCRIPTION: This command displays the OIDC issuer URL for an AKS cluster. The URL is needed when configuring trust relationships with external identity providers. The output is formatted as a tab-separated value.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-oidc-issuer.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --name myAKScluster --resource-group myResourceGroup --query \"oidcIssuerProfile.issuerUrl\" -o tsv\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Cluster Credentials with Azure CLI\nDESCRIPTION: This command uses the Azure CLI to obtain user credentials for accessing an AKS cluster. It requires specifying the resource group and cluster name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/access-control-managed-azure-ad.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myManagedCluster\n```\n\n----------------------------------------\n\nTITLE: Setting kubectl Context to Use Microsoft Entra Authentication\nDESCRIPTION: This Azure CLI command configures kubectl to use Microsoft Entra authentication for the AKS cluster. This context setting enables all subsequent kubectl commands to authenticate through Microsoft Entra ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name $aksname --overwrite-existing\n```\n\n----------------------------------------\n\nTITLE: Configuring Internal Load Balancer with Specific IP (Annotations)\nDESCRIPTION: YAML configuration showing how to specify a static IP address for the internal load balancer using service annotations, which is the recommended approach.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/internal-lb.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: internal-app\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-ipv4: 10.240.0.25\n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n  selector:\n    app: internal-app\n```\n\n----------------------------------------\n\nTITLE: Creating AKS cluster with KMS etcd encryption in Azure CLI\nDESCRIPTION: This command creates a new AKS cluster with KMS etcd encryption enabled, using a specified key vault and managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_10\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks create \\\n    --name myAKSCluster \\\n    --resource-group MyResourceGroup \\\n    --assign-identity $IDENTITY_RESOURCE_ID \\\n    --enable-azure-keyvault-kms \\\n    --azure-keyvault-kms-key-vault-network-access \"Public\" \\\n    --azure-keyvault-kms-key-id $KEY_ID \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Updating API Server Authorized IP Ranges (Azure CLI)\nDESCRIPTION: This snippet shows how to update an existing AKS cluster's API server authorized IP ranges using the az aks update command. It demonstrates adding a single IP range and multiple IP ranges.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges 73.140.245.0/24\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges 73.140.245.0/24,193.168.1.0/24,194.168.1.0/24\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Confidential Containers\nDESCRIPTION: Azure CLI command to create an AKS cluster with Confidential Containers enabled, specifying required parameters such as VM size and workload runtime.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group myResourceGroup --name myAKSCluster --kubernetes-version <1.25.0 and above> --os-sku AzureLinux --node-vm-size Standard_DC8as_cc_v5 --workload-runtime KataCcIsolation --node-count 1 --enable-oidc-issuer --enable-workload-identity --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Enabling Pod Security Admission for a Single Namespace in AKS\nDESCRIPTION: This command applies the 'restricted' security policy to a specific namespace using kubectl label. This enforces strict security standards for pods deployed to that namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-psa.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl label --overwrite ns NAMESPACE pod-security.kubernetes.io/enforce=restricted\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes PV and PVC Configurations\nDESCRIPTION: Bash commands to create the PersistentVolume and PersistentVolumeClaim resources in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pv-azuredisk.yaml\nkubectl apply -f pvc-azuredisk.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume Claim in Kubernetes\nDESCRIPTION: YAML configuration for creating a 100GB persistent volume claim with ReadWriteMany access mode using Azure Files storage class.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-azurefile\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: my-azurefile\n  resources:\n    requests:\n      storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Complete AKS Extended Zone Deployment ARM Template\nDESCRIPTION: Full ARM template for deploying an AKS cluster in an Azure Extended Zone. Includes cluster configuration, node pool settings, and authentication parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/extended-zones.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"metadata\": {\n    \"_generator\": {\n      \"name\": \"bicep\",\n      \"version\": \"0.9.1.41621\",\n      \"templateHash\": \"2637152180661081755\"\n    }\n  },\n  \"parameters\": {\n    \"clusterName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"myAKSCluster\",\n      \"metadata\": {\n        \"description\": \"The name of the Managed Cluster resource.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"The location of the Managed Cluster resource.\"\n      }\n    },\n    \"edgeZoneName\": {\n      \"type\": \"String\",\n      \"metadata\": {\n        \"description\": \"The name of the Azure Extended Zone\"\n      }\n    },\n    \"dnsPrefix\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Optional DNS prefix to use with hosted Kubernetes API server FQDN.\"\n      }\n    },\n    \"osDiskSizeGB\": {\n      \"type\": \"int\",\n      \"defaultValue\": 0,\n      \"maxValue\": 1023,\n      \"minValue\": 0,\n      \"metadata\": {\n        \"description\": \"Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize.\"\n      }\n    },\n    \"agentCount\": {\n      \"type\": \"int\",\n      \"defaultValue\": 3,\n      \"maxValue\": 50,\n      \"minValue\": 1,\n      \"metadata\": {\n        \"description\": \"The number of nodes for the cluster.\"\n      }\n    },\n    \"agentVMSize\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"standard_d2s_v3\",\n      \"metadata\": {\n        \"description\": \"The size of the Virtual Machine.\"\n      }\n    },\n    \"linuxAdminUsername\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"User name for the Linux Virtual Machines.\"\n      }\n    },\n    \"sshRSAPublicKey\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.ContainerService/managedClusters\",\n      \"apiVersion\": \"2022-05-02-preview\",\n      \"name\": \"[parameters('clusterName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"extendedLocation\": {\n        \"name\": \"[parameters('edgeZoneName')]\",\n        \"type\": \"EdgeZone\"\n      }\n      \"identity\": {\n        \"type\": \"SystemAssigned\"\n      },\n      \"properties\": {\n        \"dnsPrefix\": \"[parameters('dnsPrefix')]\",\n        \"agentPoolProfiles\": [\n          {\n            \"name\": \"agentpool\",\n            \"osDiskSizeGB\": \"[parameters('osDiskSizeGB')]\",\n            \"count\": \"[parameters('agentCount')]\",\n            \"vmSize\": \"[parameters('agentVMSize')]\",\n            \"osType\": \"Linux\",\n            \"mode\": \"System\"\n          }\n        ],\n        \"linuxProfile\": {\n          \"adminUsername\": \"[parameters('linuxAdminUsername')]\",\n          \"ssh\": {\n            \"publicKeys\": [\n              {\n                \"keyData\": \"[parameters('sshRSAPublicKey')]\"\n              }\n            ]\n          }\n        }\n      }\n    }\n  ],\n  \"outputs\": {\n    \"controlPlaneFQDN\": {\n      \"type\": \"string\",\n      \"value\": \"[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))).fqdn]\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling CSI Storage Drivers on Existing AKS Cluster\nDESCRIPTION: This Azure CLI command updates an existing AKS cluster to disable all CSI storage drivers (Disk, File, and Blob) and the snapshot controller. This can be useful when transitioning to other storage solutions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-storage-drivers.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --disable-disk-driver \\\n    --disable-file-driver \\\n    --disable-blob-driver \\\n    --disable-snapshot-controller \n```\n\n----------------------------------------\n\nTITLE: Creating a New AKS Cluster with Pod Sandboxing Support\nDESCRIPTION: Command to create a new AKS cluster with Pod Sandboxing enabled using the KataMshvVmIsolation workload runtime and AzureLinux OS SKU.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks create \n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --os-sku AzureLinux \\\n    --workload-runtime KataMshvVmIsolation \\\n    --node-vm-size Standard_D4s_v3 \\\n    --node-count 1 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Cluster with Microsoft Entra Integration\nDESCRIPTION: Creates the AKS cluster with Microsoft Entra integration using the configured server and client applications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\ntenantId=$(az account show --query tenantId -o tsv)\n\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name $aksname \\\n    --node-count 1 \\\n    --generate-ssh-keys \\\n    --aad-server-app-id $serverApplicationId \\\n    --aad-server-app-secret $serverApplicationSecret \\\n    --aad-client-app-id $clientApplicationId \\\n    --aad-tenant-id $tenantId\n```\n\n----------------------------------------\n\nTITLE: Defining KAITO Workspace for Custom LLM Deployment\nDESCRIPTION: This YAML configuration defines a KAITO workspace for deploying a custom language model. It specifies the instance type, container image, and model parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kaito-custom-inference-model.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kaito.sh/v1alpha1\nkind: Workspace\nmetadata:\n  name: workspace-custom-llm\nresource:\n  instanceType: \"Standard_NC24ads_A100_v4\"\n  labelSelector:\n    matchLabels:\n      apps: custom-llm\ninference:\n  template: \n    spec:\n      containers:\n      - name: custom-llm-container\n        image: ghcr.io/kaito-project/kaito/llm-reference-preset:latest\n        command: [\"accelerate\"]\n        args:\n          - \"launch\"\n          - \"--num_processes\"\n          - \"1\"\n          - \"--num_machines\"\n          - \"1\"\n          - \"--gpu_ids\"\n          - \"all\"\n          - \"tfs/inference_api.py\"\n          - \"--pipeline\"\n          - \"text-generation\"\n          - \"--trust_remote_code\"\n          - \"--allow_remote_files\"\n          - \"--pretrained_model_name_or_path\"\n          - \"bigscience/bloom-1b7\"\n          - \"--torch_dtype\"\n          - \"bfloat16\"\n        volumeMounts:\n        - name: dshm\n          mountPath: /dev/shm\n      volumes:\n      - name: dshm\n        emptyDir:\n          medium: Memory\n```\n\n----------------------------------------\n\nTITLE: Generating GitHub Action Workflow for AKS Deployment\nDESCRIPTION: These commands generate a GitHub Action workflow file for deploying your application to an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/draft.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks draft generate-workflow\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks draft generate-workflow --destination /Workspaces/ContosoAir\n```\n\n----------------------------------------\n\nTITLE: Adding Valkey Replicas to the Cluster in Zone 3\nDESCRIPTION: This set of commands adds three replica nodes in availability zone 3 to the existing Valkey cluster. Each replica is configured to replicate data from a specific master node using the valkey-cli tool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -ti -n valkey valkey-masters-0 -- valkey-cli --cluster add-node \\\n                        valkey-replicas-0.valkey-replicas.valkey.svc.cluster.local:6379 \\\n                        valkey-masters-0.valkey-masters.valkey.svc.cluster.local:6379  --cluster-slave \\\n                        --pass ${SECRET}\n\nkubectl exec -ti -n valkey valkey-masters-0 -- valkey-cli --cluster add-node \\\n                        valkey-replicas-1.valkey-replicas.valkey.svc.cluster.local:6379 \\\n                        valkey-masters-1.valkey-masters.valkey.svc.cluster.local:6379  --cluster-slave \\\n                        --pass ${SECRET}\n\nkubectl exec -ti -n valkey valkey-masters-0 -- valkey-cli --cluster add-node \\\n                        valkey-replicas-2.valkey-replicas.valkey.svc.cluster.local:6379 \\\n                        valkey-masters-2.valkey-masters.valkey.svc.cluster.local:6379  --cluster-slave \\\n                        --pass ${SECRET}\n```\n\n----------------------------------------\n\nTITLE: Checking Available Kubernetes Versions with Azure PowerShell\nDESCRIPTION: This PowerShell command retrieves the available Kubernetes versions for upgrading in the specified region using the Get-AzAksVersion cmdlet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzAksVersion -Location westus2 | Where-Object OrchestratorVersion\n```\n\n----------------------------------------\n\nTITLE: Monitoring Kubernetes Pod Status\nDESCRIPTION: Command to check the status of deployed pods in the Kubernetes cluster, confirming that the containers are running properly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_10\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Defining KAITO Inference Workspace in YAML\nDESCRIPTION: YAML configuration for a KAITO inference workspace, specifying the Phi-3-mini model, adapter image, and resource requirements.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-fine-tune.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kaito.sh/v1alpha1\nkind: Workspace\nmetadata:\n  name: workspace-phi-3-mini-adapter\nresource:\n  instanceType: \"Standard_NC6s_v3\"\n  labelSelector:\n    matchLabels:\n      apps: phi-3-adapter\ninference:\n  preset:\n    name: \"phi-3-mini-128k-instruct\"\n  adapters:\n    -source:\n       name: kubernetes-adapter\n       image: $ACR_NAME.azurecr.io/$REPOSITORY:$VERSION\n       imagePullSecrets:\n             - myregistrysecret\n     strength: \"1.0\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with No CNI Plugin Using Azure CLI\nDESCRIPTION: This Azure CLI command creates an AKS cluster with no CNI plugin preinstalled. It uses the 'az aks create' command with the '--network-plugin none' parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-byo-cni.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --location eastus \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --network-plugin none \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Files NFS Storage Class\nDESCRIPTION: YAML manifest for a standard NFS protocol StorageClass for Azure Files, configured with performance-oriented mount options including connection multiplexing and attribute caching settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: azurefile-csi-nfs\nprovisioner: file.csi.azure.com\nallowVolumeExpansion: true\nparameters:\n  protocol: nfs\nmountOptions:\n  - nconnect=4\n  - noresvport\n  - actimeo=30\n```\n\n----------------------------------------\n\nTITLE: Verifying Windows StatefulSet Creation in AKS\nDESCRIPTION: Command output showing the successful creation of the Windows-based StatefulSet with Azure File storage in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_23\n\nLANGUAGE: output\nCODE:\n```\nstatefulset.apps/busybox-azurefile created\n```\n\n----------------------------------------\n\nTITLE: Enabling Artifact Streaming on an existing AKS node pool\nDESCRIPTION: Command to update an existing node pool in an AKS cluster to enable Artifact Streaming, allowing the nodes to stream images from ACR.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name myNodePool \\\n    --enable-artifact-streaming\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume Claim YAML\nDESCRIPTION: YAML configuration for creating a persistent volume claim that binds to the previously created persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-azuredisk\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  volumeName: pv-azuredisk\n  storageClassName: managed-csi\n```\n\n----------------------------------------\n\nTITLE: Deploying Private AKS Automatic Cluster\nDESCRIPTION: Creates a private AKS Automatic cluster in the custom virtual network using the az aks create command, specifying the virtual network, subnets, and managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group $RG_NAME \\\n    --name $CLUSTER_NAME \\\n    --location $LOCATION \\\n    --vnet-subnet-id $(az network vnet subnet show --resource-group $RG_NAME --vnet-name $VNET_NAME --name $CLUSTER_SUBNET_NAME --query id -o tsv) \\\n    --api-server-subnet-id $(az network vnet subnet show --resource-group $RG_NAME --vnet-name $VNET_NAME --name $API_SERVER_SUBNET_NAME --query id -o tsv) \\\n    --assign-identity $IDENTITY_ID \\\n    --enable-managed-identity \\\n    --enable-private-cluster \\\n    --sku Automatic\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Cluster Deployment with Azure CLI and kubectl\nDESCRIPTION: This snippet shows the commands to verify the AKS cluster deployment using Azure CLI and kubectl. It includes steps to retrieve the resource group name, list the AKS clusters, configure kubectl, and check the cluster nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\nresource_group_name=$(terraform output -raw resource_group_name)\n\naz aks list \\\n  --resource-group $resource_group_name \\\n  --query \"[].{\\\"K8s cluster name\\\":name}\" \\\n  --output table\n\necho \"$(terraform output kube_config)\" > ./azurek8s\n\ncat ./azurek8s\n\nexport KUBECONFIG=./azurek8s\n\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with API Server VNet Integration (Managed VNet)\nDESCRIPTION: Create a resource group and deploy a public or private AKS cluster with API Server VNet Integration using managed VNet configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-vnet-integration.md#2025-04-21_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group create --location westus2 --name <resource-group>\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks create --name <cluster-name> \\\n    --resource-group <resource-group> \\\n    --location <location> \\\n    --network-plugin azure \\\n    --enable-apiserver-vnet-integration \\\n    --generate-ssh-keys\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks create --name <cluster-name> \\\n    --resource-group <resource-group> \\\n    --location <location> \\\n    --network-plugin azure \\\n    --enable-private-cluster \\\n    --enable-apiserver-vnet-integration \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Testing Ingress Configuration\nDESCRIPTION: Bash commands for testing the ingress configuration with TLS using curl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get service --namespace $NAMESPACE --selector app.kubernetes.io/name=ingress-nginx\ncurl -v -k --resolve demo.azure.com:443:EXTERNAL_IP https://demo.azure.com\ncurl -v -k --resolve demo.azure.com:443:EXTERNAL_IP https://demo.azure.com/hello-world-two\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with ACNS and Cilium\nDESCRIPTION: Creates a new AKS cluster with Advanced Container Networking Services enabled using Cilium data plane. Supports both Container Network Observability and Security features for Kubernetes version 1.29+.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/advanced-container-networking-services-overview.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set an environment variable for the AKS cluster name. Make sure to replace the placeholder with your own value.\nexport CLUSTER_NAME=\"<aks-cluster-name>\"\n\n# Create an AKS cluster\naz aks create \\\n    --name $CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP \\\n    --generate-ssh-keys \\\n    --location eastus \\\n    --max-pods 250 \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --network-dataplane cilium \\\n    --node-count 2 \\\n    --pod-cidr 192.168.0.0/16 \\\n    --kubernetes-version 1.29 \\\n    --enable-acns\n```\n\n----------------------------------------\n\nTITLE: Complete GitHub Actions Workflow for AKS Node Image Upgrades\nDESCRIPTION: This YAML workflow configuration automatically upgrades AKS cluster node images. It runs on a schedule (every 15 days at 3 AM) and can also be triggered manually. The workflow authenticates with Azure and executes the upgrade command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-upgrade-github-actions.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nname: Upgrade cluster node images\non:\n  schedule:\n    - cron: '0 3 */15 * *'\n  workflow_dispatch:\njobs:\n  upgrade-node:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Azure Login\n        uses: Azure/login@v1.4.6\n        with:\n          creds: ${{ secrets.AZURE_CREDENTIALS }}\n      - name: Upgrade node images\n        uses: Azure/cli@v1.0.8\n        with:\n          inlineScript: az aks upgrade -g {resourceGroupName} -n {aksClusterName} --node-image-only --yes\n      # Code for upgrading one or more node pools\n```\n\n----------------------------------------\n\nTITLE: Updating Node Pool Tags using Azure CLI\nDESCRIPTION: Command to update tags on an existing node pool, which will overwrite any previous tags with the new set of application version and cost center tags.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool update \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name tagnodepool \\\n    --tags appversion=0.0.2 costcenter=4444 \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating Microsoft Entra ID Group for Application Developers\nDESCRIPTION: This snippet creates a new group in Microsoft Entra ID for application developers using the az ad group create command and assigns the resulting group ID to a variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nAPPDEV_ID=$(az ad group create --display-name appdev --mail-nickname appdev --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Enabling AI Toolchain Operator on Existing AKS Cluster\nDESCRIPTION: Command to enable the AI toolchain operator add-on on an existing AKS cluster, along with the OIDC issuer which is required for identity federation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name $CLUSTER_NAME \\\n        --resource-group $AZURE_RESOURCE_GROUP \\\n        --enable-oidc-issuer \\\n        --enable-ai-toolchain-operator\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with Azure CNI Overlay using Cilium Dataplane\nDESCRIPTION: This command creates an AKS cluster with Azure CNI in overlay mode, using Cilium as the dataplane and supporting both IPv4 and IPv6. It specifies the cluster name, resource group, and location along with necessary network configuration parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nclusterName=\"myOverlayCluster\"\nresourceGroup=\"myResourceGroup\"\nlocation=\"westcentralus\"\n\naz aks create \\\n    --name $clusterName \\\n    --resource-group $resourceGroup \\\n    --location $location \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --network-dataplane cilium \\\n    --ip-families ipv4,ipv6 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with ACR Access using Azure CLI\nDESCRIPTION: Creates an AKS cluster named 'myAKSCluster' and grants it access to the specified ACR using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group myResourceGroup --name myAKSCluster --location eastus --attach-acr myhelmacr --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Artifacts with Draft Create for AKS\nDESCRIPTION: These commands use 'draft create' to generate Dockerfiles, Helm charts, Kubernetes manifests, or Kustomize files for AKS deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/draft.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks draft create\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks draft create --destination /Workspaces/ContosoAir\n```\n\n----------------------------------------\n\nTITLE: Installing Krew and CNPG Plugin for kubectl\nDESCRIPTION: Installs Krew, a kubectl plugin manager, and the CloudNativePG (CNPG) plugin. These tools enable the management of the PostgreSQL operator in the Kubernetes environment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n(\n  set -x; cd \"$(mktemp -d)\" &&\n  OS=\"$(uname | tr '[:upper:]' '[:lower:]')\" &&\n  ARCH=\"$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\\(arm\\)\\(64\\)\\?.*/\\1\\2/' -e 's/aarch64$/arm64/')\" &&\n  KREW=\"krew-${OS}_${ARCH}\" &&\n  curl -fsSLO \"https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz\" &&\n  tar zxvf \"${KREW}.tar.gz\" &&\n  ./\"${KREW}\" install krew\n)\n\nexport PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\"\n\nkubectl krew install cnpg\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster Resource Placement with Node Count Requirements in YAML\nDESCRIPTION: Example of a ClusterResourcePlacement configuration that selects only clusters with five or more nodes. The policy uses the kubernetes-fleet.io/node-count property with the Greater than or equal to (Ge) operator to enforce this requirement.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-resource-propagation.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp\nspec:\n  resourceSelectors:\n    - ...\n  policy:\n    placementType: PickAll\n    affinity:\n        clusterAffinity:\n            requiredDuringSchedulingIgnoredDuringExecution:\n                clusterSelectorTerms:\n                - propertySelector:\n                    matchExpressions:\n                    - name: \"kubernetes-fleet.io/node-count\"\n                      operator: Ge\n                      values:\n                      - \"5\"\n```\n\n----------------------------------------\n\nTITLE: Creating Microsoft Entra ID Federated Credential\nDESCRIPTION: Creates a federated credential that establishes trust between the managed identity and the Kubernetes service account, enabling workload identity authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity federated-credential create \\\n    --name ${FEDERATED_CREDENTIAL_NAME} \\\n    --resource-group ${RG_NAME} \\\n    --identity-name ${MANAGED_IDENTITY_NAME} \\\n    --issuer ${AKS_OIDC_ISSUER} \\\n    --subject system:serviceaccount:${SERVICE_ACCOUNT_NAMESPACE}:${SERVICE_ACCOUNT_NAME}\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure Hybrid Benefit (Azure PowerShell)\nDESCRIPTION: This snippet shows how to create a new AKS cluster with Azure Hybrid Benefit enabled using Azure PowerShell. It configures a cluster with Azure CNI networking and enables Azure Hybrid Benefit.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hybrid-benefit.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$password= ConvertTo-SecureString -AsPlainText \"\" -Force # replace with your own password value\n$rg_name = \"myResourceGroup\"\n$cluster = \"myAKSCluster\"\n\nNew-AzAksCluster -ResourceGroupName $rg_name -Name $cluster -WindowsProfileAdminUserName azureuser -WindowsProfileAdminUserPassword $cred -NetworkPlugin azure -NodeVmSetType VirtualMachineScaleSets --EnableAHUB\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume Claim in AKS\nDESCRIPTION: YAML manifest for creating a persistent volume claim that requests a 5GB Azure managed disk with ReadWriteOnce access using the managed-csi storage class.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: azure-managed-disk\nspec:\n  accessModes:\n  - ReadWriteOnce\n  storageClassName: managed-csi\n  resources:\n    requests:\n      storage: 5Gi\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure CNI Powered by Cilium Using Overlay Network\nDESCRIPTION: Creates an AKS cluster with Azure CNI in overlay mode using Cilium as the dataplane. This configuration assigns pod IP addresses from an overlay network with a specified CIDR range (192.168.0.0/16).\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-powered-by-cilium.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name <clusterName> \\\n    --resource-group <resourceGroupName> \\\n    --location <location> \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --pod-cidr 192.168.0.0/16 \\\n    --network-dataplane cilium \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Disabling Cluster Autoscaler on a Specific Node Pool\nDESCRIPTION: Disables the cluster autoscaler on a specific node pool named 'nodepool1' within an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool update \\\n  --resource-group myResourceGroup \\\n  --cluster-name myAKSCluster \\\n  --name nodepool1 \\\n  --disable-cluster-autoscaler\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure CNI Powered by Cilium Using Virtual Network IP Assignment\nDESCRIPTION: Creates an AKS cluster with Azure CNI using Cilium as the dataplane, assigning pod IPs from a dedicated subnet in a virtual network. This configuration supports higher pod density with 250 maximum pods per node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-powered-by-cilium.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name <clusterName> \\\n    --resource-group <resourceGroupName> \\\n    --location <location> \\\n    --max-pods 250 \\\n    --network-plugin azure \\\n    --vnet-subnet-id /subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/virtualNetworks/<vnetName>/subnets/nodesubnet \\\n    --pod-subnet-id /subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/virtualNetworks/<vnetName>/subnets/podsubnet \\\n    --network-dataplane cilium \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Manual Sidecar Injection with Istioctl\nDESCRIPTION: Command to manually inject the Istio sidecar into a Kubernetes resource definition before applying it, specifying the istio namespace and revision.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f <(istioctl kube-inject -f sample.yaml -i aks-istio-system -r asm-X-Y) -n foo\n```\n\n----------------------------------------\n\nTITLE: Deploying Flyte on AKS\nDESCRIPTION: Creates a namespace and installs Flyte using Helm, then verifies the deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-flyte.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace <namespace-name>\nhelm install flyte-binary flyteorg/flyte-core --namespace <namespace-name>\nkubectl get services --namespace <namespace-name> --output wide\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Ingress Resource for Traffic Distribution in AKS\nDESCRIPTION: This YAML manifest defines a Kubernetes Ingress resource that routes traffic for 'myapp.com' to two different backend services based on URL paths. It includes TLS configuration with a secret certificate and directs traffic to either 'blogservice' or 'storeservice' depending on whether the path contains '/blog' or '/store'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-network.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n name: myapp-ingress\nspec:\n ingressClassName: PublicIngress\n tls:\n - hosts:\n   - myapp.com\n   secretName: myapp-secret\n rules:\n   - host: myapp.com\n     http:\n      paths:\n      - path: /blog\n        backend:\n         service:\n           name: blogservice\n           port: 80\n      - path: /store\n        backend:\n         service:\n           name: storeservice\n           port: 80\n```\n\n----------------------------------------\n\nTITLE: Frontend Egress Network Policy Implementation\nDESCRIPTION: Kubernetes NetworkPolicy definition for controlling egress traffic from frontend pods to backend services, specifying pod selectors and allowed ports.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: frontend-egress\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      app: frontend\n  policyTypes:\n    - Egress\n  egress:\n    - to:\n        - podSelector:\n            matchLabels:\n              app: backend\n      ports:\n        - protocol: TCP\n          port: 8080\n```\n\n----------------------------------------\n\nTITLE: Checking Node Resource Capacity in Kubernetes\nDESCRIPTION: Command to view CPU and memory capacity of Kubernetes nodes using kubectl, showing both total capacity and allocatable resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe node <node-name>\n\n# Example output\nCapacity:\n cpu:                8\n ephemeral-storage:  129886128Ki\n hugepages-1Gi:      0\n hugepages-2Mi:      0\n memory:             32863116Ki\n pods:               110\nAllocatable:\n cpu:                7820m\n ephemeral-storage:  119703055367\n hugepages-1Gi:      0\n hugepages-2Mi:      0\n memory:             28362636Ki\n pods:               110\n```\n\n----------------------------------------\n\nTITLE: Creating an Internal NGINX Ingress Controller with YAML\nDESCRIPTION: YAML manifest for creating an internal NGINX ingress controller with a private IP address using Azure Load Balancer annotations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_7\n\nLANGUAGE: yml\nCODE:\n```\napiVersion: approuting.kubernetes.azure.com/v1alpha1\nkind: NginxIngressController\nmetadata:\n  name: nginx-internal\nspec:\n  ingressClassName: nginx-internal\n  controllerNamePrefix: nginx-internal\n  loadBalancerAnnotations: \n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Resizing a persistent volume claim\nDESCRIPTION: Command to increase the size of an existing PVC from 10Gi to 15Gi using the kubectl patch command. This operation doesn't require downtime.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch pvc pvc-azuredisk --type merge --patch '{\"spec\": {\"resources\": {\"requests\": {\"storage\": \"15Gi\"}}}}'\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Managed Identity for AKS\nDESCRIPTION: Creates a managed identity for use with AKS pods and sets up necessary environment variables. This identity will be used by demo pods to access Azure resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myIdentityResourceGroup --location eastus\nexport IDENTITY_RESOURCE_GROUP=\"myIdentityResourceGroup\"\nexport IDENTITY_NAME=\"application-identity\"\naz identity create --resource-group ${IDENTITY_RESOURCE_GROUP} --name ${IDENTITY_NAME}\nexport IDENTITY_CLIENT_ID=\"$(az identity show --resource-group ${IDENTITY_RESOURCE_GROUP} --name ${IDENTITY_NAME} --query clientId -o tsv)\"\nexport IDENTITY_RESOURCE_ID=\"$(az identity show --resource-group ${IDENTITY_RESOURCE_GROUP} --name ${IDENTITY_NAME} --query id -o tsv)\"\n```\n\n----------------------------------------\n\nTITLE: Adding Node Pool with Labels using Azure CLI\nDESCRIPTION: Creates a new node pool named 'labelnp' with custom labels for department and cost center. The command runs asynchronously with the no-wait flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-labels.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name labelnp \\\n    --node-count 1 \\\n    --labels dept=HR costcenter=5000 \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Deleting Node Pool in AKS Cluster using Azure CLI\nDESCRIPTION: This Azure CLI command removes an existing node pool from the AKS cluster. It requires specifying the resource group, cluster name, and node pool name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz aks nodepool delete \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name nodepool1\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod Disruption Budget in Kubernetes\nDESCRIPTION: YAML configuration for setting up Pod Disruption Budget (PDB) to ensure minimum pod availability during voluntary disruptions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n   name: mypdb\nspec:\n   minAvailable: 3\n   selector:\n    matchLabels:\n      app: myapp\n```\n\n----------------------------------------\n\nTITLE: Defining Premium SSD v2 Storage Class in Kubernetes\nDESCRIPTION: YAML manifest that defines a storage class using Azure Premium SSD v2 disks with specific performance parameters. This configuration provides consistent submillisecond disk latency and high IOPS for AKS workloads.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n   name: premium2-disk-sc\nparameters:\n   cachingMode: None\n   skuName: PremiumV2_LRS\n   DiskIOPSReadWrite: \"4000\"\n   DiskMBpsReadWrite: \"1000\"\nprovisioner: disk.csi.azure.com\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\nallowVolumeExpansion: true\n```\n\n----------------------------------------\n\nTITLE: ARM Template for Dual-Stack AKS Cluster Deployment\nDESCRIPTION: Azure Resource Manager template that defines a dual-stack AKS cluster with both IPv4 and IPv6 networking capabilities using apiVersion 2021-10-01.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"clusterName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"aksdualstack\"\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\"\n    },\n    \"kubernetesVersion\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"1.22.2\"\n    },\n    \"nodeCount\": {\n      \"type\": \"int\",\n      \"defaultValue\": 3\n    },\n    \"nodeSize\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Standard_B2ms\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.ContainerService/managedClusters\",\n      \"apiVersion\": \"2021-10-01\",\n      \"name\": \"[parameters('clusterName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"identity\": {\n        \"type\": \"SystemAssigned\"\n      },\n      \"properties\": {\n        \"agentPoolProfiles\": [\n          {\n            \"name\": \"nodepool1\",\n            \"count\": \"[parameters('nodeCount')]\",\n            \"mode\": \"System\",\n            \"vmSize\": \"[parameters('nodeSize')]\"\n          }\n        ],\n        \"dnsPrefix\": \"[parameters('clusterName')]\",\n        \"kubernetesVersion\": \"[parameters('kubernetesVersion')]\",\n        \"networkProfile\": {\n          \"ipFamilies\": [\n            \"IPv4\",\n            \"IPv6\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Upgrading All Node Images in AKS Cluster\nDESCRIPTION: Upgrade all node images across all node pools in the cluster and verify the upgrade status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-image-upgrade.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks upgrade \\\n    --resource-group <resource-group> \\\n    --name <cluster-name> \\\n    --node-image-only\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes -o jsonpath='{range .items[*]}{.metadata.name}{\"\\t\"}{.metadata.labels.kubernetes\\.azure\\.com\\/node-image-version}{\"\\n\"}{end}'\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Deployment YAML for Nginx using ACR Image\nDESCRIPTION: Sample YAML manifest for deploying an Nginx application from a private Azure Container Registry to an AKS cluster. The deployment creates two replicas of the container.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx0-deployment\n  labels:\n    app: nginx0-deployment\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: nginx0\n  template:\n    metadata:\n      labels:\n        app: nginx0\n    spec:\n      containers:\n      - name: nginx\n        image: <acr-name>.azurecr.io/nginx:v1\n        ports:\n        - containerPort: 80\n```\n\n----------------------------------------\n\nTITLE: Configuring AzureAppConfigurationProvider in YAML for AKS\nDESCRIPTION: This YAML snippet configures the AzureAppConfigurationProvider resource in AKS. It specifies how to consume configuration data from Azure App Configuration, including options for mounted files or environment variables, and allows setting key and label filters for data selection.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration-quickstart.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# YAML configuration for AzureAppConfigurationProvider\n# Note: This is a template. Actual values are filled in the Azure portal.\napiVersion: azconfig.microsoft.com/v1beta1\nkind: AzureAppConfigurationProvider\nmetadata:\n  name: appconfig-provider\nspec:\n  # Configuration for consuming data\n  target:\n    # Choose between mountedFile or environmentVariables\n    mountedFile:\n      fileType: properties\n      fileName: config.properties\n  # Selector for loading data from App Configuration store\n  selector:\n    keyFilter: your-key-filter\n    labelFilter: your-label-filter\n```\n\n----------------------------------------\n\nTITLE: Configuring URL Rewriting for NGINX Ingress in AKS\nDESCRIPTION: This YAML configuration shows how to set up URL rewriting for NGINX Ingress in AKS using the 'nginx.ingress.kubernetes.io/rewrite-target' and 'nginx.ingress.kubernetes.io/use-regex' annotations. It demonstrates path-based routing for two different web applications under the same domain.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: aks-helloworld\n  namespace: hello-web-app-routing\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /$2\n    nginx.ingress.kubernetes.io/use-regex: \"true\"\nspec:\n  ingressClassName: <IngressClassName>\n  rules:\n  - host: <Hostname>\n    http:\n      paths:\n      - path: /app-one(/|$)(.*)\n        pathType: Prefix \n        backend:\n          service:\n            name: app-one\n            port:\n              number: 80\n      - path: /app-two(/|$)(.*)\n        pathType: Prefix \n        backend:\n          service:\n            name: app-two\n            port:\n              number: 80\n```\n\n----------------------------------------\n\nTITLE: Attaching ACR to Existing AKS Cluster\nDESCRIPTION: Integrates an existing ACR with an existing AKS cluster using either Azure CLI or PowerShell commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup --attach-acr <acr-name>\n```\n\nLANGUAGE: powershell\nCODE:\n```\nSet-AzAksCluster -Name myAKSCluster -ResourceGroupName myResourceGroup -AcrNameToAttach <acr-name>\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterRole for Pod Security Policy in Kubernetes\nDESCRIPTION: This YAML manifest defines a ClusterRole that allows the use of the 'psp-deny-privileged' pod security policy. It specifies the necessary API groups, resources, and verbs for policy enforcement.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: psp-deny-privileged-clusterrole\nrules:\n- apiGroups:\n  - extensions\n   resources:\n  - podsecuritypolicies\n   resourceNames:\n  - psp-deny-privileged\n   verbs:\n  - use\n```\n\n----------------------------------------\n\nTITLE: Verifying PostgreSQL Replica Status and Data Consistency\nDESCRIPTION: SQL commands to verify that the connection is to a read-only replica by checking recovery mode, then confirming data consistency by counting records in the sample table.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\n#postgres=#\nSELECT pg_is_in_recovery();\n```\n\nLANGUAGE: sql\nCODE:\n```\n#postgres=#\nSELECT COUNT(*) FROM datasample;\n```\n\n----------------------------------------\n\nTITLE: Adding CVM Node Pool to AKS Cluster\nDESCRIPTION: Creates a new node pool with Confidential Virtual Machines using the az aks nodepool add command. Configures a pool with 3 nodes using the Standard_DC4as_v5 VM size.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-cvm.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name cvmnodepool \\\n    --node-count 3 \\\n    --node-vm-size Standard_DC4as_v5\n```\n\n----------------------------------------\n\nTITLE: Creating Microsoft Entra Server Application\nDESCRIPTION: Creates the server application component and updates group membership claims using Azure CLI. This component handles identity requests and group membership verification.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create the Azure AD application\nserverApplicationId=$(az ad app create \\\n    --display-name \"${aksname}Server\" \\\n    --identifier-uris \"https://${aksname}Server\" \\\n    --query appId -o tsv)\n\n# Update the application group membership claims\naz ad app update --id $serverApplicationId --set groupMembershipClaims=All\n```\n\n----------------------------------------\n\nTITLE: Creating Control Plane and Kubelet Identities in Azure CLI\nDESCRIPTION: This snippet creates managed identities for the AKS control plane and kubelet. It then retrieves the resource IDs and principal IDs for these identities, which are used in subsequent steps.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create --name ${CLUSTER_IDENTITY_NAME} --resource-group ${RESOURCE_GROUP}\n\nCLUSTER_IDENTITY_RESOURCE_ID=$(az identity show --name ${CLUSTER_IDENTITY_NAME} --resource-group ${RESOURCE_GROUP} --query 'id' -o tsv)\n\nCLUSTER_IDENTITY_PRINCIPAL_ID=$(az identity show --name ${CLUSTER_IDENTITY_NAME} --resource-group ${RESOURCE_GROUP} --query 'principalId' -o tsv)\n\naz identity create --name ${KUBELET_IDENTITY_NAME} --resource-group ${RESOURCE_GROUP}\n\nKUBELET_IDENTITY_RESOURCE_ID=$(az identity show --name ${KUBELET_IDENTITY_NAME} --resource-group ${RESOURCE_GROUP} --query 'id' -o tsv)\n\nKUBELET_IDENTITY_PRINCIPAL_ID=$(az identity show --name ${KUBELET_IDENTITY_NAME} --resource-group ${RESOURCE_GROUP} --query 'principalId' -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Assigning Permissions for Private Link Creation\nDESCRIPTION: This command assigns the 'Key Vault Contributor' role to the managed identity, allowing it to create a private link between the private key vault and the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_22\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create --role \"Key Vault Contributor\" --assignee-object-id $IDENTITY_OBJECT_ID --assignee-principal-type \"ServicePrincipal\" --scope $KEYVAULT_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Assigning Network Contributor Role to AKS System-Assigned Managed Identity\nDESCRIPTION: This command assigns the Network Contributor role to a system-assigned managed identity for an AKS cluster. This role assignment is necessary when using custom VNet, attached Azure disks, static IP addresses, or route tables outside the default worker node resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz role assignment create \\\n    --assignee $CLIENT_ID \\\n    --role \"Network Contributor\" \\\n    --scope \"<resource-group-id>\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Storage Class for Premium SSD v2 Disks in Kubernetes\nDESCRIPTION: This YAML manifest creates a Kubernetes StorageClass named 'premium2-disk-sc' configured to use Azure Premium SSD v2 disks with specific performance settings. It defines IOPS and throughput parameters and enables volume expansion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-premium-v2-disks.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n   name: premium2-disk-sc\nparameters:\n   cachingMode: None\n   skuName: PremiumV2_LRS\n   DiskIOPSReadWrite: \"4000\"\n   DiskMBpsReadWrite: \"1000\"\nprovisioner: disk.csi.azure.com\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\nallowVolumeExpansion: true\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network Peering for AKS Private Cluster using Azure CLI\nDESCRIPTION: These Azure CLI commands create peerings between the virtual networks of a VM and an AKS node resource group. They use the az network vnet peering create command to establish bidirectional peering connections.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet peering create \\\n    --name <new-peering-name-1> \\\n    --resource-group <vm-virtual-network-resource-group-name> \\\n    --vnet-name <vm-virtual-network-name> \\\n    --remote-vnet <node-resource-group-virtual-network-resource-id> \\\n    --allow-vnet-access\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet peering create \\\n    --name <new-peering-name-2> \\\n    --resource-group <node-resource-group-name> \\\n    --vnet-name <node-resource-group-virtual-network-name> \\\n    --remote-vnet <vm-virtual-network-resource-id> \\\n    --allow-vnet-access\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with System-Assigned Managed Identity\nDESCRIPTION: Command to create a new AKS cluster with a system-assigned managed identity enabled by default. The command generates SSH keys for the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume Claim for Blob Storage using NFS in YAML\nDESCRIPTION: This YAML snippet defines a PersistentVolumeClaim for Azure Blob Storage using the NFS protocol. It specifies the access mode, storage request, and references the previously created PersistentVolume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: pvc-blob\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\n  volumeName: pv-blob\n  storageClassName: azureblob-nfs-premium\n```\n\n----------------------------------------\n\nTITLE: Configuring Vertical Pod Autoscaler in Kubernetes\nDESCRIPTION: YAML configuration for setting up Vertical Pod Autoscaler (VPA) to automatically adjust CPU and memory requests based on actual usage patterns.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: autoscaling.k8s.io/v1\nkind: VerticalPodAutoscaler\nmetadata:\n  name: my-vpa\nspec:\n  targetRef:\n    apiVersion: \"apps/v1\"\n    kind: Deployment\n    name: my-deployment\n  updatePolicy:\n    updateMode: \"Auto\"\n```\n\n----------------------------------------\n\nTITLE: Upgrading to Azure CNI Powered by Cilium\nDESCRIPTION: Command to upgrade an existing cluster to Azure CNI Powered by Cilium. Requires Azure CLI version 2.52.0 or later and cluster must not have Windows node pools or use Azure CNI Node Subnet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-azure-cni.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name <clusterName> --resource-group <resourceGroupName> \\\n  --network-dataplane cilium\n```\n\n----------------------------------------\n\nTITLE: External Gateway and VirtualService Configuration\nDESCRIPTION: Kubernetes manifest to configure Gateway and VirtualService resources for external access to the sample application through Istio ingress.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-ingress.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: Gateway\nmetadata:\n  name: bookinfo-gateway-external\nspec:\n  selector:\n    istio: aks-istio-ingressgateway-external\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n---\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: bookinfo-vs-external\nspec:\n  hosts:\n  - \"*\"\n  gateways:\n  - bookinfo-gateway-external\n  http:\n  - match:\n    - uri:\n        exact: /productpage\n    - uri:\n        prefix: /static\n    - uri:\n        exact: /login\n    - uri:\n        exact: /logout\n    - uri:\n        prefix: /api/v1/products\n    route:\n    - destination:\n        host: productpage\n        port:\n          number: 9080\n```\n\n----------------------------------------\n\nTITLE: Creating Federated Identity Credential\nDESCRIPTION: Creates a federated identity credential linking the managed identity with the service account.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-deploy-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport FEDERATED_IDENTITY_CREDENTIAL_NAME=\"myFedIdentity$RANDOM_ID\"\naz identity federated-credential create \\\n    --name ${FEDERATED_IDENTITY_CREDENTIAL_NAME} \\\n    --identity-name \"${USER_ASSIGNED_IDENTITY_NAME}\" \\\n    --resource-group \"${RESOURCE_GROUP}\" \\\n    --issuer \"${AKS_OIDC_ISSUER}\" \\\n    --subject system:serviceaccount:\"${SERVICE_ACCOUNT_NAMESPACE}\":\"${SERVICE_ACCOUNT_NAME}\" \\\n    --audience api://AzureADTokenExchange\n```\n\n----------------------------------------\n\nTITLE: Testing Falcon 7B-instruct Inference Service on AKS\nDESCRIPTION: This command tests the Falcon 7B-instruct inference service with a sample input using the OpenAI chat completions API format. It sends a POST request to the service endpoint with a JSON payload containing the model name, prompt, and max tokens.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl run -it --rm --restart=Never curl --image=curlimages/curl -- curl -X POST http://$SERVICE_IP/v1/completions -H \"Content-Type: application/json\" \\\n  -d '{\n        \"model\": \"falcon-7b-instruct\",\n        \"prompt\": \"What is Kubernetes?\",\n        \"max_tokens\": 10\n       }'\n```\n\n----------------------------------------\n\nTITLE: Creating a Virtual Network with Azure CLI\nDESCRIPTION: Command to create a virtual network with a subnet for the AKS cluster. This creates 'myVnet' with an address prefix of 10.0.0.0/8 and 'myAKSSubnet' with a prefix of 10.240.0.0/16.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet create \\\n    --resource-group myResourceGroup \\\n    --name myVnet \\\n    --address-prefixes 10.0.0.0/8 \\\n    --subnet-name myAKSSubnet \\\n    --subnet-prefix 10.240.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Listing Node Pools in AKS Cluster\nDESCRIPTION: Use the az aks nodepool list command to list the status of all node pools in an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks nodepool list --resource-group myResourceGroup --cluster-name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Changing Node Pool Mode from User to System with Azure CLI\nDESCRIPTION: This Azure CLI command changes an existing node pool's mode from User to System, allowing it to host critical system pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_10\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks nodepool update --resource-group myResourceGroup --cluster-name myAKSCluster --name mynodepool --mode system\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network with Multiple Subnets for AKS\nDESCRIPTION: Creates a virtual network with dedicated subnets for the AKS cluster and Azure Firewall using Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name $RG --location $LOC\n\naz network vnet create \\\n    --resource-group $RG \\\n    --name $VNET_NAME \\\n    --location $LOC \\\n    --address-prefixes 10.42.0.0/16 \\\n    --subnet-name $AKSSUBNET_NAME \\\n    --subnet-prefix 10.42.1.0/24\n\naz network vnet subnet create \\\n    --resource-group $RG \\\n    --vnet-name $VNET_NAME \\\n    --name $FWSUBNET_NAME \\\n    --address-prefix 10.42.2.0/24\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with User-Assigned Identities\nDESCRIPTION: Creates an AKS cluster with existing user-assigned managed identities using Azure CLI. Configures network plugin, outbound routing, and API server access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks create \\\n    --resource-group $RG \\\n    --name $AKSNAME \\\n    --location $LOC \\\n    --node-count 3 \\\n    --network-plugin kubenet \\\n    --outbound-type userDefinedRouting \\\n    --vnet-subnet-id $SUBNETID \\\n    --api-server-authorized-ip-ranges $FWPUBLIC_IP\n    --assign-identity <identity-resource-id> \\\n    --assign-kubelet-identity <kubelet-identity-resource-id> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Defining Stages and Groups for Update Runs in JSON\nDESCRIPTION: A JSON template that defines multi-stage update orchestration for Azure Kubernetes Fleet Manager. This structure organizes cluster groups into sequential stages with configurable wait times between stages.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"stages\": [\n        {\n            \"name\": \"stage1\",\n            \"groups\": [\n                {\n                    \"name\": \"group-1a\"\n                },\n                {\n                    \"name\": \"group-1b\"\n                },\n                {\n                    \"name\": \"group-1c\"\n                }\n            ],\n            \"afterStageWaitInSeconds\": 3600\n        },\n        {\n            \"name\": \"stage2\",\n            \"groups\": [\n                {\n                    \"name\": \"group-2a\"\n                },\n                {\n                    \"name\": \"group-2b\"\n                },\n                {\n                    \"name\": \"group-2c\"\n                }\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing NGINX Ingress Controller with Helm in AKS\nDESCRIPTION: This script creates a namespace for ingress resources and deploys the NGINX ingress controller using Helm with custom configuration for Azure Container Registry integration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nACR_URL=<REGISTRY_URL>\n\n# Create a namespace for your ingress resources\nkubectl create namespace ingress-basic\n\n# Use Helm to deploy an NGINX ingress controller\nhelm install ingress-nginx ingress-nginx/ingress-nginx \\\n    --version 4.0.13 \\\n    --namespace ingress-basic \\\n    --set controller.replicaCount=2 \\\n    --set controller.nodeSelector.\"kubernetes\\.io/os\"=linux \\\n    --set controller.image.registry=$ACR_URL \\\n    --set controller.image.image=$CONTROLLER_IMAGE \\\n    --set controller.image.tag=$CONTROLLER_TAG \\\n    --set controller.image.digest=\"\" \\\n    --set controller.admissionWebhooks.patch.nodeSelector.\"kubernetes\\.io/os\"=linux \\\n    --set controller.service.annotations.\"service\\.beta\\.kubernetes\\.io/azure-load-balancer-health-probe-request-path\"=/healthz \\\n    --set controller.admissionWebhooks.patch.image.registry=$ACR_URL \\\n    --set controller.admissionWebhooks.patch.image.image=$PATCH_IMAGE \\\n    --set controller.admissionWebhooks.patch.image.tag=$PATCH_TAG \\\n    --set defaultBackend.nodeSelector.\"kubernetes\\.io/os\"=linux \\\n    --set defaultBackend.image.registry=$ACR_URL \\\n    --set defaultBackend.image.image=$DEFAULTBACKEND_IMAGE \\\n    --set defaultBackend.image.tag=$DEFAULTBACKEND_TAG \\\n    --set defaultBackend.image.digest=\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating Private Link Based Network Isolated AKS Cluster\nDESCRIPTION: Azure CLI command to create a new private link-based network isolated AKS cluster with specified network configuration and bootstrap settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME}   --kubernetes-version 1.30.3 --bootstrap-artifact-source Cache --outbound-type none  --network-plugin azure --enable-private-cluster\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Key Vault using DefaultAzureCredential in Go\nDESCRIPTION: This Go code snippet demonstrates how to use DefaultAzureCredential from azidentity to authenticate with Azure Key Vault and retrieve a secret. It uses environment variables for the Key Vault URL and secret name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-overview.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"os\"\n\n\t\"github.com/Azure/azure-sdk-for-go/sdk/azidentity\"\n\t\"github.com/Azure/azure-sdk-for-go/sdk/security/keyvault/azsecrets\"\n    \"k8s.io/klog/v2\"\n)\n\nfunc main() {\n\tkeyVaultUrl := os.Getenv(\"KEYVAULT_URL\")\n\tsecretName := os.Getenv(\"SECRET_NAME\")\n\n\tcredential, err := azidentity.NewDefaultAzureCredential(nil)\n\tif err != nil {\n\t\tklog.Fatal(err)\n\t}\n\n\tclient, err := azsecrets.NewClient(keyVaultUrl, credential, nil)\n\tif err != nil {\n\t\tklog.Fatal(err)\n\t}\n\n\tsecret, err := client.GetSecret(context.Background(), secretName, \"\", nil)\n\tif err != nil {\n\t\tklog.ErrorS(err, \"failed to get secret\", \"keyvault\", keyVaultUrl, \"secretName\", secretName)\n\t\tos.Exit(1)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating PostgreSQL User Secret in Kubernetes\nDESCRIPTION: Generates a random password and creates a Kubernetes secret for PostgreSQL app user authentication. The secret contains username 'app' and a randomly generated base64 password.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-postgresql-ha.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nPG_DATABASE_APPUSER_SECRET=$(echo -n | openssl rand -base64 16)\n\nkubectl create secret generic db-user-pass \\\n    --from-literal=username=app \\\n    --from-literal=password=\"${PG_DATABASE_APPUSER_SECRET}\" \\\n    --namespace $PG_NAMESPACE \\\n    --context $AKS_PRIMARY_CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Accessing Secrets Store CSI Driver Metrics\nDESCRIPTION: Uses kubectl port-forward to access metrics for the Secrets Store CSI Driver over localhost.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_7\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl port-forward -n kube-system ds/aks-secrets-store-csi-driver 8095:8095 &\ncurl localhost:8095/metrics\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Files Persistent Volume\nDESCRIPTION: YAML configuration for creating a persistent volume that uses Azure Files CSI driver with specific mount options and security settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  annotations:\n    pv.kubernetes.io/provisioned-by: file.csi.azure.com\n  name: azurefile\nspec:\n  capacity:\n    storage: 5Gi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: azurefile-csi\n  csi:\n    driver: file.csi.azure.com\n    volumeHandle: \"{resource-group-name}#{account-name}#{file-share-name}\"  # make sure this volumeid is unique for every identical share in the cluster\n    volumeAttributes:\n      shareName: aksshare\n    nodeStageSecretRef:\n      name: azure-secret\n      namespace: default\n  mountOptions:\n    - dir_mode=0777\n    - file_mode=0777\n    - uid=0\n    - gid=0\n    - mfsymlinks\n    - cache=strict\n    - nosharesock\n    - nobrl\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with System-Assigned Identity and Custom Networking in Azure CLI\nDESCRIPTION: This command creates an AKS cluster using a system-assigned managed identity, CNI network plugin, and user-defined routing. It also specifies the subnet and authorized IP ranges for the API server.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group $RG --name $AKSNAME --location $LOC \\\n    --node-count 3 \\\n    --network-plugin azure \\\n    --outbound-type userDefinedRouting \\\n    --vnet-subnet-id $SUBNETID \\\n    --api-server-authorized-ip-ranges $FWPUBLIC_IP \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Defining AKS Automatic Cluster with Bicep\nDESCRIPTION: This Bicep template defines the AKS Automatic cluster. It includes parameters for the cluster name, API server subnet ID, cluster subnet ID, and user assigned identity principal ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_12\n\nLANGUAGE: bicep\nCODE:\n```\nparam clusterName string = 'aksAutomaticCluster'\nparam apiServerSubnetId string\nparam clusterSubnetId string\nparam uamiPrincipalId string\n\nresource aks 'Microsoft.ContainerService/managedClusters@2023-07-02-preview' = {\n  name: clusterName\n  location: resourceGroup().location\n  identity: {\n    type: 'UserAssigned'\n    userAssignedIdentities: {\n      '${resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'aksAutomaticUAMI')}': {}\n    }\n  }\n  properties: {\n    dnsPrefix: clusterName\n    kubernetesVersion: '1.28.5'\n    enableRBAC: true\n    aadProfile: {\n      managed: true\n      enableAzureRBAC: true\n    }\n    apiServerAccessProfile: {\n      enablePrivateCluster: true\n      privateDNSZone: 'system'\n      subnetId: apiServerSubnetId\n    }\n    networkProfile: {\n      networkPlugin: 'azure'\n      networkPolicy: 'azure'\n      outboundType: 'loadBalancer'\n      serviceCidr: '172.20.0.0/16'\n      dnsServiceIP: '172.20.0.10'\n    }\n    agentPoolProfiles: [\n      {\n        name: 'nodepool1'\n        count: 3\n        vmSize: 'Standard_DS2_v2'\n        mode: 'System'\n        vnetSubnetID: clusterSubnetId\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Multi-Zone Distribution\nDESCRIPTION: Azure CLI command to create an AKS cluster with three nodes distributed across three availability zones. Uses VirtualMachineScaleSets and standard load balancer.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/aks-zone-resiliency.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --generate-ssh-keys --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --node-count 3 --zones 1 2 3\n```\n\n----------------------------------------\n\nTITLE: Monitoring AKS Operation Progress using Azure CLI\nDESCRIPTION: This snippet demonstrates how to use the Azure CLI to check the progress of the latest operation on an AKS cluster. It utilizes the az rest command to query the Azure Resource Manager API.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-abort-operations.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nexport ResourceID=\"<cluster-resource-id>\"\naz rest --method get --url \"https://management.azure.com$ResourceID/operations/latest?api-version=2024-01-02-preview\"\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Sample Application to ACR\nDESCRIPTION: Builds the sample application image and pushes it to the Azure Container Registry using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr build --image azure-vote-front:v1 --registry myhelmacr --file Dockerfile .\n```\n\n----------------------------------------\n\nTITLE: Adding Kafka Node Pools to AKS Cluster\nDESCRIPTION: Creates additional node pools for Kafka workloads in each availability zone using a for loop. Each node pool is configured with specific VM sizes, labels, and autoscaling settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nfor zone in 1 2 3; do\n  az aks nodepool add \\\n  --cluster-name $AKS_CLUSTER_NAME \\\n  --enable-cluster-autoscaler \\\n  --labels app=kafka acstor.azure.com/io-engine=acstor \\\n  --max-count $KAFKA_NODE_COUNT_MAX \\\n  --max-surge 10% \\\n  --min-count $KAFKA_NODE_COUNT_MIN \\\n  --node-count $KAFKA_NODE_COUNT \\\n  --mode User \\\n  --name \"kafka$zone\" \\\n  --node-osdisk-type Ephemeral \\\n  --node-vm-size $KAFKA_NODE_VM_SIZE \\\n  --os-sku AzureLinux \\\n  --resource-group $RESOURCE_GROUP_NAME \\\n  --vnet-subnet-id $(az network vnet subnet show --resource-group $RESOURCE_GROUP_NAME --vnet-name $VNET_NAME --name $SUBNET_NAME --query id -o tsv) \\\n  --zones $zone\ndone\n```\n\n----------------------------------------\n\nTITLE: Configuring Rolling Update Strategy for Cluster Resource Placement in YAML\nDESCRIPTION: Example of a ClusterResourcePlacement configuration with a rolling update strategy. This strategy controls how updates are rolled out across clusters by specifying maximum unavailable and surge percentages, as well as the minimum period between cluster updates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-resource-propagation.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp\nspec:\n  resourceSelectors:\n    - ...\n  policy:\n    ...\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 25%\n      maxSurge: 25%\n      unavailablePeriodSeconds: 60\n```\n\n----------------------------------------\n\nTITLE: Developer RoleBinding YAML\nDESCRIPTION: YAML manifest for binding the developer role to the appdev group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: dev-user-access\n  namespace: dev\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: dev-user-full-access\nsubjects:\n- kind: Group\n  namespace: dev\n  name: groupObjectId\n```\n\n----------------------------------------\n\nTITLE: Adding FIPS-enabled Arm64 Node Pool in AKS\nDESCRIPTION: Creates a FIPS-enabled node pool with Arm64 VMs running Azure Linux 3.0+. Requires Kubernetes version 1.31+ and specifies AzureLinux as the OS SKU.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-arm64-vms.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n   --resource-group $RESOURCE_GROUP_NAME \\\n   --cluster-name $CLUSTER_NAME \\\n   --name $ARM_NODE_POOL_NAME \\\n   --os-sku AzureLinux\n   --enable-fips-image\n   --kubernetes-version 1.31\n   --node-count 3 \\\n   --node-vm-size Standard_D2pds_v5\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Identity in Azure\nDESCRIPTION: Creates a managed identity using Azure CLI. Returns identity details including clientId, principalId, and other configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz identity create --name myIdentity --resource-group $RG\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"clientId\": \"<client-id>\",\n  \"clientSecretUrl\": \"<clientSecretUrl>\",\n  \"id\": \"/subscriptions/<subscriptionid>/resourcegroups/aks-egress-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity\",\n  \"location\": \"eastus\",\n  \"name\": \"myIdentity\",\n  \"principalId\": \"<principal-id>\",\n  \"resourceGroup\": \"aks-egress-rg\",\n  \"tags\": {},\n  \"tenantId\": \"<tenant-id>\",\n  \"type\": \"Microsoft.ManagedIdentity/userAssignedIdentities\"\n}\n```\n\n----------------------------------------\n\nTITLE: Validating AKS Cluster Deployment with kubectl\nDESCRIPTION: Commands to install kubectl, configure credentials, and verify cluster connectivity by checking node status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks install-cli\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Installing aks-preview Azure CLI extension\nDESCRIPTION: Commands to add and update the aks-preview Azure CLI extension, which is required for using pod-managed identities in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Executing AKS Volume Migration Script\nDESCRIPTION: Bash command to execute the MigrateToCSI.sh script with required parameters for migrating AKS volumes from in-tree to CSI driver.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n./MigrateToCSI.sh <namespace> <sourceStorageClass> <TargetCSIstorageClass> <VolumeSnapshotClass> <startTimestamp> <endTimestamp>\n```\n\n----------------------------------------\n\nTITLE: Deploying and Verifying Kubernetes Resources with kubectl\nDESCRIPTION: Series of kubectl commands to deploy the persistent volume, persistent volume claim, and pod, and to verify their correct deployment and mounting of the NFS volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pv-nfs.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pv pv-nfs\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pvc-nfs.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pvc pvc-nfs\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nginx-nfs.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod nginx-nfs\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it nginx-nfs -- sh\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with Azure Blob Storage Mount\nDESCRIPTION: YAML configuration for deploying a pod that mounts the Azure Blob storage persistent volume at /mnt/blob path using nginx container.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: mypod\nspec:\n  containers:\n  - name: mypod\n    image: mcr.microsoft.com/oss/nginx/nginx:1.17.3-alpine\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 250m\n        memory: 256Mi\n    volumeMounts:\n    - mountPath: \"/mnt/blob\"\n      name: volume\n      readOnly: false\n  volumes:\n    - name: volume\n      persistentVolumeClaim:\n        claimName: azure-blob-storage\n```\n\n----------------------------------------\n\nTITLE: Verifying Ingress Configuration for OSM\nDESCRIPTION: This command checks that the Ingress object was successfully deployed and displays its external IP address that can be used to access the httpbin service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl get ingress -n httpbin\n```\n\n----------------------------------------\n\nTITLE: Upgrading All Windows Node Pools to containerd\nDESCRIPTION: Azure CLI command to upgrade all Windows Server node pools from Docker to containerd runtime simultaneously. Applies the upgrade cluster-wide.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool upgrade \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --kubernetes-version 1.20.7 \\\n    --aks-custom-headers WindowsContainerRuntime=containerd\n```\n\n----------------------------------------\n\nTITLE: Create AKS Cluster Resources in Tenant A\nDESCRIPTION: Commands to create a resource group and AKS cluster with workload identity and OIDC issuer enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-cross-tenant.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set environment variables\nRESOURCE_GROUP=<resource-group-name>\nLOCATION=<location>\n\n# Create a resource group\naz group create --name $RESOURCE_GROUP --location $LOCATION\n```\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set environment variable\nCLUSTER_NAME=<cluster-name>\n\n# Create an AKS cluster\naz aks create \\\n  --resource-group $RESOURCE_GROUP \\\n  --name $CLUSTER_NAME \\\n  --enable-oidc-issuer \\\n  --enable-workload-identity \\\n  --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Installing and Updating the k8s-extension CLI Extension\nDESCRIPTION: Commands to install or update the k8s-extension Azure CLI extension, which is required for managing cluster extensions in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-extensions-az-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name k8s-extension\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name k8s-extension\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Auto-Upgrade Schedule for AKS Cluster Using Azure CLI\nDESCRIPTION: This command adds a new aksManagedAutoUpgradeSchedule configuration that schedules maintenance to run every third Friday between 12:00 AM and 8:00 AM in the UTC+5:30 time zone.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks maintenanceconfiguration add --resource-group myResourceGroup --cluster-name myAKSCluster --name aksManagedAutoUpgradeSchedule --schedule-type Weekly --day-of-week Friday --interval-weeks 3 --duration 8 --utc-offset +05:30 --start-time 00:00\n```\n\n----------------------------------------\n\nTITLE: Inspecting Pod Environment Variables\nDESCRIPTION: Command to retrieve detailed pod information including environment variables. This helps verify that sensitive information like the Azure OpenAI API key isn't present in the pod's environment variables, confirming proper security configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl describe pod --selector app=ai-service\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Advanced Features\nDESCRIPTION: Deploys an AKS cluster with enabled features including KeyVault Secret Provider, Workload Identity, and Azure CNI networking across availability zones.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz aks create \\\n --location $MY_LOCATION \\\n --name $MY_CLUSTER_NAME \\\n --tier standard \\\n --resource-group $MY_RESOURCE_GROUP_NAME \\\n --network-plugin azure  \\\n --node-vm-size Standard_DS4_v2 \\\n --node-count 3 \\\n --auto-upgrade-channel stable \\\n --node-os-upgrade-channel  NodeImage \\\n --attach-acr ${MY_ACR_REGISTRY} \\\n --enable-oidc-issuer \\\n --enable-workload-identity \\\n --enable-addons azure-keyvault-secrets-provider \\\n --zones 1 2 3 \\\n --generate-ssh-keys \\\n --output table\n```\n\n----------------------------------------\n\nTITLE: Creating Network Isolated AKS Cluster with API Server VNet Integration in Azure CLI\nDESCRIPTION: This snippet creates a network isolated AKS cluster using the API Server VNet Integration mode. It specifies the custom identities, network configuration, and bootstrap artifact source for the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --kubernetes-version 1.30.3 --vnet-subnet-id ${SUBNET_ID} --assign-identity ${CLUSTER_IDENTITY_RESOURCE_ID} --assign-kubelet-identity ${KUBELET_IDENTITY_RESOURCE_ID} --bootstrap-artifact-source Cache --bootstrap-container-registry-resource-id ${REGISTRY_ID} --outbound-type none --network-plugin azure --enable-apiserver-vnet-integration --apiserver-subnet-id ${APISERVER_SUBNET_ID}\n```\n\n----------------------------------------\n\nTITLE: Example Node Status Output\nDESCRIPTION: Sample output from kubectl describe node showing various node conditions, their status, and events. Demonstrates the format of node health information and monitoring data provided by NPD.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-problem-detector.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nConditions:\n  Type                          Status  LastHeartbeatTime                 LastTransitionTime                Reason                          Message\n  ----                          ------  -----------------                 ------------------                ------                          -------\n  VMEventScheduled              False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:41 +0000   NoVMEventScheduled              VM has no scheduled event\n  FrequentContainerdRestart     False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:41 +0000   NoFrequentContainerdRestart     containerd is functioning properly\n  FrequentDockerRestart         False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:41 +0000   NoFrequentDockerRestart         docker is functioning properly\n  FilesystemCorruptionProblem   False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:41 +0000   FilesystemIsOK                  Filesystem is healthy\n  FrequentUnregisterNetDevice   False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:41 +0000   NoFrequentUnregisterNetDevice   node is functioning properly\n  ContainerRuntimeProblem       False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:40 +0000   ContainerRuntimeIsUp            container runtime service is up\n  KernelDeadlock                False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:41 +0000   KernelHasNoDeadlock             kernel has no deadlock\n  FrequentKubeletRestart        False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:41 +0000   NoFrequentKubeletRestart        kubelet is functioning properly\n  KubeletProblem                False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:41 +0000   KubeletIsUp                     kubelet service is up\n  ReadonlyFilesystem            False   Thu, 01 Jun 2023 19:14:25 +0000   Thu, 01 Jun 2023 03:57:41 +0000   FilesystemIsNotReadOnly         Filesystem is not read-only\n  NetworkUnavailable            False   Thu, 01 Jun 2023 03:58:39 +0000   Thu, 01 Jun 2023 03:58:39 +0000   RouteCreated                    RouteController created a route\n  MemoryPressure                True    Thu, 01 Jun 2023 19:16:50 +0000   Thu, 01 Jun 2023 19:16:50 +0000   KubeletHasInsufficientMemory    kubelet has insufficient memory available\n  DiskPressure                  False   Thu, 01 Jun 2023 19:16:50 +0000   Thu, 01 Jun 2023 03:57:22 +0000   KubeletHasNoDiskPressure        kubelet has no disk pressure\n  PIDPressure                   False   Thu, 01 Jun 2023 19:16:50 +0000   Thu, 01 Jun 2023 03:57:22 +0000   KubeletHasSufficientPID         kubelet has sufficient PID available\n  Ready                         True    Thu, 01 Jun 2023 19:16:50 +0000   Thu, 01 Jun 2023 03:57:23 +0000   KubeletReady                    kubelet is posting ready status. AppArmor enabled\n\nEvents:\n  Type    Reason                   Age                  From     Message\n  ----    ------                   ----                 ----     -------\n  Normal  NodeHasSufficientMemory  94s (x176 over 15h)  kubelet  Node aks-agentpool-40622340-vmss000009 status is now: NodeHasSufficientMemory\n```\n\n----------------------------------------\n\nTITLE: Upgrading a Specific AKS Node Pool using Azure CLI\nDESCRIPTION: This command upgrades a specific node pool in an AKS cluster by updating only the node images. It requires the resource group name, cluster name, and node pool name as parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-upgrade-github-actions.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool upgrade --resource-group <resourceGroupName> --cluster-name <aksClusterName> --name <nodePoolName> --node-image-only\n```\n\n----------------------------------------\n\nTITLE: Installing Apache Airflow Helm Chart\nDESCRIPTION: This command installs the Apache Airflow Helm chart in the 'airflow' namespace, using the custom values file and enabling debug output for detailed installation information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nhelm install airflow apache-airflow/airflow --namespace airflow --create-namespace -f airflow_values.yaml --debug\n```\n\n----------------------------------------\n\nTITLE: Creating Kubelet Managed Identity in Azure\nDESCRIPTION: Creates a new kubelet managed identity using Azure CLI. This identity will be used for AKS cluster authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create \\\n    --name myKubeletIdentity \\\n    --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Adding a Node Pool with Both vTPM and Secure Boot Enabled\nDESCRIPTION: Adds a new node pool to an existing AKS cluster with both vTPM and Secure Boot security features enabled for maximum protection against rootkits and boot kits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-trusted-launch.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --resource-group myResourceGroup --cluster-name myAKSCluster --name mynodepool --node-count 3 --enable-vtpm --enable-secure-boot\n```\n\n----------------------------------------\n\nTITLE: Creating Secrets in Azure Key Vault for Istio Certificates\nDESCRIPTION: This snippet demonstrates how to create secrets in Azure Key Vault for the root certificate, CA certificate, CA key, and certificate chain required for Istio's custom CA configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault secret set --vault-name $AKV_NAME --name root-cert --file <path-to-folder/root-cert.pem>\naz keyvault secret set --vault-name $AKV_NAME --name ca-cert --file <path-to-folder/ca-cert.pem>\naz keyvault secret set --vault-name $AKV_NAME --name ca-key --file <path-to-folder/ca-key.pem>\naz keyvault secret set --vault-name $AKV_NAME --name cert-chain --file <path-to-folder/cert-chain.pem>\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure CNI Networking using Azure CLI\nDESCRIPTION: This Azure CLI script creates a resource group and an AKS cluster with Azure CNI networking. The command uses the '--network-plugin azure' parameter to specify Azure CNI networking and generates SSH keys for cluster access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create \\\n    --name test-rg \\\n    --location eastus2\n\naz aks create \\\n    --resource-group test-rg \\\n    --name aks-cluster \\\n    --network-plugin azure \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating a User-Assigned Managed Identity for AKS\nDESCRIPTION: This command creates a user-assigned managed identity that can be associated with an AKS cluster. User-assigned managed identities enable scenarios such as creating clusters with custom VNet or with an outbound type of user-defined routing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz identity create \\\n    --name myIdentity \\\n    --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster to Use User-Assigned Managed Identity\nDESCRIPTION: This command updates an existing AKS cluster to use a user-assigned managed identity. It enables managed identity and assigns the specified user-assigned identity to the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --enable-managed-identity \\\n    --assign-identity $RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Deploying Yelb Application with TLS Certificate Integration\nDESCRIPTION: Bash script that deploys the Yelb application with Kubernetes Ingress configuration and Azure Key Vault certificate integration. Creates necessary namespace, SecretProviderClass, and handles TLS certificate setup.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\n# Variables\nsource ./00-variables.sh\n\n# Check if namespace exists in the cluster\nresult=$(kubectl get namespace -o jsonpath=\"{.items[?(@.metadata.name=='$NAMESPACE')].metadata.name}\")\n\nif [[ -n $result ]]; then\n  echo \"$NAMESPACE namespace already exists in the cluster\"\nelse\n  echo \"$NAMESPACE namespace does not exist in the cluster\"\n  echo \"creating $NAMESPACE namespace in the cluster...\"\n  kubectl create namespace $NAMESPACE\nfi\n\n# Create the Secret Provider Class object\necho \"Creating the secret provider class object...\"\ncat <<EOF | kubectl apply -f -\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  namespace: $NAMESPACE\n  name: yelb\nspec:\n  provider: azure\n  secretObjects:\n    - secretName: $TLS_SECRET_NAME\n      type: kubernetes.io/tls\n      data: \n        - objectName: $KEY_VAULT_CERTIFICATE_NAME\n          key: tls.key\n        - objectName: $KEY_VAULT_CERTIFICATE_NAME\n          key: tls.crt\n  parameters:\n    usePodIdentity: \"false\"\n    useVMManagedIdentity: \"true\"\n    userAssignedIdentityID: $KEY_VAULT_SECRET_PROVIDER_IDENTITY_CLIENT_ID\n    keyvaultName: $KEY_VAULT_NAME\n    objects: |\n      array:\n        - |\n          objectName: $KEY_VAULT_CERTIFICATE_NAME\n          objectType: secret\n    tenantId: $TENANT_ID\nEOF\n\n# Apply the YAML configuration\nkubectl apply -f yelb.yml\n\necho \"waiting for secret $TLS_SECRET_NAME in namespace $namespace...\"\n\nwhile true; do\n  if kubectl get secret -n $NAMESPACE $TLS_SECRET_NAME >/dev/null 2>&1; then\n    echo \"secret $TLS_SECRET_NAME found!\"\n    break\n  else\n    printf \".\"\n    sleep 3\n  fi\ndone\n\n# Create chat-ingress\ncat ingress.yml |\n  yq \"(.spec.ingressClassName)|=\\\"$INGRESS_CLASS_NAME\\\" |\n  yq \"(.spec.tls[0].hosts[0])|=\\\"$SUBDOMAIN.$DNS_ZONE_NAME\\\" |\n  yq \"(.spec.tls[0].secretName)|=\\\"$TLS_SECRET_NAME\\\" |\n  yq \"(.spec.rules[0].host)|=\\\"$SUBDOMAIN.$DNS_ZONE_NAME\\\" |\n  kubectl apply -f -\n\n# Check the deployed resources within the yelb namespace:\nkubectl get all -n yelb\n```\n\n----------------------------------------\n\nTITLE: Configuring Hamster Deployment with Extra Recommender\nDESCRIPTION: YAML configuration for deploying a sample hamster application with VPA using the extra recommender, including resource policies and deployment specifications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"autoscaling.k8s.io/v1\" \nkind: VerticalPodAutoscaler \nmetadata: \n  name: hamster-vpa \nspec: \n  recommenders:  \n    - name: 'extra-recommender' \n  targetRef: \n    apiVersion: \"apps/v1\" \n    kind: Deployment \n    name: hamster \n  updatePolicy: \n    updateMode: \"Auto\" \n  resourcePolicy: \n    containerPolicies: \n      - containerName: '*' \n        minAllowed: \n          cpu: 100m \n          memory: 50Mi \n        maxAllowed: \n          cpu: 1 \n          memory: 500Mi \n        controlledResources: [\"cpu\", \"memory\"] \n--- \napiVersion: apps/v1 \nkind: Deployment \nmetadata: \n  name: hamster \nspec: \n  selector: \n    matchLabels: \n      app: hamster \n  replicas: 2 \n  template: \n    metadata: \n      labels: \n        app: hamster \n    spec: \n      securityContext: \n        runAsNonRoot: true \n        runAsUser: 65534 \n      containers: \n        - name: hamster \n          image: k8s.gcr.io/ubuntu-slim:0.1 \n          resources: \n            requests: \n              cpu: 100m \n              memory: 50Mi \n          command: [\"/bin/sh\"] \n          args: \n            - \"-c\" \n            - \"while true; do timeout 0.5s yes >/dev/null; sleep 0.5s; done\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster with Azure CLI\nDESCRIPTION: Command to configure kubectl credentials for connecting to an AKS cluster using az aks get-credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group ${RG_NAME} --name ${CLUSTER_NAME}\n```\n\n----------------------------------------\n\nTITLE: Monitoring External IP Assignment for Store-Front Service\nDESCRIPTION: This command continuously watches the store-front service to monitor when it gets assigned an external IP address. The --watch flag keeps the command running until the user interrupts it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nkubectl get service store-front --watch\n```\n\n----------------------------------------\n\nTITLE: KEDA ScaledObject Configuration\nDESCRIPTION: YAML configuration for KEDA ScaledObject and TriggerAuthentication, defining autoscaling parameters and authentication using workload identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: keda.sh/v1alpha1\nkind: ScaledObject\nmetadata:\n  name: aws2az-queue-scaleobj\n  namespace: ${AQS_TARGET_NAMESPACE}\nspec:\n  scaleTargetRef:\n    name: ${AQS_TARGET_DEPLOYMENT}\n  minReplicaCount: 0\n  maxReplicaCount: 15\n  pollingInterval: 30\n  cooldownPeriod:  10\n  triggers:\n  - type: azure-queue\n    authenticationRef:\n      name: keda-az-credentials\n    metadata:\n      queueName: ${AZURE_QUEUE_NAME}\n      accountName: ${AZURE_STORAGE_ACCOUNT_NAME}\n      queueLength: '5'\n      activationQueueLength: '20'\n      cloud: AzurePublicCloud\n---\napiVersion: keda.sh/v1alpha1\nkind: TriggerAuthentication\nmetadata:\n  name: keda-az-credentials\n  namespace: $AQS_TARGET_NAMESPACE\nspec:\n  podIdentity:\n    provider: azure-workload\n    identityId: '${workloadManagedIdentityClientId}'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Updating Key Vault Access Mode in Azure\nDESCRIPTION: Command to update an Azure Key Vault access mode between public and private network access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_27\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault update --name MyKeyVault --resource-group MyResourceGroup --public-network-access Disabled\n```\n\n----------------------------------------\n\nTITLE: Load Balancer Service Configuration\nDESCRIPTION: YAML configuration for creating a Kubernetes service that uses Azure Standard Load Balancer for cross-zone traffic distribution.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/availability-zones-overview.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: example\nspec:\n  type: LoadBalancer\n  selector:\n    app: myapp\n  ports:\n    - port: 80\n      targetPort: 8080\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with PowerShell\nDESCRIPTION: Deploys a new AKS cluster with Windows container support, 2 nodes, and Azure CNI networking.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzAksCluster -ResourceGroupName myResourceGroup `\n    -Name myAKSCluster `\n    -NodeCount 2 `\n    -NetworkPlugin azure `\n    -NodeVmSetType VirtualMachineScaleSets `\n    -WindowsProfileAdminUserName $AdminCreds.UserName `\n    -WindowsProfileAdminUserPassword $secureString `\n    -GenerateSshKey\n```\n\n----------------------------------------\n\nTITLE: Linking Azure Monitor and Azure Managed Grafana to AKS Cluster\nDESCRIPTION: This command links the Azure Monitor and Azure Managed Grafana resources to the AKS cluster, enabling metric collection and visualization for Container Network Observability.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --name $CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP \\\n    --enable-azure-monitor-metrics \\\n    --azure-monitor-workspace-resource-id $azuremonitorId \\\n    --grafana-resource-id $grafanaId\n```\n\n----------------------------------------\n\nTITLE: Installing and Updating AKS Preview Extension\nDESCRIPTION: Commands to install or update the aks-preview extension using Azure CLI to enable new features like cordon behavior.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Install the aks-preview extension\naz extension add --name aks-preview\n\n# Update the aks-preview extension to the latest version\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Filtering Events by Namespace\nDESCRIPTION: Command to filter Kubernetes events by a specific namespace, allowing for more focused troubleshooting within a particular namespace context.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/events.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get events --namespace <namespace-name>\n```\n\n----------------------------------------\n\nTITLE: Creating Private AKS Cluster with Default Basic Networking\nDESCRIPTION: Creates a private AKS cluster using default basic networking configuration. This command enables the private cluster feature and uses standard load balancer SKU.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name <private-cluster-name> \\\n    --resource-group <private-cluster-resource-group> \\\n    --load-balancer-sku standard \\\n    --enable-private-cluster \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Verifying Secrets Store CSI Driver Installation\nDESCRIPTION: Uses kubectl to list pods related to the Secrets Store CSI Driver and Azure provider in the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-driver.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n kube-system -l 'app in (secrets-store-csi-driver,secrets-store-provider-azure)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Cluster Upgrades with Azure CLI\nDESCRIPTION: Sets up automatic upgrade channel for an AKS cluster using the az aks update command with the --auto-upgrade-channel parameter set to patch, enabling automatic patch-level updates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myAKSCluster --auto-upgrade-channel patch\n```\n\n----------------------------------------\n\nTITLE: Azure Files NFS StorageClass with Optimized Mount Options\nDESCRIPTION: Example YAML for a StorageClass with optimized read and write size options (256 KiB) for NFS file shares, providing better performance for specific workload patterns while maintaining proper network utilization.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: azurefile-csi-nfs\nprovisioner: file.csi.azure.com\nallowVolumeExpansion: true\nparameters:\n  protocol: nfs\nmountOptions:\n  - nconnect=4\n  - noresvport\n  - actimeo=30\n  - rsize=262144\n  - wsize=262144\n```\n\n----------------------------------------\n\nTITLE: Updating all secrets in AKS cluster using kubectl\nDESCRIPTION: This command retrieves all secrets across all namespaces and replaces them, ensuring they are encrypted with the new KMS configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_12\n\nLANGUAGE: Azure CLI\nCODE:\n```\nkubectl get secrets --all-namespaces -o json | kubectl replace -f -\n```\n\n----------------------------------------\n\nTITLE: Verifying Cluster Connection with kubectl\nDESCRIPTION: This kubectl command retrieves the list of nodes in the cluster to verify the connection and cluster status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Enabling Deployment Safeguards on Existing AKS Clusters\nDESCRIPTION: Commands to enable and update deployment safeguards on existing AKS clusters that already have the Azure Policy add-on enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deployment-safeguards.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup --safeguards-level Enforcement --safeguards-version v2.0.0\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup --safeguards-level Enforcement\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Storage Account for MongoDB Backups\nDESCRIPTION: Creates an Azure Storage Account and container to store MongoDB backups, and stores the account key in Azure Key Vault using az storage account create, az storage container create, and az keyvault secret set commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz storage account create --name $AKS_MONGODB_BACKUP_STORAGE_ACCOUNT_NAME --resource-group $MY_RESOURCE_GROUP_NAME --location $MY_LOCATION --sku Standard_ZRS --output table\naz storage container create --name $AKS_MONGODB_BACKUP_STORAGE_CONTAINER_NAME --account-name $AKS_MONGODB_BACKUP_STORAGE_ACCOUNT_NAME --output table\nexport AKS_MONGODB_BACKUP_STORAGE_ACCOUNT_KEY=$(az storage account keys list --account-name $AKS_MONGODB_BACKUP_STORAGE_ACCOUNT_NAME --query \"[0].value\" -o tsv)\naz keyvault secret set --vault-name $MY_KEYVAULT_NAME --name AZURE-STORAGE-ACCOUNT-KEY --value $AKS_MONGODB_BACKUP_STORAGE_ACCOUNT_KEY --output none\n```\n\n----------------------------------------\n\nTITLE: Creating Network Infrastructure for AKS\nDESCRIPTION: Creates the core networking components including resource group, virtual network, subnet, NAT gateway, and public IP for the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name $RESOURCE_GROUP_NAME --location $LOCATION\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet create \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name $VNET_NAME \\\n--address-prefix $ADDRESS_SPACE \\\n--location $LOCATION\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet create \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--vnet-name $VNET_NAME \\\n--name $SUBNET_NAME \\\n--address-prefix $SUBNET_PREFIX\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz network public-ip create \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name ${NAT_GATEWAY_NAME}-public-ip \\\n--sku Standard \\\n--location $LOCATION\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz network nat gateway create \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name $NAT_GATEWAY_NAME \\\n--public-ip-addresses ${NAT_GATEWAY_NAME}-public-ip \\\n--location $LOCATION\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet update \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--vnet-name $VNET_NAME \\\n--name $SUBNET_NAME \\\n--nat-gateway $NAT_GATEWAY_NAME\n```\n\n----------------------------------------\n\nTITLE: Checking Available AKS Cluster Versions - Azure CLI\nDESCRIPTION: Command to list available upgrade versions for an AKS cluster using Azure CLI. Uses environment variables for resource group and cluster names.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-valkey-aks-nodepool.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks get-upgrades --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --output table\n```\n\n----------------------------------------\n\nTITLE: Verifying Node Labels\nDESCRIPTION: Kubernetes command to verify labels on blocked nodes after a drain node failure during upgrade.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes --show-labels=true\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Files Storage Class in YAML\nDESCRIPTION: This YAML snippet defines a StorageClass for Azure Files in Kubernetes. It specifies the provisioner, allows volume expansion, sets mount options, and configures the storage account SKU.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: my-azurefile\nprovisioner: file.csi.azure.com # replace with \"kubernetes.io/azure-file\" if aks version is less than 1.21\nallowVolumeExpansion: true\nmountOptions:\n - dir_mode=0777\n - file_mode=0777\n - uid=0\n - gid=0\n - mfsymlinks\n - cache=strict\n - actimeo=30\n - nobrl  # disable sending byte range lock requests to the server and for applications which have challenges with posix locks\nparameters:\n  skuName: Premium_LRS\n```\n\n----------------------------------------\n\nTITLE: Installing Add-ons in AKS using Azure CLI\nDESCRIPTION: Command for enabling add-ons in an AKS cluster using the Azure CLI. This command allows users to install and manage officially supported add-ons for their Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/integrations.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks enable-addons\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Store Application Kubernetes Manifest\nDESCRIPTION: Complete Kubernetes manifest file that defines deployments and services for the AKS Store demo application. Includes configurations for RabbitMQ, order service, product service, and store front components with their respective resource limits and service exposures.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-powershell.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: rabbitmq\n        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine\n        ports:\n        - containerPort: 5672\n          name: rabbitmq-amqp\n        - containerPort: 15672\n          name: rabbitmq-http\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"username\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"password\"\n        resources:\n          requests:\n            cpu: 10m\n            memory: 128Mi\n          limits:\n            cpu: 250m\n            memory: 256Mi\n        volumeMounts:\n        - name: rabbitmq-enabled-plugins\n          mountPath: /etc/rabbitmq/enabled_plugins\n          subPath: enabled_plugins\n      volumes:\n      - name: rabbitmq-enabled-plugins\n        configMap:\n          name: rabbitmq-enabled-plugins\n          items:\n          - key: rabbitmq_enabled_plugins\n            path: enabled_plugins\n---\napiVersion: v1\ndata:\n  rabbitmq_enabled_plugins: |\n    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].\nkind: ConfigMap\nmetadata:\n  name: rabbitmq-enabled-plugins\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n    - name: rabbitmq-amqp\n      port: 5672\n      targetPort: 5672\n    - name: rabbitmq-http\n      port: 15672\n      targetPort: 15672\n  type: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: order-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: order-service\n  template:\n    metadata:\n      labels:\n        app: order-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: order-service\n        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: ORDER_QUEUE_HOSTNAME\n          value: \"rabbitmq\"\n        - name: ORDER_QUEUE_PORT\n          value: \"5672\"\n        - name: ORDER_QUEUE_USERNAME\n          value: \"username\"\n        - name: ORDER_QUEUE_PASSWORD\n          value: \"password\"\n        - name: ORDER_QUEUE_NAME\n          value: \"orders\"\n        - name: FASTIFY_ADDRESS\n          value: \"0.0.0.0\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n      initContainers:\n      - name: wait-for-rabbitmq\n        image: busybox\n        command: ['sh', '-c', 'until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: order-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3000\n    targetPort: 3000\n  selector:\n    app: order-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-service\n  template:\n    metadata:\n      labels:\n        app: product-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: product-service\n        image: ghcr.io/azure-samples/aks-store-demo/product-service:latest\n        ports:\n        - containerPort: 3002\n        resources:\n          requests:\n            cpu: 1m\n            memory: 1Mi\n          limits:\n            cpu: 1m\n            memory: 7Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3002\n    targetPort: 3002\n  selector:\n    app: product-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: store-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: store-front\n  template:\n    metadata:\n      labels:\n        app: store-front\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: store-front\n        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest\n        ports:\n        - containerPort: 8080\n          name: store-front\n        env:\n        - name: VUE_APP_ORDER_SERVICE_URL\n          value: \"http://order-service:3000/\"\n        - name: VUE_APP_PRODUCT_SERVICE_URL\n          value: \"http://product-service:3002/\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 200Mi\n          limits:\n            cpu: 1000m\n            memory: 512Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: store-front\nspec:\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: store-front\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Deployment with kubectl\nDESCRIPTION: Command to deploy the Nginx application to an AKS cluster using the kubectl apply command with the YAML manifest file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_9\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f acr-nginx.yaml\n```\n\n----------------------------------------\n\nTITLE: Accessing AKS Cluster with Managed Identity\nDESCRIPTION: Series of commands to get credentials and access the AKS cluster using kubelogin.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-authentication-microsoft-entra-id.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myManagedCluster\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubelogin convert-kubeconfig -l azurecli\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure Network Policy Manager\nDESCRIPTION: Creates an AKS cluster with the Azure Network Policy Manager enabled. The command specifies the Azure CNI network plugin and Azure network policy, which are required for using the Azure Network Policy Manager.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz aks create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --node-count 1 \\\n    --network-plugin azure \\\n    --network-policy azure \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Adding PostgreSQL User Node Pool to AKS\nDESCRIPTION: Adds a dedicated node pool for PostgreSQL workloads with autoscaling and zone redundancy enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $AKS_PRIMARY_CLUSTER_NAME \\\n    --name $USER_NODE_POOL_NAME \\\n    --enable-cluster-autoscaler \\\n    --min-count 3 \\\n    --max-count 6 \\\n    --node-vm-size $USER_NODE_POOL_VMSKU \\\n    --zones 1 2 3 \\\n    --labels workload=postgres \\\n    --output table\n```\n\n----------------------------------------\n\nTITLE: Deploying Kubernetes Job for Service Bus Message Production\nDESCRIPTION: Creates a Kubernetes Job to send 100 messages to Azure Service Bus queue using workload identity and specified service account. Includes environment configuration for cross-tenant operation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-cross-tenant.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: myproducer\nspec:\n  template:\n    metadata:\n      labels:\n        azure.workload.identity/use: \"true\"\n    spec:\n      serviceAccountName: myserviceaccount\n      containers:\n      - image: ghcr.io/azure-samples/aks-app-samples/servicebusdemo:latest\n        name: myproducer\n        resources: {}\n        env:\n        - name: OPERATION_MODE\n          value: \"producer\"\n        - name: MESSAGE_COUNT\n          value: \"100\"\n        - name: AZURE_SERVICEBUS_QUEUE_NAME\n          value: myqueue\n        - name: AZURE_SERVICEBUS_HOSTNAME\n          value: $SERVICEBUS_HOSTNAME\n        - name: AZURE_TENANT_ID\n          value: $TENANT_B_ID\n      restartPolicy: Never\nEOF\n```\n\n----------------------------------------\n\nTITLE: Azure File CSI PersistentVolume Configuration\nDESCRIPTION: YAML configuration for creating a PersistentVolume using the Azure File CSI driver with specific mount options and volume attributes\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  annotations:\n    pv.kubernetes.io/provisioned-by: file.csi.azure.com\n  name: azurefile\nspec:\n  capacity:\n    storage: 5Gi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: azurefile-csi\n  csi:\n    driver: file.csi.azure.com\n    readOnly: false\n    volumeHandle: \"{resource-group-name}#{account-name}#{file-share-name}\"  # make sure this volumeid is unique for every identical share in the cluster\n    volumeAttributes:\n      resourceGroup: EXISTING_RESOURCE_GROUP_NAME  # optional, only set this when storage account is not in the same resource group as the cluster nodes\n      shareName: aksshare\n    nodeStageSecretRef:\n      name: azure-secret\n      namespace: default\n  mountOptions:\n    - dir_mode=0777\n    - file_mode=0777\n    - uid=0\n    - gid=0\n    - mfsymlinks\n    - cache=strict\n    - nosharesock\n    - nobrl  # disable sending byte range lock requests to the server and for applications which have challenges with posix locks\n```\n\n----------------------------------------\n\nTITLE: Custom Pod Security Policy Definition\nDESCRIPTION: YAML manifest defining a custom pod security policy that denies privileged access but allows other operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: psp-deny-privileged\nspec:\n  privileged: false\n  seLinux:\n    rule: RunAsAny\n  supplementalGroups:\n    rule: RunAsAny\n  runAsUser:\n    rule: RunAsAny\n  fsGroup:\n    rule: RunAsAny\n  volumes:\n - '*'\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resources for AKS Deployment using PowerShell\nDESCRIPTION: This PowerShell script installs the Azure PowerShell module, registers the necessary resource provider, and creates a resource group, Azure Container Registry, Log Analytics workspace, and Azure Kubernetes Service cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/devops-pipeline.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n# Install Azure PowerShell\nInstall-Module -Name Az -Repository PSGallery -Force\n\n# The Microsoft.OperationsManagement resource provider must be registered. This is a one-time activity per subscription.\nRegister-AzResourceProvider -ProviderNamespace Microsoft.OperationsManagement\n\n# Create a resource group\nNew-AzResourceGroup -Name myapp-rg -Location eastus\n\n# Create a container registry\nNew-AzContainerRegistry -ResourceGroupName myapp-rg -Name myContainerRegistry -Sku Basic -Location eastus\n\n# Create a log analytics workspace (or use an existing one)\nNew-AzOperationalInsightsWorkspace -ResourceGroupName myapp-rg -Name myWorkspace -Location eastus\n\n# Create an AKS cluster with monitoring add-on enabled\n$aksParameters = @{ \n  ResourceGroupName = 'myapp-rg'\n  Name = 'myapp'\n  NodeCount = 1\n  AddOnNameToBeEnabled = 'Monitoring'\n  GenerateSshKey = $true\n  WorkspaceResourceId = '/subscriptions/<subscription-id>/resourceGroups/myapp-rg/providers/Microsoft.OperationalInsights/workspaces/myWorkspace'\n}\n\nNew-AzAksCluster @aksParameters\n```\n\n----------------------------------------\n\nTITLE: Kafka Consumer Pod and Service Configuration\nDESCRIPTION: YAML manifest for deploying a Kafka consumer pod with kata-cc runtime and attestation container, including LoadBalancer service configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: kafka-golang-consumer\n  namespace: kafka\n  labels:\n    azure.workload.identity/use: \"true\"\n    app.kubernetes.io/name: kafka-golang-consumer\nspec:\n  serviceAccountName: workload-identity-sa\n  runtimeClassName: kata-cc-isolation\n  containers:\n    - image: \"mcr.microsoft.com/aci/skr:2.7\"\n      imagePullPolicy: Always\n      name: skr\n      env:\n        - name: SkrSideCarArgs\n          value: ewogICAgImNlcnRjYWNoZSI6IHsKCQkiZW5kcG9pbnRfdHlwZSI6ICJMb2NhbFRISU0iLAoJCSJlbmRwb2ludCI6ICIxNjkuMjU0LjE2OS4yNTQvbWV0YWRhdGEvVEhJTS9hbWQvY2VydGlmaWNhdGlvbiIKCX0gIAp9\n      command:\n        - /bin/skr\n      volumeMounts:\n        - mountPath: /opt/confidential-containers/share/kata-containers/reference-info-base64\n          name: endor-loc\n    - image: \"mcr.microsoft.com/acc/samples/kafka/consumer:1.0\"\n      imagePullPolicy: Always\n      name: kafka-golang-consumer\n      env:\n        - name: SkrClientKID\n          value: kafka-encryption-demo\n        - name: SkrClientMAAEndpoint\n          value: sharedeus2.eus2.test.attest.azure.net\n        - name: SkrClientAKVEndpoint\n          value: \"myKeyVault.vault.azure.net\"\n        - name: TOPIC\n          value: kafka-demo-topic\n      command:\n        - /consume\n      ports:\n        - containerPort: 3333\n          name: kafka-consumer\n      resources:\n        limits:\n          memory: 1Gi\n          cpu: 200m\n  volumes:\n    - name: endor-loc\n      hostPath:\n        path: /opt/confidential-containers/share/kata-containers/reference-info-base64\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: consumer\n  namespace: kafka\nspec:\n  type: LoadBalancer\n  selector:\n    app.kubernetes.io/name: kafka-golang-consumer\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: kafka-consumer\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials\nDESCRIPTION: Retrieves the credentials for the newly created AKS cluster and configures kubectl to use them. This allows you to interact with the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Deploying a Sample Pod with Key Vault Integration\nDESCRIPTION: Deploys a sample pod that uses the SecretProviderClass and workload identity to access secrets from Azure Key Vault. The pod mounts the secrets as a volume accessible at /mnt/secrets-store.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\n# This is a sample pod definition for using SecretProviderClass and workload identity to access your key vault\nkind: Pod\napiVersion: v1\nmetadata:\n  name: busybox-secrets-store-inline-wi\n  labels:\n    azure.workload.identity/use: \"true\"\nspec:\n  serviceAccountName: \"workload-identity-sa\"\n  containers:\n    - name: busybox\n      image: registry.k8s.io/e2e-test-images/busybox:1.29-4\n      command:\n        - \"/bin/sleep\"\n        - \"10000\"\n      volumeMounts:\n      - name: secrets-store01-inline\n        mountPath: \"/mnt/secrets-store\"\n        readOnly: true\n  volumes:\n    - name: secrets-store01-inline\n      csi:\n        driver: secrets-store.csi.k8s.io\n        readOnly: true\n        volumeAttributes:\n          secretProviderClass: \"azure-kvname-wi\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Verifying FIPS Status of AKS Node Pools\nDESCRIPTION: Azure CLI command to check the FIPS status of node pools in an AKS cluster by querying the enableFIPS value in agentPoolProfiles.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --query=\"agentPoolProfiles[].{Name:name enableFips:enableFips}\" \\\n    -o table\n```\n\n----------------------------------------\n\nTITLE: Setting Kubernetes Namespace Context\nDESCRIPTION: Sets the current kubectl context to use the 'pets' namespace, which is where the application services are deployed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nkubectl config set-context --current --namespace=pets\n```\n\n----------------------------------------\n\nTITLE: Retrieving Principal ID for User-Assigned Managed Identity\nDESCRIPTION: This command retrieves the principal ID of a user-assigned managed identity. The principal ID is needed when assigning Azure RBAC roles to the managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nCLIENT_ID=$(az identity show \\\n    --name myIdentity \\\n    --resource-group myResourceGroup \\\n    --query principalId \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating FQDN Filtering Network Policy in AKS\nDESCRIPTION: This Cilium network policy allows egress traffic from pods with the label 'app: demo-container' to access domains matching '*.bing.com'. It includes DNS resolution rules and demonstrates FQDN-based filtering.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"cilium.io/v2\"\nkind: CiliumNetworkPolicy\nmetadata:\n  name: \"allow-bing-fqdn\"\nspec:\n  endpointSelector:\n    matchLabels:\n      app: demo-container\n  egress:\n    - toEndpoints:\n        - matchLabels:\n            \"k8s:io.kubernetes.pod.namespace\": kube-system\n            \"k8s:k8s-app\": kube-dns\n      toPorts:\n        - ports:\n            - port: \"53\"\n              protocol: ANY\n          rules:\n            dns:\n              - matchPattern: \"*.bing.com\"\n    - toFQDNs:\n        - matchPattern: \"*.bing.com\"\n```\n\n----------------------------------------\n\nTITLE: Manually Scaling AKS Nodes with Azure PowerShell\nDESCRIPTION: This Azure PowerShell command scales the number of nodes in an AKS cluster to 3.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-scale.md#2025-04-21_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nGet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster | Set-AzAksCluster -NodeCount 3\n```\n\n----------------------------------------\n\nTITLE: Creating Network Isolated AKS Cluster with Private Link in Azure CLI\nDESCRIPTION: This snippet creates a network isolated AKS cluster using the private link mode. It specifies the custom identities, network configuration, and bootstrap artifact source for the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --kubernetes-version 1.30.3 --vnet-subnet-id ${SUBNET_ID} --assign-identity ${CLUSTER_IDENTITY_RESOURCE_ID} --assign-kubelet-identity ${KUBELET_IDENTITY_RESOURCE_ID} --bootstrap-artifact-source Cache --bootstrap-container-registry-resource-id ${REGISTRY_ID} --outbound-type none --network-plugin azure --enable-private-cluster\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure NetApp Files Backend for SMB\nDESCRIPTION: YAML configuration for setting up the Trident backend configuration for Azure NetApp Files with SMB support, including subscription details and service level specifications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: trident.netapp.io/v1\nkind: TridentBackendConfig\nmetadata:\n  name: backend-tbc-anf-smb\nspec:\n  version: 1\n  storageDriverName: azure-netapp-files\n  subscriptionID: aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e\n  tenantID: aaaabbbb-0000-cccc-1111-dddd2222eeee\n  location: eastus\n  serviceLevel: Premium\n  credentials:\n    name: backend-tbc-anf-secret\n  nasType: smb\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Role Assignments\nDESCRIPTION: Lists all role assignments for an AKS cluster scope using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment list --scope $AKS_ID --query [].id --output tsv\n```\n\n----------------------------------------\n\nTITLE: Configuring API Server Access with Azure CLI\nDESCRIPTION: Commands to retrieve the current IP address and update AKS cluster with authorized IP ranges using Azure CLI. This allows limiting API server access to specific IP addresses for enhanced security.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-portal.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nCURRENT_IP=$(dig +short myip.opendns.com @resolver1.opendns.com)\n```\n\nLANGUAGE: bash\nCODE:\n```\naz aks update --resource-group <resource-group-name> --name <aks-cluster-name> --api-server-authorized-ip-ranges $CURRENT_IP/32\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network Link for Private DNS Zone using Azure CLI\nDESCRIPTION: This Azure CLI command creates a new link to add a virtual network to a private DNS zone. It uses the az network private-dns link vnet create command with parameters for specifying the link name, resource group, DNS zone, and virtual network.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz network private-dns link vnet create \\\n    --name <new-link-name> \\\n    --resource-group <node-resource-group-name> \\\n    --zone-name <private-dns-zone-name> \\\n    --virtual-network <vm-virtual-network-resource-id> \\\n    --registration-enabled false\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Kubernetes Service Cluster with ACR Integration\nDESCRIPTION: Provisions an AKS cluster with one node, managed identity enabled, and attaches it to the previously created Azure Container Registry. This enables the AKS cluster to pull images from the private registry without additional credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --attach-acr $REGISTRY_NAME \\\n    --node-count 1 \\\n    --generate-ssh-keys \\\n    --enable-managed-identity\n```\n\n----------------------------------------\n\nTITLE: Creating Dapr Extension with Custom Namespace in AKS using Azure CLI\nDESCRIPTION: Creates a Dapr extension installation in AKS with a custom namespace specification. Sets cluster type, name, resource group and other configuration parameters including version and upgrade settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create \\\n--cluster-type managedClusters \\\n--cluster-name dapr-aks \\\n--resource-group dapr-rg \\\n--name my-dapr-ext \\\n--extension-type microsoft.dapr \\\n--release-train stable \\\n--auto-upgrade false \\\n--version 1.9.2 \\\n--scope cluster \\\n--release-namespace dapr-custom\n```\n\n----------------------------------------\n\nTITLE: Re-enabling SSH for a Specific Node Pool using Azure CLI\nDESCRIPTION: This command re-enables SSH access on a specific node pool in an AKS cluster. The example targets 'nodepool1' and will only take effect after reimaging all nodes in that pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool update --cluster-name myManagedCluster --name nodepool1 --resource-group myResourceGroup --ssh-access localuser \n```\n\n----------------------------------------\n\nTITLE: Creating Azure Managed Prometheus PodMonitor\nDESCRIPTION: Kubernetes manifest for creating a custom PodMonitor resource for Azure Monitor Managed Prometheus to collect PostgreSQL metrics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-postgresql-ha.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply --context $AKS_PRIMARY_CLUSTER_NAME --namespace $PG_NAMESPACE -f -\napiVersion: azmonitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  name: cnpg-cluster-metrics-managed-prometheus\n  namespace: ${PG_NAMESPACE}\n  labels:\n    azure.workload.identity/use: \"true\"\n    cnpg.io/cluster: ${PG_PRIMARY_CLUSTER_NAME}\nspec:\n  selector:\n    matchLabels:\n      azure.workload.identity/use: \"true\"\n      cnpg.io/cluster: ${PG_PRIMARY_CLUSTER_NAME}\n  podMetricsEndpoints:\n    - port: metrics\nEOF\n```\n\n----------------------------------------\n\nTITLE: Azure Developer CLI Deployment\nDESCRIPTION: Command to deploy the application using Azure Developer CLI (azd).\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-application.md#2025-04-21_snippet_4\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd up\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group and Container Registry with Azure CLI\nDESCRIPTION: Commands to create a resource group and ACR instance using Azure CLI. Requires Azure CLI version 2.0.53 or later.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-acr.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location westus2\naz acr create --resource-group myResourceGroup --name $ACRNAME --sku Basic\n```\n\n----------------------------------------\n\nTITLE: Creating Storage Class for Azure NetApp Files in YAML\nDESCRIPTION: This YAML file defines a Kubernetes StorageClass that uses the Trident provisioner for Azure NetApp Files, allowing dynamic provisioning of volumes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: azure-netapp-files\nprovisioner: csi.trident.netapp.io\nparameters:\n  backendType: \"azure-netapp-files\"\n  fsType: \"nfs\"\n```\n\n----------------------------------------\n\nTITLE: Listing Nodes in AKS Cluster using kubectl\nDESCRIPTION: This command retrieves a list of nodes in the AKS cluster, displaying their names, status, roles, age, and Kubernetes version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Assigning Network Contributor Role to AKS Managed Identity\nDESCRIPTION: Azure CLI commands to assign the Network Contributor role to the AKS cluster's managed identity for the node resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/static-ip.md#2025-04-21_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\nRG_SCOPE=$(az group show \\\n    --name <node resource group> \\\n    --query id \\\n    --output tsv)\n\naz role assignment create \\\n    --assignee ${CLIENT_ID} \\\n    --role \"Network Contributor\" \\\n    --scope ${RG_SCOPE}\n```\n\n----------------------------------------\n\nTITLE: Creating Internal Load Balancer with Private Link Service in YAML\nDESCRIPTION: YAML configuration for creating a Kubernetes service with LoadBalancer type and Private Link Service integration using Azure annotations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/internal-lb.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: internal-app\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n    service.beta.kubernetes.io/azure-pls-create: \"true\"\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n  selector:\n    app: internal-app\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster for Managed Identity\nDESCRIPTION: Enables AKS-managed Microsoft Entra integration on an existing Kubernetes RBAC enabled cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-authentication-microsoft-entra-id.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group MyResourceGroup --name myManagedCluster --enable-aad --aad-admin-group-object-ids <id-1>,<id-2> [--aad-tenant-id <id>]\n```\n\n----------------------------------------\n\nTITLE: Creating and Assigning Custom Role Definition using Azure CLI\nDESCRIPTION: This snippet demonstrates how to create a custom role definition using the Azure CLI and then assign it to a user or other identity. It uses the JSON file created in the previous step.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_5\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz role definition create --role-definition @deploy-view.json \n\naz role assignment create --role \"AKS Deployment Reader\" --assignee <AAD-ENTITY-ID> --scope $AKS_ID\n```\n\n----------------------------------------\n\nTITLE: Retrieving Inference Service IP Address on AKS\nDESCRIPTION: This command retrieves the cluster IP address of the inference service and stores it in an environment variable. It uses kubectl to get the service information and extracts the IP using jsonpath.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport SERVICE_IP=$(kubectl get svc workspace-falcon-7b-instruct -o jsonpath='{.spec.clusterIP}')\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Standard Load Balancer and VMSS using Azure CLI\nDESCRIPTION: This Azure CLI snippet creates an AKS cluster with a single node pool backed by Virtual Machine Scale Sets. It enables cluster autoscaler with a minimum of 1 and maximum of 3 nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/aks-migration.md#2025-04-21_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-count 1 \\\n    --vm-set-type VirtualMachineScaleSets \\\n    --load-balancer-sku standard \\\n    --enable-cluster-autoscaler \\\n    --min-count 1 \\\n    --max-count 3 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Defining Wasm/WASI Workload Deployment\nDESCRIPTION: YAML configuration for deploying a Wasm/WASI workload using Spin on the WASI node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-wasi-node-pools.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: wasm-spin\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: wasm-spin\n  template:\n    metadata:\n      labels:\n        app: wasm-spin\n    spec:\n      runtimeClassName: wasmtime-spin-v2\n      containers:\n        - name: spin-hello\n          image: ghcr.io/spinkube/containerd-shim-spin/examples/spin-rust-hello:v0.15.1\n          command: [\"/\"]\n          resources:\n            limits:\n              cpu: 100m\n              memory: 128Mi\n            requests:\n              cpu: 100m\n              memory: 128Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: wasm-spin\nspec:\n  type: LoadBalancer\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n  selector:\n    app: wasm-spin\n```\n\n----------------------------------------\n\nTITLE: Defining Storage Class for Azure Files in AKS\nDESCRIPTION: YAML configuration for defining a storage class that uses the Azure Files CSI driver in an AKS cluster. This storage class enables dynamic provisioning of Azure File shares.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: my-azurefile\nprovisioner: file.csi.azure.com\nparameters:\n  skuName: Standard_LRS\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network with Subnets for AKS in Azure CLI\nDESCRIPTION: Creates a virtual network with two subnets - one for nodes and one for pods. The network uses the address space 10.0.0.0/8, with the node subnet defined as 10.240.0.0/16 and the pod subnet as 10.40.0.0/13.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-static-block-allocation.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet create --resource-group $resourceGroup --location $location --name $vnet --address-prefixes 10.0.0.0/8 -o none \naz network vnet subnet create --resource-group $resourceGroup --vnet-name $vnet --name nodesubnet --address-prefixes 10.240.0.0/16 -o none \naz network vnet subnet create --resource-group $resourceGroup --vnet-name $vnet --name podsubnet --address-prefixes 10.40.0.0/13 -o none\n```\n\n----------------------------------------\n\nTITLE: Deploying SecretProviderClass with Workload Identity\nDESCRIPTION: Creates a SecretProviderClass Kubernetes resource that defines how to access secrets in Azure Key Vault using workload identity. It specifies the Key Vault name and objects to access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\n# This is a SecretProviderClass example using workload identity to access your key vault\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: azure-kvname-wi # needs to be unique per namespace\nspec:\n  provider: azure\n  parameters:\n    usePodIdentity: \"false\"\n    clientID: \"${USER_ASSIGNED_CLIENT_ID}\" # Setting this to use workload identity\n    keyvaultName: ${KEYVAULT_NAME}       # Set to the name of your key vault\n    cloudName: \"\"                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud\n    objects:  |\n      array:\n        - |\n          objectName: secret1             # Set to the name of your secret\n          objectType: secret              # object types: secret, key, or cert\n          objectVersion: \"\"               # [OPTIONAL] object versions, default to latest if empty\n        - |\n          objectName: key1                # Set to the name of your key\n          objectType: key\n          objectVersion: \"\"\n    tenantId: \"${IDENTITY_TENANT}\"        # The tenant ID of the key vault\nEOF\n```\n\n----------------------------------------\n\nTITLE: Updating Cluster Autoscaler Settings on a Specific Node Pool\nDESCRIPTION: Updates the cluster autoscaler settings on a specific node pool named 'nodepool1', changing the minimum and maximum node counts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool update \\\n  --resource-group myResourceGroup \\\n  --cluster-name myAKSCluster \\\n  --name nodepool1 \\\n  --update-cluster-autoscaler \\\n  --min-count 1 \\\n  --max-count 5\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Cilium Data Plane and Advanced Container Networking Services\nDESCRIPTION: This command creates a new AKS cluster with Cilium data plane and enables Advanced Container Networking Services. It configures essential parameters like location, network plugin, pod CIDR, and Kubernetes version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set an environment variable for the AKS cluster name. Make sure to replace the placeholder with your own value.\nexport CLUSTER_NAME=\"<aks-cluster-name>\"\n\n# Create an AKS cluster\naz aks create \\\n    --name $CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP \\\n    --generate-ssh-keys \\\n    --location eastus \\\n    --max-pods 250 \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --network-dataplane cilium \\\n    --node-count 2 \\\n    --pod-cidr 192.168.0.0/16 \\\n    --kubernetes-version 1.29 \\\n    --enable-acns\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Workload Identity\nDESCRIPTION: Creates an AKS cluster with workload identity, OIDC issuer, blob driver enabled, and specific node configurations using the az aks create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n--location $MY_LOCATION \\\n--name $MY_CLUSTER_NAME \\\n--tier standard \\\n--resource-group $MY_RESOURCE_GROUP_NAME \\\n--network-plugin azure  \\\n--node-vm-size Standard_DS4_v2 \\\n--node-count 3 \\\n--auto-upgrade-channel stable \\\n--node-os-upgrade-channel NodeImage \\\n--attach-acr ${MY_ACR_REGISTRY} \\\n--enable-oidc-issuer \\\n--enable-blob-driver \\\n--enable-workload-identity \\\n--zones 1 2 3 \\\n--generate-ssh-keys \\\n--output table\n```\n\n----------------------------------------\n\nTITLE: Upgrading Existing AKS Cluster with Key Vault Secrets Provider\nDESCRIPTION: Enables the Azure Key Vault provider for Secrets Store CSI Driver on an existing AKS cluster using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-driver.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks enable-addons --addons azure-keyvault-secrets-provider --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Private Key Vault KMS\nDESCRIPTION: This command creates a new AKS cluster with KMS encryption enabled, using a private key vault. It specifies the managed identity, key ID, and key vault resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_23\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name myAKSCluster \\\n    --resource-group MyResourceGroup \\\n    --assign-identity $IDENTITY_RESOURCE_ID \\\n    --enable-azure-keyvault-kms \\\n    --azure-keyvault-kms-key-id $KEY_ID \\\n    --azure-keyvault-kms-key-vault-network-access \"Private\" \\\n    --azure-keyvault-kms-key-vault-resource-id $KEYVAULT_RESOURCE_ID \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Hello World Application Two with Secrets Store\nDESCRIPTION: YAML configuration for deploying the second hello world application with CSI secrets store integration. Includes deployment and service definitions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: aks-helloworld-two  \nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: aks-helloworld-two\n  template:\n    metadata:\n      labels:\n        app: aks-helloworld-two\n    spec:\n      containers:\n      - name: aks-helloworld-two\n        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1\n        ports:\n        - containerPort: 80\n        env:\n        - name: TITLE\n          value: \"AKS Ingress Demo\"\n        volumeMounts:\n        - name: secrets-store-inline\n          mountPath: \"/mnt/secrets-store\"\n          readOnly: true\n      volumes:\n      - name: secrets-store-inline\n        csi:\n          driver: secrets-store.csi.k8s.io\n          readOnly: true\n          volumeAttributes:\n            secretProviderClass: \"azure-tls\"\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: aks-helloworld-two\nspec:\n  type: ClusterIP\n  ports:\n  - port: 80\n  selector:\n    app: aks-helloworld-two\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Scrape Settings for Istio Metrics\nDESCRIPTION: This configuration file defines how Prometheus should scrape metrics from pods. It uses Kubernetes service discovery with annotation-based filtering to automatically discover and collect metrics from properly annotated pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-metrics-managed-prometheus.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nglobal: \n  scrape_interval: 30s\nscrape_configs: \n- job_name: workload\n  scheme: http\n  kubernetes_sd_configs:\n    - role: endpoints\n  relabel_configs:\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n      action: keep\n      regex: true\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n      action: replace\n      target_label: __metrics_path__\n      regex: (.+)\n    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n      action: replace\n      regex: ([^:]+)(?::\\d+)?;(\\d+)\n      replacement: $1:$2\n      target_label: __address__ \n```\n\n----------------------------------------\n\nTITLE: Convert AKS Cluster to API Server VNet Integration\nDESCRIPTION: Command to update an existing AKS cluster to enable API Server VNet Integration. Requires specifying the cluster name, resource group, and API server subnet ID. This is a one-way operation that cannot be reversed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-vnet-integration.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name <cluster-name> \\\n--resource-group <resource-group> \\\n--enable-apiserver-vnet-integration \\\n--apiserver-subnet-id <apiserver-subnet-resource-id>\n```\n\n----------------------------------------\n\nTITLE: Enabling KEDA on Existing AKS Cluster\nDESCRIPTION: Updates an existing AKS cluster to enable the KEDA add-on using Azure CLI. This command specifies the resource group, cluster name, and enables KEDA using the --enable-keda flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --enable-keda \n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Liveness Probes in Kubernetes\nDESCRIPTION: A YAML snippet for configuring a basic liveness probe that uses an exec command to determine if a container is healthy. If the probe fails, the container will be restarted by Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nlivenessProbe:\n  exec:\n    command:\n    - cat\n    - /tmp/healthy\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Deployment Safeguards Version\nDESCRIPTION: Command to update the deployment safeguards version for an existing AKS cluster. Updates to version 2.0.0 using the --safeguards-version flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deployment-safeguards.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup --safeguards-version v2.0.0\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with ACNS and Cilium\nDESCRIPTION: Creates an AKS cluster with Advanced Container Networking Services enabled, using the Cilium dataplane. This configuration supports both Container Network Observability and Container Network Security features.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set an environment variable for the AKS cluster name. Make sure to replace the placeholder with your own value.\nexport CLUSTER_NAME=\"<aks-cluster-name>\"\n\n# Create an AKS cluster\naz aks create \\\n    --name $CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP \\\n    --generate-ssh-keys \\\n    --location eastus \\\n    --max-pods 250 \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --network-dataplane cilium \\\n    --node-count 2 \\\n    --pod-cidr 192.168.0.0/16 \\\n    --kubernetes-version 1.29 \\\n    --enable-acns\n```\n\n----------------------------------------\n\nTITLE: Preserving Client IP for Kubernetes LoadBalancer Service in YAML\nDESCRIPTION: YAML configuration for a Kubernetes service that preserves the client's original IP address on inbound connections by setting externalTrafficPolicy to Local. Without this setting, the source IP would be changed to the node's private IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: azure-vote-front\nspec:\n  type: LoadBalancer\n  externalTrafficPolicy: Local\n  ports:\n  - port: 80\n  selector:\n    app: azure-vote-front\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Service Account\nDESCRIPTION: Creates a Kubernetes service account and annotates it with the managed identity's client ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-deploy-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport SERVICE_ACCOUNT_NAMESPACE=\"default\"\nexport SERVICE_ACCOUNT_NAME=\"workload-identity-sa$RANDOM_ID\"\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: \"${USER_ASSIGNED_CLIENT_ID}\"\n  name: \"${SERVICE_ACCOUNT_NAME}\"\n  namespace: \"${SERVICE_ACCOUNT_NAMESPACE}\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Authorized IP Ranges using PowerShell\nDESCRIPTION: Creates an AKS cluster with the API server authorized IP ranges feature enabled using PowerShell. The example allows only the 73.140.245.0/24 IP range to access the Kubernetes API server.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_1\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeVmSetType VirtualMachineScaleSets -LoadBalancerSku Standard -ApiServerAccessAuthorizedIpRange '73.140.245.0/24' -GenerateSshKey\n```\n\n----------------------------------------\n\nTITLE: Assigning Key Vault Crypto Roles using Azure CLI\nDESCRIPTION: Commands to assign Key Vault Crypto Officer and Crypto User roles to the managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create --role \"Key Vault Crypto Officer\" --assignee \"${USER_ASSIGNED_IDENTITY_NAME}\" --scope $AKV_SCOPE\n\naz role assignment create --role \"Key Vault Crypto User\" --assignee \"${USER_ASSIGNED_IDENTITY_NAME}\" --scope $AKV_SCOPE\n```\n\n----------------------------------------\n\nTITLE: Updating existing AKS cluster to enable KMS etcd encryption in Azure CLI\nDESCRIPTION: This command updates an existing AKS cluster to enable KMS etcd encryption using a specified key vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_11\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks update --name myAKSCluster --resource-group MyResourceGroup --enable-azure-keyvault-kms --azure-keyvault-kms-key-vault-network-access \"Public\" --azure-keyvault-kms-key-id $KEY_ID\n```\n\n----------------------------------------\n\nTITLE: Deploying Kafka Cluster with Strimzi Operator in Kubernetes\nDESCRIPTION: This snippet deploys a Kafka cluster using the Strimzi Kafka Operator. It configures Kafka core settings, Cruise Control, Entity Operator, and JMX metrics. The deployment uses node pools and enables KRaft (Kafka Raft) mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n kafka -f - <<EOF\n---\napiVersion: kafka.strimzi.io/v1beta2\nkind: Kafka\nmetadata:\n  name: kafka-aks-cluster\n  annotations:\n    strimzi.io/node-pools: enabled\n    strimzi.io/kraft: enabled\nspec:\n  kafka:\n    version: 3.9.0\n    metadataVersion: 3.9-IV0\n    rack:\n      topologyKey: topology.kubernetes.io/zone\n    template:\n      podDisruptionBudget:\n        maxUnavailable: 2\n    listeners:\n      - name: internal\n        port: 9092\n        type: internal\n        tls: true\n    config:\n      offsets.topic.replication.factor: 3\n      transaction.state.log.replication.factor: 3\n      transaction.state.log.min.isr: 2\n      default.replication.factor: 3\n      min.insync.replicas: 2\n      log.segment.bytes: 1073741824  \n      log.retention.hours: 168  \n      log.retention.check.interval.ms: 300000 \n    metricsConfig:\n      type: jmxPrometheusExporter\n      valueFrom:\n        configMapKeyRef:\n          name: kafka-metrics\n          key: kafka-metrics-config.yaml\n  cruiseControl:\n    metricsConfig:\n      type: jmxPrometheusExporter\n      valueFrom:\n        configMapKeyRef:\n          name: cruise-control-metrics\n          key: metrics-config.yaml\n  entityOperator:\n    topicOperator: {}\n    userOperator: {}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Monitoring Ingress for Public IP Assignment\nDESCRIPTION: Watches the store-front ingress resource to monitor when a public IP address is assigned, which indicates the application is accessible from the internet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get ingress store-front -n aks-store-demo --watch\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for AKS and Istio Configuration\nDESCRIPTION: Script to define environment variables for cluster name, resource group, and location, which are used throughout the Istio installation process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport CLUSTER=<cluster-name>\nexport RESOURCE_GROUP=<resource-group-name>\nexport LOCATION=<location>\n```\n\n----------------------------------------\n\nTITLE: Restoring PostgreSQL Backup Using CNPG Cluster CRD\nDESCRIPTION: Deploys a new PostgreSQL cluster that bootstraps from a previously created backup stored in Azure Blob Storage. Configures storage, WAL, and workload identity settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: postgresql.cnpg.io/v1\nkind: Cluster\nmetadata:\n  name: $PG_PRIMARY_CLUSTER_NAME_RECOVERED\nspec:\n  inheritedMetadata:\n    annotations:\n      service.beta.kubernetes.io/azure-dns-label-name: $AKS_PRIMARY_CLUSTER_PG_DNSPREFIX\n    labels:\n      azure.workload.identity/use: \"true\"\n  instances: 1\n  affinity:\n    nodeSelector:\n      workload: postgres\n  bootstrap:\n    recovery:\n      source: clusterBackup\n  storage:\n    size: 2Gi\n    pvcTemplate:\n      accessModes:\n        - ReadWriteOnce\n      resources:\n        requests:\n          storage: 2Gi\n      storageClassName: managed-csi-premium\n      volumeMode: Filesystem\n  walStorage:\n    size: 2Gi\n    pvcTemplate:\n      accessModes:\n        - ReadWriteOnce\n      resources:\n        requests:\n          storage: 2Gi\n      storageClassName: managed-csi-premium\n      volumeMode: Filesystem\n  serviceAccountTemplate:\n    metadata:\n      annotations:\n        azure.workload.identity/client-id: \"$AKS_UAMI_WORKLOAD_CLIENTID\"\n      labels:\n        azure.workload.identity/use: \"true\"\n  externalClusters:\n    - name: clusterBackup\n      barmanObjectStore:\n        destinationPath: https://${PG_PRIMARY_STORAGE_ACCOUNT_NAME}.blob.core.windows.net/backups\n        serverName: $PG_PRIMARY_CLUSTER_NAME\n        azureCredentials:\n          inheritFromAzureAD: true\n        wal:\n          maxParallel: 8\n```\n\n----------------------------------------\n\nTITLE: Installing and Updating aks-preview CLI Extension\nDESCRIPTION: Commands to install or update the aks-preview Azure CLI extension, which is required to access preview features for AKS including control plane metrics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Install the aks-preview extension\naz extension add --name aks-preview\n\n# Update the aks-preview extension\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group in Azure for AKS Cluster\nDESCRIPTION: This command creates a new resource group named 'myResourceGroup' in the East US region using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Permanently Removing Node Initialization Taints\nDESCRIPTION: Updates the AKS cluster to permanently remove initialization taints using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name $CLUSTER_NAME \\\n--node-init-taints \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Developer Access to AKS API Server\nDESCRIPTION: Retrieves current IP address and adds it to approved ranges for API server access. Includes getting cluster credentials for kubectl access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nCURRENT_IP=$(dig @resolver1.opendns.com ANY myip.opendns.com +short)\naz aks update --resource-group $RG --name $AKSNAME --api-server-authorized-ip-ranges $CURRENT_IP/32\naz aks get-credentials --resource-group $RG --name $AKSNAME\n```\n\n----------------------------------------\n\nTITLE: Importing a container image to ACR\nDESCRIPTION: Command to import a sample container image from Docker Hub to your ACR instance for testing Artifact Streaming.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr import --source docker.io/jupyter/all-spark-notebook:latest --repository jupyter/all-spark-notebook:latest\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio Gateway and Virtual Service Configuration\nDESCRIPTION: Kubernetes manifest that defines an Istio Gateway and VirtualService for HTTPS traffic routing with TLS termination. The gateway is configured for port 443 with SIMPLE TLS mode using a credential.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: networking.istio.io/v1beta1\nkind: Gateway\nmetadata:\n  name: bookinfo-gateway\nspec:\n  selector:\n    istio: aks-istio-ingressgateway-external\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: productpage-credential\n    hosts:\n    - productpage.bookinfo.com\n---\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: productpage-vs\nspec:\n  hosts:\n  - productpage.bookinfo.com\n  gateways:\n  - bookinfo-gateway\n  http:\n  - match:\n    - uri:\n        exact: /productpage\n    - uri:\n        prefix: /static\n    - uri:\n        exact: /login\n    - uri:\n        exact: /logout\n    - uri:\n        prefix: /api/v1/products\n    route:\n    - destination:\n        port:\n          number: 9080\n        host: productpage\nEOF\n```\n\n----------------------------------------\n\nTITLE: Registering the KubeProxyConfigurationPreview Feature Flag\nDESCRIPTION: Commands to register and verify the KubeProxyConfigurationPreview feature flag, which is necessary to enable kube-proxy configuration in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kube-proxy.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"KubeProxyConfigurationPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"KubeProxyConfigurationPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Configuring AKS Infrastructure with Terraform\nDESCRIPTION: Terraform configuration block defining the AKS cluster settings including networking, ACR integration, node pools, and identity configurations. Sets up a Kafka-optimized node pool with specific VM size and labels.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_12\n\nLANGUAGE: hcl\nCODE:\n```\nnetwork = {\n  name                = module.avm_res_network_virtualnetwork.name\n  resource_group_name = var.resource_group_name\n  node_subnet_id      = module.avm_res_network_virtualnetwork.subnets[\"subnet\"].resource_id\n  pod_cidr            = \"192.168.0.0/16\"\n}\n...\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Storage Class with Premium ZRS Disk in Kubernetes\nDESCRIPTION: YAML configuration for creating a custom storage class that uses premium managed disks with zone-redundant storage (ZRS) in Azure Kubernetes Service. This storage class retains the underlying Azure Disk when pods are deleted and supports volume expansion. It uses WaitForFirstConsumer binding mode for better scheduling.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-storage.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: managed-premium-retain\nprovisioner: disk.csi.azure.com\nparameters:\n  skuName: Premium_ZRS\nreclaimPolicy: Retain\nvolumeBindingMode: WaitForFirstConsumer\nallowVolumeExpansion: true\n```\n\n----------------------------------------\n\nTITLE: Applying NFS Storage Class in AKS\nDESCRIPTION: Command to create the Azure Files NFS storage class in the Kubernetes cluster, enabling NFS v4.1 protocol support for applications requiring POSIX file system functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nfs-sc.yaml\n```\n\n----------------------------------------\n\nTITLE: Custom Storage Class Definition for Azure Disk CSI\nDESCRIPTION: YAML manifest for creating a custom storage class with WaitForFirstConsumer volume binding mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: azuredisk-csi-waitforfirstconsumer\nprovisioner: disk.csi.azure.com\nparameters:\n  skuname: StandardSSD_LRS\nallowVolumeExpansion: true\nreclaimPolicy: Delete\nvolumeBindingMode: WaitForFirstConsumer\n```\n\n----------------------------------------\n\nTITLE: Creating a Kafka User with TLS Authentication and ACLs\nDESCRIPTION: Command to create a Kafka user named 'test-user' with TLS authentication and specific ACLs for reading and writing to the test-topic using the Strimzi User Operator.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF  \napiVersion: kafka.strimzi.io/v1beta2  \nkind: KafkaUser  \nmetadata:  \n  name: test-user  \n  labels:  \n    strimzi.io/cluster: kafka-aks-cluster  \nspec:  \n  authentication:  \n    type: tls  \n  authorization:  \n    type: simple  \n    acls:  \n      - resource:  \n          type: topic  \n          name: test-topic  \n          patternType: literal  \n        operations:  \n          - Describe  \n          - Read  \n        host: \"*\"  \n      - resource:  \n          type: group  \n          name: test-group  \n          patternType: literal  \n        operations:  \n          - Read  \n        host: \"*\"  \n      - resource:  \n          type: topic  \n          name: test-topic  \n          patternType: literal  \n        operations:  \n          - Create  \n          - Describe  \n          - Write  \n        host: \"*\"  \nEOF\n```\n\n----------------------------------------\n\nTITLE: Describing Node Details to Verify GPU Availability\nDESCRIPTION: Command to describe a specific node to view its detailed information, including GPU capacity which should show nvidia.com/gpu: 1 for GPU-enabled nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nkubectl describe node aks-gpunp-28993262-0\n```\n\n----------------------------------------\n\nTITLE: CIS Benchmark Results Table for Windows Server 2022 in AKS\nDESCRIPTION: A markdown table listing the results of CIS Azure Compute Microsoft Windows Server 2022 Benchmark v1.0.0 recommendations as applied to AKS host virtual machines. It includes CIS paragraph numbers, recommendation descriptions, status (Pass/Fail/N/A), and reasons for certain configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cis-windows.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| CIS paragraph number | Recommendation description|Status| Reason |\n|---|---|---|---|\n| 1.1.1 | Ensure 'Enforce password history' is set to '24 or more password(s)' | Fail ||\n| 1.1.2 | Ensure 'Maximum password age' is set to '365 or fewer days, but not 0' | Pass ||\n| 1.1.3 | Ensure 'Minimum password age' is set to '1 or more day(s)' | Fail |\n| 1.1.4 | Ensure 'Minimum password length' is set to '14 or more character(s)' | Fail ||\n| 1.1.5 | Ensure 'Password must meet complexity requirements' is set to 'Enabled' | Pass ||\n| 1.1.6 | Ensure 'Store passwords using reversible encryption' is set to 'Disabled' | Pass ||\n| 2.2.1 | Ensure 'Access Credential Manager as a trusted caller' is set to 'No One' | Pass ||\n| 2.2.2 | Ensure 'Access this computer from the network' is set to 'Administrators, Authenticated Users, ENTERPRISE DOMAIN CONTROLLERS' (DC only) | Fail ||\n| 2.2.4 | Ensure 'Act as part of the operating system' is set to 'No One' | Pass ||\n| 2.2.5 | Ensure 'Add workstations to domain' is set to 'Administrators' (DC only) | N/A ||\n| 2.2.6 | Ensure 'Adjust memory quotas for a process' is set to 'Administrators, LOCAL SERVICE, NETWORK SERVICE' | Pass ||\n| 2.2.7 | Ensure 'Allow log on locally' is set to 'Administrators' | Fail ||\n| 2.2.8 | Ensure 'Allow log on through Remote Desktop Services' is set to 'Administrators' (DC only) | Pass ||\n| 2.2.10 | Ensure 'Back up files and directories' is set to 'Administrators, Backup Operators' | Pass ||\n| 2.2.11 | Ensure 'Change the system time' is set to 'Administrators, LOCAL SERVICE' | Pass ||\n| 2.2.12 | Ensure 'Change the time zone' is set to 'Administrators, LOCAL SERVICE' | Pass ||\n| 2.2.13 | Ensure 'Create a pagefile' is set to 'Administrators' | Pass ||\n| 2.2.14 | Ensure 'Create a token object' is set to 'No One' | Pass ||\n| 2.2.15 | Ensure 'Create global objects' is set to 'Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE' | Pass ||\n| 2.2.16 | Ensure 'Create permanent shared objects' is set to 'No One' | Pass ||\n| 2.2.17 | Ensure 'Create symbolic links' is set to 'Administrators' (DC only) | Pass ||\n| 2.2.19 | Ensure 'Debug programs' is set to 'Administrators' | Pass ||\n| 2.2.20 | Ensure 'Deny access to this computer from the network' to include 'Guests' | Fail ||\n| 2.2.21 | Ensure 'Deny log on as a batch job' to include 'Guests' | Fail ||\n| 2.2.22 | Ensure 'Deny log on as a service' to include 'Guests' | Fail ||\n| 2.2.23 | Ensure 'Deny log on locally' to include 'Guests' | Fail ||\n| 2.2.24 | Ensure 'Deny log on through Remote Desktop Services' to include 'Guests' | Fail ||\n| 2.2.25 | Ensure 'Enable computer and user accounts to be trusted for delegation' is set to 'Administrators' (DC only) | Pass ||\n| 2.2.27 | Ensure 'Force shutdown from a remote system' is set to 'Administrators' | Pass ||\n| 2.2.28 | Ensure 'Generate security audits' is set to 'LOCAL SERVICE, NETWORK SERVICE' | N/A ||\n| 2.2.29 | Ensure 'Impersonate a client after authentication' is set to 'Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE' (DC only) | Pass ||\n| 2.2.31 | Ensure 'Increase scheduling priority' is set to 'Administrators' | Fail ||\n| 2.2.32 | Ensure 'Load and unload device drivers' is set to 'Administrators' | Pass ||\n| 2.2.33 | Ensure 'Lock pages in memory' is set to 'No One' | Pass ||\n| 2.2.34 | Ensure 'Manage auditing and security log' is set to 'Administrators' and (when Exchange is running in the environment) 'Exchange Servers' (DC only) | Pass ||\n| 2.2.36 | Ensure 'Modify an object label' is set to 'No One' | Pass ||\n| 2.2.37 | Ensure 'Modify firmware environment values' is set to 'Administrators' | Pass ||\n| 2.2.38 | Ensure 'Perform volume maintenance tasks' is set to 'Administrators' | Pass ||\n| 2.2.39 | Ensure 'Profile single process' is set to 'Administrators' | Pass ||\n| 2.2.40 | Ensure 'Profile system performance' is set to 'Administrators, NT SERVICE\\WdiServiceHost' | Pass ||\n| 2.2.41 | Ensure 'Replace a process level token' is set to 'LOCAL SERVICE, NETWORK SERVICE' | Pass ||\n| 2.2.42 | Ensure 'Restore files and directories' is set to 'Administrators, Backup Operators' | Pass ||\n| 2.2.43 | Ensure 'Shut down the system' is set to 'Administrators, Backup Operators' | Pass ||\n| 2.2.44 | Ensure 'Synchronize directory service data' is set to 'No One' (DC only) | N/A ||\n| 2.2.45 | Ensure 'Take ownership of files or other objects' is set to 'Administrators' | Pass ||\n| 2.3.1.1 | Ensure 'Accounts: Block Microsoft accounts' is set to 'Users can't add or log on with Microsoft accounts' | Pass ||\n| 2.3.1.3 | Ensure 'Accounts: Limit local account use of blank passwords to console logon only' is set to 'Enabled' | Pass ||\n| 2.3.1.4 | Configure 'Accounts: Rename administrator account' | Pass ||\n| 2.3.1.5 | Configure 'Accounts: Rename guest account' | Pass ||\n| 2.3.2.1 | Ensure 'Audit: Force audit policy subcategory settings (Windows Vista or later) to override audit policy category settings' is set to 'Enabled' | Pass ||\n| 2.3.2.2 | Ensure 'Audit: Shut down system immediately if unable to log security audits' is set to 'Disabled' | Pass ||\n| 2.3.4.1 | Ensure 'Devices: Allowed to format and eject removable media' is set to 'Administrators' | Pass ||\n| 2.3.4.2 | Ensure 'Devices: Prevent users from installing printer drivers' is set to 'Enabled' | Pass ||\n| 2.3.5.1 | Ensure 'Domain controller: Allow server operators to schedule tasks' is set to 'Disabled' (DC only) | N/A ||\n| 2.3.5.2 | Ensure 'Domain controller: Allow vulnerable Netlogon secure channel connections' is set to 'Not Configured' (DC Only) | N/A ||\n| 2.3.5.3 | Ensure 'Domain controller: LDAP server channel binding token requirements' is set to 'Always' (DC Only) | N/A ||\n| 2.3.5.4 | Ensure 'Domain controller: LDAP server signing requirements' is set to 'Require signing' (DC only) | N/A ||\n| 2.3.5.5 | Ensure 'Domain controller: Refuse machine account password changes' is set to 'Disabled' (DC only) | N/A ||\n| 2.3.6.1 | Ensure 'Domain member: Digitally encrypt or sign secure channel data (always)' is set to 'Enabled' | Pass ||\n| 2.3.6.2 | Ensure 'Domain member: Digitally encrypt secure channel data (when possible)' is set to 'Enabled' | Pass ||\n| 2.3.6.3 | Ensure 'Domain member: Digitally sign secure channel data (when possible)' is set to 'Enabled' | Pass ||\n| 2.3.6.4 | Ensure 'Domain member: Disable machine account password changes' is set to 'Disabled' | Pass ||\n| 2.3.6.5 | Ensure 'Domain member: Maximum machine account password age' is set to '30 or fewer days, but not 0' | Pass ||\n| 2.3.7.1 | Ensure 'Interactive logon: Machine inactivity limit' is set to '900 or fewer second(s), but not 0' | Pass ||\n| 2.3.7.2 | Configure 'Interactive logon: Message text for users attempting to log on' | Fail ||\n| 2.3.7.3 | Configure 'Interactive logon: Message title for users attempting to log on' | Fail ||\n| 2.3.7.4 | Ensure 'Interactive logon: Prompt user to change password before expiration' is set to 'between 5 and 14 days' | Pass ||\n| 2.3.8.1 | Ensure 'Microsoft network client: Digitally sign communications (always)' is set to 'Enabled' | Fail ||\n| 2.3.8.2 | Ensure 'Microsoft network client: Digitally sign communications (if server agrees)' is set to 'Enabled' | Pass ||\n| 2.3.8.3 | Ensure 'Microsoft network client: Send unencrypted password to third-party SMB servers' is set to 'Disabled' | Pass ||\n| 2.3.9.1 | Ensure 'Microsoft network server: Amount of idle time required before suspending session' is set to '15 or fewer minute(s)' | Pass ||\n| 2.3.9.2 | Ensure 'Microsoft network server: Digitally sign communications (always)' is set to 'Enabled' | Fail ||\n| 2.3.9.3 | Ensure 'Microsoft network server: Digitally sign communications (if client agrees)' is set to 'Enabled' | Fail ||\n| 2.3.9.4 | Ensure 'Microsoft network server: Disconnect clients when logon hours expire' is set to 'Enabled' | Pass ||\n| 2.3.10.1 | Ensure 'Network access: Allow anonymous SID/Name translation' is set to 'Disabled' | Pass ||\n| 2.3.10.4 | Ensure 'Network access: Let Everyone permissions apply to anonymous users' is set to 'Disabled' | Pass ||\n| 2.3.10.5 | Configure 'Network access: Named Pipes that can be accessed anonymously' (DC only) | Pass ||\n| 2.3.10.7 | Configure 'Network access: Remotely accessible registry paths' is configured | Pass ||\n| 2.3.10.8 | Configure 'Network access: Remotely accessible registry paths and sub-paths' is configured | Pass ||\n| 2.3.10.9 | Ensure 'Network access: Restrict anonymous access to Named Pipes and Shares' is set to 'Enabled' | Pass ||\n```\n\n----------------------------------------\n\nTITLE: Deploying Falcon 7B-instruct Model with KAITO on AKS\nDESCRIPTION: This command deploys the Falcon 7B-instruct model preset from the KAITO model repository using kubectl. It applies a YAML configuration file to set up the KAITO workspace for the model.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/Azure/kaito/main/examples/inference/kaito_workspace_falcon_7b-instruct.yaml\n```\n\n----------------------------------------\n\nTITLE: NVIDIA Device Plugin DaemonSet YAML Configuration\nDESCRIPTION: This YAML manifest defines a DaemonSet for the NVIDIA device plugin, which is necessary for GPU support in Kubernetes. It includes tolerations for GPU nodes and mounts the necessary volumes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: nvidia-device-plugin-daemonset\n  namespace: gpu-resources\nspec:\n  selector:\n    matchLabels:\n      name: nvidia-device-plugin-ds\n  updateStrategy:\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        name: nvidia-device-plugin-ds\n    spec:\n      tolerations:\n      - key: \"sku\"\n        operator: \"Equal\"\n        value: \"gpu\"\n        effect: \"NoSchedule\"\n      priorityClassName: \"system-node-critical\"\n      containers:\n      - image: nvcr.io/nvidia/k8s-device-plugin:v0.17.0\n        name: nvidia-device-plugin-ctr\n        env:\n          - name: FAIL_ON_INIT_ERROR\n            value: \"false\"\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            drop: [\"ALL\"]\n        volumeMounts:\n        - name: device-plugin\n          mountPath: /var/lib/kubelet/device-plugins\n      volumes:\n      - name: device-plugin\n        hostPath:\n          path: /var/lib/kubelet/device-plugins\n```\n\n----------------------------------------\n\nTITLE: Workload Identity Authentication for AKS\nDESCRIPTION: Configures workload identity authentication which uses federated identity credentials with Microsoft Entra. Sets KUBECONFIG path and converts kubeconfig using workload identity login method.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l workloadidentity\n```\n\n----------------------------------------\n\nTITLE: Configuring PickN Placement Type with Cluster Affinity\nDESCRIPTION: Example of a ClusterResourcePlacement using PickN placement type to deploy workloads to three clusters with required and preferred affinity conditions for critical workloads.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-resource-propagation.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-pickn-01\nspec:\n  resourceSelectors:\n    - ...\n  policy:\n    placementType: PickN\n    numberOfClusters: 3\n    affinity:\n        clusterAffinity:\n            preferredDuringSchedulingIgnoredDuringExecution:\n              weight: 20\n              preference:\n              - labelSelector:\n                  matchLabels:\n                    critical-level: 1\n            requiredDuringSchedulingIgnoredDuringExecution:\n                clusterSelectorTerms:\n                - labelSelector:\n                    matchLabels:\n                      critical-allowed: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Installing Azure App Configuration Extension on AKS with Azure CLI\nDESCRIPTION: Command to create the Azure App Configuration extension on an AKS cluster using Azure CLI, which installs the Azure App Configuration Kubernetes Provider.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n    --cluster-name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --name appconfigurationkubernetesprovider \\\n    --extension-type Microsoft.AppConfiguration\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceAccount for Workloads in AKS\nDESCRIPTION: This snippet creates a new ServiceAccount in Kubernetes with annotations for Azure Workload Identity. It uses environment variables for the managed identity client ID and name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: $MI_CLIENT_ID\n  name: $MI_NAME\nEOF\n```\n\n----------------------------------------\n\nTITLE: Checking pod status in AKS Store namespace\nDESCRIPTION: Verifies the status of the deployed pods in the aks-store-demo namespace to ensure all components are running correctly before proceeding.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n aks-store-demo\n```\n\n----------------------------------------\n\nTITLE: Creating IIS Pod with Azure NetApp Files Volume Mount\nDESCRIPTION: YAML manifest for deploying an IIS pod that mounts an Azure NetApp Files SMB share at /inetpub/wwwroot. Includes resource limits, port configuration, and volume mount specifications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod \nmetadata:\n  name: iis-pod\n  labels:\n     app: web\nspec:\n  nodeSelector:\n    \"kubernetes.io/os\": windows\n  volumes:\n  - name: smb\n    persistentVolumeClaim:\n      claimName: anf-pvc-smb \n  containers:\n  - name: web\n    image: mcr.microsoft.com/windows/servercore/iis:windowsservercore \n    resources:\n      limits:\n        cpu: 1\n        memory: 800M\n    ports:\n      - containerPort: 80\n    volumeMounts:\n    - name: smb\n      mountPath: \"/inetpub/wwwroot\"\n      readOnly: false\n```\n\n----------------------------------------\n\nTITLE: Updating the aks-preview Azure CLI Extension\nDESCRIPTION: This command updates the aks-preview extension to the latest version, ensuring access to the most recent preview features and fixes for AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Defining a Deployment for Virtual Node in YAML\nDESCRIPTION: This YAML defines a Kubernetes Deployment that schedules a pod on the virtual node using nodeSelector and tolerations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: aci-helloworld\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: aci-helloworld\n  template:\n    metadata:\n      labels:\n        app: aci-helloworld\n    spec:\n      containers:\n      - name: aci-helloworld\n        image: mcr.microsoft.com/azuredocs/aci-helloworld\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        kubernetes.io/role: agent\n        beta.kubernetes.io/os: linux\n        type: virtual-kubelet\n      tolerations:\n      - key: virtual-kubelet.io/provider\n        operator: Exists\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Files Storage Class with Mount Options\nDESCRIPTION: YAML configuration for creating a storage class with specific mount options including file permissions and caching settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: my-azurefile\nprovisioner: file.csi.azure.com\nallowVolumeExpansion: true\nmountOptions:\n  - dir_mode=0777\n  - file_mode=0777\n  - uid=0\n  - gid=0\n  - mfsymlinks\n  - cache=strict\n  - actimeo=30\n  - nobrl\nparameters:\n  skuName: Premium_LRS\n```\n\n----------------------------------------\n\nTITLE: Enabling AKS-managed Secrets Store CSI Driver\nDESCRIPTION: Azure CLI command to enable the Azure Key Vault secrets provider addon on an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks enable-addons --addons azure-keyvault-secrets-provider --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Configuring API Server Access with PowerShell\nDESCRIPTION: Commands to retrieve the current IP address and update AKS cluster with authorized IP ranges using Azure PowerShell. This enables controlling API server access by specifying allowed IP ranges.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-portal.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$CURRENT_IP = (Invoke-RestMethod -Uri http://ipinfo.io/json).ip\n```\n\nLANGUAGE: powershell\nCODE:\n```\nSet-AzAksCluster -ResourceGroupName <resource-group-name> -Name <aks-cluster-name> -ApiServerAccessAuthorizedIpRange $CURRENT_IP/32\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Principal using Azure PowerShell\nDESCRIPTION: Uses the New-AzADServicePrincipal cmdlet to create a new Microsoft Entra service principal for AKS with the output stored in a variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_1\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzADServicePrincipal -DisplayName myAKSClusterServicePrincipal -OutVariable sp\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Namespace for wasmCloud\nDESCRIPTION: Creates a dedicated namespace for wasmCloud in the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace wasmcloud\n```\n\n----------------------------------------\n\nTITLE: Implementing Network Policy for Instance Metadata API Restriction in AKS\nDESCRIPTION: YAML configuration to create a NetworkPolicy that blocks pod egress access to the instance metadata endpoint (169.254.169.254/32). This policy helps secure the cluster by preventing pods from accessing sensitive instance metadata.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-cluster-security.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: restrict-instance-metadata\nspec:\n  podSelector:\n    matchLabels: {}\n  policyTypes:\n  - Egress\n  egress:\n  - to:\n    - ipBlock:\n        cidr: 10.10.0.0/0#example\n        except:\n        - 169.254.169.254/32\n```\n\n----------------------------------------\n\nTITLE: Registering WindowsNetworkPolicyPreview Feature Flag in Azure CLI\nDESCRIPTION: Commands to register the WindowsNetworkPolicyPreview feature flag with Microsoft.ContainerService namespace. This is required before creating an AKS cluster with network policy support for Windows nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"WindowsNetworkPolicyPreview\"\n```\n\n----------------------------------------\n\nTITLE: Creating a New AKS Cluster with Security Patch Channel Using Azure CLI\nDESCRIPTION: This command creates a new AKS cluster with the SecurityPatch node OS upgrade channel enabled, which automatically applies security patches to nodes with AKS-tested updates and safe deployment practices.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/auto-upgrade-node-os-image.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-os-upgrade-channel SecurityPatch \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Patching PersistentVolume ReclaimPolicy in Kubernetes\nDESCRIPTION: Command to update an existing PersistentVolume's ReclaimPolicy from Delete to Retain. This is an essential first step in migrating volumes to ensure data isn't lost during the transition process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch pv pvName -p '{\"spec\":{\"persistentVolumeReclaimPolicy\":\"Retain\"}}'\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Authorized IP Ranges using Azure CLI\nDESCRIPTION: Creates an AKS cluster with the API server authorized IP ranges feature enabled, allowing only specified IP address ranges to access the control plane. The example allows the 73.140.245.0/24 range.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 73.140.245.0/24 --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress with TLS\nDESCRIPTION: YAML configuration for setting up an ingress resource with TLS configuration and path-based routing rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress-tls\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /$2\nspec:\n  ingressClassName: nginx\n  tls:\n  - hosts:\n    - demo.azure.com\n    secretName: ingress-tls-csi\n  rules:\n  - host: demo.azure.com\n    http:\n      paths:\n      - path: /hello-world-one(/|$)(.*)\n        pathType: Prefix\n        backend:\n          service:\n            name: aks-helloworld-one\n            port:\n              number: 80\n      - path: /hello-world-two(/|$)(.*)\n        pathType: Prefix      \n        backend:\n          service:\n            name: aks-helloworld-two\n            port:\n              number: 80\n      - path: /(.*)\n        pathType: Prefix      \n        backend:\n          service:\n            name: aks-helloworld-one\n            port:\n              number: 80\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure CLI\nDESCRIPTION: Creates an AKS cluster named 'myAKSCluster' in the previously created resource group using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz aks create --resource-group myResourceGroup --name myAKSCluster --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Enabling Blob CSI Driver on New AKS Cluster\nDESCRIPTION: Azure CLI command to create a new AKS cluster with Blob storage CSI driver enabled using the --enable-blob-driver parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-blob-csi.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --enable-blob-driver \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating a Storage Class with NFS Protocol in Azure Kubernetes Service\nDESCRIPTION: This YAML manifest configures a storage class that mounts Azure Blob storage using the NFS protocol. It includes custom parameters like 'tags' for environment labeling and 'mountOptions' for connection optimization.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_3\n\nLANGUAGE: yml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: azureblob-nfs-premium\nprovisioner: blob.csi.azure.com\nparameters:\n  protocol: nfs\n  tags: environment=Development\nvolumeBindingMode: Immediate\nallowVolumeExpansion: true\nmountOptions:\n  - nconnect=4\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Key Vault using DefaultAzureCredential in C#\nDESCRIPTION: This C# code snippet demonstrates how to use DefaultAzureCredential from Azure.Identity to authenticate with Azure Key Vault and retrieve a secret. It uses environment variables for the Key Vault URL and secret name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing Azure.Identity;\nusing Azure.Security.KeyVault.Secrets;\n\nstring keyVaultUrl = Environment.GetEnvironmentVariable(\"KEYVAULT_URL\");\nstring secretName = Environment.GetEnvironmentVariable(\"SECRET_NAME\");\n\nvar client = new SecretClient(\n    new Uri(keyVaultUrl),\n    new DefaultAzureCredential());\n\nKeyVaultSecret secret = await client.GetSecretAsync(secretName);\n```\n\n----------------------------------------\n\nTITLE: Creating Private Endpoint for ACR in Azure CLI\nDESCRIPTION: This snippet creates a private endpoint for the ACR, linking it to a specific virtual network and subnet. It then retrieves the private IP addresses for the registry and data endpoints.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz network private-endpoint create --name myPrivateEndpoint --resource-group ${RESOURCE_GROUP} --vnet-name ${VNET_NAME} --subnet ${ACR_SUBNET_NAME} --private-connection-resource-id ${REGISTRY_ID} --group-id registry --connection-name myConnection\n\nNETWORK_INTERFACE_ID=$(az network private-endpoint show --name myPrivateEndpoint --resource-group ${RESOURCE_GROUP} --query 'networkInterfaces[0].id' --output tsv)\n\nREGISTRY_PRIVATE_IP=$(az network nic show --ids ${NETWORK_INTERFACE_ID} --query \"ipConfigurations[?privateLinkConnectionProperties.requiredMemberName=='registry'].privateIPAddress\" --output tsv)\n\nDATA_ENDPOINT_PRIVATE_IP=$(az network nic show --ids ${NETWORK_INTERFACE_ID} --query \"ipConfigurations[?privateLinkConnectionProperties.requiredMemberName=='registry_data_$LOCATION'].privateIPAddress\" --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Disabling Local Accounts on Existing AKS Cluster\nDESCRIPTION: This command disables local accounts on an existing AKS cluster with Microsoft Entra integration. It uses the 'az aks update' command with the 'disable-local-accounts' parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-local-accounts-managed-azure-ad.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group <resource-group> --name <cluster-name> --disable-local-accounts\n```\n\n----------------------------------------\n\nTITLE: Adding Linux Node Pool with Custom Configuration\nDESCRIPTION: This Azure CLI command adds a new Linux node pool to an existing AKS cluster using a custom kubelet configuration file. It specifies the node pool name, cluster name, resource group, and path to the kubelet configuration JSON file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-node-configuration.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --name mynodepool1 --cluster-name myAKSCluster --resource-group myResourceGroup --kubelet-config ./linuxkubeletconfig.json\n```\n\n----------------------------------------\n\nTITLE: Adding an Azure Linux Node Pool to an AKS Cluster\nDESCRIPTION: Creates a node pool using the Azure Linux OS SKU, which provides high reliability, security, and improved performance for container workloads compared to standard Ubuntu nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --name $AZ_LINUX_NODE_POOL_NAME \\\n    --os-sku AzureLinux\n```\n\n----------------------------------------\n\nTITLE: Defining Storage Class for Ultra Disks in Kubernetes YAML\nDESCRIPTION: This YAML manifest defines a storage class for ultra disks in Kubernetes. It specifies the provisioner, volume binding mode, and parameters for the ultra disk, including IOPS and throughput settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-ultra-disks.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: ultra-disk-sc\nprovisioner: disk.csi.azure.com # replace with \"kubernetes.io/azure-disk\" if aks version is less than 1.21\nvolumeBindingMode: WaitForFirstConsumer # optional, but recommended if you want to wait until the pod that will use this disk is created \nparameters:\n  skuname: UltraSSD_LRS\n  kind: managed\n  cachingMode: None\n  diskIopsReadWrite: \"2000\"  # minimum value: 2 IOPS/GiB \n  diskMbpsReadWrite: \"320\"   # minimum value: 0.032/GiB\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure Key Vault Integration for AKS Application Routing\nDESCRIPTION: Updates the AKS application routing add-on to enable Azure Key Vault integration and apply necessary role assignments.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks approuting update --resource-group <ResourceGroupName> --name <ClusterName> --enable-kv --attach-kv ${KEYVAULTID}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing AKS Cluster to Use System-Assigned Managed Identity\nDESCRIPTION: Command to update an existing AKS cluster that is using a service principal to use a system-assigned managed identity instead.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --enable-managed-identity\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with Node Selector in Kubernetes\nDESCRIPTION: YAML configuration for a pod that includes a node selector to target nodes with specific labels, directing the pod to run on labeled nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-advanced-scheduler.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: app\nspec:\n  containers:\n  - name: app\n    image: <your-workload>:gpu\n    resources:\n      requests:\n        cpu: 0.5\n        memory: 2Gi\n      limits:\n        cpu: 4.0\n        memory: 16Gi\n  nodeSelector:\n      hardware: highmem\n```\n\n----------------------------------------\n\nTITLE: Setting AKS Cluster Variables for Network Policy Implementation\nDESCRIPTION: Sets environment variables for creating an AKS cluster with network policies. These variables define the resource group name, cluster name, and location for the deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$RESOURCE_GROUP_NAME=myResourceGroup-NP\n$CLUSTER_NAME=myAKSCluster\n$LOCATION=canadaeast\n```\n\n----------------------------------------\n\nTITLE: Installing External Secrets Operator\nDESCRIPTION: Uses Helm to install the External Secrets Operator for managing external secrets in Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add external-secrets https://charts.external-secrets.io\nhelm repo update\n\nhelm install external-secrets \\\nexternal-secrets/external-secrets \\\n--namespace ${AKS_AIRFLOW_NAMESPACE} \\\n--create-namespace \\\n--set installCRDs=true \\\n--wait\n```\n\n----------------------------------------\n\nTITLE: Creating a key in Azure Key Vault using Azure CLI\nDESCRIPTION: This command creates a new key in the specified Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz keyvault key create --name MyKeyName --vault-name MyKeyVault\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Service Principal using PowerShell\nDESCRIPTION: Creates a new AKS cluster with the New-AzAksCluster cmdlet, using the previously created PSCredential object containing service principal credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_5\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -ServicePrincipalIdAndSecret $Cred\n```\n\n----------------------------------------\n\nTITLE: Granting AKS Cluster Permissions to Resource Group\nDESCRIPTION: Azure CLI commands to ensure the cluster identity has delegated permissions to the public IP's resource group by assigning Network Contributor role.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nCLIENT_ID=$(az aks show --name <ClusterName> --resource-group <ClusterResourceGroup> --query identity.principalId -o tsv)\nRG_SCOPE=$(az group show --name myNetworkResourceGroup --query id -o tsv)\naz role assignment create \\\n    --assignee ${CLIENT_ID} \\\n    --role \"Network Contributor\" \\\n    --scope ${RG_SCOPE}\n```\n\n----------------------------------------\n\nTITLE: Finding Existing Authorized IP Ranges (Azure CLI)\nDESCRIPTION: This snippet shows how to find existing authorized IP ranges for an AKS cluster using the az aks show command with a query parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query apiServerAccessProfile.authorizedIpRanges\n```\n\n----------------------------------------\n\nTITLE: Creating a Public NGINX Ingress Controller in AKS with YAML\nDESCRIPTION: YAML manifest for creating a public-facing NGINX ingress controller with a public Azure Load Balancer. This defines the controller name, ingress class name, and controller name prefix.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\napiVersion: approuting.kubernetes.azure.com/v1alpha1\nkind: NginxIngressController\nmetadata:\n  name: nginx-public\nspec:\n  ingressClassName: nginx-public\n  controllerNamePrefix: nginx-public\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Service Account for Workload Identity\nDESCRIPTION: Creates a Kubernetes service account with the necessary annotation to link it to the Azure managed identity. This service account will be used by the workload pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport SERVICE_ACCOUNT_NAME=\"workload-identity-sa\"  # sample name; can be changed\nexport SERVICE_ACCOUNT_NAMESPACE=\"default\" # can be changed to namespace of your workload\n\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: ${USER_ASSIGNED_CLIENT_ID}\n  name: ${SERVICE_ACCOUNT_NAME}\n  namespace: ${SERVICE_ACCOUNT_NAMESPACE}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Private Link Service Configuration\nDESCRIPTION: YAML configuration for exposing Kafka cluster through Azure Private Link Services with custom DNS names and internal load balancers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nlisteners:\n  - name: private-link\n    port: 9094\n    type: loadbalancer\n    tls: true\n    configuration:\n      bootstrap:\n        alternativeNames: \n        - kafka-bootstrap.<privatedomain-pe>.com\n        annotations:\n          service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n          service.beta.kubernetes.io/azure-pls-create: \"true\"\n          service.beta.kubernetes.io/azure-pls-name: \"pls-kafka-bootstrap\" \n      brokers:\n        - broker: 0\n          advertisedHost: kafka-broker-0.<privatedomain-pe>.com\n          annotations:\n            service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n            service.beta.kubernetes.io/azure-pls-create: \"true\"\n            service.beta.kubernetes.io/azure-pls-name: \"pls-kafka-broker-0\"\n        - broker: 1\n          advertisedHost: kafka-broker-1.<privatedomain-pe>.com   \n          annotations:\n            service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n            service.beta.kubernetes.io/azure-pls-create: \"true\"\n            service.beta.kubernetes.io/azure-pls-name: \"pls-kafka-broker-1\"\n        - broker: 2\n          advertisedHost: kafka-broker-2.<privatedomain-pe>.com\n          annotations:\n            service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n            service.beta.kubernetes.io/azure-pls-create: \"true\"\n            service.beta.kubernetes.io/azure-pls-name: \"pls-kafka-broker-2\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod with Azure Files Inline Volume\nDESCRIPTION: YAML configuration for a pod that mounts an Azure Files share as an inline volume, including resource limits and mount options.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mypod\nspec:\n  nodeSelector:\n    kubernetes.io/os: linux\n  containers:\n    - image: 'mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine'\n      name: mypod\n      resources:\n        requests:\n          cpu: 100m\n          memory: 128Mi\n        limits:\n          cpu: 250m\n          memory: 256Mi\n      volumeMounts:\n        - name: azure\n          mountPath: /mnt/azure\n          readOnly: false\n  volumes:\n    - name: azure\n      csi:\n        driver: file.csi.azure.com\n        volumeAttributes:\n          secretName: azure-secret  # required\n          shareName: aksshare  # required\n          mountOptions: 'dir_mode=0777,file_mode=0777,cache=strict,actimeo=30,nosharesock,nobrl'  # optional\n```\n\n----------------------------------------\n\nTITLE: Retrieving OIDC Issuer URL to Check Configuration\nDESCRIPTION: This command retrieves the OIDC issuer URL for an AKS cluster to verify its configuration. The URL follows the pattern 'https://{region}.oic.prod-aks.azure.com/{tenant_id}/{uuid}' where {uuid} is a unique identifier for the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-oidc-issuer.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --name myAKScluster --resource-group myResourceGroup --query \"oidcIssuerProfile.issuerUrl\" -o tsv\n```\n\n----------------------------------------\n\nTITLE: Getting AKS OIDC Issuer URL\nDESCRIPTION: Retrieves the OpenID Connect (OIDC) issuer URL from the AKS cluster and saves it to an environment variable for establishing federated identity credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport AKS_OIDC_ISSUER=\"$(az aks show --name myAKSCluster --resource-group myResourceGroup --query \"oidcIssuerProfile.issuerUrl\" -o tsv)\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Valkey Primary Cluster Pods with Zone Replication\nDESCRIPTION: YAML configuration to create a StatefulSet for Valkey primary nodes with pod anti-affinity rules to ensure high availability across availability zones, along with persistent storage and security configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: valkey-masters\n  namespace: valkey\nspec:\n  serviceName: \"valkey-masters\"\n  replicas: 3\n  selector:\n    matchLabels:\n      app: valkey\n  template:\n    metadata:\n      labels:\n        app: valkey\n        appCluster: valkey-masters\n    spec:\n      terminationGracePeriodSeconds: 20\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: agentpool\n                operator: In\n                values:\n                - valkey\n              - key: topology.kubernetes.io/zone\n                operator: In\n                values:\n                - ${MY_LOCATION}-1\n            - matchExpressions:\n              - key: agentpool\n                operator: In\n                values:\n                - valkey\n              - key: topology.kubernetes.io/zone\n                operator: In\n                values:\n                - ${MY_LOCATION}-2\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: app\n                  operator: In\n                  values:\n                  - valkey\n              topologyKey: topology.kubernetes.io/zone\n          - weight: 90\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: app\n                  operator: In\n                  values:\n                  - valkey\n              topologyKey: kubernetes.io/hostname\n      containers:\n      - name: role-master-checker\n        image: \"${MY_ACR_REGISTRY}.azurecr.io/valkey:latest\"\n        command:\n          - \"/bin/bash\"\n          - \"-c\"\n        args:\n          [\n            \"while true; do role=\\$(valkey-cli --pass \\$(cat /etc/valkey-password/valkey-password-file.conf | awk '{print \\$2; exit}') role | awk '{print \\$1; exit}');     if [ \\\"\\$role\\\" = \\\"slave\\\" ]; then valkey-cli --pass \\$(cat /etc/valkey-password/valkey-password-file.conf | awk '{print \\$2; exit}') cluster failover; fi; sleep 30; done\"\n          ]\n        volumeMounts:\n        - name: valkey-password\n          mountPath: /etc/valkey-password\n          readOnly: true\n      - name: valkey\n        image: \"${MY_ACR_REGISTRY}.azurecr.io/valkey:latest\"\n        env:\n        - name: VALKEY_PASSWORD_FILE\n          value: \"/etc/valkey-password/valkey-password-file.conf\"\n        - name: MY_POD_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n        command:\n          - \"valkey-server\"\n        args:\n          - \"/conf/valkey.conf\"\n          - \"--cluster-announce-ip\"\n          - \"\\$(MY_POD_IP)\"\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"100Mi\"\n        ports:\n            - name: valkey\n              containerPort: 6379\n              protocol: \"TCP\"\n            - name: cluster\n              containerPort: 16379\n              protocol: \"TCP\"\n        volumeMounts:\n        - name: conf\n          mountPath: /conf\n          readOnly: false\n        - name: data\n          mountPath: /data\n          readOnly: false\n        - name: valkey-password\n          mountPath: /etc/valkey-password\n          readOnly: true\n      volumes:\n      - name: valkey-password\n        csi:\n          driver: secrets-store.csi.k8s.io\n          readOnly: true\n          volumeAttributes:\n            secretProviderClass: valkey-password\n      - name: conf\n        configMap:\n          name: valkey-cluster\n          defaultMode: 0755\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: managed-csi-premium\n      resources:\n        requests:\n          storage: 20Gi\nEOF\n```\n\n----------------------------------------\n\nTITLE: Viewing Running Pods for VPA Test\nDESCRIPTION: Command to list all running pods with the app=hamster label to check the status of the test deployment pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -l app=hamster\n```\n\n----------------------------------------\n\nTITLE: Enabling Advanced Container Networking Services on Existing AKS Cluster\nDESCRIPTION: This command updates an existing AKS cluster to enable Advanced Container Networking Services features, including Container Network Observability and Container Network Security (for Cilium data plane only).\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --enable-acns\n```\n\n----------------------------------------\n\nTITLE: Creating MongoDB ExternalSecret Resource\nDESCRIPTION: Creates an ExternalSecret resource that manages MongoDB-related secrets by fetching them from Azure Key Vault and creating corresponding Kubernetes secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: ${AKS_MONGODB_SECRETS_NAME}\n  namespace: ${AKS_MONGODB_NAMESPACE}\nspec:\n  refreshInterval: 1h\n  secretStoreRef:\n    kind: SecretStore\n    name: azure-store\n\n  target:\n    name: \"${AKS_MONGODB_SECRETS_NAME}\"\n    creationPolicy: Owner\n\n  data:\n    - secretKey: MONGODB_BACKUP_USER\n      remoteRef:\n        key: MONGODB-BACKUP-USER\n    - secretKey: MONGODB_BACKUP_PASSWORD\n      remoteRef:\n        key: MONGODB-BACKUP-PASSWORD\n    - secretKey: MONGODB_DATABASE_ADMIN_USER\n      remoteRef:\n        key: MONGODB-DATABASE-ADMIN-USER\n    - secretKey: MONGODB_DATABASE_ADMIN_PASSWORD\n      remoteRef:\n        key: MONGODB-DATABASE-ADMIN-PASSWORD\n    - secretKey: MONGODB_CLUSTER_ADMIN_USER\n      remoteRef:\n        key: MONGODB-CLUSTER-ADMIN-USER\n    - secretKey: MONGODB_CLUSTER_ADMIN_PASSWORD\n      remoteRef:\n        key: MONGODB-CLUSTER-ADMIN-PASSWORD\n    - secretKey: MONGODB_CLUSTER_MONITOR_USER\n      remoteRef:\n        key: MONGODB-CLUSTER-MONITOR-USER\n    - secretKey: MONGODB_CLUSTER_MONITOR_PASSWORD\n      remoteRef:\n        key: MONGODB-CLUSTER-MONITOR-PASSWORD\n    - secretKey: MONGODB_USER_ADMIN_USER\n      remoteRef:\n        key: MONGODB-USER-ADMIN-USER\n    - secretKey: MONGODB_USER_ADMIN_PASSWORD\n      remoteRef:\n        key: MONGODB-USER-ADMIN-PASSWORD\n    - secretKey: PMM_SERVER_API_KEY\n      remoteRef:\n        key: PMM-SERVER-API-KEY\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying Job to Publish Messages to Azure Service Bus\nDESCRIPTION: This snippet deploys a Kubernetes Job that publishes 100 messages to an Azure Service Bus queue. It uses environment variables for queue name and hostname, and specifies the workload identity for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: myproducer\nspec:\n  template:\n    metadata:\n      labels:\n        azure.workload.identity/use: \"true\"\n    spec:\n      serviceAccountName: $MI_NAME\n      containers:\n      - image: ghcr.io/azure-samples/aks-app-samples/servicebusdemo:latest\n        name: myproducer\n        resources: {}\n        env:\n        - name: OPERATION_MODE\n          value: \"producer\"\n        - name: MESSAGE_COUNT\n          value: \"100\"\n        - name: AZURE_SERVICEBUS_QUEUE_NAME\n          value: $SB_QUEUE_NAME\n        - name: AZURE_SERVICEBUS_HOSTNAME\n          value: $SB_HOSTNAME\n      restartPolicy: Never\nEOF\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster to Enable Control Plane Metrics\nDESCRIPTION: Command to update an existing AKS cluster with the Prometheus add-on to start collecting control plane metrics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group and Key Vault with Azure CLI\nDESCRIPTION: Commands to create a new resource group and Azure Key Vault instance with purge protection enabled, which is required for disk encryption with customer-managed keys.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create new resource group in a supported Azure region\naz group create --location myAzureRegionName --name myResourceGroup\n\n# Create an Azure Key Vault resource in a supported Azure region\naz keyvault create --name myKeyVaultName --resource-group myResourceGroup --location myAzureRegionName  --enable-purge-protection true\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage Classes for PostgreSQL\nDESCRIPTION: Creates and configures storage classes for different storage options including Premium SSD, Premium SSD v2, and Local NVMe.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nexport POSTGRES_STORAGE_CLASS=\"managed-csi-premium\"\n```\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply --context $AKS_PRIMARY_CLUSTER_NAME -n $PG_NAMESPACE -v 9 -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: premium2-disk-sc\nparameters:\n  cachingMode: None\n  skuName: PremiumV2_LRS\n  DiskIOPSReadWrite: \"3500\"\n  DiskMBpsReadWrite: \"125\"\nprovisioner: disk.csi.azure.com\nreclaimPolicy: Delete\nvolumeBindingMode: WaitForFirstConsumer\nallowVolumeExpansion: true\nEOF\n\nexport POSTGRES_STORAGE_CLASS=\"premium2-disk-sc\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Using PowerShell\nDESCRIPTION: Commands to configure kubectl credentials and verify cluster connectivity using Azure PowerShell. Imports credentials for myAKSCluster and lists cluster nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\n```\n\nLANGUAGE: powershell\nCODE:\n```\nkubectl get nodes\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME                                STATUS   ROLES   AGE   VERSION\naks-nodepool1-19366578-vmss000000   Ready    agent   47h   v1.30.9\naks-nodepool1-19366578-vmss000001   Ready    agent   47h   v1.30.9\naks-nodepool1-19366578-vmss000002   Ready    agent   47h   v1.30.9\n```\n\n----------------------------------------\n\nTITLE: Configuring External Traffic Policy for Istio Ingress Gateway\nDESCRIPTION: Updates the external traffic policy of the Istio ingress gateway service to 'Local' to preserve client source IP and optimize traffic routing. This modification is done using kubectl patch command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-ingress.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch service aks-istio-ingressgateway-external -n aks-istio-ingress --type merge --patch '{\"spec\": {\"externalTrafficPolicy\": \"Local\"}}'\n```\n\n----------------------------------------\n\nTITLE: Assigning RBAC Role to Kubelet Identity\nDESCRIPTION: Assigns the ACRPull role to the kubelet identity using Azure CLI, enabling it to pull images from Azure Container Registry.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create \\\n    --assignee $KUBELET_CLIENT_ID \\\n    --role \"acrpull\" \\\n    --scope \"$ACR_REGISTRY_ID\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Node Pool using Azure PowerShell in AKS\nDESCRIPTION: This snippet demonstrates how to delete an existing node pool in an Azure Kubernetes Service (AKS) cluster using the Remove-AzAksNodePool cmdlet. It specifies the resource group, cluster name, node pool name, and forces the deletion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_9\n\nLANGUAGE: azurepowershell\nCODE:\n```\n$params = @{\n    ResourceGroupName = 'myResourceGroup'\n    ClusterName       = 'myAKSCluster'\n    Name              = 'nodepool1'\n    Force             = $true\n}\nRemove-AzAksNodePool @params\n```\n\n----------------------------------------\n\nTITLE: Batch Updating PersistentVolume ReclaimPolicies in Kubernetes\nDESCRIPTION: Script to automatically update the ReclaimPolicy from Delete to Retain for all PersistentVolumes in a specified namespace. This helps prepare multiple volumes for migration at once.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n# Patch the Persistent Volume in case ReclaimPolicy is Delete\nNAMESPACE=$1\ni=1\nfor PVC in $(kubectl get pvc -n $NAMESPACE | awk '{ print $1}'); do\n  # Ignore first record as it contains header\n  if [ $i -eq 1 ]; then\n    i=$((i + 1))\n  else\n    PV=\"$(kubectl get pvc $PVC -n $NAMESPACE -o jsonpath='{.spec.volumeName}')\"\n    RECLAIMPOLICY=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.persistentVolumeReclaimPolicy}')\"\n    echo \"Reclaim Policy for Persistent Volume $PV is $RECLAIMPOLICY\"\n    if [[ $RECLAIMPOLICY == \"Delete\" ]]; then\n      echo \"Updating ReclaimPolicy for $pv to Retain\"\n      kubectl patch pv $PV -p '{\"spec\":{\"persistentVolumeReclaimPolicy\":\"Retain\"}}'\n    fi\n  fi\ndone\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Namespace for Valkey\nDESCRIPTION: Command to create a dedicated Kubernetes namespace for the Valkey cluster using kubectl. The dry-run and output flags ensure the configuration is validated before being applied.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace valkey --dry-run=client --output yaml | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Creating Node Pool for Valkey Workload in AKS\nDESCRIPTION: This Azure CLI command creates a new node pool in an AKS cluster specifically for running Valkey workloads. It sets up 6 nodes across 3 availability zones with autoscaling disabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nwhile [ \"$(az aks show --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --output tsv --query provisioningState)\" != \"Succeeded\" ]; do echo \"waiting for cluster to be ready\"; sleep 10; done\n\naz aks nodepool add \\\n    --resource-group $MY_RESOURCE_GROUP_NAME \\\n    --cluster-name  $MY_CLUSTER_NAME \\\n    --name valkey \\\n    --node-vm-size Standard_D4s_v3 \\\n    --node-count 6 \\\n    --zones 1 2 3 \\\n    --output table\n```\n\n----------------------------------------\n\nTITLE: Creating a New AKS Cluster with Native Sidecar Mode\nDESCRIPTION: Creates a new AKS cluster with Kubernetes version 1.29 or newer and Istio add-on version asm-1-20 or newer to automatically enable native sidecar mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\naz aks create \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER \\\n    --enable-asm \\\n    --kubernetes-version 1.29 \\\n    --revision asm-1-20 \\\n    --generate-ssh-keys    \n    ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Browser Interactive Authentication with PoP Token\nDESCRIPTION: Commands to set up web browser interactive authentication with Proof-of-Possession (PoP) token, providing additional security for AKS cluster access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l interactive --pop-enabled --pop-claims \"u=/ARM/ID/OF/CLUSTER\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Layered Security with L7 Network Policy\nDESCRIPTION: This Cilium network policy demonstrates a layered security approach by enforcing application-layer (L7) restrictions. It allows frontend pods to only make GET requests to the /api path on backend services, preventing other HTTP methods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"cilium.io/v2\"\nkind: CiliumNetworkPolicy\nmetadata:\n  name: frontend-l7-policy\n  namespace: default\nspec:\n  endpointSelector:\n    matchLabels:\n      app: frontend\n  egress:\n    - toEndpoints:\n        - matchLabels:\n            app: backend\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n                path: \"/api\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to an AKS Cluster using Azure CLI\nDESCRIPTION: Command to configure kubectl to connect to an AKS cluster using the az aks get-credentials command, which retrieves credentials and configures the Kubernetes CLI for accessing the specified cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --overwrite-existing --output table\n```\n\n----------------------------------------\n\nTITLE: Enabling DNS Query Logging in CoreDNS on AKS\nDESCRIPTION: YAML configuration to enable DNS query logging in CoreDNS by adding a log directive to the custom ConfigMap. This helps with debugging DNS resolution issues.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/coredns-custom.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns-custom\n  namespace: kube-system\ndata:\n  log.override: | # you may select any name here, but it must end with the .override file extension\n        log\n```\n\n----------------------------------------\n\nTITLE: Building and Running Quarkus App in Production Mode\nDESCRIPTION: Commands to build the Quarkus application and run it in production mode for testing the connection to the Azure PostgreSQL Flexible Server. This verifies that the application can connect to the cloud database before deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nquarkus build\njava -jar target/quarkus-app/quarkus-run.jar\n```\n\n----------------------------------------\n\nTITLE: Exporting TLS Certificate to PFX Format for Azure Key Vault\nDESCRIPTION: This bash command exports the previously generated TLS certificate and key to a PFX file format, which is required for importing into Azure Key Vault. It sets the Azure Key Vault name as an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport AKV_NAME=\"[YOUR AKV NAME]\"\nopenssl pkcs12 -export -in aks-ingress-tls.crt -inkey aks-ingress-tls.key  -out $CERT_NAME.pfx\n# skip Password prompt\n```\n\n----------------------------------------\n\nTITLE: Creating Microsoft Entra ID Group for Site Reliability Engineers\nDESCRIPTION: This snippet creates a new group in Microsoft Entra ID for site reliability engineers (SREs) and assigns the resulting group ID to a variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nOPSSRE_ID=$(az ad group create --display-name opssre --mail-nickname opssre --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Configuring maxSurge for Faster Rolling Updates in Kubernetes Deployments\nDESCRIPTION: A deployment manifest that sets maxSurge to 33% to allow additional pods to be created during rolling updates. This ensures faster updates with minimal downtime by creating new pods before terminating old ones.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 33% # Maximum number of additional pods created during the update\n```\n\n----------------------------------------\n\nTITLE: Annotating Pods to use the Gateway Configuration\nDESCRIPTION: YAML example showing how to annotate a pod template in a deployment to route its traffic through the configured gateway node pool. The CNI plugin will automatically configure the routing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-static-egress-gateway.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: <deployment-name>\n  namespace: <namespace>\nspec:\n  template:\n    metadata:\n      annotations:\n        kubernetes.azure.com/static-gateway-configuration: <gateway-config-name>\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with OIDC Issuer Enabled\nDESCRIPTION: This command creates a new AKS cluster with one node and the OIDC issuer feature enabled. The cluster is named 'myAKSCluster' and is created in the resource group 'myResourceGroup'. SSH keys are automatically generated for cluster access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-oidc-issuer.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-count 1 \\\n    --enable-oidc-issuer \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Adding a Dedicated System Node Pool to an Existing AKS Cluster using Azure CLI\nDESCRIPTION: Adds a dedicated system node pool named 'systempool' with three nodes to an existing AKS cluster. The node pool is configured with a taint to prevent application pods from being scheduled on it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name systempool \\\n    --node-count 3 \\\n    --node-taints CriticalAddonsOnly=true:NoSchedule \\\n    --mode System\n```\n\n----------------------------------------\n\nTITLE: Updating existing AKS cluster with Azure CNI to enable pod-managed identity\nDESCRIPTION: Azure CLI command to update an existing AKS cluster with Azure CNI to include pod-managed identity support.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group $MY_RESOURCE_GROUP --name $MY_CLUSTER --enable-pod-identity\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Role Assignments\nDESCRIPTION: This command lists the role assignments for the specified Azure resource group. It is used to confirm that the ai-toolchain-operator identity has been assigned the Contributor role, which is necessary for operating on the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz role assignment list --scope /subscriptions/$AZURE_SUBSCRIPTION_ID/resourceGroups/$AZURE_RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: Deploying Bicep Template for AKS Cluster\nDESCRIPTION: This command deploys the Bicep template (main.bicep) to create an AKS Automatic cluster in the specified resource group using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group myResourceGroup --template-file main.bicep\n```\n\n----------------------------------------\n\nTITLE: Monitoring Pod Status\nDESCRIPTION: Bash command to watch the status of hamster pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get --watch pods -l app=hamster\n```\n\n----------------------------------------\n\nTITLE: Removing Pod-Managed Identity with Azure CLI\nDESCRIPTION: This Azure CLI command removes the pod-managed identity mapping from the AKS cluster. It should be executed after all pods in the namespace have migrated to use the sidecar.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\naz aks pod-identity delete --name podIdentityName --namespace podIdentityNamespace --resource-group myResourceGroup --cluster-name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Deploying Infrastructure with Terraform\nDESCRIPTION: This bash script sets up environment variables and runs Terraform commands to deploy the infrastructure for Valkey. It includes initializing Terraform, setting required variables, and applying the configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nterraform init\nexport MY_RESOURCE_GROUP_NAME=myResourceGroup-rg\nexport MY_LOCATION=centralus\nSECRET=$(openssl rand -base64 32)\nexport TF_VAR_valkey_password=${SECRET}\nexport TF_VAR_location=${MY_LOCATION}\nexport TF_VAR_resource_group_name=${MY_RESOURCE_GROUP_NAME}\nterraform apply -var-file=\"valkey.tfvars\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Connection to AKS Cluster\nDESCRIPTION: Verifies the connection to the AKS cluster by retrieving a list of cluster nodes using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Monitor Workspace for Prometheus Metrics in Azure CLI\nDESCRIPTION: This snippet shows how to create an Azure Monitor workspace to store Prometheus metrics collected from your AKS cluster. It exports the workspace name and ID as environment variables for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-metrics-managed-prometheus.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport AZURE_MONITOR_WORKSPACE=<azure-monitor-workspace-name>\n\nexport AZURE_MONITOR_WORKSPACE_ID=$(az monitor account create \\\n    --name $AZURE_MONITOR_WORKSPACE \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $LOCATION \\\n    --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Updating Existing Cluster Autoscaler Profile\nDESCRIPTION: Updates an existing AKS cluster's autoscaler profile by modifying the scan interval parameter to 30 seconds.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --cluster-autoscaler-profile scan-interval=30s\n```\n\n----------------------------------------\n\nTITLE: Using kubectl with Device Code Authentication in AKS\nDESCRIPTION: Command to retrieve node information after setting up device code authentication. This demonstrates a standard kubectl command execution after kubelogin conversion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom CoreDNS Settings for Search Domain Handling in AKS\nDESCRIPTION: YAML configuration to override the default CoreDNS behavior for handling internal.cloudapp.net and reddog.microsoft.com domains. This configmap enables forwarding of DNS queries that would otherwise be blocked.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/coredns-custom.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns-custom # this is the name of the configmap you can overwrite with your changes\n  namespace: kube-system\ndata:\n    override-block.server:\n       internal.cloudapp.net:53 {\n           errors\n           cache 30\n           forward . /etc/resolv.conf\n       }\n       reddog.microsoft.com:53 {\n           errors\n           cache 30\n           forward . /etc/resolv.conf\n       }\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with Azure CNI Overlay\nDESCRIPTION: This Azure CLI command creates an AKS cluster using Azure CNI Overlay networking. It specifies the cluster name, resource group, location, network plugin, and pod CIDR range.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nclusterName=\"myOverlayCluster\"\nresourceGroup=\"myResourceGroup\"\nlocation=\"westcentralus\"\n\naz aks create \\\n    --name $clusterName \\\n    --resource-group $resourceGroup \\\n    --location $location \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --pod-cidr 192.168.0.0/16 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Installing a Specific Version of Azure App Configuration Extension with Azure CLI\nDESCRIPTION: Command to install a specific version of the Azure App Configuration extension on AKS using Azure CLI, with automatic updates disabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n    --cluster-name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --name appconfigurationkubernetesprovider \\\n    --extension-type Microsoft.AppConfiguration \\\n    --auto-upgrade-minor-version false\n    --version 2.1.0\n```\n\n----------------------------------------\n\nTITLE: Installing k8s-extension CLI Extension for Azure Kubernetes Service\nDESCRIPTION: Commands to install or update the k8s-extension Azure CLI extension, which is required for managing cluster extensions in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name k8s-extension\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name k8s-extension\n```\n\n----------------------------------------\n\nTITLE: Creating OS Configuration for Linux Node Pools\nDESCRIPTION: This JSON configuration file specifies custom operating system settings for Linux node pools in AKS. It includes settings for transparent huge pages, swap file size, and various network-related sysctls.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-node-configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n \"transparentHugePageEnabled\": \"madvise\",\n \"transparentHugePageDefrag\": \"defer+madvise\",\n \"swapFileSizeMB\": 1500,\n \"sysctls\": {\n  \"netCoreSomaxconn\": 163849,\n  \"netIpv4TcpTwReuse\": true,\n  \"netIpv4IpLocalPortRange\": \"32000 60000\"\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying NGINX Pod with Azure NetApp Files Volume\nDESCRIPTION: YAML configuration for deploying an NGINX pod that mounts the Azure NetApp Files volume at /mnt/data.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: nginx-pod\nspec:\n  containers:\n  - name: nginx\n    image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 250m\n        memory: 256Mi\n    volumeMounts:\n    - mountPath: \"/mnt/data\"\n      name: volume\n  volumes:\n    - name: volume\n      persistentVolumeClaim:\n        claimName: anf-pvc\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio Sample Bookinfo Application\nDESCRIPTION: Command to deploy the Istio Bookinfo sample application to test the service mesh functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.24/samples/bookinfo/platform/kube/bookinfo.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Spot Node Pool in AKS using Azure CLI\nDESCRIPTION: Azure CLI command to add a Spot node pool to an existing AKS cluster with autoscaling enabled. Sets priority to Spot, deletion eviction policy, and configures node count limits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/spot-node-pool.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name spotnodepool \\\n    --priority Spot \\\n    --eviction-policy Delete \\\n    --spot-max-price -1 \\\n    --enable-cluster-autoscaler \\\n    --min-count 1 \\\n    --max-count 3 \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Cloning a volume and creating a pod to use it\nDESCRIPTION: Commands to create a cloned volume from an existing PVC and create a new pod that uses this cloned volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/deploy/example/cloning/pvc-azuredisk-cloning.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/deploy/example/cloning/nginx-pod-restored-cloning.yaml\n```\n\n----------------------------------------\n\nTITLE: Associating Capacity Reservation Group with AKS Node Pool\nDESCRIPTION: This Azure CLI snippet associates an existing capacity reservation group with a node pool using the 'az aks nodepool add' command. It retrieves the CRG ID and uses the '--crg-id' flag to specify the capacity reservation group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nRG_NAME=myResourceGroup\nCLUSTER_NAME=myAKSCluster\nNODEPOOL_NAME=myNodepool\nCRG_NAME=myCRG\nCRG_ID=$(az capacity reservation group show --capacity-reservation-group $CRG_NAME --resource-group $RG_NAME --query id -o tsv)\naz aks nodepool add --resource-group $RG_NAME --cluster-name $CLUSTER_NAME --name $NODEPOOL_NAME --crg-id $CRG_ID\n```\n\n----------------------------------------\n\nTITLE: Installing confcom Azure CLI Extension\nDESCRIPTION: Commands to install and update the confcom Azure CLI extension, which is required for generating security policies for Confidential Containers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name confcom\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name confcom\n```\n\n----------------------------------------\n\nTITLE: Enabling Internal Istio Ingress Gateway on AKS\nDESCRIPTION: Azure CLI command to enable an internally accessible Istio ingress gateway on an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-ingress.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz aks mesh enable-ingress-gateway --resource-group $RESOURCE_GROUP --name $CLUSTER --ingress-gateway-type internal\n```\n\n----------------------------------------\n\nTITLE: Implementing Envelope ConfigMap with Resource Definitions\nDESCRIPTION: Complete example of a ConfigMap envelope object containing ResourceQuota and MutatingWebhookConfiguration definitions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-envelope-reserved-resources.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n    name: envelope-configmap\n    namespace: app\n    annotations:\n        kubernetes-fleet.io/envelope-configmap: \"true\"\ndata:\n    resourceQuota.yaml: |\n        apiVersion: v1\n        kind: ResourceQuota\n        metadata:\n            name: mem-cpu-demo\n            namespace: app\n        spec:\n            hard:\n                requests.cpu: \"1\"\n                requests.memory: 1Gi\n                limits.cpu: \"2\"\n                limits.memory: 2Gi\n    webhook.yaml: |\n        apiVersion: admissionregistration.k8s.io/v1\n        kind: MutatingWebhookConfiguration\n        metadata:\n            creationTimestamp: null\n            labels:\n                azure-workload-identity.io/system: \"true\"\n            name: azure-wi-webhook-mutating-webhook-configuration\n        webhooks:\n        - admissionReviewVersions:\n          - v1\n          - v1beta1\n          clientConfig:\n              service:\n                  name: azure-wi-webhook-webhook-service\n                  namespace: app\n                  path: /mutate-v1-pod\n          failurePolicy: Fail\n          matchPolicy: Equivalent\n          name: mutation.azure-workload-identity.io\n          rules:\n          - apiGroups:\n              - \"\"\n              apiVersions:\n              - v1\n              operations:\n              - CREATE\n              - UPDATE\n              resources:\n              - pods\n          sideEffects: None\n```\n\n----------------------------------------\n\nTITLE: Rotating OIDC Signing Keys in AKS Cluster\nDESCRIPTION: This command rotates the signing keys used by the OIDC issuer in the AKS cluster. Key rotation is important for security, and AKS allows manual rotation when needed instead of waiting for automatic rotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-oidc-issuer.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks oidc-issuer rotate-signing-keys --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Importing Apache Airflow Images to ACR\nDESCRIPTION: Imports Apache Airflow and related container images from public registries to Azure Container Registry.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr import --name $MY_ACR_REGISTRY --source docker.io/apache/airflow:airflow-pgbouncer-2024.01.19-1.21.0 --image airflow:airflow-pgbouncer-2024.01.19-1.21.0\naz acr import --name $MY_ACR_REGISTRY --source docker.io/apache/airflow:airflow-pgbouncer-exporter-2024.06.18-0.17.0 --image airflow:airflow-pgbouncer-exporter-2024.06.18-0.17.0\naz acr import --name $MY_ACR_REGISTRY --source docker.io/bitnami/postgresql:16.1.0-debian-11-r15 --image postgresql:16.1.0-debian-11-r15\naz acr import --name $MY_ACR_REGISTRY --source quay.io/prometheus/statsd-exporter:v0.26.1 --image statsd-exporter:v0.26.1\naz acr import --name $MY_ACR_REGISTRY --source docker.io/apache/airflow:2.9.3 --image airflow:2.9.3\naz acr import --name $MY_ACR_REGISTRY --source registry.k8s.io/git-sync/git-sync:v4.1.0 --image git-sync:v4.1.0\n```\n\n----------------------------------------\n\nTITLE: Enabling Workload Identity and OIDC Issuer on AKS Cluster\nDESCRIPTION: Updates an existing AKS cluster to enable Microsoft Entra Workload ID and OIDC Issuer Endpoint features, which are required for workload identity integration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group $RG_NAME \\\n    --name $AKS_NAME \\\n    --enable-workload-identity \\\n    --enable-oidc-issuer\n```\n\n----------------------------------------\n\nTITLE: Example Output for AKS Cluster with AKS-managed Microsoft Entra ID\nDESCRIPTION: Sample output showing the aadProfile of an AKS cluster that has been successfully migrated to AKS-managed Microsoft Entra ID. The 'managed' property is set to 'true'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_17\n\nLANGUAGE: output\nCODE:\n```\n    {\n      \"adminGroupObjectIDs\": [\n        \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n      ],\n      \"adminUsers\": null,\n      \"clientAppId\": null,\n      \"enableAzureRbac\": null,\n      \"managed\": true,\n      \"serverAppId\": null,\n      \"serverAppSecret\": null,\n      \"tenantId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    }\n```\n\n----------------------------------------\n\nTITLE: Updating Kubernetes Deployment for Order Service with Azure Service Bus\nDESCRIPTION: This YAML snippet defines a Kubernetes Deployment for the order-service, configured to use Azure Service Bus. It includes environment variables for Service Bus connection details and resource limits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-paas-services.md#2025-04-21_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: order-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: order-service\n  template:\n    metadata:\n      labels:\n        app: order-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: order-service\n        image: <REPLACE_WITH_YOUR_ACR_NAME>.azurecr.io/aks-store-demo/order-service:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: ORDER_QUEUE_HOSTNAME\n          value: \"<REPLACE_WITH_YOUR_SB_NS_HOSTNAME>\" # Example: sb-store-demo-123456.servicebus.windows.net\n        - name: ORDER_QUEUE_PORT\n          value: \"5671\"\n        - name: ORDER_QUEUE_TRANSPORT\n          value: \"tls\"\n        - name: ORDER_QUEUE_USERNAME\n          value: \"sender\"\n        - name: ORDER_QUEUE_PASSWORD\n          value: \"<REPLACE_WITH_YOUR_SB_SENDER_PASSWORD>\"\n        - name: ORDER_QUEUE_NAME\n          value: \"orders\"\n        - name: FASTIFY_ADDRESS\n          value: \"0.0.0.0\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n```\n\n----------------------------------------\n\nTITLE: Adding GPU Node Pool to AKS Cluster with Azure CLI\nDESCRIPTION: This command adds a GPU-enabled node pool to an existing AKS cluster. It specifies the node VM size, taint, and cluster autoscaler settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name gpunp \\\n    --node-count 1 \\\n    --node-vm-size Standard_NC6s_v3 \\\n    --node-taints sku=gpu:NoSchedule \\\n    --enable-cluster-autoscaler \\\n    --min-count 1 \\\n    --max-count 3\n```\n\n----------------------------------------\n\nTITLE: YAML Manifest for Dual-Stack LoadBalancer Services\nDESCRIPTION: This YAML manifest defines two LoadBalancer type services to expose an NGINX deployment for both IPv4 and IPv6. The IPv6 service specifically sets the ipFamilies field to IPv6.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: nginx\n  name: nginx-ipv4\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n - port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: nginx\n  name: nginx-ipv6\nspec:\n  externalTrafficPolicy: Cluster\n  ipFamilies:\n - IPv6\n  ports:\n - port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Verifying Azure Files PVC Size After Resize\nDESCRIPTION: Commands to verify that both the PVC resource and the actual filesystem have been successfully resized to 200GiB, showing the updated capacity in the Kubernetes object and the mounted filesystem.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pvc pvc-azurefile\nkubectl exec -it nginx-azurefile -- df -h /mnt/azurefile\n```\n\n----------------------------------------\n\nTITLE: Applying Pod Disruption Budget in AKS\nDESCRIPTION: Kubectl command to apply a Pod Disruption Budget definition to an AKS cluster, ensuring workload availability during maintenance events.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-scheduler.md#2025-04-21_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f nginx-pdb.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Dapr Extension with HA Configuration\nDESCRIPTION: Creates Dapr extension with high availability enabled and specific operator replica count settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr \\\n--extension-type Microsoft.Dapr \\\n--auto-upgrade-minor-version true \\\n--configuration-settings \"global.ha.enabled=true\" \\\n--configuration-settings \"dapr_operator.replicaCount=2\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS cluster with custom CA certificates using Azure CLI\nDESCRIPTION: Azure CLI command to create a new AKS cluster with custom CA trust certificates specified during creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-certificate-authority.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group <resource-group-name> \\\n    --name <cluster-name> \\\n    --node-count 2 \\\n    --custom-ca-trust-certificates FileWithCAs \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Checking Node Health Status in Kubernetes\nDESCRIPTION: This command allows you to manually check the health state of your Kubernetes nodes. It displays the status of all nodes in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-auto-repair.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Creating public IP for PostgreSQL cluster ingress\nDESCRIPTION: These commands create a public IP address for the AKS cluster to expose PostgreSQL endpoints. It includes getting the node resource group name, creating the IP, and assigning the necessary role.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nexport AKS_PRIMARY_CLUSTER_NODERG_NAME=$(az aks show \\\n    --name $AKS_PRIMARY_CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --query nodeResourceGroup \\\n    --output tsv)\n\necho $AKS_PRIMARY_CLUSTER_NODERG_NAME\n\nexport AKS_PRIMARY_CLUSTER_PUBLICIP_NAME=\"$AKS_PRIMARY_CLUSTER_NAME-pip\"\n\naz network public-ip create \\\n    --resource-group $AKS_PRIMARY_CLUSTER_NODERG_NAME \\\n    --name $AKS_PRIMARY_CLUSTER_PUBLICIP_NAME \\\n    --location $PRIMARY_CLUSTER_REGION \\\n    --sku Standard \\\n    --zone 1 2 3 \\\n    --allocation-method static \\\n    --output table\n\nexport AKS_PRIMARY_CLUSTER_PUBLICIP_ADDRESS=$(az network public-ip show \\\n    --resource-group $AKS_PRIMARY_CLUSTER_NODERG_NAME \\\n    --name $AKS_PRIMARY_CLUSTER_PUBLICIP_NAME \\\n    --query ipAddress \\\n    --output tsv)\n\necho $AKS_PRIMARY_CLUSTER_PUBLICIP_ADDRESS\n\nexport AKS_PRIMARY_CLUSTER_NODERG_NAME_SCOPE=$(az group show --name \\\n    $AKS_PRIMARY_CLUSTER_NODERG_NAME \\\n    --query id \\\n    --output tsv)\n\necho $AKS_PRIMARY_CLUSTER_NODERG_NAME_SCOPE\n\naz role assignment create \\\n    --assignee-object-id ${AKS_UAMI_WORKLOAD_OBJECTID} \\\n    --assignee-principal-type ServicePrincipal \\\n    --role \"Network Contributor\" \\\n    --scope ${AKS_PRIMARY_CLUSTER_NODERG_NAME_SCOPE}\n```\n\n----------------------------------------\n\nTITLE: Disabling Image Cleaner on an AKS cluster\nDESCRIPTION: Shows how to disable the Image Cleaner feature on an existing AKS cluster using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n  --resource-group myResourceGroup \\\n  --name myManagedCluster \\\n  --disable-image-cleaner\n```\n\n----------------------------------------\n\nTITLE: Creating New AKS Cluster with VPA Enabled\nDESCRIPTION: Command to create a new Azure Kubernetes Service cluster with the Vertical Pod Autoscaler feature enabled using the --enable-vpa flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --name <cluster-name> --resource-group <resource-group-name> --enable-vpa --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Managed Identity\nDESCRIPTION: Creates a managed identity in Azure and retrieves its client ID for workload identity configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-deploy-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport SUBSCRIPTION=\"$(az account show --query id --output tsv)\"\nexport USER_ASSIGNED_IDENTITY_NAME=\"myIdentity$RANDOM_ID\"\naz identity create \\\n    --name \"${USER_ASSIGNED_IDENTITY_NAME}\" \\\n    --resource-group \"${RESOURCE_GROUP}\" \\\n    --location \"${LOCATION}\" \\\n    --subscription \"${SUBSCRIPTION}\"\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview Extension\nDESCRIPTION: Azure CLI commands to install and update the aks-preview extension required for network isolated cluster functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Defining VolumeSnapshotClass for Azure Disk CSI Driver\nDESCRIPTION: YAML configuration for creating a VolumeSnapshotClass using the Azure Disk CSI driver. This is a prerequisite for the migration process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: snapshot.storage.k8s.io/v1\nkind: VolumeSnapshotClass\nmetadata:\n  name: custom-disk-snapshot-sc\ndriver: disk.csi.azure.com\ndeletionPolicy: Delete\nparameters:\n  incremental: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Creating a volume snapshot from an existing PVC\nDESCRIPTION: Command to create a volume snapshot from an existing PVC named 'pvc-azuredisk' using the previously defined snapshot class.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/deploy/example/snapshot/azuredisk-volume-snapshot.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Custom Ingress Controller Configuration\nDESCRIPTION: Azure CLI command to create a new AKS cluster with application routing enabled and specific ingress controller configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n--resource-group <ResourceGroupName> \\\n--name <ClusterName> \\\n--location <Location> \\\n--enable-app-routing \\\n--app-routing-default-nginx-controller <DefaultIngressControllerType>\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume for Blob Storage using Blobfuse in YAML\nDESCRIPTION: This YAML snippet defines a PersistentVolume for Azure Blob Storage using the Blobfuse protocol. It specifies the storage capacity, access mode, and references the Kubernetes Secret for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  annotations:\n    pv.kubernetes.io/provisioned-by: blob.csi.azure.com\n  name: pv-blob\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain  # If set as \"Delete\" container would be removed after pvc deletion\n  storageClassName: azureblob-fuse-premium\n  mountOptions:\n    - -o allow_other\n    - --file-cache-timeout-in-seconds=120\n  csi:\n    driver: blob.csi.azure.com\n    # volumeid has to be unique for every identical storage blob container in the cluster\n    # character `#`and `/` are reserved for internal use and cannot be used in volumehandle\n    volumeHandle: account-name_container-name\n    volumeAttributes:\n      containerName: containerName\n    nodeStageSecretRef:\n      name: azure-secret\n      namespace: default\n```\n\n----------------------------------------\n\nTITLE: Setting Max Surge Value for AKS Node Pools\nDESCRIPTION: Commands to set the max surge value for new or existing AKS node pools. This controls how many additional nodes can be created during upgrades to minimize workload disruption.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n# Set max surge for a new node pool\naz aks nodepool add --name mynodepool --resource-group MyResourceGroup --cluster-name MyManagedCluster --max-surge 33%\n\n# Update max surge for an existing node pool \naz aks nodepool update --name mynodepool --resource-group MyResourceGroup --cluster-name MyManagedCluster --max-surge 5\n```\n\n----------------------------------------\n\nTITLE: Determining Managed Identity Type for AKS Cluster\nDESCRIPTION: This command determines which type of managed identity an existing AKS cluster is using. It queries the identity.type property, which will return SystemAssigned, UserAssigned, or null if using a service principal.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks show \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --query identity.type \\\n    --output tsv\n```\n\n----------------------------------------\n\nTITLE: Adding WASI Node Pool to AKS Cluster\nDESCRIPTION: Azure CLI command to add a WASI node pool named 'mywasipool' with one node to an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-wasi-node-pools.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name mywasipool \\\n    --node-count 1 \\\n    --workload-runtime WasmWasi\n```\n\n----------------------------------------\n\nTITLE: Installing Percona Operator\nDESCRIPTION: Deploys the Percona Operator and its Custom Resource Definitions (CRDs) to the specified namespace using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --server-side -f https://raw.githubusercontent.com/percona/percona-server-mongodb-operator/v1.16.0/deploy/bundle.yaml -n \"${AKS_MONGODB_NAMESPACE}\"\n```\n\n----------------------------------------\n\nTITLE: Creating a DiskEncryptionSet in Azure\nDESCRIPTION: Commands to retrieve Key Vault information, create a DiskEncryptionSet resource, and link it to a key in Azure Key Vault for encrypting disks.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n# Retrieve the Key Vault Id and store it in a variable\nkeyVaultId=$(az keyvault show --name myKeyVaultName --query \"[id]\" -o tsv)\n\n# Retrieve the Key Vault key URL and store it in a variable\nkeyVaultKeyUrl=$(az keyvault key show --vault-name myKeyVaultName --name myKeyName --query \"[key.kid]\" -o tsv)\n\n# Create a DiskEncryptionSet\naz disk-encryption-set create --name myDiskEncryptionSetName --location myAzureRegionName --resource-group myResourceGroup --source-vault $keyVaultId --key-url $keyVaultKeyUrl\n```\n\n----------------------------------------\n\nTITLE: Creating a wasmCloud Application Manifest\nDESCRIPTION: Defines a YAML manifest for a simple Hello World wasmCloud application using WebAssembly components and HTTP capability provider.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: hello-world\n  annotations:\n    description: 'HTTP hello world demo in Rust, using the WebAssembly Component Model and WebAssembly Interfaces Types (WIT)'\nspec:\n  components:\n    - name: http-component\n      type: component\n      properties:\n        image: ghcr.io/wasmcloud/components/http-hello-world-rust:0.1.0\n      traits:\n        # Govern the spread/scheduling of the component\n        - type: spreadscaler\n          properties:\n            instances: 1\n\n    # Add a capability provider that enables HTTP access\n    - name: httpserver\n      type: capability\n      properties:\n        image: ghcr.io/wasmcloud/http-server:0.23.2\n      traits:\n        # Establish a unidirectional link from this http server provider (the \"source\")\n        # to the `http-component` component (the \"target\") so the component can handle incoming HTTP requests,\n        #\n        # The source (this provider) is configured such that the HTTP server listens on 0.0.0.0:8080\n        - type: link\n          properties:\n            target: http-component\n            namespace: wasi\n            package: http\n            interfaces: [incoming-handler]\n            source_config:\n              - name: default-http\n                properties:\n                  address: 0.0.0.0:8080\n```\n\n----------------------------------------\n\nTITLE: Waiting for wasmCloud Components to Start\nDESCRIPTION: Uses kubectl to wait for all wasmCloud components (NATS, wadm, and wasmCloud Operator) to start and become available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout status deploy,sts -l app.kubernetes.io/name=nats\nkubectl wait --for=condition=available --timeout=600s deploy -l app.kubernetes.io/name=wadm\nkubectl wait --for=condition=available --timeout=600s deploy -l app.kubernetes.io/name=wasmcloud-operator\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster with Kubelet Identity\nDESCRIPTION: Updates an existing AKS cluster to use specified kubelet and control plane managed identities.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --enable-managed-identity \\\n    --assign-identity <identity-resource-id> \\\n    --assign-kubelet-identity <kubelet-identity-resource-id>\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster with Custom Outbound Public IP Prefixes\nDESCRIPTION: This Azure CLI command updates an existing AKS cluster to use custom outbound public IP prefixes. It uses the --load-balancer-outbound-ip-prefixes parameter to specify the IDs of the custom public IP prefixes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --load-balancer-outbound-ip-prefixes <publicIpPrefixId1>,<publicIpPrefixId2>\n```\n\n----------------------------------------\n\nTITLE: Configuring Trident Backend for Azure NetApp Files in YAML\nDESCRIPTION: This YAML file defines a TridentBackendConfig resource that configures Trident to use Azure NetApp Files. It includes subscription details, location, and service level for Azure NetApp Files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: trident.netapp.io/v1\nkind: TridentBackendConfig\nmetadata:\n  name: backend-tbc-anf\nspec:\n  version: 1\n  storageDriverName: azure-netapp-files\n  subscriptionID: aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e\n  tenantID: aaaabbbb-0000-cccc-1111-dddd2222eeee\n  location: eastus\n  serviceLevel: Premium\n  credentials:\n    name: backend-tbc-anf-secret\n```\n\n----------------------------------------\n\nTITLE: Adding Windows Server 2019 Node Pool in AKS\nDESCRIPTION: Azure CLI command to add a Windows Server 2019 node pool to an existing AKS cluster. Specifies the OS type, OS SKU, node pool name and count.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --os-type Windows \\\n    --os-sku Windows2019 \\\n    --name npwin \\\n    --node-count 1\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure Network Policy\nDESCRIPTION: Command to create an AKS cluster with Azure Network Policy enabled. This sets up a cluster with basic Linux node pool and network policy support using the Azure CNI plugin.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --node-count 1 \\\n    --windows-admin-username $WINDOWS_USERNAME \\\n    --network-plugin azure \\\n    --network-policy azure \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Upgrading AKS Cluster Control Plane\nDESCRIPTION: This Azure CLI command upgrades the AKS cluster's control plane to a specified Kubernetes version (1.31.1 in this example). It uses the '--control-plane-only' flag to upgrade only the control plane.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-mongodb-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks upgrade --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --kubernetes-version 1.31.1 --control-plane-only --yes\n```\n\n----------------------------------------\n\nTITLE: Running Multiple Helm Commands on Private AKS Cluster\nDESCRIPTION: Shows how to execute multiple helm commands in sequence on a private AKS cluster, including adding a repo, updating, and installing nginx.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/access-private-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks command invoke \\\n  --resource-group myResourceGroup \\\n  --name myPrivateCluster \\\n  --command \"helm repo add bitnami https://charts.bitnami.com/bitnami && helm repo update && helm install my-release bitnami/nginx\"\n```\n\n----------------------------------------\n\nTITLE: Validating AKS Cluster Upgrade with Azure CLI\nDESCRIPTION: Confirms the successful upgrade of an AKS cluster by checking the current Kubernetes version using the az aks show command with tabular output format.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --output table\n```\n\n----------------------------------------\n\nTITLE: Setting MaxUnavailable for AKS Node Pool Upgrades\nDESCRIPTION: This Azure CLI command updates a node pool in an AKS cluster to set the maxUnavailable value to 1. This ensures application availability during upgrade operations by limiting the number of unavailable nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update \\\n  --resource-group myResourceGroup \\\n  --cluster-name myAKSCluster \\\n  --name myNodePool \\\n  --max-unavailable 1\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Virtual Machines Node Pools\nDESCRIPTION: Create an AKS cluster with Virtual Machines node pools using the az aks create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-machines-node-pools.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --vm-set-type \"VirtualMachines\" \\\n    --node-count 2 \\\n    --kubernetes-version 1.28.5\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Pod Identities with Shared Selector\nDESCRIPTION: Demonstrates how to add multiple pod identities to an AKS cluster with a shared binding selector. This allows pods to use multiple identities by specifying the shared selector.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks pod-identity add --resource-group myResourceGroup --cluster-name myAKSCluster --namespace ${POD_IDENTITY_NAMESPACE}  --name ${POD_IDENTITY_NAME_1} --identity-resource-id ${IDENTITY_RESOURCE_ID_1} --binding-selector myMultiIdentitySelector\naz aks pod-identity add --resource-group myResourceGroup --cluster-name myAKSCluster --namespace ${POD_IDENTITY_NAMESPACE}  --name ${POD_IDENTITY_NAME_2} --identity-resource-id ${IDENTITY_RESOURCE_ID_2} --binding-selector myMultiIdentitySelector\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume YAML for Azure Disk\nDESCRIPTION: YAML configuration for creating a static persistent volume that references the moved Azure Disk using its resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-azuredisk\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: managed-csi\n  csi:\n    driver: disk.csi.azure.com\n    readOnly: false\n    volumeHandle: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/MC_rg_azure_aks-pvc-target_eastus/providers/Microsoft.Compute/disks/pvc-aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e\n    volumeAttributes:\n      fsType: ext4\n```\n\n----------------------------------------\n\nTITLE: Resetting Autoscaler Profile to Defaults\nDESCRIPTION: Resets all cluster autoscaler profile settings back to their default values.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --cluster-autoscaler-profile \"\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving DiskEncryptionSet ID for AKS Cluster Creation\nDESCRIPTION: Command to get the DiskEncryptionSet ID which will be used when creating the AKS cluster with encrypted OS disks.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\ndiskEncryptionSetId=$(az disk-encryption-set show --name mydiskEncryptionSetName --resource-group myResourceGroup --query \"[id]\" -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Pool Resource Limits in YAML\nDESCRIPTION: This YAML snippet shows how to set resource limits for a node pool in AKS NAP. It constrains the total size of the cluster by specifying CPU and memory limits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n  # Resource limits constrain the total size of the cluster.\n  # Limits prevent Karpenter from creating new instances once the limit is exceeded.\n  limits:\n    cpu: \"1000\"\n    memory: 1000Gi\n```\n\n----------------------------------------\n\nTITLE: Enabling AKS Workload Identity for PostgreSQL\nDESCRIPTION: Sets up environment variables needed for AKS workload identity configuration. Extracts the object ID, resource ID, and client ID from the previously created user-assigned managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport AKS_UAMI_WORKLOAD_OBJECTID=$( \\\n    echo \"${AKS_UAMI_WI_IDENTITY}\" | jq -r '.principalId')\nexport AKS_UAMI_WORKLOAD_RESOURCEID=$( \\\n    echo \"${AKS_UAMI_WI_IDENTITY}\" | jq -r '.id')\nexport AKS_UAMI_WORKLOAD_CLIENTID=$( \\\n    echo \"${AKS_UAMI_WI_IDENTITY}\" | jq -r '.clientId')\n\necho \"ObjectId: $AKS_UAMI_WORKLOAD_OBJECTID\"\necho \"ResourceId: $AKS_UAMI_WORKLOAD_RESOURCEID\"\necho \"ClientId: $AKS_UAMI_WORKLOAD_CLIENTID\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Blobfuse StatefulSet with kubectl\nDESCRIPTION: Command to create a Kubernetes StatefulSet using the previously defined YAML configuration for Blobfuse storage. This kubectl command applies the configuration and creates the resources defined in the YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-blob-csi.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -f azure-blobfuse-ss.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding AKS Maintenance Configuration with Azure CLI\nDESCRIPTION: Azure CLI commands to add new maintenance configurations using JSON configuration files\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\n# Add a new default configuration\naz aks maintenanceconfiguration add -g myResourceGroup --cluster-name myAKSCluster --name default --config-file ./default.json\n\n# Add a new aksManagedAutoUpgradeSchedule configuration\naz aks maintenanceconfiguration add -g myResourceGroup --cluster-name myAKSCluster --name aksManagedAutoUpgradeSchedule --config-file ./autoUpgradeWindow.json\n```\n\n----------------------------------------\n\nTITLE: Creating Private AKS Cluster with Private DNS Zone using Azure CLI\nDESCRIPTION: This Azure CLI command creates a private AKS cluster with a private DNS zone. It uses the az aks create command with flags for enabling a private cluster and specifying the private DNS zone.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name <private-cluster-name> \\\n    --resource-group <private-cluster-resource-group> \\\n    --load-balancer-sku standard \\\n    --enable-private-cluster \\\n    --assign-identity <resourceID> \\\n    --private-dns-zone [system|none] \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Restarting Deployment for Istio Proxy Update\nDESCRIPTION: Command to restart a deployment to trigger reinjection of updated Istio proxy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart deployments/productpage-v1 -n default\n```\n\n----------------------------------------\n\nTITLE: Applying CoreDNS Logging Configuration and Restarting in AKS\nDESCRIPTION: Console commands to apply the CoreDNS logging configuration and perform a rolling restart to activate the changes without downtime.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/coredns-custom.md#2025-04-21_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n# Apply configuration changes\nkubectl apply -f corednsms.yaml\n\n# Force CoreDNS to reload the ConfigMap\nkubectl -n kube-system rollout restart deployment coredns\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal\nDESCRIPTION: Azure CLI command to create a service principal with Contributor role for Azure authentication in GitHub Actions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-upgrade-github-actions.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz ad sp create-for-rbac --role Contributor --scopes /subscriptions/{subscriptionID} -o json\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials with Azure CLI\nDESCRIPTION: Retrieves the credentials for the AKS cluster using the az aks get-credentials command. This step is necessary for interacting with the cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Scaling AKS Cluster Nodes - Azure CLI\nDESCRIPTION: Command to scale an AKS cluster to a specified number of nodes using Azure CLI. Requires resource group name, cluster name, desired node count, and node pool name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks scale --resource-group myResourceGroup --name myAKSCluster --node-count 1 --nodepool-name <your node pool name>\n```\n\n----------------------------------------\n\nTITLE: Creating New AKS Cluster with GMSA Enabled\nDESCRIPTION: Creates a new AKS cluster with GMSA support enabled, including DNS server configuration and root domain name settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nDNS_SERVER=<IP address of DNS server>\nROOT_DOMAIN_NAME=\"contoso.com\"\n\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --vm-set-type VirtualMachineScaleSets \\\n    --network-plugin azure \\\n    --load-balancer-sku standard \\\n    --windows-admin-username $WINDOWS_USERNAME \\\n    --enable-windows-gmsa \\\n    --gmsa-dns-server $DNS_SERVER \\\n    --gmsa-root-domain-name $ROOT_DOMAIN_NAME \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating RBAC Role Assignment for Key Vault\nDESCRIPTION: Commands to create role assignments for the managed identity to access Key Vault with RBAC.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\nexport IDENTITY_OBJECT_ID=\"$(az identity show --resource-group <resource-group> --name <identity-name> --query 'principalId' -o tsv)\"\nexport KEYVAULT_SCOPE=$(az keyvault show --name <key-vault-name> --query id -o tsv)\n\n# Example command for key vault with RBAC enabled using `key` type\naz role assignment create --role \"Key Vault Certificate User\" --assignee $USER_ASSIGNED_CLIENT_ID --scope $KEYVAULT_SCOPE\n```\n\n----------------------------------------\n\nTITLE: Creating a Dual-Stack AKS Cluster with Azure CLI\nDESCRIPTION: Command to create an AKS cluster with dual-stack (IPv4 and IPv6) networking using the Azure CLI with the --ip-families parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks create \\\n    --location <region> \\\n    --resource-group <resourceGroupName> \\\n    --name <clusterName> \\\n    --ip-families ipv4,ipv6 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Logs for IMDS Transactions\nDESCRIPTION: This Bash command retrieves the logs from the pod to verify successful IMDS transactions through the proxy sidecar. Replace 'podName' with the actual name of your deployed pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs podName\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Open-Source Secrets Store CSI Driver\nDESCRIPTION: Command to remove the existing open-source Secrets Store CSI Driver installation using Helm.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhelm delete <release name>\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Pod with NFS Volume Mount\nDESCRIPTION: YAML configuration for a Kubernetes pod that mounts the NFS volume using the persistent volume claim. This configuration creates an Nginx pod that writes timestamps to a file on the mounted volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: nginx-nfs\nspec:\n  containers:\n  - image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n    name: nginx-nfs\n    command:\n    - \"/bin/sh\"\n    - \"-c\"\n    - while true; do echo $(date) >> /mnt/azure/outfile; sleep 1; done\n    volumeMounts:\n    - name: disk01\n      mountPath: /mnt/azure\n  volumes:\n  - name: disk01\n    persistentVolumeClaim:\n      claimName: pvc-nfs\n```\n\n----------------------------------------\n\nTITLE: Applying GMSA Configurations using kubectl\nDESCRIPTION: Commands to apply the GMSA specifications, role, and role binding configurations to the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply -f gmsa-spec.yaml\nkubectl apply -f gmsa-role.yaml\nkubectl apply -f gmsa-role-binding.yaml\n```\n\n----------------------------------------\n\nTITLE: Kubectl Apply Command for Deployment\nDESCRIPTION: Command to deploy the AKS Store application using kubectl apply with the specified YAML manifest file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f aks-store-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster Resources in Terraform\nDESCRIPTION: This snippet defines the main resources for creating an AKS cluster, including a random pet name for the resource group, the resource group itself, and the AKS cluster configuration. It also retrieves the Azure client configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_2\n\nLANGUAGE: HCL\nCODE:\n```\nresource \"random_pet\" \"azurerm_kubernetes_cluster_name\" {\n  prefix = \"cluster\"\n}\n\nresource \"random_pet\" \"azurerm_kubernetes_cluster_dns_prefix\" {\n  prefix = \"dns\"\n}\n\nresource \"azurerm_resource_group\" \"rg\" {\n  location = var.resource_group_location\n  name     = var.resource_group_name\n}\n\ndata \"azurerm_client_config\" \"current\" {}\n\nresource \"azurerm_kubernetes_cluster\" \"k8s\" {\n  location            = azurerm_resource_group.rg.location\n  name                = random_pet.azurerm_kubernetes_cluster_name.id\n  resource_group_name = azurerm_resource_group.rg.name\n  dns_prefix          = random_pet.azurerm_kubernetes_cluster_dns_prefix.id\n\n  identity {\n    type = \"SystemAssigned\"\n  }\n\n  default_node_pool {\n    name       = \"agentpool\"\n    vm_size    = \"Standard_D2_v2\"\n    node_count = var.node_count\n  }\n  linux_profile {\n    admin_username = var.username\n\n    ssh_key {\n      key_data = jsondecode(azapi_resource_action.ssh_public_key.output).publicKey\n    }\n  }\n  network_profile {\n    network_plugin    = \"kubenet\"\n    load_balancer_sku = \"standard\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with Azure Disk\nDESCRIPTION: Command to create a pod with the configured persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f azure-pvc-disk.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with System Node Pool using Azure CLI\nDESCRIPTION: Creates a new AKS cluster named 'myAKSCluster' with a single system node pool containing two nodes using Azure CLI. This default node pool is automatically configured as a system node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a new AKS cluster with a single system pool\naz aks create --resource-group myResourceGroup --name myAKSCluster --node-count 2 --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating a kube-proxy Configuration File\nDESCRIPTION: JSON configuration file that enables IPVS mode with LeastConnection scheduler and custom timeout settings for TCP and UDP connections in kube-proxy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kube-proxy.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"mode\": \"IPVS\",\n  \"ipvsConfig\": {\n    \"scheduler\": \"LeastConnection\",\n    \"TCPTimeoutSeconds\": 900,\n    \"TCPFINTimeoutSeconds\": 120,\n    \"UDPTimeoutSeconds\": 300\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume for Airflow Logs\nDESCRIPTION: Defines a persistent volume using Azure Blob storage for storing Airflow logs with CSI driver configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-airflow-logs\n  labels:\n    type: local\nspec:\n  capacity:\n    storage: 5Gi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: azureblob-fuse-premium\n  mountOptions:\n    - -o allow_other\n    - --file-cache-timeout-in-seconds=120\n  csi:\n    driver: blob.csi.azure.com\n    readOnly: false\n    volumeHandle: airflow-logs-1\n    volumeAttributes:\n      resourceGroup: ${MY_RESOURCE_GROUP_NAME}\n      storageAccount: ${AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_NAME}\n      containerName: ${AKS_AIRFLOW_LOGS_STORAGE_CONTAINER_NAME}\n    nodeStageSecretRef:\n      name: ${AKS_AIRFLOW_LOGS_STORAGE_SECRET_NAME}\n      namespace: ${AKS_AIRFLOW_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Creating Static Public IP Address in Azure\nDESCRIPTION: Azure CLI command to create a static public IP address for use with the NGINX ingress controller.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz network public-ip create \\\n    --resource-group myNetworkResourceGroup \\\n    --name myIngressPublicIP \\\n    --sku Standard \\\n    --allocation-method static\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with User-Assigned Managed Identity\nDESCRIPTION: Deploys an AKS cluster using a user-assigned managed identity by specifying the identity resource ID with the --assign-identity parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-count 3 \\\n    --network-plugin kubenet \\\n    --vnet-subnet-id $SUBNET_ID \\\n    --assign-identity <identity-resource-id> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Checking Available AKS Cluster Upgrade Versions\nDESCRIPTION: This Azure CLI command retrieves a list of available Kubernetes versions for upgrading the AKS cluster. It outputs the results in a table format for easy reading.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-mongodb-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-upgrades --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --output table\n```\n\n----------------------------------------\n\nTITLE: Enabling Image Cleaner on a new AKS cluster\nDESCRIPTION: Creates a new AKS cluster with Image Cleaner enabled using the Azure CLI. This command initializes a new cluster with the default Image Cleaner configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --enable-image-cleaner \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Control Plane Metrics Configuration\nDESCRIPTION: Command to apply a customized configuration for control plane metrics collection using kubectl, allowing you to specify which components to monitor.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f configmap-controlplane.yaml\n```\n\n----------------------------------------\n\nTITLE: Converting Kubeconfig with Kubelogin\nDESCRIPTION: Converts kubeconfig file using kubelogin plugin to enable non-interactive logins and SSO across multiple clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\nkubelogin convert-kubeconfig\n```\n\n----------------------------------------\n\nTITLE: Adding NGINX Ingress Repository to Helm in AKS\nDESCRIPTION: This command adds the NGINX ingress controller repository to Helm, making its charts available for installation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nhelm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\n```\n\n----------------------------------------\n\nTITLE: Creating a Windows GPU-Enabled Node Pool\nDESCRIPTION: Command to add a Windows GPU-enabled node pool to an existing AKS cluster using a supported GPU-enabled VM size. This example uses automatic driver installation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n   --resource-group myResourceGroup \\\n   --cluster-name myAKSCluster \\\n   --name gpunp \\\n   --node-count 1 \\\n   --os-type Windows \\\n   --kubernetes-version 1.29.0 \\\n   --node-vm-size Standard_NC6s_v3\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Using Azure Developer CLI\nDESCRIPTION: Commands to authenticate and verify cluster connectivity using Azure Developer CLI. Includes authentication login and node listing steps.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-cluster.md#2025-04-21_snippet_6\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd auth login\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME                                STATUS   ROLES   AGE   VERSION\naks-nodepool1-19366578-vmss000000   Ready    agent   47h   v1.30.9\naks-nodepool1-19366578-vmss000001   Ready    agent   47h   v1.30.9\naks-nodepool1-19366578-vmss000002   Ready    agent   47h   v1.30.9\n```\n\n----------------------------------------\n\nTITLE: Installing the Dapr Extension on AKS\nDESCRIPTION: Azure CLI command to install the Dapr extension on the AKS cluster, which enables Dapr capabilities including workflow functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters --cluster-name myAKSCluster --resource-group myResourceGroup --name dapr --extension-type Microsoft.Dapr\n```\n\n----------------------------------------\n\nTITLE: Creating Federated Identity Credential\nDESCRIPTION: Command to create a federated identity credential between the managed identity, AKS OIDC issuer, and the KAITO GPU provisioner service account, enabling workload identity federation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity federated-credential create --name \"kaito-federated-identity\" \\\n    --identity-name $KAITO_IDENTITY_NAME \\\n    -g $MC_RESOURCE_GROUP \\\n    --issuer $AKS_OIDC_ISSUER \\\n    --subject system:serviceaccount:\"kube-system:kaito-gpu-provisioner\" \\\n    --audience api://AzureADTokenExchange\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Health Probe Endpoint for HTTPS Port in AKS Service YAML\nDESCRIPTION: This YAML manifest demonstrates how to set up a custom health probe endpoint for the HTTPS port in an AKS service. It uses annotations to specify an HTTP readiness check at port 30000 on the /healthz/ready endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: istio\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n    service.beta.kubernetes.io/port_443_health-probe_protocol: \"http\"\n    service.beta.kubernetes.io/port_443_health-probe_port: \"30000\"\n    service.beta.kubernetes.io/port_443_health-probe_request-path: \"/healthz/ready\"\nspec:\n  ports:\n    - name: https\n      protocol: TCP\n      port: 443\n      targetPort: 8443\n      appProtocol: https\n  selector:\n    app: istio-ingressgateway\n    gateway: istio-ingressgateway\n    istio: ingressgateway\n  type: LoadBalancer\n  sessionAffinity: None\n  externalTrafficPolicy: Local\n  ipFamilies:\n    - IPv4\n  ipFamilyPolicy: SingleStack\n  allocateLoadBalancerNodePorts: true\n  internalTrafficPolicy: Cluster\n```\n\n----------------------------------------\n\nTITLE: Adding NGINX Ingress Chart Repository using Helm\nDESCRIPTION: These bash commands add the official NGINX ingress controller Helm chart repository and update the local Helm repository cache to ensure the latest charts are available for installation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Checking Deployed Pods Status in AKS using kubectl in PowerShell\nDESCRIPTION: This command retrieves the status of deployed pods in the AKS cluster. It's used to verify that all pods are in the 'Running' state before proceeding with further operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_10\n\nLANGUAGE: PowerShell\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Applying Security Policies to Test Namespaces\nDESCRIPTION: Configures two namespaces with different security policies: 'restricted' for strict security and 'privileged' for permissive settings. Both enforcement and warning levels are set to the same value for each namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-psa.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl label --overwrite ns test-restricted pod-security.kubernetes.io/enforce=restricted pod-security.kubernetes.io/warn=restricted\nkubectl label --overwrite ns test-privileged pod-security.kubernetes.io/enforce=privileged pod-security.kubernetes.io/warn=privileged\n```\n\n----------------------------------------\n\nTITLE: Azure Kubernetes Service Built-in RBAC Roles Table\nDESCRIPTION: Table detailing the four built-in RBAC roles in AKS: RBAC Reader, Writer, Admin, and Cluster Admin, along with their respective access levels and limitations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-identity.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Role                                | Description  |\n|-------------------------------------|--------------||\n| Azure  Kubernetes Service RBAC Reader  | Allows read-only access to see most objects in a namespace. <br> Doesn't allow viewing roles or role bindings.<br> Doesn't allow viewing `Secrets`. Reading the `Secrets` contents enables access to `ServiceAccount` credentials in the namespace, which would allow API access as any `ServiceAccount` in the namespace (a form of privilege escalation).  |\n| Azure Kubernetes Service RBAC  Writer | Allows read/write access to most objects in a namespace. <br> Doesn't allow viewing or modifying roles, or role bindings. <br> Allows accessing `Secrets` and running pods as any ServiceAccount in the namespace, so it can be used to gain the API access levels of any ServiceAccount in the namespace. |\n| Azure Kubernetes Service RBAC Admin  | Allows admin access, intended to be granted within a namespace. <br> Allows read/write access to most resources in a namespace (or cluster scope), including the ability to create roles and role bindings within the namespace. <br> Doesn't allow write access to resource quota or to the namespace itself. |\n| Azure Kubernetes Service RBAC Cluster Admin  | Allows super-user access to perform any action on any resource. <br> Gives full control over every resource in the cluster and in all namespaces. |\n```\n\n----------------------------------------\n\nTITLE: Enabling Blob CSI Driver on Existing AKS Cluster\nDESCRIPTION: Azure CLI command to update an existing AKS cluster to enable the Blob storage CSI driver.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-blob-csi.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --enable-blob-driver --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Deploying an Application Service to OSM Mesh\nDESCRIPTION: These commands deploy the httpbin application to the httpbin namespace in the OSM mesh. It sets the release branch variable and applies the manifest from the OSM documentation repository.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport RELEASE_BRANCH=release-v1.2\nkubectl apply -f https://raw.githubusercontent.com/openservicemesh/osm-docs/$RELEASE_BRANCH/manifests/samples/httpbin/httpbin.yaml -n httpbin\n```\n\n----------------------------------------\n\nTITLE: Mongo Express Deployment Configuration\nDESCRIPTION: Kubernetes manifests for deploying Mongo Express with LoadBalancer service and necessary environment variables\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-mongodb-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: mongo-express\n  namespace: ${AKS_MONGODB_NAMESPACE}\nspec:\n  type: LoadBalancer\n  ports:\n    - port: 8081\n      targetPort: 8081\n  selector:\n    app: mongo-express\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mongo-express\n  namespace: ${AKS_MONGODB_NAMESPACE}\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: mongo-express\n  template:\n    metadata:\n      labels:\n        app: mongo-express\n    spec:\n      containers:\n        - name: mongo-express\n          image: mongo-express\n          ports:\n            - containerPort: 8081\n          env:\n            [...]\n```\n\n----------------------------------------\n\nTITLE: Assigning Permissions to Managed Identity\nDESCRIPTION: Grants Virtual Machine Contributor permissions to the managed identity in the AKS cluster's node resource group. This allows the identity to perform necessary operations on the cluster's underlying resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nNODE_GROUP=$(az aks show --resource-group myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv)\n\nNODES_RESOURCE_ID=$(az group show --name $NODE_GROUP -o tsv --query \"id\")\n\naz role assignment create --role \"Virtual Machine Contributor\" --assignee \"$IDENTITY_CLIENT_ID\" --scope $NODES_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Updating a Node Pool to Enable Trusted Launch Features\nDESCRIPTION: Updates an existing node pool to enable both Secure Boot and vTPM security features. The node pool must already be using a trusted launch compatible image.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-trusted-launch.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update --cluster-name myCluster --resource-group myResourceGroup --name mynodepool --enable-secure-boot --enable-vtpm\n```\n\n----------------------------------------\n\nTITLE: Installing aks-preview Azure CLI Extension\nDESCRIPTION: Commands to install and update the aks-preview Azure CLI extension, which is required for AKS Confidential Containers functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Docker Image in Azure Pipeline\nDESCRIPTION: YAML configuration for the build stage that uses Docker task to build and push an image to Azure Container Registry. Includes steps for building/pushing the image and publishing pipeline artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/devops-pipeline.md#2025-04-21_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n- stage: Build\n  displayName: Build stage\n  jobs:  \n  - job: Build\n    displayName: Build job\n    pool:\n      vmImage: $(vmImageName)\n    steps:\n    - task: Docker@2\n      displayName: Build and push an image to container registry\n      inputs:\n        command: buildAndPush\n        repository: $(imageRepository)\n        dockerfile: $(dockerfilePath)\n        containerRegistry: $(dockerRegistryServiceConnection)\n        tags: |\n          $(tag)\n          \n    - task: PublishPipelineArtifact@1\n      inputs:\n        artifactName: 'manifests'\n        path: 'manifests'\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with ACR Integration using PowerShell\nDESCRIPTION: Creates a 3-node AKS cluster with access to Azure Container Registry using PowerShell cmdlets. Configures node size, SSH keys and attaches ACR.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeCount 3 -NodeVmSize standard_l8s_v3 -GenerateSshKey -AcrNameToAttach $ACRNAME\n```\n\n----------------------------------------\n\nTITLE: Creating an NFS Volume with Azure CLI for Azure NetApp Files\nDESCRIPTION: Commands to define variables and create an NFS volume using Azure CLI. This snippet sets up environment variables and uses the az netappfiles volume create command to provision an NFSv3 volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nRESOURCE_GROUP=\"myresourcegroup\"\nLOCATION=\"mylocation\"\nANF_ACCOUNT_NAME=\"myaccountname\"\nPOOL_NAME=\"mypool1\"\nSERVICE_LEVEL=\"premium\" # Valid values are Standard, Premium, and Ultra\nUNIQUE_FILE_PATH=\"myfilepath\"\nVOLUME_SIZE_GIB=\"myvolsize\"\nVOLUME_NAME=\"myvolname\"\nVNET_ID=\"vnetId\"\nSUBNET_ID=\"anfSubnetId\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz netappfiles volume create \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $LOCATION \\\n    --account-name $ANF_ACCOUNT_NAME \\\n    --pool-name $POOL_NAME \\\n    --name \"$VOLUME_NAME\" \\\n    --service-level $SERVICE_LEVEL \\\n    --vnet $VNET_ID \\\n    --subnet $SUBNET_ID \\\n    --usage-threshold $VOLUME_SIZE_GIB \\\n    --file-path $UNIQUE_FILE_PATH \\\n    --protocol-types NFSv3\n```\n\n----------------------------------------\n\nTITLE: Creating a Federated Identity Credential\nDESCRIPTION: Establishes a federated identity credential between the managed identity, the service account issuer, and the subject using Azure CLI, completing the trust relationship needed for workload identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity federated-credential create --name federatedIdentityName --identity-name userAssignedIdentityName --resource-group resourceGroupName --issuer ${AKS_OIDC_ISSUER} --subject system:serviceaccount:${SERVICE_ACCOUNT_NAMESPACE}:${SERVICE_ACCOUNT_NAME} --audience api://AzureADTokenExchange\n```\n\n----------------------------------------\n\nTITLE: Viewing VPA Resource Recommendations\nDESCRIPTION: Command to describe the VPA resource to view its current recommendations and status for the target deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe vpa/hamster-vpa\n```\n\n----------------------------------------\n\nTITLE: Checking OSM Controller Version with kubectl\nDESCRIPTION: Retrieves the version of the OSM controller deployment using kubectl. This command displays the image version of the osm-controller deployment in the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get deployment -n kube-system osm-controller -o=jsonpath='{$.spec.template.spec.containers[:1].image}'\n```\n\n----------------------------------------\n\nTITLE: Setting up Monitoring and Governance Infrastructure\nDESCRIPTION: Deploys monitoring and governance components including Log Analytics workspace, Azure Monitor for Prometheus, Grafana, Container Registry, and managed identities.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz monitor log-analytics workspace create \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--workspace-name $LOG_ANALYTICS_WORKSPACE_NAME \\\n--location $LOCATION\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz monitor account create \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name $PROMETHEUS_WORKSPACE_NAME \\\n--location $LOCATION\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz grafana create \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name $GRAFANA_NAME \\\n--location $LOCATION \\\n--api-key Enabled \\\n--deterministic-outbound-ip Enabled \\\n--public-network-access Enabled \\\n--grafana-major-version 11\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr create \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name $ACR_NAME \\\n--sku $ACR_SKU \\\n--location $LOCATION \\\n--admin-enabled false \\\n--zone-redundancy Enabled\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name $USER_ASSIGNED_IDENTITY_NAME \\\n--location $LOCATION\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create \\\n--assignee $(az grafana show --resource-group $RESOURCE_GROUP_NAME --name $GRAFANA_NAME --query identity.principalId -o tsv) \\\n--role \"Monitoring Reader\" --scope $(az group show --name $RESOURCE_GROUP_NAME --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Configuring TCP Keepalive in .NET HTTP Client Applications\nDESCRIPTION: This C# code example shows how to implement TCP keepalive for .NET applications using SocketsHttpHandler. It configures socket options to maintain persistent HTTP connections with the same parameters as the Python example: 60 seconds idle time, 10 second intervals, and 5 retry attempts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/improve-network-fault-tolerance-in-aks-using-tcp-keepalive.md#2025-04-21_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nstatic async Task Main()\n{\n    using SocketsHttpHandler handler = new SocketsHttpHandler();\n\n    handler.ConnectCallback = async (ctx, ct) =>\n    {\n        var s = new Socket(SocketType.Stream, ProtocolType.Tcp) { NoDelay = true };\n        try\n        {\n            s.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.KeepAlive, true);\n            s.SetSocketOption(SocketOptionLevel.Tcp, SocketOptionName.TcpKeepAliveTime,60);\n            s.SetSocketOption(SocketOptionLevel.Tcp, SocketOptionName.TcpKeepAliveInterval, 10);\n            s.SetSocketOption(SocketOptionLevel.Tcp, SocketOptionName.TcpKeepAliveRetryCount, 5);\n            await s.ConnectAsync(ctx.DnsEndPoint, ct);\n            return new NetworkStream(s, ownsSocket: true);\n        }\n        catch\n        {\n            s.Dispose();\n            throw;\n        }\n    };\n\n    // Create an HttpClient object\n    using HttpClient client = new HttpClient(handler);\n\n    // Call asynchronous network methods in a try/catch block to handle exceptions\n    try\n    {\n        HttpResponseMessage response = await client.GetAsync(\"<service url>\");\n\n        response.EnsureSuccessStatusCode();\n\n        string responseBody = await response.Content.ReadAsStringAsync();\n        Console.WriteLine($\"Read {responseBody.Length} characters\");\n    }\n    catch (HttpRequestException e)\n    {\n        Console.WriteLine(\"\\nException Caught!\");\n        Console.WriteLine($\"Message: {e.Message} \");\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Pod Security Admission for All Namespaces in AKS\nDESCRIPTION: This command applies a 'baseline' warning policy to all namespaces in the cluster. This configuration generates warnings when pods violate the baseline security policy but does not block them from running.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-psa.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl label --overwrite ns --all pod-security.kubernetes.io/warn=baseline\n```\n\n----------------------------------------\n\nTITLE: Applying KAITO Fine-tuning Workspace in Bash\nDESCRIPTION: Applies the KAITO fine-tuning workspace configuration to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-fine-tune.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply workspace-tuning-phi-3-mini.yaml\n```\n\n----------------------------------------\n\nTITLE: Migrating Legacy Azure AD Cluster\nDESCRIPTION: Upgrades a legacy Microsoft Entra integration to AKS-managed Microsoft Entra integration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-authentication-microsoft-entra-id.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myManagedCluster --enable-aad --aad-admin-group-object-ids <id> [--aad-tenant-id <id>]\n```\n\n----------------------------------------\n\nTITLE: Accessing Kubelet Logs Using kubectl raw Command\nDESCRIPTION: Command to quickly view kubelet logs for any node using kubectl's raw API endpoint access. Requires specifying the node name in the command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelet-logs.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get --raw \"/api/v1/nodes/nodename/proxy/logs/messages\"|grep kubelet\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Command for AKS Cluster Creation with HTTP Proxy\nDESCRIPTION: Command to create an AKS cluster with HTTP proxy configuration using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/http-proxy.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz aks create \\\n    --name $clusterName \\\n    --resource-group $resourceGroup \\\n    --http-proxy-config aks-proxy-config.json \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Retrieving Managed Identity Resource ID\nDESCRIPTION: This command retrieves the resource ID of the created managed identity and stores it in a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_19\n\nLANGUAGE: azurecli\nCODE:\n```\nIDENTITY_RESOURCE_ID=$(az identity show --name MyIdentity --resource-group MyResourceGroup --query 'id' -o tsv)\necho $IDENTITY_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: External Secrets Configuration\nDESCRIPTION: Kubernetes manifest for configuring external secrets integration with Azure Key Vault\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-mongodb-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: ${AKS_MONGODB_SECRETS_NAME}\n  namespace: ${AKS_MONGODB_NAMESPACE}\nspec:\n  refreshInterval: 1h\n  secretStoreRef:\n    kind: SecretStore\n    name: azure-store\n  target:\n    name: \"${AKS_MONGODB_SECRETS_NAME}\"\n    creationPolicy: Owner\n  data:\n    - secretKey: MONGODB_BACKUP_USER\n      remoteRef:\n        key: MONGODB-BACKUP-USER\n    [...]\n```\n\n----------------------------------------\n\nTITLE: Creating Node Pool with Taint in AKS\nDESCRIPTION: Creates a new node pool with a specified taint using Azure CLI. The command adds a NoSchedule taint with key 'sku' and value 'gpu'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --name $NODE_POOL_NAME \\\n    --node-count 1 \\\n    --node-taints \"sku=gpu:NoSchedule\" \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Cluster using Azure CLI\nDESCRIPTION: Azure CLI command to deploy an AKS cluster using a Bicep template with required parameters for DNS prefix, admin username, and SSH key.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group myResourceGroup --template-file main.bicep --parameters dnsPrefix=<dns-prefix> linuxAdminUsername=<linux-admin-username> sshRSAPublicKey='<ssh-key>'\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials\nDESCRIPTION: This command retrieves the credentials for an AKS cluster, allowing you to connect to the cluster using kubectl and other Kubernetes tools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: AKS Service Documentation\nDESCRIPTION: Comprehensive markdown documentation covering AKS cluster states, feature support, and issue handling procedures. Includes details about cluster preservation policies, preview feature guidelines, and upstream bug management processes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/support-policies.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Stopped, deallocated, and Not Ready nodes\n\nIf you do not need your AKS workloads to run continuously, you can [stop the AKS cluster](start-stop-cluster.md#stop-an-aks-cluster), which stops all nodepools and the control plane. You can start it again when needed. When you stop a cluster using the `az aks stop` command, the cluster state is preserved for up to 12 months. After 12 months, the cluster state and all of its resources are deleted.\n\nManually deallocating all cluster nodes from the IaaS APIs, the Azure CLI, or the Azure portal isn't supported to stop an AKS cluster or nodepool. The cluster will be considered out of support and stopped by AKS after 30 days. The clusters are then subject to the same 12 month preservation policy as a correctly stopped cluster.\n\nClusters with zero **Ready** nodes (or all **Not Ready**) and zero **Running** VMs will be stopped after 30 days.\n\nAKS reserves the right to archive control planes that have been configured out of support guidelines for extended periods equal to and beyond 30 days. AKS maintains backups of cluster etcd metadata and can readily reallocate the cluster. This reallocation is initiated by any PUT operation bringing the cluster back into support, such as an upgrade or scale to active agent nodes.\n\nAll clusters in a suspended subscription will be stopped immediately and deleted after 90 days. All clusters in a deleted subscription will be deleted immediately.\n\n## Unsupported alpha and beta Kubernetes features\n\nAKS only supports stable and beta features within the upstream Kubernetes project. Unless otherwise documented, AKS doesn't support any alpha feature that is available in the upstream Kubernetes project.\n\n## Preview features or feature flags\n\nFor features and functionality that requires extended testing and user feedback, Microsoft releases new preview features or features behind a feature flag. Consider these features as prerelease or beta features.\n\nPreview features or feature-flag features aren't meant for production. Ongoing changes in APIs and behavior, bug fixes, and other changes can result in unstable clusters and downtime.\n\nFeatures in public preview fall under **best effort** support, as these features are in preview and are not meant for production. The AKS technical support teams provides support during business hours only. For more information, see [Azure Support FAQ](https://azure.microsoft.com/support/faq/).\n\n## Upstream bugs and issues\n\nGiven the speed of development in the upstream Kubernetes project, bugs invariably arise. Some of these bugs can't be patched or worked around within the AKS system. Instead, bug fixes require larger patches to upstream projects (such as Kubernetes, node or agent operating systems, and kernel). For components that Microsoft owns (such as the Azure cloud provider), AKS and Azure personnel are committed to fixing issues upstream in the community.\n\nWhen the root cause of a technical support issue is due to one or more upstream bugs, AKS support and engineering teams will:\n\n* Identify and link the upstream bugs with any supporting details to help explain why this issue affects your cluster or workload. Customers receive links to the required repositories so they can watch the issues and see when a new release will provide fixes.\n* Provide potential workarounds or mitigation. If the issue can be mitigated, a [known issue](https://github.com/Azure/AKS/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue) is filed in the AKS repository. The known-issue filing explains:\n\n  * The issue, including links to upstream bugs.\n  * The workaround and details about an upgrade or another persistence of the solution.\n  * Rough timelines for the issue's inclusion, based on the upstream release cadence.\n\n[add-ons]: integrations.md#add-ons\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault Instance\nDESCRIPTION: Provisions an Azure Key Vault instance for secure secret management with RBAC authorization disabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault create --name $MY_KEYVAULT_NAME --resource-group $MY_RESOURCE_GROUP_NAME --location $MY_LOCATION --enable-rbac-authorization false --output table\n```\n\n----------------------------------------\n\nTITLE: Importing Images to ACR\nDESCRIPTION: Imports a container image from Docker Hub into Azure Container Registry using either Azure CLI or PowerShell commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr import --name <acr-name> --source docker.io/library/nginx:latest --image nginx:v1\n```\n\nLANGUAGE: powershell\nCODE:\n```\nImport-AzContainerRegistryImage -RegistryName <acr-name> -ResourceGroupName myResourceGroup -SourceRegistryUri docker.io -SourceImage library/nginx:latest\n```\n\n----------------------------------------\n\nTITLE: Applying Azure Monitor ConfigMap for OSM\nDESCRIPTION: This command applies the ConfigMap that configures Azure Monitor to collect metrics from the OSM mesh, enabling observability for mesh services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_11\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f monitor-configmap.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating a Storage Class with blobfuse in Azure Kubernetes Service\nDESCRIPTION: This YAML manifest configures a storage class that uses blobfuse to mount Azure Blob storage with premium performance. It includes various mount options for optimizing file caching, attribute timeouts, and memory usage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_5\n\nLANGUAGE: yml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: azureblob-fuse-premium\nprovisioner: blob.csi.azure.com\nparameters:\n  skuName: Standard_GRS  # available values: Standard_LRS, Premium_LRS, Standard_GRS, Standard_RAGRS\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\nallowVolumeExpansion: true\nmountOptions:\n  - -o allow_other\n  - --file-cache-timeout-in-seconds=120\n  - --use-attr-cache=true\n  - --cancel-list-on-mount-seconds=10  # prevent billing charges on mounting\n  - -o attr_timeout=120\n  - -o entry_timeout=120\n  - -o negative_timeout=120\n  - --log-level=LOG_WARNING  # LOG_WARNING, LOG_INFO, LOG_DEBUG\n  - --cache-size-mb=1000  # Default will be 80% of available memory, eviction will happen beyond that.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Firewall for AKS Traffic Control\nDESCRIPTION: Sets up Azure Firewall with public IP, enables DNS proxy, and configures IP settings for controlling AKS cluster traffic.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz network public-ip create --resource-group $RG -n $FWPUBLICIP_NAME --location $LOC --sku \"Standard\"\n\naz extension add --name azure-firewall\n\naz network firewall create --resource-group $RG --name $FWNAME --location $LOC --enable-dns-proxy true\n\naz network firewall ip-config create --resource-group $RG --firewall-name $FWNAME --name $FWIPCONFIG_NAME --public-ip-address $FWPUBLICIP_NAME --vnet-name $VNET_NAME\n\nFWPUBLIC_IP=$(az network public-ip show --resource-group $RG --name $FWPUBLICIP_NAME --query \"ipAddress\" -o tsv)\nFWPRIVATE_IP=$(az network firewall show --resource-group $RG --name $FWNAME --query \"ipConfigurations[0].privateIPAddress\" -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview Extension for Azure CLI\nDESCRIPTION: Installs the aks-preview extension for Azure CLI, which is required to use preview features like Azure Network Policy Manager with Windows Server 2022 nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz extension add --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Deploying OpenAI Service Configuration\nDESCRIPTION: YAML manifest for deploying an AI service using OpenAI configuration. Includes deployment and service specifications with environment variables for OpenAI integration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ai-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: ai-service\n  template:\n    metadata:\n      labels:\n        app: ai-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: ai-service\n        image: ghcr.io/azure-samples/aks-store-demo/ai-service:latest\n        ports:\n        - containerPort: 5001\n        env:\n        - name: USE_AZURE_OPENAI\n          value: \"False\"\n        - name: OPENAI_API_KEY \n          value: \"\"\n        - name: OPENAI_ORG_ID \n          value: \"\"\n        resources:\n          requests:\n            cpu: 20m\n            memory: 50Mi\n          limits:\n            cpu: 50m\n            memory: 128Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: ai-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 5001\n    targetPort: 5001\n  selector:\n    app: ai-service\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials in Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the credentials for the AKS cluster, allowing kubectl to connect to the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterResourceOverride with Multiple Override Patches in YAML\nDESCRIPTION: This YAML snippet shows how to define a ClusterResourceOverride object with multiple jsonPatchOverrides. It removes both 'list' and 'watch' verbs from the ClusterRole 'secret-reader' on clusters labeled with 'env: prod'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/cluster-resource-override.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1alpha1\nkind: ClusterResourceOverride\nmetadata:\n  name: cro-1\nspec:\n  clusterResourceSelectors:\n    - group: rbac.authorization.k8s.io\n      kind: ClusterRole\n      version: v1\n      name: secret-reader\n  policy:\n    overrideRules:\n      - clusterSelector:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  env: prod\n        jsonPatchOverrides:\n          - op: remove\n            path: /rules/0/verbs/2\n          - op: remove\n            path: /rules/0/verbs/1\n```\n\n----------------------------------------\n\nTITLE: Identifying Node Resource Group Using Azure CLI\nDESCRIPTION: Command to identify the node resource group hosting the Azure managed disks of an AKS cluster using the az aks show command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv\n```\n\n----------------------------------------\n\nTITLE: Creating an NGINX Pod with Premium SSD v2 Disk Mount\nDESCRIPTION: This YAML manifest creates an NGINX pod that mounts the previously created Premium SSD v2 disk persistent volume at the '/mnt/azure' path. It includes resource requests and limits for the container.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-premium-v2-disks.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: nginx-premium2\nspec:\n  containers:\n  - name: nginx-premium2\n    image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 250m\n        memory: 256Mi\n    volumeMounts:\n    - mountPath: \"/mnt/azure\"\n      name: volume\n  volumes:\n    - name: volume\n      persistentVolumeClaim:\n        claimName: premium2-disk\n```\n\n----------------------------------------\n\nTITLE: Defining LoadBalancer Service in Kubernetes YAML\nDESCRIPTION: This YAML manifest defines a Kubernetes LoadBalancer service using the Azure Standard Load Balancer. It includes an annotation for an IPv4 address and exposes port 80.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-ipv4 # Service annotation for an IPv4 address\n  name: azure-load-balancer\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n  selector:\n    app: azure-load-balancer\n```\n\n----------------------------------------\n\nTITLE: Creating a new PVC and pod based on a volume snapshot\nDESCRIPTION: Commands to create a new PVC that's restored from a volume snapshot and a new pod that consumes this restored PVC.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/deploy/example/snapshot/pvc-azuredisk-snapshot-restored.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/deploy/example/snapshot/nginx-pod-restored-snapshot.yaml\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure Hybrid Benefit on Existing AKS Cluster (Azure CLI)\nDESCRIPTION: This snippet demonstrates how to enable Azure Hybrid Benefit on an existing AKS cluster using Azure CLI. It updates the specified cluster to enable the Azure Hybrid Benefit feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hybrid-benefit.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nRG_NAME='myResourceGroup'\nCLUSTER='myAKSCluster'\n\naz aks update --resouce-group $RG_NAME --name $CLUSTER--enable-ahub\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Role for AKS Deployment Reader in JSON\nDESCRIPTION: This JSON snippet defines a custom role that allows a user to read deployments in an AKS cluster or namespace. It specifies the role name, description, allowed actions, and assignable scopes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_4\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"Name\": \"AKS Deployment Reader\",\n    \"Description\": \"Lets you view all deployments in cluster/namespace.\",\n    \"Actions\": [],\n    \"NotActions\": [],\n    \"DataActions\": [\n        \"Microsoft.ContainerService/managedClusters/apps/deployments/read\"\n    ],\n    \"NotDataActions\": [],\n    \"assignableScopes\": [\n        \"/subscriptions/<YOUR SUBSCRIPTION ID>\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to an AKS Cluster using kubectl\nDESCRIPTION: Imports the AKS cluster credentials to configure kubectl for cluster management, then verifies the connection by retrieving node information. This demonstrates how to interact with the newly created AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-powershell.md#2025-04-21_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\n```\n\nLANGUAGE: PowerShell\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Monitoring Job Progress in Kubernetes\nDESCRIPTION: Command to watch the progress of the TensorFlow GPU job until completion, indicated by COMPLETIONS showing 1/1.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_10\n\nLANGUAGE: console\nCODE:\n```\nkubectl get jobs samples-tf-mnist-demo --watch\n```\n\n----------------------------------------\n\nTITLE: Creating Pod Configuration with Volume Mount\nDESCRIPTION: YAML configuration for creating a Pod that mounts the Azure Disk using the PersistentVolumeClaim.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mypod\nspec:\n  nodeSelector:\n    kubernetes.io/os: linux\n  containers:\n  - image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n    name: mypod\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 250m\n        memory: 256Mi\n    volumeMounts:\n      - name: azure\n        mountPath: /mnt/azure\n  volumes:\n    - name: azure\n      persistentVolumeClaim:\n        claimName: pvc-azuredisk\n```\n\n----------------------------------------\n\nTITLE: Converting kubeconfig for Device Code Authentication in AKS\nDESCRIPTION: Commands to convert the kubeconfig file to use device code authentication, which is the default method for kubelogin. This method prompts for device code login and caches tokens for future use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\nkubelogin convert-kubeconfig\n```\n\n----------------------------------------\n\nTITLE: Enabling Prometheus Addon for AKS Cluster with Azure CLI\nDESCRIPTION: This command enables the Azure Monitor metrics (Prometheus) addon on an existing AKS cluster. It associates the cluster with the previously created Azure Monitor workspace to store collected metrics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-metrics-managed-prometheus.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update --enable-azure-monitor-metrics --name $CLUSTER --resource-group $RESOURCE_GROUP --azure-monitor-workspace-resource-id $AZURE_MONITOR_WORKSPACE_ID\n```\n\n----------------------------------------\n\nTITLE: Submitting an order to the application\nDESCRIPTION: Command to submit a sample order to the Node.js application using the Dapr service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncurl --request POST --data \"@sample.json\" --header Content-Type:application/json $EXTERNAL_IP/neworder\n```\n\n----------------------------------------\n\nTITLE: Creating Revision Tags for Istio Upgrade\nDESCRIPTION: These commands use istioctl to create revision tags for the initial and new Istio revisions during the upgrade process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nistioctl tag set prod-stable --revision asm-1-23 --istioNamespace aks-istio-system\n```\n\nLANGUAGE: bash\nCODE:\n```\nistioctl tag set prod-canary --revision asm-1-24 --istioNamespace aks-istio-system\n```\n\n----------------------------------------\n\nTITLE: Creating PersistentVolumeClaim Configuration\nDESCRIPTION: YAML configuration for creating a PersistentVolumeClaim that binds to the previously created PersistentVolume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-azuredisk\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 20Gi\n  volumeName: pv-azuredisk\n  storageClassName: managed-csi\n```\n\n----------------------------------------\n\nTITLE: Configuring values.yaml for Helm Chart in YAML\nDESCRIPTION: Updates the values.yaml file to configure various aspects of the deployment, including Redis settings, image repository, and service type.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nreplicaCount: 1\nbackendName: azure-vote-backend-master\nredis:\n  image:\n    registry: mcr.microsoft.com\n    repository: oss/bitnami/redis\n    tag: 6.0.8\n  fullnameOverride: azure-vote-backend\n  auth:\n    enabled: false\n\nimage:\n  repository: myhelmacr.azurecr.io/azure-vote-front\n  pullPolicy: IfNotPresent\n  tag: \"v1\"\n...\nservice:\n  type: LoadBalancer\n  port: 80\n...\n```\n\n----------------------------------------\n\nTITLE: Separate IPv4 and IPv6 LoadBalancer Services YAML for AKS <v1.27\nDESCRIPTION: This YAML manifest creates two separate LoadBalancer services (IPv4 and IPv6) for the NGINX deployment. It's necessary for AKS versions prior to 1.27, which don't support dual-stack LoadBalancer services in a single service definition.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: nginx\n  name: nginx-ipv4\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n - port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: nginx\n  name: nginx-ipv6\nspec:\n  externalTrafficPolicy: Cluster\n  ipFamilies:\n - IPv6\n  ports:\n - port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Adding a node pool with separate node and pod subnets to an AKS cluster\nDESCRIPTION: This script adds a new node pool to an existing AKS cluster with dynamic IP allocation. It creates two new subnets for the node pool's nodes and pods, then adds the node pool with references to these subnets using --vnet-subnet-id and --pod-subnet-id.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-dynamic-ip-allocation.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nSUBNET_NAME_3=\"node2subnet\"\nSUBNET_NAME_4=\"pod2subnet\"\nNODE_POOL_NAME=\"mynodepool\"\n\naz network vnet subnet create --resource-group $RESOURCE_GROUP_NAME --vnet-name $VNET_NAME --name $SUBNET_NAME_3 --address-prefixes 10.242.0.0/16 -o none \naz network vnet subnet create --resource-group $RESOURCE_GROUP_NAME --vnet-name $VNET_NAME --name $SUBNET_NAME_4 --address-prefixes 10.243.0.0/16 -o none \n\naz aks nodepool add --cluster-name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME --name $NODE_POOL_NAME \\\n    --max-pods 250 \\\n    --node-count 2 \\\n    --vnet-subnet-id /subscriptions/$SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Network/virtualNetworks/$VNET_NAME/subnets/$SUBNET_NAME_3 \\\n    --pod-subnet-id /subscriptions/$SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Network/virtualNetworks/$VNET_NAME/subnets/$SUBNET_NAME_4 \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating Network Policy YAML Manifest\nDESCRIPTION: YAML manifest for a Kubernetes NetworkPolicy that allows ingress traffic to the server pod only from pods labeled with 'app=client'. This demonstrates selective pod-to-pod communication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: demo-policy\n  namespace: demo\nspec:\n  podSelector:\n    matchLabels:\n      app: server\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app: client\n    ports:\n    - port: 80\n      protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Monitoring ingress for public IP address assignment\nDESCRIPTION: Watches the store-front ingress resource until it receives a public IP address, which indicates the application is accessible from the internet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get ingress store-front -n aks-store-demo --watch\n```\n\n----------------------------------------\n\nTITLE: Deploying Pods to a Privileged Namespace\nDESCRIPTION: Deploys the same Azure Voting App to the privileged namespace. This deployment succeeds because the 'privileged' policy allows pods to run without enforcing security constraints.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-psa.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply --namespace test-privileged -f https://raw.githubusercontent.com/Azure-Samples/azure-voting-app-redis/master/azure-vote-all-in-one-redis.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterResourceOverride with Policy and Override Rules in YAML\nDESCRIPTION: This YAML snippet demonstrates how to define a ClusterResourceOverride object with policy and override rules. It removes the 'list' verb from the ClusterRole 'secret-reader' on clusters labeled with 'env: prod'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/cluster-resource-override.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1alpha1\nkind: ClusterResourceOverride\nmetadata:\n  name: example-cro\nspec:\n  clusterResourceSelectors:\n    - group: rbac.authorization.k8s.io\n      kind: ClusterRole\n      version: v1\n      name: secret-reader\n  policy:\n    overrideRules:\n      - clusterSelector:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  env: prod\n        jsonPatchOverrides:\n          - op: remove\n            path: /rules/0/verbs/2\n```\n\n----------------------------------------\n\nTITLE: Verifying KEDA Add-on Installation\nDESCRIPTION: Checks if the KEDA add-on is installed on the AKS cluster using Azure CLI. This command queries the cluster configuration and returns a boolean value indicating KEDA's status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-cli.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query \"workloadAutoScalerProfile.keda.enabled\" \n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Extension in Azure CLI\nDESCRIPTION: This command adds or upgrades to the latest version of the k8s-extension in Azure CLI, which is necessary for working with Azure Container Storage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-azure-container-storage.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --upgrade --name k8s-extension\n```\n\n----------------------------------------\n\nTITLE: Configuring Managed Identity and Federated Credentials\nDESCRIPTION: Creates and configures managed identity with federated credentials for both workload and KEDA operator.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nMI_NAME=<managed-identity-name>\n\nMI_CLIENT_ID=$(az identity create \\\n    --name $MI_NAME \\\n    --resource-group $RG_NAME \\\n    --query \"clientId\" \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Output from Creating Internal NGINX Ingress Controller\nDESCRIPTION: Example output showing successful creation of the internal NGINX ingress controller resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_9\n\nLANGUAGE: output\nCODE:\n```\nnginxingresscontroller.approuting.kubernetes.azure.com/nginx-internal created\n```\n\n----------------------------------------\n\nTITLE: Kubernetes NetworkPolicy with ipBlock and Selectors for Complete Access\nDESCRIPTION: Workaround NetworkPolicy example that combines ipBlock with namespaceSelector and podSelector to allow egress to both external IPs and all pods in all namespaces, addressing the limitation with Azure CNI Powered by Cilium.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-powered-by-cilium.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: example-ipblock\nspec:\n  podSelector: {}\n  policyTypes:\n    - Egress\n  egress:\n    - to:\n      - ipBlock:\n          cidr: 0.0.0.0/0\n      - namespaceSelector: {}\n      - podSelector: {}\n```\n\n----------------------------------------\n\nTITLE: Dual-Stack LoadBalancer Service YAML for AKS v1.27+\nDESCRIPTION: This YAML manifest creates a LoadBalancer service with dual-stack (IPv4 and IPv6) support for the NGINX deployment. It's applicable to AKS version 1.27 and later, which supports dual-stack LoadBalancer services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  externalTrafficPolicy: Cluster\n  ipFamilyPolicy: PreferDualStack\n  ipFamilies:\n  - IPv4\n  - IPv6\n  ports:\n  - port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Creating Network Rules for Azure Firewall in Azure CLI\nDESCRIPTION: These commands create network rules for the Azure Firewall to allow specific traffic patterns required for AKS, including API server access, time synchronization, and container registry access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz network firewall network-rule create --resource-group $RG --firewall-name $FWNAME --collection-name 'aksfwnr' --name 'apiudp' --protocols 'UDP' --source-addresses '*' --destination-addresses \"AzureCloud.$LOC\" --destination-ports 1194 --action allow --priority 100\n\naz network firewall network-rule create --resource-group $RG --firewall-name $FWNAME --collection-name 'aksfwnr' --name 'apitcp' --protocols 'TCP' --source-addresses '*' --destination-addresses \"AzureCloud.$LOC\" --destination-ports 9000\n\naz network firewall network-rule create --resource-group $RG --firewall-name $FWNAME --collection-name 'aksfwnr' --name 'time' --protocols 'UDP' --source-addresses '*' --destination-fqdns 'ntp.ubuntu.com' --destination-ports 123\n\naz network firewall network-rule create --resource-group $RG --firewall-name $FWNAME --collection-name 'aksfwnr' --name 'ghcr' --protocols 'TCP' --source-addresses '*' --destination-fqdns ghcr.io pkg-containers.githubusercontent.com --destination-ports '443'\n\naz network firewall network-rule create --resource-group $RG --firewall-name $FWNAME --collection-name 'aksfwnr' --name 'docker' --protocols 'TCP' --source-addresses '*' --destination-fqdns docker.io registry-1.docker.io production.cloudflare.docker.com --destination-ports '443'\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Clusters with Different Pricing Tiers\nDESCRIPTION: Azure CLI commands to create new AKS clusters in Free, Standard, and Premium tiers. Includes configuration for SSH keys and Long Term Support for Premium tier.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/free-standard-pricing-tiers.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a new AKS cluster in the Free tier\n\naz aks create \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --tier free \\\n    --generate-ssh-keys\n\n# Create a new AKS cluster in the Standard tier\n\naz aks create \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --tier standard \\\n    --generate-ssh-keys\n\n# Create a new AKS cluster in the Premium tier\n# LongTermSupport and Premium tier should be enabled/disabled together\n\naz aks create \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --tier premium \\\n    --k8s-support-plan AKSLongTermSupport \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Enabling External Istio Ingress Gateway on AKS\nDESCRIPTION: Azure CLI command to enable an externally accessible Istio ingress gateway on an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-ingress.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks mesh enable-ingress-gateway --resource-group $RESOURCE_GROUP --name $CLUSTER --ingress-gateway-type external\n```\n\n----------------------------------------\n\nTITLE: Internal Gateway and VirtualService Configuration\nDESCRIPTION: Kubernetes manifest to configure Gateway and VirtualService resources for internal access to the sample application through Istio ingress.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-ingress.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: Gateway\nmetadata:\n  name: bookinfo-internal-gateway\nspec:\n  selector:\n    istio: aks-istio-ingressgateway-internal\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n---\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: bookinfo-vs-internal\nspec:\n  hosts:\n  - \"*\"\n  gateways:\n  - bookinfo-internal-gateway\n  http:\n  - match:\n    - uri:\n        exact: /productpage\n    - uri:\n        prefix: /static\n    - uri:\n        exact: /login\n    - uri:\n        exact: /logout\n    - uri:\n        prefix: /api/v1/products\n    route:\n    - destination:\n        host: productpage\n        port:\n          number: 9080\n```\n\n----------------------------------------\n\nTITLE: Enabling Container Insights Monitoring for AKS using Azure CLI\nDESCRIPTION: Azure CLI command that enables Container Insights monitoring add-on for an existing AKS cluster. Container Insights collects and analyzes container logs to help diagnose performance issues.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_19\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks enable-addons -a monitoring --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Creating a SecretProviderClass for Azure Key Vault Access\nDESCRIPTION: YAML configuration to create a SecretProviderClass resource that enables pods to access Valkey passwords stored in Azure Key Vault using managed identities.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport TENANT_ID=$(az account show --query tenantId --output tsv)\nkubectl apply -f - <<EOF\n---\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: valkey-password\n  namespace: valkey\nspec:\n  provider: azure\n  parameters:\n    usePodIdentity: \"false\"\n    useVMManagedIdentity: \"true\"\n    userAssignedIdentityID: \"${userAssignedIdentityID}\"\n    keyvaultName: ${MY_KEYVAULT_NAME}              # the name of the AKV instance\n    objects: |\n      array:\n        - |\n          objectName: valkey-password-file\n          objectAlias: valkey-password-file.conf\n          objectType: secret\n    tenantId: \"${TENANT_ID}\" # the tenant ID of the AKV instance\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Cluster in Azure Extended Zone with Azure CLI\nDESCRIPTION: Creates and deploys an AKS cluster in a specified Azure Extended Zone using Azure CLI commands. The process includes logging in to Azure, setting the subscription, creating a resource group, and deploying the cluster with the --edge-zone parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/extended-zones.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\n# Log in to Azure\naz login\n\n# Set the subscription you want to create the cluster on\naz account set --subscription $SUBSCRIPTION \n\n# Create the resource group\naz group create --name $RG_NAME --location $LOCATION\n\n# Deploy the cluster in your designated Azure Extended Zone\naz aks create \\\n    --resource-group $RG_NAME \\\n    --name $CLUSTER_NAME \\\n    --edge-zone $EXTENDED_ZONE_NAME \\\n    --location $LOCATION \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Self-Signed SSL Certificate using OpenSSL\nDESCRIPTION: Generates a self-signed SSL certificate using the openssl req command for testing purposes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -new -x509 -nodes -out aks-ingress-tls.crt -keyout aks-ingress-tls.key -subj \"/CN=<Hostname>\" -addext \"subjectAltName=DNS:<Hostname>\"\n```\n\n----------------------------------------\n\nTITLE: Adding a Node Pool with vTPM Enabled\nDESCRIPTION: Adds a new node pool to an existing AKS cluster with vTPM security feature enabled. This provides attestation by measuring the boot chain of the VM.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-trusted-launch.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --resource-group myResourceGroup --cluster-name myAKSCluster --name mynodepool --node-count 3 --enable-vtpm\n```\n\n----------------------------------------\n\nTITLE: Bicep Template for Dual-Stack AKS Cluster Deployment\nDESCRIPTION: Azure Bicep template that defines a dual-stack AKS cluster with both IPv4 and IPv6 networking capabilities using Microsoft.ContainerService/managedClusters resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_4\n\nLANGUAGE: bicep\nCODE:\n```\nparam clusterName string = 'aksdualstack'\nparam location string = resourceGroup().location\nparam kubernetesVersion string = '1.22.2'\nparam nodeCount int = 3\nparam nodeSize string = 'Standard_B2ms'\n\nresource aksCluster 'Microsoft.ContainerService/managedClusters@2021-10-01' = {\n  name: clusterName\n  location: location\n  identity: {\n    type: 'SystemAssigned'\n  }\n  properties: {\n    agentPoolProfiles: [\n      {\n        name: 'nodepool1'\n        count: nodeCount\n        mode: 'System'\n        vmSize: nodeSize\n      }\n    ]\n    dnsPrefix: clusterName\n    kubernetesVersion: kubernetesVersion\n    networkProfile: {\n      ipFamilies: [\n        'IPv4'\n        'IPv6'\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Windows Admin Username for AKS Cluster\nDESCRIPTION: This command prompts for and stores the administrator username for Windows Server nodes in the AKS cluster as an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho \"Please enter the username to use as administrator credentials for Windows Server nodes on your cluster: \" && read WINDOWS_USERNAME\n```\n\n----------------------------------------\n\nTITLE: Querying Cluster Auto-upgrade Notifications in Azure Resource Graph\nDESCRIPTION: Kusto query to monitor cluster auto-upgrade events in AKS. The query filters containerserviceeventresources for K8sVersionUpgrade events, extracting status, upgrade type, and event timing information within the last 2 hours.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/aks-communication-manager.md#2025-04-21_snippet_0\n\nLANGUAGE: kusto\nCODE:\n```\narg(\"\").containerserviceeventresources\n| where type == \"microsoft.containerservice/managedclusters/scheduledevents\"\n| where id contains \"/subscriptions/subid/resourcegroups/rgname/providers/Microsoft.ContainerService/managedClusters/clustername\"\n| where properties has \"eventStatus\"\n| extend status = substring(properties, indexof(properties, \"eventStatus\") + strlen(\"eventStatus\") + 3, 50)\n| extend status = substring(status, 0, indexof(status, \",\") - 1)\n| where status != \"\"\n| where properties has \"eventDetails\"\n| extend upgradeType = case(\n                           properties has \"K8sVersionUpgrade\",\n                           \"K8sVersionUpgrade\",\n                           properties has \"NodeOSUpgrade\",\n                           \"NodeOSUpgrade\",\n                           status == \"Completed\" or status == \"Failed\",\n                           case(\n    properties has '\"type\":1',\n    \"K8sVersionUpgrade\",\n    properties has '\"type\":2',\n    \"NodeOSUpgrade\",\n    \"\"\n),\n                           \"\"\n                       )\n| where properties has \"lastUpdateTime\"\n| extend eventTime = substring(properties, indexof(properties, \"lastUpdateTime\") + strlen(\"lastUpdateTime\") + 3, 50)\n| extend eventTime = substring(eventTime, 0, indexof(eventTime, \",\") - 1)\n| extend eventTime = todatetime(tostring(eventTime))\n| where eventTime >= ago(2h)\n| where upgradeType == \"K8sVersionUpgrade\"\n| project\n    eventTime,\n    upgradeType,\n    status,\n    properties\n| order by eventTime asc\n```\n\n----------------------------------------\n\nTITLE: Defining Network Policy RBAC Role in Kubernetes\nDESCRIPTION: Creates a Role that allows specific permissions for managing network policies within a designated namespace. The role grants get, list, create, update, and delete permissions for networkpolicies resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: network-policy-editor\n  namespace: team-a\nrules:\n  - apiGroups: [\"networking.k8s.io\"]\n    resources: [\"networkpolicies\"]\n    verbs: [\"get\", \"list\", \"create\", \"update\", \"delete\"]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kubelet Identity Properties\nDESCRIPTION: Queries and displays the properties of the kubelet identity associated with an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --query \"identityProfile.kubeletidentity\"\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Max Body Size for NGINX Ingress in AKS\nDESCRIPTION: This YAML configuration demonstrates how to set a custom maximum body size for NGINX Ingress in AKS using the 'nginx.ingress.kubernetes.io/proxy-body-size' annotation. It overrides the default value to 4 megabytes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: aks-helloworld\n  namespace: hello-web-app-routing\n  annotations:\n    nginx.ingress.kubernetes.io/proxy-body-size: 4m\nspec:\n  ingressClassName: <IngressClassName>\n  rules:\n  - host: <Hostname>\n    http:\n      paths:\n      - backend:\n          service:\n            name: aks-helloworld\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Service Tag Authorized IP Ranges in Azure CLI\nDESCRIPTION: This snippet demonstrates how to create an AKS cluster with Service Tag authorized IP ranges using the Azure CLI. It uses the az aks create command with the --api-server-authorized-ip-ranges parameter to specify the AzureCloud service tag and an additional IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --api-server-authorized-ip-ranges AzureCloud,20.20.20.20\n```\n\n----------------------------------------\n\nTITLE: Creating a Premium ACR instance for Artifact Streaming\nDESCRIPTION: Command to create a Premium tier Azure Container Registry, which is required for using Artifact Streaming. Only Premium SKU supports this feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr create --resource-group myStreamingTest --name mystreamingtest --sku Premium\n```\n\n----------------------------------------\n\nTITLE: Adding a Standard Windows Node Pool for Manual GPU Setup\nDESCRIPTION: Command to add a Windows node pool to an AKS cluster without specifying GPU options. This is used when you plan to manually install the Kubernetes DirectX device plugin afterwards.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name gpunp \\\n    --node-count 1 \\\n    --os-type windows \\\n    --os-sku windows2022\n```\n\n----------------------------------------\n\nTITLE: Creating Namespaces for Strimzi and Kafka\nDESCRIPTION: Creates separate namespaces for the Strimzi Cluster Operator and Kafka cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace strimzi-operator\nkubectl create namespace kafka\n```\n\n----------------------------------------\n\nTITLE: AKS Cluster Validation and Connection\nDESCRIPTION: Azure CLI commands to validate the AKS deployment and configure kubectl access to the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group $RESOURCE_GROUP_NAME --name $AKS_CLUSTER_NAME --output table\naz aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $AKS_CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: PersistentVolumeClaim for Private Azure Files Storage\nDESCRIPTION: YAML manifest for creating a PVC that uses the private Azure Files storage class, requesting 100GiB of storage with ReadWriteMany access mode for multi-pod access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: private-azurefile-pvc\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: private-azurefile-csi\n  resources:\n    requests:\n      storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Creating Dapr Extension with Configuration Settings\nDESCRIPTION: Azure CLI command to create the Dapr extension while specifying the existing Dapr release name and namespace through configuration settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-migration.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr \\\n--extension-type Microsoft.Dapr \\\n--configuration-settings \"existingDaprReleaseName=dapr\" \\\n--configuration-settings \"existingDaprReleaseNamespace=dapr-system\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster without Local Accounts using Azure CLI\nDESCRIPTION: This command creates a new AKS cluster with Microsoft Entra integration and local accounts disabled. It uses the 'az aks create' command with the 'disable-local-accounts' flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-local-accounts-managed-azure-ad.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group <resource-group> \\\n    --name <cluster-name> \\\n    --enable-aad \\\n    --aad-admin-group-object-ids <aad-group-id> \\\n    --disable-local-accounts \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Azure App Configuration Extension with Custom Log Verbosity\nDESCRIPTION: This Azure CLI command creates an Azure App Configuration extension for an AKS cluster with a custom log verbosity level of 3. It specifies the cluster type, name, resource group, extension name, type, and enables auto-upgrade for minor versions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n    --cluster-name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --name appconfigurationkubernetesprovider \\\n    --extension-type Microsoft.AppConfiguration \\\n    --auto-upgrade-minor-version true \\\n    --configuration-settings \"logVerbosity=3\"\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Proxy for ACR Private Link\nDESCRIPTION: JSON configuration for Azure HTTP Proxy to allow ACR traffic over private link. Specifies both the REST and data endpoints that should bypass the proxy for private connectivity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"httpProxy\": \"string\",\n  \"httpsProxy\": \"string\",\n  \"noProxy\": [\n    \"{REGISTRY_NAME}.azurecr.io\",\n    \"{REGISTRY_NAME}.{REGISTRY_LOCATION}.data.azurecr.io\"\n  ],\n  \"trustedCa\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding custom CA certificates to AKS cluster configuration\nDESCRIPTION: JSON snippet showing how to modify the cluster configuration to include custom CA trust certificates in the security profile.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-certificate-authority.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"securityProfile\": {\n  \"azureKeyVaultKms\": null,\n  \"customCaTrustCertificates\": [\n      \"values\"\n```\n\n----------------------------------------\n\nTITLE: Registering AI Toolchain Operator Feature Flag\nDESCRIPTION: Commands to register and verify the AIToolchainOperatorPreview feature flag, which is required to enable the AI toolchain operator add-on on AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"AIToolchainOperatorPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"AIToolchainOperatorPreview\"\n```\n\n----------------------------------------\n\nTITLE: Creating Storage Class for Azure NetApp Files\nDESCRIPTION: YAML configuration for creating a Kubernetes storage class that defines how Azure NetApp Files volumes are dynamically provisioned.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: anf-sc-smb\nprovisioner: csi.trident.netapp.io\nallowVolumeExpansion: true\nparameters:\n  backendType: \"azure-netapp-files\"\n  trident.netapp.io/nasType: \"smb\"\n  csi.storage.k8s.io/node-stage-secret-name: \"smbcreds\"\n  csi.storage.k8s.io/node-stage-secret-namespace: \"default\"\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Managed Identity and SQL Connection in Bash\nDESCRIPTION: This snippet demonstrates how to create a user-assigned managed identity, retrieve its resource ID, and create a service connection between an AKS cluster and an Azure SQL database using Microsoft Entra Workload ID with the Azure CLI in Bash.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# Create a user-assigned managed identity used for workload identity\nexport USER_ASSIGNED_IDENTITY_NAME=workload-identity-uami\naz identity create \\\n    --resource-group ${RESOURCE_GROUP_NAME} \\\n    --name ${USER_ASSIGNED_IDENTITY_NAME}\n\n# Retrieve the user-assigned managed identity resource ID\nexport UAMI_RESOURCE_ID=$(az identity show \\\n    --resource-group ${RESOURCE_GROUP_NAME} \\\n    --name ${USER_ASSIGNED_IDENTITY_NAME} \\\n    --query id \\\n    --output tsv)\n\n# Create a service connection between your AKS cluster and your SQL database using Microsoft Entra Workload ID\naz aks connection create sql \\\n    --connection akssqlconn \\\n    --client-type java \\\n    --source-id $AKS_CLUSTER_RESOURCE_ID \\\n    --target-id $AZURE_SQL_SERVER_RESOURCE_ID/databases/$DB_NAME \\\n    --workload-identity $UAMI_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Enabling Container insights monitoring on AKS cluster\nDESCRIPTION: This command enables the Container insights addon for an AKS cluster using Azure CLI. It specifies the addon, cluster name, resource group, and workspace resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\naz aks enable-addons \\\n    --addon monitoring \\\n    --name $AKS_PRIMARY_CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --workspace-resource-id $ALA_RESOURCE_ID \\\n    --output table\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group\nDESCRIPTION: This command creates a new Azure resource group named 'myResourceGroup' in the 'eastus' location. Resource groups are logical containers for Azure resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Logging in to Azure Container Registry\nDESCRIPTION: Authenticates Docker with the Azure Container Registry to enable pushing container images. This command uses Azure CLI to handle the authentication process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr login --name $REGISTRY_NAME\n```\n\n----------------------------------------\n\nTITLE: Deploying and Monitoring Windows Container Application\nDESCRIPTION: kubectl commands for deploying the application manifest and monitoring the deployment status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_9\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f sample.yaml\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl get service sample --watch\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: Creates an Azure resource group named 'myResourceGroup' in the 'eastus' location using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Implementing TCP Keepalive in Python Socket Applications\nDESCRIPTION: This Python code demonstrates how to create a TCP socket connection with keepalive functionality enabled. It shows how to set the keepalive option and configure key parameters such as idle time, interval, and probe count for maintaining persistent connections.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/improve-network-fault-tolerance-in-aks-using-tcp-keepalive.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nimport socket\nimport sys\n\n# Create a TCP socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# Enable TCP keepalive\nsock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n\n# Optional: Set TCP keepalive parameters (Linux specific).\nsock.setsockopt(socket.IPPROTO_TCP, socket.TCP_KEEPIDLE, 60)    # Idle time before keepalive probes\nsock.setsockopt(socket.IPPROTO_TCP, socket.TCP_KEEPINTVL, 10)   # Interval between keepalive probes\nsock.setsockopt(socket.IPPROTO_TCP, socket.TCP_KEEPCNT, 5)      # Number of keepalive probes\n\n# Connect to the server\nserver_address = ('server.example.com', 12345)\nprint(f'Connecting to {server_address[0]} port {server_address[1]}')\nsock.connect(server_address)\n\ntry:\n    # Send and receive data\n    message = 'This is a test message.'\n    print(f'Sending: {message}')\n    sock.sendall(message.encode())\n\n    # Wait for a response\n    data = sock.recv(1024)\n    print(f'Received: {data.decode()}')\n\nfinally:\n    print('Closing connection')\n    sock.close()\n```\n\n----------------------------------------\n\nTITLE: Creating Federated Identity Credential - Terraform\nDESCRIPTION: Terraform configuration to create a federated identity credential for external secret operator authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_7\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"azurerm_federated_identity_credential\" \"this\" {\n  name                = \"external-secret-operator\"\n  resource_group_name = var.resource_group_name\n  audience            = [\"api://AzureADTokenExchange\"]\n  issuer              = var.oidc_issuer_url\n  parent_id           = azurerm_user_assigned_identity.this.id\n  subject             = \"system:serviceaccount:${var.mongodb_namespace}:${var.service_account_name}\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Variables for AKS Deployment\nDESCRIPTION: Sets up environment variables for use in subsequent Azure CLI commands, including resource group name, location, and network configuration details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nRG_NAME=\"automatic-rg\"\nLOCATION=\"eastus\"\nCLUSTER_NAME=\"myautomaticcluster\"\nVNET_NAME=\"myVNet\"\nVNET_CIDR=\"10.0.0.0/8\"\nAPI_SERVER_SUBNET_NAME=\"aks-subnet\"\nAPI_SERVER_SUBNET_CIDR=\"10.0.0.0/24\"\nCLUSTER_SUBNET_NAME=\"cluster-subnet\"\nCLUSTER_SUBNET_CIDR=\"10.1.0.0/16\"\n```\n\n----------------------------------------\n\nTITLE: Create AKS Cluster with Custom Subnet and User-Assigned Identity\nDESCRIPTION: Azure CLI command to create an AKS cluster using a custom subnet and user-assigned managed identity. The command specifies the subnet ID and control plane identity for the cluster configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --vnet-subnet-id mySubnetIDResourceID \\\n    --assign-identity controlPlaneIdentityResourceID \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Persistent Volume for SMB\nDESCRIPTION: This snippet demonstrates how to create a Kubernetes Persistent Volume (PV) for the SMB volume. It includes the YAML definition for the PV and the kubectl command to apply it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: anf-pv-smb\nspec:\n  storageClassName: \"\"\n  capacity:\n    storage: 100Gi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain\n  mountOptions:\n    - dir_mode=0777\n    - file_mode=0777\n    - vers=3.0\n  csi:\n    driver: smb.csi.k8s.io\n    readOnly: false\n    volumeHandle: myvolname  # make sure it's a unique name in the cluster\n    volumeAttributes:\n      source: \\\\ANF-1be3.contoso.com\\myvolname\n    nodeStageSecretRef:\n      name: smbcreds\n      namespace: default\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node Pool Information - Azure CLI\nDESCRIPTION: Command to get the name of the node pool in an AKS cluster using Azure CLI. Returns details about agent pool profiles including node count, max pods, and VM size.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query agentPoolProfiles\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterRoleBinding for Pod Security Policy in Kubernetes\nDESCRIPTION: This YAML manifest defines a ClusterRoleBinding that associates the previously created ClusterRole with a group of service accounts, allowing them to use the pod security policy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: psp-deny-privileged-clusterrolebinding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: psp-deny-privileged-clusterrole\nsubjects:\n- apiGroup: rbac.authorization.k8s.io\n  kind: Group\n  name: system:serviceaccounts\n```\n\n----------------------------------------\n\nTITLE: Setting Subnet ID for AKS Deployment in Azure CLI\nDESCRIPTION: This command sets the subnet ID for the AKS deployment, which will be used in the cluster creation command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nSUBNETID=$(az network vnet subnet show --resource-group $RG --vnet-name $VNET_NAME --name $AKSSUBNET_NAME --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Deploying Redis for State Management\nDESCRIPTION: Commands to add the Bitnami Helm repository, install Redis using Helm, and apply the Redis component configuration for Dapr.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm install redis bitnami/redis\nkubectl apply -f redis.yaml\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster with Microsoft Entra Application Credentials using Azure CLI\nDESCRIPTION: This snippet demonstrates how to update an AKS cluster with new Microsoft Entra application credentials using Azure CLI. It uses the az aks update-credentials command with the --reset-aad option.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/update-credentials.md#2025-04-21_snippet_4\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks update-credentials \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --reset-aad \\\n    --aad-server-app-id $SERVER_APPLICATION_ID \\\n    --aad-server-app-secret $SERVER_APPLICATION_SECRET \\\n    --aad-client-app-id $CLIENT_APPLICATION_ID\n```\n\n----------------------------------------\n\nTITLE: Updating Existing Azure Key Vault with RBAC\nDESCRIPTION: Updates an existing Azure Key Vault to enable Azure role-based access control (RBAC) using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-driver.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault update --name <keyvault-name> --resource-group myResourceGroup --location eastus2 --enable-rbac-authorization\n```\n\n----------------------------------------\n\nTITLE: Installing Trident using Helm in Bash\nDESCRIPTION: These commands add the Trident Helm repository and install Trident using Helm. It creates a namespace called 'trident' and installs version 23.04.0 of Trident.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add netapp-trident https://netapp.github.io/trident-helm-chart   \nhelm install trident netapp-trident/trident-operator --version 23.04.0  --create-namespace --namespace trident\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Managed Grafana Instance\nDESCRIPTION: This command creates an Azure Managed Grafana instance that will be used to visualize the Prometheus metrics. The Grafana instance name must be unique within Azure.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set an environment variable for the Grafana name. Make sure to replace the placeholder with your own value.\nexport GRAFANA_NAME=\"<grafana-name>\"\n\n# Create Grafana instance\naz grafana create \\\n    --name $GRAFANA_NAME \\\n    --resource-group $RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with ACR Access using Azure PowerShell\nDESCRIPTION: Creates an AKS cluster named 'myAKSCluster' and grants it access to the specified ACR using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_5\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -Location eastus -AcrNameToAttach myhelmacr -GenerateSshKey\n```\n\n----------------------------------------\n\nTITLE: Disabling Blob CSI Driver on AKS Cluster\nDESCRIPTION: Azure CLI command to disable the Blob storage CSI driver on an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-blob-csi.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --disable-blob-driver --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Assigning Storage Table Data Contributor Role in Azure\nDESCRIPTION: Azure CLI commands to assign the Storage Table Data Contributor role to a managed identity. This grants the necessary permissions to read, write, and delete data in Azure Storage Table.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz role assignment create \\\n    --assignee-object-id $principalId \\\n    --assignee-principal-type ServicePrincipal\n    --role \"Storage Table Data Contributor\" \\\n    --scope $resourceId\n```\n\n----------------------------------------\n\nTITLE: Generating Helm Values for Strimzi Drain Cleaner\nDESCRIPTION: Creates a values.yaml file with specific configurations for the Strimzi Drain Cleaner Helm chart, including replica count, pod disruption budget, and pod anti-affinity rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF > values.yaml\nreplicaCount: 3\nnamespace:\n  create: false\npodDisruptionBudget:\n  create: true\naffinity:\n  podAntiAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      - labelSelector:\n          matchExpressions:\n            - key: app\n              operator: In\n              values:\n                - strimzi-drain-cleaner\n        topologyKey: topology.kubernetes.io/zone\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring MemberCluster with Taint\nDESCRIPTION: YAML configuration for adding a taint to a MemberCluster resource. The taint includes a key, value, and NoSchedule effect.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: MemberCluster\nmetadata:\n  name: kind-cluster-1\nspec:\n  identity:\n    name: fleet-member-agent-cluster-1\n    kind: ServiceAccount\n    namespace: fleet-system\n    apiGroup: \"\"\n  taints:                    # Add a taint to the member cluster\n    - key: test-key1\n      value: test-value1\n      effect: NoSchedule\n```\n\n----------------------------------------\n\nTITLE: Configuring Metrics Server ConfigMap with Incorrect CPU Units\nDESCRIPTION: This YAML ConfigMap example shows an incorrect configuration that prevents Metrics Server VPA customizations from being applied. The issue is that 'baseCPU' needs to have a unit specified instead of just a numeric value.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-metrics-server-vertical-pod-autoscaler.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: metrics-server-config\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  NannyConfiguration: |-\n    apiVersion: nannyconfig/v1alpha1\n    kind: NannyConfiguration\n    baseCPU: 100\n    cpuPerNode: 1m\n    baseMemory: 100Mi\n    memoryPerNode: 8Mi\n```\n\n----------------------------------------\n\nTITLE: Verifying Dapr Installation\nDESCRIPTION: Kubectl command to verify that Dapr pods are running by listing all pods across all namespaces.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get pods -A\n```\n\n----------------------------------------\n\nTITLE: Updating Helm Repository Information in AKS\nDESCRIPTION: This command updates the local Helm repository information to ensure you have the latest chart versions available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Verifying NGINX Deployment with curl in Azure Kubernetes Service\nDESCRIPTION: This bash script retrieves the IPv6 address of the NGINX service and uses curl to fetch the first 5 lines of the NGINX welcome page. It demonstrates how to verify the deployment's functionality using IPv6.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nSERVICE_IP=$(kubectl get services nginx-ipv6 -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\ncurl -s \"http://[${SERVICE_IP}]\" | head -n5\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with OSM Add-on using Bicep\nDESCRIPTION: Bicep template that defines an AKS cluster with OSM add-on enabled. Includes configuration for cluster properties, agent pool profiles, and Linux profile with SSH authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-bicep.md#2025-04-21_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n// https://learn.microsoft.com/azure/aks/troubleshooting#what-naming-restrictions-are-enforced-for-aks-resources-and-parameters\n@minLength(3)\n@maxLength(63)\n@description('Provide a name for the AKS cluster. The only allowed characters are letters, numbers, dashes, and underscore. The first and last character must be a letter or a number.')\nparam clusterName string\n@minLength(3)\n@maxLength(54)\n@description('Provide a name for the AKS dnsPrefix. Valid characters include alphanumeric values and hyphens (-). The dnsPrefix can\\'t include special characters such as a period (.)')\nparam clusterDNSPrefix string\nparam k8Version string\nparam sshPubKey string\nparam location string\nparam adminUsername string\n\n\nresource aksCluster 'Microsoft.ContainerService/managedClusters@2021-03-01' = {\n  name: clusterName\n  location: location\n  identity: {\n    type: 'SystemAssigned'\n  }\n  properties: {\n    kubernetesVersion: k8Version\n    dnsPrefix: clusterDNSPrefix\n    enableRBAC: true\n    agentPoolProfiles: [\n      {\n        name: 'agentpool'\n        count: 3\n        vmSize: 'Standard_DS2_v2'\n        osDiskSizeGB: 30\n        osDiskType: 'Ephemeral'\n        osType: 'Linux'\n        mode: 'System'\n      }\n    ]\n    linuxProfile: {\n      adminUsername: adminUserName\n      ssh: {\n        publicKeys: [\n          {\n            keyData: sshPubKey\n          }\n        ]\n      }\n    }\n    addonProfiles: {\n        openServiceMesh: {\n            enabled: true\n            config: {}\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: WebLogic JDBC Data Source Configuration YAML\nDESCRIPTION: This YAML configuration defines the JDBC data source for the WebLogic application, including the target cluster and driver settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  JDBCSystemResource:\n    jdbc/WebLogicCafeDB:\n      Target: 'cluster-1'\n      JdbcResource:\n      JDBCDataSourceParams:\n         JNDIName: [\n            jdbc/WebLogicCafeDB\n         ]\n         GlobalTransactionsProtocol: OnePhaseCommit\n      JDBCDriverParams:\n         DriverName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault with RBAC Authorization\nDESCRIPTION: Azure CLI commands to create a key vault with purge protection and RBAC authorization enabled. Includes name validation to ensure compliance with Azure naming restrictions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-deploy-cluster.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport KEYVAULT_NAME=\"keyvault-workload-id$RANDOM_ID\"\n# Ensure the key vault name is between 3-24 characters\nif [ ${#KEYVAULT_NAME} -gt 24 ]; then\n    KEYVAULT_NAME=\"${KEYVAULT_NAME:0:24}\"\nfi\naz keyvault create \\\n    --name \"${KEYVAULT_NAME}\" \\\n    --resource-group \"${RESOURCE_GROUP}\" \\\n    --location \"${LOCATION}\" \\\n    --enable-purge-protection \\\n    --enable-rbac-authorization\n```\n\n----------------------------------------\n\nTITLE: Provisioning Dapr with High Availability Using Azure CLI\nDESCRIPTION: Azure CLI command to create a Dapr extension with high availability enabled by setting global.ha.enabled to true and configuring replica count.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr \\\n--extension-type Microsoft.Dapr \\\n--auto-upgrade-minor-version true \\\n--configuration-settings \"global.ha.enabled=true\" \\\n--configuration-settings \"dapr_operator.replicaCount=2\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Node Status in AKS Cluster using Kubectl\nDESCRIPTION: This snippet shows how to use the kubectl command-line tool to get information about the nodes in an AKS cluster after resizing. It displays the status, roles, age, and Kubernetes version of each node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n\nNAME                                 STATUS   ROLES   AGE   VERSION\naks-mynodepool-20823458-vmss000000   Ready    agent   63m   v1.21.9\naks-mynodepool-20823458-vmss000001   Ready    agent   63m   v1.21.9\naks-mynodepool-20823458-vmss000002   Ready    agent   63m   v1.21.9\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with API Server Authorized IP Ranges (Azure PowerShell)\nDESCRIPTION: This snippet demonstrates how to create an AKS cluster with API server authorized IP ranges enabled, allowing only the outbound public IP of the Standard SKU load balancer. It uses the New-AzAksCluster cmdlet with the -ApiServerAccessAuthorizedIpRange parameter set to '0.0.0.0/32'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_4\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeVmSetType VirtualMachineScaleSets -LoadBalancerSku Standard -ApiServerAccessAuthorizedIpRange '0.0.0.0/32' -GenerateSshKey\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster with if-match Header\nDESCRIPTION: Example of using the --if-match header to delete an existing AKS cluster only if the ETag matches.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-etags.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks delete -g MyResourceGroup -n MyManagedCluster --if-match \"yvjvt\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Dual-Stack AKS Cluster\nDESCRIPTION: This Azure CLI command creates a dual-stack AKS cluster using Azure CNI Overlay networking. It enables both IPv4 and IPv6 IP families for the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --location <region> \\\n    --resource-group <resourceGroupName> \\\n    --name <clusterName> \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --ip-families ipv4,ipv6 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Managed Identity for AKS Capacity Reservation Groups\nDESCRIPTION: This Azure CLI snippet creates a user-assigned managed identity for the resource group containing the capacity reservation group. It sets up environment variables and retrieves the identity ID for further use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nIDENTITY_NAME=myID\nRG_NAME=myResourceGroup\nCLUSTER_NAME=myAKSCluster\nVM_SKU=Standard_D4s_v3\nNODE_COUNT=2\nLOCATION=westus2\naz identity create --name $IDENTITY_NAME --resource-group $RG_NAME  \nIDENTITY_ID=$(az identity show --name $IDENTITY_NAME --resource-group $RG_NAME --query identity.id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Deploying KWasm Runtime Manager\nDESCRIPTION: Commands for installing the KWasm operator using Helm and configuring nodes for WebAssembly support.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add kwasm http://kwasm.sh/kwasm-operator/\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm install \\\n  kwasm-operator kwasm/kwasm-operator \\\n  --namespace kwasm --create-namespace \\\n  --version 0.2.3 \\\n  --set kwasmOperator.installerImage=ghcr.io/spinkube/containerd-shim-spin/node-installer:v0.15.1\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate node --all kwasm.sh/kwasm-node=true\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes --show-labels\n```\n\n----------------------------------------\n\nTITLE: Rotating Certificates in AKS Cluster\nDESCRIPTION: This Azure CLI command rotates all certificates, CAs, and SAs on the AKS cluster using az aks rotate-certs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/certificate-rotation.md#2025-04-23_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks rotate-certs --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Defining AKS Node Pool Configuration with Azure Resource Manager Template in JSON\nDESCRIPTION: A Resource Manager template that updates a Linux node pool named 'myagentpool' to run three nodes with Kubernetes version 1.15.7 on Standard_DS2_v2 VM size. The template includes parameters for cluster name, location, agent pool name, and subnet ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"parameters\": {\n        \"clusterName\": {\n            \"type\": \"string\",\n            \"metadata\": {\n                \"description\": \"The name of your existing AKS cluster.\"\n            }\n        },\n        \"location\": {\n            \"type\": \"string\",\n            \"metadata\": {\n                \"description\": \"The location of your existing AKS cluster.\"\n            }\n        },\n        \"agentPoolName\": {\n            \"type\": \"string\",\n            \"defaultValue\": \"myagentpool\",\n            \"metadata\": {\n                \"description\": \"The name of the agent pool to create or update.\"\n            }\n        },\n        \"vnetSubnetId\": {\n            \"type\": \"string\",\n            \"defaultValue\": \"\",\n            \"metadata\": {\n                \"description\": \"The Vnet subnet resource ID for your existing AKS cluster.\"\n            }\n        }\n    },\n    \"variables\": {\n        \"apiVersion\": {\n            \"aks\": \"2020-01-01\"\n        },\n        \"agentPoolProfiles\": {\n            \"maxPods\": 30,\n            \"osDiskSizeGB\": 0,\n            \"agentCount\": 3,\n            \"agentVmSize\": \"Standard_DS2_v2\",\n            \"osType\": \"Linux\",\n            \"vnetSubnetId\": \"[parameters('vnetSubnetId')]\"\n        }\n    },\n    \"resources\": [\n        {\n            \"apiVersion\": \"2020-01-01\",\n            \"type\": \"Microsoft.ContainerService/managedClusters/agentPools\",\n            \"name\": \"[concat(parameters('clusterName'),'/', parameters('agentPoolName'))]\",\n            \"location\": \"[parameters('location')]\",\n            \"properties\": {\n                \"maxPods\": \"[variables('agentPoolProfiles').maxPods]\",\n                \"osDiskSizeGB\": \"[variables('agentPoolProfiles').osDiskSizeGB]\",\n                \"count\": \"[variables('agentPoolProfiles').agentCount]\",\n                \"vmSize\": \"[variables('agentPoolProfiles').agentVmSize]\",\n                \"osType\": \"[variables('agentPoolProfiles').osType]\",\n                \"type\": \"VirtualMachineScaleSets\",\n                \"vnetSubnetID\": \"[variables('agentPoolProfiles').vnetSubnetId]\",\n                \"orchestratorVersion\": \"1.15.7\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Gatekeeper to prevent NET_RAW capability in Kubenet clusters\nDESCRIPTION: Kubernetes YAML configuration to create a Gatekeeper constraint that prevents pods from using the NET_RAW capability in Kubenet clusters for security purposes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sPSPCapabilities\nmetadata:\n  name: prevent-net-raw\nspec:\n  match:\n    kinds:\n      - apiGroups: [\"\"]\n        kinds: [\"Pod\"]\n    excludedNamespaces:\n      - \"kube-system\"\n  parameters:\n    requiredDropCapabilities: [\"NET_RAW\"]\n```\n\n----------------------------------------\n\nTITLE: Updating Node Pool with Taint in AKS\nDESCRIPTION: Updates an existing node pool to add a taint using Azure CLI. The command adds a NoSchedule taint with key 'sku' and value 'gpu'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --name $NODE_POOL_NAME \\\n    --node-taints \"sku=gpu:NoSchedule\" \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with Windows Support using Azure CLI\nDESCRIPTION: This command creates an AKS cluster with 2 nodes, monitoring enabled, and configurations for supporting Windows Server containers including admin credentials and Azure CNI networking.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-count 2 \\\n    --enable-addons monitoring \\\n    --generate-ssh-keys \\\n    --windows-admin-username $WINDOWS_USERNAME \\\n    --windows-admin-password $WINDOWS_PASSWORD \\\n    --vm-set-type VirtualMachineScaleSets \\\n    --network-plugin azure\n```\n\n----------------------------------------\n\nTITLE: Creating a Gateway Node pool\nDESCRIPTION: Command to add a dedicated gateway node pool to the AKS cluster. This node pool will handle egress traffic and requires parameters like node count and prefix size for IP allocation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-static-egress-gateway.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --cluster-name <cluster-name> \\\n    --name <nodepool-name> \\\n    --resource-group <resource-group> \\\n    --mode gateway \\\n    --node-count <number-of-nodes> \\\n    --gateway-prefix-size <prefix-size>\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Cluster Resource ID with Azure CLI\nDESCRIPTION: This command retrieves the resource ID of an AKS cluster using the az aks show command and assigns it to a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nAKS_ID=$(az aks show \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Yelb UI Deployment with CSI Volume Configuration\nDESCRIPTION: YAML configuration for deploying the Yelb UI component with CSI volume integration for accessing Azure Key Vault secrets. Includes volume mounts and CSI driver configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: yelb\n  name: yelb-ui\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: yelb-ui\n      tier: frontend\n  template:\n    metadata:\n      labels:\n        app: yelb-ui\n        tier: frontend\n    spec:\n      containers:\n        - name: yelb-ui\n          image: mreferre/yelb-ui:0.7\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - name: secrets-store-inline\n              mountPath: \"/mnt/secrets-store\"\n              readOnly: true\n      volumes:\n        - name: secrets-store-inline\n          csi:\n            driver: secrets-store.csi.k8s.io\n            readOnly: true\n            volumeAttributes:\n              secretProviderClass: yelb\n```\n\n----------------------------------------\n\nTITLE: Warning Level Deployment Safeguards Output\nDESCRIPTION: Example output when deploying a pod with warning-level safeguards enabled, showing various compliance warnings without blocking deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deployment-safeguards.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f pod.yml\nWarning: [azurepolicy-k8sazurev2containerenforceprob-0e8a839bcd103e7b96a8] Container <my-container> in your Pod <my-pod> has no <livenessProbe>. Required probes: [\"readinessProbe\", \"livenessProbe\"]\nWarning: [azurepolicy-k8sazurev2containerenforceprob-0e8a839bcd103e7b96a8] Container <my-container> in your Pod <my-pod> has no <readinessProbe>. Required probes: [\"readinessProbe\", \"livenessProbe\"]\nWarning: [azurepolicy-k8sazurev1restrictedlabels-67c4210cc58f28acdfdb] Label <{\"kubernetes.azure.com\"}> is reserved for AKS use only\nWarning: [azurepolicy-k8sazurev3containerlimits-a8754961dbd4c1d8b49d] container <my-container> has no resource limits\nWarning: [azurepolicy-k8sazurev1containerrestrictedi-bde07e1776cbcc9aa8b8] my-pod in default does not have imagePullSecrets. Unauthenticated image pulls are not recommended.\npod/my-pod created\n```\n\n----------------------------------------\n\nTITLE: Viewing Live Events for AKS Resources\nDESCRIPTION: Instructions for viewing real-time Kubernetes event data for various resources through the Container Insights interface in Azure portal. This allows users to monitor events as they occur in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the [Azure portal](https://portal.azure.com/), navigate to your AKS cluster.\n1. Under **Monitoring**, select **Insights**.\n1. Select the *Cluster*, *Nodes*, *Controllers*, or *Containers* tab, and then select the object you want to view events for.\n1. On the resource **Overview** page, select **Live Events**.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Resource ID for User-Assigned Managed Identity\nDESCRIPTION: This command retrieves the resource ID of a user-assigned managed identity. The resource ID is required when creating an AKS cluster with a user-assigned managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nRESOURCE_ID=$(az identity show \\\n    --name myIdentity \\\n    --resource-group myResourceGroup \\\n    --query id \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Installing Strimzi Cluster Operator with Helm\nDESCRIPTION: Installs the Strimzi Cluster Operator using Helm, specifying the namespace and custom values file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm install strimzi-cluster-operator oci://quay.io/strimzi-helm/strimzi-kafka-operator \\\n--namespace strimzi-operator \\\n--values values.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress YAML with Key Vault Certificate\nDESCRIPTION: YAML manifest for creating an Ingress resource that uses a certificate from Azure Key Vault. The manifest includes TLS configuration and routing rules for the application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    kubernetes.azure.com/tls-cert-keyvault-uri: <KeyVaultCertificateUri>\n  name: aks-helloworld\n  namespace: hello-web-app-routing\nspec:\n  ingressClassName: webapprouting.kubernetes.azure.com\n  rules:\n  - host: <Hostname>\n    http:\n      paths:\n      - backend:\n          service:\n            name: aks-helloworld\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n  tls:\n  - hosts:\n    - <Hostname>\n    secretName: keyvault-<your ingress name>\n```\n\n----------------------------------------\n\nTITLE: Installing Dapr Extension on AKS Cluster\nDESCRIPTION: Creates and installs the Dapr extension on an Azure Kubernetes Service cluster with auto-upgrade for minor versions disabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n--cluster-name <myAKSCluster> \\\n--resource-group <myResourceGroup> \\\n--name dapr \\\n--extension-type Microsoft.Dapr \\\n--auto-upgrade-minor-version false\n```\n\n----------------------------------------\n\nTITLE: Setting MaxUnavailable Value for AKS Node Pools\nDESCRIPTION: Commands to configure maxUnavailable parameter for node pools to control in-place upgrades. This parameter defines how many nodes can be cordoned and drained simultaneously during an upgrade.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n# Set maxUnavailable for a new node pool\naz aks nodepool add --name mynodepool --resource-group myResourceGroup --cluster-name myManagedCluster --max-surge 0 --max-unavailable 5\n# Update maxUnavailable for an existing node pool \naz aks nodepool update --name mynodepool --resource-group myResourceGroup --cluster-name myManagedCluster --max-surge 0 --max-unavailable 5\n# Set maxUnavailable at upgrade time for an existing node pool\naz aks nodepool upgrade --name mynodepool --resource-group myResourceGroup --cluster-name myManagedCluster --max-surge 0 --max-unavailable 5\n```\n\n----------------------------------------\n\nTITLE: Deploying a Kubernetes Service Manifest with kubectl\nDESCRIPTION: This command uses kubectl to apply the YAML manifest and create the public LoadBalancer service in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl apply -f public-svc.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with KEDA and Workload Identity\nDESCRIPTION: Creates an AKS cluster with KEDA add-on, workload identity, and OIDC issuer enabled. Includes validation and credential configuration steps.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nAKS_NAME=<cluster-name>\n\naz aks create \\\n    --name $AKS_NAME \\\n    --resource-group $RG_NAME \\\n    --enable-workload-identity \\\n    --enable-oidc-issuer \\\n    --enable-keda \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Accessing Live Image Cleaner Logs from Worker Pods in AKS\nDESCRIPTION: Commands to access logs from different containers within the eraser-aks worker pod that is responsible for image cleaning in AKS. These commands target the collector, trivy-scanner, and remover containers to view deletion logs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs -n kube-system <worker-pod-name> -c collector\nkubectl logs -n kube-system <worker-pod-name> -c trivy-scanner\nkubectl logs -n kube-system <worker-pod-name> -c remover\n```\n\n----------------------------------------\n\nTITLE: Disabling SSH on New AKS Cluster Deployment\nDESCRIPTION: Create a new AKS cluster with SSH disabled using the az aks create command with the --ssh-access disabled argument.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group myResourceGroup --name myManagedCluster --ssh-access disabled\n```\n\n----------------------------------------\n\nTITLE: Creating Airflow Namespace in AKS\nDESCRIPTION: Creates a Kubernetes namespace for the Airflow cluster deployment using kubectl with dry-run validation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace ${AKS_AIRFLOW_NAMESPACE} --dry-run=client --output yaml | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Creating a Windows GPU Node Pool with Specific Driver Type\nDESCRIPTION: Command to create a Windows GPU node pool with a specific GPU driver type (GRID or CUDA). This example specifies the GRID driver which is optimized for virtualization support.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name gpunp \\\n    --node-count 1 \\\n    --os-type Windows \\\n    --kubernetes-version 1.29.0 \\\n    --node-vm-size Standard_NC6s_v3 \\\n    --driver-type GRID\n```\n\n----------------------------------------\n\nTITLE: Checking disk usage inside a pod\nDESCRIPTION: Command to check the size of the mounted Azure disk from inside the pod using the df command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it nginx-azuredisk -- df -h /mnt/azuredisk\n```\n\n----------------------------------------\n\nTITLE: Creating Server Application Service Principal\nDESCRIPTION: Creates a service principal for the server application and generates credentials for Azure platform authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a service principal for the Azure AD application\naz ad sp create --id $serverApplicationId\n\n# Get the service principal secret\nserverApplicationSecret=$(az ad sp credential reset \\\n    --name $serverApplicationId \\\n    --credential-description \"AKSPassword\" \\\n    --query password -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Applying Persistent Volume and Claim Configurations\nDESCRIPTION: Kubectl commands for applying the persistent volume and persistent volume claim YAML configurations to the target cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pv-azuredisk.yaml\nkubectl apply -f pvc-azuredisk.yaml\n```\n\n----------------------------------------\n\nTITLE: Default Managed Identity Authentication for AKS\nDESCRIPTION: Demonstrates how to authenticate using the default managed identity. Sets KUBECONFIG path and converts kubeconfig using managed service identity (msi) login method.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l msi\n```\n\n----------------------------------------\n\nTITLE: Creating Zone Redundant Storage Class for Dapr\nDESCRIPTION: YAML configuration to create a zone redundant storage class for use with Dapr in high availability mode across multiple availability zones.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: custom-zone-redundant-storage\nprovisioner: disk.csi.azure.com\nreclaimPolicy: Delete\nallowVolumeExpansion: true\nvolumeBindingMode: WaitForFirstConsumer\nparameters:\n  storageaccounttype: Premium_ZRS\n```\n\n----------------------------------------\n\nTITLE: Running Commands with Multiple File Attachments on Private AKS Cluster\nDESCRIPTION: Shows how to run kubectl commands with multiple configuration files from the current directory on a private AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/access-private-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks command invoke \\\n  --resource-group myResourceGroup \\\n  --name myPrivateCluster \\\n  --command \"kubectl apply -f deployment.yaml configmap.yaml -n default\" \\\n  --file .\n```\n\n----------------------------------------\n\nTITLE: Creating Private Endpoint for Private Link Service\nDESCRIPTION: Azure CLI commands to create a private endpoint connection to the Kubernetes service via Private Link Service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/internal-lb.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a variable for the private link service\n\nAKS_PLS_ID=$(az network private-link-service list -g $AKS_MC_RG --query \"[].id\" -o tsv)\n\n# Create the private endpoint\n\n$ az network private-endpoint create \\\n    -g myOtherResourceGroup \\\n    --name myAKSServicePE \\\n    --vnet-name myOtherVNET \\\n    --subnet pe-subnet \\\n    --private-connection-resource-id $AKS_PLS_ID \\\n    --connection-name connectToMyK8sService\n```\n\n----------------------------------------\n\nTITLE: Attaching Private DNS Zone to Application Routing Add-on with Azure CLI\nDESCRIPTION: Updates the AKS cluster to enable integration with Azure DNS using the az aks approuting zone command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks approuting zone add \\\n--resource-group test-rg \\\n--name aks-cluster \\\n--ids=${ZONEID} \\\n--attach-zones\n```\n\n----------------------------------------\n\nTITLE: Verifying contents of cloned volume\nDESCRIPTION: Command to verify that the contents of the original volume were successfully cloned by checking file listings in the pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec nginx-restored-cloning -- ls /mnt/azuredisk\n```\n\n----------------------------------------\n\nTITLE: Debugging Linux Node with kubectl\nDESCRIPTION: Creates an interactive debugging session on a Linux node using a privileged container with busybox image.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl debug node/aks-nodepool1-37663765-vmss000000 -it --image=mcr.microsoft.com/cbl-mariner/busybox:2.0\n```\n\n----------------------------------------\n\nTITLE: Installing Kafka Cluster with kubectl\nDESCRIPTION: Command to install Kafka cluster in the kafka namespace using Strimzi operator.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network and Subnets for AKS\nDESCRIPTION: Sets up a virtual network with two subnets - one for the API server and another for the cluster. The API server subnet is delegated to Microsoft.ContainerService/managedClusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet create \\\n    --resource-group $RG_NAME \\\n    --name $VNET_NAME \\\n    --address-prefixes $VNET_CIDR \\\n    --subnet-name $API_SERVER_SUBNET_NAME \\\n    --subnet-prefixes $API_SERVER_SUBNET_CIDR\n\naz network vnet subnet update \\\n    --resource-group $RG_NAME \\\n    --vnet-name $VNET_NAME \\\n    --name $API_SERVER_SUBNET_NAME \\\n    --delegations Microsoft.ContainerService/managedClusters\n\naz network vnet subnet create \\\n    --resource-group $RG_NAME \\\n    --vnet-name $VNET_NAME \\\n    --name $CLUSTER_SUBNET_NAME \\\n    --address-prefixes $CLUSTER_SUBNET_CIDR\n```\n\n----------------------------------------\n\nTITLE: Creating a Subnet for Virtual Nodes with Azure CLI\nDESCRIPTION: Command to create an additional subnet specifically for virtual nodes. This creates 'myVirtualNodeSubnet' with address prefix 10.241.0.0/16 in the previously created virtual network.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet create \\\n    --resource-group myResourceGroup \\\n    --vnet-name myVnet \\\n    --name myVirtualNodeSubnet \\\n    --address-prefixes 10.241.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Deploying and Verifying the Windows IIS Pod with SMB Volume\nDESCRIPTION: These commands deploy the Windows IIS pod with the SMB volume mount and verify its status and configuration. The kubectl describe command shows the pod details and confirms the volume is correctly mounted.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f iis-smb.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod iis-pod\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it iis-pod –- cmd.exe\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Structure\nDESCRIPTION: Core documentation content structured in Markdown format covering service mesh concepts, scenarios, selection criteria and next steps for Azure Kubernetes Service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/servicemesh-about.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# About service meshes\n\nA service mesh is an infrastructure layer in your application that facilitates communication between services...\n\n## Scenarios\n\nWhen you use a service mesh, you can enable scenarios such as...\n\n## Selection criteria\n\nBefore you select a service mesh, make sure you understand your requirements...\n\n## Next steps\n\nAzure Kubernetes Service (AKS) offers officially supported add-ons for Istio and Open Service Mesh...\n```\n\n----------------------------------------\n\nTITLE: Checking AKS Cluster Kubernetes Version\nDESCRIPTION: Verifies that the AKS cluster's Kubernetes control plane version is 1.29 or higher, which is required for native sidecar mode. Uses jq to extract the version information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --resource-group $RESOURCE_GROUP --name $CLUSTER -o json | jq \".kubernetesVersion\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Managed NAT Gateway\nDESCRIPTION: Creates an AKS cluster with a managed NAT gateway configuration, specifying outbound IP count and idle timeout settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/nat-gateway.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myNatCluster \\\n    --node-count 3 \\\n    --outbound-type managedNATGateway \\\n    --nat-gateway-managed-outbound-ip-count 2 \\\n    --nat-gateway-idle-timeout 4 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Sample OSM Mesh Configuration in YAML\nDESCRIPTION: Example of an OSM mesh configuration in YAML format. This configuration includes various settings for the OSM mesh, such as certificate validity, feature flags, observability settings, and traffic policies.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.openservicemesh.io/v1alpha1\nkind: MeshConfig\nmetadata:\n  creationTimestamp: \"0000-00-00A00:00:00A\"\n  generation: 1\n  name: osm-mesh-config\n  namespace: kube-system\n  resourceVersion: \"2494\"\n  uid: 6c4d67f3-c241-4aeb-bf4f-b029b08faa31\nspec:\n  certificate:\n    serviceCertValidityDuration: 24h\n  featureFlags:\n    enableEgressPolicy: true\n    enableMulticlusterMode: false\n    enableWASMStats: true\n  observability:\n    enableDebugServer: true\n    osmLogLevel: info\n    tracing:\n      address: jaeger.osm-system.svc.cluster.local\n      enable: false\n      endpoint: /api/v2/spans\n      port: 9411\n  sidecar:\n    configResyncInterval: 0s\n    enablePrivilegedInitContainer: false\n    envoyImage: mcr.microsoft.com/oss/envoyproxy/envoy:v1.18.3\n    initContainerImage: mcr.microsoft.com/oss/openservicemesh/init:v0.9.1\n    logLevel: error\n    maxDataPlaneConnections: 0\n    resources: {}\n  traffic:\n    enableEgress: true\n    enablePermissiveTrafficPolicyMode: true\n    inboundExternalAuthorization:\n      enable: false\n      failureModeAllow: false\n      statPrefix: inboundExtAuthz\n      timeout: 1s\n    useHTTPSIngress: false\n```\n\n----------------------------------------\n\nTITLE: Persistent Volume Claim for NFS Storage\nDESCRIPTION: YAML manifest for creating a PersistentVolumeClaim that references the NFS PersistentVolume. Includes storage request and label selector configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-nfs-volume.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: NFS_NAME\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: \"\"\n  resources:\n    requests:\n      storage: 1Gi\n  selector: \n    matchLabels:\n      type: nfs\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with ACNS for Non-Cilium\nDESCRIPTION: Creates a new AKS cluster with Advanced Container Networking Services enabled for non-Cilium deployments. Only supports Container Network Observability features.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/advanced-container-networking-services-overview.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set an environment variable for the AKS cluster name. Make sure to replace the placeholder with your own value.\nexport CLUSTER_NAME=\"<aks-cluster-name>\"\n\n# Create an AKS cluster\naz aks create \\\n    --name $CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP \\\n    --generate-ssh-keys \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --pod-cidr 192.168.0.0/16 \\\n    --enable-acns\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Azure CLI\nDESCRIPTION: Uses the az aks get-credentials command to configure kubectl to connect to an AKS cluster named 'aks-cluster' in the 'test-rg' resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials \\\n    --resource-group test-rg \\\n    --name aks-cluster\n```\n\n----------------------------------------\n\nTITLE: Disabling Public FQDN for Existing Private AKS Cluster\nDESCRIPTION: Updates an existing private AKS cluster to disable the public FQDN, further enhancing the cluster's privacy settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --name <private-cluster-name> \\\n    --resource-group <private-cluster-resource-group> \\\n    --disable-public-fqdn\n```\n\n----------------------------------------\n\nTITLE: Running Commands with File Attachment on Private AKS Cluster\nDESCRIPTION: Demonstrates how to run kubectl commands with an attached deployment file on a private AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/access-private-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks command invoke \\\n  --resource-group myResourceGroup \\\n  --name myPrivateCluster \\\n  --command \"kubectl apply -f deployment.yaml -n default\" \\\n  --file deployment.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating a Kafka Topic using Strimzi Topic Operator\nDESCRIPTION: Command to create a Kafka topic named 'test-topic' with 3 replicas and 4 partitions using the Strimzi Topic Operator through a KafkaTopic custom resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n kafka -f - << EOF  \napiVersion: kafka.strimzi.io/v1beta2  \nkind: KafkaTopic  \nmetadata:  \n  name: test-topic  \n  labels:  \n    strimzi.io/cluster: kafka-aks-cluster \nspec:  \n  replicas: 3  \n  partitions: 4  \n  config:  \n    retention.ms: 7200000  \n    segment.bytes: 1073741824  \nEOF\n```\n\n----------------------------------------\n\nTITLE: Draining Nodes in AKS Cluster\nDESCRIPTION: This command evicts pods from the specified nodes and recreates them on other schedulable nodes. It ignores DaemonSets and deletes emptyDir data. Multiple node names can be provided in a space-separated list.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl drain aks-nodepool1-31721111-vmss000000 aks-nodepool1-31721111-vmss000001 aks-nodepool1-31721111-vmss000002 --ignore-daemonsets --delete-emptydir-data\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Public IP Prefix\nDESCRIPTION: Creates a new AKS cluster using a specific public IP prefix for node IPs\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group <resourceGroup> \\\n    --name <aksClusterName> \\\n    --location <region> \\\n    --enable-node-public-ip \\\n    --node-public-ip-prefix-id /subscriptions/<subscription-id>/resourceGroups/<resourceGroup>/providers/Microsoft.Network/publicIPPrefixes/<publicIPPrefixName> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Defining Terraform Configuration for AKS Deployment\nDESCRIPTION: Sets up the Terraform configuration for deploying an AKS cluster using the Azure Verified Module. It includes provider configuration, naming module, and the main AKS module with various settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_11\n\nLANGUAGE: terraform\nCODE:\n```\nterraform {\n  required_version = \">= 1.3.0\"\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \">= 4, <5\"\n    }\n  }\n}\nprovider \"azurerm\" {\n  features {\n    resource_group {\n      prevent_deletion_if_contains_resources = false\n    }\n  }\n  subscription_id = var.azure_subscription_id\n}\nmodule \"naming\" {\n  source  = \"Azure/naming/azurerm\"\n  version = \">= 0.3.0\"\n}\n\nresource \"azurerm_user_assigned_identity\" \"this\" {\n  location            = var.location\n  name                = \"uami-${var.kubernetes_cluster_name}\"\n  resource_group_name = var.resource_group_name\n}\n\ndata \"azurerm_client_config\" \"current\" {}\n\nmodule \"avm-ptn-aks-production\" {\n  source = \"github.com/Azure/terraform-azurerm-avm-ptn-aks-production\"\n  kubernetes_version  = \"1.30\"\n  enable_telemetry    = var.enable_telemetry \n  name                = var.kubernetes_cluster_name\n  resource_group_name = var.resource_group_name\n  location = var.location \n  default_node_pool_vm_sku = \"Standard_D8ds_v5\"\n```\n\n----------------------------------------\n\nTITLE: Creating Key Vault Access Policy for Non-RBAC Key Vault\nDESCRIPTION: Creates a key vault access policy to grant the managed identity permission to access keys, certificates, or secrets in a non-RBAC enabled key vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz keyvault set-policy --name $KEYVAULT_NAME --key-permissions get --object-id $IDENTITY_OBJECT_ID\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Cluster Status Before Failover\nDESCRIPTION: Example output showing the PostgreSQL cluster status before failover is triggered. Shows the primary pod and two standby replicas with their synchronization status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_19\n\nLANGUAGE: output\nCODE:\n```\nName                        Current LSN Rep role        Status  Node\n--------------------------- ----------- --------        ------- -----------\npg-primary-cnpg-sryti1qf-1  0/9000060   Primary         OK      aks-postgres-32388626-vmss000000\npg-primary-cnpg-sryti1qf-2  0/9000060   Standby (sync)  OK      aks-postgres-32388626-vmss000001\npg-primary-cnpg-sryti1qf-3  0/9000060   Standby (sync)  OK      aks-postgres-32388626-vmss000002\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Add-on Installation Status\nDESCRIPTION: Command to verify that the Istio add-on has been successfully installed on the AKS cluster by checking the service mesh profile mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks show --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}  --query 'serviceMeshProfile.mode'\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Persistent Volume for NFS Protocol\nDESCRIPTION: Defines a YAML configuration for a Kubernetes persistent volume that connects to an Azure NetApp Files volume using the NFS protocol. Specifies capacity, access modes, and connection details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-nfs\nspec:\n  capacity:\n    storage: 100Gi\n  accessModes:\n    - ReadWriteMany\n  mountOptions:\n    - vers=3\n  nfs:\n    server: 10.0.0.4\n    path: /myfilepath2\n```\n\n----------------------------------------\n\nTITLE: Aborting AKS Node Pool Operation using Azure CLI\nDESCRIPTION: This Azure CLI command shows how to abort a long-running operation on a specific node pool within an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-abort-operations.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool operation-abort \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name myNodePool \n```\n\n----------------------------------------\n\nTITLE: Verifying Strimzi Drain Cleaner Deployment\nDESCRIPTION: Checks the status of the Strimzi Drain Cleaner pods to ensure successful deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n strimzi-drain-cleaner\n```\n\n----------------------------------------\n\nTITLE: Searching for Apache Airflow Helm Chart\nDESCRIPTION: This command searches the Helm repository for the Apache Airflow chart, displaying available versions and descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhelm search repo airflow\n```\n\n----------------------------------------\n\nTITLE: Generating Helm Values for Strimzi Operator\nDESCRIPTION: Creates a values.yaml file with specific configurations for the Strimzi Cluster Operator Helm chart, including replica count, namespace watching, leader election, and pod anti-affinity rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF > values.yaml\nreplicas: 3\nwatchNamespaces:\n  - kafka\nleaderElection:\n  enabled: true\npodDisruptionBudget:\n  enabled: true\naffinity:\n  podAntiAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      - labelSelector:\n          matchExpressions:\n            - key: name\n              operator: In\n              values:\n                - strimzi-cluster-operator\n        topologyKey: topology.kubernetes.io/zone\nEOF\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Container Registry Login Server\nDESCRIPTION: Retrieves the login server URL for the Azure Container Registry instance and stores it in an environment variable. This server URL is needed for pushing images to the registry.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\nexport LOGIN_SERVER=$(az acr show \\\n    --name $REGISTRY_NAME \\\n    --query 'loginServer' \\\n    --output tsv)\necho $LOGIN_SERVER\n```\n\n----------------------------------------\n\nTITLE: Creating ACR with Private Link in Azure CLI\nDESCRIPTION: This snippet creates an Azure Container Registry (ACR) with a private link and disables public network access. It also retrieves the registry ID for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr create --resource-group ${RESOURCE_GROUP} --name ${REGISTRY_NAME} --sku Premium --public-network-enabled false\n\nREGISTRY_ID=$(az acr show --name ${REGISTRY_NAME} -g ${RESOURCE_GROUP}  --query 'id' --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Control Plane Certificate Configuration\nDESCRIPTION: This command checks the Istio control plane logs to verify that it has picked up the custom certificate authority configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs deploy/istiod-asm-1-17 -c discovery -n aks-istio-system | grep -v validationController | grep x509\n```\n\n----------------------------------------\n\nTITLE: Granting Key Vault Access to Kubelet Identity\nDESCRIPTION: Configures access policies in Azure Key Vault to allow the AKS cluster's kubelet identity to retrieve secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nMANAGED_ID=$(az aks show -g myResourceGroup -n myAKSCluster --query \"identityProfile.kubeletidentity.objectId\" -o tsv)\naz keyvault set-policy --name \"myGMSAVault\" --object-id $MANAGED_ID --secret-permissions get\n```\n\n----------------------------------------\n\nTITLE: Assigning AKS Identity Contributor Role for DiskEncryptionSet\nDESCRIPTION: Commands to grant the AKS cluster's managed identity Contributor access to the DiskEncryptionSet resource, which is required for data disk encryption.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naksIdentity=$(az aks show --resource-group $RG_NAME --name $CLUSTER_NAME --query \"identity.principalId\")\naz role assignment create --role \"Contributor\" --assignee $aksIdentity --scope $diskEncryptionSetId\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure Cosmos DB Connection String\nDESCRIPTION: Azure CLI command to get the connection string for the Azure Cosmos DB instance and store it in a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nCOSMOS=$(az cosmosdb keys list \\\n  --type connection-strings \\\n  --resource-group serverless-backing \\\n  --name openfaas-cosmos \\\n  --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster with IMDS Restriction\nDESCRIPTION: Command to enable IMDS restriction on an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/imds-restriction.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --enable-imds-restriction\n```\n\n----------------------------------------\n\nTITLE: Monitoring Service Deployment in Bash\nDESCRIPTION: Uses kubectl get service command with the --watch flag to monitor the deployment and wait for the external IP address to be assigned.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get service azure-vote-front --watch\n```\n\n----------------------------------------\n\nTITLE: DNS Configuration Script for Application Gateway\nDESCRIPTION: Bash script that configures DNS settings for the application by managing A records in Azure DNS. Handles retrieving public IP addresses and updating DNS records for the application gateway.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsource ./00-variables.sh\n\n# Get the address of the Application Gateway Public IP\necho \"Retrieving the address of the [$AGW_PUBLIC_IP_NAME] public IP address of the [$AGW_NAME] Application Gateway...\"\nPUBLIC_IP_ADDRESS=$(az network public-ip show \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $AGW_PUBLIC_IP_NAME \\\n    --query ipAddress \\\n    --output tsv \\\n    --only-show-errors)\nif [[ -n $PUBLIC_IP_ADDRESS ]]; then\n    echo \"[$PUBLIC_IP_ADDRESS] public IP address successfully retrieved for the [$AGW_NAME] Application Gateway\"\nelse\n    echo \"Failed to retrieve the public IP address of the [$AGW_NAME] Application Gateway\"\n    exit\nfi\n# Check if an A record for todolist subdomain exists in the DNS Zone\necho \"Retrieving the A record for the [$SUBDOMAIN] subdomain from the [$DNS_ZONE_NAME] DNS zone...\"\nIPV4_ADDRESS=$(az network dns record-set a list \\\n    --zone-name $DNS_ZONE_NAME \\\n    --resource-group $DNS_ZONE_RESOURCE_GROUP_NAME \\\n    --subscription $DNS_ZONE_SUBSCRIPTION_ID \\\n    --query \"[?name=='$SUBDOMAIN'].ARecords[].IPV4_ADDRESS\" \\\n    --output tsv \\\n    --only-show-errors)\nif [[ -n $IPV4_ADDRESS ]]; then\n    echo \"An A record already exists in [$DNS_ZONE_NAME] DNS zone for the [$SUBDOMAIN] subdomain with [$IPV4_ADDRESS] IP address\"\n    if [[ $IPV4_ADDRESS == $PUBLIC_IP_ADDRESS ]]; then\n        echo \"The [$IPV4_ADDRESS] ip address of the existing A record is equal to the ip address of the ingress\"\n        echo \"No additional step is required\"\n        continue\n    else\n        echo \"The [$IPV4_ADDRESS] ip address of the existing A record is different than the ip address of the ingress\"\n    fi\n    # Retrieving name of the record set relative to the zone\n    echo \"Retrieving the name of the record set relative to the [$DNS_ZONE_NAME] zone...\"\n    RECORDSET_NAME=$(az network dns record-set a list \\\n        --zone-name $DNS_ZONE_NAME \\\n        --resource-group $DNS_ZONE_RESOURCE_GROUP_NAME \\\n        --subscription $DNS_ZONE_SUBSCRIPTION_ID \\\n        --query \"[?name=='$SUBDOMAIN'].name\" \\\n        --output tsv \\\n        --only-show-errors 2>/dev/null)\n    if [[ -n $RECORDSET_NAME ]]; then\n        echo \"[$RECORDSET_NAME] record set name successfully retrieved\"\n    else\n        echo \"Failed to retrieve the name of the record set relative to the [$DNS_ZONE_NAME] zone\"\n        exit\n    fi\n    # Remove the A record\n    echo \"Removing the A record from the record set relative to the [$DNS_ZONE_NAME] zone...\"\n    az network dns record-set a remove-record \\\n        --ipv4-address $IPV4_ADDRESS \\\n        --record-set-name $RECORDSET_NAME \\\n        --zone-name $DNS_ZONE_NAME \\\n        --resource-group $DNS_ZONE_RESOURCE_GROUP_NAME \\\n        --subscription $DNS_ZONE_SUBSCRIPTION_ID \\\n        --only-show-errors 1>/dev/null\n    if [[ $? == 0 ]]; then\n        echo \"[$IPV4_ADDRESS] ip address successfully removed from the [$RECORDSET_NAME] record set\"\n    else\n        echo \"Failed to remove the [$IPV4_ADDRESS] ip address from the [$RECORDSET_NAME] record set\"\n        exit\n    fi\nfi\n# Create the A record\necho \"Creating an A record in [$DNS_ZONE_NAME] DNS zone for the [$SUBDOMAIN] subdomain with [$PUBLIC_IP_ADDRESS] IP address...\"\naz network dns record-set a add-record \\\n    --zone-name $DNS_ZONE_NAME \\\n    --resource-group $DNS_ZONE_RESOURCE_GROUP_NAME \\\n    --subscription $DNS_ZONE_SUBSCRIPTION_ID \\\n    --record-set-name $SUBDOMAIN \\\n    --ipv4-address $PUBLIC_IP_ADDRESS \\\n    --only-show-errors 1>/dev/null\nif [[ $? == 0 ]]; then\n    echo \"A record for the [$SUBDOMAIN] subdomain with [$PUBLIC_IP_ADDRESS] IP address successfully created in [$DNS_ZONE_NAME] DNS zone\"\nelse\n    echo \"Failed to create an A record for the $SUBDOMAIN subdomain with [$PUBLIC_IP_ADDRESS] IP address in [$DNS_ZONE_NAME] DNS zone\"\nfi\n```\n\n----------------------------------------\n\nTITLE: Comparing OS Disk Types in Azure Kubernetes Service (AKS)\nDESCRIPTION: A markdown table comparing different OS disk types supported in AKS, including their key features and suggested use cases. This table helps in selecting the appropriate disk type based on workload requirements.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-performance-scale.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| OS disk type | Key features | Suggested use cases |\n|--------------|--------------|---------------------|\n| Ephemeral OS disks | • Faster reimaging and boot times.<br/> • Lower read/write latency on OS disk of AKS agent nodes.<br/> • High performance and availability. | • Demanding enterprise workloads, such as SQL Server, Oracle, Dynamics, Exchange Server, MySQL, Cassandra, MongoDB, SAP Business Suite, etc.<br/> • Stateless production workloads that require high availability and low latency. |\n| Premium SSD OS disks | • Consistent performance and low latency.<br/> • High availability. | • Demanding enterprise workloads, such as SQL Server, Oracle, Dynamics, Exchange Server, MySQL, Cassandra, MongoDB, SAP Business Suite, etc.<br/> • Input/output (IO) intensive enterprise workloads. |\n| Standard SSD OS disks | • Consistent performance.<br/> • Better availability and latency compared to Standard HDD disks. | • Web servers.<br/> • Low input/output operations per second (IOPS) application servers.<br/> • Lightly used enterprise applications.<br/> • Dev/test workloads. |\n| Standard HDD disks | • Low cost.<br/> • Exhibits variability in performance and latency. | • Backup storage.<br/> • Mass storage with infrequent access. |\n```\n\n----------------------------------------\n\nTITLE: Creating a user-assigned managed identity in Azure CLI\nDESCRIPTION: This command creates a new user-assigned managed identity in Azure.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_5\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz identity create --name MyIdentity --resource-group MyResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with User-Assigned NAT Gateway\nDESCRIPTION: Creates an AKS cluster using a preconfigured subnet with NAT gateway and managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/nat-gateway.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myNatCluster \\\n    --location southcentralus \\\n    --network-plugin azure \\\n    --vnet-subnet-id $SUBNET_ID \\\n    --outbound-type userAssignedNATGateway \\\n    --assign-identity $IDENTITY_ID \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Role Assignment for RBAC-enabled Key Vault\nDESCRIPTION: Assigns the appropriate RBAC role to the managed identity to access Key Vault resources. This example assigns the Key Vault Certificate User role for key access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport KEYVAULT_SCOPE=$(az keyvault show --name $KEYVAULT_NAME --query id -o tsv)\n\n# Example command for key vault with RBAC enabled using `key` type\naz role assignment create --role \"Key Vault Certificate User\" --assignee $USER_ASSIGNED_CLIENT_ID --scope $KEYVAULT_SCOPE\n```\n\n----------------------------------------\n\nTITLE: Configuring Bursty Workloads Profile\nDESCRIPTION: Configures autoscaler profile optimized for bursty workload patterns with balanced scale-down delays.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group \"myResourceGroup\" \\\n    --name myAKSCluster \\\n    --cluster-autoscaler-profile scan-interval=20s,scale-down-delay-after-add=10m,scale-down-delay-after-failure=1m,scale-down-unneeded-time=5m,scale-down-unready-time=5m,max-graceful-termination-sec=30,skip-nodes-with-local-storage=false,max-empty-bulk-delete=100,max-total-unready-percentage=100,ok-total-unready-count=1000,max-node-provision-time=15m\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with a Proximity Placement Group\nDESCRIPTION: Creates a new Azure Kubernetes Service cluster with a specified proximity placement group to ensure all nodes are physically located close to each other for reduced latency.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/reduce-latency-ppg.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --ppg myPPGResourceID\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Windows HostProcess DaemonSet in YAML\nDESCRIPTION: Complete DaemonSet configuration for running a privileged Windows container with HostProcess capabilities. Uses PowerShell container image and runs with SYSTEM privileges.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-hpc.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: privileged-daemonset\n  namespace: kube-system\n  labels:\n    app: privileged-daemonset\nspec:\n  selector:\n    matchLabels:\n      app: privileged-daemonset\n  template:\n    metadata:\n      labels:\n        app: privileged-daemonset\n    spec:\n      nodeSelector:\n        kubernetes.io/os: windows\n      securityContext:\n        windowsOptions:\n          hostProcess: true\n          runAsUserName: \"NT AUTHORITY\\\\SYSTEM\"\n      hostNetwork: true\n      containers:\n        - name: powershell\n          image: mcr.microsoft.com/powershell:lts-nanoserver-1809 # or lts-nanoserver-ltsc2022\n          command:\n            - powershell.exe\n            - -Command\n            - Start-Sleep -Seconds 2147483\n      terminationGracePeriodSeconds: 0\n```\n\n----------------------------------------\n\nTITLE: Creating PersistentVolumeClaim for Azure Files\nDESCRIPTION: YAML configuration for creating a persistent volume claim that binds to the Azure Files persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: azurefile\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: azurefile-csi\n  volumeName: azurefile\n  resources:\n    requests:\n      storage: 5Gi\n```\n\n----------------------------------------\n\nTITLE: Assigning Key Vault Permissions for Non-RBAC Vault\nDESCRIPTION: This command sets a key vault policy to grant decrypt and encrypt permissions to the managed identity for a non-RBAC enabled key vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_20\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault set-policy --name MyKeyVault --key-permissions decrypt encrypt --object-id $IDENTITY_OBJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Kafka Producer Pod Configuration\nDESCRIPTION: YAML manifest for deploying a Kafka producer pod that sends encrypted messages using RSA public key.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: kafka-producer\n  namespace: kafka\nspec:\n  containers:\n    - image: \"mcr.microsoft.com/acc/samples/kafka/producer:1.0\"\n      name: kafka-producer\n      command:\n        - /produce\n      env:\n        - name: TOPIC\n          value: kafka-demo-topic\n        - name: MSG\n          value: \"Azure Confidential Computing\"\n        - name: PUBKEY\n          value: |-\n            -----BEGIN PUBLIC KEY-----\n            MIIBojAN***AE=\n            -----END PUBLIC KEY-----\n      resources:\n        limits:\n          memory: 1Gi\n          cpu: 200m\n```\n\n----------------------------------------\n\nTITLE: Adding Node Pool with Custom Subnets in AKS\nDESCRIPTION: Creates new subnets for nodes and pods, then adds a new node pool to an existing AKS cluster using those subnets. The node pool uses StaticBlock pod IP allocation mode and can support up to 250 pods per node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-static-block-allocation.md#2025-04-23_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet create -g $resourceGroup --vnet-name $vnet --name node2subnet --address-prefixes 10.242.0.0/16 -o none \naz network vnet subnet create -g $resourceGroup --vnet-name $vnet --name pod2subnet --address-prefixes 10.243.0.0/16 -o none \n\naz aks nodepool add --cluster-name $clusterName -g $resourceGroup  -n newnodepool \\\n    --max-pods 250 \\\n    --node-count 2 \\\n    --vnet-subnet-id /subscriptions/$subscription/resourceGroups/$resourceGroup/providers/Microsoft.Network/virtualNetworks/$vnet/subnets/node2subnet \\\n    --pod-subnet-id /subscriptions/$subscription/resourceGroups/$resourceGroup/providers/Microsoft.Network/virtualNetworks/$vnet/subnets/pod2subnet \\\n    --pod-ip-allocation-mode StaticBlock \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating a new AKS node pool with Artifact Streaming enabled\nDESCRIPTION: Command to create a new node pool in an existing AKS cluster with Artifact Streaming enabled, which allows nodes to stream images from ACR.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name myNodePool \\\n    --enable-artifact-streaming\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Store Application using kubectl\nDESCRIPTION: This Bash command applies the YAML manifest to deploy the AKS Store application on the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-portal.md#2025-04-21_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl apply -f aks-store-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating SQL Server Secret in Kubernetes\nDESCRIPTION: Bash commands to create and label a Kubernetes secret for SQL Server database connection credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nexport DB_CONNECTION_STRING='<example-jdbc:sqlserver://server-name.database.windows.net:1433;database=wlsaksquickstart0125>'\nexport DB_USER='<example-welogic@sqlserverforwlsaks>'\nexport DB_PASSWORD='<example-Secret123456>'\nexport WLS_DOMAIN_NS=sample-domain1-ns\nexport WLS_DOMAIN_UID=sample-domain1\nexport SECRET_NAME=sqlserver-secret\n\nkubectl -n ${WLS_DOMAIN_NS} create secret generic \\\n    ${SECRET_NAME} \\\n    --from-literal=password=\"${DB_PASSWORD}\" \\\n    --from-literal=url=\"${DB_CONNECTION_STRING}\" \\\n    --from-literal=user=\"${DB_USER}\"\n\nkubectl -n ${WLS_DOMAIN_NS} label secret \\\n    ${SECRET_NAME} \\\n    weblogic.domainUID=${WLS_DOMAIN_UID}\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with if-none-match Header\nDESCRIPTION: Example of using the --if-none-match header to create a new AKS cluster only if it doesn't already exist.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-etags.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create -g MyResourceGroup -n MyManagedCluster --if-none-match \"*\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Cluster Connectivity\nDESCRIPTION: Tests the connection to the AKS cluster by retrieving a list of the cluster nodes using the kubectl command-line tool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry\nDESCRIPTION: Sets up a Premium tier Azure Container Registry for storing and managing container images, with admin access enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz acr create \\\n  --name ${MY_ACR_REGISTRY} \\\n  --resource-group $MY_RESOURCE_GROUP_NAME \\\n  --sku Premium \\\n  --location $MY_LOCATION \\\n  --admin-enabled true \\\n  --output table\nexport MY_ACR_REGISTRY_ID=$(az acr show --name $MY_ACR_REGISTRY --resource-group $MY_RESOURCE_GROUP_NAME --query id --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Deploying Ingress and IngressBackend for OSM\nDESCRIPTION: This command creates Kubernetes Ingress and OSM IngressBackend resources to allow external clients to access the httpbin service on port 14001 through Azure Application Gateway.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f <<EOF\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: httpbin\n  namespace: httpbin\n  annotations:\n    kubernetes.io/ingress.class: azure/application-gateway\nspec:\n  rules:\n - http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: httpbin\n            port:\n              number: 14001\n---\nkind: IngressBackend\napiVersion: policy.openservicemesh.io/v1alpha1\nmetadata:\n  name: httpbin\n  namespace: httpbin\nspec:\n  backends:\n - name: httpbin\n    port:\n      number: 14001 # targetPort of httpbin service\n      protocol: http\n  sources:\n - kind: IPRange\n    name: 10.0.0.0/8\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Dapr Version with Azure CLI\nDESCRIPTION: Azure CLI command to install a specific version of Dapr extension on an AKS cluster. Sets auto-upgrade to false and specifies version 1.14.4-msft.10.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n--cluster-name <myAKSCluster> \\\n--resource-group <myResourceGroup> \\\n--name dapr \\\n--extension-type Microsoft.Dapr \\\n--auto-upgrade-minor-version false \\\n--version 1.14.4-msft.10\n```\n\n----------------------------------------\n\nTITLE: Retrieving MongoDB Express Credentials from Kubernetes Secrets in Bash\nDESCRIPTION: These Bash commands retrieve the username and password for MongoDB Express from Kubernetes secrets. They use kubectl to get the secret data and decode it from base64.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-mongodb-cluster.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nexport Username=$(kubectl get secret ${AKS_MONGODB_SECRETS_NAME} -n ${AKS_MONGODB_NAMESPACE} -o jsonpath=\"{.data.MONGOEXPRESS_CONFIG_BASICAUTH_USERNAME}\" | base64 --decode) \nexport Password=$(kubectl get secret ${AKS_MONGODB_SECRETS_NAME} -n ${AKS_MONGODB_NAMESPACE} -o jsonpath=\"{.data.MONGOEXPRESS_CONFIG_BASICAUTH_PASSWORD}\" | base64 --decode)\n```\n\n----------------------------------------\n\nTITLE: Validating Node Zone Distribution\nDESCRIPTION: Kubectl command to check node distribution across availability zones, displaying region and zone information for each node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/availability-zones-overview.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes -o custom-columns='NAME:metadata.name, REGION:metadata.labels.topology\\.kubernetes\\.io/region, ZONE:metadata.labels.topology\\.kubernetes\\.io/zone'\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME                                REGION   ZONE\naks-nodepool1-34917322-vmss000000   eastus   eastus-1\naks-nodepool1-34917322-vmss000001   eastus   eastus-2\naks-nodepool1-34917322-vmss000002   eastus   eastus-3\n```\n\n----------------------------------------\n\nTITLE: Deploying a Signed Container Image in AKS\nDESCRIPTION: An Azure CLI command to deploy a signed container image to the Kubernetes cluster, which will be validated by Image Integrity before deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl run demo-signed --image=ghcr.io/deislabs/ratify/notary-image:signed\n```\n\n----------------------------------------\n\nTITLE: Determining AKS Cluster Identity Type\nDESCRIPTION: Azure CLI command to determine the type of managed identity used by the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/static-ip.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz aks show \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --query identity.type \\\n    --output tsv\n```\n\n----------------------------------------\n\nTITLE: Enabling GMSA on Existing Cluster\nDESCRIPTION: Updates an existing AKS cluster to enable GMSA support with specified DNS server and root domain configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --enable-windows-gmsa \\\n    --gmsa-dns-server $DNS_SERVER \\\n    --gmsa-root-domain-name $ROOT_DOMAIN_NAME\n```\n\n----------------------------------------\n\nTITLE: Upgrading AKS Cluster Node Pool\nDESCRIPTION: This command upgrades a specific node pool ('mongodbpool') in the AKS cluster to a new Kubernetes version (1.31.1). It demonstrates how to upgrade worker nodes after the control plane upgrade.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-mongodb-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool upgrade --resource-group $MY_RESOURCE_GROUP_NAME --cluster-name $MY_CLUSTER_NAME --name mongodbpool --kubernetes-version 1.31.1 --yes\n```\n\n----------------------------------------\n\nTITLE: Setting Node Soak Time for AKS Node Pools using Azure CLI\nDESCRIPTION: These commands demonstrate how to set node soak time when adding a new node pool, updating an existing node pool, or upgrading a node pool in an AKS cluster. The node soak time can be set between 0 and 30 minutes to allow for a waiting period between draining a node and reimaging it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set node soak time for a new node pool\naz aks nodepool add --name MyNodePool --resource-group MyResourceGroup --cluster-name MyManagedCluster --node-soak-duration 10\n\n# Update node soak time for an existing node pool\naz aks nodepool update --name MyNodePool --resource-group MyResourceGroup --cluster-name MyManagedCluster --max-surge 33% --node-soak-duration 5\n\n# Set node soak time when upgrading an existing node pool\naz aks nodepool upgrade --name MyNodePool --resource-group MyResourceGroup --cluster-name MyManagedCluster --max-surge 33% --node-soak-duration 20\n```\n\n----------------------------------------\n\nTITLE: Deploy SecretProviderClass Manifest\nDESCRIPTION: Kubernetes manifest to configure the SecretProviderClass for Azure Key Vault integration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: productpage-credential-spc\n  namespace: aks-istio-ingress\nspec:\n  provider: azure\n  secretObjects:\n  - secretName: productpage-credential\n    type: kubernetes.io/tls\n    data:\n    - objectName: test-productpage-bookinfo-key\n      key: tls.key\n    - objectName: test-productpage-bookinfo-crt\n      key: tls.crt\n  parameters:\n    useVMManagedIdentity: \"true\"\n    userAssignedIdentityID: $CLIENT_ID \n    keyvaultName: $AKV_NAME\n    cloudName: \"\"\n    objects:  |\n      array:\n        - |\n          objectName: test-productpage-bookinfo-key\n          objectType: secret\n          objectAlias: \"test-productpage-bookinfo-key\"\n        - |\n          objectName: test-productpage-bookinfo-crt\n          objectType: secret\n          objectAlias: \"test-productpage-bookinfo-crt\"\n    tenantId: $TENANT_ID\n```\n\n----------------------------------------\n\nTITLE: Creating New Node Pool Using PowerShell\nDESCRIPTION: Azure PowerShell commands to create a new node pool and update its mode to System in an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$params = @{\n    ResourceGroupName = 'myResourceGroup'\n    ClusterName       = 'myAKSCluster'\n    Name              = 'mynodepool'\n    Count             = 3\n    VMSize            = 'Standard_DS3_v2'\n}\nNew-AzAksNodePool @params\n```\n\nLANGUAGE: powershell\nCODE:\n```\n$myAKSCluster = Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster\n($myAKSCluster.AgentPoolProfiles | Where-Object Name -eq 'mynodepool').Mode = 'System'\n$myAKSCluster | Set-AzAksCluster\n```\n\n----------------------------------------\n\nTITLE: Enabling CSI Storage Drivers on Existing AKS Cluster\nDESCRIPTION: This Azure CLI command enables all three CSI storage drivers (Disk, File, and Blob) along with the snapshot controller on an existing AKS cluster. The operation may take several minutes to complete.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-storage-drivers.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup --enable-disk-driver --enable-file-driver --enable-blob-driver --enable-snapshot-controller\n```\n\n----------------------------------------\n\nTITLE: Authorizing AKS Managed Identity to Access Azure Key Vault\nDESCRIPTION: These commands retrieve the object ID of the AKS cluster's managed identity and grant it access to the Azure Key Vault, allowing the cluster to read secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nOBJECT_ID=$(az aks show --resource-group $RESOURCE_GROUP --name $CLUSTER --query 'addonProfiles.azureKeyvaultSecretsProvider.identity.objectId' -o tsv)\n\naz keyvault set-policy --name $AKV_NAME --object-id $OBJECT_ID --secret-permissions get\n```\n\n----------------------------------------\n\nTITLE: Verifying WASI Node Pool Configuration\nDESCRIPTION: Azure CLI and kubectl commands to verify the workload runtime of the WASI node pool and display node information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-wasi-node-pools.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool show -g myResourceGroup --cluster-name myAKSCluster -n mywasipool --query workloadRuntime\naz aks get-credentials -n myakscluster -g myresourcegroup\nkubectl get nodes -o wide\nkubectl describe node aks-mywasipool-12456878-vmss000000\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing AKS Cluster with Security Patch Channel Using Azure CLI\nDESCRIPTION: This command updates an existing AKS cluster to use the SecurityPatch node OS upgrade channel, which automatically applies security patches to nodes with AKS-tested updates and safe deployment practices.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/auto-upgrade-node-os-image.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myAKSCluster --node-os-upgrade-channel SecurityPatch\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Private DNS Zone with Azure CLI\nDESCRIPTION: Creates a private DNS zone named 'private.contoso.com' in the 'test-rg' resource group using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz network private-dns zone create \\\n    --resource-group test-rg \\\n    --name private.contoso.com\n```\n\n----------------------------------------\n\nTITLE: Applying Ingress Resource Configuration with kubectl\nDESCRIPTION: Uses kubectl apply command to create the Ingress resource from the YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ingress.yaml -n aks-store\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Persistent Volume Claim\nDESCRIPTION: Creates the persistent volume claim in Kubernetes using the kubectl apply command with the previously defined YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pvc-nfs.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring AzurePodIdentityException in AKS\nDESCRIPTION: YAML configuration reference for setting up pod identity exceptions in AKS. This configuration is used to specify which pods should bypass the Node-Managed Identity (NMI) processing when accessing the Azure Instance Metadata Service endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nmic-exception.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Only Load Balancer Outbound IP Authorized\nDESCRIPTION: Creates an AKS cluster that allows only the outbound public IP of the Standard SKU load balancer to access the API server, providing a more restrictive security configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 0.0.0.0/32 --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Private AKS Cluster with Custom DNS Zone using Azure CLI\nDESCRIPTION: This Azure CLI command creates a private AKS cluster with a custom private DNS zone or subzone. It uses the az aks create command with flags for specifying a custom private DNS zone resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name <private-cluster-name> \\\n    --resource-group <private-cluster-resource-group> \\\n    --load-balancer-sku standard \\\n    --enable-private-cluster \\\n    --assign-identity <resourceID> \\\n    --private-dns-zone <custom private dns zone or custom private dns subzone resourceID> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group in Azure CLI\nDESCRIPTION: Creates a new Azure resource group named 'myResourceGroup' in the 'centralus' location, which is needed to contain the other resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/reduce-latency-ppg.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location centralus\n```\n\n----------------------------------------\n\nTITLE: Registering the Deployment Safeguards Feature Flag\nDESCRIPTION: Commands to register and verify the SafeguardsPreview feature flag and refresh the Microsoft.ContainerService resource provider registration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deployment-safeguards.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace Microsoft.ContainerService --name SafeguardsPreview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace Microsoft.ContainerService --name SafeguardsPreview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Sample Output of AKS Cluster Validation with Azure CLI\nDESCRIPTION: Example output from the az aks show command displaying the cluster's current Kubernetes version after a successful upgrade to version 1.29.2.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_11\n\nLANGUAGE: output\nCODE:\n```\nName          Location    ResourceGroup    KubernetesVersion    CurrentKubernetesVersion  ProvisioningState    Fqdn\n------------  ----------  ---------------  -------------------  ------------------------  -------------------  ----------------------------------------------------------------\nmyAKSCluster  westus2      myResourceGroup  1.29.2               1.29.2                    Succeeded            myaksclust-myresourcegroup-19da35-bd54a4be.hcp.westus2.azmk8s.io\n```\n\n----------------------------------------\n\nTITLE: Generating and Storing Valkey Password in Azure Key Vault\nDESCRIPTION: Script to generate a random password for Valkey using openssl, store it in Azure Key Vault, and set access policies to allow a user-assigned identity to retrieve the secret.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nSECRET=$(openssl rand -base64 32)\necho requirepass $SECRET > /tmp/valkey-password-file.conf\necho primaryauth $SECRET >> /tmp/valkey-password-file.conf\naz keyvault secret set --vault-name $MY_KEYVAULT_NAME --name valkey-password-file --file /tmp/valkey-password-file.conf --output none\nrm /tmp/valkey-password-file.conf\naz keyvault set-policy --name $MY_KEYVAULT_NAME --object-id $userAssignedObjectID --secret-permissions get --output table\n```\n\n----------------------------------------\n\nTITLE: Creating API Server Subnet for AKS in Azure CLI\nDESCRIPTION: This snippet creates a subnet for the API server in the AKS cluster's virtual network and assigns the Network Contributor role to the cluster identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet create --name ${APISERVER_SUBNET_NAME} --vnet-name ${VNET_NAME} --resource-group ${RESOURCE_GROUP} --address-prefixes 192.168.3.0/24\n\nexport APISERVER_SUBNET_ID=$(az network vnet subnet show --resource-group ${RESOURCE_GROUP} --vnet-name ${VNET_NAME} --name ${APISERVER_SUBNET_NAME} --query id -o tsv)\n\naz role assignment create --scope ${APISERVER_SUBNET_ID} --role \"Network Contributor\" --assignee-object-id ${CLUSTER_IDENTITY_PRINCIPAL_ID} --assignee-principal-type ServicePrincipal\n```\n\n----------------------------------------\n\nTITLE: Installing Prometheus Monitoring\nDESCRIPTION: Adds and installs Prometheus Community Helm charts for monitoring PostgreSQL instances with default recording rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-postgresql-ha.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add prometheus-community \\\n    https://prometheus-community.github.io/helm-charts\n\nhelm upgrade --install \\\n    --namespace $PG_NAMESPACE \\\n    -f https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/kube-stack-config.yaml \\\n    prometheus-community \\\n    prometheus-community/kube-prometheus-stack \\\n    --kube-context=$AKS_PRIMARY_CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Job Manifest\nDESCRIPTION: Command to apply the YAML manifest that creates the TensorFlow GPU job in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_9\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f samples-tf-mnist-demo.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod Spec with Migration Sidecar in YAML\nDESCRIPTION: This YAML configuration demonstrates how to set up a pod spec with the migration sidecar injected by the Azure Workload Identity mutating webhook. It includes the necessary annotations and container configurations for the init-container and proxy sidecar.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: httpbin-pod\n  labels:\n    app: httpbin\n    azure.workload.identity/use: \"true\"\n  annotations:\n    azure.workload.identity/inject-proxy-sidecar: \"true\"\nspec:\n  serviceAccountName: workload-identity-sa\n  initContainers:\n  - name: init-networking\n    image: mcr.microsoft.com/oss/azure/workload-identity/proxy-init:v1.1.0\n    securityContext:\n      capabilities:\n        add:\n        - NET_ADMIN\n        drop:\n        - ALL\n      privileged: true\n      runAsUser: 0\n    env:\n    - name: PROXY_PORT\n      value: \"8000\"\n  containers:\n  - name: nginx\n    image: nginx:alpine\n    ports:\n    - containerPort: 80\n  - name: proxy\n    image: mcr.microsoft.com/oss/azure/workload-identity/proxy:v1.1.0\n    ports:\n    - containerPort: 8000\n```\n\n----------------------------------------\n\nTITLE: Accepting Terms for Kubernetes Applications Using Azure CLI\nDESCRIPTION: This Azure CLI command accepts the terms and agreements for a Kubernetes application before deployment. You need to provide the Product ID, Plan ID, and Publisher ID values that you copied from the Marketplace application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-application-template.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm image terms accept --offer <Product ID> --plan <Plan ID> --publisher <Publisher ID>\n```\n\n----------------------------------------\n\nTITLE: Deploying MySQL Service in Kubernetes\nDESCRIPTION: Creates a ServiceAccount, Service, and StatefulSet for the MySQL database. The StatefulSet uses the mysql:5.6 image and sets up a persistent volume for data storage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: mysql\n  namespace: bookwarehouse\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysqldb\n  labels:\n    app: mysqldb\n    service: mysqldb\nspec:\n  ports:\n    - port: 3306\n      name: tcp\n  selector:\n    app: mysqldb\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mysql\n  namespace: bookwarehouse\nspec:\n  serviceName: mysql\n  replicas: 1\n  selector:\n    matchLabels:\n      app: mysql\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      serviceAccountName: mysql\n      nodeSelector:\n        kubernetes.io/os: linux\n      containers:\n      - image: mysql:5.6\n        name: mysql\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: mypassword\n        - name: MYSQL_DATABASE\n          value: booksdemo\n        ports:\n        - containerPort: 3306\n          name: mysql\n        volumeMounts:\n        - mountPath: /mysql-data\n          name: data\n        readinessProbe:\n          tcpSocket:\n            port: 3306\n          initialDelaySeconds: 15\n          periodSeconds: 10\n      volumes:\n        - name: data\n          emptyDir: {}\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      resources:\n        requests:\n          storage: 250M\n```\n\n----------------------------------------\n\nTITLE: Setting Up GitHub OIDC and Generating Workflow with Draft Up\nDESCRIPTION: These commands combine GitHub OIDC setup and workflow generation for AKS deployment in a single step, useful for new repositories.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/draft.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks draft up\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks draft up --destination /Workspaces/ContosoAir\n```\n\n----------------------------------------\n\nTITLE: Adding Manual Scale Profile to AKS Node Pool using Azure CLI\nDESCRIPTION: This command adds a manual scale profile to an existing node pool named 'myvmpool' in an AKS cluster. The profile specifies 2 nodes with the Standard_D2s_v3 VM SKU.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-machines-node-pools.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool manual-scale add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name myvmpool \\\n    --vm-sizes \"Standard_D2s_v3\" \\\n    --node-count 2\n```\n\n----------------------------------------\n\nTITLE: Enabling ACNS on Existing AKS Cluster\nDESCRIPTION: Updates an existing AKS cluster to enable Advanced Container Networking Services features, including Container Network Observability and Container Network Security. Only clusters with Cilium dataplane support Container Network Security features.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --enable-acns\n```\n\n----------------------------------------\n\nTITLE: Granting AcrPull Permissions to Kubelet Identity in Azure CLI\nDESCRIPTION: This snippet assigns the AcrPull role to the kubelet identity, allowing it to pull images from the private ACR.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create --role AcrPull --scope ${REGISTRY_ID} --assignee-object-id ${KUBELET_IDENTITY_PRINCIPAL_ID} --assignee-principal-type ServicePrincipal\n```\n\n----------------------------------------\n\nTITLE: Applying CoreDNS ConfigMap in AKS using kubectl\nDESCRIPTION: Console command to apply the CoreDNS custom ConfigMap using kubectl, which enables the custom DNS resolution settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/coredns-custom.md#2025-04-21_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f corednsms.yaml\n```\n\n----------------------------------------\n\nTITLE: Removing CVM Node Pool from AKS Cluster\nDESCRIPTION: Deletes a Confidential VM node pool from an AKS cluster using the az aks nodepool delete command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-cvm.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool delete \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name cvmnodepool\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview Extension in Azure CLI\nDESCRIPTION: Commands to install and update the aks-preview extension required for pod security policy features.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry with Azure PowerShell\nDESCRIPTION: Creates an Azure Container Registry named 'myhelmacr' with Basic SKU using Azure PowerShell. The registry name must be unique.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_3\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzContainerRegistry -ResourceGroupName myResourceGroup -Name myhelmacr -Sku Basic -Location eastus\n```\n\n----------------------------------------\n\nTITLE: Importing NGINX Ingress Controller Images to Azure Container Registry\nDESCRIPTION: This script imports the required NGINX ingress controller container images into your Azure Container Registry (ACR) for use with your AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nREGISTRY_NAME=<REGISTRY_NAME>\nCONTROLLER_REGISTRY=registry.k8s.io\nCONTROLLER_IMAGE=ingress-nginx/controller\nCONTROLLER_TAG=v1.8.0\nPATCH_REGISTRY=registry.k8s.io\nPATCH_IMAGE=ingress-nginx/kube-webhook-certgen\nPATCH_TAG=v20230407\nDEFAULTBACKEND_REGISTRY=registry.k8s.io\nDEFAULTBACKEND_IMAGE=defaultbackend-amd64\nDEFAULTBACKEND_TAG=1.5\n\naz acr import --name $REGISTRY_NAME --source $CONTROLLER_REGISTRY/$CONTROLLER_IMAGE:$CONTROLLER_TAG --image $CONTROLLER_IMAGE:$CONTROLLER_TAG\naz acr import --name $REGISTRY_NAME --source $PATCH_REGISTRY/$PATCH_IMAGE:$PATCH_TAG --image $PATCH_IMAGE:$PATCH_TAG\naz acr import --name $REGISTRY_NAME --source $DEFAULTBACKEND_REGISTRY/$DEFAULTBACKEND_IMAGE:$DEFAULTBACKEND_TAG --image $DEFAULTBACKEND_IMAGE:$DEFAULTBACKEND_TAG\n```\n\n----------------------------------------\n\nTITLE: Registering KataCcIsolationPreview Feature Flag\nDESCRIPTION: Azure CLI commands to register and verify the KataCcIsolationPreview feature flag, which is necessary for using Confidential Containers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"KataCcIsolationPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"KataCcIsolationPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace \"Microsoft.ContainerService\"\n```\n\n----------------------------------------\n\nTITLE: Scaling AKS Cluster Nodes - PowerShell\nDESCRIPTION: PowerShell command to scale an AKS cluster to a specified number of nodes. Requires resource group name, cluster name, and node pool name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nSet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeCount 1 -NodeName <your node pool name>\n```\n\n----------------------------------------\n\nTITLE: Viewing Node.js application logs\nDESCRIPTION: Command to view the logs from the Node.js application to verify it's receiving messages from the Python application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs --selector=app=node -c node --tail=-1\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Persistent Volume Claim for NFS\nDESCRIPTION: YAML configuration for creating a Kubernetes persistent volume claim that binds to the previously created persistent volume. This configuration specifies the required capacity and ReadWriteMany access mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-nfs\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: \"\"\n  resources:\n    requests:\n      storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterResourcePlacement with Toleration\nDESCRIPTION: YAML configuration for adding a toleration to a ClusterResourcePlacement resource to allow propagation to tainted clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  policy:\n    placementType: PickAll\n    tolerations:\n      - key: test-key1\n        operator: Exists\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-ns\n      version: v1\n  revisionHistoryLimit: 10\n  strategy:\n    type: RollingUpdate\n```\n\n----------------------------------------\n\nTITLE: Listing remaining HTTP application routing resources using kubectl\nDESCRIPTION: These kubectl commands list remaining resources related to the old HTTP application routing add-on in the kube-system namespace, including deployments, services, configmaps, and secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-migration.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployments --namespace kube-system\nkubectl get services --namespace kube-system\nkubectl get configmaps --namespace kube-system\nkubectl get secrets --namespace kube-system\n```\n\n----------------------------------------\n\nTITLE: Installing aks-preview Azure CLI Extension\nDESCRIPTION: Install the aks-preview extension and update it to the latest version using Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Configuring Port-Specific Health Probe Settings in AKS Service YAML\nDESCRIPTION: This YAML manifest demonstrates how to set different health probe configurations for different ports in an AKS service using annotations. It showcases setting a global probe count and a port-specific probe count for HTTPS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: appservice\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-health-probe-num-of-probe: \"5\"\n    service.beta.kubernetes.io/port_443_health-probe_num-of-probe: \"4\"\nspec:\n  type: LoadBalancer\n  selector:\n    app: server\n  ports:\n    - name: httpserver\n      protocol: TCP\n      port: 80\n      targetPort: 30102\n    - name: httpsserver\n      protocol: TCP\n      appProtocol: HTTPS\n      port: 443\n      targetPort: 30104\n```\n\n----------------------------------------\n\nTITLE: Creating an RBAC-enabled public key vault in Azure CLI\nDESCRIPTION: This command creates a new Azure Key Vault with Azure role-based access control (RBAC) enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_3\n\nLANGUAGE: Azure CLI\nCODE:\n```\nexport KEYVAULT_RESOURCE_ID=$(az keyvault create --name MyKeyVault --resource-group MyResourceGroup  --enable-rbac-authorization true --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Configuring MAA Endpoint for Attestation\nDESCRIPTION: Commands to set and verify the Microsoft Azure Attestation endpoint configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nexport MAA_ENDPOINT=\"$(az attestation show --name \"myattestationprovider\" --resource-group \"MyResourceGroup\" --query 'attestUri' -o tsv | cut -c 9-)\"\n\necho $MAA_ENDPOINT\n```\n\n----------------------------------------\n\nTITLE: Disabling Container Network Observability for Cilium\nDESCRIPTION: Disables only the Container Network Observability feature while keeping other ACNS features enabled on a Cilium-based cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/advanced-container-networking-services-overview.md#2025-04-23_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --enable-acns \\\n    --disable-acns-observability\n```\n\n----------------------------------------\n\nTITLE: Ingress Configuration\nDESCRIPTION: YAML manifest for configuring the Kubernetes Ingress resource using the application routing add-on ingress class.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: store-front\n  namespace: aks-store\nspec:\n  ingressClassName: webapprouting.kubernetes.azure.com\n  rules:\n  - http:\n      paths:\n      - backend:\n          service:\n            name: store-front\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n```\n\n----------------------------------------\n\nTITLE: Adding Encrypted Node Pool to Existing AKS Cluster\nDESCRIPTION: Adds a new node pool with host-based encryption to an existing AKS cluster using Azure CLI. This allows incremental adoption of host-based encryption in existing clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-host-encryption.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --name hostencrypt --cluster-name myAKSCluster --resource-group myResourceGroup -s Standard_DS2_v2 --enable-encryption-at-host\n```\n\n----------------------------------------\n\nTITLE: Disabling Cluster Autoscaler on AKS Cluster\nDESCRIPTION: Disables the cluster autoscaler on an AKS cluster. Note that nodes aren't removed when the autoscaler is disabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --disable-cluster-autoscaler\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Credentials and Applying StorageClass for Encrypted Disks\nDESCRIPTION: Commands to authenticate with the AKS cluster and apply the StorageClass definition that enables encryption for data disks.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\n# Get credentials\naz aks get-credentials --name myAksCluster --resource-group myResourceGroup --output table\n\n# Update cluster\nkubectl apply -f byok-azure-disk.yaml\n```\n\n----------------------------------------\n\nTITLE: Viewing Pod Resources with kubectl in Azure Kubernetes Service\nDESCRIPTION: This command retrieves pod information including names, IP addresses (both IPv4 and IPv6), node names, and readiness status. It uses custom columns to format the output for easy reading.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -o custom-columns=\"NAME:.metadata.name,IPs:.status.podIPs[*].ip,NODE:.spec.nodeName,READY:.status.conditions[?(@.type=='Ready')].status\"\n```\n\n----------------------------------------\n\nTITLE: Update AKS Load Balancer Outbound Configuration\nDESCRIPTION: Azure CLI command to update the load balancer's outbound IP count and port allocation settings for an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --load-balancer-managed-outbound-ip-count 7 \\\n    --load-balancer-outbound-ports 4000\n```\n\n----------------------------------------\n\nTITLE: Applying Cilium Network Policy\nDESCRIPTION: Applies the Cilium Network Policy to the demo namespace using kubectl, enabling FQDN filtering for pods with the app=demo-container label.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply –f demo-policy.yaml -n demo\n```\n\n----------------------------------------\n\nTITLE: Adding a Windows Nodepool to a Dual-Stack AKS Cluster\nDESCRIPTION: This command adds a Windows nodepool to an existing AKS cluster with dual-stack networking. It specifies the resource group, cluster name, OS type, nodepool name, and node count.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $resourceGroup \\\n    --cluster-name $clusterName \\\n    --os-type Windows \\\n    --name winpool1 \\\n    --node-count 2\n```\n\n----------------------------------------\n\nTITLE: Sample Output of AKS Cluster Upgrade\nDESCRIPTION: Example output showing the result of a successful AKS cluster upgrade to Kubernetes version 1.29.2, displaying the updated cluster properties.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: output\nCODE:\n```\n...\nProvisioningState        : Succeeded\nMaxAgentPools            : 100\nKubernetesVersion        : 1.29.2\nCurrentKubernetesVersion : 1.29.2\n...\nResourceGroupName        : myResourceGroup\nName                     : myAKSCluster\nType                     : Microsoft.ContainerService/ManagedClusters\nLocation                 : westus2\nTags                     :\n```\n\n----------------------------------------\n\nTITLE: Installing the aks-preview Azure CLI extension\nDESCRIPTION: Commands to install and update the aks-preview extension for Azure CLI, which is required to use the Static Egress Gateway feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-static-egress-gateway.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Enabling LTS on Existing AKS Cluster\nDESCRIPTION: Updates an existing AKS cluster to enable long-term support by changing the tier to Premium and setting the Kubernetes support plan.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/long-term-support.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group <resource-group-name> --name <cluster-name> --tier premium --k8s-support-plan AKSLongTermSupport\n```\n\n----------------------------------------\n\nTITLE: Adding Application Developer User to Group\nDESCRIPTION: This command adds the newly created application developer user to the appdev group in Microsoft Entra ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad group member add --group appdev --member-id $AKSDEV_ID\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl CLI Tool\nDESCRIPTION: Installs the Kubernetes command-line tool kubectl using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz aks install-cli\n```\n\n----------------------------------------\n\nTITLE: Troubleshooting VPA Components\nDESCRIPTION: Set of bash commands for troubleshooting VPA system components and verifying their status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods|grep vpa\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs [pod name] | grep -e '^E[0-9]\\{4\\}'\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get customresourcedefinition | grep verticalpodautoscalers\n```\n\n----------------------------------------\n\nTITLE: Retrieving Available Istio Add-on Revisions in Azure CLI\nDESCRIPTION: Command to list available Istio add-on revisions in a specific Azure region, which helps in determining compatibility with AKS cluster versions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks mesh get-revisions --location <location> -o table\n```\n\n----------------------------------------\n\nTITLE: Creating Image Integrity Policy Assignment\nDESCRIPTION: Commands to create a policy assignment for Image Integrity validation in AKS\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nexport SCOPE=\"/subscriptions/${SUBSCRIPTION}/resourceGroups/${RESOURCE_GROUP}\"\nexport LOCATION=$(az group show --name ${RESOURCE_GROUP} --query location -o tsv)\n\naz policy assignment create --name 'deploy-trustedimages' --policy-set-definition 'af28bf8b-c669-4dd3-9137-1e68fdc61bd6' --display-name 'Audit deployment with unsigned container images' --scope ${SCOPE} --mi-system-assigned --role Contributor --identity-scope ${SCOPE} --location ${LOCATION}\n```\n\n----------------------------------------\n\nTITLE: Checking Cluster Certificate Expiration Date in AKS\nDESCRIPTION: This command checks the expiration date of the cluster certificate using kubectl and OpenSSL.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/certificate-rotation.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config view --raw -o jsonpath=\"{.clusters[?(@.name == '')].cluster.certificate-authority-data}\" | base64 -d | openssl x509 -text | grep -A2 Validity\n```\n\n----------------------------------------\n\nTITLE: Creating a Windows Node Pool with GPU Driver Installation Skipped\nDESCRIPTION: Command to add a Windows node pool with GPU VM sizes but skipping the automatic GPU driver installation. This is useful when you want to install your own custom drivers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name gpunp \\\n    --node-count 1 \\\n    --os-type windows \\\n    --os-sku windows2022 \\\n    --skip-gpu-driver-install\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster to Enable Native Sidecar Mode\nDESCRIPTION: Updates the AKS cluster configuration to enable native sidecar mode. This command triggers reconciliation of the cluster with the registered feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz aks update --resource-group $RESOURCE_GROUP --name $CLUSTER\n```\n\n----------------------------------------\n\nTITLE: Disabling KMS in AKS Cluster\nDESCRIPTION: Command to disable KMS encryption on an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_30\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group MyResourceGroup --disable-azure-keyvault-kms\n```\n\n----------------------------------------\n\nTITLE: Creating StatefulSet with kubectl\nDESCRIPTION: Bash command to create the StatefulSet using kubectl and the YAML configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-blob-csi.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -f azure-blob-nfs-ss.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS OIDC Issuer URL\nDESCRIPTION: Gets the OIDC Issuer URL from the AKS cluster, which is needed to establish trust between Microsoft Entra ID and the Kubernetes service accounts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nAKS_OIDC_ISSUER=$(az aks show --resource-group $RG_NAME --name $AKS_NAME --query \"oidcIssuerProfile.issuerUrl\" -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating Ingress Resource with Private DNS and IP in YAML\nDESCRIPTION: YAML manifest for creating an Ingress resource that uses a host name on the Azure private DNS zone and a private IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: store-front\n  namespace: aks-store\nspec:\n  ingressClassName: nginx-internal\n  rules:\n  - host: store-front.private.contoso.com\n    http:\n      paths:\n      - backend:\n          service:\n            name: store-front\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Container Images with Azure CLI\nDESCRIPTION: Commands to build and push multiple container images to ACR using Azure CLI build command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-acr.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr build --registry $ACRNAME --image aks-store-demo/product-service:latest ./src/product-service/\naz acr build --registry $ACRNAME --image aks-store-demo/order-service:latest ./src/order-service/\naz acr build --registry $ACRNAME --image aks-store-demo/store-front:latest ./src/store-front/\n```\n\n----------------------------------------\n\nTITLE: Creating Burstable Managed CSI Premium Storage Class in YAML\nDESCRIPTION: This YAML template creates a new storage class with on-demand bursting enabled for premium SSDs. It sets the enableBursting parameter to true, allowing disks to burst beyond their provisioned performance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: burstable-managed-csi-premium\nprovisioner: disk.csi.azure.com\nparameters:\n  skuname: Premium_LRS\n  enableBursting: \"true\"\nreclaimPolicy: Delete\nvolumeBindingMode: WaitForFirstConsumer\nallowVolumeExpansion: true\n```\n\n----------------------------------------\n\nTITLE: PVC Patch Command Output\nDESCRIPTION: Output from the kubectl patch command confirming that the PVC has been successfully updated with the new storage size request.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_7\n\nLANGUAGE: output\nCODE:\n```\npersistentvolumeclaim/pvc-azurefile patched\n```\n\n----------------------------------------\n\nTITLE: Setting AKS Cluster Name Variable\nDESCRIPTION: Sets a variable for the AKS cluster name that will be used throughout the configuration process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: console\nCODE:\n```\naksname=\"myakscluster\"\n```\n\n----------------------------------------\n\nTITLE: Configuring PostgreSQL Environment Variables\nDESCRIPTION: Creates a Kubernetes ConfigMap to set environment variables for the PostgreSQL cluster, enabling Azure PVC updates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-postgresql-ha.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply --context $AKS_PRIMARY_CLUSTER_NAME -n $PG_NAMESPACE -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n    name: cnpg-controller-manager-config\ndata:\n    ENABLE_AZURE_PVC_UPDATES: 'true'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Credentials using Azure CLI\nDESCRIPTION: Commands to configure kubectl to connect to your AKS cluster using Azure CLI credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster to Enable Confidential Containers\nDESCRIPTION: Azure CLI command to update an existing AKS cluster to enable Confidential Containers feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Creating a Private Azure Files Storage Class\nDESCRIPTION: Command to apply the private Azure Files StorageClass configuration to the Kubernetes cluster, making it available for use with PVCs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f private-azure-file-sc.yaml\n```\n\n----------------------------------------\n\nTITLE: SpinApp Custom Resource Definition\nDESCRIPTION: YAML configuration for the SpinApp Custom Resource Definition defining the application deployment parameters\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: core.spinoperator.dev/v1alpha1\nkind: SpinApp\nmetadata:\n  name: hello-spinkube\nspec:\n  image: \"<your acr name>.azurecr.io/hello-spinkube:0.0.1\"\n  executor: containerd-shim-spin\n  replicas: 2\n  imagePullSecrets:\n    - name: spinkube-on-aks\n```\n\n----------------------------------------\n\nTITLE: Registering WasmNodePoolPreview Feature Flag\nDESCRIPTION: Azure CLI commands to register and verify the WasmNodePoolPreview feature flag, which is necessary for creating WASI node pools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-wasi-node-pools.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"WasmNodePoolPreview\"\naz feature show --namespace \"Microsoft.ContainerService\" --name \"WasmNodePoolPreview\"\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Setting Node Drain Timeout for AKS Node Pools\nDESCRIPTION: Commands to configure node drain timeout for AKS node pools. This parameter defines how long to wait for pods to gracefully terminate during node draining in an upgrade process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n# Set drain time-out for a new node pool\naz aks nodepool add --name mynodepool --resource-group MyResourceGroup --cluster-name MyManagedCluster  --drain-time-out 100\n\n# Update drain time-out for an existing node pool\naz aks nodepool update --name mynodepool --resource-group MyResourceGroup --cluster-name MyManagedCluster --drain-time-out 45\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure Hybrid Benefit (Azure CLI)\nDESCRIPTION: This snippet demonstrates how to create a new AKS cluster with Azure Hybrid Benefit enabled using Azure CLI. It sets up a cluster with standard load balancer, Azure CNI networking, and Windows node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hybrid-benefit.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nPASSWORD='' # replace with your own password value\nRG_NAME='myResourceGroup'\nCLUSTER='myAKSCluster'\n\naz aks create \\\n    --resource-group $RG_NAME \\\n    --name $CLUSTER \\\n    --load-balancer-sku Standard \\\n    --network-plugin azure \\\n    --windows-admin-username azure \\\n    --windows-admin-password $PASSWORD \\\n    --enable-ahub \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Configuring Control Plane Metrics Collection Targets in YAML\nDESCRIPTION: Default YAML configuration showing which control plane components are enabled for metric collection, with API server and etcd enabled by default.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ncontrolplane-apiserver = true\ncontrolplane-cluster-autoscaler = false\ncontrolplane-kube-scheduler = false\ncontrolplane-kube-controller-manager = false\ncontrolplane-etcd = true\n```\n\n----------------------------------------\n\nTITLE: Creating Event Hub and Subscribing to AKS Events with Azure CLI\nDESCRIPTION: Creates a namespace and event hub, then subscribes to AKS events using Azure CLI. It creates 'MyNamespace' and 'MyEventGridHub' in the 'MyResourceGroup' resource group, and sets up an event subscription for the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-event-grid.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz eventhubs namespace create --location eastus --name MyNamespace --resource-group MyResourceGroup\naz eventhubs eventhub create --name MyEventGridHub --namespace-name MyNamespace --resource-group MyResourceGroup\n\nSOURCE_RESOURCE_ID=$(az aks show --resource-group MyResourceGroup --name MyAKS --query id --output tsv)\nENDPOINT=$(az eventhubs eventhub show --resource-group MyResourceGroup --name MyEventGridHub --namespace-name MyNamespace --query id --output tsv)\naz eventgrid event-subscription create --name MyEventGridSubscription \\\n--source-resource-id $SOURCE_RESOURCE_ID \\\n--endpoint-type eventhub \\\n--endpoint $ENDPOINT\n```\n\n----------------------------------------\n\nTITLE: Adding a Node Pool with a Unique Subnet\nDESCRIPTION: Creates a node pool that uses a specified subnet, allowing for network isolation between node pools. This approach helps with workloads that require logical isolation within the same cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --name $NODE_POOL_NAME \\\n    --node-count 3 \\\n    --vnet-subnet-id $SUBNET_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Manually Promoting a Specific PostgreSQL Pod to Primary\nDESCRIPTION: Uses the CloudNativePG operator command to manually promote pod 1 back to primary role after testing failover, returning the cluster to its original configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nkubectl cnpg promote $PG_PRIMARY_CLUSTER_NAME 1 --namespace $PG_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Scrape Job for Network Observability\nDESCRIPTION: Adds a new scrape job to Prometheus configuration to collect network observability metrics from Hubble. It configures relabeling and filtering to capture specific network metrics from Cilium/Retina pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_9\n\nLANGUAGE: yml\nCODE:\n```\n- job_name: networkobservability-hubble\n  kubernetes_sd_configs:\n    - role: pod\n  relabel_configs:\n    - target_label: cluster\n      replacement: myAKSCluster\n      action: replace\n    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_k8s_app]\n      regex: kube-system;(retina|cilium)\n      action: keep\n    - source_labels: [__address__]\n      action: replace\n      regex: ([^:]+)(?::\\d+)?\n      replacement: $1:9965\n      target_label: __address__\n    - source_labels: [__meta_kubernetes_pod_node_name]\n      target_label: instance\n      action: replace\n  metric_relabel_configs:\n    - source_labels: [__name__]\n      regex: '|hubble_dns_queries_total|hubble_dns_responses_total|hubble_drop_total|hubble_tcp_flags_total' # if desired, add |hubble_flows_processed_total\n      action: keep\n```\n\n----------------------------------------\n\nTITLE: Creating a Public LoadBalancer Service in Kubernetes YAML\nDESCRIPTION: This YAML manifest creates a Kubernetes service of type LoadBalancer, which will be exposed through the Azure public standard load balancer.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: public-svc\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n  selector:\n    app: public-app\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Account with Workload Identity\nDESCRIPTION: Creates a Kubernetes service account with Azure workload identity annotations for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: \"${MY_IDENTITY_NAME_CLIENT_ID}\"\n    azure.workload.identity/tenant-id: \"${TENANT_ID}\"\n  name: \"${SERVICE_ACCOUNT_NAME}\"\n  namespace: \"${AKS_AIRFLOW_NAMESPACE}\"\n```\n\n----------------------------------------\n\nTITLE: Creating a User-Assigned Managed Identity in Azure\nDESCRIPTION: This command creates a user-assigned managed identity in Azure using the Azure CLI. The identity is created in the specified resource group with the name 'myManagedIdentity' and will be used to connect to the Azure SQL Database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/jakartaee/create-azure-sql-database-passwordless.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create \\\n    --resource-group ${RESOURCE_GROUP_NAME} \\\n    --name myManagedIdentity\n```\n\n----------------------------------------\n\nTITLE: Deploying HostProcess Container Using kubectl\nDESCRIPTION: Command to apply the HostProcess container configuration using kubectl CLI tool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-hpc.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nkubectl apply -f hostprocess.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Encrypted Network-Attached OS Disks\nDESCRIPTION: Command to create an AKS cluster with managed OS disks encrypted using the customer-managed key provided through the DiskEncryptionSet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --name myAKSCluster --resource-group myResourceGroup --node-osdisk-diskencryptionset-id $diskEncryptionSetId --generate-ssh-keys --node-osdisk-type Managed\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory and CPU Cost-Based Placement in Kubernetes Fleet\nDESCRIPTION: YAML configuration for ClusterResourcePlacement that prioritizes clusters with lower memory and CPU core costs. Uses PickN placement type to select 2 clusters, with weight-based preferences for memory and CPU costs in ascending order.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/intelligent-resource-placement.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-demo\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-app\n      version: v1\n  policy:\n    placementType: PickN\n    numberOfClusters: 2\n    affinity:\n      clusterAffinity:\n        preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 20\n            preference:\n              propertySorter:\n                name: kubernetes.azure.com/per-gb-memory-core-cost\n                sortOrder: Ascending\n          - weight: 20\n            preference:\n              propertySorter:\n                name: kubernetes.azure.com/per-cpu-core-cost\n                sortOrder: Ascending\n```\n\n----------------------------------------\n\nTITLE: Applying IP monitoring configuration to an AKS cluster\nDESCRIPTION: This kubectl command applies a configuration file to enable IP subnet usage monitoring. It requires the container-azm-ms-agentconfig.yaml file with azure_subnet_ip_usage enabled to be in the current directory.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-dynamic-ip-allocation.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f container-azm-ms-agentconfig.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Kured via Helm in AKS\nDESCRIPTION: Commands to deploy kured using Helm chart. This installs kured in a dedicated namespace and configures it to run only on Linux nodes. The deployment includes necessary roles, bindings, and service accounts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-updates-kured.md#2025-04-21_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n# Add the Kured Helm repository\nhelm repo add kubereboot https://kubereboot.github.io/charts/\n\n# Update your local Helm chart repository cache\nhelm repo update\n\n# Create a dedicated namespace where you would like to deploy kured into\nkubectl create namespace kured\n\n# Install kured in that namespace with Helm 3 (only on Linux nodes, kured is not working on Windows nodes)\nhelm install my-release kubereboot/kured --namespace kured --set controller.nodeSelector.\"kubernetes\\.io/os\"=linux\n```\n\n----------------------------------------\n\nTITLE: Configuring Web App Routing Profile using Bicep\nDESCRIPTION: Bicep configuration for setting up web app routing profile with custom nginx ingress controller type.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: bicep\nCODE:\n```\n\"ingressProfile\": {\n  \"webAppRouting\": {\n    \"nginx\": {\n        \"defaultIngressControllerType\": \"None|Internal|External|AnnotationControlled\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New Node Pool Using Azure CLI\nDESCRIPTION: Azure CLI command to add a new node pool to an existing AKS cluster with specified VM size and node count.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name mynodepool \\\n    --node-count 3 \\\n    --node-vm-size Standard_DS3_v2 \\\n    --mode System \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Applying the Persistent Volume Claim with kubectl\nDESCRIPTION: This command applies the PersistentVolumeClaim YAML to the Kubernetes cluster, which triggers the provisioning of a Premium SSD v2 disk as defined in the claim.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-premium-v2-disks.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f azure-pv2-disk-pvc.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Event Hub and Subscribing to AKS Events with Azure PowerShell\nDESCRIPTION: Creates a namespace and event hub, then subscribes to AKS events using Azure PowerShell. It creates 'MyNamespace' and 'MyEventGridHub' in the 'MyResourceGroup' resource group, and sets up an event subscription for the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-event-grid.md#2025-04-21_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzEventHubNamespace -Location eastus -Name MyNamespace -ResourceGroupName MyResourceGroup\nNew-AzEventHub -Name MyEventGridHub -Namespace MyNamespace -ResourceGroupName MyResourceGroup\n\n$SOURCE_RESOURCE_ID = (Get-AzAksCluster -ResourceGroupName MyResourceGroup -Name MyAKS).Id\n$ENDPOINT = (Get-AzEventHub -ResourceGroupName MyResourceGroup -EventHubName MyEventGridHub -Namespace MyNamespace).Id\n$params = @{\n    EventSubscriptionName = 'MyEventGridSubscription'\n    ResourceId            = $SOURCE_RESOURCE_ID\n    EndpointType          = 'eventhub'\n    Endpoint              = $ENDPOINT \n}\nNew-AzEventGridSubscription @params\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl and Configuring Cluster Access with Azure CLI\nDESCRIPTION: Installs kubectl locally and configures it to connect to the AKS cluster using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks install-cli\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Disabling LTS on AKS Cluster\nDESCRIPTION: Disables long-term support on an existing cluster by changing the tier to free/standard and updating the Kubernetes support plan to official.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/long-term-support.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group <resource-group-name> --name <cluster-name> --tier [free|standard] --k8s-support-plan KubernetesOfficial\n```\n\n----------------------------------------\n\nTITLE: Retrieving DNS Zone Resource ID with Azure CLI\nDESCRIPTION: Uses the az network dns zone show command to get the resource ID of the private DNS zone and store it in a variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nZONEID=$(az network private-dns zone show \\\n--resource-group test-rg \\\n--name private.contoso.com \\\n--query \"id\" \\\n--output tsv)\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Connection Timeout for NGINX Ingress in AKS\nDESCRIPTION: This YAML configuration shows how to set a custom connection timeout for NGINX Ingress in AKS using the 'nginx.ingress.kubernetes.io/proxy-read-timeout' annotation. It sets the timeout to 120 seconds.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: aks-helloworld\n  namespace: hello-web-app-routing\n  annotations:\n    nginx.ingress.kubernetes.io/proxy-read-timeout: \"120\"\nspec:\n  ingressClassName: <IngressClassName>\n  rules:\n  - host: <Hostname>\n    http:\n      paths:\n      - backend:\n          service:\n            name: aks-helloworld\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n```\n\n----------------------------------------\n\nTITLE: Deploying Pods to a Restricted Namespace\nDESCRIPTION: Attempts to deploy the Azure Voting App to the restricted namespace. This deployment will generate warnings and be blocked as it doesn't meet the restricted security policy requirements.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-psa.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply --namespace test-restricted -f https://raw.githubusercontent.com/Azure-Samples/azure-voting-app-redis/master/azure-vote-all-in-one-redis.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Resource Group\nDESCRIPTION: Command to create a new Azure resource group in the westus2 location using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create \\\n    --name myResourceGroup \\\n    --location westus2\n```\n\n----------------------------------------\n\nTITLE: Verifying Hubble-Related Kubernetes Secrets\nDESCRIPTION: Checks that the required Hubble certificate secrets have been generated in the Kubernetes cluster by listing all secrets in the kube-system namespace with the 'hubble-' prefix.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get secrets -n kube-system | grep hubble-\n```\n\nLANGUAGE: output\nCODE:\n```\nkube-system     hubble-relay-client-certs     kubernetes.io/tls     3     9d\n\nkube-system     hubble-relay-server-certs     kubernetes.io/tls     3     9d\n\nkube-system     hubble-server-certs           kubernetes.io/tls     3     9d    \n```\n\n----------------------------------------\n\nTITLE: Downloading and Extracting OSM Client Binary with curl and tar\nDESCRIPTION: Downloads a specific version of the OSM client binary from GitHub releases and extracts it. The script first defines a version variable which is used in the download URL.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/servicemesh/osm/open-service-mesh-binary-install-linux.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Specify the OSM version that will be leveraged throughout these instructions\nOSM_VERSION=v1.2.0\n\ncurl -sL \"https://github.com/openservicemesh/osm/releases/download/$OSM_VERSION/osm-$OSM_VERSION-linux-amd64.tar.gz\" | tar -vxzf -\n```\n\n----------------------------------------\n\nTITLE: Restarting CoreDNS Deployment in AKS\nDESCRIPTION: Console command to perform a rolling restart of the CoreDNS deployment to reload the ConfigMap without service downtime.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/coredns-custom.md#2025-04-21_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nkubectl -n kube-system rollout restart deployment coredns\n```\n\n----------------------------------------\n\nTITLE: Configuring Histogram Metrics in YAML\nDESCRIPTION: YAML configuration showing how to collect histogram bucket metrics for the API server.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ncontrolplane-apiserver = \"apiserver_request_duration_seconds_bucket|apiserver_request_duration_seconds_sum|apiserver_request_duration_seconds_count\"\n```\n\n----------------------------------------\n\nTITLE: Checking Persistent Volume Claim Status\nDESCRIPTION: Verifies the status of the persistent volume claim using the kubectl describe command, ensuring it is bound to the persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pvc pvc-nfs\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster with Azure PowerShell\nDESCRIPTION: Azure PowerShell commands to configure kubectl and connect to the AKS cluster. It imports credentials and verifies the connection by listing cluster nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Adding Windows Server 2022 Node Pool\nDESCRIPTION: Creates a Windows Server 2022 node pool in the AKS cluster, requiring Kubernetes version 1.23.0 or higher.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzAksNodePool -ResourceGroupName myResourceGroup `\n    -ClusterName myAKSCluster `\n    -VmSetType VirtualMachineScaleSets `\n    -OsType Windows `\n    -OsSKU Windows2022 `\n    -Name npwin\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Files Volume Size Output\nDESCRIPTION: Sample output from the df command showing the mounted Azure Files volume details, including the storage account endpoint, filesystem size, and utilization percentage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_5\n\nLANGUAGE: output\nCODE:\n```\nFilesystem                                                                                Size  Used Avail Use% Mounted on\n//f149b5a219bd34caeb07de9.file.core.windows.net/pvc-5e5d9980-da38-492b-8581-17e3cad01770  100G  128K  100G   1% /mnt/azurefile\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Key Vault using DefaultAzureCredential in Java\nDESCRIPTION: This Java code snippet shows how to use DefaultAzureCredential from Azure Identity to authenticate with Azure Key Vault and retrieve a secret. It uses environment variables for the Key Vault URL and secret name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-overview.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nimport java.util.Map;\n\nimport com.azure.security.keyvault.secrets.SecretClient;\nimport com.azure.security.keyvault.secrets.SecretClientBuilder;\nimport com.azure.security.keyvault.secrets.models.KeyVaultSecret;\nimport com.azure.identity.DefaultAzureCredentialBuilder;\nimport com.azure.identity.DefaultAzureCredential;\n\npublic class App {\n    public static void main(String[] args) {\n        Map<String, String> env = System.getenv();\n        String keyVaultUrl = env.get(\"KEYVAULT_URL\");\n        String secretName = env.get(\"SECRET_NAME\");\n\n        SecretClient client = new SecretClientBuilder()\n                .vaultUrl(keyVaultUrl)\n                .credential(new DefaultAzureCredentialBuilder().build())\n                .buildClient();\n        KeyVaultSecret secret = client.getSecret(secretName);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Access Restrictions Outside SRE Namespace\nDESCRIPTION: Commands to verify that RBAC restrictions prevent the SRE user from accessing resources outside their assigned namespace. These commands should fail for users with only SRE namespace permissions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_20\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods --all-namespaces\nkubectl run nginx-sre --image=mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine --namespace dev\n```\n\n----------------------------------------\n\nTITLE: Uninstall Network Policy Manager using Azure CLI\nDESCRIPTION: Command to update an AKS cluster by removing the network policy configuration. Sets the network-policy to 'none' which disables Azure Network Policy Manager or Calico.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_23\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --network-policy none\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster with Service Principal Credentials using Azure CLI\nDESCRIPTION: This snippet shows how to update an AKS cluster with new or existing service principal credentials using the Azure CLI. It uses the az aks update-credentials command to reset the service principal.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/update-credentials.md#2025-04-21_snippet_3\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks update-credentials \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --reset-service-principal \\\n    --service-principal \"$SP_ID\" \\\n    --client-secret \"${SP_SECRET}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring a Windows IIS Pod with SMB Volume Mount\nDESCRIPTION: This YAML manifest defines a Windows-based IIS pod that mounts the SMB persistent volume claim to the /inetpub/wwwroot path. It uses the Windows Server Core IIS image and sets resource limits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod \nmetadata:\n  name: iis-pod\n  labels:\n     app: web\nspec:\n  nodeSelector:\n    \"kubernetes.io/os\": windows\n  volumes:\n  - name: smb\n    persistentVolumeClaim:\n      claimName: anf-pvc-smb \n  containers:\n  - name: web\n    image: mcr.microsoft.com/windows/servercore/iis:windowsservercore \n    resources:\n      limits:\n        cpu: 1\n        memory: 800M\n    ports:\n      - containerPort: 80\n    volumeMounts:\n    - name: smb\n      mountPath: \"/inetpub/wwwroot\"\n      readOnly: false\n```\n\n----------------------------------------\n\nTITLE: Update DCGM Exporter Values Configuration\nDESCRIPTION: YAML configuration updates for the values.yaml file including serviceMonitor apiVersion, nodeSelector, and tolerations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-gpu-metrics.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n...\n...\nserviceMonitor:\n    apiVersion: \"azmonitoring.coreos.com/v1\"\n...\n...\nnodeSelector:\n    accelerator: \"nvidia\"\n\ntolerations:\n- key: \"sku\"\n    operator: \"Equal\"\n    value: \"gpu\"\n    effect: \"NoSchedule\"\n...\n...\n```\n\n----------------------------------------\n\nTITLE: Deploying Kubernetes Resources with kubectl\nDESCRIPTION: Commands for creating and monitoring the deployment and pods using kubectl, including viewing pod status and details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -f azure-autodeploy.yaml\nkubectl get pods\nkubectl get pod <pod-name> --output yaml\nkubectl get vpa vpa-auto --output yaml\n```\n\n----------------------------------------\n\nTITLE: Enabling Container Insights for monitoring IP subnet usage in AKS\nDESCRIPTION: This command enables the monitoring add-on in an existing AKS cluster to track IP subnet usage. It uses the az aks enable-addons command and requires the cluster name and resource group variables to be set.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-dynamic-ip-allocation.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks enable-addons --addons monitoring --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME\n```\n\n----------------------------------------\n\nTITLE: GMSA Demo Application Deployment\nDESCRIPTION: Complete YAML configuration for deploying a demo application using GMSA, including ConfigMap with PowerShell setup script, Deployment, and Service configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  labels:\n   app: gmsa-demo\n  name: gmsa-demo\n  namespace: default\ndata:\n  run.ps1: |\n   $ErrorActionPreference = \"Stop\"\n\n   Write-Output \"Configuring IIS with authentication.\"\n\n   # Add required Windows features, since they are not installed by default.\n   Install-WindowsFeature \"Web-Windows-Auth\", \"Web-Asp-Net45\"\n\n   # Create simple ASP.NET page.\n   New-Item -Force -ItemType Directory -Path 'C:\\inetpub\\wwwroot\\app'\n   Set-Content -Path 'C:\\inetpub\\wwwroot\\app\\default.aspx' -Value 'Authenticated as <B><%=User.Identity.Name%></B>, Type of Authentication: <B><%=User.Identity.AuthenticationType%></B>'\n\n   # Configure IIS with authentication.\n   Import-Module IISAdministration\n   Start-IISCommitDelay\n   (Get-IISConfigSection -SectionPath 'system.webServer/security/authentication/windowsAuthentication').Attributes['enabled'].value = $true\n   (Get-IISConfigSection -SectionPath 'system.webServer/security/authentication/anonymousAuthentication').Attributes['enabled'].value = $false\n   (Get-IISServerManager).Sites[0].Applications[0].VirtualDirectories[0].PhysicalPath = 'C:\\inetpub\\wwwroot\\app'\n   Stop-IISCommitDelay\n\n   Write-Output \"IIS with authentication is ready.\"\n\n   C:\\ServiceMonitor.exe w3svc\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: gmsa-demo\n  name: gmsa-demo\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: gmsa-demo\n  template:\n    metadata:\n      labels:\n        app: gmsa-demo\n    spec:\n      securityContext:\n        windowsOptions:\n          gmsaCredentialSpecName: aks-gmsa-spec\n      containers:\n      - name: iis\n        image: mcr.microsoft.com/windows/servercore/iis:windowsservercore-ltsc2019\n        imagePullPolicy: IfNotPresent\n        command:\n         - powershell\n        args:\n          - -File\n          - /gmsa-demo/run.ps1\n        volumeMounts:\n          - name: gmsa-demo\n            mountPath: /gmsa-demo\n      volumes:\n      - configMap:\n          defaultMode: 420\n          name: gmsa-demo\n        name: gmsa-demo\n      nodeSelector:\n        kubernetes.io/os: windows\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: gmsa-demo\n  name: gmsa-demo\n  namespace: default\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    app: gmsa-demo\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Updating Node Pool Mode and Adding Taints in AKS with PowerShell\nDESCRIPTION: This PowerShell script updates an existing node pool to System mode and adds the 'CriticalAddonsOnly=true:NoSchedule' taint to prevent application pods from being scheduled on this node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_6\n\nLANGUAGE: PowerShell\nCODE:\n```\n$myAKSCluster = Get-AzAksCluster -ResourceGroupName myResourceGroup2 -Name myAKSCluster\n$systemPool = $myAKSCluster.AgentPoolProfiles | Where-Object Name -eq 'systempool'\n$systemPool.Mode = 'System'\n$nodeTaints = [System.Collections.Generic.List[string]]::new()\n$NodeTaints.Add('CriticalAddonsOnly=true:NoSchedule')\n$systemPool.NodeTaints = $NodeTaints\n$myAKSCluster | Set-AzAksCluster\n```\n\n----------------------------------------\n\nTITLE: Installing Helm Chart in Bash\nDESCRIPTION: Uses the helm install command to deploy the azure-vote-front application using the created Helm chart.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nhelm install azure-vote-front azure-vote-front/\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Surge for Faster Image Upgrades\nDESCRIPTION: Speed up node image upgrades by configuring custom node surge values, allowing more nodes to be upgraded simultaneously.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-image-upgrade.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update \\\n    --resource-group <resource-group> \\\n    --cluster-name <cluster-name> \\\n    --name <node-pool-name> \\\n    --max-surge 33% \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating Windows-Enabled AKS Cluster with Virtual Machines Node Pools\nDESCRIPTION: Create a Windows-enabled AKS cluster with Virtual Machines node pools and add a Windows node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-machines-node-pools.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\necho \"Please enter the username to use as administrator credentials for Windows Server nodes on your cluster: \" && read WINDOWS_USERNAME\n```\n\nLANGUAGE: bash\nCODE:\n```\necho \"Please enter the password to use as administrator credentials for Windows Server nodes on your cluster: \" && read WINDOWS_PASSWORD\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\ \n   --resource-group myResourceGroup \\\n   --name myAKSCluster \\\n   --node-count 2 \\\n   --enable-addons monitoring \\\n   --generate-ssh-keys \\\n   --windows-admin-username $WINDOWS_USERNAME \\\n   --windows-admin-password $WINDOWS_PASSWORD \\\n   --vm-set-type \"VirtualMachines\" \\\n   --network-plugin azure\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add\n   --resource-group myResourceGroup \\\n   --cluster-name myAKSCluster \\\n   --os-type Windows \\\n   --name npwin \\\n   --vm-sizes \"Standard_D2s_V3\" \\\n   --node-count 1\n   --vm-set-type \"VirtualMachines\"\n```\n\n----------------------------------------\n\nTITLE: Authenticating to AKS Cluster using Azure CLI\nDESCRIPTION: Command to retrieve AKS cluster credentials using Azure CLI, allowing kubectl to connect to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Adding Windows Server Node Pool with containerd\nDESCRIPTION: Azure CLI command to add a Windows Server node pool using containerd runtime to an existing AKS cluster. Requires Kubernetes version 1.20+ and minimum VM size of Standard_D4s_v3.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --os-type Windows \\\n    --name $CONTAINER_D_NODE_POOL_NAME \\\n    --node-vm-size Standard_D4s_v3 \\\n    --kubernetes-version 1.20.5 \\\n    --aks-custom-headers WindowsContainerRuntime=containerd \\\n    --node-count 1\n```\n\n----------------------------------------\n\nTITLE: Monitoring KAITO Workspace Status in Bash\nDESCRIPTION: Retrieves and watches the status of KAITO workspaces in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-fine-tune.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get workspace -w\n```\n\n----------------------------------------\n\nTITLE: Applying NetworkPolicy Resource in Kubernetes\nDESCRIPTION: Command to apply the network policy YAML manifest to the cluster. This enforces the network policy rules defined in the manifest.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_21\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply –f demo-policy.yaml\n```\n\n----------------------------------------\n\nTITLE: Internal Load Balancer with Custom Subnet Configuration\nDESCRIPTION: YAML configuration for creating an internal load balancer service with a specified subnet annotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/internal-lb.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: internal-app\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n    service.beta.kubernetes.io/azure-load-balancer-internal-subnet: \"apps-subnet\"\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n  selector:\n    app: internal-app\n```\n\n----------------------------------------\n\nTITLE: Validating Azure File Volume Mount in AKS Pod\nDESCRIPTION: Command to validate the mounted Azure File share within the pod by checking disk usage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it statefulset-azurefile-0 -- df -h\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Node Pool with Delete Scale-down Mode and Cluster Autoscaler\nDESCRIPTION: This command adds a new node pool with the Delete scale-down mode and enables the cluster autoscaler. It sets the minimum and maximum node count, along with other configuration options.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-down-mode.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --enable-cluster-autoscaler --min-count 1 --max-count 10 --max-pods 10 --node-osdisk-type Managed --scale-down-mode Delete --name nodepool3 --cluster-name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Output of Volume Mount Verification in AKS Pod\nDESCRIPTION: Command output showing the mounted Azure File share details within the pod, including the storage account endpoint and available space.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_21\n\nLANGUAGE: output\nCODE:\n```\nFilesystem      Size  Used Avail Use% Mounted on\n...\n/dev/sda1                                                                                 29G   11G   19G  37% /etc/hosts\naccountname.file.core.windows.net:/accountname/pvc-fa72ec43-ae64-42e4-a8a2-556606f5da38  100G     0  100G   0% /mnt/azurefile\n...\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster with Multiple Managed Outbound Public IPs\nDESCRIPTION: This Azure CLI command updates an existing AKS cluster to use two managed outbound public IPs. It demonstrates how to scale the number of managed outbound public IPs using the --load-balancer-managed-outbound-ip-count parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --load-balancer-managed-outbound-ip-count 2\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Proxy Configuration for AKS\nDESCRIPTION: Sample JSON configuration showing practical values for HTTP proxy setup including proxy server URLs and excluded addresses.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/http-proxy.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"httpProxy\": \"http://myproxy.server.com:8080/\", \n  \"httpsProxy\": \"https://myproxy.server.com:8080/\", \n  \"noProxy\": [\n    \"localhost\",\n    \"127.0.0.1\"\n  ],\n  \"trustedCA\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUgvVENDQmVXZ0F3SUJB...b3Rpbk15RGszaWFyCkYxMFlscWNPbWVYMXVGbUtiZGkvWG9yR2xrQ29NRjNURHg4cm1wOURCaUIvCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=\"\n}\n```\n\n----------------------------------------\n\nTITLE: Updating NAT Gateway Configuration\nDESCRIPTION: Updates the outbound IP address count for an existing AKS cluster's NAT gateway.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/nat-gateway.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\ \n    --resource-group myResourceGroup \\\n    --name myNatCluster\\\n    --nat-gateway-managed-outbound-ip-count 5\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview Extension\nDESCRIPTION: Commands to install and update the aks-preview Azure CLI extension required for static CIDR block allocation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-static-block-allocation.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Creating Pod Disruption Budget for Valkey in Kubernetes\nDESCRIPTION: This snippet creates a Pod Disruption Budget (PDB) for the Valkey application to ensure that at most one pod is unavailable during voluntary disruptions. This helps maintain stability and availability during upgrades or maintenance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n  name: valkey\n  namespace: valkey\nspec:\n  maxUnavailable: 1\n  selector:\n    matchLabels:\n      app: valkey\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Managed Identity\nDESCRIPTION: Commands to create a managed identity and assign Network Contributor permissions on the virtual network\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create\naz role assignment create\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure Container Storage and Creating Storage Pool\nDESCRIPTION: This Azure CLI command installs Azure Container Storage on the AKS cluster and creates a Local NVMe storage pool. It uses the ephemeralDisk option with NVMe storage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-azure-container-storage.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update -n myAKSCluster -g myResourceGroup --enable-azure-container-storage ephemeralDisk --storage-pool-option NVMe\n```\n\n----------------------------------------\n\nTITLE: Updating Azure App Configuration Extension Settings\nDESCRIPTION: This Azure CLI command updates the Azure App Configuration extension settings for an AKS cluster. It recreates the extension with the desired state, in this case, changing the replica count from 2 to 3. It specifies the cluster type, name, resource group, extension name, type, enables auto-upgrade for minor versions, and sets the new configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration-settings.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n    --cluster-name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --name appconfigurationkubernetesprovider \\\n    --extension-type Microsoft.AppConfiguration \\\n    --auto-upgrade-minor-version true \\\n    --configuration-settings \"replicaCount=3\"\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Pod-Managed Identity Resources\nDESCRIPTION: Series of commands to clean up resources created for pod-managed identity, including removing the sample application, deleting the pod identity, and removing the Azure identity and role assignments.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod demo --namespace $POD_IDENTITY_NAMESPACE\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks pod-identity delete --name ${POD_IDENTITY_NAME} --namespace ${POD_IDENTITY_NAMESPACE} --resource-group myResourceGroup --cluster-name myAKSCluster\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity delete --resource-group ${IDENTITY_RESOURCE_GROUP} --name ${IDENTITY_NAME}\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment delete --role \"Managed Identity Operator\" --assignee \"$IDENTITY_CLIENT_ID\" --scope \"$IDENTITY_RESOURCE_ID\"\n```\n\n----------------------------------------\n\nTITLE: Registering AzureVnetScalePreview Feature Flag\nDESCRIPTION: Commands to register and verify the AzureVnetScalePreview feature flag required for static CIDR allocation functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-static-block-allocation.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"AzureVnetScalePreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"AzureVnetScalePreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Installing cert-manager Components\nDESCRIPTION: Series of commands to deploy cert-manager CRDs and Helm chart to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.3/cert-manager.crds.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add jetstack https://charts.jetstack.io\nhelm repo update\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm install \\\n  cert-manager jetstack/cert-manager --version v1.14.3 \\\n  --namespace cert-manager --create-namespace \\\n  --wait\n```\n\n----------------------------------------\n\nTITLE: Creating On-Demand PostgreSQL Backup with Barman and Azure Storage\nDESCRIPTION: Commands to create an on-demand backup of PostgreSQL using Barman (backup and recovery manager) with Azure Storage integration. The backup utilizes AKS workload identity for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nexport BACKUP_ONDEMAND_NAME=\"on-demand-backup-1\"\n\ncat <<EOF | kubectl apply --context $AKS_PRIMARY_CLUSTER_NAME --namespace $PG_NAMESPACE -v 9 -f -\napiVersion: postgresql.cnpg.io/v1\nkind: Backup\nmetadata:\n  name: $BACKUP_ONDEMAND_NAME\nspec:\n  method: barmanObjectStore\n  cluster:\n    name: $PG_PRIMARY_CLUSTER_NAME\nEOF\n```\n\n----------------------------------------\n\nTITLE: Testing Blocked FQDN Connection\nDESCRIPTION: Tests connectivity to a blocked FQDN (www.example.com) from the test pod. This connection should be denied by the Cilium Network Policy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nbash-5.0# ./agnhost connect www.example.com:80\n```\n\n----------------------------------------\n\nTITLE: Adding and Updating the aks-preview Extension\nDESCRIPTION: Commands to install or update the aks-preview CLI extension, which is required to access preview features like Windows GPU support.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Register the aks-preview extension\naz extension add --name aks-preview\n\n# Update the aks-preview extension\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Creating Pod-Managed Identity in AKS Cluster\nDESCRIPTION: Adds a pod-managed identity to the AKS cluster using Azure CLI. This creates the necessary Kubernetes resources to associate pods with the managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\nexport POD_IDENTITY_NAME=\"my-pod-identity\"\nexport POD_IDENTITY_NAMESPACE=\"my-app\"\naz aks pod-identity add --resource-group myResourceGroup --cluster-name myAKSCluster --namespace ${POD_IDENTITY_NAMESPACE}  --name ${POD_IDENTITY_NAME} --identity-resource-id ${IDENTITY_RESOURCE_ID}\n```\n\n----------------------------------------\n\nTITLE: Applying Hubble UI Configuration\nDESCRIPTION: Command to apply the Hubble UI YAML configuration to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f hubble-ui.yaml\n```\n\n----------------------------------------\n\nTITLE: Deleting a Node Pool with Azure CLI\nDESCRIPTION: This Azure CLI command deletes a node pool from an AKS cluster. When deleting a system node pool, you must have at least one other system node pool in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_13\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks nodepool delete --resource-group myResourceGroup --cluster-name myAKSCluster --name mynodepool\n```\n\n----------------------------------------\n\nTITLE: Listing PVCs in a Namespace Sorted by Creation Time\nDESCRIPTION: Bash command to retrieve a list of all Persistent Volume Claims (PVCs) in a specified namespace, sorted by creation timestamp. This is useful for identifying PVCs to migrate.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pvc --namespace <namespace> --sort-by=.metadata.creationTimestamp -o custom-columns=NAME:.metadata.name,CreationTime:.metadata.creationTimestamp,StorageClass:.spec.storageClassName,Size:.spec.resources.requests.storage\n```\n\n----------------------------------------\n\nTITLE: Best Practice Note - Network Policies\nDESCRIPTION: Guidance recommending the use of network policies to secure traffic between pods, with support for Azure Network Policy Manager and Calico Network Policy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/windows-best-practices.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> **Best practice guidance**\n>\n> Use network policies to secure traffic between pods. Windows supports Azure Network Policy Manager and Calico Network Policy. For more information, see [Differences between Network Policy engines: Cilium, Azure NPM, and Calico][azurenpm-vs-calico].\n```\n\n----------------------------------------\n\nTITLE: Applying the Storage Class with kubectl\nDESCRIPTION: This command applies the previously defined StorageClass YAML to the Kubernetes cluster using kubectl, which makes the storage class available for use with persistent volume claims.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-premium-v2-disks.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f azure-pv2-disk-sc.yaml\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster with Private Key Vault KMS\nDESCRIPTION: This command updates an existing AKS cluster to enable KMS encryption using a private key vault. It specifies the key ID, network access type, and key vault resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_24\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group MyResourceGroup --enable-azure-keyvault-kms --azure-keyvault-kms-key-id $KEY_ID --azure-keyvault-kms-key-vault-network-access \"Private\" --azure-keyvault-kms-key-vault-resource-id $KEYVAULT_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Adding Virtual Machines Node Pool to AKS Cluster using Azure CLI\nDESCRIPTION: This command adds a Virtual Machines node pool named 'myvmpool' to an existing AKS cluster. The node pool is configured with 3 nodes and uses the Standard_D4s_v3 VM SKU.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-machines-node-pools.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name myvmpool \\\n    --vm-set-type \"VirtualMachines\" \\\n    --vm-sizes \"Standard_D4s_v3\" \\\n    --node-count 3\n```\n\n----------------------------------------\n\nTITLE: Setting Federated Credential Variables\nDESCRIPTION: Sets environment variables for the federated credential name, namespace, and service account name, which will be used to create the federation between Kubernetes and Microsoft Entra ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set the federated credential name variable\nFEDERATED_CREDENTIAL_NAME=myFederatedCredential\n\n# Set the namespace variable\nSERVICE_ACCOUNT_NAMESPACE=default\n\n# Set the service account variable\nSERVICE_ACCOUNT_NAME=ai-service-account\n```\n\n----------------------------------------\n\nTITLE: Verifying Node Pool Generation Type\nDESCRIPTION: Azure CLI command to verify the node pool configuration and check if it's using a Generation 2 image.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/generation-2-vm.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool show --resource-group <resource-group-name> --cluster-name <cluster-name> --name <node-pool-name>\n```\n\n----------------------------------------\n\nTITLE: Cloning Terraform AKS Module Repository\nDESCRIPTION: Commands to clone the Azure Verified Module repository for AKS deployment and navigate to the stateful workloads example directory\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Azure/terraform-azurerm-avm-res-containerservice-managedcluster.git\ncd examples/stateful-workloads\n```\n\n----------------------------------------\n\nTITLE: Kusto Query for Retrieving Image Cleaner Logs Using ContainerLogV2 Schema\nDESCRIPTION: Kusto query for Azure Monitor Log Analytics that retrieves logs from Image Cleaner pods using the ContainerLogV2 schema. This query filters logs from 'eraser-aks-' prefixed pods in the 'kube-system' namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_15\n\nLANGUAGE: kusto\nCODE:\n```\nContainerLogV2\n| where PodName startswith \"eraser-aks-\" and PodNamespace == \"kube-system\"\n| project TimeGenerated, PodName, LogMessage, LogSource\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Kubenet and Pod-Managed Identity\nDESCRIPTION: Creates an AKS cluster with Kubenet network plugin and pod-managed identity enabled using Azure CLI. This command sets up the basic infrastructure for running applications with managed identities in Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group $MY_RESOURCE_GROUP \\\n    --name $MY_CLUSTER \\\n    --enable-pod-identity \\\n    --enable-pod-identity-with-kubenet \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Updating AKS cluster with custom CA certificates using Azure CLI\nDESCRIPTION: Azure CLI command to update an existing AKS cluster with the modified configuration that includes custom CA certificates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-certificate-authority.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz rest --method put \\\n  --url \"/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.ContainerService/managedClusters/<cluster-name>?api-version=2025-01-01\" --body @body.json\n```\n\n----------------------------------------\n\nTITLE: Updating Ingress Controller Configuration on Existing AKS Cluster\nDESCRIPTION: Command to update the application routing default ingress controller configuration on an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks approuting update --resource-group <ResourceGroupName> --name <ClusterName> --nginx <DefaultIngressControllerType>\n```\n\n----------------------------------------\n\nTITLE: Configuring Dapr OS and Architecture with Bicep\nDESCRIPTION: Bicep code to set the operating system and architecture for the Dapr control plane components.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_7\n\nLANGUAGE: bicep\nCODE:\n```\nproperties: {\n  configurationSettings: {\n    'global.clusterType': 'managedclusters'\n    'global.ha.enabled': true\n    'global.daprControlPlaneOs': 'linux'\n    'global.daprControlPlaneArch': 'amd64'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing SMB CSI Driver on Kubernetes Cluster\nDESCRIPTION: This code installs the SMB CSI (Container Storage Interface) driver on the Kubernetes cluster using Helm. It adds the necessary repo and installs the driver with Windows support enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add csi-driver-smb https://raw.githubusercontent.com/kubernetes-csi/csi-driver-smb/master/charts   \nhelm install csi-driver-smb csi-driver-smb/csi-driver-smb --namespace kube-system --version v1.13.0 --set windows.enabled=true\n\nkubectl get pods -n kube-system | grep csi-smb\n```\n\n----------------------------------------\n\nTITLE: Verifying PersistentVolumeClaim Status\nDESCRIPTION: Command to check the status of the PersistentVolumeClaim and its sample output showing successful binding.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pvc pvc-azuredisk\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME            STATUS   VOLUME         CAPACITY    ACCESS MODES   STORAGECLASS   AGE\npvc-azuredisk   Bound    pv-azuredisk   20Gi        RWO                           5s\n```\n\n----------------------------------------\n\nTITLE: Adding Microsoft Entra Admin to PostgreSQL Flexible Server Using Azure CLI\nDESCRIPTION: Configures the currently signed-in Azure user as a Microsoft Entra Admin for the PostgreSQL Flexible Server. This enables Azure Active Directory authentication for database connections.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nENTRA_ADMIN_NAME=$(az account show --query user.name --output tsv)\naz postgres flexible-server ad-admin create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --server-name $DB_SERVER_NAME \\\n    --display-name $ENTRA_ADMIN_NAME \\\n    --object-id $(az ad signed-in-user show --query id --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Basic Istio Authorization Policy\nDESCRIPTION: Simple Istio AuthorizationPolicy that allows bookbuyer service to communicate with bookstore service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: bookstore\n  namespace: bookstore\nspec:\n  selector:\n    matchLabels:\n      app: bookstore\n  action: ALLOW\n  rules:\n    - from:\n        - source:\n            principals: [\"cluster.local/ns/bookbuyer/sa/bookbuyer\"]\n```\n\n----------------------------------------\n\nTITLE: Importing Certificate into Azure Key Vault using Azure CLI\nDESCRIPTION: This Azure CLI command imports the PFX certificate file into the specified Azure Key Vault. The certificate will be accessible to the AKS cluster via the Secrets Store CSI Driver.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz keyvault certificate import --vault-name $AKV_NAME --name $CERT_NAME --file $CERT_NAME.pfx\n```\n\n----------------------------------------\n\nTITLE: Deleting Primary PostgreSQL Pod to Trigger Failover\nDESCRIPTION: Identifies the current primary PostgreSQL pod and deletes it with a minimal grace period to simulate an unplanned failure, which will trigger automatic failover.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nPRIMARY_POD=$(kubectl get pod \\\n    --namespace $PG_NAMESPACE \\\n    --no-headers \\\n    -o custom-columns=\":metadata.name\" \\\n    -l role=primary)\n\nkubectl delete pod $PRIMARY_POD --grace-period=1 --namespace $PG_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Inspecting OSM Bootstrap Components\nDESCRIPTION: Command to examine the deployment, pod, and service status of OSM Bootstrap components.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get deployment,pod,service -n kube-system --selector app=osm-bootstrap\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Managed Identity\nDESCRIPTION: This command creates a user-assigned managed identity in Azure, which will be used to grant AKS access to the private Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create --name MyIdentity --resource-group MyResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Pushing Spin App to Azure Container Registry\nDESCRIPTION: Command to push the packaged Spin application to Azure Container Registry using the spin registry push command\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nspin registry push $ACR_LOGIN_SERVER/hello-spinkube:0.0.1\n```\n\n----------------------------------------\n\nTITLE: Creating SSH Key Pair for AKS Authentication\nDESCRIPTION: Commands to generate SSH key pairs using either Azure CLI or ssh-keygen for AKS cluster authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create an SSH key pair using Azure CLI\naz sshkey create --name \"mySSHKey\" --resource-group \"myResourceGroup\"\n\n# Create an SSH key pair using ssh-keygen\nssh-keygen -t rsa -b 4096\n```\n\n----------------------------------------\n\nTITLE: Resetting Windows Admin Password in AKS Cluster using Azure CLI\nDESCRIPTION: This snippet demonstrates how to update the Windows administrator password for an AKS cluster using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myAKSCluster --windows-admin-password $WINDOWS_ADMIN_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with IP-based Inbound Pool Membership\nDESCRIPTION: This Azure CLI command creates a new AKS cluster with IP-based inbound pool membership for the load balancer, which can improve performance for service provisioning.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --load-balancer-backend-pool-type=nodeIP \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Deleting a Node Pool with PowerShell\nDESCRIPTION: This PowerShell command deletes a node pool from an AKS cluster. When deleting a system node pool, you must have at least one other system node pool in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_14\n\nLANGUAGE: PowerShell\nCODE:\n```\nRemove-AzAksNodePool -ResourceGroupName myResourceGroup -ClusterName myAKSCluster -Name mynodepool\n```\n\n----------------------------------------\n\nTITLE: Retrieving Certificate URI from Azure Key Vault\nDESCRIPTION: Azure CLI command to fetch a certificate URI from Azure Key Vault, which will be used in the Ingress configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault certificate show --vault-name <KeyVaultName> --name <KeyVaultCertificateName> --query \"id\" --output tsv\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for AKS Cluster Creation\nDESCRIPTION: Commands to set environment variables for resource group name, cluster name, Windows username, and location before creating an AKS cluster. These variables are used in subsequent commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n$RESOURCE_GROUP_NAME=myResourceGroup-NP\n$CLUSTER_NAME=myAKSCluster\n$WINDOWS_USERNAME=myWindowsUserName\n$LOCATION=canadaeast\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Key Vault using DefaultAzureCredential in C++\nDESCRIPTION: This C++ code snippet shows how to use DefaultAzureCredential from Azure Identity to authenticate with Azure Key Vault and retrieve a secret. It uses environment variables for the Key Vault URL and secret name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-overview.md#2025-04-21_snippet_1\n\nLANGUAGE: cpp\nCODE:\n```\n#include <cstdlib>\n#include <azure/identity.hpp>\n#include <azure/keyvault/secrets/secret_client.hpp>\n\nusing namespace Azure::Identity;\nusing namespace Azure::Security::KeyVault::Secrets;\n\nint main()\n{\n  const char* keyVaultUrl = std::getenv(\"KEYVAULT_URL\");\n  const char* secretName = std::getenv(\"SECRET_NAME\");\n  auto credential = std::make_shared<DefaultAzureCredential>();\n\n  SecretClient client(keyVaultUrl, credential);\n  Secret secret = client.GetSecret(secretName).Value;\n\n  return 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster with Azure CLI\nDESCRIPTION: Azure CLI commands to configure kubectl and connect to the AKS cluster. It downloads credentials and verifies the connection by listing cluster nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Resource Group\nDESCRIPTION: Deletes the entire resource group containing the AKS cluster and associated resources when they are no longer needed, preventing unnecessary charges.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name $RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster from Snapshot in Azure CLI\nDESCRIPTION: This command creates a new AKS cluster using a snapshot's configuration for the initial system pool. It ensures that the new cluster matches the snapshot's specifications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-pool-snapshot.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name myAKSCluster2 \\\n    --resource-group myResourceGroup \\\n    --snapshot-id $SNAPSHOT_ID \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Checking NGINX Ingress Controller Conditions for Troubleshooting\nDESCRIPTION: Bash command to view the conditions of the NGINX ingress controller for troubleshooting purposes using jsonpath output formatting.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nginxingresscontroller -n <IngressControllerName> -o jsonpath='{range .items[*].status.conditions[*]}{.lastTransitionTime}{\"\\t\"}{.status}{\"\\t\"}{.type}{\"\\t\"}{.message}{\"\\n\"}{end}'\n```\n\n----------------------------------------\n\nTITLE: Deploying Pod with Generic Ephemeral Volume in YAML\nDESCRIPTION: This YAML manifest defines a pod using Fio (Flexible I/O Tester) with a generic ephemeral volume. It specifies the storage class, volume size, and node selector for Azure Container Storage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-azure-container-storage.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: fiopod\nspec:\n  nodeSelector:\n    acstor.azure.com/io-engine: acstor\n  containers:\n    - name: fio\n      image: nixery.dev/shell/fio\n      args:\n        - sleep\n        - \"1000000\"\n      volumeMounts:\n        - mountPath: \"/volume\"\n          name: ephemeralvolume\n  volumes:\n    - name: ephemeralvolume\n      ephemeral:\n        volumeClaimTemplate:\n          metadata:\n            labels:\n              type: my-ephemeral-volume\n          spec:\n            accessModes: [ \"ReadWriteOnce\" ]\n            storageClassName: acstor-ephemeraldisk-nvme # replace with the name of your storage class if different\n            resources:\n              requests:\n                storage: 1Gi\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume Claim\nDESCRIPTION: YAML configuration for creating a Persistent Volume Claim (PVC) that requests a 100-GiB volume with ReadWriteMany access mode using the Azure NetApp Files storage class.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: anf-pvc-smb\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: anf-sc-smb\n```\n\n----------------------------------------\n\nTITLE: Getting External IP of NGINX Ingress Controller in AKS\nDESCRIPTION: This command retrieves the external IP address assigned to the NGINX ingress controller service after deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl --namespace ingress-basic get services -o wide -w ingress-nginx-ingress-nginx-controller\n```\n\n----------------------------------------\n\nTITLE: Creating a ConfigMap for Valkey Configuration\nDESCRIPTION: YAML configuration to create a ConfigMap resource that stores the Valkey configuration file with cluster settings, including enabling cluster mode, setting timeouts, and configuring data persistence.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: valkey-cluster\n  namespace: valkey\ndata:\n  valkey.conf:  |+\n    cluster-enabled yes\n    cluster-node-timeout 15000\n    cluster-config-file /data/nodes.conf\n    appendonly yes\n    protected-mode yes\n    dir /data\n    port 6379\n    include /etc/valkey-password/valkey-password-file.conf\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating FIPS-enabled Windows Node Pool in AKS\nDESCRIPTION: Azure CLI command to add a new FIPS-enabled Windows node pool to an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name fipsnp \\\n    --enable-fips-image \\\n    --os-type Windows\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster for Node Autoprovisioning\nDESCRIPTION: Azure CLI command to enable node autoprovisioning on an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME --node-provisioning-mode Auto --network-plugin azure --network-plugin-mode overlay --network-dataplane cilium\n```\n\n----------------------------------------\n\nTITLE: Exporting Key ID from Azure Key Vault using Azure CLI\nDESCRIPTION: This command retrieves and exports the ID of a specific key from Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\nexport KEY_ID=$(az keyvault key show --name MyKeyName --vault-name MyKeyVault --query 'key.kid' -o tsv)\necho $KEY_ID\n```\n\n----------------------------------------\n\nTITLE: Implementing Seccomp Filter for Pre-1.19 AKS\nDESCRIPTION: JSON configuration for a seccomp filter that prevents chmod-related system calls. This filter blocks chmod, fchmodat, and chmodat syscalls while allowing all other system calls.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/secure-container-access.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"defaultAction\": \"SCMP_ACT_ALLOW\",\n  \"syscalls\": [\n    {\n      \"name\": \"chmod\",\n      \"action\": \"SCMP_ACT_ERRNO\"\n    },\n    {\n      \"name\": \"fchmodat\",\n      \"action\": \"SCMP_ACT_ERRNO\"\n    },\n    {\n      \"name\": \"chmodat\",\n      \"action\": \"SCMP_ACT_ERRNO\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl and Configuring Cluster Access with Azure PowerShell\nDESCRIPTION: Installs kubectl locally and configures it to connect to the AKS cluster using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_7\n\nLANGUAGE: azurepowershell\nCODE:\n```\nInstall-AzAksKubectl\n```\n\nLANGUAGE: azurepowershell\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with Mounted Blob Storage in YAML\nDESCRIPTION: This YAML snippet defines a Pod that mounts the previously created PersistentVolumeClaim for Azure Blob Storage. It specifies the container image, volume mount path, and references the PVC.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: nginx-blob\nspec:\n  nodeSelector:\n    \"kubernetes.io/os\": linux\n  containers:\n    - image: mcr.microsoft.com/oss/nginx/nginx:1.17.3-alpine\n      name: nginx-blob\n      volumeMounts:\n        - name: blob01\n          mountPath: \"/mnt/blob\"\n          readOnly: false\n  volumes:\n    - name: blob01\n      persistentVolumeClaim:\n        claimName: pvc-blob\n```\n\n----------------------------------------\n\nTITLE: Setting Backend Protocol for NGINX Ingress in AKS\nDESCRIPTION: This YAML configuration demonstrates how to set a custom backend protocol (HTTPS in this case) for NGINX Ingress in AKS using the 'nginx.ingress.kubernetes.io/backend-protocol' annotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: aks-helloworld\n  namespace: hello-web-app-routing\n  annotations:\n    nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\nspec:\n  ingressClassName: <IngressClassName>\n  rules:\n  - host: <Hostname>\n    http:\n      paths:\n      - backend:\n          service:\n            name: aks-helloworld\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n```\n\n----------------------------------------\n\nTITLE: Checking if Artifact Streaming is enabled on an AKS node pool\nDESCRIPTION: Command to verify whether Artifact Streaming is enabled on a specific node pool in your AKS cluster by querying its artifactStreamingProfile.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool show --resource-group myResourceGroup --cluster-name myAKSCluster --name myNodePool --query artifactStreamingProfile\n```\n\n----------------------------------------\n\nTITLE: Checking API Server Certificate Expiration Date in AKS\nDESCRIPTION: This curl command checks the expiration date of the API server certificate.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/certificate-rotation.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ncurl https://{apiserver-fqdn} -k -v 2>&1 | grep expire\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Cluster with No CNI Plugin Using ARM Template\nDESCRIPTION: This Azure Resource Manager (ARM) template creates an AKS cluster with no CNI plugin preinstalled. It sets the 'networkPlugin' property to 'none' in the network profile.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-byo-cni.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"clusterName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"aksbyocni\"\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\"\n    },\n    \"kubernetesVersion\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"1.22\"\n    },\n    \"nodeCount\": {\n      \"type\": \"int\",\n      \"defaultValue\": 3\n    },\n    \"nodeSize\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Standard_B2ms\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.ContainerService/managedClusters\",\n      \"apiVersion\": \"2022-06-01\",\n      \"name\": \"[parameters('clusterName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"identity\": {\n        \"type\": \"SystemAssigned\"\n      },\n      \"properties\": {\n        \"agentPoolProfiles\": [\n          {\n            \"name\": \"nodepool1\",\n            \"count\": \"[parameters('nodeCount')]\",\n            \"mode\": \"System\",\n            \"vmSize\": \"[parameters('nodeSize')]\"\n          }\n        ],\n        \"dnsPrefix\": \"[parameters('clusterName')]\",\n        \"kubernetesVersion\": \"[parameters('kubernetesVersion')]\",\n        \"networkProfile\": {\n          \"networkPlugin\": \"none\"\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Node Pool Template with Azure CLI\nDESCRIPTION: Azure CLI command to deploy the Resource Manager template for updating an AKS node pool. The command uses the az deployment group create command to apply the template to the specified resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create \\\n    --resource-group myResourceGroup \\\n    --template-file aks-agentpools.json\n```\n\n----------------------------------------\n\nTITLE: Changing Node Pool Mode from System to User with Azure CLI\nDESCRIPTION: This Azure CLI command changes an existing node pool's mode from System to User. This operation requires that another system node pool already exists in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_9\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks nodepool update --resource-group myResourceGroup --cluster-name myAKSCluster --name mynodepool --mode user\n```\n\n----------------------------------------\n\nTITLE: Updating SSH Public Key on Existing AKS Cluster\nDESCRIPTION: Update the SSH public key on an existing AKS cluster using the az aks update command. Examples show specifying a new key value and a key file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group MyResourceGroup --ssh-key-value 'ssh-rsa AAAAB3Nza-xxx'\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group MyResourceGroup --ssh-key-value ~/.ssh/id_rsa.pub\n```\n\n----------------------------------------\n\nTITLE: Creating an Unprivileged Pod in Kubernetes\nDESCRIPTION: This command creates an unprivileged pod in the Kubernetes cluster using a non-admin user account to test the pod security policy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_13\n\nLANGUAGE: console\nCODE:\n```\nkubectl-nonadminuser apply -f nginx-unprivileged.yaml\n```\n\n----------------------------------------\n\nTITLE: Update AKS Cluster from ManagedNATGateway to LoadBalancer\nDESCRIPTION: Changes cluster outbound type from managedNATGateway to loadBalancer. Allows configuration of outbound IPs through count, specific IPs, or IP prefixes. Warning: Do not reuse previously used IP addresses.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/egress-outboundtype.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group <resourceGroup> --name <clusterName> \\\n--outbound-type loadBalancer \\\n<--load-balancer-managed-outbound-ip-count <number of managed outbound ip>| --load-balancer-outbound-ips <outbound ip ids> | --load-balancer-outbound-ip-prefixes <outbound ip prefix ids> >\n```\n\n----------------------------------------\n\nTITLE: Showing Specific AKS Node IP using Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the private IP address of a specific node in an AKS node pool. It uses the 'az aks machine show' command with the '--machine-name' flag to target a particular node and display its internal IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz aks machine show --cluster-name myAKScluster --nodepool-name nodepool1 -g myResourceGroup --machine-name aks-nodepool1-33555069-vmss000000 -o table\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Private DNS A Records using Azure CLI\nDESCRIPTION: Azure CLI command to list A records in a private DNS zone. Takes resource group name and zone name as parameters to display DNS records.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz network private-dns record-set a list \\\n    --resource-group test-rg \\\n    --zone-name private.contoso.com\n```\n\n----------------------------------------\n\nTITLE: Adding Node Pool from Snapshot in Azure CLI\nDESCRIPTION: This command adds a new node pool to an existing AKS cluster based on a previously created snapshot. It uses the snapshot's configuration to ensure consistency.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-pool-snapshot.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --name np2 --cluster-name myAKSCluster --resource-group myResourceGroup --snapshot-id $SNAPSHOT_ID\n```\n\n----------------------------------------\n\nTITLE: Setting HPC Cache Service Principal Variables\nDESCRIPTION: Commands to set environment variables for the HPC Cache service principal name and Object ID, which are needed to grant permissions to access the storage account.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\nHPC_CACHE_USER=\"StorageCache Resource Provider\"\nHPC_CACHE_ID=$(az ad sp list --display-name \"${HPC_CACHE_USER}\" --query \"[].objectId\" -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Automatic Cluster\nDESCRIPTION: Command to create an AKS Automatic cluster with custom virtual network configuration\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create\n```\n\n----------------------------------------\n\nTITLE: Assigning Key Vault Crypto Officer role in Azure CLI\nDESCRIPTION: This command assigns the Key Vault Crypto Officer role to the current user for the specified key vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_4\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz role assignment create --role \"Key Vault Crypto Officer\" --assignee-object-id $(az ad signed-in-user show --query id -o tsv) --assignee-principal-type \"User\" --scope $KEYVAULT_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: KEDA Version YAML Output\nDESCRIPTION: Example YAML output showing the KEDA version in the CustomResourceDefinition metadata.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-cli.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.9.0\n    meta.helm.sh/release-name: aks-managed-keda\n    meta.helm.sh/release-namespace: kube-system\n  creationTimestamp: \"2023-08-09T15:58:56Z\"\n  generation: 1\n  labels:\n    app.kubernetes.io/component: operator\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/name: keda-operator\n    app.kubernetes.io/part-of: keda-operator\n    app.kubernetes.io/version: 2.10.1\n    helm.toolkit.fluxcd.io/name: keda-adapter-helmrelease\n    helm.toolkit.fluxcd.io/namespace: 64d3b6fd3365790001260647\n  name: scaledobjects.keda.sh\n  resourceVersion: \"1421\"\n  uid: 29109c8c-638a-4bf5-ac1b-c28ad9aa11fa\nspec:\n  conversion:\n    strategy: None\n  group: keda.sh\n  names:\n    kind: ScaledObject\n    listKind: ScaledObjectList\n    plural: scaledobjects\n    shortNames:\n    - so\n    singular: scaledobject\n  scope: Namespaced\n  # Redacted due to length\n```\n\n----------------------------------------\n\nTITLE: Adding a Windows Node Pool with Default OS SKU to AKS Cluster\nDESCRIPTION: This command adds a Windows node pool named 'npwin' to the existing AKS cluster. It uses the default OS SKU based on the Kubernetes version of the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --os-type Windows \\\n    --name npwin \\\n    --node-count 1\n```\n\n----------------------------------------\n\nTITLE: Assigning Fleet Manager RBAC Reader Role at Namespace Scope\nDESCRIPTION: Creates a role assignment for the Azure Kubernetes Fleet Manager RBAC Reader role scoped to a specific Kubernetes namespace (default). Demonstrates namespace-level access control configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rbac.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nIDENTITY=$(az ad signed-in-user show --output tsv --query id)\nFLEET_ID=$(az fleet show --resource-group $GROUP --name $FLEET --output tsv --query id)\n\naz role assignment create --role 'Azure Kubernetes Fleet Manager RBAC Reader' --assignee \"$IDENTITY\" --scope \"$FLEET_ID/namespaces/default\"\n```\n\n----------------------------------------\n\nTITLE: Checking Available Generation 2 VM Sizes in Azure CLI\nDESCRIPTION: Command to list available Generation 2 VM sizes in a specific location using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/generation-2-vm.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm list-skus --location <location> --size <vm-size> --output table\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume Claim for Airflow Logs\nDESCRIPTION: Creates a persistent volume claim to request storage for Airflow logs using the previously defined persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-airflow-logs\n  namespace: ${AKS_AIRFLOW_NAMESPACE}\nspec:\n  storageClassName: azureblob-fuse-premium\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 5Gi\n  volumeName: pv-airflow-logs\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Store Application using kubectl\nDESCRIPTION: This command applies the Kubernetes manifest file to deploy the AKS Store application on the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f aks-store-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster with User-Managed Identity\nDESCRIPTION: This Azure CLI command updates an existing AKS cluster by assigning a user-managed identity to it. It specifies the resource group, cluster name, location, VM size, node count, enables managed identity, and assigns the identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group $RG_NAME \\\n    --name $CLUSTER_NAME \\\n    --location $LOCATION \\\n    --node-vm-size $VM_SKU \\\n    --node-count $NODE_COUNT \\\n    --enable-managed-identity \\\n    --assign-identity $IDENTITY_ID         \n```\n\n----------------------------------------\n\nTITLE: Updating Azure Key Vault Secrets with Combined Certificates\nDESCRIPTION: Commands to update Azure Key Vault secrets with concatenated old and new root certificates, including root cert, CA cert, CA key, and certificate chain.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault secret set --vault-name $AKV_NAME --name root-cert --file <path-to-folder/root-cert.pem>\naz keyvault secret set --vault-name $AKV_NAME --name ca-cert --file <path-to-folder/ca-cert.pem>\naz keyvault secret set --vault-name $AKV_NAME --name ca-key --file <path-to-folder/ca-key.pem>\naz keyvault secret set --vault-name $AKV_NAME --name cert-chain --file <path/cert-chain.pem>\n```\n\n----------------------------------------\n\nTITLE: Checking Available Node Image Upgrades in AKS\nDESCRIPTION: Check for available node image upgrades and current version using Azure CLI. Returns upgrade information for a specific node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-image-upgrade.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool get-upgrades \\\n    --nodepool-name <node-pool-name> \\\n    --cluster-name <cluster-name> \\\n    --resource-group <resource-group>\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool show \\\n    --resource-group <resource-group> \\\n    --cluster-name <cluster-name> \\\n    --name <node-pool-name> \\\n    --query nodeImageVersion\n```\n\n----------------------------------------\n\nTITLE: Viewing Pods Scheduled on Virtual Node\nDESCRIPTION: This kubectl command lists the pods in the cluster, showing their assigned nodes including the virtual node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_6\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl get pods -o wide\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Cluster Upgrade Using PowerShell\nDESCRIPTION: Command to verify the successful upgrade of an AKS cluster using PowerShell, formatting the output as a table to display key cluster properties.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_6\n\nLANGUAGE: azurepowershell-interactive\nCODE:\n```\nGet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster |\n Format-Table -Property Name, Location, KubernetesVersion, ProvisioningState, Fqdn\n```\n\n----------------------------------------\n\nTITLE: Verifying TLS Secret Creation in Kubernetes\nDESCRIPTION: This kubectl command checks if the TLS secret was successfully created in the specified namespace. It should show a Kubernetes TLS secret created by the Secrets Store CSI Driver based on the certificate from Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secret -n $NAMESPACE\n\nNAME                                             TYPE                                  DATA   AGE\ningress-tls-csi                                  kubernetes.io/tls                     2      1m34s\n```\n\n----------------------------------------\n\nTITLE: Assigning Network Contributor Role to Managed Identity\nDESCRIPTION: Grants the Network Contributor role to the AKS cluster's managed identity on the virtual network, allowing the cluster to manage network resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create --assignee <control-plane-identity-principal-id> --scope $VNET_ID --role \"Network Contributor\"\n\n# Example command\naz role assignment create --assignee 22222222-2222-2222-2222-222222222222 --scope \"/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myAKSVnet\" --role \"Network Contributor\"\n```\n\n----------------------------------------\n\nTITLE: Store Certificates in Key Vault\nDESCRIPTION: Commands to store the generated certificates as secrets in Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault secret set --vault-name $AKV_NAME --name test-productpage-bookinfo-key --file bookinfo_certs/productpage.bookinfo.com.key\naz keyvault secret set --vault-name $AKV_NAME --name test-productpage-bookinfo-crt --file bookinfo_certs/productpage.bookinfo.com.crt\naz keyvault secret set --vault-name $AKV_NAME --name test-bookinfo-crt --file bookinfo_certs/bookinfo.com.crt\n```\n\n----------------------------------------\n\nTITLE: Testing Key Vault Connection in AKS\nDESCRIPTION: Commands to clone sample repository, deploy manifests, and verify the Key Vault connection by accessing secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/service-connector/csi-secrets-store-service-connector.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Azure-Samples/serviceconnector-aks-samples.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd serviceconnector-aks-samples/azure-keyvault-csi-provider\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f secret_provider_class.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pod.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod/sc-demo-keyvault-csi\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec sc-demo-keyvault-csi -- ls /mnt/secrets-store/\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec sc-demo-keyvault-csi -- cat /mnt/secrets-store/ExampleSecret\n```\n\n----------------------------------------\n\nTITLE: Configuring Workload Identity Service Account\nDESCRIPTION: Creates a Kubernetes service account with Azure workload identity annotations for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport TENANT_ID=$(az account show --query tenantId -o tsv)\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: \"${MY_IDENTITY_NAME_CLIENT_ID}\"\n    azure.workload.identity/tenant-id: \"${TENANT_ID}\"\n  name: \"${SERVICE_ACCOUNT_NAME}\"\n  namespace: \"${AKS_MONGODB_NAMESPACE}\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with SSH Keys\nDESCRIPTION: Deploy an AKS cluster with an SSH public key using the az aks create command. Examples show using default generated keys and specifying a key file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --name myAKSCluster --resource-group MyResourceGroup --generate-ssh-key\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --name myAKSCluster --resource-group MyResourceGroup --ssh-key-value ~/.ssh/id_rsa.pub\n```\n\n----------------------------------------\n\nTITLE: Importing Percona Images to Azure Container Registry\nDESCRIPTION: Azure CLI commands to import Percona MongoDB images from Docker Hub to Azure Container Registry, including server, PMM client, backup, and operator images\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr import \\\n    --name $MY_ACR_REGISTRY \\\n    --source docker.io/percona/percona-server-mongodb:7.0.8-5  \\\n    --image percona-server-mongodb:7.0.8-5\n\naz acr import \\\n    --name $MY_ACR_REGISTRY \\\n    --source docker.io/percona/pmm-client:2.41.2  \\\n    --image pmm-client:2.41.2\n\naz acr import \\\n    --name $MY_ACR_REGISTRY \\\n    --source docker.io/percona/percona-backup-mongodb:2.4.1  \\\n    --image percona-backup-mongodb:2.4.1\n\naz acr import \\\n    --name $MY_ACR_REGISTRY \\\n    --source docker.io/percona/percona-server-mongodb-operator:1.16.1  \\\n    --image percona-server-mongodb-operator:1.16.1\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials\nDESCRIPTION: Retrieves access credentials for the Kubernetes cluster to allow kubectl commands to be run against the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-trusted-launch.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Viewing Service Details in Azure CLI\nDESCRIPTION: Series of Azure CLI commands to deploy, view and manage the internal load balancer and Private Link Service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/internal-lb.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f internal-lb-pls.yaml\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get service internal-app\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME           TYPE           CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE\ninternal-app   LoadBalancer   10.125.17.53  10.125.0.66   80:30430/TCP   64m\n```\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a variable for the node resource group\n\nAKS_MC_RG=$(az aks show -g myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv)\n\n# View the details of the Private Link Service object\n\naz network private-link-service list -g $AKS_MC_RG --query \"[].{Name:name,Alias:alias}\" -o table\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod to Run on Secure Boot-Enabled Nodes\nDESCRIPTION: Adds a node selector to a pod manifest that ensures the pod will only be scheduled on nodes with Secure Boot enabled, providing protection against rootkits and boot kits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-trusted-launch.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  nodeSelector:\n        kubernetes.azure.com/secure-boot: true\n```\n\n----------------------------------------\n\nTITLE: Creating Round-Robin DNS Records for HPC Cache\nDESCRIPTION: Creates DNS A records for the client-facing IP addresses of the HPC Cache in the private DNS zone, enabling round-robin load balancing across the three mount addresses.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_20\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz network private-dns record-set a add-record -g $RESOURCE_GROUP -z $PRIVATE_DNS_ZONE -n $DNS_NAME -a $HPC_MOUNTS0\n\naz network private-dns record-set a add-record -g $RESOURCE_GROUP -z $PRIVATE_DNS_ZONE -n $DNS_NAME -a $HPC_MOUNTS1\n\naz network private-dns record-set a add-record -g $RESOURCE_GROUP -z $PRIVATE_DNS_ZONE -n $DNS_NAME -a $HPC_MOUNTS2\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Bus Resources\nDESCRIPTION: Sets up Azure Service Bus namespace and queue with local authentication disabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nSB_NAME=<service-bus-name>\nSB_HOSTNAME=\"${SB_NAME}.servicebus.windows.net\"\n\naz servicebus namespace create \\\n    --name $SB_NAME \\\n    --resource-group $RG_NAME \\\n    --disable-local-auth\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resources for AKS and Key Vault\nDESCRIPTION: Series of Azure CLI commands to create a resource group, AKS cluster, and Key Vault, followed by setting up credentials and secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/service-connector/csi-secrets-store-service-connector.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create \\\n    --name <resource-group-name> \\\n    --location <location>\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group <resource-group-name> \\\n    --name <cluster-name> \\\n    --enable-managed-identity \\\n    --node-count 1\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials \\\n    --resource-group <resource-group-name> \\\n    --name <cluster-name>\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault create \\\n    --resource-group <resource-group-name> \\\n    --name <key-vault-name> \\\n    --location <location>\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault secret set \\\n    --vault-name <key-vault-name> \\\n    --name <secret-name> \\\n    --value <secret-value>\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure CLI\nDESCRIPTION: Commands to create an Azure resource group and an AKS cluster using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/static-ip.md#2025-04-21_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz group create --name myNetworkResourceGroup --location eastus\n\naz aks create --name myAKSCluster --resource-group myNetworkResourceGroup --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Removing AKS Role Assignment using Azure CLI\nDESCRIPTION: Azure CLI command to delete a role assignment for a user or group from an AKS cluster\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-kubeconfig-access.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment delete --assignee $ACCOUNT_ID --scope $AKS_CLUSTER\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry with Azure CLI\nDESCRIPTION: Creates an Azure Container Registry named 'myhelmacr' with Basic SKU using Azure CLI. The registry name must be unique.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr create --resource-group myResourceGroup --name myhelmacr --sku Basic\n```\n\n----------------------------------------\n\nTITLE: Deploying Echoserver with Automatic Host Port Assignment in AKS\nDESCRIPTION: This YAML deployment file demonstrates how to use the 'kubernetes.azure.com/assign-hostports-for-containerports' annotation to automatically assign host ports for container ports 8080 and 8443 in an AKS deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: echoserver-hostport\n  labels:\n    app: echoserver-hostport\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: echoserver-hostport\n  template:\n    metadata:\n      annotations:\n        kubernetes.azure.com/assign-hostports-for-containerports: 8080/tcp,8443/tcp\n      labels:\n        app: echoserver-hostport\n    spec:\n      nodeSelector:\n        kubernetes.io/os: linux\n      containers:\n        - name: echoserver-hostport\n          image: k8s.gcr.io/echoserver:1.10\n          ports:\n            - name: http\n              containerPort: 8080\n              protocol: TCP\n            - name: https\n              containerPort: 8443\n              protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry\nDESCRIPTION: Creates a Premium tier Azure Container Registry for storing container images and exports its ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr create \\\n--name ${MY_ACR_REGISTRY} \\\n--resource-group $MY_RESOURCE_GROUP_NAME \\\n--sku Premium \\\n--location $MY_LOCATION \\\n--admin-enabled true \\\n--output table\nexport MY_ACR_REGISTRY_ID=$(az acr show --name $MY_ACR_REGISTRY --resource-group $MY_RESOURCE_GROUP_NAME --query id --output tsv)\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Cluster Status After Manual Promotion\nDESCRIPTION: Example output showing the PostgreSQL cluster status after manually promoting pod 1 back to primary. The cluster has returned to its original state before the failover test.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_23\n\nLANGUAGE: output\nCODE:\n```\nName                        Current LSN Rep role        Status  Node\n--------------------------- ----------- --------        ------- -----------\npg-primary-cnpg-sryti1qf-1  0/9000060   Primary         OK      aks-postgres-32388626-vmss000000\npg-primary-cnpg-sryti1qf-2  0/9000060   Standby (sync)  OK      aks-postgres-32388626-vmss000001\npg-primary-cnpg-sryti1qf-3  0/9000060   Standby (sync)  OK      aks-postgres-32388626-vmss000002\n```\n\n----------------------------------------\n\nTITLE: Creating Routes in Route Table for Subnets in Azure CLI\nDESCRIPTION: These commands create routes in the route table for the subnets. They define the next hop for traffic to 0.0.0.0/0 as the Azure Firewall and a direct route to the Internet for the Firewall's public IP.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz network route-table route create --resource-group $RG --name $FWROUTE_NAME --route-table-name $FWROUTE_TABLE_NAME --address-prefix 0.0.0.0/0 --next-hop-type VirtualAppliance --next-hop-ip-address $FWPRIVATE_IP\n\naz network route-table route create --resource-group $RG --name $FWROUTE_NAME_INTERNET --route-table-name $FWROUTE_TABLE_NAME --address-prefix $FWPUBLIC_IP/32 --next-hop-type Internet\n```\n\n----------------------------------------\n\nTITLE: Applying Resource Quotas to a Namespace in AKS\nDESCRIPTION: Kubectl command to apply the resource quota defined in a YAML file to a specific namespace called 'dev-apps'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-scheduler.md#2025-04-21_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f dev-app-team-quotas.yaml --namespace dev-apps\n```\n\n----------------------------------------\n\nTITLE: Creating Cluster with Internet Routing Preference\nDESCRIPTION: Creates an AKS cluster with node public IPs configured for internet routing preference\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name <aksClusterName> \\\n    --location <region> \\\n    --resource-group <resourceGroup> \\\n    --enable-node-public-ip \\\n    --node-public-ip-tags RoutingPreference=Internet \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Resource Configurations\nDESCRIPTION: Collection of kubectl commands for applying YAML configurations, checking resource status, and verifying volume mounting within pods. Used throughout the guide for various deployment steps.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pv-nfs.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pv pv-nfs\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pvc-nfs.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pvc pvc-nfs\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nginx-nfs.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod nginx-nfs\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it nginx-nfs -- sh\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secret\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n kube-system | grep csi-smb\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pv-smb.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pv anf-pv-smb\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Health Probe for HTTPS Port in AKS Service YAML\nDESCRIPTION: This YAML manifest shows how to set up a custom health probe for the HTTPS port in an AKS service. It uses annotations to specify an HTTP readiness check at port 10256 on the /healthz endpoint of kube-proxy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: istio\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n    service.beta.kubernetes.io/port_443_health-probe_protocol: \"http\"\n    service.beta.kubernetes.io/port_443_health-probe_port: \"10256\"\n    service.beta.kubernetes.io/port_443_health-probe_request-path: \"/healthz\"\nspec:\n  ports:\n    - name: https\n      protocol: TCP\n      port: 443\n      targetPort: 8443\n      nodePort: 30104\n      appProtocol: https\n  selector:\n    app: istio-ingressgateway\n    gateway: istio-ingressgateway\n    istio: ingressgateway\n  type: LoadBalancer\n  sessionAffinity: None\n  externalTrafficPolicy: Local\n  ipFamilies:\n    - IPv4\n  ipFamilyPolicy: SingleStack\n  allocateLoadBalancerNodePorts: true\n  internalTrafficPolicy: Cluster\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Resources\nDESCRIPTION: Commands to remove the example deployment and delete the WASI node pool from the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-wasi-node-pools.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl delete -f spin.yaml\naz aks nodepool delete --name mywasipool -g myresourcegroup --cluster-name myakscluster\n```\n\n----------------------------------------\n\nTITLE: Creating PVC and Pod with Azure Files CSI Driver\nDESCRIPTION: Commands to create a Persistent Volume Claim and Pod using the Azure Files CSI driver that writes data to an outfile.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azurefile-csi-driver/master/deploy/example/pvc-azurefile-csi.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azurefile-csi-driver/master/deploy/example/nginx-pod-azurefile.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Storage Account\nDESCRIPTION: Command to create a storage account that will be used with the HPC Cache, specifying the location and performance tier.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz storage account create \\\n  --name $STORAGE_ACCOUNT_NAME \\\n  --resource-group $RESOURCE_GROUP \\\n  --location eastus \\\n  --sku Standard_LRS\n```\n\n----------------------------------------\n\nTITLE: Creating Private Azure Key Vault\nDESCRIPTION: This command creates a new private Azure Key Vault with network access disabled, which is required for private KMS integration with AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault create --name MyKeyVault --resource-group MyResourceGroup --public-network-access Disabled\n```\n\n----------------------------------------\n\nTITLE: Updating Node Pool Undrainable Behavior\nDESCRIPTION: Azure CLI command to update the node pool's undrainable node behavior to 'Cordon' with a specified max surge value.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update --cluster-name $CLUSTER_NAME --name $NODE_POOL_NAME --resource-group $RESOURCE_GROUP --max-surge 1 --undrainable-node-behavior Cordon\n```\n\n----------------------------------------\n\nTITLE: Assigning Storage Queue Data Contributor Role in Azure\nDESCRIPTION: Azure CLI commands to assign the Storage Queue Data Contributor role to a managed identity. This grants the necessary permissions to read, write, and delete messages in Azure Storage Queue.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nprincipalId=$(echo $managedIdentity | jq -r `.principalId`)\n\naz role assignment create \\\n    --assignee-object-id $principalId \\\n    --assignee-principal-type ServicePrincipal\n    --role \"Storage Queue Data Contributor\" \\\n    --scope $resourceId\n```\n\n----------------------------------------\n\nTITLE: Creating Dynamic VPA ConfigMap for Metrics Server\nDESCRIPTION: YAML configuration for setting up dynamic resource scaling of Metrics Server based on node count. Defines base CPU of 100m and memory of 100Mi with per-node scaling of 1m CPU and 8Mi memory.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-metrics-server-vertical-pod-autoscaler.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: metrics-server-config\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  NannyConfiguration: |-\n    apiVersion: nannyconfig/v1alpha1\n    kind: NannyConfiguration\n    baseCPU: 100m\n    cpuPerNode: 1m\n    baseMemory: 100Mi\n    memoryPerNode: 8Mi\n```\n\n----------------------------------------\n\nTITLE: Creating Azure NetApp Files SMB Volume using Azure CLI\nDESCRIPTION: This snippet demonstrates how to create an SMB volume on Azure NetApp Files using the Azure CLI. It sets up necessary variables and uses the 'az netappfiles volume create' command to provision the volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nRESOURCE_GROUP=\"myresourcegroup\"\nLOCATION=\"mylocation\"\nANF_ACCOUNT_NAME=\"myaccountname\"\nPOOL_NAME=\"mypool1\"\nSERVICE_LEVEL=\"premium\" # Valid values are standard, premium, and ultra\nUNIQUE_FILE_PATH=\"myfilepath\"\nVOLUME_SIZE_GIB=\"myvolsize\"\nVOLUME_NAME=\"myvolname\"\nVNET_ID=\"vnetId\"\nSUBNET_ID=\"anfSubnetId\"\n\naz netappfiles volume create \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $LOCATION \\\n    --account-name $ANF_ACCOUNT_NAME \\\n    --pool-name $POOL_NAME \\\n    --name \"$VOLUME_NAME\" \\\n    --service-level $SERVICE_LEVEL \\\n    --vnet $VNET_ID \\\n    --subnet $SUBNET_ID \\\n    --usage-threshold $VOLUME_SIZE_GIB \\\n    --file-path $UNIQUE_FILE_PATH \\\n    --protocol-types CIFS\n```\n\n----------------------------------------\n\nTITLE: Installing the HPC Cache Azure CLI Extension\nDESCRIPTION: Commands to install and update the hpc-cache extension for Azure CLI, which is required for managing HPC Cache resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name hpc-cache\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name hpc-cache\n```\n\n----------------------------------------\n\nTITLE: Creating Delegated Subnet for Azure NetApp Files\nDESCRIPTION: Creates a subnet delegated to Azure NetApp Files within the existing virtual network. This subnet must be in the same VNet as the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet create \\\n    --resource-group $RESOURCE_GROUP \\\n    --vnet-name $VNET_NAME \\\n    --name $SUBNET_NAME \\\n    --delegations \"Microsoft.Netapp/volumes\" \\\n    --address-prefixes $ADDRESS_PREFIX\n```\n\n----------------------------------------\n\nTITLE: Creating and Verifying NGINX Pod\nDESCRIPTION: Commands to create the NGINX pod and verify its deployment using kubectl, including checking the mounted volumes and event logs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f anf-nginx-pod.yaml\n```\n\nLANGUAGE: output\nCODE:\n```\npod/nginx-pod created\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod nginx-pod\n```\n\nLANGUAGE: output\nCODE:\n```\n[...]\nVolumes:\n  volume:\n    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)\n    ClaimName:  anf-pvc\n    ReadOnly:   false\n  default-token-k7952:\n    Type:        Secret (a volume populated by a Secret)\n    SecretName:  default-token-k7952\n    Optional:    false\n[...]\nEvents:\n  Type    Reason                  Age   From                     Message\n  ----    ------                  ----  ----                     -------\n  Normal  Scheduled               15s   default-scheduler        Successfully assigned trident/nginx-pod to brameshb-non-root-test\n  Normal  SuccessfulAttachVolume  15s   attachdetach-controller  AttachVolume.Attach succeeded for volume \"pvc-bffa315d-3f44-4770-86eb-c922f567a075\"\n  Normal  Pulled                  12s   kubelet                  Container image \"mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\" already present on machine\n  Normal  Created                 11s   kubelet                  Created container nginx\n  Normal  Started                 10s   kubelet                  Started container nginx\n```\n\n----------------------------------------\n\nTITLE: Dapr Extension Deployment with Bicep\nDESCRIPTION: Bicep template for deploying the Dapr extension to an existing AKS cluster. Includes configuration for system-assigned identity, cluster type, and version specification.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_12\n\nLANGUAGE: bicep\nCODE:\n```\n@description('The name of the Managed Cluster resource.')\nparam clusterName string\n\nresource existingManagedClusters 'Microsoft.ContainerService/managedClusters@2023-05-02-preview' existing = {\n  name: clusterName\n}\n\nresource daprExtension 'Microsoft.KubernetesConfiguration/extensions@2022-11-01' = {\n  name: 'dapr'\n  scope: existingManagedClusters\n  identity: {\n    type: 'SystemAssigned'\n  }\n  properties: {\n    autoUpgradeMinorVersion: true\n    configurationProtectedSettings: {}\n    configurationSettings: {\n      'global.clusterType': 'managedclusters'\n    }\n    extensionType: 'microsoft.dapr'\n    releaseTrain: 'stable'\n    scope: {\n      cluster: {\n        releaseNamespace: 'dapr-system'\n      }\n    }\n    version: '1.11.2'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Upgrading AKS Cluster with Azure PowerShell\nDESCRIPTION: Upgrades an existing AKS cluster to a specified Kubernetes version using the Set-AzAksCluster cmdlet. Note that you can only upgrade one minor version at a time, such as from 1.14.x to 1.15.x.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: azurepowershell\nCODE:\n```\nSet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -KubernetesVersion <KUBERNETES_VERSION>\n```\n\n----------------------------------------\n\nTITLE: Assigning Roles to Default Group\nDESCRIPTION: Assigns three roles to the default group: Azure Kubernetes Service RBAC Reader, Reader, and Azure Kubernetes Service Cluster User Role. These roles provide read-only access and ability to get kubeconfig context.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create \\\n    --role \"Azure Kubernetes Service RBAC Reader\" \\\n    --assignee $DEFAULT_ID \\\n    --scope $AKS_ID\n\naz role assignment create \\\n    --role \"Reader\" \\\n    --assignee $DEFAULT_ID \\\n    --scope $RG_ID\n\naz role assignment create \\\n    --role \"Azure Kubernetes Service Cluster User Role\" \\\n    --assignee $DEFAULT_ID \\\n    --scope $AKS_ID\n```\n\n----------------------------------------\n\nTITLE: Verifying HTTPS Access\nDESCRIPTION: Curl command to verify HTTPS access to the productpage service using custom certificates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s -HHost:productpage.bookinfo.com --resolve \"productpage.bookinfo.com:$SECURE_INGRESS_PORT_EXTERNAL:$INGRESS_HOST_EXTERNAL\" --cacert bookinfo_certs/bookinfo.com.crt \"https://productpage.bookinfo.com:$SECURE_INGRESS_PORT_EXTERNAL/productpage\" | grep -o \"<title>.*</title>\"\n```\n\nLANGUAGE: html\nCODE:\n```\n<title>Simple Bookstore App</title>\n```\n\n----------------------------------------\n\nTITLE: Creating API Server VNet Integration AKS Cluster\nDESCRIPTION: Azure CLI command to create a network isolated AKS cluster with API Server VNet Integration enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --kubernetes-version 1.30.3 --bootstrap-artifact-source Cache --outbound-type none --network-plugin azure --enable-private-cluster --enable-apiserver-vnet-integration\n```\n\n----------------------------------------\n\nTITLE: Monitoring Pods for VPA Changes\nDESCRIPTION: Command to watch pods with the app=hamster label in real-time, which helps to observe when pods are restarted with updated resource allocations by VPA.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get --watch pods -l app=hamster\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Service Account with Workload Identity Annotations\nDESCRIPTION: Creates a Kubernetes service account and annotates it with the client ID of the managed identity to establish the link for workload identity federation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: ${USER_ASSIGNED_CLIENT_ID}\n  name: ${SERVICE_ACCOUNT_NAME}\n  namespace: ${SERVICE_ACCOUNT_NAMESPACE}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Accessing and Verifying AKS Cluster Credentials\nDESCRIPTION: Commands to get access credentials for the Kubernetes cluster and list all pods across all namespaces to verify deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Deploying and Accessing Wasm/WASI Workload\nDESCRIPTION: kubectl commands to deploy the Wasm/WASI workload, get service information, and access the deployed application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-wasi-node-pools.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f spin.yaml\nkubectl get svc\ncurl http://EXTERNAL-IP/hello\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for SMB Credentials\nDESCRIPTION: This snippet shows how to create a Kubernetes secret containing the credentials needed to access the Active Directory server for SMB authentication. It uses the 'kubectl create secret' command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic smbcreds --from-literal=username=USERNAME --from-literal=password=\"PASSWORD\" --from-literal=domain='DOMAIN_NAME'\n\nkubectl get secret\n```\n\n----------------------------------------\n\nTITLE: Verifying Strimzi Operator Deployment\nDESCRIPTION: Checks the status of the Strimzi Cluster Operator pods to ensure successful deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n strimzi-operator\n```\n\n----------------------------------------\n\nTITLE: Viewing Real-Time Metrics for AKS Pod Resources\nDESCRIPTION: Instructions for accessing live performance metrics for Pod resources in AKS clusters through the Container Insights interface. This allows users to monitor resource usage in real time.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the [Azure portal](https://portal.azure.com/), navigate to your AKS cluster.\n1. Under **Monitoring**, select **Insights**.\n1. Select the *Nodes* or *Controllers* tab, and then select the *Pod* object you want to view metrics for.\n1. On the resource **Overview** page, select **Live Metrics**.\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster with Pod-Managed Identity\nDESCRIPTION: Updates an existing AKS cluster with Kubenet network plugin to include pod-managed identity. This allows you to add pod-managed identity capabilities to clusters that were created without it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group $MY_RESOURCE_GROUP --name $MY_CLUSTER --enable-pod-identity --enable-pod-identity-with-kubenet\n```\n\n----------------------------------------\n\nTITLE: Configuring Mutual TLS with Azure Key Vault Integration\nDESCRIPTION: Configuration for mutual TLS authentication using Azure Key Vault integration with SecretProviderClass and deployment manifests.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: productpage-credential-spc\n  namespace: aks-istio-ingress\nspec:\n  provider: azure\n  secretObjects:\n  - secretName: productpage-credential\n    type: opaque\n    data:\n    - objectName: test-productpage-bookinfo-key\n      key: tls.key\n    - objectName: test-productpage-bookinfo-crt\n      key: tls.crt\n    - objectName: test-bookinfo-crt\n      key: ca.crt\n  parameters:\n    useVMManagedIdentity: \"true\"\n    userAssignedIdentityID: $CLIENT_ID \n    keyvaultName: $AKV_NAME\n    cloudName: \"\"\n    objects:  |\n      array:\n        - |\n          objectName: test-productpage-bookinfo-key\n          objectType: secret\n          objectAlias: \"test-productpage-bookinfo-key\"\n        - |\n          objectName: test-productpage-bookinfo-crt\n          objectType: secret\n          objectAlias: \"test-productpage-bookinfo-crt\"\n        - |\n          objectName: test-bookinfo-crt\n          objectType: secret\n          objectAlias: \"test-bookinfo-crt\"\n    tenantId: $TENANT_ID\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Hubble CLI with mTLS Certificates\nDESCRIPTION: Sets up mutual TLS (mTLS) authentication for the Hubble client by extracting certificates from Kubernetes secrets and configuring the Hubble CLI to use them for secure communication with the Hubble Relay server.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n#!/usr/bin/env bash\n\nset -euo pipefail\nset -x\n\n# Directory where certificates will be stored\nCERT_DIR=\"$(pwd)/.certs\"\nmkdir -p \"$CERT_DIR\"\n\ndeclare -A CERT_FILES=(\n  [\"tls.crt\"]=\"tls-client-cert-file\"\n  [\"tls.key\"]=\"tls-client-key-file\"\n  [\"ca.crt\"]=\"tls-ca-cert-files\"\n)\n\nfor FILE in \"${!CERT_FILES[@]}\"; do\n  KEY=\"${CERT_FILES[$FILE]}\"\n  JSONPATH=\"{.data['${FILE//./\\\\.}']}\" \n\n  # Retrieve the secret and decode it\n  kubectl get secret hubble-relay-client-certs -n kube-system \\\n    -o jsonpath=\"${JSONPATH}\" | \\\n    base64 -d > \"$CERT_DIR/$FILE\"\n\n  # Set the appropriate hubble CLI config\n  hubble config set \"$KEY\" \"$CERT_DIR/$FILE\"\ndone\n    \nhubble config set tls true\nhubble config set tls-server-name instance.hubble-relay.cilium.io\n```\n\n----------------------------------------\n\nTITLE: Checking OSM Mutating Webhook Configuration\nDESCRIPTION: Commands to verify the OSM Mutating Webhook configuration and its service details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get MutatingWebhookConfiguration --selector app=osm-injector\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get MutatingWebhookConfiguration aks-osm-webhook-osm -o json | jq '.webhooks[0].clientConfig.service'\n```\n\n----------------------------------------\n\nTITLE: Creating a PVC for Private Azure Files\nDESCRIPTION: Command to apply the PVC configuration for private Azure Files storage, which will dynamically provision an Azure Files share with the specified size through the private endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f private-pvc.yaml\n```\n\n----------------------------------------\n\nTITLE: Getting the AKS Node Resource Group\nDESCRIPTION: Command to retrieve the resource group name for the AKS cluster nodes, which is needed for subsequent resource creation in the correct location.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv\n```\n\n----------------------------------------\n\nTITLE: Clone NVIDIA DCGM Exporter Repository\nDESCRIPTION: Commands to clone the NVIDIA DCGM exporter GitHub repository and navigate to the project directory.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-gpu-metrics.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/NVIDIA/dcgm-exporter.git\ncd dcgm-exporter\n```\n\n----------------------------------------\n\nTITLE: Defining Non-Root NGINX Pod\nDESCRIPTION: YAML manifest for creating an NGINX pod with specific non-root user context.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-unprivileged-nonroot\nspec:\n  containers:\n    - name: nginx-unprivileged\n      image: mcr.microsoft.com/oss/nginx/nginx:1.14.2-alpine\n      securityContext:\n        runAsUser: 2000\n```\n\n----------------------------------------\n\nTITLE: Verifying Connection to AKS Cluster\nDESCRIPTION: Confirms the connection to the AKS cluster by retrieving a list of cluster nodes. This command verifies that kubectl is properly configured to communicate with the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: KEDA Integration Documentation in Markdown\nDESCRIPTION: Markdown documentation that outlines KEDA integrations with AKS, including supported Azure services scalers, monitoring capabilities, and important usage notes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-integrations.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Integrations with Kubernetes Event-driven Autoscaling (KEDA) on Azure Kubernetes Service (AKS)\ndescription: Integrations with Kubernetes Event-driven Autoscaling (KEDA) on Azure Kubernetes Service (AKS).\nauthor: tomkerkhove\nms.topic: concept-article\nms.date: 09/27/2023\nms.author: tomkerkhove\n---\n\n# Integrations with Kubernetes Event-driven Autoscaling (KEDA) on Azure Kubernetes Service (AKS)\n\nThe Kubernetes Event-driven Autoscaling (KEDA) add-on for AKS integrates with features provided by Azure and open-source projects.\n```\n\n----------------------------------------\n\nTITLE: Configuring Server Application Permissions\nDESCRIPTION: Assigns necessary permissions to the server application for directory data access and user profile management.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad app permission add \\\n    --id $serverApplicationId \\\n    --api 00000003-0000-0000-c000-000000000000 \\\n    --api-permissions e1fe6dd8-ba31-4d61-89e7-88639da4683d=Scope 06da0dbc-49e2-44d2-8312-53f166ab848a=Scope 7ab1d382-f21e-4acd-a863-ba3e13f7da61=Role\n```\n\n----------------------------------------\n\nTITLE: Disabling FIPS on Existing AKS Node Pool\nDESCRIPTION: Update an existing node pool to disable FIPS using the az aks nodepool update command with the --disable-fips-image parameter. This triggers a reimage to deploy a non-FIPS compliant OS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name np \\\n    --disable-fips-image\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure CNI Powered by Cilium Using Node Subnet\nDESCRIPTION: Creates an AKS cluster with Azure CNI in node subnet mode using Cilium as the dataplane. This method assigns pod IPs from the same subnet as the nodes, requiring Azure CLI version 2.69.0 or later.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-powered-by-cilium.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name <clusterName> \\\n    --resource-group <resourceGroupName> \\\n    --location <location> \\\n    --network-plugin azure \\\n    --network-dataplane cilium \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Installing aks-preview Azure CLI Extension\nDESCRIPTION: Install the aks-preview extension using the az extension add command, then update to the latest version using az extension update.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-etags.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Checking KAITO GPU Provisioner Deployment\nDESCRIPTION: This command checks if the kaito-gpu-provisioner pod is running successfully in the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kaito-custom-inference-model.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -n kube-system | grep kaito\n```\n\n----------------------------------------\n\nTITLE: Adding a Node Pool with Encrypted Ephemeral OS Disk\nDESCRIPTION: Command to add a new node pool to an existing AKS cluster with ephemeral OS disks encrypted using the same customer-managed key that was used during cluster creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --cluster-name $CLUSTER_NAME --resource-group $RG_NAME --name $NODEPOOL_NAME --node-osdisk-type Ephemeral\n```\n\n----------------------------------------\n\nTITLE: Verifying Certificate Rotation in AKS Cluster\nDESCRIPTION: This kubectl command verifies if the old certificates are no longer valid after rotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/certificate-rotation.md#2025-04-23_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Waiting for MongoDB Cluster Readiness\nDESCRIPTION: A loop script that continually checks the MongoDB cluster status until it reports 'ready'. This ensures all components are fully deployed before proceeding with further steps.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nwhile [ \"$(kubectl get psmdb -n ${AKS_MONGODB_NAMESPACE} -o jsonpath='{.items[0].status.state}')\" != \"ready\" ]; do echo \"waiting for MongoDB cluster to be ready\"; sleep 10; done\n```\n\n----------------------------------------\n\nTITLE: Check Service Principal Credentials using PowerShell\nDESCRIPTION: PowerShell command to check service principal credentials and their start date.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_11\n\nLANGUAGE: azurepowershell-interactive\nCODE:\n```\nGet-AzADAppCredential -ApplicationId <ApplicationId>\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure PowerShell\nDESCRIPTION: Creates a resource group and an AKS cluster with one node using Azure PowerShell. The cluster is named 'MyAKS' and is created in the 'MyResourceGroup' resource group in the East US region.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-event-grid.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzResourceGroup -Name MyResourceGroup -Location eastus\nNew-AzAksCluster -ResourceGroupName MyResourceGroup -Name MyAKS -Location eastus -NodeCount 1 -GenerateSshKey\n```\n\n----------------------------------------\n\nTITLE: Updating kubectl Certificates After Rotation in AKS\nDESCRIPTION: This Azure CLI command updates the certificate used by kubectl after rotation using az aks get-credentials with the --overwrite-existing flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/certificate-rotation.md#2025-04-23_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME --overwrite-existing\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node Zone Information\nDESCRIPTION: Bash command to query and display the region and availability zone information for each node in the AKS cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/aks-zone-resiliency.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe nodes | grep -e \"Name:\" -e \"topology.kubernetes.io/zone\"\n```\n\n----------------------------------------\n\nTITLE: Creating Private DNS Zone for ACR in Azure CLI\nDESCRIPTION: This snippet creates a private DNS zone for the ACR and adds DNS records for the registry REST endpoint and data endpoint. It also links the DNS zone to the virtual network.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz network private-dns zone create --resource-group ${RESOURCE_GROUP} --name \"privatelink.azurecr.io\"\n\naz network private-dns link vnet create --resource-group ${RESOURCE_GROUP} --zone-name \"privatelink.azurecr.io\" --name MyDNSLink --virtual-network ${VNET_NAME} --registration-enabled false\n\naz network private-dns record-set a create --name ${REGISTRY_NAME} --zone-name \"privatelink.azurecr.io\" --resource-group ${RESOURCE_GROUP}\n\naz network private-dns record-set a add-record --record-set-name ${REGISTRY_NAME} --zone-name \"privatelink.azurecr.io\" --resource-group ${RESOURCE_GROUP} --ipv4-address ${REGISTRY_PRIVATE_IP}\n\naz network private-dns record-set a create --name ${REGISTRY_NAME}.${LOCATION}.data --zone-name \"privatelink.azurecr.io\" --resource-group ${RESOURCE_GROUP}\n\naz network private-dns record-set a add-record --record-set-name ${REGISTRY_NAME}.${LOCATION}.data --zone-name \"privatelink.azurecr.io\" --resource-group ${RESOURCE_GROUP} --ipv4-address ${DATA_ENDPOINT_PRIVATE_IP}\n```\n\n----------------------------------------\n\nTITLE: Configuring Client-Server Application Integration\nDESCRIPTION: Sets up OAuth2 communication flow between client and server applications and grants necessary permissions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad sp create --id $clientApplicationId\n\noAuthPermissionId=$(az ad app show --id $serverApplicationId --query \"oauth2Permissions[0].id\" -o tsv)\n\naz ad app permission add --id $clientApplicationId --api $serverApplicationId --api-permissions ${oAuthPermissionId}=Scope\naz ad app permission grant --id $clientApplicationId --api $serverApplicationId\n```\n\n----------------------------------------\n\nTITLE: Displaying Node Pool Details with Azure CLI\nDESCRIPTION: This Azure CLI command shows detailed information about a specific node pool in an AKS cluster, including its mode, taints, size, and other configuration settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_7\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks nodepool show --resource-group myResourceGroup --cluster-name myAKSCluster --name systempool\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Deployment and Service for Windows Container in YAML\nDESCRIPTION: This YAML manifest defines a Kubernetes deployment for an ASP.NET sample application running in a Windows Server container, along with a LoadBalancer service to expose it externally. It includes node selector for Windows nodes and resource limits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sample\n  labels:\n    app: sample\nspec:\n  replicas: 1\n  template:\n    metadata:\n      name: sample\n      labels:\n        app: sample\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": windows\n      containers:\n      - name: sample\n        image: mcr.microsoft.com/dotnet/framework/samples:aspnetapp\n        resources:\n          limits:\n            cpu: 1\n            memory: 800M\n        ports:\n          - containerPort: 80\n  selector:\n    matchLabels:\n      app: sample\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: sample\nspec:\n  type: LoadBalancer\n  ports:\n  - protocol: TCP\n    port: 80\n  selector:\n    app: sample\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group in Azure using Azure CLI\nDESCRIPTION: This command creates a new resource group named 'myResourceGroup' in the 'eastus' location, which will contain all resources related to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Creating NSG Rule for RDP Access using Azure CLI\nDESCRIPTION: This snippet creates a Network Security Group rule to allow RDP access to the AKS cluster Windows Server nodes using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\nCLUSTER_RG=$(az aks show --resource-group myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv)\nNSG_NAME=$(az network nsg list --resource-group $CLUSTER_RG --query [].name -o tsv)\n\naz network nsg rule create \\\n --name tempRDPAccess \\\n --resource-group $CLUSTER_RG \\\n --nsg-name $NSG_NAME \\\n --priority 100 \\\n --destination-port-range 3389 \\\n --protocol Tcp \\\n --description \"Temporary RDP access to Windows nodes\"\n```\n\n----------------------------------------\n\nTITLE: Adding a New Node Pool to a Dedicated Subnet in AKS\nDESCRIPTION: This Azure CLI command adds a new node pool to an existing AKS cluster, assigning the nodes to a new subnet within the same VNet. It's useful for controlling ingress or egress IPs of the host.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nclusterName=\"myOverlayCluster\"\nresourceGroup=\"myResourceGroup\"\nlocation=\"westcentralus\"\nnodepoolName=\"newpool1\"\nsubscriptionId=$(az account show --query id -o tsv)\nvnetName=\"yourVnetName\"\nsubnetName=\"yourNewSubnetName\"\nsubnetResourceId=\"/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Network/virtualNetworks/$vnetName/subnets/$subnetName\"\naz aks nodepool add --resource-group $resourceGroup --cluster-name $clusterName \\\n  --name $nodepoolName --node-count 1 \\\n  --mode system --vnet-subnet-id $subnetResourceId\n```\n\n----------------------------------------\n\nTITLE: Setting Up Web Browser Interactive Authentication for AKS\nDESCRIPTION: Commands to configure authentication using the web browser interactive flow, which opens a browser for user sign-in. This method complies with Conditional Access policies.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l interactive\n```\n\n----------------------------------------\n\nTITLE: Disabling Authorized IP Ranges (Azure CLI)\nDESCRIPTION: This snippet shows how to disable authorized IP ranges for an AKS cluster using the az aks update command with an empty range.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges \"\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Secret Rotation on Existing AKS Cluster\nDESCRIPTION: Updates an existing AKS cluster to enable auto-rotation of secrets using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz aks addon update --resource-group myResourceGroup --name myAKSCluster2 --addon azure-keyvault-secrets-provider --enable-secret-rotation\n```\n\n----------------------------------------\n\nTITLE: Virtual Network and Subnet Configuration\nDESCRIPTION: Creates a virtual network and subnet configured with the NAT gateway for AKS deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/nat-gateway.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet create \\\n    --resource-group myResourceGroup \\\n    --name myVnet \\\n    --location southcentralus \\\n    --address-prefixes 172.16.0.0/20\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nSUBNET_ID=$(az network vnet subnet create \\\n    --resource-group myResourceGroup \\\n    --vnet-name myVnet \\\n    --name myNatCluster \\\n    --address-prefixes 172.16.0.0/22 \\\n    --nat-gateway myNatGateway \\\n    --query id \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Checking MongoDB Replica Set Status\nDESCRIPTION: Command to check the status of the MongoDB replica set and identify the primary member after failover.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nrs.status()\n```\n\n----------------------------------------\n\nTITLE: Applying Backend Configuration using kubectl in Bash\nDESCRIPTION: These commands apply the previously created secret and backend configuration to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f backend-secret.yaml -n trident\nkubectl apply -f backend-anf.yaml -n trident\n```\n\n----------------------------------------\n\nTITLE: Checking Current Kubernetes Version with Azure PowerShell\nDESCRIPTION: This PowerShell command retrieves the current Kubernetes version and location of your AKS cluster using the Get-AzAksCluster cmdlet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster | Select-Object -Property Name, CurrentKubernetesVersion, Location\n```\n\n----------------------------------------\n\nTITLE: Converting PowerShell Service Principal to PSCredential\nDESCRIPTION: Creates a PSCredential object from the service principal's ApplicationId and Secret for use with PowerShell AKS commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_4\n\nLANGUAGE: azurepowershell\nCODE:\n```\n$Cred = New-Object -TypeName System.Management.Automation.PSCredential ($sp.ApplicationId, $sp.Secret)\n```\n\n----------------------------------------\n\nTITLE: SRE Role YAML\nDESCRIPTION: YAML manifest that defines a Role with full access permissions for the SRE namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: sre-user-full-access\n  namespace: sre\nrules:\n- apiGroups: [\"\", \"extensions\", \"apps\"]\n  resources: [\"*\"]\n  verbs: [\"*\"]\n- apiGroups: [\"batch\"]\n  resources:\n  - jobs\n  - cronjobs\n  verbs: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Store Application using Kubectl\nDESCRIPTION: Applies the Kubernetes manifest file from a GitHub repository to deploy the AKS Store application components into the 'aks-store-demo' namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n aks-store-demo -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/aks-store-ingress-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Excluding Namespaces from AKS Deployment Safeguards\nDESCRIPTION: Command to update AKS cluster configuration to exclude specific namespaces from deployment safeguards. Uses the --safeguards-excluded-ns flag with comma-separated namespace list.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deployment-safeguards.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup --safeguards-level Warning --safeguards-version v2.0.0 --safeguards-excluded-ns ns1,ns2\n```\n\n----------------------------------------\n\nTITLE: Checking KEDA Version\nDESCRIPTION: Retrieves the YAML configuration of the KEDA ScaledObject CRD to check the installed KEDA version using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-cli.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get crd/scaledobjects.keda.sh -o yaml \n```\n\n----------------------------------------\n\nTITLE: Updating ACR ID for Network Isolated AKS Cluster in Azure CLI\nDESCRIPTION: This snippet updates the ACR ID used by a network isolated AKS cluster. It specifies the new bootstrap artifact source and container registry resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --bootstrap-artifact-source Cache --bootstrap-container-registry-resource-id <New BYO ACR resource ID>\n```\n\n----------------------------------------\n\nTITLE: Adding Windows Server Node Pool\nDESCRIPTION: Adds a Windows Server node pool to the AKS cluster for running GMSA-enabled workloads.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --os-type Windows \\\n    --name npwin \\\n    --node-count 1\n```\n\n----------------------------------------\n\nTITLE: Checking Installed Istio Revision in Azure CLI\nDESCRIPTION: Command to determine which Istio revision is currently installed on the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}  --query 'serviceMeshProfile.istio.revisions'\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Persistent Volume Claim for NFS\nDESCRIPTION: Defines a YAML configuration for a Kubernetes persistent volume claim that requests storage with ReadWriteMany access mode to be bound to the previously created NFS persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-nfs\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: \"\"\n  resources:\n    requests:\n      storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Deploying MongoDB Locust Client in AKS\nDESCRIPTION: Kubernetes deployment manifest for creating a MongoDB Locust client pod that simulates workload on the MongoDB cluster. The deployment uses external secrets for authentication and runs on the system node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n mongodb -f - <<EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mongodb-locust-client\n  labels:\n    app: mongodb-locust-client\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: mongodb-locust-client\n  template:\n    metadata:\n      labels:\n        app: mongodb-locust-client\n    spec:\n      nodeSelector:\n        kubernetes.azure.com/agentpool: \"systempool\"\n      containers:\n        - name: mongodb-locust-client\n          image: $MY_ACR_REGISTRY.azurecr.io/mongodb-locust-client\n          command: [\"locust\", \"-f\", \"/locustfile.py\", \"--host=http://${MY_CLUSTER_NAME}-mongodb-mongos.mongodb.svc.cluster.local:27017/\"]\n          env:\n            - name: MONGODB_USERNAME\n              valueFrom:\n                secretKeyRef:\n                  name: ${AKS_MONGODB_SECRETS_NAME}\n                  key: MONGODB_DATABASE_ADMIN_USER\n            - name: MONGODB_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: ${AKS_MONGODB_SECRETS_NAME}\n                  key: MONGODB_DATABASE_ADMIN_PASSWORD\nEOF\n```\n\n----------------------------------------\n\nTITLE: Adding Node Pool with Ephemeral OS Disks\nDESCRIPTION: Azure CLI command to add a node pool using Ephemeral OS disks. Requires VM size with cache larger than OS disk size (minimum 128GB cache recommended).\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --name $EPHEMERAL_NODE_POOL_NAME --cluster-name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME -s Standard_DS3_v2 --node-osdisk-type Ephemeral\n```\n\n----------------------------------------\n\nTITLE: Checking ExtensionTypes Feature Registration Status\nDESCRIPTION: Verifies the registration status of the ExtensionTypes feature for the Microsoft.KubernetesConfiguration namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace Microsoft.KubernetesConfiguration --name ExtensionTypes\n```\n\n----------------------------------------\n\nTITLE: Check Service Principal Credentials Expiration using Azure CLI\nDESCRIPTION: Command to check the expiration date of service principal credentials using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad app credential list \\\n    --id <app-id> \\\n    --query \"[].endDateTime\" \\\n    --output tsv\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Pause Pod Configuration\nDESCRIPTION: YAML configuration for implementing overprovisioning using pause pods in Kubernetes. Defines a low-priority deployment that reserves buffer space for high-priority workloads.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-performance-scale.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: scheduling.k8s.io/v1 \nkind: PriorityClass \nmetadata: \n  name: overprovisioning \nvalue: -1 \nglobalDefault: false \ndescription: \"Priority class used by overprovisioning.\" \n--- \napiVersion: apps/v1 \nkind: Deployment \nmetadata: \n  name: overprovisioning \n  namespace: kube-system \nspec: \n  replicas: 1 \n  selector: \n    matchLabels: \n      run: overprovisioning \n  template: \n    metadata: \n      labels: \n        run: overprovisioning \n    spec: \n      priorityClassName: overprovisioning \n      containers: \n      - name: reserve-resources \n        image: your-custome-pause-image \n        resources: \n          requests: \n            cpu: 1 \n            memory: 4Gi\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Image Version in AKSNodeClass YAML\nDESCRIPTION: This YAML snippet shows how to set a specific node image version in an AKSNodeClass definition. It includes the full YAML structure with annotations and labels.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: karpenter.azure.com/v1alpha2\nkind: AKSNodeClass\nmetadata:\n  annotations:\n    kubernetes.io/description: General purpose AKSNodeClass for running Ubuntu2204\n      nodes\n    meta.helm.sh/release-name: aks-managed-karpenter-overlay\n    meta.helm.sh/release-namespace: kube-system\n  creationTimestamp: \"2023-11-16T23:59:06Z\"\n  generation: 1\n  labels:\n    app.kubernetes.io/managed-by: Helm\n    helm.toolkit.fluxcd.io/name: karpenter-overlay-main-adapter-helmrelease\n    helm.toolkit.fluxcd.io/namespace: 6556abcb92c4ce0001202e78\n  name: default\n  resourceVersion: \"1792\"\n  uid: 929a5b07-558f-4649-b78b-eb25e9b97076\nspec:\n  imageFamily: Ubuntu2204\n  imageVersion: 202311.07.0\n  osDiskSizeGB: 128\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Custom Configuration\nDESCRIPTION: This Azure CLI command creates a new AKS cluster using custom kubelet and OS configuration files for Linux node pools. It specifies the cluster name, resource group, and paths to the configuration JSON files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-node-configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --name myAKSCluster --resource-group myResourceGroup --kubelet-config ./linuxkubeletconfig.json --linux-os-config ./linuxosconfig.json\n```\n\n----------------------------------------\n\nTITLE: Checking Available Upgrades for AKS Cluster\nDESCRIPTION: Use the az aks get-upgrades command to check for available upgrades for an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks get-upgrades --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Installing SMB CSI Driver with Helm\nDESCRIPTION: Installs the SMB Container Storage Interface (CSI) driver on the Kubernetes cluster using Helm. Enables Windows support for Windows worker nodes to access SMB volumes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add csi-driver-smb https://raw.githubusercontent.com/kubernetes-csi/csi-driver-smb/master/charts   \nhelm install csi-driver-smb csi-driver-smb/csi-driver-smb --namespace kube-system --version v1.10.0 –-set windows.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Custom Outbound Public IPs\nDESCRIPTION: This Azure CLI command creates a new AKS cluster with custom outbound public IPs. It uses the --load-balancer-outbound-ips parameter to specify the IDs of the custom public IPs during cluster creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --load-balancer-outbound-ips <publicIpId1>,<publicIpId2> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Inspecting Pod Resource Allocations\nDESCRIPTION: Command to describe a pod from the test deployment to view its current CPU and memory resource requests, which will be modified by VPA.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod hamster-<example-pod>\n```\n\n----------------------------------------\n\nTITLE: Registering the StorageCache Resource Provider\nDESCRIPTION: Commands to register the Microsoft.StorageCache resource provider and verify its registration status, which is required before creating HPC Cache resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.StorageCache --wait\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.StorageCache\"\n```\n\n----------------------------------------\n\nTITLE: Creating Application Rule for Azure Firewall in Azure CLI\nDESCRIPTION: This command creates an application rule for the Azure Firewall to allow traffic to AzureKubernetesService FQDN tag, which is required for AKS functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz network firewall application-rule create --resource-group $RG --firewall-name $FWNAME --collection-name 'aksfwar' --name 'fqdn' --source-addresses '*' --protocols 'http=80' 'https=443' --fqdn-tags \"AzureKubernetesService\" --action allow --priority 100\n```\n\n----------------------------------------\n\nTITLE: List Subnet IDs in Azure Virtual Network\nDESCRIPTION: Azure CLI command to retrieve subnet IDs from a virtual network in a specified resource group. This information is needed before creating an AKS cluster with a custom subnet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet list --resource-group myResourceGroup --vnet-name myAKSVnet [--subscription]\n```\n\n----------------------------------------\n\nTITLE: Defining Unprivileged NGINX Pod\nDESCRIPTION: YAML manifest for creating a basic NGINX pod without privilege escalation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-unprivileged\nspec:\n  containers:\n    - name: nginx-unprivileged\n      image: mcr.microsoft.com/oss/nginx/nginx:1.14.2-alpine\n```\n\n----------------------------------------\n\nTITLE: Provisioning Dapr with High Availability Using Bicep\nDESCRIPTION: Bicep template code to configure Dapr extension with high availability enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_3\n\nLANGUAGE: bicep\nCODE:\n```\nproperties: {\n  configurationSettings: {\n    'global.ha.enabled': true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Feature Registration Status\nDESCRIPTION: Command to check the registration status of the WindowsGPUPreview feature flag. Registration must be complete before you can use Windows GPU features.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"WindowsGPUPreview\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Disruption Policy in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the node disruption policy for NAP. It includes options for consolidation policy and timing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n  disruption:\n    # Describes which types of Nodes NAP should consider for consolidation\n    consolidationPolicy: WhenUnderutilized | WhenEmpty\n    # 'WhenUnderutilized', NAP will consider all nodes for consolidation and attempt to remove or replace Nodes when it discovers that the Node is underutilized and could be changed to reduce cost\n\n    #  `WhenEmpty`, NAP will only consider nodes for consolidation that contain no workload pods\n    \n    # The amount of time NAP should wait after discovering a consolidation decision\n    # This value can currently only be set when the consolidationPolicy is 'WhenEmpty'\n    # You can choose to disable consolidation entirely by setting the string value 'Never'\n    consolidateAfter: 30s\n```\n\n----------------------------------------\n\nTITLE: NFS Server Setup Script for Ubuntu VM\nDESCRIPTION: Bash script to install and configure NFS kernel server on Ubuntu VM. Sets up export directories, permissions, and configures NFS exports for AKS subnet access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-nfs-volume.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\n# This script should be executed on Linux Ubuntu Virtual Machine\n\nEXPORT_DIRECTORY=${1:-/export/data}\nDATA_DIRECTORY=${2:-/data}\nAKS_SUBNET=${3:-*}\n\necho \"Updating packages\"\napt-get -y update\n\necho \"Installing NFS kernel server\"\n\napt-get -y install nfs-kernel-server\n\necho \"Making data directory ${DATA_DIRECTORY}\"\nmkdir -p ${DATA_DIRECTORY}\n\necho \"Making new directory to be exported and linked to data directory: ${EXPORT_DIRECTORY}\"\nmkdir -p ${EXPORT_DIRECTORY}\n\necho \"Mount binding ${DATA_DIRECTORY} to ${EXPORT_DIRECTORY}\"\nmount --bind ${DATA_DIRECTORY} ${EXPORT_DIRECTORY}\n\necho \"Giving 777 permissions to ${EXPORT_DIRECTORY} directory\"\nchmod 777 ${EXPORT_DIRECTORY}\n\nparentdir=\"$(dirname \"$EXPORT_DIRECTORY\")\"\necho \"Giving 777 permissions to parent: ${parentdir} directory\"\nchmod 777 $parentdir\n\necho \"Appending bound directories into fstab\"\necho \"${DATA_DIRECTORY}    ${EXPORT_DIRECTORY}   none    bind  0  0\" >> /etc/fstab\n\necho \"Appending localhost and Kubernetes subnet address ${AKS_SUBNET} to exports configuration file\"\necho \"/export        ${AKS_SUBNET}(rw,async,insecure,fsid=0,crossmnt,no_subtree_check)\" >> /etc/exports\necho \"/export        localhost(rw,async,insecure,fsid=0,crossmnt,no_subtree_check)\" >> /etc/exports\n\nnohup service nfs-kernel-server restart\n```\n\n----------------------------------------\n\nTITLE: Changing AKS Node Pool Scale-down Mode to Delete\nDESCRIPTION: This command updates the scale-down mode of an existing node pool from Deallocate to Delete, which will result in the deletion of previously deallocated nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-down-mode.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update --scale-down-mode Delete --name nodepool2 --cluster-name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Configuring Public Load Balancer Services for PostgreSQL\nDESCRIPTION: Creates two LoadBalancer services for read-write and read-only access to the PostgreSQL cluster with IP source restrictions and DNS configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-resource-group: $AKS_PRIMARY_CLUSTER_NODERG_NAME\n    service.beta.kubernetes.io/azure-pip-name: $AKS_PRIMARY_CLUSTER_PUBLICIP_NAME\n    service.beta.kubernetes.io/azure-dns-label-name: $AKS_PRIMARY_CLUSTER_PG_DNSPREFIX\n  name: cnpg-cluster-load-balancer-rw\n  namespace: \"${PG_NAMESPACE}\"\nspec:\n  type: LoadBalancer\n  ports:\n  - protocol: TCP\n    port: 5432\n    targetPort: 5432\n  selector:\n    cnpg.io/instanceRole: primary\n    cnpg.io/podRole: instance\n  loadBalancerSourceRanges:\n  - \"$MY_PUBLIC_CLIENT_IP/32\"\n```\n\n----------------------------------------\n\nTITLE: Re-enabling Local Accounts on AKS Cluster\nDESCRIPTION: This command re-enables local accounts on an AKS cluster where they were previously disabled. It uses the 'az aks update' command with the 'enable-local-accounts' parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-local-accounts-managed-azure-ad.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group <resource-group> --name <cluster-name> --enable-local-accounts\n```\n\n----------------------------------------\n\nTITLE: Creating Test Namespaces for Pod Security Policy Testing\nDESCRIPTION: Creates two namespaces to demonstrate different Pod Security Admission policies. These namespaces will be used to test how pods behave under different security constraints.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-psa.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl create namespace test-restricted\nkubectl create namespace test-privileged\n```\n\n----------------------------------------\n\nTITLE: Deploying Windows-based Stateful Set with Azure Disk CSI Driver\nDESCRIPTION: This bash command deploys a Windows-based stateful set example that uses Azure Disk CSI driver. The stateful set saves timestamps into a file named data.txt.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/deploy/example/windows/statefulset.yaml\n```\n\n----------------------------------------\n\nTITLE: Removing All Node Taints\nDESCRIPTION: Updates a node pool to remove all taints using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool update \\\n--cluster-name $CLUSTER_NAME \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name $NODE_POOL_NAME \\\n--node-taints \"\"\n```\n\n----------------------------------------\n\nTITLE: Updating Performance Parameters for Premium SSD v2 Disk\nDESCRIPTION: This Azure CLI command updates the IOPS and throughput limits for an existing Premium SSD v2 disk. It sets the disk to 5000 IOPS and 200 Mbps throughput. The command must target the resource group where AKS nodes are deployed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-premium-v2-disks.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz disk update --subscription subscriptionName --resource-group myResourceGroup --name diskName --disk-iops-read-write=5000 --disk-mbps-read-write=200\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure Key Vault Secrets Provider Add-on for AKS\nDESCRIPTION: This command enables the Azure Key Vault provider for Secret Store CSI Driver on an AKS cluster, allowing the cluster to access secrets stored in Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz aks enable-addons --addons azure-keyvault-secrets-provider --resource-group $RESOURCE_GROUP --name $CLUSTER\n```\n\n----------------------------------------\n\nTITLE: Applying the Deployment with kubectl\nDESCRIPTION: Command to deploy the application defined in the YAML file to the AKS cluster, which will schedule it on the virtual node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f virtual-node.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking persistent volume claim details\nDESCRIPTION: Command to verify the capacity of the persistent volume claim has been successfully updated.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pvc pvc-azuredisk\n```\n\n----------------------------------------\n\nTITLE: Private Azure Files Storage Class Creation Output\nDESCRIPTION: Output message confirming the successful creation of the private-azurefile-csi storage class in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_11\n\nLANGUAGE: output\nCODE:\n```\nstorageclass.storage.k8s.io/private-azurefile-csi created\n```\n\n----------------------------------------\n\nTITLE: Registering and Updating aks-preview Extension in Azure CLI\nDESCRIPTION: Commands to register and update the aks-preview extension in Azure CLI, which is required for using preview features like skipping GPU driver installation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\n# Register the aks-preview extension\naz extension add --name aks-preview\n\n# Update the aks-preview extension\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group in Azure\nDESCRIPTION: Creates a new resource group in Azure using Azure CLI. Requires location and resource group name parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nLOCATION=<azure-region>\nRG_NAME=<resource-group-name>\n\naz group create --name $RG_NAME --location $LOCATION\n```\n\n----------------------------------------\n\nTITLE: Viewing Kubernetes Cluster Configuration\nDESCRIPTION: Example output of kubectl config view command showing cluster configuration details including API server endpoint and authentication data\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-kubeconfig-access.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: DATA+OMITTED\n    server: https://myaksclust-myresourcegroup-19da35-4839be06.hcp.eastus.azmk8s.io:443\n  name: myAKSCluster\ncontexts:\n- context:\n    cluster: myAKSCluster\n    user: clusterAdmin_myResourceGroup_myAKSCluster\n  name: myAKSCluster-admin\ncurrent-context: myAKSCluster-admin\nkind: Config\npreferences: {}\nusers:\n- name: clusterAdmin_myResourceGroup_myAKSCluster\n  user:\n    client-certificate-data: REDACTED\n    client-key-data: REDACTED\n    token: e9f2f819a4496538b02cefff94e61d35\n```\n\n----------------------------------------\n\nTITLE: Creating and Building Spin App\nDESCRIPTION: Commands to create a new Spin application using the http-js template and build it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nspin new -t http-js --accept-defaults hello-spinkube\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd hello-spinkube\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nspin build\n```\n\n----------------------------------------\n\nTITLE: Creating a Privileged Pod YAML Manifest\nDESCRIPTION: This YAML manifest defines a pod with privileged security context, which is expected to be rejected by the Azure Policy initiative that disallows privileged pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-policy.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-privileged\nspec:\n  containers:\n    - name: nginx-privileged\n      image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n      securityContext:\n        privileged: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Container Insights Add-on for IP Subnet Usage Monitoring in AKS\nDESCRIPTION: This Azure CLI command enables the Container Insights monitoring add-on for an existing AKS cluster, which is required for monitoring IP subnet usage when using CNI Pod Subnet networking.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-network-azure-cni-pod-subnet.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks enable-addons --addons monitoring --name <cluster-name> --resource-group <resource-group-name>\n```\n\n----------------------------------------\n\nTITLE: Listing Dapr CRDs with PowerShell\nDESCRIPTION: PowerShell command to list all Dapr-related Custom Resource Definitions in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_14\n\nLANGUAGE: powershell\nCODE:\n```\nkubectl get crds | findstr dapr.io\n```\n\n----------------------------------------\n\nTITLE: AKS Service Permissions Table\nDESCRIPTION: Table listing required permissions for the identity creating and operating the AKS cluster, including compute, network, and operational insights permissions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-identity.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Permission | Reason |\n|---|---|\n| `Microsoft.Compute/diskEncryptionSets/read` | Required to read disk encryption set ID. |\n| `Microsoft.Compute/proximityPlacementGroups/write` | Required for updating proximity placement groups. |\n| `Microsoft.Network/applicationGateways/read` <br/> `Microsoft.Network/applicationGateways/write` <br/> `Microsoft.Network/virtualNetworks/subnets/join/action` | Required to configure application gateways and join the subnet. |\n| `Microsoft.Network/virtualNetworks/subnets/join/action` | Required to configure the Network Security Group for the subnet when using a custom VNET.|\n| `Microsoft.Network/publicIPAddresses/join/action` <br/> `Microsoft.Network/publicIPPrefixes/join/action` | Required to configure the outbound public IPs on the Standard Load Balancer. |\n| `Microsoft.OperationalInsights/workspaces/sharedkeys/read` <br/> `Microsoft.OperationalInsights/workspaces/read` <br/> `Microsoft.OperationsManagement/solutions/write` <br/> `Microsoft.OperationsManagement/solutions/read` <br/> `Microsoft.ManagedIdentity/userAssignedIdentities/assign/action` | Required to create and update Log Analytics workspaces and Azure monitoring for containers. |\n| `Microsoft.Network/virtualNetworks/joinLoadBalancer/action` | Required to configure the IP-based Load Balancer Backend Pools. |\n```\n\n----------------------------------------\n\nTITLE: Defining Variables for AKS Cluster Deployment in Terraform\nDESCRIPTION: This snippet defines the variables used in the Terraform configuration for deploying the AKS cluster. It includes variables for resource group location, name, node count, DNS prefix, and admin username.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_3\n\nLANGUAGE: HCL\nCODE:\n```\nvariable \"resource_group_location\" {\n  type        = string\n  default     = \"eastus\"\n  description = \"Location of the resource group.\"\n}\n\nvariable \"resource_group_name\" {\n  type        = string\n  default     = \"rg-aks-demo\"\n  description = \"Prefix of the resource group name that's combined with a random ID so name is unique in your Azure subscription.\"\n}\n\nvariable \"node_count\" {\n  type        = number\n  description = \"The initial quantity of nodes for the node pool.\"\n  default     = 3\n}\n\nvariable \"username\" {\n  type        = string\n  default     = \"azureuser\"\n  description = \"The admin username for the new cluster.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Assigning Identity Role\nDESCRIPTION: Assigns Contributor role to the managed identity for host group access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-dedicated-hosts.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create --assignee <id> --role \"Contributor\" --scope <Resource id>\n```\n\n----------------------------------------\n\nTITLE: Setting Azure OpenAI Environment Variables\nDESCRIPTION: Retrieves and sets environment variables for the Azure OpenAI resource name, endpoint, and deployment name, which will be used in the Pod configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\n# Get the Azure OpenAI resource name\nAOAI_NAME=$(az resource list \\\n  --resource-group $RG_NAME \\\n  --resource-type Microsoft.CognitiveServices/accounts \\\n  --query \"[0].name\" -o tsv)\n\n# Get the Azure OpenAI endpoint\nAOAI_ENDPOINT=$(az cognitiveservices account show \\\n  --resource-group $RG_NAME \\\n  --name $AOAI_NAME \\\n  --query properties.endpoint -o tsv)\n\n# Get the Azure OpenAI deployment name\nAOAI_DEPLOYMENT_NAME=$(az cognitiveservices account deployment list  \\\n  --resource-group $RG_NAME \\\n  --name $AOAI_NAME \\\n  --query \"[0].name\" -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Enabling Virtual Nodes Add-on in AKS with Azure CLI\nDESCRIPTION: Command to enable the virtual nodes add-on on an existing AKS cluster. This connects the virtual nodes subnet to the AKS cluster to allow pod scheduling on Azure Container Instances.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks enable-addons \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --addons virtual-node \\\n    --subnet-name myVirtualNodeSubnet\n```\n\n----------------------------------------\n\nTITLE: Listing PostgreSQL Backup Files in Azure Storage\nDESCRIPTION: Command to list all backup files stored in Azure Blob Storage, showing both base backups and WAL (Write-Ahead Log) archives. This confirms that backups are being properly stored in the cloud.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\naz storage blob list \\\n    --account-name $PG_PRIMARY_STORAGE_ACCOUNT_NAME \\\n    --container-name backups \\\n    --query \"[*].name\" \\\n    --only-show-errors\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up AKS and Microsoft Entra Resources\nDESCRIPTION: Script to clean up all resources created during testing, including Kubernetes namespaces, pods, roles, and Microsoft Entra user accounts and groups. Requires admin access to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_21\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n# Get the admin kubeconfig context to delete the necessary cluster resources.\n\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster --admin\n\n# Delete the dev and sre namespaces. This also deletes the pods, Roles, and RoleBindings.\n\nkubectl delete namespace dev\nkubectl delete namespace sre\n\n# Delete the Azure AD user accounts for aksdev and akssre.\n\naz ad user delete --upn-or-object-id $AKSDEV_ID\naz ad user delete --upn-or-object-id $AKSSRE_ID\n\n# Delete the Azure AD groups for appdev and opssre. This also deletes the Azure role assignments.\n\naz ad group delete --group appdev\naz ad group delete --group opssre\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster Auto-Upgrade Channel\nDESCRIPTION: Azure CLI command to update an existing AKS cluster's auto-upgrade channel to stable. This allows automatic upgrades on an already deployed cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/auto-upgrade-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myAKSCluster --auto-upgrade-channel stable\n```\n\n----------------------------------------\n\nTITLE: Managing Azure Blob Storage in AKS\nDESCRIPTION: Commands for creating, verifying, and testing the persistent volume claim and pod deployment in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -f blob-nfs-pvc.yaml\nkubectl get pvc azure-blob-storage\nkubectl apply -f blob-nfs-pv.yaml\nkubectl exec mypod -- touch /mnt/blob/test.txt\nkubectl exec mypod -- ls /mnt/blob\n```\n\n----------------------------------------\n\nTITLE: Kubernetes NetworkPolicy with ipBlock for External Traffic\nDESCRIPTION: Example NetworkPolicy that uses ipBlock to allow egress to all external IPs (0.0.0.0/0), but has a limitation with Azure CNI Powered by Cilium where pod and node IPs will still be blocked.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-powered-by-cilium.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: example-ipblock\nspec:\n  podSelector: {}\n  policyTypes:\n    - Egress\n  egress:\n    - to:\n      - ipBlock:\n          cidr: 0.0.0.0/0 # This will still block pod and node IPs.\n```\n\n----------------------------------------\n\nTITLE: Verifying StatefulSet Creation in AKS\nDESCRIPTION: Command output showing the successful creation of the StatefulSet with Azure File storage in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_19\n\nLANGUAGE: output\nCODE:\n```\nstatefulset.apps/statefulset-azurefile created\n```\n\n----------------------------------------\n\nTITLE: Validating Managed Prometheus and Container insights setup\nDESCRIPTION: These commands check the status of DaemonSets for metrics and logs, and query the addon profiles of the AKS cluster to verify the setup of Managed Prometheus and Container insights.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get ds ama-metrics-node \\\n    --context $AKS_PRIMARY_CLUSTER_NAME \\\n    --namespace=kube-system\n\nkubectl get ds ama-logs \\\n    --context $AKS_PRIMARY_CLUSTER_NAME \\\n    --namespace=kube-system\n\naz aks show \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $AKS_PRIMARY_CLUSTER_NAME \\\n    --query addonProfiles\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: Creates a resource group using random ID for uniqueness and sets the location to eastus.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-deploy-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport RANDOM_ID=\"$(openssl rand -hex 3)\"\nexport RESOURCE_GROUP=\"myResourceGroup$RANDOM_ID\"\nexport LOCATION=\"eastus\"\naz group create --name \"${RESOURCE_GROUP}\" --location \"${LOCATION}\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Host Group\nDESCRIPTION: Creates a new AKS cluster configured to use the dedicated host group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-dedicated-hosts.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group MyResourceGroup \\\n    --name MyManagedCluster \\\n    --location eastus \\\n    --nodepool-name agentpool1 \\\n    --node-count 1 \\\n    --host-group-id <id> \\\n    --node-vm-size Standard_D2s_v3 \\\n    --assign-identity <id> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Firewall NAT Rule\nDESCRIPTION: Creates a NAT rule in Azure Firewall to allow inbound traffic to the service. Includes retrieving service IP and configuring the rule.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nSERVICE_IP=$(kubectl get svc store-front -o jsonpath='{.status.loadBalancer.ingress[*].ip}')\naz network firewall nat-rule create --collection-name exampleset --destination-addresses $FWPUBLIC_IP --destination-ports 80 --firewall-name $FWNAME --name inboundrule --protocols Any --resource-group $RG --source-addresses '*' --translated-port 80 --action Dnat --priority 100 --translated-address $SERVICE_IP\n```\n\n----------------------------------------\n\nTITLE: Updating Windows Node Pool to Generation 2 VM\nDESCRIPTION: Azure CLI command to update an existing Windows node pool to use Generation 2 VM with Windows Server 2022.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/generation-2-vm.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update --resource-group <resource-group-name> --cluster-name <cluster-name> --name <node-pool-name> --node-vm-size <supported-generation-2-vm-size> --os-type Windows --os-sku Windows2022 --aks-custom-headers UseWindowsGen2VM=true\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Manifest and Checking Deployment Status\nDESCRIPTION: Commands for deploying the application using kubectl and verifying the deployment status\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep.md#2025-04-21_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f aks-store-quickstart.yaml\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl get service store-front --watch\n```\n\n----------------------------------------\n\nTITLE: Verifying OSM Add-on Installation with Azure CLI\nDESCRIPTION: Checks if the OSM add-on is installed on the AKS cluster using the az aks show command. The query parameter is used to specifically check the enabled status of the openServiceMesh addon.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster  --query 'addonProfiles.openServiceMesh.enabled'\n```\n\n----------------------------------------\n\nTITLE: HTTP Proxy Configuration Schema for AKS\nDESCRIPTION: JSON schema defining the structure for HTTP proxy configuration including proxy URLs, exclusions, and trusted certificates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/http-proxy.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"httpProxy\": \"string\",\n  \"httpsProxy\": \"string\",\n  \"noProxy\": [\n    \"string\"\n  ],\n  \"trustedCa\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Delegating Resource Access to Service Principal using Azure CLI\nDESCRIPTION: Assigns an Azure RBAC role to the AKS service principal to grant access to other Azure resources like Key Vault secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create \\\n    --assignee <appId> \\\n    --scope \"/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.KeyVault/vaults/<vault-name>\" \\\n    --role \"Key Vault Secrets User\"\n```\n\n----------------------------------------\n\nTITLE: Validating AKS Cluster Upgrade with Azure PowerShell\nDESCRIPTION: Verifies the successful upgrade of an AKS cluster by retrieving and displaying the current Kubernetes version using the Get-AzAksCluster cmdlet with property selection.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_12\n\nLANGUAGE: azurepowershell\nCODE:\n```\nGet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster |\n  Select-Object -Property Name, Location, KubernetesVersion, ProvisioningState\n```\n\n----------------------------------------\n\nTITLE: Registering AKSWindowsAnnualPreview Feature Flag\nDESCRIPTION: Azure CLI commands to register and verify the AKSWindowsAnnualPreview feature flag, which is necessary for using Windows Server Annual Channel.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/windows-annual-channel.md#2025-04-21_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"AKSWindowsAnnualPreview\"\n\naz feature show --namespace \"Microsoft.ContainerService\" --name \"AKSWindowsAnnualPreview\"\n\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Sample Access Log Output for Sleep Pod\nDESCRIPTION: Example of the access log output generated for the 'sleep' pod after sending a request to 'httpbin'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-telemetry.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n[2024-08-13T00:31:47.690Z] \"GET /status/418 HTTP/1.1\" 418 - via_upstream - \"-\" 0 135 12 11 \"-\" \"curl/8.9.1\" \"cdecaca5-5964-48f3-b42d-f474dfa623d5\" \"httpbin:8000\" \"10.244.0.13:8080\" outbound|8000||httpbin.default.svc.cluster.local 10.244.0.12:53336 10.0.112.220:8000 10.244.0.12:42360 - default\n```\n\n----------------------------------------\n\nTITLE: Batch Update PV Reclaim Policies Script\nDESCRIPTION: Bash script to update ReclaimPolicy for multiple PersistentVolumes in a specified namespace from Delete to Retain\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n# Patch the Persistent Volume in case ReclaimPolicy is Delete\nnamespace=$1\ni=1\nfor pvc in $(kubectl get pvc -n $namespace | awk '{ print $1}'); do\n  # Ignore first record as it contains header\n  if [ $i -eq 1 ]; then\n    i=$((i + 1))\n  else\n    pv=\"$(kubectl get pvc $pvc -n $namespace -o jsonpath='{.spec.volumeName}')\"\n    reclaimPolicy=\"$(kubectl get pv $pv -n $namespace -o jsonpath='{.spec.persistentVolumeReclaimPolicy}')\"\n    echo \"Reclaim Policy for Persistent Volume $pv is $reclaimPolicy\"\n    if [[ $reclaimPolicy == \"Delete\" ]]; then\n      echo \"Updating ReclaimPolicy for $pv to Retain\"\n      kubectl patch pv $pv -p '{\"spec\":{\"persistentVolumeReclaimPolicy\":\"Retain\"}}'\n    fi\n  fi\ndone\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Pod with Pod-Managed Identity\nDESCRIPTION: YAML definition for a Kubernetes pod that uses pod-managed identity. The pod is labeled with 'aadpodidbinding' to associate it with the created identity and runs a demo container that tests the identity functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: demo\n  labels:\n    aadpodidbinding: $POD_IDENTITY_NAME\nspec:\n  containers:\n  - name: demo\n    image: mcr.microsoft.com/oss/azure/aad-pod-identity/demo:v1.6.3\n    args:\n      - --subscriptionid=$SUBSCRIPTION_ID\n      - --clientid=$IDENTITY_CLIENT_ID\n      - --resourcegroup=$IDENTITY_RESOURCE_GROUP\n    env:\n      - name: MY_POD_NAME\n        valueFrom:\n          fieldRef:\n            fieldPath: metadata.name\n      - name: MY_POD_NAMESPACE\n        valueFrom:\n          fieldRef:\n            fieldPath: metadata.namespace\n      - name: MY_POD_IP\n        valueFrom:\n          fieldRef:\n            fieldPath: status.podIP\n  nodeSelector:\n    kubernetes.io/os: linux\n```\n\n----------------------------------------\n\nTITLE: Retrieving new Ingress controller IP address using kubectl\nDESCRIPTION: This bash command uses kubectl to retrieve the new IP address of the Ingress controller service in the app-routing-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-migration.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc nginx --namespace app-routing-system -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Maintenance Configuration with Azure CLI\nDESCRIPTION: Azure CLI command to update an existing maintenance schedule with new parameters\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks maintenanceconfiguration update --resource-group myResourceGroup --cluster-name myAKSCluster --name default --weekday Monday --start-hour 2\n```\n\n----------------------------------------\n\nTITLE: Setting up Azure Container Registry\nDESCRIPTION: Commands to create an ACR instance and configure authentication for the Spin CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz acr create --name <acr-name> --resource-group <resource-group-name> --location <location> --sku Basic --admin-enabled true\n```\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nACR_LOGIN_SERVER=$(az acr show -n <acr-name> -g <resource-group-name> --query 'loginServer' -otsv)\nACR_PASSWORD=$(az acr credential show -n <acr-name> -g <resource-group-name> --query 'passwords[0].value' -otsv)\n```\n\nLANGUAGE: bash\nCODE:\n```\nspin registry login -u $ACR_NAME -p $ACR_PASSWORD $ACR_LOGIN_SERVER\n```\n\n----------------------------------------\n\nTITLE: Creating Azure NetApp Files Account\nDESCRIPTION: Creates a new Azure NetApp Files account in the specified resource group and location using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz netappfiles account create \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $LOCATION \\\n    --account-name $ANF_ACCOUNT_NAME\n```\n\n----------------------------------------\n\nTITLE: Registering EnableAPIServerVnetIntegrationPreview Feature Flag\nDESCRIPTION: Register and verify the EnableAPIServerVnetIntegrationPreview feature flag, then refresh the Microsoft.ContainerService resource provider registration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-vnet-integration.md#2025-04-21_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"EnableAPIServerVnetIntegrationPreview\"\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"EnableAPIServerVnetIntegrationPreview\"\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Adding AppArmor Profile Using apparmor_parser\nDESCRIPTION: This command adds the created AppArmor profile to the system using the apparmor_parser command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/secure-container-access.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo apparmor_parser deny-write.profile\n```\n\n----------------------------------------\n\nTITLE: Measuring Incoming UDP Traffic in AKS\nDESCRIPTION: These commands are used to measure incoming UDP traffic and check for packet drops by examining /proc/net/udp and /proc/net/snmp files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/troubleshoot-udp-packet-drops.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat /proc/net/udp\ncat /proc/net/snmp\n```\n\n----------------------------------------\n\nTITLE: Verifying Arm64 Node Pool Configuration\nDESCRIPTION: Queries the node pool configuration to verify it uses an Arm64 VM size by checking if the vmSize is from the Dpsv5, Dplsv5, or Epsv5 series.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-arm64-vms.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool show \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name mynodepool \\\n    --query vmSize\n```\n\n----------------------------------------\n\nTITLE: Creating PodMonitor Resources for Kafka Monitoring on AKS\nDESCRIPTION: This YAML configuration defines multiple PodMonitor resources for monitoring various Strimzi components in a Kafka cluster using Azure Managed Prometheus. It includes monitors for the cluster operator, entity operator, Kafka bridge, and Kafka resources with specific label selectors and relabeling configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\n---\napiVersion: azmonitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  name: azmon-cluster-operator-metrics\n  labels:\n    app: strimzi\nspec:\n  selector:\n    matchLabels:\n      strimzi.io/kind: cluster-operator\n  namespaceSelector:\n    matchNames:\n      - kafka\n  podMetricsEndpoints:\n  - path: /metrics\n    port: http\n---\napiVersion: azmonitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  name: azmon-entity-operator-metrics\n  labels:\n    app: strimzi\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: entity-operator\n  namespaceSelector:\n    matchNames:\n      - kafka\n  podMetricsEndpoints:\n  - path: /metrics\n    port: healthcheck\n---\napiVersion: azmonitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  name: azmon-bridge-metrics\n  labels:\n    app: strimzi\nspec:\n  selector:\n    matchLabels:\n      strimzi.io/kind: KafkaBridge\n  namespaceSelector:\n    matchNames:\n      - kafka\n  podMetricsEndpoints:\n  - path: /metrics\n    port: rest-api\n---\napiVersion: azmonitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  name: azmon-kafka-resources-metrics\n  labels:\n    app: strimzi\nspec:\n  selector:\n    matchExpressions:\n      - key: \"strimzi.io/kind\"\n        operator: In\n        values: [\"Kafka\", \"KafkaConnect\", \"KafkaMirrorMaker\", \"KafkaMirrorMaker2\"]\n  namespaceSelector:\n    matchNames:\n      - kafka\n  podMetricsEndpoints:\n  - path: /metrics\n    port: tcp-prometheus\n    relabelings:\n    - separator: ;\n      regex: __meta_kubernetes_pod_label_(strimzi_io_.+)\n      replacement: $1\n      action: labelmap\n    - sourceLabels: [__meta_kubernetes_namespace]\n      separator: ;\n      regex: (.*)\n      targetLabel: namespace\n      replacement: $1\n      action: replace\n    - sourceLabels: [__meta_kubernetes_pod_name]\n      separator: ;\n      regex: (.*)\n      targetLabel: kubernetes_pod_name\n      replacement: $1\n      action: replace\n    - sourceLabels: [__meta_kubernetes_pod_node_name]\n      separator: ;\n      regex: (.*)\n      targetLabel: node_name\n      replacement: $1\n      action: replace\n    - sourceLabels: [__meta_kubernetes_pod_host_ip]\n      separator: ;\n      regex: (.*)\n      targetLabel: node_ip\n      replacement: $1\n      action: replace\nEOF\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node Labels in AKS\nDESCRIPTION: Kubernetes command to get node labels including the node image version, which shows both base image version and security patch information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/auto-upgrade-node-os-image.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes --show-labels\n```\n\n----------------------------------------\n\nTITLE: Setting Up Service Principal Authentication with Environment Variables\nDESCRIPTION: Commands to authenticate using a service principal with client secret via environment variables. This method works only with managed Microsoft Entra ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l spn\n\nexport AAD_SERVICE_PRINCIPAL_CLIENT_ID=<Service Principal Name (SPN) client ID>\nexport AAD_SERVICE_PRINCIPAL_CLIENT_SECRET=<SPN secret>\n```\n\n----------------------------------------\n\nTITLE: Connecting to PostgreSQL Cluster with CNPG Operator\nDESCRIPTION: Command to connect to the PostgreSQL database using the CloudNativePG (CNPG) operator's built-in psql utility. This establishes a connection to the primary database instance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl cnpg psql $PG_PRIMARY_CLUSTER_NAME --namespace $PG_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Viewing Kubernetes Events with kubectl\nDESCRIPTION: Basic command to list all events in a Kubernetes cluster using kubectl CLI. This provides a comprehensive view of all cluster events for the past hour.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/events.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get events\n```\n\n----------------------------------------\n\nTITLE: Deploying KEDA TriggerAuthentication\nDESCRIPTION: Creates a KEDA TriggerAuthentication resource using the managed identity for Azure Service Bus authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: keda.sh/v1alpha1\nkind: TriggerAuthentication\nmetadata:\n  name: azure-servicebus-auth\n  namespace: default  # this must be same namespace as the ScaledObject/ScaledJob that will use it\nspec:\n  podIdentity:\n    provider:  azure-workload\n    identityId: $MI_CLIENT_ID\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Volume Snapshot Resources\nDESCRIPTION: Commands to create volume snapshot class and volume snapshot from an existing PVC.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azurefile-csi-driver/master/deploy/example/snapshot/volumesnapshotclass-azurefile.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azurefile-csi-driver/master/deploy/example/snapshot/volumesnapshot-azurefile.yaml\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster with New Key for Public Key Vault\nDESCRIPTION: This command updates an existing AKS cluster to use a new key from a public Azure Key Vault for KMS encryption. It specifies the new key ID and sets the network access to public.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group MyResourceGroup  --enable-azure-keyvault-kms --azure-keyvault-kms-key-vault-network-access \"Public\" --azure-keyvault-kms-key-id $NEW_KEY_ID\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry using Azure CLI\nDESCRIPTION: Creates a new Azure Container Registry instance with Basic SKU using Azure CLI. The registry name must be globally unique and use lowercase letters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nMYACR=mycontainerregistry\n\naz acr create --name $MYACR --resource-group myContainerRegistryResourceGroup --sku basic\n```\n\n----------------------------------------\n\nTITLE: Enabling Metrics for OSM Namespace\nDESCRIPTION: This command enables metrics collection for a specific namespace in the OSM mesh, which is required for observability with Azure Monitor.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_9\n\nLANGUAGE: console\nCODE:\n```\nosm metrics enable --namespace myappnamespace\n```\n\n----------------------------------------\n\nTITLE: Resource Overprovisioning Formula\nDESCRIPTION: Mathematical formula for calculating optimal resource overprovisioning buffer in Kubernetes clusters based on buffer percentage and expected traffic growth.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-performance-scale.md#2025-04-21_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n1-buffer/1+traffic\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure Managed Prometheus and Grafana Integration\nDESCRIPTION: Configures the AKS cluster to use Azure Managed Prometheus for metrics collection and Azure Managed Grafana for visualization, enhancing monitoring capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n--name $AKS_CLUSTER_NAME \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--enable-azure-monitor-metrics \\\n--azure-monitor-workspace-resource-id $(az monitor account show --resource-group $RESOURCE_GROUP_NAME --name $PROMETHEUS_WORKSPACE_NAME --query id -o tsv) \\\n--grafana-resource-id $(az grafana show --resource-group $RESOURCE_GROUP_NAME --name $GRAFANA_NAME --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic HostProcess Container Settings in YAML\nDESCRIPTION: Essential security context configuration required to enable HostProcess features in a Windows container deployment. Requires setting hostProcess and hostNetwork to true.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-hpc.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n    spec:\n      ...\n      securityContext:\n         windowsOptions:\n           hostProcess: true\n           ...\n      hostNetwork: true\n      containers:\n      ...\n```\n\n----------------------------------------\n\nTITLE: Verifying Backend Creation using kubectl in Bash\nDESCRIPTION: This command lists the Trident backends to confirm that the Azure NetApp Files backend was successfully created.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get tridentbackends -n trident\n```\n\n----------------------------------------\n\nTITLE: Creating a Managed Identity with Azure CLI\nDESCRIPTION: Creates a user-assigned managed identity in Azure using the Azure CLI. This identity will be used to establish the workload identity federation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create --name \"userAssignedIdentityName\" --resource-group \"resourceGroupName\" --location \"location\" --subscription \"subscriptionID\"\n```\n\n----------------------------------------\n\nTITLE: Listing Storage Classes in Kubernetes\nDESCRIPTION: This command lists all available storage classes in the Kubernetes cluster. It's useful for viewing precreated storage classes, including those configured for Azure Disks.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get sc\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Ingress Resource with YAML\nDESCRIPTION: YAML manifest for creating a Kubernetes Ingress resource that uses the previously created NGINX ingress controller to route traffic to a service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_20\n\nLANGUAGE: yml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: aks-helloworld\n  namespace: hello-web-app-routing\nspec:\n  ingressClassName: <IngressClassName>\n  rules:\n  - host: <Hostname>\n    http:\n      paths:\n      - backend:\n          service:\n            name: aks-helloworld\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n```\n\n----------------------------------------\n\nTITLE: Checking MongoDB Replica Set Status\nDESCRIPTION: MongoDB shell command and example output showing the status of replica set members including primary and secondary nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nrs.status()\n```\n\n----------------------------------------\n\nTITLE: Service Account Configuration YAML\nDESCRIPTION: Sample Kubernetes deployment YAML showing service account and secret configuration for database authentication\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nserviceAccountName: <service-account-name>\ncontainers:\n- name: raw-linux\n   envFrom:\n      - secretRef:\n         name: <secret-name>\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes PVC YAML for HPC Cache\nDESCRIPTION: YAML manifest for creating a Kubernetes persistent volume claim that will bind to the HPC Cache-based persistent volume, requesting 100Gi of storage with ReadWriteMany access mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-nfs\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: \"\"\n  resources:\n    requests:\n      storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenFaaS CLI for Authentication\nDESCRIPTION: Commands to set the OpenFaaS gateway URL as an environment variable and authenticate with the CLI using the previously generated credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENFAAS_URL=http://52.186.64.52:8080\necho -n $PASSWORD | ./faas-cli login -g $OPENFAAS_URL -u admin --password-stdin\n```\n\n----------------------------------------\n\nTITLE: Testing the RESTful API Endpoint with cURL\nDESCRIPTION: Command to test the REST API endpoint of the Quarkus application using cURL and format the JSON output with jq.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl --verbose http://localhost:8080/api | jq .\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS and Creating Namespaces\nDESCRIPTION: Retrieves cluster credentials and creates namespaces for PostgreSQL and CNPG controller services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\naz aks get-credentials \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $AKS_PRIMARY_CLUSTER_NAME \\\n    --output none\n\nkubectl create namespace $PG_NAMESPACE --context $AKS_PRIMARY_CLUSTER_NAME\nkubectl create namespace $PG_SYSTEM_NAMESPACE --context $AKS_PRIMARY_CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Applying Ingress Resource with Kubectl\nDESCRIPTION: Bash command to create the Ingress resource in a specific namespace using kubectl apply with the configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ingress.yaml -n hello-web-app-routing\n```\n\n----------------------------------------\n\nTITLE: Validating Mounted Secrets\nDESCRIPTION: Commands to verify and access the mounted secrets from Key Vault in the pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec busybox-secrets-store-inline-user-msi -- ls /mnt/secrets-store/\nkubectl exec busybox-secrets-store-inline-user-msi -- cat /mnt/secrets-store/ExampleSecret\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with Node Affinity in Kubernetes\nDESCRIPTION: YAML configuration for a pod that uses node affinity to require scheduling on nodes with specific labels, with more flexibility than simple node selectors.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-advanced-scheduler.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: app\nspec:\n  containers:\n  - name: app\n    image: <your-workload>:gpu\n    resources:\n      requests:\n        cpu: 0.5\n        memory: 2Gi\n      limits:\n        cpu: 4.0\n        memory: 16Gi\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: hardware\n            operator: In\n            values:\n            - highmem\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Monitor agent for pod annotation based scraping\nDESCRIPTION: This kubectl command applies a ConfigMap to enable pod annotation based scraping for the Azure Monitor agent, allowing it to collect metrics from the ingress-nginx controller.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-prometheus.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: ama-metrics-settings-configmap\n  namespace: kube-system\ndata:\n  schema-version:\n    #string.used by agent to parse config. supported versions are {v1}. Configs with other schema versions will be rejected by the agent.\n    v1\n  config-version:\n    #string.used by customer to keep track of this config file's version in their source control/repository (max allowed 10 chars, other chars will be truncated)\n    ver1\n  prometheus-collector-settings: |-\n    cluster_alias = \"\"\n  default-scrape-settings-enabled: |-\n    kubelet = true\n    coredns = false\n    cadvisor = true\n    kubeproxy = false\n    apiserver = false\n    kubestate = true\n    nodeexporter = true\n    windowsexporter = false\n    windowskubeproxy = false\n    kappiebasic = true\n    prometheuscollectorhealth = false\n  # Regex for which namespaces to scrape through pod annotation based scraping.\n  # This is none by default. Use '.*' to scrape all namespaces of annotated pods.\n  pod-annotation-based-scraping: |-\n    podannotationnamespaceregex = \".*\"\n  default-targets-metrics-keep-list: |-\n    kubelet = \"\"\n    coredns = \"\"\n    cadvisor = \"\"\n    kubeproxy = \"\"\n    apiserver = \"\"\n    kubestate = \"\"\n    nodeexporter = \"\"\n    windowsexporter = \"\"\n    windowskubeproxy = \"\"\n    podannotations = \"\"\n    kappiebasic = \"\"\n    minimalingestionprofile = true\n  default-targets-scrape-interval-settings: |-\n    kubelet = \"30s\"\n    coredns = \"30s\"\n    cadvisor = \"30s\"\n    kubeproxy = \"30s\"\n    apiserver = \"30s\"\n    kubestate = \"30s\"\n    nodeexporter = \"30s\"\n    windowsexporter = \"30s\"\n    windowskubeproxy = \"30s\"\n    kappiebasic = \"30s\"\n    prometheuscollectorhealth = \"30s\"\n    podannotations = \"30s\"\n  debug-mode: |-\n    enabled = false\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring MemberCluster with Taint\nDESCRIPTION: YAML configuration for adding a taint to a MemberCluster resource with NoSchedule effect\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: MemberCluster\nmetadata:\n  name: kind-cluster-1\nspec:\n  identity:\n    name: fleet-member-agent-cluster-1\n    kind: ServiceAccount\n    namespace: fleet-system\n    apiGroup: \"\"\n  taints:\n    - key: test-key1\n      value: test-value1\n      effect: NoSchedule\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Variables for AKS Deployment\nDESCRIPTION: Sets values for Terraform variables used in the AKS cluster deployment, including subscription ID, location, cluster name, and RBAC settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_10\n\nLANGUAGE: terraform\nCODE:\n```\nazure_subscription_id = \"00000000-0000-0000-0000-000000000000\" # Replace with your actual subscription ID\nlocation              = \"Canada Central\"\nenable_telemetry      = true\nkubernetes_cluster_name = \"kafka-aks-cluster\"\nkubernetes_version    = \"1.30\"\nresource_group_name   = \"rg-kafka-prod\"\nrbac_aad_admin_group_object_ids = [\n\"0000-0000-0000-0000\", \n# Add additional admin group object IDs as needed\n]\n```\n\n----------------------------------------\n\nTITLE: Disabling Authorized IP Ranges (Azure PowerShell)\nDESCRIPTION: This snippet demonstrates how to disable authorized IP ranges for an AKS cluster using the Set-AzAksCluster cmdlet with an empty range.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_8\n\nLANGUAGE: azurepowershell\nCODE:\n```\nSet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -ApiServerAccessAuthorizedIpRange ''\n```\n\n----------------------------------------\n\nTITLE: Creating Federated Identity Credentials\nDESCRIPTION: Sets up federated identity credentials to enable CNPG to use AKS workload identity for storage account authentication. Retrieves OIDC issuer URL and creates credential.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-postgresql-ha.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport AKS_PRIMARY_CLUSTER_OIDC_ISSUER=\"$(az aks show \\\n    --name $AKS_PRIMARY_CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --query \"oidcIssuerProfile.issuerUrl\" \\\n    --output tsv)\"\n\naz identity federated-credential create \\\n    --name $AKS_PRIMARY_CLUSTER_FED_CREDENTIAL_NAME \\\n    --identity-name $AKS_UAMI_CLUSTER_IDENTITY_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --issuer \"${AKS_PRIMARY_CLUSTER_OIDC_ISSUER}\" \\\n    --subject system:serviceaccount:\"${PG_NAMESPACE}\":\"${PG_PRIMARY_CLUSTER_NAME}\" \\\n    --audience api://AzureADTokenExchange\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure Key Vault Resource ID\nDESCRIPTION: Gets the Azure Key Vault resource ID and stores it in a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nKEYVAULTID=$(az keyvault show --name <KeyVaultName> --query \"id\" --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Connecting to MongoDB Shell\nDESCRIPTION: Commands for connecting to the MongoDB pod and accessing the MongoDB shell with authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n $AKS_MONGODB_NAMESPACE exec -it mongodb-locust-client-564695f8f-q6745 -- /bin/bash\nmongosh --host ${MY_CLUSTER_NAME}-mongodb-rs0-0.${MY_CLUSTER_NAME}-mongodb-rs0.mongodb.svc.cluster.local --port 27017 -u ${databaseAdmin} -p ${databaseAdminPassword} --authenticationDatabase admin\n```\n\n----------------------------------------\n\nTITLE: Internal Cluster Access Configuration (ClusterIP)\nDESCRIPTION: YAML configuration for setting up internal Kafka access using ClusterIP, suitable for applications running within the same Kubernetes cluster. Uses port 9092 with TLS enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nlisteners:\n  - name: internal\n    port: 9092\n    type: internal\n    tls: true\n```\n\n----------------------------------------\n\nTITLE: Deploying the NGINX Pod with kubectl\nDESCRIPTION: This command deploys the NGINX pod with the Premium SSD v2 disk mount to the Kubernetes cluster, making the storage available to the application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-premium-v2-disks.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nginx-premium2.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Linux Images for Dapr using Bicep\nDESCRIPTION: Sets Azure Linux (Mariner) based images for Dapr using Bicep configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_19\n\nLANGUAGE: bicep\nCODE:\n```\nproperties: {\n  global.tag: '1.10.0-mariner'\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis component for Dapr with Entra ID Authentication\nDESCRIPTION: YAML configuration that specifies the Redis component settings for Dapr, using Entra ID authentication with workload identity instead of access keys.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- name: useEntraID\n  value: \"true\"\n- name: enableTLS\n  value: true\n```\n\n----------------------------------------\n\nTITLE: Azure Network and Monitoring Resource Configuration\nDESCRIPTION: Terraform configurations for setting up supporting Azure resources including Private DNS Zone, NAT Gateway, Virtual Network, Monitor Workspace, and Grafana dashboard.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_13\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"azurerm_private_dns_zone\" \"this\" {\n  name                = \"privatelink.azurecr.io\"\n  resource_group_name = var.resource_group_name\n}\n...\n```\n\n----------------------------------------\n\nTITLE: Displaying Initial VirtualService Configuration for Bookstore v1 in Istio\nDESCRIPTION: This YAML snippet shows the initial VirtualService configuration routing all traffic to the v1 subset of the bookstore service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_15\n\nLANGUAGE: yml\nCODE:\n```\nspec:\n  hosts:\n    - bookstore\n  http:\n    - route:\n        - destination:\n            host: bookstore\n            subset: v1\n```\n\n----------------------------------------\n\nTITLE: Creating a resource group for ACR with Artifact Streaming\nDESCRIPTION: Command to create an Azure resource group to hold the ACR instance that will be used for Artifact Streaming.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myStreamingTest --location westus\n```\n\n----------------------------------------\n\nTITLE: Installing AKS-Preview Extension in Azure CLI\nDESCRIPTION: These commands install and update the aks-preview extension for Azure CLI, which is required to use Draft with AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/draft.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Creating Cluster Staged Update Run in YAML\nDESCRIPTION: This YAML snippet shows how to create a ClusterStagedUpdateRun, which references both the cluster resource placement and the staged update strategy. It also specifies the resource snapshot index to use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1beta1\nkind: ClusterStagedUpdateRun\nmetadata:\n  name: example-staged-update-run\nspec:\n  placementName: crp-staged-update-sample\n  resourceSnapshotIndex: \"1\"\n  stagedRolloutStrategyName: example-staged-strategy\n```\n\n----------------------------------------\n\nTITLE: NFS Storage Class Creation Output\nDESCRIPTION: Output from the kubectl apply command confirming the successful creation of the Azure Files NFS storage class in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_17\n\nLANGUAGE: output\nCODE:\n```\nstorageclass.storage.k8s.io/azurefile-csi-nfs created\n```\n\n----------------------------------------\n\nTITLE: Upgrading AKS Cluster Using PowerShell\nDESCRIPTION: Command to upgrade an Azure Kubernetes Service cluster to a specific Kubernetes version using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: azurepowershell-interactive\nCODE:\n```\nSet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -KubernetesVersion <KUBERNETES_VERSION>\n```\n\n----------------------------------------\n\nTITLE: Weekly Schedule JSON Configuration for AKS Upgrades\nDESCRIPTION: This JSON snippet shows how to configure a weekly schedule that runs every two weeks on Friday.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\"schedule\": {\n    \"weekly\": {\n        \"intervalWeeks\": 2,\n        \"dayOfWeek\": \"Friday\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Credentials with Azure CLI\nDESCRIPTION: Retrieves kubeconfig for an AKS cluster using az aks get-credentials command. Requires Azure Kubernetes Service Cluster User role.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Cluster Connection with kubectl in PowerShell\nDESCRIPTION: This snippet demonstrates how to verify the connection to your AKS cluster using the kubectl get command. It returns a list of the cluster nodes and their status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_7\n\nLANGUAGE: PowerShell\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Describing Pod with Automatically Assigned Host Ports in AKS\nDESCRIPTION: This shell command and its output show how to use kubectl to describe a pod and view the automatically assigned host ports and corresponding environment variables in an AKS deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl describe pod echoserver-hostport-75dc8d8855-4gjfc\n<cut for brevity>\nContainers:\n  echoserver-hostport:\n    Container ID:   containerd://d0b75198afe0612091f412ee7cf7473f26c80660143a96b459b3e699ebaee54c\n    Image:          k8s.gcr.io/echoserver:1.10\n    Image ID:       k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229                                                                                                      Ports:          8080/TCP, 8443/TCP\n    Host Ports:     46645/TCP, 49482/TCP\n    State:          Running\n      Started:      Thu, 12 Jan 2023 18:02:50 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:\n      echoserver-hostport_PORT_8443_TCP_HOSTPORT:  49482\n      echoserver-hostport_PORT_8080_TCP_HOSTPORT:  46645\n```\n\n----------------------------------------\n\nTITLE: Configuring kubectl to Connect to AKS Cluster\nDESCRIPTION: Configures kubectl to connect to the created AKS cluster by downloading credentials and setting up the Kubernetes configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Rolling Back AKS Mesh Upgrade Using Azure CLI\nDESCRIPTION: Command to rollback a mesh upgrade in an AKS cluster using Azure CLI. Requires resource group name and cluster name as environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks mesh upgrade rollback --resource-group $RESOURCE_GROUP --name $CLUSTER\n```\n\n----------------------------------------\n\nTITLE: Kusto Query for Retrieving Image Cleaner Logs Using ContainerLog Schema\nDESCRIPTION: Alternative Kusto query for Azure Monitor Log Analytics that works with the older ContainerLog schema. This more complex query joins the KubePodInventory table with ContainerLog to retrieve logs from Image Cleaner pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_16\n\nLANGUAGE: kusto\nCODE:\n```\nlet startTimestamp = ago(1h);\nKubePodInventory\n| where TimeGenerated > startTimestamp\n| project ContainerID, PodName=Name, Namespace\n| where PodName startswith \"eraser-aks-\" and Namespace == \"kube-system\"\n| distinct ContainerID, PodName\n| join\n(\n    ContainerLog\n    | where TimeGenerated > startTimestamp\n)\non ContainerID\n// at this point before the next pipe, columns from both tables are available to be \"projected\". Due to both\n// tables having a \"Name\" column, we assign an alias as PodName to one column which we actually want\n| project TimeGenerated, PodName, LogEntry, LogEntrySource\n| summarize by TimeGenerated, LogEntry\n| order by TimeGenerated desc\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault SecretStore Configuration\nDESCRIPTION: Configures a SecretStore resource to access Azure Key Vault secrets using workload identity authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: external-secrets.io/v1beta1\nkind: SecretStore\nmetadata:\n  name: azure-store\n  namespace: ${AKS_AIRFLOW_NAMESPACE}\nspec:\n  provider:\n    azurekv:\n      authType: WorkloadIdentity\n      vaultUrl: \"${KEYVAULTURL}\"\n      serviceAccountRef:\n        name: ${SERVICE_ACCOUNT_NAME}\n```\n\n----------------------------------------\n\nTITLE: Enabling Bicep Kubernetes Extension\nDESCRIPTION: Configuration JSON for enabling the experimental Bicep Kubernetes extension in the Bicep configuration file. The extensibility setting must be set to true to use this preview feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n \"experimentalFeaturesEnabled\": {\n   \"extensibility\": true,\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Staged Update Strategy for Cluster Resource Placement in YAML\nDESCRIPTION: This YAML snippet shows how to define a staged update strategy using ClusterStagedUpdateStrategy. It includes multiple stages with label selectors, sorting, and post-stage tasks like timed waits and approvals.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1beta1\nkind: ClusterStagedUpdateStrategy\nmetadata:\n  name: example-staged-strategy\nspec:\n  stages:\n    - name: staging\n      labelSelector:\n        matchLabels:\n          environment: staging\n      afterStageTasks:\n        - type: TimedWait\n          waitTime: 1h\n    - name: canary\n      labelSelector:\n        matchLabels:\n          environment: canary\n      sortingLabelKey: name\n      afterStageTasks:\n        - type: Approval\n    - name: production\n      labelSelector:\n        matchLabels:\n          environment: production\n      sortingLabelKey: order\n```\n\n----------------------------------------\n\nTITLE: Updating Azure Vote Configuration File for Testing\nDESCRIPTION: A simple configuration file for the Azure Vote application that customizes the UI elements. This is used to test the GitHub Actions workflow by making a small change that will trigger the deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-action.md#2025-04-21_snippet_2\n\nLANGUAGE: cfg\nCODE:\n```\n# UI Configurations\\nTITLE = 'Azure Voting App'\\nVOTE1VALUE = 'Fish'\\nVOTE2VALUE = 'Dogs'\\nSHOWHOST = 'false'\n```\n\n----------------------------------------\n\nTITLE: Upgrading Non-LTS AKS Cluster\nDESCRIPTION: Upgrades a cluster that has LTS disabled to a newer supported Kubernetes version. Example shows upgrade to version 1.28.3.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/long-term-support.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks upgrade --resource-group <resource-group-name> --name <cluster-name> --kubernetes-version 1.28.3\n```\n\n----------------------------------------\n\nTITLE: Updating Kubernetes Secrets After Key Rotation\nDESCRIPTION: This command retrieves all secrets across all namespaces in the Kubernetes cluster and replaces them, effectively re-encrypting them with the new key after rotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get secrets --all-namespaces -o json | kubectl replace -f -\n```\n\n----------------------------------------\n\nTITLE: Creating Default Maintenance Configuration for AKS Cluster Using Azure CLI\nDESCRIPTION: This command adds a new default configuration for an AKS cluster that schedules maintenance to run from 1:00 AM to 2:00 AM every Monday.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks maintenanceconfiguration add --resource-group myResourceGroup --cluster-name myAKSCluster --name default --weekday Monday --start-hour 1\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace for GPU Resources with kubectl\nDESCRIPTION: This command creates a Kubernetes namespace called 'gpu-resources' to organize GPU-related resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl create namespace gpu-resources\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster\nDESCRIPTION: Configures kubectl credentials to connect to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-flyte.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Creating a Proximity Placement Group in Azure CLI\nDESCRIPTION: Creates a proximity placement group (PPG) of standard type in the specified resource group. This PPG will be used to ensure Azure compute resources are physically located close to one another.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/reduce-latency-ppg.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz ppg create --name myPPG --resource-group myResourceGroup --location centralus --type standard\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Bus Resources with Azure PowerShell\nDESCRIPTION: A series of Azure PowerShell commands to create a Service Bus namespace, queue, and authorization rule, then retrieve the necessary credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-paas-services.md#2025-04-21_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\nNew-AzServiceBusNamespace -Name $SB_NS -ResourceGroupName $RG_NAME -Location $LOC_NAME\n\nNew-AzServiceBusQueue -Name orders -ResourceGroupName $RG_NAME -NamespaceName $SB_NS\n\nNew-AzServiceBusAuthorizationRule `\n    -Name sender `\n    -NamespaceName $SB_NS `\n    -ResourceGroupName $RG_NAME `\n    -QueueName orders `\n    -Rights Send\n\n(Get-AzServiceBusNamespace -Name $SB_NS -ResourceGroupName $RG_NAME).Name \n(Get-AzServiceBusKey -NamespaceName $SB_NS -ResourceGroupName $RG_NAME -Name sender -QueueName orders).PrimaryKey\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure NetApp Files Volume Details\nDESCRIPTION: Uses the Azure CLI to display detailed information about an Azure NetApp Files volume including the IP address and creation token needed for Kubernetes persistent volume configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz netappfiles volume show \\\n    --resource-group $RESOURCE_GROUP \\\n    --account-name $ANF_ACCOUNT_NAME \\\n    --pool-name $POOL_NAME \\\n    --volume-name $VOLUME_NAME -o JSON\n```\n\n----------------------------------------\n\nTITLE: Creating Default Group in Microsoft Entra ID\nDESCRIPTION: Creates a 'default' group in Microsoft Entra ID using the Azure CLI. This group will have read-only access to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nDEFAULT_ID=$(az ad group create \\\n    --display-name default \\\n    --mail-nickname default \\\n    --query id \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Installing Required Azure CLI Extensions for AKS and PostgreSQL\nDESCRIPTION: Installs necessary Azure CLI extensions for managing AKS clusters and required components for the PostgreSQL deployment. This includes aks-preview, k8s-extension, and amg extensions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz extension add --upgrade --name aks-preview --yes --allow-preview true\naz extension add --upgrade --name k8s-extension --yes --allow-preview false\naz extension add --upgrade --name amg --yes --allow-preview false\n```\n\n----------------------------------------\n\nTITLE: Listing AKS Nodes\nDESCRIPTION: Command to list all nodes in an AKS cluster with detailed information including internal IPs and OS versions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes -o wide\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Machine Learning Extension Instance in AKS\nDESCRIPTION: Creates a new Azure Machine Learning extension instance on an AKS cluster with specific configuration settings for inference capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-extensions-az-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --name azureml --extension-type Microsoft.AzureML.Kubernetes --scope cluster --cluster-name <clusterName> --resource-group <resourceGroupName> --cluster-type managedClusters --configuration-settings enableInference=True allowInsecureConnections=True inferenceRouterServiceType=LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Creating Trusted Access Role Binding\nDESCRIPTION: Azure CLI commands to create a Trusted Access role binding in AKS cluster, associating specified roles with an Azure service\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/trusted-access-feature.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nexport ROLE_BINDING_NAME=\"myRoleBindingName\"\nexport SOURCE_RESOURCE_ID=\"mySourceResourceID\"\nexport ROLE_NAME_1=\"myRoleName1\"\nexport ROLE_NAME_2=\"myRoleName2\"\n\naz aks trustedaccess rolebinding create --resource-group ${RESOURCE_GROUP_NAME} --cluster-name ${CLUSTER_NAME} --name ${ROLE_BINDING_NAME} --source-resource-id ${SOURCE_RESOURCE_ID} --roles ${ROLE_NAME_1},${ROLE_NAME_2}\n```\n\n----------------------------------------\n\nTITLE: Assigning Key Vault Crypto User role for RBAC vault in Azure CLI\nDESCRIPTION: This command assigns the Key Vault Crypto User role to a specific identity for an RBAC-enabled Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_9\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz role assignment create --role \"Key Vault Crypto User\" --assignee-object-id $IDENTITY_OBJECT_ID --assignee-principal-type \"ServicePrincipal\" --scope $KEYVAULT_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Monitoring Ingress for Public IP Assignment\nDESCRIPTION: Watches the ingress resource to obtain the public IP address assigned to the store-front service for accessing the application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get ingress store-front -n aks-store-demo --watch\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network and Subnets for BYO ACR\nDESCRIPTION: Azure CLI commands to create virtual network and configure subnets for AKS and ACR in a bring-your-own ACR scenario.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name ${RESOURCE_GROUP} --location ${LOCATION}\n\naz network vnet create  --resource-group ${RESOURCE_GROUP} --name ${VNET_NAME} --address-prefixes 192.168.0.0/16\n\naz network vnet subnet create --name ${AKS_SUBNET_NAME} --vnet-name ${VNET_NAME} --resource-group ${RESOURCE_GROUP} --address-prefixes 192.168.1.0/24 \n\nSUBNET_ID=$(az network vnet subnet show --name ${AKS_SUBNET_NAME} --vnet-name ${VNET_NAME} --resource-group ${RESOURCE_GROUP} --query 'id' --output tsv)\n\naz network vnet subnet create --name ${ACR_SUBNET_NAME} --vnet-name ${VNET_NAME} --resource-group ${RESOURCE_GROUP} --address-prefixes 192.168.2.0/24 --private-endpoint-network-policies Disabled\n```\n\n----------------------------------------\n\nTITLE: Daily Schedule JSON Configuration for Node OS Upgrades\nDESCRIPTION: This JSON snippet shows how to configure a daily schedule for node OS upgrades that runs every three days.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"schedule\": {\n    \"daily\": {\n        \"intervalDays\": 3\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Specific VMs in AKS Node Pool\nDESCRIPTION: Azure CLI command to delete specific VMs from an AKS node pool. Requires resource group name, cluster name, node pool name, and the names of VMs to delete.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/delete-node-pool.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool delete-machines \\\n    --resource-group <resource-group-name> \\\n    --cluster-name <cluster-name> \\\n    --name <node-pool-name>\n    --machine-names <vm-name-1> <vm-name-2>\n```\n\n----------------------------------------\n\nTITLE: Listing Registry Images with Azure CLI\nDESCRIPTION: Command to list all images in the ACR instance using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-acr.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr repository list --name $ACRNAME --output table\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: Creates a new Azure resource group using the az group create command. This is a prerequisite step for creating an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume Claim for Ultra Disk in Kubernetes YAML\nDESCRIPTION: This YAML manifest defines a persistent volume claim (PVC) for an ultra disk in Kubernetes. It specifies the access mode, storage class, and requested storage size.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-ultra-disks.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: ultra-disk\nspec:\n  accessModes:\n - ReadWriteOnce\n  storageClassName: ultra-disk-sc\n  resources:\n    requests:\n      storage: 1000Gi\n```\n\n----------------------------------------\n\nTITLE: Verifying KEDA Pods Running\nDESCRIPTION: Lists the pods in the kube-system namespace to verify that KEDA components are running on the cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-cli.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get pods -n kube-system \n```\n\n----------------------------------------\n\nTITLE: Verifying Ingress Creation\nDESCRIPTION: kubectl command to verify the creation of the managed Ingress resource and view its details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get ingress -n hello-web-app-routing\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network and Subnets\nDESCRIPTION: Command referencing the creation of virtual network with API server and cluster subnets for AKS deployment\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet create\naz network vnet subnet create\n```\n\n----------------------------------------\n\nTITLE: Retrieving Identity Information for Key Vault Access\nDESCRIPTION: Commands to extract the Identity ID and Object ID from the Azure KeyVault Secret Provider Addon, which is necessary for accessing Key Vault secrets from the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport userAssignedIdentityID=$(az aks show --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --query addonProfiles.azureKeyvaultSecretsProvider.identity.clientId --output tsv)\nexport userAssignedObjectID=$(az aks show --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --query addonProfiles.azureKeyvaultSecretsProvider.identity.objectId --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kubernetes Service Information\nDESCRIPTION: These kubectl commands retrieve information about the deployed public service, including its external IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl get service public-svc\n```\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl describe service public-svc\n```\n\n----------------------------------------\n\nTITLE: Establish Cross-Tenant Trust Configuration\nDESCRIPTION: Command to create federated identity credential for establishing trust between AKS cluster and managed identity across tenants.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-cross-tenant.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity federated-credential create \\\n  --name $IDENTITY_NAME-$RANDOM \\\n  --identity-name $IDENTITY_NAME \\\n  --resource-group $RESOURCE_GROUP \\\n  --issuer $OIDC_ISSUER_URL \\\n  --subject system:serviceaccount:default:myserviceaccount\n```\n\n----------------------------------------\n\nTITLE: Complete Istio Authorization Policies Deployment\nDESCRIPTION: Comprehensive Istio AuthorizationPolicy configurations for bookstore, bookwarehouse, and mysql services with detailed access rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\n##################################################################################################\n# bookstore policy\n##################################################################################################\napiVersion: \"security.istio.io/v1beta1\"\nkind: \"AuthorizationPolicy\"\nmetadata:\n  name: \"bookstore\"\n  namespace: bookstore\nspec:\n  selector:\n    matchLabels:\n      app: bookstore\n  action: ALLOW\n  rules:\n    - from:\n        - source:\n            principals: [\"cluster.local/ns/bookbuyer/sa/bookbuyer\"]\n        - source:\n            namespaces: [\"bookbuyer\"]\n      to:\n        - operation:\n            methods: [\"GET\"]\n            paths: [\"*/books-bought\", \"*/buy-a-book/new\"]\n    - when:\n        - key: request.headers[User-Agent]\n          values: [\"*-http-client/*\"]\n        - key: request.headers[Client-App]\n          values: [\"bookbuyer\"]\n---\n##################################################################################################\n# bookwarehouse policy\n##################################################################################################\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"bookwarehouse\"\n  namespace: bookwarehouse\nspec:\n  selector:\n    matchLabels:\n      app: bookwarehouse\n  action: ALLOW\n  rules:\n    - from:\n        - source:\n            principals: [\"cluster.local/ns/bookstore/sa/bookstore\"]\n        - source:\n            namespaces: [\"bookstore\"]\n      to:\n        - operation:\n            methods: [\"POST\"]\n---\n##################################################################################################\n# mysql policy\n##################################################################################################\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"mysql\"\n  namespace: bookwarehouse\nspec:\n  selector:\n    matchLabels:\n      app: mysql\n  action: ALLOW\n  rules:\n    - from:\n        - source:\n            principals: [\"cluster.local/ns/bookwarehouse/sa/bookwarehouse\"]\n        - source:\n            namespaces: [\"bookwarehouse\"]\n      to:\n         - operation:\n            ports: [\"3306\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Windows IIS Pod with SMB Volume Mount\nDESCRIPTION: YAML configuration for creating an IIS pod that mounts an SMB volume to /inetpub/wwwroot. Includes resource limits, port configuration, and volume specifications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod \nmetadata:\n  name: iis-pod\n  labels:\n     app: web\nspec:\n  nodeSelector:\n    \"kubernetes.io/os\": windows\n  volumes:\n  - name: smb\n    persistentVolumeClaim:\n      claimName: anf-pvc-smb \n  containers:\n  - name: web\n    image: mcr.microsoft.com/windows/servercore/iis:windowsservercore \n    resources:\n      limits:\n        cpu: 1\n        memory: 800M\n    ports:\n      - containerPort: 80\n    volumeMounts:\n    - name: smb\n      mountPath: \"/inetpub/wwwroot\"\n      readOnly: false\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Continuous Backup Status with CNPG Operator\nDESCRIPTION: Command to check the status of continuous backup for the PostgreSQL cluster using the CNPG operator, which displays WAL archiving status and recovery points.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl cnpg status $PG_PRIMARY_CLUSTER_NAME 1 \\\n    --context $AKS_PRIMARY_CLUSTER_NAME \\\n    --namespace $PG_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Cluster Information with Azure CLI\nDESCRIPTION: Azure CLI command to retrieve information about an AKS cluster, including the Log Analytics workspace resource ID which is necessary for accessing logs through Azure Monitor.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myManagedCluster\n```\n\n----------------------------------------\n\nTITLE: Registering VMsAgentPoolPreview Feature Flag\nDESCRIPTION: Register the VMsAgentPoolPreview feature flag and verify its status using Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-machines-node-pools.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription <subscription-name>\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature registration create --namespace Microsoft.ContainerService --name VMsAgentPoolPreview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"VMsAgentPoolPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace \"Microsoft.ContainerService\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Managed Identity Information from AKS\nDESCRIPTION: Azure CLI commands to retrieve the objectId and clientId of the managed identity used by the Azure Key Vault Secrets Provider add-on.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group <resource-group> --name <cluster-name> --query addonProfiles.azureKeyvaultSecretsProvider.identity.objectId -o tsv\naz aks show --resource-group <resource-group> --name <cluster-name> --query addonProfiles.azureKeyvaultSecretsProvider.identity.clientId -o tsv\n```\n\n----------------------------------------\n\nTITLE: Updating Kubernetes Manifest File for ACR Integration\nDESCRIPTION: YAML snippet showing how to update the Kubernetes manifest to use a container registry. The user needs to replace <registryName> with their ACR name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-action.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n...\\n          containers:\\n          - name: azure-vote-front\\n            image: <registryName>.azurecr.io/azuredocs/azure-vote-front:v1\\n...\n```\n\n----------------------------------------\n\nTITLE: Verifying Dapr sidecar ports\nDESCRIPTION: Command to verify the Dapr sidecar is properly connected to the Node.js application by checking the exposed ports.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncurl $EXTERNAL_IP/ports\n```\n\n----------------------------------------\n\nTITLE: Creating Node Pool Snapshot in Azure CLI\nDESCRIPTION: This command creates a snapshot of a node pool using its resource ID. The snapshot contains configuration information such as node image version, Kubernetes version, OS type, and OS SKU.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-pool-snapshot.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool snapshot create --name MySnapshot --resource-group MyResourceGroup --nodepool-id $NODEPOOL_ID --location eastus\n```\n\n----------------------------------------\n\nTITLE: Configuring Dapr OS and Architecture with Azure CLI\nDESCRIPTION: Azure CLI command to install Dapr with specific OS and architecture configurations, targeting Linux AMD64 platform.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr \\\n--extension-type Microsoft.Dapr \\\n--auto-upgrade-minor-version true \\\n--configuration-settings \"global.ha.enabled=true\" \\\n--configuration-settings \"dapr_operator.replicaCount=2\" \\\n--configuration-settings \"global.daprControlPlaneOs=linux\" \\\n--configuration-settings \"global.daprControlPlaneArch=amd64\"\n```\n\n----------------------------------------\n\nTITLE: Verifying OSM Injector Components\nDESCRIPTION: Command to check the health status of OSM Injector deployment, pods, and services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get deployment,pod,service -n kube-system --selector app=osm-injector\n```\n\n----------------------------------------\n\nTITLE: Installing Fleet CLI Extension\nDESCRIPTION: Commands to install and update the Azure CLI fleet extension required for managing Fleet resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-create-update-strategy.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz extension add --name fleet\naz extension update --name fleet\n```\n\n----------------------------------------\n\nTITLE: Testing SRE Namespace Access in Kubernetes\nDESCRIPTION: Commands for testing access to the SRE namespace by running and viewing pods. The user should have appropriate permissions for these operations within the SRE namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_19\n\nLANGUAGE: console\nCODE:\n```\nkubectl run nginx-sre --image=mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine --namespace sre\nkubectl get pods --namespace sre\n```\n\n----------------------------------------\n\nTITLE: Disabling Container Network Security for Cilium\nDESCRIPTION: Disables only the Container Network Security feature while keeping other ACNS features enabled on a Cilium-based cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/advanced-container-networking-services-overview.md#2025-04-23_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --enable-acns \\\n    --disable-acns-security\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Azure CLI\nDESCRIPTION: Uses az aks get-credentials command to configure kubectl for connecting to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group <ResourceGroupName> --name <ClusterName>\n```\n\n----------------------------------------\n\nTITLE: Setting Windows Admin Password for AKS Cluster\nDESCRIPTION: This command prompts for and stores the administrator password for Windows Server nodes in the AKS cluster as an environment variable. The password must meet Windows Server complexity requirements.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\necho \"Please enter the password to use as administrator credentials for Windows Server nodes on your cluster: \" && read WINDOWS_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Installing the aks-preview CLI Extension\nDESCRIPTION: Commands to install and update the aks-preview CLI extension which is required for configuring deployment safeguards with version 2.0.0b1 or later.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deployment-safeguards.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Verifying Cluster Nodes with kubectl\nDESCRIPTION: Command to verify connection to the cluster and list all nodes, which should include both regular AKS nodes and the virtual node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Pod Specification for Spot Nodes\nDESCRIPTION: YAML configuration showing how to schedule pods on Spot nodes using tolerations and node affinity rules. Includes both required and preferred scheduling rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/spot-node-pool.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  containers:\n  - name: spot-example\n  tolerations:\n  - key: \"kubernetes.azure.com/scalesetpriority\"\n    operator: \"Equal\"\n    value: \"spot\"\n    effect: \"NoSchedule\"\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: \"kubernetes.azure.com/scalesetpriority\"\n            operator: In\n            values:\n            - \"spot\"\n      preferredDuringSchedulingIgnoredDuringExecution:\n      - weight: 1\n        preference:\n          matchExpressions:\n          - key: another-node-label-key\n            operator: In\n            values:\n            - another-node-label-value\n```\n\n----------------------------------------\n\nTITLE: Configuring Python app with workload identity\nDESCRIPTION: YAML configuration showing the workload identity labels required for the Python application deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nlabels:\n  app: node\n  azure.workload.identity/use: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Initialization Taint\nDESCRIPTION: Creates a new AKS cluster with an initialization taint using Azure CLI. The taint applies to all node pools in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --node-count 1 \\\n    --node-init-taints \"sku=gpu:NoSchedule\" \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Deploying a KAITO Inference Service in AKS\nDESCRIPTION: This command applies a KAITO workspace custom resource definition for the Qwen-2.5-coder-7B-instruct language model to your AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-monitoring.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/Azure/kaito/main/examples/inference/kaito_workspace_qwen_2.5_coder_7b-instruct.yaml\n```\n\n----------------------------------------\n\nTITLE: Output from Ingress Resource Status Check\nDESCRIPTION: Example output showing the status of the created Ingress resource, including the ingress class, hostname, IP address, and ports.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_24\n\nLANGUAGE: output\nCODE:\n```\nNAME             CLASS                                HOSTS               ADDRESS       PORTS     AGE\naks-helloworld   webapprouting.kubernetes.azure.com   myapp.contoso.com   20.51.92.19   80, 443   4m\n```\n\n----------------------------------------\n\nTITLE: Creating NGINX Deployment with YAML in Azure Kubernetes Service\nDESCRIPTION: This YAML manifest creates an NGINX deployment with 3 replicas. It defines the deployment configuration including container image, labels, and replica count for use in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - image: nginx:latest\n        name: nginx\n```\n\n----------------------------------------\n\nTITLE: Creating Key Vault Access Policy\nDESCRIPTION: Command to set access policy for Key Vault when RBAC is not enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault set-policy --name $KEYVAULT_NAME --key-permissions get --object-id $IDENTITY_OBJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Defining WebLogic Auxiliary Image Configuration in YAML\nDESCRIPTION: YAML configuration for defining auxiliary images in WebLogic domain CRD, specifying the image location, pull policy, and source paths for models and WDT installation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  clusters:\n  - name: sample-domain1-cluster-1\n  configuration:\n    model:\n      auxiliaryImages:\n      - image: wlsaksacrafvzeyyswhxek.azurecr.io/wlsaks-auxiliary-image:1.0\n        imagePullPolicy: IfNotPresent\n        sourceModelHome: /auxiliary/models\n        sourceWDTInstallHome: /auxiliary/weblogic-deploy\n```\n\n----------------------------------------\n\nTITLE: Example Kubernetes Pod Status Output\nDESCRIPTION: Sample output from the kubectl get pods command showing two running Nginx pods from the deployment, indicating successful deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_11\n\nLANGUAGE: output\nCODE:\n```\nNAME                                 READY   STATUS    RESTARTS   AGE\nnginx0-deployment-669dfc4d4b-x74kr   1/1     Running   0          20s\nnginx0-deployment-669dfc4d4b-xdpd6   1/1     Running   0          20s\n```\n\n----------------------------------------\n\nTITLE: Adding IP to Authorized Ranges (Azure CLI and PowerShell)\nDESCRIPTION: These snippets demonstrate how to add the current IP address to the authorized IP ranges for an AKS cluster using both Azure CLI and Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n# Add to AKS approved list using Azure CLI\naz aks update --resource-group $RG --name $AKSNAME --api-server-authorized-ip-ranges $CURRENT_IP/24,73.140.245.0/24\n\n# Add to AKS approved list using Azure PowerShell\nSet-AzAksCluster -ResourceGroupName $RG -Name $AKSNAME -ApiServerAccessAuthorizedIpRange '$CURRENT_IP/24,73.140.245.0/24'\n```\n\n----------------------------------------\n\nTITLE: Scaling a Gateway Node pool\nDESCRIPTION: Command to resize the gateway node pool within the limits defined by the prefix size. This optional step allows adjusting the number of nodes in the gateway pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-static-egress-gateway.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool scale --cluster-name <cluster-name> -n <nodepool-name> --node-count <desired-node-count>\n```\n\n----------------------------------------\n\nTITLE: Upgrading Azure CNI Cluster to Overlay Mode\nDESCRIPTION: Command to upgrade an existing Azure CNI cluster to use Overlay mode. Requires Kubernetes version 1.22+ and specifies pod CIDR that doesn't overlap with existing VNet address space.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-azure-cni.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nclusterName=\"myOverlayCluster\"\nresourceGroup=\"myResourceGroup\"\nlocation=\"westcentralus\"\n\naz aks update --name $clusterName \\\n--resource-group $resourceGroup \\\n--network-plugin-mode overlay \\\n--pod-cidr 192.168.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Provider for Terraform\nDESCRIPTION: Terraform configuration block that specifies the Azure provider settings including required version constraints.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-terraform.md#2025-04-21_snippet_0\n\nLANGUAGE: Terraform\nCODE:\n```\n:::code language=\"Terraform\" source=\"~/terraform_samples/quickstart/101-aks-cluster-windows/providers.tf\":::\n```\n\n----------------------------------------\n\nTITLE: Persistent Volume Configuration for NFS\nDESCRIPTION: YAML manifest that defines a PersistentVolume resource for NFS storage in AKS. Specifies capacity, access modes, and NFS server connection details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-nfs-volume.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: NFS_NAME\n  labels:\n    type: nfs\nspec:\n  capacity:\n    storage: 1Gi\n  accessModes:\n    - ReadWriteMany\n  nfs:\n    server: NFS_INTERNAL_IP\n    path: NFS_EXPORT_FILE_PATH\n```\n\n----------------------------------------\n\nTITLE: Installing the aks-preview Azure CLI Extension\nDESCRIPTION: Commands to add and update the aks-preview extension for Azure CLI, which is required to use AKS Automatic preview features.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Registering the IstioNativeSidecarModePreview Feature Flag in Azure\nDESCRIPTION: Registers the IstioNativeSidecarModePreview feature flag in the Microsoft.ContainerService namespace to enable native sidecar mode for Istio.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz feature register --namespace Microsoft.ContainerService --name IstioNativeSidecarModePreview\n```\n\n----------------------------------------\n\nTITLE: Configuring OSM CLI Variables with YAML\nDESCRIPTION: Creates a YAML configuration file for the OSM CLI to enhance the add-on experience. This file should be placed at $HOME/.osm/config.yaml or a custom path specified by the OSM_CONFIG environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-binary.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ninstall:\n  kind: managed\n  distribution: AKS\n  namespace: kube-system\n```\n\n----------------------------------------\n\nTITLE: Creating a Persistent Volume Claim for Azure Managed Disk in YAML\nDESCRIPTION: This YAML manifest creates a persistent volume claim for a 5Gi Azure Managed Disk using the managed-premium storage class. It specifies ReadWriteOnce access mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-storage.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: azure-managed-disk\nspec:\n  accessModes:\n  - ReadWriteOnce\n  storageClassName: managed-premium-retain\n  resources:\n    requests:\n      storage: 5Gi\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Node Resource Group\nDESCRIPTION: Azure CLI command to get the node resource group name for an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv\n```\n\n----------------------------------------\n\nTITLE: Removing Sample Bookinfo Application in Bash\nDESCRIPTION: This bash command uses kubectl to delete the sample Bookinfo application if it was installed during the setup process. It removes all resources defined in the specified YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-uninstall-addon.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f https://raw.githubusercontent.com/istio/istio/release-1.24/samples/bookinfo/platform/kube/bookinfo.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure NetApp Files Volume Details with Azure CLI\nDESCRIPTION: Command to show the details of a created Azure NetApp Files volume. This command retrieves important information like the IP address and creation token needed for the persistent volume configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz netappfiles volume show \\\n    --resource-group $RESOURCE_GROUP \\\n    --account-name $ANF_ACCOUNT_NAME \\\n    --pool-name $POOL_NAME \\\n    --volume-name \"$VOLUME_NAME -o JSON\n```\n\n----------------------------------------\n\nTITLE: Installing the aks-preview Azure CLI Extension\nDESCRIPTION: Commands to install and update the aks-preview extension for Azure CLI, which is required for configuring kube-proxy in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kube-proxy.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Initializing and Deploying Terraform Configuration\nDESCRIPTION: Commands for initializing Terraform workspace and deploying the infrastructure using specified variable files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nterraform init\nterraform plan -var-file=\"kafka.tfvars\"\nterraform apply -var-file=\"kafka.tfvars\"\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Cluster using PowerShell\nDESCRIPTION: PowerShell commands to create a resource group and deploy an AKS cluster using a Bicep template.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzResourceGroup -Name myResourceGroup -Location eastus\nNew-AzResourceGroupDeployment -ResourceGroupName myResourceGroup -TemplateFile ./main.bicep -dnsPrefix=<dns-prefix> -linuxAdminUsername=<linux-admin-username> -sshRSAPublicKey=\"<ssh-key>\"\n```\n\n----------------------------------------\n\nTITLE: Relabeling Namespace for New Istio Revision\nDESCRIPTION: This command relabels the default namespace to use the new Istio revision asm-1-24.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label namespace default istio.io/rev=asm-1-24 --overwrite\n```\n\n----------------------------------------\n\nTITLE: Registering Kubernetes Configuration Resource Provider\nDESCRIPTION: Registers the Microsoft.KubernetesConfiguration resource provider with your Azure subscription if it's not already registered.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.KubernetesConfiguration\n```\n\n----------------------------------------\n\nTITLE: Creating and labeling the exclusion ConfigMap\nDESCRIPTION: Creates a ConfigMap from the exclusion JSON file and applies the necessary label for Image Cleaner to recognize it as an exclusion list.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create configmap excluded --from-file=sample.json --namespace=kube-system\nkubectl label configmap excluded eraser.sh/exclude.list=true -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Exporting Terraform Output Variables\nDESCRIPTION: Bash commands to export Terraform output values as environment variables for use in subsequent steps\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nexport MY_ACR_REGISTRY_ID=$(terraform output -raw acr_registry_id)\nexport MY_ACR_REGISTRY=$(terraform output -raw acr_registry_name)\nexport MY_CLUSTER_NAME=$(terraform output -raw aks_cluster_name)\nexport KUBELET_IDENTITY=$(terraform output -raw aks_kubelet_identity_id)\nexport OIDC_URL=$(terraform output -raw aks_oidc_issuer_url)\nexport identity_name=$(terraform output -raw identity_name)\nexport MY_IDENTITY_NAME_ID=$(terraform output -raw identity_name_id)\nexport MY_IDENTITY_NAME_PRINCIPAL_ID=$(terraform output -raw identity_name_principal_id)\nexport MY_IDENTITY_NAME_CLIENT_ID=$(terraform output -raw identity_name_client_id)\nexport KEYVAULTID=$(terraform output -raw key_vault_id)\nexport KEYVAULTURL=$(terraform output -raw key_vault_uri)\nexport AKS_MONGODB_BACKUP_STORAGE_ACCOUNT_KEY=$(terraform output -raw storage_account_key)\nexport STORAGE_ACCOUNT_NAME=$(terraform output -raw storage_account_name)\nexport TENANT_ID=$(terraform output -raw identity_name_tenant_id)\n```\n\n----------------------------------------\n\nTITLE: Listing MongoDB Pods in AKS Namespace\nDESCRIPTION: Command to retrieve the list of pods in the MongoDB namespace, used to identify the Locust client pod for further operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n $AKS_MONGODB_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Applying Extra Recommender Configuration\nDESCRIPTION: Bash command to apply the extra recommender configuration to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f extra-recommender.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding a Windows Server 2022 Node Pool to AKS Cluster\nDESCRIPTION: This command adds a Windows Server 2022 node pool to the existing AKS cluster. Windows Server 2022 requires Kubernetes version 1.23.0 or higher and will be retired after Kubernetes version 1.34.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --os-type Windows \\\n    --os-sku Windows2022 \\\n    --name npwin \\\n    --node-count 1\n```\n\n----------------------------------------\n\nTITLE: Creating SecretStore Resource in AKS\nDESCRIPTION: Creates a SecretStore resource to access MongoDB passwords stored in Azure Key Vault using workload identity authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: external-secrets.io/v1beta1\nkind: SecretStore\nmetadata:\n  name: azure-store\n  namespace: ${AKS_MONGODB_NAMESPACE}\nspec:\n  provider:\n    azurekv:\n      authType: WorkloadIdentity\n      vaultUrl: \"${KEYVAULTURL}\"\n      serviceAccountRef:\n        name: ${SERVICE_ACCOUNT_NAME}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Application Extension from Marketplace\nDESCRIPTION: Deploys a sample Kubernetes application (published on Azure Marketplace) to an AKS cluster with custom configuration settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-extensions-az-cli.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --name voteapp --extension-type Contoso.AzureVoteKubernetesAppTest --scope cluster --cluster-name <clusterName> --resource-group <resourceGroupName> --cluster-type managedClusters --plan-name testPlanID --plan-product testOfferID --plan-publisher testPublisherID --configuration-settings title=VoteAnimal value1=Cats value2=Dogs\n```\n\n----------------------------------------\n\nTITLE: Creating MongoDB Shell Access Pod\nDESCRIPTION: Creates a pod named percona-client to access MongoDB shell with the proper connection string\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-mongodb-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n \"${AKS_MONGODB_NAMESPACE}\" run -i --rm --tty percona-client --image=${MY_ACR_REGISTRY}.azurecr.io/percona-server-mongodb:7.0.8-5 --restart=Never -- env CONN_STR=$connectionString\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Add-on on an Existing AKS Cluster\nDESCRIPTION: Command to enable the Istio service mesh add-on on an existing AKS cluster. The cluster must be running version 1.23 or higher and cannot have the OSM add-on enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks mesh enable --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kubernetes\nDESCRIPTION: This command retrieves the list of pods in the current Kubernetes context, allowing you to verify if all application pods have been removed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-application.md#2025-04-21_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Registering ExtensionTypes Feature\nDESCRIPTION: Registers the ExtensionTypes feature for the Microsoft.KubernetesConfiguration namespace, which is required for using cluster extensions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature registration create --namespace Microsoft.KubernetesConfiguration --name ExtensionTypes\n```\n\n----------------------------------------\n\nTITLE: Enabling Cost Analysis on an Existing AKS Cluster (Azure CLI)\nDESCRIPTION: This command updates an existing AKS cluster in the Standard tier to enable cost analysis using the Azure CLI. It specifies the resource group and cluster name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cost-analysis.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group <resource-group> --name <cluster-name> --enable-cost-analysis\n```\n\n----------------------------------------\n\nTITLE: Verifying FIPS Status on AKS Node Pool\nDESCRIPTION: Check if a node pool is FIPS-enabled using the az aks show command. This command queries the enableFIPS value in the agentPoolProfiles of the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --query=\"agentPoolProfiles[].{Name:name enableFips:enableFips}\" \\\n    -o table\n```\n\n----------------------------------------\n\nTITLE: Clone and Build WebLogic Application\nDESCRIPTION: Bash commands to clone the sample application repository at a specific tag and build the Java application using Maven. The commands set up the working directory and generate the weblogic-cafe.war package.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# cd <parent-directory-to-check-out-sample-code>\nexport BASE_DIR=$PWD\n\ngit clone --single-branch https://github.com/microsoft/weblogic-on-azure.git --branch 20240201 $BASE_DIR/weblogic-on-azure\n```\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package --file $BASE_DIR/weblogic-on-azure/javaee/weblogic-cafe/pom.xml\n```\n\n----------------------------------------\n\nTITLE: Registering Azure Service Providers\nDESCRIPTION: Commands to register the Service Connector and Kubernetes Configuration resource providers in Azure.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/service-connector/csi-secrets-store-service-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register -n Microsoft.ServiceLinker\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register -n Microsoft.KubernetesConfiguration\n```\n\n----------------------------------------\n\nTITLE: Deploying MongoDB Backup to Azure Blob Storage\nDESCRIPTION: Creates a Percona Server MongoDB Backup custom resource that performs a logical backup of the MongoDB cluster to Azure Blob Storage. The backup uses the storage configuration defined in the cluster resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: psmdb.percona.com/v1\nkind: PerconaServerMongoDBBackup\nmetadata:\n  finalizers:\n  - delete-backup\n  name: az-backup1\n  namespace: ${AKS_MONGODB_NAMESPACE}\nspec:\n  clusterName: ${AKS_MONGODB_CLUSTER_NAME}\n  storageName: azure-blob\n  type: logical\nEOF\n```\n\n----------------------------------------\n\nTITLE: Signing in to Azure CLI\nDESCRIPTION: Use the az login command to sign in to Azure through the command-line interface.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Verifying Ingress Resource Status with Kubectl\nDESCRIPTION: Bash command to verify the status of the created Ingress resource using kubectl get command in a specific namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get ingress -n hello-web-app-routing\n```\n\n----------------------------------------\n\nTITLE: Installing and Updating aks-preview Azure CLI Extension\nDESCRIPTION: Install the aks-preview extension and update it to the latest version using Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-vnet-integration.md#2025-04-21_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Deploying to AKS in Bash\nDESCRIPTION: Bash commands to deploy the Liberty application to AKS using kubectl and monitor pod status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\ncd $BASE_DIR/java-app/target\n\n# Apply deployment file\nkubectl apply -f openlibertyapplication-agic-passwordless-db.yaml\n```\n\n----------------------------------------\n\nTITLE: Viewing OSM MeshConfig Configuration with kubectl\nDESCRIPTION: Command to retrieve the OSM controller's configuration settings using kubectl. This shows the MeshConfig resource in YAML format from the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-bicep.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get meshconfig osm-mesh-config -n kube-system -o yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Microsoft Entra Client Application\nDESCRIPTION: Creates the client application component that handles user authentication when accessing the AKS cluster via kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nclientApplicationId=$(az ad app create \\\n    --display-name \"${aksname}Client\" \\\n    --native-app \\\n    --reply-urls \"https://${aksname}Client\" \\\n    --query appId -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Deleting ClusterResourcePlacement using kubectl\nDESCRIPTION: Command to remove a ClusterResourcePlacement object using kubectl. This command deletes the placement named 'distribute-my-namespace' from the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-resource-propagation.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete clusterresourceplacement distribute-my-namespace\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Metrics Scraping for NPD in Azure AKS\nDESCRIPTION: YAML configuration for setting up Prometheus metrics scraping for Node Problem Detector as a DaemonSet in Azure Kubernetes Service. The configuration defines scraping interval, metrics path, and relabeling rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-problem-detector.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: ama-metrics-prometheus-config-node\n  namespace: kube-system\ndata:\n  prometheus-config: |-\n    global:\n      scrape_interval: 1m\n    scrape_configs:\n    - job_name: node-problem-detector\n      scrape_interval: 1m\n      scheme: http\n      metrics_path: /metrics\n      relabel_configs:\n      - source_labels: [__metrics_path__]\n        regex: (.*)\n        target_label: metrics_path\n      - source_labels: [__address__]\n        replacement: '$NODE_NAME'\n        target_label: instance\n      static_configs:\n      - targets: ['$NODE_IP:20257']\n```\n\n----------------------------------------\n\nTITLE: Checking the system exclusion list for Image Cleaner\nDESCRIPTION: Retrieves the system-defined exclusion list that prevents certain images from being removed by Image Cleaner.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get -n kube-system configmap eraser-system-exclusion -o yaml\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up KAITO Resources in Bash\nDESCRIPTION: Deletes the KAITO workspaces and their allocated resources from the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-fine-tune.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete workspace workspace-tuning-phi-3-mini\nkubectl delete workspace workspace-phi-3-mini-adapter\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster\nDESCRIPTION: Azure CLI command to configure kubectl with credentials for connecting to the AKS cluster\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --overwrite-existing --output table\n```\n\n----------------------------------------\n\nTITLE: Creating a streaming artifact from an image in ACR\nDESCRIPTION: Command to create a streaming artifact from an existing image in your ACR. This prepares the image for use with Artifact Streaming.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr artifact-streaming create --image jupyter/all-spark-notebook:latest\n```\n\n----------------------------------------\n\nTITLE: Setting Variables for Role Assignment\nDESCRIPTION: Commands to set environment variables for the storage account ID and the currently signed-in user's Object ID, which are needed for role assignments.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\nSTORAGE_ACCOUNT_ID=$(az storage account show --name $STORAGE_ACCOUNT_NAME --query \"id\" -o tsv)\nAD_USER=$(az ad signed-in-user show --query objectId -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Cilium Network Plugin\nDESCRIPTION: Azure CLI command to create an AKS cluster with Azure CNI powered by Cilium, configuring network plugin mode as overlay and setting pod CIDR.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks create \\\n  --name <clusterName> \\\n  --resource-group <resourceGroupName> \\\n  --location <location> \\\n  --network-plugin azure \\\n  --network-plugin-mode overlay \\\n  --pod-cidr 192.168.0.0/16 \\\n  --network-dataplane cilium \\\n  --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kubernetes Cluster\nDESCRIPTION: This command lists all Pods in the current namespace, allowing you to verify that the valkey-masters-0 Pod has been deleted as part of the failover simulation test.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-valkey-cluster.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Resource Creation\nDESCRIPTION: Commands to set environment variables for the resource group, virtual network name, virtual network ID, and subnet name that will be used in subsequent commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nRESOURCE_GROUP=MC_myResourceGroup_myAKSCluster_eastus\nVNET_NAME=$(az network vnet list --resource-group $RESOURCE_GROUP --query [].name -o tsv)\nVNET_ID=$(az network vnet show --resource-group $RESOURCE_GROUP --name $VNET_NAME --query \"id\" -o tsv)\nSUBNET_NAME=MyHpcCacheSubnet\n```\n\n----------------------------------------\n\nTITLE: Viewing Running Docker Containers\nDESCRIPTION: This command displays the currently running Docker containers, which should include the four main components of the multi-container application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-app.md#2025-04-21_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with Trusted Launch Enabled\nDESCRIPTION: Creates a new AKS cluster with one node in the specified resource group with both Secure Boot and vTPM security features enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-trusted-launch.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --node-count 1 \\\n    --enable-secure-boot \\\n    --enable-vtpm \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Deleting a Node Pool\nDESCRIPTION: Azure CLI command to delete a node pool from an AKS cluster. Warning: Does not perform cordon and drain operations automatically.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool delete --resource-group $RESOURCE_GROUP_NAME --cluster-name $CLUSTER_NAME --name $NODE_POOL_NAME --no-wait\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Nodes with kubectl\nDESCRIPTION: Lists all nodes in the Kubernetes cluster using kubectl get nodes command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME                                STATUS   ROLES   AGE    VERSION\naks-nodepool1-93451573-vmss000000   Ready    agent   3h6m   v1.15.11\naks-nodepool1-93451573-vmss000001   Ready    agent   3h6m   v1.15.11\naks-nodepool1-93451573-vmss000002   Ready    agent   3h6m   v1.15.11\n```\n\n----------------------------------------\n\nTITLE: Creating Microsoft Entra ID User for SRE and Adding to Group\nDESCRIPTION: This snippet creates a new user in Microsoft Entra ID for a Site Reliability Engineer (SRE), assigns the resulting user ID to a variable, and adds the user to the opssre group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a user for the SRE role\nAKSSRE_ID=$(az ad user create \\\n  --display-name \"AKS SRE\" \\\n  --user-principal-name $AAD_SRE_UPN \\\n  --password $AAD_SRE_PW \\\n  --query id -o tsv)\n\n# Add the user to the opssre Azure AD group\naz ad group member add --group opssre --member-id $AKSSRE_ID\n```\n\n----------------------------------------\n\nTITLE: Configuring kubectl with AKS Cluster Credentials\nDESCRIPTION: Command to download credentials and configure kubectl to connect to the AKS cluster. This allows interaction with the Kubernetes API server from the local machine.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Querying Autoscaler Logs in Log Analytics\nDESCRIPTION: Kusto query to retrieve cluster autoscaler logs from Log Analytics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_12\n\nLANGUAGE: kusto\nCODE:\n```\nAzureDiagnostics\n| where Category == \"cluster-autoscaler\"\n```\n\n----------------------------------------\n\nTITLE: Viewing Kubelet Logs via SSH Connection\nDESCRIPTION: Commands to view kubelet logs after establishing an SSH connection to the node. Uses journalctl to access the system logs for the kubelet service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelet-logs.md#2025-04-21_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nchroot /host\njournalctl -u kubelet -o cat\n```\n\n----------------------------------------\n\nTITLE: Enabling Advanced Container Networking Services (ACNS) in AKS\nDESCRIPTION: This command enables ACNS on an existing AKS cluster, which is required for FQDN filtering and L7 policies. It uses the Azure CLI to update the specified cluster with the --enable-acns flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n  --resource-group $RESOURCE_GROUP \\\n  --name $CLUSTER_NAME \\\n  --enable-acns\n```\n\n----------------------------------------\n\nTITLE: Creating DNS Link Between Private DNS Zone and VNet\nDESCRIPTION: Creates a DNS link between the Azure Private DNS Zone and the Virtual Network using the az network private-dns link vnet create command, enabling DNS resolution within the VNet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz network private-dns link vnet create \\\n  --resource-group $RESOURCE_GROUP \\\n  --name MyDNSLink \\\n  --zone-name $PRIVATE_DNS_ZONE \\\n  --virtual-network $VNET_NAME \\\n  --registration-enabled true\n```\n\n----------------------------------------\n\nTITLE: Deploying Bicep Template with Azure CLI\nDESCRIPTION: Commands to set variables and deploy the Bicep template using Azure CLI deployment group command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\nMY_RESOURCE_GROUP=<myResourceGroup>\nMY_AKS_CLUSTER=<myAKSCluster>\n\naz deployment group create \\\n  --resource-group $MY_RESOURCE_GROUP \\\n  --template-file ./my-bicep-file-path.bicep \\\n  --parameters clusterName=$MY_AKS_CLUSTER\n```\n\n----------------------------------------\n\nTITLE: Connecting to PostgreSQL Read-Only Replicas with CNPG Operator\nDESCRIPTION: Command to connect specifically to a read-only replica of the PostgreSQL cluster using the CNPG operator. This allows for testing of read operations on replica instances.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl cnpg psql --replica $PG_PRIMARY_CLUSTER_NAME --namespace $PG_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Deploying Managed Identity Bicep Template\nDESCRIPTION: Azure CLI command to deploy a user-assigned managed identity using a Bicep template.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz deployment group create --resource-group <resource-group> --template-file uami.bicep\n```\n\n----------------------------------------\n\nTITLE: Applying NFS Storage Class Configuration with kubectl\nDESCRIPTION: This bash command applies the YAML configuration file for the NFS-based storage class to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f blob-nfs-sc.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding Local IP to PostgreSQL Firewall Rules Using Azure CLI\nDESCRIPTION: Creates a firewall rule in the PostgreSQL Flexible Server to allow connections from the developer's local IP address. This enables local testing of the application against the cloud database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz postgres flexible-server firewall-rule create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $DB_SERVER_NAME \\\n    --rule-name $DB_SERVER_NAME-database-allow-local-ip \\\n    --start-ip-address $AZ_LOCAL_IP_ADDRESS \\\n    --end-ip-address $AZ_LOCAL_IP_ADDRESS\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubenet Cluster to Azure CNI Overlay\nDESCRIPTION: Command to upgrade an existing Kubenet cluster to Azure CNI Overlay. Maintains existing Pod CIDR configuration since it's already using a private CIDR for pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-azure-cni.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nclusterName=\"myOverlayCluster\"\nresourceGroup=\"myResourceGroup\"\nlocation=\"westcentralus\"\n\naz aks update --name $clusterName \\\n--resource-group $resourceGroup \\\n--network-plugin azure \\\n--network-plugin-mode overlay\n```\n\n----------------------------------------\n\nTITLE: Adding Multi-instance GPU Node Pool via Azure CLI\nDESCRIPTION: Azure CLI command to add a GPU node pool with MIG1g profile using Standard_ND96asr_v4 VM size.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-multi-instance.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --name aksMigNode \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --node-vm-size Standard_ND96asr_v4 \\\n    --node-count 1 \\\n    --gpu-instance-profile MIG1g\n```\n\n----------------------------------------\n\nTITLE: Root Certificate PEM File Format\nDESCRIPTION: Example format of the root-cert.pem file containing both old and new root certificates in PEM format.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_9\n\nLANGUAGE: text\nCODE:\n```\n-----BEGIN CERTIFICATE-----\n<contents of old root certificate>\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\n<contents of new root certificate>\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Applying and Checking Autoscaler in Kubernetes\nDESCRIPTION: These commands apply the autoscaler manifest and check its status using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-scale.md#2025-04-21_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f aks-store-quickstart-hpa.yaml\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl get hpa\n```\n\n----------------------------------------\n\nTITLE: Applying SecretProviderClass to Kubernetes Cluster\nDESCRIPTION: This bash command applies the SecretProviderClass YAML configuration to the Kubernetes cluster in the specified namespace, enabling the integration between Secrets Store CSI Driver and Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f secretProviderClass.yaml -n $NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Registering the ArtifactStreamingPreview feature flag in Azure subscription\nDESCRIPTION: Command to register the ArtifactStreamingPreview feature flag in your Azure subscription, which is required before using the Artifact Streaming feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace Microsoft.ContainerService --name ArtifactStreamingPreview\n```\n\n----------------------------------------\n\nTITLE: Deploying the Node.js application\nDESCRIPTION: Command to apply the Node.js application deployment configuration to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ./deploy/node.yaml\n```\n\n----------------------------------------\n\nTITLE: Querying Node OS Auto-upgrade Notifications in Azure Resource Graph\nDESCRIPTION: Kusto query to monitor node OS auto-upgrade events in AKS. The query filters containerserviceeventresources for NodeOSUpgrade events, extracting status, upgrade type, and event timing information within the last 2 hours.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/aks-communication-manager.md#2025-04-21_snippet_1\n\nLANGUAGE: kusto\nCODE:\n```\narg(\"\").containerserviceeventresources\n| where type == \"microsoft.containerservice/managedclusters/scheduledevents\"\n| where id contains \"/subscriptions/subid/resourcegroups/rgname/providers/Microsoft.ContainerService/managedClusters/clustername\"\n| where properties has \"eventStatus\"\n| extend status = substring(properties, indexof(properties, \"eventStatus\") + strlen(\"eventStatus\") + 3, 50)\n| extend status = substring(status, 0, indexof(status, \",\") - 1)\n| where status != \"\"\n| where properties has \"eventDetails\"\n| extend upgradeType = case(\n                           properties has \"K8sVersionUpgrade\",\n                           \"K8sVersionUpgrade\",\n                           properties has \"NodeOSUpgrade\",\n                           \"NodeOSUpgrade\",\n                           status == \"Completed\" or status == \"Failed\",\n                           case(\n    properties has '\"type\":1',\n    \"K8sVersionUpgrade\",\n    properties has '\"type\":2',\n    \"NodeOSUpgrade\",\n    \"\"\n),\n                           \"\"\n                       )\n| where properties has \"lastUpdateTime\"\n| extend eventTime = substring(properties, indexof(properties, \"lastUpdateTime\") + strlen(\"lastUpdateTime\") + 3, 50)\n| extend eventTime = substring(eventTime, 0, indexof(eventTime, \",\") - 1)\n| extend eventTime = todatetime(tostring(eventTime))\n| where eventTime >= ago(2h)\n| where upgradeType == \"K8sVersionUpgrade\"\n| project\n    eventTime,\n    upgradeType,\n    status,\n    properties\n| order by eventTime asc\n```\n\n----------------------------------------\n\nTITLE: Starting a wasmCloud Host using Kubernetes CRD\nDESCRIPTION: Creates a wasmCloud host using a Custom Resource Definition (CRD) and applies it to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncat << EOF | kubectl apply -f -\napiVersion: k8s.wasmcloud.dev/v1alpha1\nkind: WasmCloudHostConfig\nmetadata:\n  name: wasmcloud-host\nspec:\n  lattice: default\n  version: \"1.4.1\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod to Use Synced Kubernetes Secret\nDESCRIPTION: Defines a Pod that mounts secrets and sets an environment variable referencing the synced Kubernetes secret using YAML configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: busybox-secrets-store-inline\nspec:\n  containers:\n    - name: busybox\n      image: registry.k8s.io/e2e-test-images/busybox:1.29-1\n      command:\n        - \"/bin/sleep\"\n        - \"10000\"\n      volumeMounts:\n      - name: secrets-store01-inline\n        mountPath: \"/mnt/secrets-store\"\n        readOnly: true\n      env:\n      - name: SECRET_USERNAME\n        valueFrom:\n          secretKeyRef:\n            name: foosecret\n            key: username\n  volumes:\n    - name: secrets-store01-inline\n      csi:\n        driver: secrets-store.csi.k8s.io\n        readOnly: true\n        volumeAttributes:\n          secretProviderClass: \"azure-sync\"\n```\n\n----------------------------------------\n\nTITLE: Pushing Container Image to Registry\nDESCRIPTION: Commands to tag and push the built container image to Azure Container Registry.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nexport TODO_QUARKUS_TAG=$(docker images | grep todo-quarkus-aks | head -n1 | cut -d \" \" -f1)\necho ${TODO_QUARKUS_TAG}\ndocker push ${TODO_QUARKUS_TAG}:1.0\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster with Telepresence\nDESCRIPTION: Command to connect Telepresence to the AKS cluster and Kubernetes API server.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-telepresence-aks.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntelepresence connect\n```\n\n----------------------------------------\n\nTITLE: Getting Microsoft Entra Group Object ID using Azure CLI\nDESCRIPTION: Azure CLI command to retrieve the object ID for a Microsoft Entra group named 'appdev'\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-kubeconfig-access.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad group show --group appdev --query objectId -o tsv\n```\n\n----------------------------------------\n\nTITLE: Retrieving OIDC Issuer URL\nDESCRIPTION: Gets the OIDC issuer URL from the AKS cluster and saves it to an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-deploy-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport AKS_OIDC_ISSUER=\"$(az aks show --name \"${CLUSTER_NAME}\" \\\n    --resource-group \"${RESOURCE_GROUP}\" \\\n    --query \"oidcIssuerProfile.issuerUrl\" \\\n    --output tsv)\"\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview Extension in Azure CLI\nDESCRIPTION: Commands to install and update the aks-preview CLI extension required for node resource group lockdown functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-resource-group-lockdown.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Install the aks-preview extension\naz extension add --name aks-preview\n\n# Update to the latest version of the aks-preview extension\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Deploying Virtual Network Bicep Template with Azure CLI\nDESCRIPTION: This Azure CLI command deploys the Bicep template for creating the virtual network. It specifies the resource group and the Bicep file to use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group <resource-group> --template-file virtualNetwork.bicep\n```\n\n----------------------------------------\n\nTITLE: Finding Service Port for Interception\nDESCRIPTION: kubectl command to get the port number of a specific service for interception.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-telepresence-aks.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get service store-front -ojsonpath='{.spec.ports[0].port}'\n```\n\n----------------------------------------\n\nTITLE: AKS Cluster Configuration Presets Table\nDESCRIPTION: A markdown table defining the available configuration presets in the Azure portal for AKS clusters. This table compares the settings across four preset types: Production Standard, Dev/Test, Production Economy, and Production Enterprise.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quotas-skus-regions.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Preset                      | Description                                                            |\n|-----------------------------|------------------------------------------------------------------------|\n| Production Standard         | Best for most applications serving production traffic with AKS recommended best practices. |\n| Dev/Test                    | Best for developing new workloads or testing existing workloads. |\n| Production Economy          | Best for serving production traffic in a cost conscious way if your workloads can tolerate interruptions. |\n| Production Enterprise       | Best for serving production traffic with rigorous permissions and hardened security. |\n```\n\n----------------------------------------\n\nTITLE: Checking persistent volume details\nDESCRIPTION: Command to verify the capacity of the persistent volume has been increased after the resize operation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pv\n```\n\n----------------------------------------\n\nTITLE: Debugging FIPS Node with Interactive Session\nDESCRIPTION: Kubernetes command to start an interactive debugging session on a FIPS-enabled node using kubectl debug.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl debug node/aks-fipsnp-12345678-vmss000000 -it --image=mcr.microsoft.com/dotnet/runtime-deps:6.0\n```\n\n----------------------------------------\n\nTITLE: Verifying Pods with OSM Sidecar Injection\nDESCRIPTION: This command checks that the httpbin pods are running and have the Envoy sidecar proxy injected, which is required for the Open Service Mesh functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods -n httpbin\n```\n\n----------------------------------------\n\nTITLE: Cordoning Nodes in AKS Cluster\nDESCRIPTION: This command marks specified nodes as unschedulable, preventing new pods from being added to them. Multiple node names can be provided in a space-separated list.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl cordon aks-nodepool1-31721111-vmss000000 aks-nodepool1-31721111-vmss000001 aks-nodepool1-31721111-vmss000002\n```\n\n----------------------------------------\n\nTITLE: Non-interactive Authentication Configuration\nDESCRIPTION: Commands for setting up non-interactive authentication using kubelogin with specific format parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-authentication-microsoft-entra-id.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --format azure\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\nkubelogin convert-kubeconfig\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookstore Service in Kubernetes\nDESCRIPTION: Creates a Service, ServiceAccount, and two Deployments (v1 and v2) for the bookstore service. The deployments use the openservicemesh/bookstore:latest-main image and set environment variables for communication with the bookwarehouse service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\n# Create bookstore Service\napiVersion: v1\nkind: Service\nmetadata:\n  name: bookstore\n  namespace: bookstore\n  labels:\n    app: bookstore\nspec:\n  ports:\n    - port: 14001\n      name: bookstore-port\n  selector:\n    app: bookstore\n\n---\n# Create bookstore Service Account\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: bookstore\n  namespace: bookstore\n\n---\n# Create bookstore-v1 Deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bookstore-v1\n  namespace: bookstore\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: bookstore\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: bookstore\n        version: v1\n    spec:\n      serviceAccountName: bookstore\n      nodeSelector:\n        kubernetes.io/arch: amd64\n        kubernetes.io/os: linux\n      containers:\n        - name: bookstore\n          image: openservicemesh/bookstore:latest-main\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 14001\n              name: web\n          command: [\"/bookstore\"]\n          args: [\"--port\", \"14001\"]\n          env:\n            - name: BOOKWAREHOUSE_NAMESPACE\n              value: bookwarehouse\n            - name: IDENTITY\n              value: bookstore-v1\n\n---\n# Create bookstore-v2 Deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bookstore-v2\n  namespace: bookstore\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: bookstore\n      version: v2\n  template:\n    metadata:\n      labels:\n        app: bookstore\n        version: v2\n    spec:\n      serviceAccountName: bookstore\n      nodeSelector:\n        kubernetes.io/arch: amd64\n        kubernetes.io/os: linux\n      containers:\n        - name: bookstore\n          image: openservicemesh/bookstore:latest-main\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 14001\n              name: web\n          command: [\"/bookstore\"]\n          args: [\"--port\", \"14001\"]\n          env:\n            - name: BOOKWAREHOUSE_NAMESPACE\n              value: bookwarehouse\n            - name: IDENTITY\n              value: bookstore-v2\n```\n\n----------------------------------------\n\nTITLE: Viewing Node Availability Zones\nDESCRIPTION: Lists the Kubernetes nodes and their corresponding availability zones to verify that the MongoDB cluster is distributed across multiple zones for high availability.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get node -o custom-columns=Name:.metadata.name,Zone:\".metadata.labels.topology\\.kubernetes\\.io/zone\"\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure HPC Cache Instance\nDESCRIPTION: Command to create an HPC Cache instance with specified cache size, location, subnet, SKU, and name. The creation process can take up to 20 minutes to complete.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz hpc-cache create \\\n  --resource-group $RESOURCE_GROUP \\\n  --cache-size-gb \"3072\" \\\n  --location eastus \\\n  --subnet $SUBNET_ID \\\n  --sku-name \"Standard_2G\" \\\n  --name MyHpcCache\n```\n\n----------------------------------------\n\nTITLE: Login to Tenant A and Set Subscription\nDESCRIPTION: Commands to authenticate with Tenant A and set the active subscription using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-cross-tenant.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set environment variable\nTENANT_A_ID=<tenant-id>\n\naz login --tenant $TENANT_A_ID\n```\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set environment variable\nTENANT_A_SUBSCRIPTION_ID=<subscription-id>\n\n# Log in to your Tenant A subscription\naz account set --subscription $TENANT_A_SUBSCRIPTION_ID\n```\n\n----------------------------------------\n\nTITLE: Applying NGINX Ingress Controller Configuration with Kubectl\nDESCRIPTION: Bash command to create NGINX ingress controller resources using kubectl apply with the configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nginx-public-controller.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Key Vault Access Policy - Terraform\nDESCRIPTION: Terraform configuration to assign Get permission for secrets to the user-assigned identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_8\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"azurerm_key_vault_access_policy\" \"this\" {\n  key_vault_id = var.key_vault_id\n  tenant_id    = azurerm_user_assigned_identity.this.tenant_id\n  object_id    = azurerm_user_assigned_identity.this.principal_id\n\n  secret_permissions = [\n    \"Get\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Configuration Properties\nDESCRIPTION: Quarkus application properties for Kubernetes deployment with service account and secret mappings\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\n# Kubernetes configurations\n%prod.quarkus.kubernetes.deployment-target=kubernetes\n%prod.quarkus.kubernetes.service-type=load-balancer\n%prod.quarkus.kubernetes.labels.\"azure.workload.identity/use\"=true\n%prod.quarkus.kubernetes.service-account=<service-account-name>\n%prod.quarkus.kubernetes.env.mapping.AZURE_CLIENT_ID.from-secret=<secret-name>\n%prod.quarkus.kubernetes.env.mapping.AZURE_CLIENT_ID.with-key=AZURE_POSTGRESQL_CLIENTID\n%prod.quarkus.kubernetes.env.mapping.AZURE_POSTGRESQL_HOST.from-secret=<secret-name>\n%prod.quarkus.kubernetes.env.mapping.AZURE_POSTGRESQL_HOST.with-key=AZURE_POSTGRESQL_HOST\n%prod.quarkus.kubernetes.env.mapping.AZURE_POSTGRESQL_PORT.from-secret=<secret-name>\n%prod.quarkus.kubernetes.env.mapping.AZURE_POSTGRESQL_PORT.with-key=AZURE_POSTGRESQL_PORT\n%prod.quarkus.kubernetes.env.mapping.AZURE_POSTGRESQL_DATABASE.from-secret=<secret-name>\n%prod.quarkus.kubernetes.env.mapping.AZURE_POSTGRESQL_DATABASE.with-key=AZURE_POSTGRESQL_DATABASE\n%prod.quarkus.kubernetes.env.mapping.AZURE_POSTGRESQL_USERNAME.from-secret=<secret-name>\n%prod.quarkus.kubernetes.env.mapping.AZURE_POSTGRESQL_USERNAME.with-key=AZURE_POSTGRESQL_USERNAME\n```\n\n----------------------------------------\n\nTITLE: AKS Cluster Components Upgrade Table\nDESCRIPTION: Markdown table showing detailed information about different AKS components that require upgrades, including upgrade frequency, maintenance support, and operation methods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Component name|Frequency of upgrade|Planned Maintenance supported|Supported operation methods|Documentation link|\n|--|--|--|--|--|\n|Cluster Kubernetes version (minor) upgrade|Roughly every three months|Yes|Automatic, Manual|[Upgrade an AKS cluster][upgrade-cluster]|\n|Cluster Kubernetes version upgrade to supported patch version|Approximately weekly. To determine the latest applicable version in your region, see the [AKS release tracker][release-tracker]|Yes|Automatic, Manual|[Upgrade an AKS cluster][upgrade-cluster]|\n|Node image version upgrade|**Linux**: weekly<br>**Windows**: monthly|Yes|Automatic, Manual|[AKS node image upgrade][node-image-upgrade]|\n|Security patches and hot fixes for node images|As-necessary|||[AKS node security patches][node-security-patches]|\n```\n\n----------------------------------------\n\nTITLE: Assigning Key Vault Permissions for RBAC-Enabled Vault\nDESCRIPTION: This command assigns the 'Key Vault Crypto User' role to the managed identity for an RBAC-enabled key vault, granting decrypt and encrypt permissions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_21\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create --role \"Key Vault Crypto User\" --assignee-object-id $IDENTITY_OBJECT_ID --assignee-principal-type \"ServicePrincipal\" --scope $KEYVAULT_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Cloning and Deploying Sample AKS Store Demo Application\nDESCRIPTION: Git commands to clone the sample AKS store demo application and kubectl command to deploy it to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-telepresence-aks.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Azure-Samples/aks-store-demo.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd aks-store-demo\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f aks-store-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Aborting AKS Cluster Operation using Azure CLI\nDESCRIPTION: This Azure CLI command demonstrates how to abort a long-running operation on an entire AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-abort-operations.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks operation-abort \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Adding Dedicated Host Node Pool\nDESCRIPTION: Adds a new node pool using dedicated hosts to an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-dedicated-hosts.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --cluster-name MyManagedCluster --name agentpool3 --resource-group MyResourceGroup --node-count 1 --host-group-id <id> --node-vm-size Standard_D2s_v3\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview Extension\nDESCRIPTION: Commands to register or update the aks-preview extension using Azure CLI, required for node initialization taints feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n# Register the aks-preview extension\naz extension add --name aks-preview\n\n# Update the aks-preview extension\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Scaling Down AKS Node Pool\nDESCRIPTION: This command scales down the previously created node pool to 5 nodes, which will result in 15 nodes being deallocated due to the Deallocate scale-down mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-down-mode.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool scale --node-count 5 --name nodepool2 --cluster-name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Verifying IngressBackend Configuration for OSM\nDESCRIPTION: This command verifies that the OSM IngressBackend object was successfully deployed, which is required to allow external traffic into the mesh.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nkubectl get ingressbackend -n httpbin\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Control Plane Pod Status\nDESCRIPTION: Command to verify that the Istio control plane (istiod) pods are running successfully in the aks-istio-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n aks-istio-system\n```\n\n----------------------------------------\n\nTITLE: Consumer Deployment YAML Configuration\nDESCRIPTION: YAML configuration for deploying the consumer app with workload identity, including resource limits and container specifications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: $AQS_TARGET_DEPLOYMENT\n  namespace: $AQS_TARGET_NAMESPACE\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: aqs-reader\n  template:\n    metadata:\n      labels:\n        app: aqs-reader\n        azure.workload.identity/use: \"true\"\n    spec:\n      serviceAccountName: $SERVICE_ACCOUNT\n      containers:\n      - name: keda-queue-reader\n        image: ${AZURE_CONTAINER_REGISTRY_NAME}.azurecr.io/aws2azure/aqs-consumer\n        imagePullPolicy: Always\n        env:\n        - name: AZURE_QUEUE_NAME\n          value: $AZURE_QUEUE_NAME\n        - name: AZURE_STORAGE_ACCOUNT_NAME\n          value: $AZURE_STORAGE_ACCOUNT_NAME\n        - name: AZURE_TABLE_NAME\n          value: $AZURE_TABLE_NAME\n        resources:\n          requests:\n            memory: \"64Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"128Mi\"\n            cpu: \"500m\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials\nDESCRIPTION: Retrieves the credentials for the AKS cluster using Azure CLI. This command allows you to access the cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-cli.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Applying a Kubernetes Pod Manifest\nDESCRIPTION: This command attempts to create a pod in the Kubernetes cluster using the specified YAML manifest file. It's used to test policy enforcement by trying to deploy pods with different security contexts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-policy.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nginx-privileged.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting up Service Connector for AKS-PostgreSQL Integration\nDESCRIPTION: Configures service connection between AKS cluster and Azure PostgreSQL using Microsoft Entra Workload ID with Service Connector for passwordless authentication\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_25\n\nLANGUAGE: azurecli\nCODE:\n```\n# Register the Service Connector and Kubernetes Configuration resource providers\naz provider register --namespace Microsoft.ServiceLinker --wait\naz provider register --namespace Microsoft.KubernetesConfiguration --wait\n\n# Install the Service Connector passwordless extension\naz extension add --name serviceconnector-passwordless --upgrade --allow-preview true\n\n# Retrieve the AKS cluster and Azure SQL Server resource IDs\nexport AKS_CLUSTER_RESOURCE_ID=$(az aks show \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --query id \\\n    --output tsv)\nexport AZURE_POSTGRESQL_RESOURCE_ID=$(az postgres flexible-server show \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $DB_SERVER_NAME \\\n    --query id \\\n    --output tsv)\n\n# Create a user-assigned managed identity used for workload identity\nexport USER_ASSIGNED_IDENTITY_NAME=workload-identity-uami\naz identity create \\\n    --resource-group ${RESOURCE_GROUP_NAME} \\\n    --name ${USER_ASSIGNED_IDENTITY_NAME}\n\n# Retrieve the user-assigned managed identity resource ID\nexport UAMI_RESOURCE_ID=$(az identity show \\\n    --resource-group ${RESOURCE_GROUP_NAME} \\\n    --name ${USER_ASSIGNED_IDENTITY_NAME} \\\n    --query id \\\n    --output tsv)\n\n# Create a service connection between your AKS cluster and your PostgreSQL database using Microsoft Entra Workload ID\naz aks connection create postgres-flexible \\\n    --connection akspostgresconn \\\n    --kube-namespace $AKS_NS \\\n    --source-id $AKS_CLUSTER_RESOURCE_ID \\\n    --target-id $AZURE_POSTGRESQL_RESOURCE_ID/databases/$DB_NAME \\\n    --workload-identity $UAMI_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Implementing Namespace Segmentation in Kubernetes\nDESCRIPTION: This network policy restricts cross-namespace traffic by allowing only ingress from pods within the same namespace (team-a). It's designed for multi-tenant environments to isolate workloads between different teams.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: restrict-cross-namespace\n  namespace: team-a\nspec:\n  podSelector: {}\n  policyTypes:\n    - Ingress\n  ingress:\n    - from:\n        - namespaceSelector:\n            matchLabels:\n              name: team-a\n```\n\n----------------------------------------\n\nTITLE: Verifying NGINX Ingress Controller Status with Kubectl\nDESCRIPTION: Bash command to verify the status of the NGINX ingress controller using kubectl get command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nginxingresscontroller -n <IngressControllerName>\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Azure Resource Group\nDESCRIPTION: Azure CLI command to delete the resource group and all associated resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_19\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name $RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: Configuring Load Balancer Idle Timeout in AKS using Azure CLI\nDESCRIPTION: This Azure CLI command updates an AKS cluster to set the load balancer idle timeout to 45 minutes. This command allows administrators to adjust the TCP connection timeout period to accommodate long-running operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/improve-network-fault-tolerance-in-aks-using-tcp-keepalive.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --load-balancer-idle-timeout 45\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace for Kafka Exporter\nDESCRIPTION: This command creates a dedicated Kubernetes namespace for deploying the Kafka Exporter, which provides enhanced Prometheus metrics for consumer lag monitoring and topic-level insights.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace azmon-kafka-exporter\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume Claim for Azure Blob Storage\nDESCRIPTION: YAML configuration for creating a 5GB persistent volume claim with ReadWriteMany access using the azureblob-nfs-premium storage class.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: azure-blob-storage\nspec:\n  accessModes:\n  - ReadWriteMany\n  storageClassName: azureblob-nfs-premium\n  resources:\n    requests:\n      storage: 5Gi\n```\n\n----------------------------------------\n\nTITLE: Querying OSM Envoy Metrics in Azure Monitor\nDESCRIPTION: This query retrieves Envoy proxy metrics from the OSM mesh for services in the default namespace, showing how to access OSM metrics from Azure Monitor logs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\nInsightsMetrics\n|     where Name contains \"envoy\"\n|     extend t=parse_json(Tags)\n|     where t.namespace == \"default\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster\nDESCRIPTION: Command to configure kubectl to connect to an existing AKS cluster using Azure CLI credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --name <aks-cluster-name> --resource-group <resource-group-name>\n```\n\n----------------------------------------\n\nTITLE: Verifying OSM Components Status with kubectl\nDESCRIPTION: Checks the status of OSM components (deployments, pods, and services) using kubectl commands. These commands filter resources based on the app.kubernetes.io/name=openservicemesh.io label.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get deployments -n kube-system --selector app.kubernetes.io/name=openservicemesh.io\nkubectl get pods -n kube-system --selector app.kubernetes.io/name=openservicemesh.io\nkubectl get services -n kube-system --selector app.kubernetes.io/name=openservicemesh.io\n```\n\n----------------------------------------\n\nTITLE: Exposing NGINX Deployment with Separate IPv4 and IPv6 LoadBalancers in AKS <v1.27\nDESCRIPTION: These kubectl commands expose the NGINX deployment using two separate LoadBalancer services for IPv4 and IPv6. This approach is necessary for AKS versions prior to 1.27, which don't support dual-stack LoadBalancer services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl expose deployment nginx --name=nginx-ipv4 --port=80 --type=LoadBalancer'\nkubectl expose deployment nginx --name=nginx-ipv6 --port=80 --type=LoadBalancer --overrides='{\"spec\":{\"ipFamilies\": [\"IPv6\"]}}'\n```\n\n----------------------------------------\n\nTITLE: Deleting ClusterRole and ClusterRoleBinding in Kubernetes\nDESCRIPTION: These commands delete the previously created ClusterRole and ClusterRoleBinding from the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_17\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete -f psp-deny-privileged-clusterrole.yaml\nkubectl delete -f psp-deny-privileged-clusterrolebinding.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS cluster configuration using Azure CLI\nDESCRIPTION: Azure CLI command to get the configuration of an existing AKS cluster and save it to a JSON file. This is used before adding custom CA certificates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-certificate-authority.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz rest --method get \\\n  --url \"/subscriptions/<subscription-id>/resourceGroups/<resource-grou-name>/providers/Microsoft.ContainerService/managedClusters/<cluster-name>?api-version=2025-01-01\" > body.json\n```\n\n----------------------------------------\n\nTITLE: Limiting Dapr Extension to Specific Nodes with Bicep\nDESCRIPTION: Bicep code to configure Dapr installation to run only on nodes in a specific zone using nodeSelector.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_6\n\nLANGUAGE: bicep\nCODE:\n```\nproperties: {\n  configurationSettings: {\n    'global.clusterType': 'managedclusters'\n    'global.ha.enabled': true\n    'global.nodeSelector.kubernetes\\.io/zone': 'us-east-1c'\n    \n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials\nDESCRIPTION: Gets the credentials for the AKS cluster using the az aks get-credentials command, enabling kubectl commands to target the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_22\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Key Vault Scope with Azure CLI\nDESCRIPTION: Command to obtain and store the Azure Key Vault resource scope ID for role assignments.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nAKV_SCOPE=$(az keyvault show --name <AZURE_AKV_RESOURCE_NAME> --query id --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Applying NGINX Ingress Controller with Static IP\nDESCRIPTION: Bash command to create NGINX ingress controller resources with static IP using kubectl apply with the configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nginx-staticip-controller.yaml\n```\n\n----------------------------------------\n\nTITLE: Assigning AcrPull Role to Kubelet Identity\nDESCRIPTION: Assigns the AcrPull role to the kubelet identity to allow pulling images from Azure Container Registry.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nexport KUBELET_IDENTITY=$(az aks show -g $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --output tsv --query identityProfile.kubeletidentity.objectId)\naz role assignment create \\\n--assignee ${KUBELET_IDENTITY} \\\n--role \"AcrPull\" \\\n--scope ${MY_ACR_REGISTRY_ID} \\\n--output table\n```\n\n----------------------------------------\n\nTITLE: Creating Windows Server Annual Channel Node Pool (PowerShell)\nDESCRIPTION: Azure PowerShell command to create a new Windows Server Annual Channel node pool in an AKS cluster, specifying the OS type and OS SKU.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/windows-annual-channel.md#2025-04-21_snippet_3\n\nLANGUAGE: PowerShell\nCODE:\n```\nNew-AzAksNodePool -ResourceGroupName $RESOURCE_GROUP_NAME `\n    -ClusterName $CLUSTER_NAME `\n    -VmSetType VirtualMachineScaleSets `\n    -OsType Windows `\n    -OsSKU WindowsAnnual `\n    -Name $NODE_POOL_NAME\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace for MongoDB\nDESCRIPTION: Creates a new Kubernetes namespace for the MongoDB cluster deployment using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace ${AKS_MONGODB_NAMESPACE} --dry-run=client --output yaml | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Update AKS Cluster from LoadBalancer to UserAssignedNATGateway\nDESCRIPTION: Updates cluster in BYO vnet scenario to use userAssignedNATGateway. Requires pre-associating NAT gateway with the workload subnet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/egress-outboundtype.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group <resourceGroup> --name <clusterName> --outbound-type userAssignedNATGateway\n```\n\n----------------------------------------\n\nTITLE: Prompting for Application Developer User Principal Name\nDESCRIPTION: This command prompts the user to enter the User Principal Name (UPN) for application developers and stores it in a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\necho \"Please enter the UPN for application developers: \" && read AAD_DEV_UPN\n```\n\n----------------------------------------\n\nTITLE: Producer Code for Amazon SQS in AWS\nDESCRIPTION: Python code snippet that uses the boto3 library to send messages to an Amazon SQS queue in AWS. It authenticates using the IAM identity associated with the EKS pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nimport boto3\n# other imports removed for brevity\nsqs_queue_url = \"https://<region>.amazonaws.com/<queueid>/source-queue.fifo\"\nsqs_queue_client = boto3.client(\"sqs\", region_name=\"<region>\")    \nresponse = sqs_client.send_message(\n    QueueUrl = sqs_queue_url,\n    MessageBody = 'messageBody1',\n    MessageGroupId='messageGroup1')\n```\n\n----------------------------------------\n\nTITLE: Registering the ACI Provider with Azure CLI\nDESCRIPTION: Command to register the Microsoft.ContainerInstance provider with your Azure subscription if it's not already registered.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerInstance\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for MongoDB on AKS Deployment\nDESCRIPTION: Sets environment variables used throughout the deployment process, including resource names, locations, and identifiers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nrandom=$(echo $RANDOM | tr '[0-9]' '[a-z]')\nexport MY_LOCATION=australiaeast\nexport MY_RESOURCE_GROUP_NAME=myResourceGroup-rg-$(echo $MY_LOCATION)\nexport MY_ACR_REGISTRY=mydnsrandomname$(echo $random)\nexport MY_IDENTITY_NAME=ua-identity-123\nexport MY_KEYVAULT_NAME=vault-$(echo $random)-kv\nexport MY_CLUSTER_NAME=cluster-aks\nexport SERVICE_ACCOUNT_NAME=mongodb\nexport SERVICE_ACCOUNT_NAMESPACE=mongodb\nexport AKS_MONGODB_NAMESPACE=mongodb\nexport AKS_MONGODB_SECRETS_NAME=cluster-aks-mongodb-secrets\nexport AKS_MONGODB_CLUSTER_NAME=cluster-aks-mongodb\nexport AKS_MONGODB_SECRETS_ENCRYPTION_KEY=cluster-aks-mongodb-secrets-mongodb-encryption-key\nexport AKS_AZURE_SECRETS_NAME=cluster-aks-azure-secrets\nexport AKS_MONGODB_BACKUP_STORAGE_ACCOUNT_NAME=mongodbsa$(echo $random)\nexport AKS_MONGODB_BACKUP_STORAGE_CONTAINER_NAME=backups\n```\n\n----------------------------------------\n\nTITLE: Testing the Deployed Application\nDESCRIPTION: Uses curl to test the deployed wasmCloud application by sending an HTTP request to the forwarded port.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncurl http://localhost:8080\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for AKS Kafka Deployment\nDESCRIPTION: Defines environment variables for resource names, sizing, and configuration parameters used throughout the deployment process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nexport RESOURCE_GROUP_NAME=\"rg-kafka\"  \nexport LOCATION=\"canadacentral\"  \nexport VNET_NAME=\"vnet-aks-kafka\"  \nexport SUBNET_NAME=\"node-subnet\"  \nexport AKS_CLUSTER_NAME=\"aks-kafka-cluster\"  \nexport AKS_TIER=standard\nexport NAT_GATEWAY_NAME=\"nat-kafka\"  \nexport ADDRESS_SPACE=\"10.31.0.0/20\"  \nexport SUBNET_PREFIX=\"10.31.0.0/21\"  \nexport SYSTEM_NODE_COUNT_MIN=3\nexport SYSTEM_NODE_COUNT_MAX=6\nexport SYSTEM_NODE_VM_SIZE=\"Standard_D4ds_v5\"   \nexport KAFKA_NODE_COUNT_MIN=1  \nexport KAFKA_NODE_COUNT_MAX=3 \nexport KAFKA_NODE_COUNT=1\nexport KAFKA_NODE_VM_SIZE=\"Standard_D16ds_v5\"  \nexport LOG_ANALYTICS_WORKSPACE_NAME=\"law-monitoring\"  \nexport DIAGNOSTIC_SETTINGS_NAME=\"aks-diagnostic-settings\"  \nexport ACR_NAME=\"aksacr123\"  \nexport ACR_SKU=\"Premium\"  \nexport USER_ASSIGNED_IDENTITY_NAME=\"uami-aks\"  \nexport KUBERNETES_VERSION=\"1.30.0\"  \nexport AAD_ADMIN_GROUP_OBJECT_IDS=\"<your-admin-group-object-id>\"    \nexport AAD_TENANT_ID=\"<your-tenant-id>\"  \nexport GRAFANA_NAME=\"grafana-kafka-aks\"  \nexport PROMETHEUS_WORKSPACE_NAME=\"prometheus-aks\"\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Scheduled Backup Status with kubectl\nDESCRIPTION: Command to describe a scheduled backup resource and view its configuration and status. This verifies that the scheduled backup is properly configured.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe scheduledbackup $BACKUP_SCHEDULED_NAME \\\n    --context $AKS_PRIMARY_CLUSTER_NAME \\\n    --namespace $PG_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Defining KAITO Fine-tuning Workspace in YAML\nDESCRIPTION: YAML configuration for a KAITO fine-tuning workspace, specifying the Phi-3-mini model, qLoRA tuning method, input dataset, and output image details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-fine-tune.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kaito.sh/v1alpha1\nkind: Workspace\nmetadata:\n     name: workspace-tuning-phi-3-mini\nresource:\n     instanceType: \"Standard_NC24ads_A100_v4\"\n     labelSelector:\n          matchLabels:\n                apps: tuning-phi-3-mini-pycoder\ntuning:\n     preset:\n         name: phi3mini128kinst\n  method: qlora\n  input:\n      urls: \n          - \"myDatasetURL\"\n  output:\n      image: \"$ACR_NAME.azurecr.io/$REPOSITORY:$VERSION\"\n      imagePushSecret: myregistrysecret\n```\n\n----------------------------------------\n\nTITLE: Configure AKS Load Balancer Idle Timeout\nDESCRIPTION: Azure CLI command to modify the idle timeout settings for the AKS cluster's load balancer to optimize SNAT port usage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --load-balancer-idle-timeout 4\n```\n\n----------------------------------------\n\nTITLE: Deleting remaining HTTP application routing resources using kubectl\nDESCRIPTION: This kubectl command demonstrates how to delete a specific configmap related to the old HTTP application routing add-on from the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-migration.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete configmaps addon-http-application-routing-nginx-configuration --namespace kube-system\n```\n\n----------------------------------------\n\nTITLE: Configure Service Bus and Identity in Tenant B\nDESCRIPTION: Commands to create and configure Azure Service Bus namespace, queue, and managed identity in Tenant B.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-cross-tenant.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set environment variable\nSERVICEBUS_NAME=sb-crosstenantdemo-$RANDOM\n\n# Create a new service bus namespace and and return the service bus hostname\nSERVICEBUS_HOSTNAME=$(az servicebus namespace create \\\n  --name $SERVICEBUS_NAME \\\n  --resource-group $RESOURCE_GROUP \\\n  --disable-local-auth \\\n  --query serviceBusEndpoint \\\n  --output tsv | sed -e 's/https:\\/\\///' -e 's/:443\\///')\n\n# Create a new queue in the service bus namespace\naz servicebus queue create \\\n  --name myqueue \\\n  --namespace $SERVICEBUS_NAME \\\n  --resource-group $RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: Deploying Extra VPA Recommender Configuration in YAML\nDESCRIPTION: YAML configuration for deploying an extra Recommender in the kube-system namespace with specific resource limits and security contexts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1 \nkind: Deployment \nmetadata: \n  name: extra-recommender \n  namespace: kube-system \nspec: \n  replicas: 1 \n  selector: \n    matchLabels: \n      app: extra-recommender \n  template: \n    metadata: \n      labels: \n        app: extra-recommender \n    spec: \n      serviceAccountName: vpa-recommender \n      securityContext: \n        runAsNonRoot: true \n        runAsUser: 65534\n      containers: \n      - name: recommender \n        image: registry.k8s.io/autoscaling/vpa-recommender:0.13.0 \n        imagePullPolicy: Always \n        args: \n          - --recommender-name=extra-recommender \n        resources: \n          limits: \n            cpu: 200m \n            memory: 1000Mi \n          requests: \n            cpu: 50m \n            memory: 500Mi \n        ports: \n        - name: prometheus \n          containerPort: 8942\n```\n\n----------------------------------------\n\nTITLE: Cloning and Checking Out the Sample Application in Bash\nDESCRIPTION: This snippet demonstrates how to clone the sample application repository and checkout a specific tag in Bash. The sample application shows how to use Open Liberty with AKS and Azure SQL Database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Azure-Samples/open-liberty-on-aks.git\ncd open-liberty-on-aks\nexport BASE_DIR=$PWD\ngit checkout 20241107\n```\n\n----------------------------------------\n\nTITLE: Configuring kubectl Credentials for AKS\nDESCRIPTION: Commands to set up kubectl authentication and verify cluster connectivity by retrieving node information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl get nodes -o wide\n```\n\n----------------------------------------\n\nTITLE: Throttling Limits Table for AKS Resource Provider APIs\nDESCRIPTION: A markdown table defining the throttling limits for AKS resource provider APIs, including bucket sizes, refill rates, and scopes for different API requests. This uses the token bucket throttling algorithm to limit certain AKS resource provider APIs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quotas-skus-regions.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| API request | Bucket size | Refill rate | Scope |\n|---|---|---|---|\n| LIST ManagedClusters | 500 requests | 1 requests / 1 second | Subscription |\n| LIST ManagedClusters | 60 requests | 1 request / 1 second | ResourceGroup |\n| PUT AgentPool | 20 requests | 1 request / 1 minute | AgentPool |\n| PUT ManagedCluster | 20 requests | 1 request / 1 minute | ManagedCluster |\n| GET ManagedCluster | 60 requests | 1 request / 1 second | Managed Cluster |\n| GET Operation Status | 200 requests | 2 requests / 1 second | Subscription |\n| All Other APIs | 60 requests | 1 request / 1 second | Subscription |\n```\n\n----------------------------------------\n\nTITLE: Deploy Secret Sync Pod\nDESCRIPTION: Kubernetes pod manifest that triggers the synchronization of secrets from Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: secrets-store-sync-productpage\n  namespace: aks-istio-ingress\nspec:\n  containers:\n    - name: busybox\n      image: mcr.microsoft.com/oss/busybox/busybox:1.33.1\n      command:\n        - \"/bin/sleep\"\n        - \"10\"\n      volumeMounts:\n      - name: secrets-store01-inline\n        mountPath: \"/mnt/secrets-store\"\n        readOnly: true\n  volumes:\n    - name: secrets-store01-inline\n      csi:\n        driver: secrets-store.csi.k8s.io\n        readOnly: true\n        volumeAttributes:\n          secretProviderClass: \"productpage-credential-spc\"\n```\n\n----------------------------------------\n\nTITLE: Creating an Unprivileged Pod YAML Manifest\nDESCRIPTION: This YAML manifest defines a pod without privileged security context, which is expected to be allowed by the Azure Policy initiative.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-policy.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-unprivileged\nspec:\n  containers:\n    - name: nginx-unprivileged\n      image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring SecretProviderClass for Kubernetes Secret Sync\nDESCRIPTION: Defines a SecretProviderClass to sync mounted content with a Kubernetes secret using YAML configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: azure-sync\nspec:\n  provider: azure\n  secretObjects:                              # [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects\n  - data:\n    - key: username                           # data field to populate\n      objectName: foo1                        # name of the mounted content to sync; this could be the object name or the object alias\n    secretName: foosecret                     # name of the Kubernetes secret object\n    type: Opaque                              # type of Kubernetes secret object (for example, Opaque, kubernetes.io/tls)\n```\n\n----------------------------------------\n\nTITLE: Deploying Windows-based StatefulSet with Azure Files in AKS\nDESCRIPTION: Command to deploy a Windows-based StatefulSet that utilizes an Azure File share via the CSI driver, fetching the manifest from GitHub.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azurefile-csi-driver/master/deploy/example/windows/statefulset.yaml\n```\n\n----------------------------------------\n\nTITLE: Debugging AKS Node with Interactive Session\nDESCRIPTION: Run a deployment with an interactive session on a node in the FIPS-enabled node pool using the kubectl debug command. This allows for verification of FIPS cryptographic libraries.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl debug node/aks-np-12345678-vmss000000 -it --image=mcr.microsoft.com/dotnet/runtime-deps:6.0\n```\n\n----------------------------------------\n\nTITLE: Setting API Key in Azure Key Vault\nDESCRIPTION: Commands to store the PMM API key in Azure Key Vault and refresh the ExternalSecret resource\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks-mongodb.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz keyvault secret set --vault-name $MY_KEYVAULT_NAME --name PMM-SERVER-API-KEY --value $API_KEY --output none\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate es ${AKS_MONGODB_SECRETS_NAME} force-sync=$(date +%s) --overwrite -n ${AKS_MONGODB_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Verifying Tags on AKS Cluster using Azure CLI\nDESCRIPTION: Command to verify that tags have been properly applied to an AKS cluster by querying the cluster's tag information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query '[tags]'\n```\n\n----------------------------------------\n\nTITLE: Getting AKS OpenID Connect Issuer URL\nDESCRIPTION: Command to retrieve the AKS OIDC issuer URL and export it as an environment variable, which is required for creating the federated identity credential.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nexport AKS_OIDC_ISSUER=$(az aks show --resource-group $AZURE_RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --query \"oidcIssuerProfile.issuerUrl\" \\\n    -o tsv)\n```\n\n----------------------------------------\n\nTITLE: GMSA Role Binding Configuration\nDESCRIPTION: YAML configuration for binding the GMSA role to the default service account.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: allow-default-svc-account-read-on-aks-gmsa-spec\n  namespace: default\nsubjects:\n- kind: ServiceAccount\n  name: default\n  namespace: default\nroleRef:\n  kind: ClusterRole\n  name: aks-gmsa-role\n  apiGroup: rbac.authorization.k8s.io\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Managed Identity for MongoDB on AKS\nDESCRIPTION: Creates a user-assigned managed identity for External Secrets Operator to access MongoDB passwords in Azure Key Vault using the az identity create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz identity create --name $MY_IDENTITY_NAME --resource-group $MY_RESOURCE_GROUP_NAME --output none\nexport MY_IDENTITY_NAME_ID=$(az identity show --name $MY_IDENTITY_NAME -g $MY_RESOURCE_GROUP_NAME --query id -o tsv)\nexport MY_IDENTITY_NAME_PRINCIPAL_ID=$(az identity show --name $MY_IDENTITY_NAME -g $MY_RESOURCE_GROUP_NAME --query principalId -o tsv)\nexport MY_IDENTITY_NAME_CLIENT_ID=$(az identity show --name $MY_IDENTITY_NAME -g $MY_RESOURCE_GROUP_NAME --query clientId -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Node Pool using Azure CLI\nDESCRIPTION: Command to delete a node pool from an AKS cluster using Azure CLI. Requires resource group name, cluster name, and node pool name as parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/delete-node-pool.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool delete \\\n    --resource-group <resource-group-name> \\\n    --cluster-name <cluster-name> \\\n    --name <node-pool-name>\n```\n\n----------------------------------------\n\nTITLE: Listing Nodes in an AKS Cluster using kubectl\nDESCRIPTION: This kubectl command retrieves and displays a list of nodes in the AKS cluster. It's used to verify successful access to the cluster after applying Conditional Access policies.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/access-control-managed-azure-ad.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Application\nDESCRIPTION: Kubernetes command to deploy the AKS store demo application from a remote manifest.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/sample-manifests/docs/app-routing/aks-store-deployments-and-services.yaml -n aks-store\n```\n\n----------------------------------------\n\nTITLE: Removing Existing Istio CRDs in Bash\nDESCRIPTION: Command to clean up existing Istio Custom Resource Definitions that may remain from previous installations, which helps prevent conflicts with the add-on installation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete crd $(kubectl get crd -A | grep \"istio.io\" | awk '{print $1}')\n```\n\n----------------------------------------\n\nTITLE: Cleanup Resource Group\nDESCRIPTION: Removes the fleet resource and related resources by deleting the resource group. Does not affect AKS clusters in different resource groups.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/upgrade-hub-cluster-type.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete -n $RG\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group for AKS Deployment\nDESCRIPTION: Creates a resource group named myResourceGroup in the East US region where the AKS cluster and network resources will be deployed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Creating NSG Rule for RDP Access using Azure PowerShell\nDESCRIPTION: This snippet creates a Network Security Group rule to allow RDP access to the AKS cluster Windows Server nodes using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\n$CLUSTER_RG = (Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster).nodeResourceGroup\n$NSG_NAME = (Get-AzNetworkSecurityGroup -ResourceGroupName $CLUSTER_RG).Name\n\n$nsgRuleParams = @{\n    Name                     = 'tempRDPAccess'\n    Access                   = 'Allow'\n    Direction                = 'Inbound'\n    Priority                 = 100\n    SourceAddressPrefix      = 'Internet'\n    SourcePortRange          = '*'\n    DestinationAddressPrefix = '*'\n    DestinationPortRange     = '3389'\n    Protocol                 = 'Tcp'\n    Description              = 'Temporary RDP access to Windows nodes'\n}\nGet-AzNetworkSecurityGroup -Name $NSG_NAME -ResourceGroupName $CLUSTER_RG | Add-AzNetworkSecurityRuleConfig @nsgRuleParams | Set-AzNetworkSecurityGroup\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Azure CLI and kubectl\nDESCRIPTION: Commands to connect to an AKS cluster using Azure CLI to get credentials and kubectl to verify the connection.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-telepresence-aks.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks get-credentials --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_AKS_CLUSTER_NAME\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl cluster-info\n```\n\n----------------------------------------\n\nTITLE: Terraform Variables Definition\nDESCRIPTION: Variable declarations for configuring the AKS cluster deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-terraform.md#2025-04-21_snippet_2\n\nLANGUAGE: Terraform\nCODE:\n```\n:::code language=\"Terraform\" source=\"~/terraform_samples/quickstart/101-aks-cluster-windows/variables.tf\":::\n```\n\n----------------------------------------\n\nTITLE: Updating VirtualService to Shift Traffic to Bookstore v2 in Istio\nDESCRIPTION: This Bash command applies a new VirtualService configuration that shifts 100% of the traffic from bookstore v1 to v2 by adjusting weight attributes for each destination subset.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\n# Create bookstore virtual service\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: bookstore-virtualservice\n  namespace: bookstore\nspec:\n  hosts:\n  - bookstore\n  http:\n  - route:\n    - destination:\n        host: bookstore\n        subset: v1\n      weight: 0\n    - destination:\n        host: bookstore\n        subset: v2\n      weight: 100\nEOF\n```\n\n----------------------------------------\n\nTITLE: Reimaging AKS Cluster Nodes in Azure CLI\nDESCRIPTION: This snippet reimages all existing nodes in an AKS cluster. This step is necessary after enabling network isolation features to ensure they take effect across all nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks upgrade --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --node-image-only\n```\n\n----------------------------------------\n\nTITLE: Applying Ratify Verification Configuration to AKS Cluster\nDESCRIPTION: An Azure CLI command to apply the Ratify verification configuration YAML file to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f verify-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure Key Vault Provider Metrics\nDESCRIPTION: Uses kubectl port-forward to access metrics for the Azure Key Vault provider over localhost.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_6\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl port-forward -n kube-system ds/aks-secrets-store-provider-azure 8898:8898 & curl localhost:8898/metrics\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Version of a Member Cluster using Azure CLI\nDESCRIPTION: This command retrieves the current Kubernetes version for a specified AKS cluster using the az aks show command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-automation.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show \\\n  --resource-group $GROUP \\\n  --name $CLUSTER \\\n  --query currentKubernetesVersion\n```\n\n----------------------------------------\n\nTITLE: Creating Zone Aligned Node Pools\nDESCRIPTION: Commands to create zone-aligned user nodepools, with each nodepool pinned to a specific availability zone for lower latency requirements.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/availability-zones-overview.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# # Add three new zone aligned User Nodepools, two nodes in each\naz aks nodepool add --resource-group example-rg --cluster-name example-cluster --name userpool-x  --node-count 2 --zones 1\naz aks nodepool add --resource-group example-rg --cluster-name example-cluster --name userpool-y  --node-count 2 --zones 2\naz aks nodepool add --resource-group example-rg --cluster-name example-cluster --name userpool-z  --node-count 2 --zones 3\n```\n\n----------------------------------------\n\nTITLE: Accessing Kubernetes Resources with Microsoft Entra Authentication\nDESCRIPTION: This kubectl command demonstrates accessing pods across all namespaces using Microsoft Entra authentication. The user will be prompted to authenticate via a web browser with Microsoft Entra credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_14\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Applying ClusterResourcePlacement Configuration\nDESCRIPTION: Command to apply the ClusterResourcePlacement configuration with toleration using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f cluster-resource-placement-toleration.yml\n```\n\n----------------------------------------\n\nTITLE: Creating Cilium Network Policy with FQDN Filtering\nDESCRIPTION: Defines a Cilium Network Policy that allows egress traffic only to *.bing.com FQDN, while blocking other domains. The policy includes DNS resolution rules and specific endpoint selectors.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"cilium.io/v2\"\nkind: CiliumNetworkPolicy\nmetadata:\n  name: \"allow-bing-fqdn\"\nspec:\n  endpointSelector:\n    matchLabels:\n      app: demo-container\n  egress:\n    - toEndpoints:\n      - matchLabels:\n          \"k8s:io.kubernetes.pod.namespace\": kube-system\n          \"k8s:k8s-app\": kube-dns\n      toPorts:\n        - ports:\n           - port: \"53\"\n             protocol: ANY\n          rules:\n            dns:\n              - matchPattern: \"*.bing.com\"\n    - toFQDNs:\n      - matchPattern: \"*.bing.com\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Application Routing with Draft for AKS\nDESCRIPTION: These commands update Draft to use Application Routing, prompting for DNS name and Azure Key Vault-stored certificate.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/draft.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks draft update\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks draft update --destination /Workspaces/ContosoAir\n```\n\n----------------------------------------\n\nTITLE: Listing Fleet Instances\nDESCRIPTION: Commands to list all Kubernetes Fleet instances and filter for potentially affected instances from 2022-2023.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-migrate-preview-to-ga-fleets.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz resource list \\\n    --resource-type 'Microsoft.ContainerService/fleets'\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz resource list \\\n    --resource-type 'Microsoft.ContainerService/fleets' \\\n    --query \"[?contains(createdTime, '2023') || contains(createdTime, '2022')]\"\n```\n\n----------------------------------------\n\nTITLE: Refreshing Microsoft.ContainerService Registration in Azure CLI\nDESCRIPTION: Command to refresh the registration of the Microsoft.ContainerService resource provider after the feature flag is registered. This ensures the service provider recognizes the new feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resources for AKS Deployment using Azure CLI\nDESCRIPTION: This Azure CLI script creates a resource group, an Azure Container Registry, and an Azure Kubernetes Service cluster with monitoring enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/devops-pipeline.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a resource group\naz group create --name myapp-rg --location eastus\n\n# Create a container registry\naz acr create --resource-group myapp-rg --name mycontainerregistry --sku Basic\n\n# Create a Kubernetes cluster\naz aks create \\\n    --resource-group myapp-rg \\\n    --name myapp \\\n    --node-count 1 \\\n    --enable-addons monitoring \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Installing wasmCloud Platform with Helm\nDESCRIPTION: Uses Helm to install the wasmCloud platform, including NATS, wadm, and the wasmCloud Operator, into the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install \\\n     wasmcloud-platform \\\n     --values https://raw.githubusercontent.com/wasmCloud/wasmcloud/main/charts/wasmcloud-platform/values.yaml \\\n     oci://ghcr.io/wasmcloud/charts/wasmcloud-platform:0.1.2 \\\n     --dependency-update\n```\n\n----------------------------------------\n\nTITLE: Extended Location Parameter Specification in ARM Template\nDESCRIPTION: JSON configuration for specifying the Extended Zone location in an ARM template using the extendedLocation parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/extended-zones.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"extendedLocation\": {\n    \"name\": \"<extended-zone-id>\",\n    \"type\": \"EdgeZone\",\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Approver Group in Microsoft Entra ID\nDESCRIPTION: Creates an 'approver' group in Microsoft Entra ID using the Azure CLI. This group will have permissions to approve or deny just-in-time access requests.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\nAPPROVER_ID=$(az ad group create \\\n    --display-name approver \\\n    --mail-nickname approver \\\n    --query id \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview Extension (Azure CLI)\nDESCRIPTION: These snippets show how to install and update the AKS preview extension for Azure CLI, which is required for using service tags with API server authorized IP ranges.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Creating Windows Server Annual Channel Node Pool (Azure CLI)\nDESCRIPTION: Azure CLI command to create a new Windows Server Annual Channel node pool in an AKS cluster, specifying the OS type, OS SKU, and Kubernetes version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/windows-annual-channel.md#2025-04-21_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --os-type Windows \\\n    --os-sku WindowsAnnual \\\n    --kubernetes-version 1.29\n    --name $NODE_POOL_NAME \\\n    --node-count 1\n```\n\n----------------------------------------\n\nTITLE: Disabling Image Integrity in AKS\nDESCRIPTION: An Azure CLI command to disable the Image Integrity feature on an AKS cluster by updating the cluster configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz aks update --resource-group myResourceGroup --name MyManagedCluster --disable-image-integrity\n```\n\n----------------------------------------\n\nTITLE: Updating existing AKS cluster with custom CA certificates using Azure CLI\nDESCRIPTION: Azure CLI command to update an existing AKS cluster by adding custom CA trust certificates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-certificate-authority.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group <resource-group-name> \\\n    --name <cluster-name> \\\n    --custom-ca-trust-certificates <path-to-ca-file>\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster Tiers\nDESCRIPTION: Azure CLI commands to update pricing tiers of existing AKS clusters, including transitions between Free, Standard, and Premium tiers with support plan configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/free-standard-pricing-tiers.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Update an existing cluster from the Standard tier to the Free tier\n\naz aks update --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --tier free\n\n# Update an existing cluster from the Free tier to the Standard tier\n\naz aks update --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --tier standard\n```\n\nLANGUAGE: azurecli\nCODE:\n```\n# Update an existing cluster to the Premium tier\naz aks update --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --tier premium --k8s-support-plan AKSLongTermSupport\n\n# Update an existing cluster to from Premium tier to Free or Standard tier\naz aks update --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --tier [free|standard] --k8s-support-plan KubernetesOfficial\n```\n\n----------------------------------------\n\nTITLE: Deleting a Specific Pod to Simulate Primary Node Failure\nDESCRIPTION: This command deletes the valkey-masters-0 Pod to simulate a failure of a primary Valkey node, which will trigger the failover process within the Valkey cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-valkey-cluster.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod valkey-masters-0\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Configuration and Tenant ID\nDESCRIPTION: Retrieves pod name dynamically and verifies the correct tenant ID configuration using kubectl commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-cross-tenant.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n# Get the dynamically generated pod name\nPOD_NAME=$(kubectl get po --selector job-name=myproducer -o jsonpath='{.items[0].metadata.name}')\n\n# Verify the tenant ID environment variable is set for Tenant B\nkubectl describe pod $POD_NAME | grep AZURE_TENANT_ID\n```\n\n----------------------------------------\n\nTITLE: Deploying Application to AKS Cluster\nDESCRIPTION: Deploys the sample application to the AKS cluster using a YAML manifest file with kubectl apply command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/aks-store-all-in-one.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js app with workload identity\nDESCRIPTION: YAML configuration showing the workload identity labels required for the Node.js application deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nlabels:\n  app: node\n  azure.workload.identity/use: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Installing External Secrets Operator\nDESCRIPTION: Adds and updates Helm repository for External Secrets Operator, then installs it in the MongoDB namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add external-secrets https://charts.external-secrets.io\nhelm repo update\n\nhelm install external-secrets \\\nexternal-secrets/external-secrets \\\n--namespace ${AKS_MONGODB_NAMESPACE} \\\n--create-namespace \\\n--set installCRDs=true \\\n--wait \\\n--set nodeSelector.\"kubernetes\\.azure\\.com/agentpool\"=mongodbpool\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster for Network Isolation in Azure CLI\nDESCRIPTION: This snippet updates an existing AKS cluster to enable network isolation features. It specifies the bootstrap artifact source and container registry resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --bootstrap-artifact-source Cache --bootstrap-container-registry-resource-id ${REGISTRY_ID} --outbound-type none\n```\n\n----------------------------------------\n\nTITLE: Cloning Azure Application Repository\nDESCRIPTION: Command to clone the Azure sample repository containing the completed application code for AWS to Azure web application migration\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/azure-samples/aks-web-application-replicate-from-aws ./aws-to-azure-web-app-workshop\n```\n\n----------------------------------------\n\nTITLE: Viewing Pod Logs in AKS\nDESCRIPTION: Command to retrieve and follow logs from the AI service pod in the AKS cluster. This helps verify that the pod has initialized successfully and is ready to handle requests.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl logs --selector app=ai-service -f\n```\n\n----------------------------------------\n\nTITLE: Querying Azure SQL Database to Create Schema for Sample Application\nDESCRIPTION: SQL commands to create tables and insert initial data for a sample coffee application. Creates COFFEE and SEQUENCE tables, and inserts a starting value in the SEQUENCE table.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE COFFEE (ID NUMERIC(19) NOT NULL, NAME VARCHAR(255) NULL, PRICE FLOAT(32) NULL, PRIMARY KEY (ID));\nCREATE TABLE SEQUENCE (SEQ_NAME VARCHAR(50) NOT NULL, SEQ_COUNT NUMERIC(28) NULL, PRIMARY KEY (SEQ_NAME));\nINSERT INTO SEQUENCE VALUES ('SEQ_GEN',0);\n```\n\n----------------------------------------\n\nTITLE: Deploying AI Service Using kubectl\nDESCRIPTION: Azure CLI command to deploy the AI service using kubectl apply command\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f ai-service.yaml\n```\n\n----------------------------------------\n\nTITLE: Monitoring Store-Front Service External IP\nDESCRIPTION: This command watches the store-front service to obtain its external IP address when it becomes available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_9\n\nLANGUAGE: console\nCODE:\n```\nkubectl get service store-front --watch\n```\n\n----------------------------------------\n\nTITLE: Sample HTML Output\nDESCRIPTION: Example output showing successful connection to the demo application running on the virtual node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_16\n\nLANGUAGE: output\nCODE:\n```\n<html>\n<head>\n  <title>Welcome to Azure Container Instances!</title>\n</head>\n[...]\n```\n\n----------------------------------------\n\nTITLE: Checking Available Istio Upgrades in AKS\nDESCRIPTION: This command uses the Azure CLI to check which Istio revisions are available for upgrade in the specified AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks mesh get-upgrades --resource-group $RESOURCE_GROUP --name $CLUSTER\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Persistent Volume for NFS\nDESCRIPTION: YAML configuration for creating a Kubernetes persistent volume that maps to the Azure NetApp Files NFS volume. This configuration specifies storage capacity, access modes, and NFSv3 mount options.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-nfs\nspec:\n  capacity:\n    storage: 100Gi\n  accessModes:\n    - ReadWriteMany\n  mountOptions:\n    - vers=3\n  nfs:\n    server: 10.0.0.4\n    path: /myfilepath2\n```\n\n----------------------------------------\n\nTITLE: Creating Azure App Configuration Extension with Custom Namespace\nDESCRIPTION: This Azure CLI command creates an Azure App Configuration extension for an AKS cluster with a custom namespace. It specifies the cluster type, name, resource group, extension name, type, enables auto-upgrade for minor versions, sets the scope to cluster, and defines a custom release namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration-settings.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n    --cluster-name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --name appconfigurationkubernetesprovider \\\n    --extension-type Microsoft.AppConfiguration \\\n    --auto-upgrade-minor-version true \\\n    --scope cluster \\\n    --release-namespace custom-namespace\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Application URL with Azure CLI\nDESCRIPTION: This script retrieves the public IP address of a deployed AKS application. It checks the status of the pods and waits until they are ready before extracting the service IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nruntime=\"5 minutes\"\nendtime=$(date -ud \"$runtime\" +%s)\nwhile [[ $(date -u +%s) -le $endtime ]]\ndo\n   STATUS=$(kubectl get pods -l app=store-front -o 'jsonpath={..status.conditions[?(@.type==\"Ready\")].status}')\n   echo $STATUS\n   if [ \"$STATUS\" == 'True' ]\n   then\n      export IP_ADDRESS=$(kubectl get service store-front --output 'jsonpath={..status.loadBalancer.ingress[0].ip}')\n      echo \"Service IP Address: $IP_ADDRESS\"\n      break\n   else\n      sleep 10\n   fi\ndone\n```\n\n----------------------------------------\n\nTITLE: Executing CSI Migration Script with Parameters\nDESCRIPTION: Command to execute the CreatePV.sh script with necessary parameters for migrating volumes from in-tree to CSI drivers. It requires specifying namespace, source storage class, target CSI storage class, and time range for migration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n./CreatePV.sh <namespace> <sourceIntreeStorageClass> <targetCSIStorageClass> <startTimestamp> <endTimestamp>\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster Using Azure CLI\nDESCRIPTION: Command to delete an Azure Kubernetes Service (AKS) cluster to avoid unnecessary Azure charges after testing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks delete --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Cloning the Azure Application Repository for AWS to Azure EDW Migration\nDESCRIPTION: Command to clone the GitHub repository containing the completed application code for the event-driven workflow migration from AWS to Azure. The repository includes all necessary code and configuration files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Azure-Samples/aks-event-driven-replicate-from-aws ./aws-to-azure-edw-workshop\n```\n\n----------------------------------------\n\nTITLE: Bypassing API Breaking Changes Validation for AKS Upgrade\nDESCRIPTION: This Azure CLI command demonstrates how to bypass validation for API breaking changes when upgrading an AKS cluster. It uses the 'enable-force-upgrade' flag and sets a time window for the bypass using 'upgrade-override-until'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/stop-cluster-upgrade-api-breaking-changes.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz aks upgrade --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME --kubernetes-version $KUBERNETES_VERSION --enable-force-upgrade --upgrade-override-until 2023-10-01T13:00:00Z\n```\n\n----------------------------------------\n\nTITLE: Disabling Azure RBAC on AKS Cluster using Azure CLI\nDESCRIPTION: This snippet demonstrates how to remove Azure RBAC for Kubernetes Authorization from an existing AKS cluster using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks update --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --disable-azure-rbac\n```\n\n----------------------------------------\n\nTITLE: Verifying Access Logs for Httpbin Pod in Azure CLI\nDESCRIPTION: Retrieves and displays the access logs for the 'httpbin' pod's Istio proxy container.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-telemetry.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl logs -l app=httpbin -c istio-proxy\n```\n\n----------------------------------------\n\nTITLE: Aborting AKS Cluster Operation using REST API\nDESCRIPTION: This REST API endpoint enables you to abort a long-running operation on an entire AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-abort-operations.md#2025-04-21_snippet_8\n\nLANGUAGE: rest\nCODE:\n```\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedclusters/{resourceName}/abort\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Custom Message of the Day\nDESCRIPTION: Create a new AKS cluster with a custom Message of the Day for Linux nodes using the az aks create command with the --message-of-the-day parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create --cluster-name myAKSCluster --resource-group myResourceGroup --message-of-the-day ./newMOTD.txt\n```\n\n----------------------------------------\n\nTITLE: Cloning and Checking Out the Sample Application in PowerShell\nDESCRIPTION: This snippet demonstrates how to clone the sample application repository and checkout a specific tag in PowerShell. The sample application shows how to use Open Liberty with AKS and Azure SQL Database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_12\n\nLANGUAGE: powershell\nCODE:\n```\ngit clone https://github.com/Azure-Samples/open-liberty-on-aks.git\ncd open-liberty-on-aks\n$Env:BASE_DIR=$PWD.Path\ngit checkout 20241107\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Node Public IPs\nDESCRIPTION: Creates a new AKS cluster with public IPs enabled for each node in the node pool\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group <resourceGroup> \\\n    --name <aksClusterName> \\\n    --location <region> \\\n    --enable-node-public-ip \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Checking Internal Load Balancer Service Status\nDESCRIPTION: Azure CLI command to view the status and IP address of the deployed internal load balancer service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/internal-lb.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get service internal-app\n```\n\n----------------------------------------\n\nTITLE: Inspecting PostgreSQL Node Distribution Across Availability Zones with kubectl and jq\nDESCRIPTION: Command to retrieve AKS node details and display their availability zones using kubectl with jq for formatting. This validates that PostgreSQL is properly distributed across multiple zones for high availability.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes \\\n    --context $AKS_PRIMARY_CLUSTER_NAME \\\n    --namespace $PG_NAMESPACE \\\n    --output json | jq '.items[] | {node: .metadata.name, zone: .metadata.labels.\"failure-domain.beta.kubernetes.io/zone\"}'\n```\n\n----------------------------------------\n\nTITLE: Adding a Namespace to OSM Mesh\nDESCRIPTION: This command adds the 'httpbin' namespace to the Open Service Mesh using the OSM CLI, enabling mesh capabilities for services in this namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nosm namespace add httpbin\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Cluster with Bicep Template using PowerShell\nDESCRIPTION: Deploys an AKS cluster using a Bicep template file with specified parameters including cluster name, DNS prefix, admin username and SSH key.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_7\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzResourceGroupDeployment -ResourceGroupName myResourceGroup -TemplateFile ./main.bicep -clusterName=<cluster-name> -dnsPrefix=<dns-prefix> -linuxAdminUsername=<linux-admin-username> -sshRSAPublicKey=\"<ssh-key>\"\n```\n\n----------------------------------------\n\nTITLE: Disabling KMS on AKS Cluster\nDESCRIPTION: This command disables KMS encryption on an existing AKS cluster, releasing the key vault association. This is necessary when changing key vault modes or migrating to a different key vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_26\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group MyResourceGroup --disable-azure-keyvault-kms\n```\n\n----------------------------------------\n\nTITLE: Installing AKS-Preview Azure CLI Extension\nDESCRIPTION: Install the aks-preview extension and update it to the latest version using Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-machines-node-pools.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Delete AKS Service Principal using Azure CLI\nDESCRIPTION: Command to delete the service principal associated with an AKS cluster using Azure CLI. This snippet queries the cluster's servicePrincipalProfile.clientId and deletes it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad sp delete --id $(az aks show \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --query servicePrincipalProfile.clientId \\\n  --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Fixing Storage Account Access Permissions\nDESCRIPTION: Optional commands to fix permissions issues with storage account access. These commands elevate the user's permissions to Storage Blob Data Owner if the previous container creation fails due to permission issues.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport USER_ID=$(az ad signed-in-user show --query id --output tsv)\n\nexport STORAGE_ACCOUNT_PRIMARY_RESOURCE_ID=$(az storage account show \\\n    --name $PG_PRIMARY_STORAGE_ACCOUNT_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --query \"id\" \\\n    --output tsv)\n\naz role assignment list --scope $STORAGE_ACCOUNT_PRIMARY_RESOURCE_ID --output table\n\naz role assignment create \\\n    --assignee-object-id $USER_ID \\\n    --assignee-principal-type User \\\n    --scope $STORAGE_ACCOUNT_PRIMARY_RESOURCE_ID \\\n    --role \"Storage Blob Data Owner\" \\\n    --output tsv\n```\n\n----------------------------------------\n\nTITLE: Retrieving Inference Service IP Address\nDESCRIPTION: This command retrieves the IP address of the deployed inference service and stores it in an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kaito-custom-inference-model.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nexport SERVICE_IP=$(kubectl get svc workspace-custom-llm -o jsonpath='{.spec.clusterIP}')\n```\n\n----------------------------------------\n\nTITLE: Installing a Specific Version of Azure App Configuration Extension with Bicep\nDESCRIPTION: Bicep template to install a specific version of the Azure App Configuration extension on AKS, along with the command to deploy it using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration.md#2025-04-21_snippet_6\n\nLANGUAGE: bicep\nCODE:\n```\n@description('The name of the Managed Cluster resource.')\nparam clusterName string\n\nresource existingManagedCluster 'Microsoft.ContainerService/managedClusters@2024-02-01' existing = {\n  name: clusterName\n}\n\nresource appConfigExtension 'Microsoft.KubernetesConfiguration/extensions@2022-11-01' = {\n  name: 'appconfigurationkubernetesprovider'\n  scope: existingManagedCluster\n  properties: {\n    autoUpgradeMinorVersion: false\n    configurationSettings: {\n      'global.clusterType': 'managedclusters'\n    }\n    extensionType: 'microsoft.appconfiguration'\n    version: '2.1.0'\n  }\n}\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create \\\n  --resource-group myResourceGroup \\\n  --template-file ./my-bicep-file-path.bicep \\\n  --parameters clusterName=myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Applying ClusterResourcePlacement using kubectl\nDESCRIPTION: This bash command applies the ClusterResourcePlacement resource using kubectl apply command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/cluster-resource-override.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f cluster-resource-placement.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: Creates a new Azure resource group named 'myResourceGroup' in the 'eastus' location using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Configuration Resource Provider Registration\nDESCRIPTION: Verifies if the Microsoft.KubernetesConfiguration resource provider is registered with your Azure subscription.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider list --query \"[?contains(namespace,'Microsoft.KubernetesConfiguration')]\" -o table\n```\n\n----------------------------------------\n\nTITLE: Windows Container Application Deployment YAML\nDESCRIPTION: Kubernetes manifest for deploying an ASP.NET application in Windows containers, including deployment and LoadBalancer service configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-cli.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sample\n  labels:\n    app: sample\nspec:\n  replicas: 1\n  template:\n    metadata:\n      name: sample\n      labels:\n        app: sample\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": windows\n      containers:\n      - name: sample\n        image: mcr.microsoft.com/dotnet/framework/samples:aspnetapp\n        resources:\n          limits:\n            cpu: 1\n            memory: 800M\n        ports:\n          - containerPort: 80\n  selector:\n    matchLabels:\n      app: sample\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: sample\nspec:\n  type: LoadBalancer\n  ports:\n  - protocol: TCP\n    port: 80\n  selector:\n    app: sample\n```\n\n----------------------------------------\n\nTITLE: Deleting Kubernetes Pod Using kubectl\nDESCRIPTION: Command to remove individual pods from a Kubernetes cluster when Confidential Containers preview was enabled on an existing cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod pod-name\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS cluster with Static Egress Gateway enabled\nDESCRIPTION: Command to create a new AKS cluster with the Static Egress Gateway feature enabled. This is required before creating gateway node pools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-static-egress-gateway.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create -n <cluster-name> -g <resource-group> --enable-static-egress-gateway\n```\n\n----------------------------------------\n\nTITLE: Creating Node Pool with Tags using Azure CLI\nDESCRIPTION: Command to add a new node pool to an AKS cluster with specific tags for A/B testing and cost center allocation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name tagnodepool \\\n    --node-count 1 \\\n    --tags abtest=a costcenter=5555 \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Azure PowerShell\nDESCRIPTION: Commands to configure kubectl to connect to your AKS cluster using Azure PowerShell, and verify the connection by listing all nodes in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-portal.md#2025-04-21_snippet_1\n\nLANGUAGE: azurepowershell\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Removing AKS Resources with Azure PowerShell\nDESCRIPTION: This cmdlet removes an Azure resource group and all its associated resources, including an AKS cluster. This is the recommended way to clean up all AKS-related resources in one command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_9\n\nLANGUAGE: PowerShell\nCODE:\n```\nRemove-AzResourceGroup -Name myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Verifying Managed Ingress Creation with kubectl\nDESCRIPTION: Uses kubectl get command to check the status of the created Ingress resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get ingress -n aks-store\n```\n\n----------------------------------------\n\nTITLE: Member Cluster Taint Configuration\nDESCRIPTION: YAML configuration showing how to apply a NoSchedule taint to a member cluster to prevent future resource placement.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-eviction-disruption.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: MemberCluster\nmetadata:\n  name: member-cluster-02\nspec:\n  identity:\n    name: fleet-member-agent-cluster-2\n    kind: ServiceAccount\n    namespace: fleet-system\n    apiGroup: \"\"\n  taints:                   \n    - key: any-key\n      value: any-value\n      effect: NoSchedule\n```\n\n----------------------------------------\n\nTITLE: Creating Storage Container for PostgreSQL WAL and Backups\nDESCRIPTION: Creates a storage container within the previously created storage account to store Write Ahead Logs (WAL) and regular PostgreSQL on-demand and scheduled backups.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\naz storage container create \\\n    --name $PG_STORAGE_BACKUP_CONTAINER_NAME \\\n    --account-name $PG_PRIMARY_STORAGE_ACCOUNT_NAME \\\n    --auth-mode login\n```\n\n----------------------------------------\n\nTITLE: Retrieving OSM Mesh Configuration with kubectl\nDESCRIPTION: Fetches the configuration of the OSM mesh using kubectl. This command retrieves the MeshConfig resource named osm-mesh-config from the kube-system namespace in YAML format.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get meshconfig osm-mesh-config -n kube-system -o yaml\n```\n\n----------------------------------------\n\nTITLE: Private Load Balancer Configuration\nDESCRIPTION: YAML configuration for Kafka access using internal load balancer with private IP addresses within an Azure virtual network.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nlisteners:\n  - name: private-lb\n    port: 9094\n    type: loadbalancer\n    tls: true\n    configuration: \n      bootstrap:\n        annotations:\n          service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n      brokers:\n        - broker: 0\n          annotations:\n            service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n        - broker: 1\n          annotations:\n            service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n        - broker: 2\n          annotations:\n            service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Finding Pod Node Assignment\nDESCRIPTION: Retrieves information about the running pod, including its IP address and the node where it's scheduled, which is needed to identify the corresponding Cilium agent.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get po -n demo --sort-by=\"{spec.nodeName}\" -o wide\n```\n\n----------------------------------------\n\nTITLE: Configure Key Vault Access\nDESCRIPTION: Sets up access policies and stores certificates in Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nOBJECT_ID=$(az aks show --resource-group $RESOURCE_GROUP --name $CLUSTER --query 'addonProfiles.azureKeyvaultSecretsProvider.identity.objectId' -o tsv | tr -d '\\r')\nCLIENT_ID=$(az aks show --resource-group $RESOURCE_GROUP --name $CLUSTER --query 'addonProfiles.azureKeyvaultSecretsProvider.identity.clientId')\nTENANT_ID=$(az keyvault show --resource-group $RESOURCE_GROUP --name $AKV_NAME --query 'properties.tenantId')\n\naz keyvault set-policy --name $AKV_NAME --object-id $OBJECT_ID --secret-permissions get list\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up WebLogic Deploy Tooling Installer\nDESCRIPTION: Bash command to remove the WebLogic Deploy Tooling zip file after installation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nrm weblogic-deploy.zip\n```\n\n----------------------------------------\n\nTITLE: Stopping an AKS Node Pool using Azure CLI\nDESCRIPTION: Use the az aks nodepool stop command to stop a running AKS node pool. This helps optimize compute costs when the node pool is not needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/start-stop-nodepools.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool stop --resource-group myResourceGroup --cluster-name myAKSCluster --nodepool-name testnodepool\n```\n\n----------------------------------------\n\nTITLE: Setting Node Pool Weight in YAML\nDESCRIPTION: This YAML snippet demonstrates how to set a weight for a node pool, which influences the scheduling priority when multiple node pools are available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n  # Priority given to the node pool when the scheduler considers which to select. Higher weights indicate higher priority when comparing node pools.\n  # Specifying no weight is equivalent to specifying a weight of 0.\n  weight: 10\n```\n\n----------------------------------------\n\nTITLE: Adding a User Node Pool to an AKS Cluster\nDESCRIPTION: Adds a new node pool to an existing AKS cluster with 3 nodes. This demonstrates how to expand your cluster with additional node pools that can have different configurations from the system node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --name $NODE_POOL_NAME \\\n    --node-count 3\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Azure SQL Database Configuration\nDESCRIPTION: This snippet sets environment variables for the Azure SQL Database server name, admin credentials, and database name. These variables are used in subsequent commands for database creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/jakartaee/create-azure-sql-database-passwordless.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport AZURESQL_SERVER_NAME=\"myazuresql20130213\"\nexport AZURESQL_ADMIN_USER=\"azureuser\"\nexport AZURESQL_ADMIN_PASSWORD=\"<your-password>\"\nexport DATABASE_NAME=\"mysingledatabase20230213\"\n```\n\n----------------------------------------\n\nTITLE: Example Output of Kafka Topic Verification\nDESCRIPTION: Sample output showing the created Kafka topic with 4 partitions and 3 replicas, indicating successful creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_16\n\nLANGUAGE: output\nCODE:\n```\nNAME         CLUSTER             PARTITIONS   REPLICATION FACTOR   READY  \ntest-topic   kafka-aks-cluster   4            3                    True\n```\n\n----------------------------------------\n\nTITLE: Adding Node Pool with Confidential Containers to Existing AKS Cluster\nDESCRIPTION: Azure CLI command to add a new node pool with Confidential Containers enabled to an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --resource-group myResourceGroup --name nodepool2 –-cluster-name myAKSCluster --node-count 2 --os-sku AzureLinux --node-vm-size Standard_DC8as_cc_v5 --workload-runtime KataCcIsolation\n```\n\n----------------------------------------\n\nTITLE: GMSA Credential Specification Configuration\nDESCRIPTION: YAML configuration for defining GMSA credential specifications with Active Directory configurations and domain settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: windows.k8s.io/v1\nkind: GMSACredentialSpec\nmetadata:\n  name: aks-gmsa-spec\ncredspec:\n  ActiveDirectoryConfig:\n    GroupManagedServiceAccounts:\n    - Name: $GMSA_ACCOUNT_USERNAME\n      Scope: $NETBIOS_DOMAIN_NAME\n    - Name: $GMSA_ACCOUNT_USERNAME\n      Scope: $DNS_DOMAIN_NAME\n    HostAccountConfig:\n      PluginGUID: '{CCC2A336-D7F3-4818-A213-272B7924213E}'\n      PortableCcgVersion: \"1\"\n      PluginInput: \"ObjectId=$MANAGED_ID;SecretUri=$SECRET_URI\"\n  CmsPlugins:\n - ActiveDirectory\n  DomainJoinConfig:\n    DnsName: $DNS_DOMAIN_NAME\n    DnsTreeName: $DNS_ROOT_DOMAIN_NAME\n    Guid:  $AD_DOMAIN_OBJECT_GUID\n    MachineAccountName: $GMSA_ACCOUNT_USERNAME\n    NetBiosName: $NETBIOS_DOMAIN_NAME\n    Sid: $GMSA_SID\n```\n\n----------------------------------------\n\nTITLE: Disabling SSH for New AKS Node Pool\nDESCRIPTION: Add a new node pool to an AKS cluster with SSH disabled using the az aks nodepool add command with the --ssh-access disabled argument.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --cluster-name myManagedCluster --name mynodepool --resource-group myResourceGroup --ssh-access disabled\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group for AKS\nDESCRIPTION: Creates a new Azure resource group using Azure CLI for hosting the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-authentication-microsoft-entra-id.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location centralus\n```\n\n----------------------------------------\n\nTITLE: Starting AKS Cluster using PowerShell\nDESCRIPTION: Command to start a stopped AKS cluster using PowerShell cmdlet. Restores previous control plane state and node count.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/start-stop-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nStart-AzAksCluster -Name myAKSCluster -ResourceGroupName myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Cluster Information in Azure CLI\nDESCRIPTION: This snippet retrieves detailed information about an AKS cluster, which can be used to identify the current ACR resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME}\n```\n\n----------------------------------------\n\nTITLE: Refreshing the Microsoft.ContainerService Resource Provider Registration\nDESCRIPTION: This command refreshes the registration of the Microsoft.ContainerService resource provider after enabling the feature flag, making the new features available for use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Creating Azure App Configuration Extension with Custom Replica Count\nDESCRIPTION: This Azure CLI command creates an Azure App Configuration extension for an AKS cluster with a custom replica count of 3. It specifies the cluster type, name, resource group, extension name, type, and enables auto-upgrade for minor versions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n    --cluster-name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --name appconfigurationkubernetesprovider \\\n    --extension-type Microsoft.AppConfiguration \\\n    --auto-upgrade-minor-version true \\\n    --configuration-settings \"replicaCount=3\"\n```\n\n----------------------------------------\n\nTITLE: Viewing GPU Workload Logs\nDESCRIPTION: Command to view the logs of the TensorFlow GPU job pod, which should show GPU device detection and the training progress with accuracy metrics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_12\n\nLANGUAGE: console\nCODE:\n```\nkubectl logs samples-tf-mnist-demo-smnr6\n```\n\n----------------------------------------\n\nTITLE: Applying ClusterResourcePlacement with kubectl in Azure Kubernetes Fleet Manager\nDESCRIPTION: This Bash command applies a ClusterResourcePlacement YAML file to the Kubernetes cluster using kubectl. This is used to distribute resources according to the defined placement rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/resource-override.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f cluster-resource-placement.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving MongoDB Admin Credentials\nDESCRIPTION: Retrieves detailed information about the MongoDB secrets object, which contains the encoded credentials for various MongoDB users including the admin user.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe secret ${AKS_MONGODB_SECRETS_NAME} -n ${AKS_MONGODB_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster with Initialization Taint\nDESCRIPTION: Updates an existing AKS cluster to add an initialization taint using Azure CLI. The taint applies to all node pools in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--name $CLUSTER_NAME \\\n--node-init-taints \"sku=gpu:NoSchedule\"\n```\n\n----------------------------------------\n\nTITLE: Listing Pods Across All Namespaces in AKS Cluster\nDESCRIPTION: This command displays all pods in the cluster, including their status, IP addresses, and the nodes they are running on. It helps verify that pods have been successfully moved to the new node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -o wide -A\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Kubeconfig\nDESCRIPTION: Gets the kubeconfig for the AKS cluster, enabling kubectl commands to be run against the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials \\\n    --resource-group $RG_NAME \\\n    --name $AKS_NAME\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific AKS Operation Status using Azure CLI\nDESCRIPTION: This Azure CLI command demonstrates how to query the status of a specific operation on an AKS cluster using its operation ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-abort-operations.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks operation show \\\n    --resource-group myResourceGroup \\\n    --name myCluster \\\n    --operation-id \"<operation-id>\"\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for AKS Cluster\nDESCRIPTION: Command to create an Azure resource group that will contain the AKS cluster using the previously defined environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name $AZURE_RESOURCE_GROUP --location $AZURE_LOCATION\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kubernetes Cluster\nDESCRIPTION: This command retrieves the status of deployed pods in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_8\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Disabling Azure Hybrid Benefit on AKS Cluster (Azure CLI)\nDESCRIPTION: This snippet demonstrates how to disable Azure Hybrid Benefit on an AKS cluster using Azure CLI. It updates the specified cluster to disable the Azure Hybrid Benefit feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hybrid-benefit.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nRG_NAME='myResourceGroup'\nCLUSTER='myAKSCluster'\n\naz aks update --resource-group $RG_NAME --name $CLUSTER --disable-ahub\n```\n\n----------------------------------------\n\nTITLE: Updating Dapr Version using Bicep\nDESCRIPTION: Sets the Dapr extension version using Bicep configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_16\n\nLANGUAGE: bicep\nCODE:\n```\nproperties: {\n  version: '1.12.0'\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Subnet Information for AKS Cluster using Azure CLI\nDESCRIPTION: This snippet retrieves the subnet ID used by the Windows Server node pool in an AKS cluster using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nCLUSTER_RG=$(az aks show --resource-group myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv)\nVNET_NAME=$(az network vnet list --resource-group $CLUSTER_RG --query [0].name -o tsv)\nSUBNET_NAME=$(az network vnet subnet list --resource-group $CLUSTER_RG --vnet-name $VNET_NAME --query [0].name -o tsv)\nSUBNET_ID=$(az network vnet subnet show --resource-group $CLUSTER_RG --vnet-name $VNET_NAME --name $SUBNET_NAME --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Enforcement Level Deployment Safeguards Output\nDESCRIPTION: Example output when deploying a pod with enforcement-level safeguards enabled, showing denial of deployment due to policy violations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deployment-safeguards.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f pod.yml\nError from server (Forbidden): error when creating \".\\pod.yml\": admission webhook \"validation.gatekeeper.sh\" denied the request: [azurepolicy-k8sazurev2containerenforceprob-0e8a839bcd103e7b96a8] Container <my-container> in your Pod <my-pod> has no <livenessProbe>. Required probes: [\"readinessProbe\", \"livenessProbe\"]\n[azurepolicy-k8sazurev2containerenforceprob-0e8a839bcd103e7b96a8] Container <my-container> in your Pod <my-pod> has no <readinessProbe>. Required probes: [\"readinessProbe\", \"livenessProbe\"]\n[azurepolicy-k8sazurev2containerallowedimag-1ff6d14b2f8da22019d7] Container image my-image for container my-container has not been allowed.\n[azurepolicy-k8sazurev1restrictedlabels-67c4210cc58f28acdfdb] Label <{\"kubernetes.azure.com\"}> is reserved for AKS use only\n[azurepolicy-k8sazurev1containerrestrictedi-bde07e1776cbcc9aa8b8] my-pod in default does not have imagePullSecrets. Unauthenticated image pulls are not recommended.\n```\n\n----------------------------------------\n\nTITLE: Creating PVC for Azure NetApp Files\nDESCRIPTION: YAML configuration for creating a 1 TiB Persistent Volume Claim with ReadWriteMany access mode using the azure-netapp-files storage class.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: anf-pvc\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 1Ti\n  storageClassName: azure-netapp-files\n```\n\n----------------------------------------\n\nTITLE: Enabling Envoy Access Logging with Istio Telemetry API in Azure CLI\nDESCRIPTION: Deploys an Istio v1 Telemetry API resource to enable Envoy access logging for the entire mesh.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-telemetry.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\ncat <<EOF | kubectl apply -n aks-istio-system -f -\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-logging-default\nspec:\n  accessLogging:\n  - providers:\n    - name: envoy\nEOF\n```\n\n----------------------------------------\n\nTITLE: Service Principal Authentication with Client Certificate\nDESCRIPTION: Commands to authenticate using a service principal with a client certificate. This provides an alternative to password-based authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l spn\n\nexport AAD_SERVICE_PRINCIPAL_CLIENT_ID=<SPN client ID>\nexport AAD_SERVICE_PRINCIPAL_CLIENT_CERTIFICATE=/path/to/cert.pfx\nexport AAD_SERVICE_PRINCIPAL_CLIENT_CERTIFICATE_PASSWORD=<PFX password>\n```\n\n----------------------------------------\n\nTITLE: Example Output of Updated Node Pool Tags\nDESCRIPTION: JSON output showing the updated application version and cost center tags after modifying a node pool's tags.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_9\n\nLANGUAGE: output\nCODE:\n```\n[\n  {\n    \"nodepoolName\": \"nodepool1\",\n    \"tags\": null\n  },\n  {\n    \"nodepoolName\": \"tagnodepool\",\n    \"tags\": {\n      \"appversion\": \"0.0.2\",\n      \"costcenter\": \"4444\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Deleting Resources with Azure Developer CLI\nDESCRIPTION: This command removes all resources created during the quickstart using the azd down command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_18\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd down\n```\n\n----------------------------------------\n\nTITLE: Listing AKS Node IPs using Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the private IP addresses of nodes in a specific AKS node pool. It uses the 'az aks machine list' command to display the internal IP addresses of all nodes in the specified node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\naz aks machine list --resource-group myResourceGroup  --cluster-name myAKSCluster --nodepool-name nodepool1 -o table\n```\n\n----------------------------------------\n\nTITLE: Deleting NGINX Ingress Controller with Kubectl\nDESCRIPTION: Bash command to remove an NGINX ingress controller using kubectl delete command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete nginxingresscontroller -n <IngressControllerName>\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Kubernetes Job Resources\nDESCRIPTION: Command to delete the TensorFlow GPU job and its associated resources from the Kubernetes cluster when they are no longer needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_13\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete jobs samples-tf-mnist-demo\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Role Assignments\nDESCRIPTION: Removes role assignments using their IDs via Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment delete --ids <LIST OF ASSIGNMENT IDS>\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster to Network Isolated Type\nDESCRIPTION: Azure CLI commands to update an existing AKS cluster to network isolated type and reimage the nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --bootstrap-artifact-source Cache --outbound-type none\naz aks upgrade --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --node-image-only\n```\n\n----------------------------------------\n\nTITLE: Tagging Public IPs in Kubernetes Manifest\nDESCRIPTION: YAML example showing how to apply Azure tags to a public IP resource using service.beta.kubernetes.io/azure-pip-tags annotation in a Kubernetes Service manifest.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_10\n\nLANGUAGE: yml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    service.beta.kubernetes.io/azure-pip-tags: costcenter=3333,team=beta\nspec:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Logs for Message Delivery\nDESCRIPTION: Retrieves and displays pod logs to verify successful message delivery to Service Bus queue.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-cross-tenant.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl logs $POD_NAME\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace\nDESCRIPTION: Kubernetes command to create a namespace for the example application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace aks-store\n```\n\n----------------------------------------\n\nTITLE: Validation Commands for OSM Add-on Installation\nDESCRIPTION: Set of CLI commands to verify the successful installation and status of the OSM add-on in the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-bicep.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz aks list -g <my-osm-aks-cluster-rg> -o json | jq -r '.[].addonProfiles.openServiceMesh.enabled'\n\nkubectl get deployments -n kube-system --selector app=osm-controller\nkubectl get pods -n kube-system --selector app=osm-controller\nkubectl get services -n kube-system --selector app=osm-controller\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Node Selector in Kubernetes YAML\nDESCRIPTION: YAML configuration for selecting Windows nodes in Kubernetes using nodeSelector attributes. Shows two options: selecting any Windows node or specifically targeting Windows Server 2022 nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-windows-os.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n          nodeSelector:\n            \"kubernetes.io/os\": windows\n```\n\nLANGUAGE: yaml\nCODE:\n```\n          nodeSelector:\n            \"kubernetes.azure.com/os-sku\": Windows2022\n```\n\n----------------------------------------\n\nTITLE: Installing and Updating aks-preview Azure CLI Extension\nDESCRIPTION: Commands to add or update the aks-preview extension for Azure CLI, which is required for using Windows Server Annual Channel features.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/windows-annual-channel.md#2025-04-21_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\n# Register the aks-preview extension\naz extension add --name aks-preview\n# Update the aks-preview extension\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Checking SSH Service Status using VMSS Run-Command\nDESCRIPTION: This Azure CLI command uses the Virtual Machine Scale Set run-command feature to check SSH service status on a node. This is an alternative when node-shell isn't available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz vmss run-command invoke --resource-group myResourceGroup --name myVMSS --command-id RunShellScript --instance-id 0 --scripts \"systemctl status ssh\"\n```\n\n----------------------------------------\n\nTITLE: Describing Pod Details\nDESCRIPTION: Bash command to view detailed information about a specific hamster pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod hamster-<example-pod>\n```\n\n----------------------------------------\n\nTITLE: Installing CNPG operator using YAML manifest\nDESCRIPTION: These commands install the CNPG operator on the AKS cluster using a YAML manifest and verify the installation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --context $AKS_PRIMARY_CLUSTER_NAME \\\n    --namespace $PG_SYSTEM_NAMESPACE \\\n    --server-side -f \\\n    https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/release-1.23/releases/cnpg-1.23.1.yaml\n\nkubectl get deployment \\\n    --namespace $PG_SYSTEM_NAMESPACE cnpg-controller-manager \\\n    --context $AKS_PRIMARY_CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Implementing ResourceOverride with Policy and ClusterSelector in Azure Kubernetes Fleet Manager\nDESCRIPTION: This YAML snippet shows a complete ResourceOverride definition including both resource selectors and policy rules. It targets a Deployment and applies a JSON patch to replace the container image for clusters with a specific label.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/resource-override.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1alpha1\nkind: ResourceOverride\nmetadata:\n  name: example-resource-override\n  namespace: test-namespace\nspec:\n  resourceSelectors:\n    -  group: apps\n       kind: Deployment\n       version: v1\n       name: test-nginx\n  policy:\n    overrideRules:\n      - clusterSelector:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  env: prod\n        jsonPatchOverrides:\n          - op: replace\n            path: /spec/template/spec/containers/0/image\n            value: \"nginx:1.20.0\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Public IP Prefix Information for AKS Cluster\nDESCRIPTION: This Azure CLI command retrieves the ID of a specific public IP prefix. It's used to get the necessary information for updating an AKS cluster with custom outbound public IP prefixes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz network public-ip prefix show --resource-group myResourceGroup --name myPublicIPPrefix --query id -o tsv\n```\n\n----------------------------------------\n\nTITLE: Querying Azure SQL Database to Wake Up Serverless Tier\nDESCRIPTION: Example SQL query to force a serverless tier Azure SQL Database to wake up from sleep mode. This query selects all columns from the COFFEE table.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/jakartaee/create-azure-sql-database.md#2025-04-23_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM COFFEE;\n```\n\n----------------------------------------\n\nTITLE: Verifying Feature Registration Status\nDESCRIPTION: Command to check the registration status of the AzureMonitorMetricsControlPlanePreview feature flag before proceeding with its use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"AzureMonitorMetricsControlPlanePreview\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group for PostgreSQL Infrastructure\nDESCRIPTION: Creates an Azure resource group to contain all the resources related to the PostgreSQL deployment. The resource group is tagged for easier management and identification.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz group create \\\n    --name $RESOURCE_GROUP_NAME \\\n    --location $PRIMARY_CLUSTER_REGION \\\n    --tags $TAGS \\\n    --query 'properties.provisioningState' \\\n    --output tsv\n```\n\n----------------------------------------\n\nTITLE: Applying Redis component configuration to the Kubernetes cluster\nDESCRIPTION: Command to apply the Redis component configuration to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ./deploy/redis.yaml\n```\n\n----------------------------------------\n\nTITLE: Enabling application routing add-on using Azure CLI\nDESCRIPTION: This command enables the application routing add-on for an AKS cluster using the Azure CLI. It requires specifying the resource group name and cluster name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-migration.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks approuting enable --resource-group <ResourceGroupName> --name <ClusterName>\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Ingress for Ray Dashboard\nDESCRIPTION: Defines and applies an ingress resource to expose the Ray Dashboard service using Azure's web application routing ingress controller.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ray-dash\n  namespace: kuberay\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: webapprouting.kubernetes.azure.com\n  rules:\n  - http:\n      paths:\n      - backend:\n          service:\n            name: ray-dash\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\nEOF\n```\n\n----------------------------------------\n\nTITLE: Labeling the KAITO Inference Service for Prometheus\nDESCRIPTION: This command adds a label to the KAITO inference service that enables the ServiceMonitor to identify and collect metrics from it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-monitoring.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl label svc workspace-qwen-2-5-coder-7b-instruct App=qwen-2-5-coder \n```\n\n----------------------------------------\n\nTITLE: Access Kubernetes Secrets Command\nDESCRIPTION: Attempts to access secrets in the kube-system namespace, showing permission denial for default role.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secrets --namespace kube-system\n```\n\nLANGUAGE: output\nCODE:\n```\nError from server (Forbidden): secrets is forbidden: User \"[email protected]\" cannot list resource \"secrets\" in API group \"\" in the namespace \"kube-system\": User does not have access to the resource in Azure. Update role assignment to allow access.\n```\n\n----------------------------------------\n\nTITLE: Updating Encrypted Secrets in Kubernetes\nDESCRIPTION: Command to update all secrets across all namespaces in Kubernetes cluster, typically used after KMS changes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_31\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get secrets --all-namespaces -o json | kubectl replace -f -\n```\n\n----------------------------------------\n\nTITLE: Enabling OSM Add-on on Existing AKS Cluster\nDESCRIPTION: Enables the Open Service Mesh add-on on an existing AKS cluster using the az aks enable-addons command. This is an alternative to enabling the add-on during cluster creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks enable-addons \\\n --resource-group myResourceGroup \\\n --name myAKSCluster \\\n --addons open-service-mesh\n```\n\n----------------------------------------\n\nTITLE: Deleting a Gateway Node pool\nDESCRIPTION: Command to remove a gateway node pool from the AKS cluster. Ensure all associated configurations are handled before deletion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-static-egress-gateway.md#2025-04-23_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool delete --cluster-name <cluster-name> -n <nodepool-name>\n```\n\n----------------------------------------\n\nTITLE: Finding Cilium Agent Pod\nDESCRIPTION: Locates the Cilium agent pod running on the same node as the test pod, which will be used to monitor network traffic and policy enforcement.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nk get po -n kube-system -o wide --field-selector spec.nodeName=\"aks-nodepool1-22058664-vmss000001\" | grep \"cilium\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Azure File Share Mount\nDESCRIPTION: Command to verify the Azure file share is correctly mounted in the pod by listing contents.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec nginx-azurefile -- ls -l /mnt/azurefile\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription\nDESCRIPTION: Select a specific Azure subscription using the az account set command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription $subscriptionId\n```\n\n----------------------------------------\n\nTITLE: Adding OpenFaaS Helm Chart Repository\nDESCRIPTION: Commands to add the OpenFaaS helm chart repository to your Kubernetes cluster and update to the latest version using Helm.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add openfaas https://openfaas.github.io/faas-netes/\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Retrieving the latest order\nDESCRIPTION: Command to retrieve the latest order processed by the application to verify data persistence.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ncurl $EXTERNAL_IP/order\n```\n\n----------------------------------------\n\nTITLE: Ingress Controller Feature Comparison Table in Markdown\nDESCRIPTION: A markdown table comparing features across different ingress controller options including Application Routing addon, Application Gateway for Containers, and Azure Service Mesh/Istio-based service mesh.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-network-ingress.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Feature                                           | Application Routing addon | Application Gateway for Containers       | Azure Service Mesh/Istio-based service mesh |\n|---------------------------------------------------|---------------------------|------------------------------------------|---------------------------------------------|\n| **Ingress/Gateway controller**                    | NGINX ingress controller  | Azure Application Gateway for Containers | Istio Ingress Gateway                       |\n| **API**                                           | Ingress API               | Ingress API and Gateway API              | [Istio Ingress API][istio-ingress-link]     |\n| **Hosting**                                       | In-cluster                | Azure hosted                             | In-cluster                                  |\n| **Scaling**                                       | Autoscaling               | Autoscaling                              | Autoscaling                                 |\n| **Load balancing**                                | Internal/External         | External                                 | Internal/External                           |\n| **SSL termination**                               | In-cluster                | Yes: Offloading and E2E SSL              | In-cluster                                  |\n| **mTLS**                                          | N/A                       | Yes: frontend and backend                | N/A                                         |\n| **Static IP Address**                             | N/A                       | FQDN                                     | N/A                                         |\n| **Azure Key Vault stored SSL certificates**       | Yes                       | Yes                                      | N/A                                         |\n| **Azure DNS integration for DNS zone management** | Yes                       | Yes                                      | N/A                                         |\n```\n\n----------------------------------------\n\nTITLE: Registering Feature Flags\nDESCRIPTION: Commands to register and verify the AutomaticSKUPreview feature flag for AKS Automatic\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace Microsoft.ContainerService --name AutomaticSKUPreview\naz feature show --namespace Microsoft.ContainerService --name AutomaticSKUPreview\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Database Configuration Properties\nDESCRIPTION: Quarkus application properties for PostgreSQL database connection using environment variables\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\n# Database configurations\n%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://${AZURE_POSTGRESQL_HOST}:${AZURE_POSTGRESQL_PORT}/${AZURE_POSTGRESQL_DATABASE}?\\\nauthenticationPluginClassName=com.azure.identity.extensions.jdbc.postgresql.AzurePostgresqlAuthenticationPlugin\\\n&sslmode=require\n%prod.quarkus.datasource.username=${AZURE_POSTGRESQL_USERNAME}\n%prod.quarkus.datasource.jdbc.acquisition-timeout=10\n%prod.quarkus.hibernate-orm.database.generation=drop-and-create\n%prod.quarkus.hibernate-orm.sql-load-script=import.sql\n```\n\n----------------------------------------\n\nTITLE: Configuring Diagnostic Settings for AKS Cluster\nDESCRIPTION: Sets up diagnostic settings for the AKS cluster to collect various logs and metrics, sending them to a Log Analytics workspace for analysis and monitoring.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz monitor diagnostic-settings create \\\n--resource $(az aks show --resource-group $RESOURCE_GROUP_NAME --name $AKS_CLUSTER_NAME --query id -o tsv) \\\n--name $DIAGNOSTIC_SETTINGS_NAME \\\n--workspace $(az monitor log-analytics workspace show --resource-group $RESOURCE_GROUP_NAME --workspace-name $LOG_ANALYTICS_WORKSPACE_NAME --query id -o tsv) \\\n--logs '[{\"category\": \"kube-apiserver\", \"enabled\": true}, {\"category\": \"kube-audit\", \"enabled\": true}, {\"category\": \"kube-audit-admin\", \"enabled\": true}, {\"category\": \"kube-controller-manager\", \"enabled\": true}, {\"category\": \"kube-scheduler\", \"enabled\": true}, {\"category\": \"cluster-autoscaler\", \"enabled\": true}, {\"category\": \"cloud-controller-manager\", \"enabled\": true}, {\"category\": \"guard\", \"enabled\": true}, {\"category\": \"csi-azuredisk-controller\", \"enabled\": true}, {\"category\": \"csi-azurefile-controller\", \"enabled\": true}, {\"category\": \"csi-snapshot-controller\", \"enabled\": true}]' \\\n--metrics '[{\"category\": \"AllMetrics\", \"enabled\": true}]'\n```\n\n----------------------------------------\n\nTITLE: Resizing Azure Files PVC Using kubectl patch\nDESCRIPTION: Command to expand an Azure Files Persistent Volume Claim (PVC) from 100GiB to 200GiB using a patch operation, which triggers the underlying Azure Files share to be resized.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch pvc pvc-azurefile --type merge --patch '{\"spec\": {\"resources\": {\"requests\": {\"storage\": \"200Gi\"}}}}'\n```\n\n----------------------------------------\n\nTITLE: Creating Archive File for WebLogic Deployment\nDESCRIPTION: Bash commands to create a zip archive of the WebLogic deployment resources and clean up temporary files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\ncd ${BASE_DIR}/mystaging/models\nzip -r archive.zip wlsdeploy\n\nrm -f -r wlsdeploy\n```\n\n----------------------------------------\n\nTITLE: Deploying NGINX Ingress Controller with Ingress-Bound Certificate\nDESCRIPTION: This Helm command installs the NGINX ingress controller with the certificate bound directly to the ingress controller. It mounts the Secrets Store CSI volume in the controller pods to access the certificate from Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhelm install ingress-nginx/ingress-nginx --generate-name \\\n    --namespace $NAMESPACE \\\n    --set controller.replicaCount=2 \\\n    --set controller.nodeSelector.\"kubernetes\\.io/os\"=linux \\\n    --set defaultBackend.nodeSelector.\"kubernetes\\.io/os\"=linux \\\n    --set controller.service.annotations.\"service\\.beta\\.kubernetes\\.io/azure-load-balancer-health-probe-request-path\"=/healthz \\\n    --set controller.podLabels.aadpodidbinding=$AAD_POD_IDENTITY_NAME \\\n    -f - <<EOF\ncontroller:\n  extraVolumes:\n      - name: secrets-store-inline\n        csi:\n          driver: secrets-store.csi.k8s.io\n          readOnly: true\n          volumeAttributes:\n            secretProviderClass: \"azure-tls\"\n  extraVolumeMounts:\n      - name: secrets-store-inline\n        mountPath: \"/mnt/secrets-store\"\n        readOnly: true\nEOF\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Status in AKS with kubectl\nDESCRIPTION: Command to check if the AI service pod is running in the AKS cluster using kubectl. The command uses a selector to filter for pods with the app label set to 'ai-service' and includes the -w flag to watch for status changes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get pods --selector app=ai-service -w\n```\n\n----------------------------------------\n\nTITLE: Building and Uploading Docker Image to Azure Container Registry\nDESCRIPTION: This Azure CLI command builds the Docker image for the Valkey client application and uploads it to Azure Container Registry (ACR) for deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-valkey-cluster.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz acr build --image valkey-client --registry ${MY_ACR_REGISTRY} .\n```\n\n----------------------------------------\n\nTITLE: Deleting Manual Scale Profile from AKS Node Pool using Azure CLI\nDESCRIPTION: This command deletes the manual scale profile for the Standard_D8s_v3 VM SKU in the 'myvmpool' node pool of an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-machines-node-pools.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool manual-scale delete \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name myvmpool \\\n    --current-vm-sizes \"Standard_D8s_v3\"\n```\n\n----------------------------------------\n\nTITLE: Creating MongoDB Client Pod in AKS\nDESCRIPTION: Creates a temporary pod with MongoDB client tools in the specified namespace. This pod uses the Percona MongoDB image and connects using a connection string stored in an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n \"${AKS_MONGODB_NAMESPACE}\" run -i --rm --tty percona-client --image=${MY_ACR_REGISTRY}.azurecr.io/percona-server-mongodb:7.0.8-5 --restart=Never -- env CONN_STR=$connectionString bash -il\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault with RBAC\nDESCRIPTION: Creates a new Azure Key Vault with Azure role-based access control (RBAC) enabled using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-driver.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault create --name <keyvault-name> --resource-group myResourceGroup --location eastus2 --enable-rbac-authorization\n```\n\n----------------------------------------\n\nTITLE: Verify Dual-Stack Networking in AKS Nodes\nDESCRIPTION: Command to inspect AKS nodes to verify they have both IPv4 and IPv6 addresses assigned, along with the respective pod CIDR ranges.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_5\n\nLANGUAGE: bash-interactive\nCODE:\n```\nkubectl get nodes -o=custom-columns=\"NAME:.metadata.name,ADDRESSES:.status.addresses[?(@.type=='InternalIP')].address,PODCIDRS:.spec.podCIDRs[*]\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Snapshot Resource ID in Azure CLI\nDESCRIPTION: This command retrieves the resource ID of a previously created snapshot, which is needed for creating new node pools or clusters based on the snapshot.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-pool-snapshot.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nSNAPSHOT_ID=$(az aks nodepool snapshot show --name MySnapshot --resource-group myResourceGroup --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Deployment Workflow Steps\nDESCRIPTION: The deployment process includes generating certificates, configuring Azure resources through Bicep parameters, and installing necessary Kubernetes packages. The workflow ensures secure communication between Application Gateway and AKS backend services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-prepare.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Generate certificate for custom domain and save in Azure key vault\n2. Specify information in main.bicepparams file and deploy Bicep templates:\n   - Prefix for Azure resources\n   - Key Vault name and resource group\n3. Configure deployment script to install:\n   - Prometheus and Grafana\n   - cert-manager\n   - NGINX ingress controller\n4. Application Gateway Listener retrieves TLS certificate\n5. Kubernetes ingress uses certificate from Key Vault CSI Driver\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure PowerShell\nDESCRIPTION: Creates an Azure resource group named 'myResourceGroup' in the 'eastus' location using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_2\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzResourceGroup -Name myResourceGroup -Location eastus\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Persistent Volume\nDESCRIPTION: Creates the NFS-based persistent volume in Kubernetes using the kubectl apply command with the previously defined YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pv-nfs.yaml\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group using PowerShell\nDESCRIPTION: PowerShell command to remove an Azure resource group and all its associated resources, including an AKS cluster. This helps clean up resources to avoid unnecessary Azure charges after completing an AKS quickstart.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-powershell.md#2025-04-21_snippet_5\n\nLANGUAGE: PowerShell\nCODE:\n```\nRemove-AzResourceGroup -Name myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Listing PersistentVolumeClaims by Creation Time in Kubernetes\nDESCRIPTION: Command to retrieve a sorted list of PersistentVolumeClaims in a namespace by creation timestamp. This helps identify which PVCs to migrate first based on their age or creation order.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pvc -n <namespace> --sort-by=.metadata.creationTimestamp -o custom-columns=NAME:.metadata.name,CreationTime:.metadata.creationTimestamp,StorageClass:.spec.storageClassName,Size:.spec.resources.requests.storage\n```\n\n----------------------------------------\n\nTITLE: Updating Helm Chart Dependencies in Bash\nDESCRIPTION: Uses the helm dependency update command to update the dependencies for the azure-vote-front chart.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nhelm dependency update azure-vote-front\n```\n\n----------------------------------------\n\nTITLE: Updating Dapr Version using Azure CLI\nDESCRIPTION: Updates the Dapr extension version in AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension update --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr \\\n--version 1.12.0\n```\n\n----------------------------------------\n\nTITLE: Deleting Kubernetes Namespace in AKS\nDESCRIPTION: This command deletes an entire Kubernetes namespace and all resources contained within it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_9\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete namespace ingress-basic\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Node Pool using PowerShell\nDESCRIPTION: PowerShell command to delete a node pool from an AKS cluster using the Remove-AzAksNodePool cmdlet. Uses a parameter hashtable for resource group, cluster, and node pool names.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/delete-node-pool.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$params = @{\n    ResourceGroupName = '<resource-group-name>'\n    ClusterName       = '<cluster-name>'\n    Name              = '<node-pool-name>'\n}\nRemove-AzAksNodePool @params\n```\n\n----------------------------------------\n\nTITLE: Checking ACI Provider Registration Status in Azure CLI\nDESCRIPTION: This Azure CLI command checks the registration status of the Microsoft.ContainerInstance provider, which is required for using virtual nodes in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz provider list --query \"[?contains(namespace,'Microsoft.ContainerInstance')]\" -o table\n```\n\n----------------------------------------\n\nTITLE: Output from Creating NGINX Ingress Controller\nDESCRIPTION: Example output showing successful creation of the NGINX ingress controller resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_6\n\nLANGUAGE: output\nCODE:\n```\nnginxingresscontroller.approuting.kubernetes.azure.com/nginx-public created\n```\n\n----------------------------------------\n\nTITLE: Verifying Data in Mounted Volume\nDESCRIPTION: Kubectl command to verify the data inside the mounted volume to ensure successful migration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it mypod -- ls -l /mnt/azure/\n```\n\n----------------------------------------\n\nTITLE: Enabling FIPS on Existing AKS Node Pool\nDESCRIPTION: Update an existing node pool to enable FIPS using the az aks nodepool update command. This triggers a reimage of the node pool to deploy the FIPS compliant Operating System.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name np \\\n    --enable-fips-image\n```\n\n----------------------------------------\n\nTITLE: Disabling Network Isolated Cluster in AKS\nDESCRIPTION: This snippet shows how to disable the network isolated cluster feature using the 'az aks update' command. It sets the bootstrap-artifact-source to Direct and outbound-type to LoadBalancer. After disabling, it's necessary to reimage all existing nodes using 'az aks upgrade'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_19\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --bootstrap-artifact-source Direct --outbound-type LoadBalancer\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks upgrade --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME} --node-image-only\n```\n\n----------------------------------------\n\nTITLE: Tagging Files and Disks in Kubernetes Storage Manifest\nDESCRIPTION: YAML example showing how to apply Azure tags to files and disks by specifying tags under parameters in a Kubernetes storage manifest.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_11\n\nLANGUAGE: yml\nCODE:\n```\n---\napiVersion: storage.k8s.io/v1\n...\nparameters:\n  ...\n  tags: costcenter=3333,team=beta\n...\n```\n\n----------------------------------------\n\nTITLE: Listing Virtual Network Peerings for AKS Private Cluster using Azure CLI\nDESCRIPTION: This Azure CLI command lists the virtual network peerings for an AKS private cluster. It uses the az network vnet peering list command to display peering information for a specific virtual network.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet peering list \\\n    --resource-group <node-resource-group-name> \\\n    --vnet-name <private-dns-zone-name>\n```\n\n----------------------------------------\n\nTITLE: Applying NVIDIA Device Plugin Configuration\nDESCRIPTION: Applies the DaemonSet configuration to deploy the NVIDIA device plugin\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nvidia-device-plugin-ds.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Persistent Volume Claim for SMB\nDESCRIPTION: This code snippet shows how to create a Kubernetes Persistent Volume Claim (PVC) to use the SMB Persistent Volume. It includes the YAML definition for the PVC and the kubectl command to apply it.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: anf-pvc-smb\nspec:\n  accessModes:\n    - ReadWriteMany\n  volumeName: anf-pv-smb\n  storageClassName: \"\"\n  resources:\n    requests:\n      storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Alternative Environment Variables for Certificate-Based Authentication\nDESCRIPTION: An alternative approach to setting up certificate-based service principal authentication using different environment variable names that are also supported by kubelogin.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l spn\n\nexport AZURE_CLIENT_ID=<SPN client ID>\nexport AZURE_CLIENT_CERTIFICATE_PATH=/path/to/cert.pfx\nexport AZURE_CLIENT_CERTIFICATE_PASSWORD=<PFX password>\n```\n\n----------------------------------------\n\nTITLE: Viewing Dapr Extension Configuration in AKS\nDESCRIPTION: Shows current Dapr extension configuration settings using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension show --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr\n```\n\n----------------------------------------\n\nTITLE: Stopping and Removing Docker Containers\nDESCRIPTION: This command stops and removes the running Docker containers and associated resources for the multi-container application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-app.md#2025-04-21_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\ndocker compose down\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster with Custom Outbound Public IPs\nDESCRIPTION: This Azure CLI command updates an existing AKS cluster to use custom outbound public IPs. It uses the --load-balancer-outbound-ips parameter to specify the IDs of the custom public IPs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --load-balancer-outbound-ips <publicIpId1>,<publicIpId2>\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Identity Extension for WebLogic in Bash\nDESCRIPTION: These commands download and install the Azure Identity Extension for WebLogic, enabling database connections using Azure Managed Identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LO https://github.com/oracle/weblogic-azure/raw/refs/heads/main/weblogic-azure-aks/src/main/resources/azure-identity-extensions.xml\n\nmvn dependency:copy-dependencies -f azure-identity-extensions.xml\n\nmkdir -p ${BASE_DIR}/mystaging/models/wlsdeploy/classpathLibraries/azureLibraries\nmkdir ${BASE_DIR}/mystaging/models/wlsdeploy/classpathLibraries/jackson\n# fix JARs conflict issue in GA images, put jackson libraries to PRE_CLASSPATH to upgrade the existing libs.\nmv target/dependency/jackson-annotations-*.jar ${BASE_DIR}/mystaging/models/wlsdeploy/classpathLibraries/jackson/\nmv target/dependency/jackson-core-*.jar ${BASE_DIR}/mystaging/models/wlsdeploy/classpathLibraries/jackson/\nmv target/dependency/jackson-databind-*.jar ${BASE_DIR}/mystaging/models/wlsdeploy/classpathLibraries/jackson/\nmv target/dependency/jackson-dataformat-xml-*.jar ${BASE_DIR}/mystaging/models/wlsdeploy/classpathLibraries/jackson/\n# Thoes jars will be appended to CLASSPATH\nmv target/dependency/*.jar ${BASE_DIR}/mystaging/models/wlsdeploy/classpathLibraries/azureLibraries/\n```\n\n----------------------------------------\n\nTITLE: Consumer Code for Azure Storage Table\nDESCRIPTION: Python code snippet that uses the Azure SDK for Python to write data to an Azure Storage Table. It authenticates using the DefaultAzureCredential class and incorporates the required PartitionKey and RowKey structure.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nfrom azure.storage.queue import QueueClient\nfrom azure.data.tables import (TableServiceClient)\n\n    creds = DefaultAzureCredential()\n    table = TableServiceClient(\n        endpoint=f\"https://{storage_account_name}.table.core.windows.net/\",  \n        credential=creds).get_table_client(table_name=azure_table)\n\nentity={\n    'PartitionKey': _id,\n    'RowKey': str(messageProcessingTime.total_seconds()),\n    'data': jsonMessage['msg'],\n    'srcStamp': jsonMessage['srcStamp'],\n    'dateStamp': current_dateTime\n}\n        \nresponse = table.insert_entity(\n    table_name=azure_table,\n    entity=entity,\n    timeout=60\n)\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Provider and Required Providers in Terraform\nDESCRIPTION: This snippet defines the Azure provider and specifies the required providers for the Terraform configuration. It includes the azurerm, random, and azapi providers with their respective versions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_0\n\nLANGUAGE: HCL\nCODE:\n```\nterraform {\n  required_version = \">= 1.0\"\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \"~> 3.0\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~> 3.0\"\n    }\n    azapi = {\n      source  = \"azure/azapi\"\n      version = \"~>1.5\"\n    }\n  }\n}\n\nprovider \"azurerm\" {\n  features {}\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Store Application with kubectl\nDESCRIPTION: Applies a YAML manifest from a GitHub repository to deploy the AKS store application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/sample-manifests/docs/app-routing/aks-store-deployments-and-services.yaml -n aks-store\n```\n\n----------------------------------------\n\nTITLE: Delete AKS Service Principal using PowerShell\nDESCRIPTION: PowerShell commands to delete the service principal associated with an AKS cluster by retrieving the ClientId and using Remove-AzADServicePrincipal.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_9\n\nLANGUAGE: azurepowershell-interactive\nCODE:\n```\n$ClientId = (Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster ).ServicePrincipalProfile.ClientId\nRemove-AzADServicePrincipal -ApplicationId $ClientId\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Proxy Versions Across Pods\nDESCRIPTION: Command to check the Istio proxy image version for all pods across all namespaces.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{\"\\n\"}{.metadata.name}{\":\\t\"}{range .spec.containers[*]}{.image}{\", \"}{end}{end}' |\nsort |\ngrep \"mcr.microsoft.com\\/oss\\/istio\\/proxyv2\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure Container Storage on AKS Cluster\nDESCRIPTION: Enables Azure Container Storage with azureDisk on the AKS cluster to provide persistent storage capabilities for containerized applications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n--name $AKS_CLUSTER_NAME \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--enable-azure-container-storage azureDisk\n```\n\n----------------------------------------\n\nTITLE: Enable App Routing on Existing Cluster\nDESCRIPTION: Azure CLI command to enable application routing on an existing AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks approuting enable --resource-group <ResourceGroupName> --name <ClusterName>\n```\n\n----------------------------------------\n\nTITLE: Port forwarding to ingress-nginx controller pod\nDESCRIPTION: This command sets up port forwarding from a local port to port 10254 on one of the ingress-nginx controller pods to access the metrics endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-prometheus.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward nginx-657bb8cdcf-qllmx -n app-routing-system :10254\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster with Azure CLI\nDESCRIPTION: Commands to set up cluster connection using az aks get-credentials and verify connection with kubectl\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/trusted-access-feature.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nexport RESOURCE_GROUP_NAME=\"myResourceGroup\"\nexport CLUSTER_NAME=\"myClusterName\"\n\naz aks get-credentials --resource-group ${RESOURCE_GROUP_NAME} --name ${CLUSTER_NAME} --overwrite-existing\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Creating PVC and Pod with Azure Disk CSI\nDESCRIPTION: Commands to create a persistent volume claim and pod using Azure Disk CSI driver.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/deploy/example/pvc-azuredisk-csi.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/deploy/example/nginx-pod-azuredisk.yaml\n```\n\n----------------------------------------\n\nTITLE: Joining an AKS Cluster to a Fleet as a Member in Azure CLI\nDESCRIPTION: Command to join an existing AKS cluster to a Fleet resource as a member using the Azure CLI. This establishes the relationship between the Fleet and the member cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# Join the first member cluster\naz fleet member create --resource-group ${GROUP} --fleet-name ${FLEET} --name ${MEMBER_NAME_1} --member-cluster-id ${MEMBER_CLUSTER_ID_1}\n```\n\n----------------------------------------\n\nTITLE: Creating Managed Identity for Key Vault Access\nDESCRIPTION: Creates a user-assigned managed identity for External Secrets Operator to access Airflow passwords in Key Vault and exports its identifiers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create --name $MY_IDENTITY_NAME --resource-group $MY_RESOURCE_GROUP_NAME --output table\nexport MY_IDENTITY_NAME_ID=$(az identity show --name $MY_IDENTITY_NAME --resource-group $MY_RESOURCE_GROUP_NAME --query id --output tsv)\nexport MY_IDENTITY_NAME_PRINCIPAL_ID=$(az identity show --name $MY_IDENTITY_NAME --resource-group $MY_RESOURCE_GROUP_NAME --query principalId --output tsv)\nexport MY_IDENTITY_NAME_CLIENT_ID=$(az identity show --name $MY_IDENTITY_NAME --resource-group $MY_RESOURCE_GROUP_NAME --query clientId --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Verifying Kubernetes Cluster Connection\nDESCRIPTION: This command verifies the connection to the Kubernetes cluster by retrieving a list of the cluster nodes. It shows the status of nodes in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Labeling Namespaces with Istio Revision Tags\nDESCRIPTION: This command labels the default namespace to map to the prod-stable revision tag for Istio.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label ns default istio.io/rev=prod-stable --overwrite\n```\n\n----------------------------------------\n\nTITLE: Adding Basic Arm64 Node Pool in AKS\nDESCRIPTION: Creates a new node pool with Arm64 VMs in an existing AKS cluster. Uses az aks nodepool add command to configure a node pool with 3 nodes using the Standard_D2pds_v5 VM size.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-arm64-vms.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --name $ARM_NODE_POOL_NAME \\\n    --node-count 3 \\\n    --node-vm-size Standard_D2pds_v5\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with OSM Add-on using Azure CLI\nDESCRIPTION: Creates a new AKS cluster with the Open Service Mesh add-on enabled using the az aks create command. The --enable-addons parameter is used to specify the OSM add-on.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --enable-addons open-service-mesh \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Mixed Strategy GPU Pod Configuration\nDESCRIPTION: Kubernetes manifest for deploying a pod using mixed strategy GPU allocation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-multi-instance.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nvidia-mixed\nspec:\n  containers:\n  - name: nvidia-mixed\n    image: nvidia/cuda:12.1.1-base-ubuntu22.04\n    command: [\"/bin/sh\"]\n    args: [\"-c\",\"sleep 100\"]\n    resources:\n      limits:\n        \"nvidia.com/mig-1g.5gb\": 1\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster with az aks get-credentials\nDESCRIPTION: This command downloads AKS cluster credentials and configures the Kubernetes CLI (kubectl) to use them. It requires specifying the resource group and cluster name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSAutomaticCluster\n```\n\n----------------------------------------\n\nTITLE: Granting DiskEncryptionSet Access to Key Vault\nDESCRIPTION: Commands to update the Key Vault access policy to allow the DiskEncryptionSet identity to access the encryption keys.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\n# Retrieve the DiskEncryptionSet value and set a variable\ndesIdentity=$(az disk-encryption-set show --name myDiskEncryptionSetName --resource-group myResourceGroup --query \"[identity.principalId]\" -o tsv)\n\n# Update security policy settings\naz keyvault set-policy --name myKeyVaultName --resource-group myResourceGroup --object-id $desIdentity --key-permissions wrapkey unwrapkey get\n```\n\n----------------------------------------\n\nTITLE: Starting the Order Processing Workflow\nDESCRIPTION: Curl command to start a workflow instance with ID '1234' by calling the Dapr workflow API with an order for Paperclips as input.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\ncurl -i -X POST $DAPR_URL/v1.0-beta1/workflows/dapr/OrderProcessingWorkflow/start?instanceID=1234 \\\n  -H \"Content-Type: application/json\" \\\n  -d '{ \"input\" : {\"Name\": \"Paperclips\", \"TotalCost\": 99.95, \"Quantity\": 1}}'\n```\n\n----------------------------------------\n\nTITLE: Node Pool SSH Update Operation Output\nDESCRIPTION: This is the output message displayed when re-enabling SSH access on a specific node pool, indicating that the operation will only take effect after all nodes are reimaged.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_10\n\nLANGUAGE: output\nCODE:\n```\nOnly after all the nodes are reimaged, does the disable/enable SSH Access operation take effect.\n```\n\n----------------------------------------\n\nTITLE: Service Mesh Documentation Front Matter in Markdown\nDESCRIPTION: YAML front matter metadata for the service mesh documentation page, specifying title, description, author information and other metadata.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/servicemesh-about.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: About service meshes\ndescription: Obtain an overview of service meshes, supported scenarios, selection criteria, and next steps to explore.\nauthor: phillipgibson\nms.topic: concept-article\nms.date: 04/18/2023\nms.author: pgibson\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry using PowerShell\nDESCRIPTION: Creates a new Azure Container Registry instance with Basic SKU using Azure PowerShell. The registry name must be globally unique and use lowercase letters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$MYACR = 'mycontainerregistry'\n\nNew-AzContainerRegistry -Name $MYACR -ResourceGroupName myContainerRegistryResourceGroup -Sku Basic\n```\n\n----------------------------------------\n\nTITLE: Sample Output from Windows Container File Contents\nDESCRIPTION: Command output showing the timestamps that have been written to the data.txt file in the Azure File share mounted in the Windows container.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_25\n\nLANGUAGE: output\nCODE:\n```\n2020-08-27 22:11:01Z\n2020-08-27 22:11:02Z\n2020-08-27 22:11:04Z\n(...)\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for AKS\nDESCRIPTION: Creates a new Azure resource group to contain the AKS cluster\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name <resourceGroup> --location <region>\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Resources in Azure CLI\nDESCRIPTION: Azure CLI command to delete all created resources by removing the resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\naz group delete --name $RESOURCE_GROUP_NAME --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Restarting Deployments to Trigger Sidecar Injection\nDESCRIPTION: Command to trigger sidecar injection for existing deployments by performing a rolling restart after labeling the namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart -n <namespace> <deployment name>\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Primary Query Results\nDESCRIPTION: Sample output from querying the primary PostgreSQL endpoint. The 'f' result for pg_is_in_recovery() indicates this is a read-write primary instance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_15\n\nLANGUAGE: output\nCODE:\n```\npg_is_in_recovery\n-------------------\n f\n(1 row)\n```\n\n----------------------------------------\n\nTITLE: Disabling vTPM in AKS Node Pool\nDESCRIPTION: This command disables the virtual Trusted Platform Module (vTPM) feature on a specified node pool in an AKS cluster. Like other node pool updates, this operation requires node reimaging.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-trusted-launch.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update --cluster-name myCluster --resource-group myResourceGroup --name mynodepool --disable-vtpm\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster with Advanced Networking\nDESCRIPTION: Command to create an AKS cluster with Azure CNI networking (advanced networking) using the subnet created earlier. The cluster is created with 5 nodes and generates SSH keys.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-count 5 \\\n    --network-plugin azure \\\n    --vnet-subnet-id <subnetId> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault for MongoDB on AKS\nDESCRIPTION: Creates an Azure Key Vault instance to store secrets for the MongoDB on AKS deployment using the az keyvault create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault create --name $MY_KEYVAULT_NAME --resource-group $MY_RESOURCE_GROUP_NAME --location $MY_LOCATION --enable-rbac-authorization false --output table\nexport KEYVAULTID=$(az keyvault show --name $MY_KEYVAULT_NAME --query \"id\" --output tsv)\nexport KEYVAULTURL=$(az keyvault show --name $MY_KEYVAULT_NAME --query \"properties.vaultUri\" --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Container Images to ACR\nDESCRIPTION: Shell command to execute the docker-command.sh script which builds container images and pushes them to Azure Container Registry. Requires AZURE_CONTAINER_REGISTRY environment variable to be set with the target registry name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n./app/docker-command.sh\n```\n\n----------------------------------------\n\nTITLE: Verifying NGINX Ingress Controller Status with kubectl\nDESCRIPTION: Uses kubectl get command to check the status of the NGINX ingress controller.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nginxingresscontroller\n```\n\n----------------------------------------\n\nTITLE: Deploying Role Assignments Bicep Template\nDESCRIPTION: Azure CLI command to deploy role assignments for the virtual network using a Bicep template.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz deployment group create --resource-group <resource-group> --template-file roleAssignments.bicep \\\n--parameters uamiPrincipalId=<user assigned identity prinicipal id>\n```\n\n----------------------------------------\n\nTITLE: Listing Dapr Versions by Azure Region\nDESCRIPTION: Retrieves a list of Dapr versions available for a specific Azure region.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension extension-types list-versions-by-location --location westus --extension-type microsoft.dapr\n```\n\n----------------------------------------\n\nTITLE: Configure kubectl Connection to AKS Cluster\nDESCRIPTION: Command to set up kubectl credentials for connecting to the AKS cluster. This configures local kubectl access using the cluster's credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-vnet-integration.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group <resource-group> --name <cluster-name>\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding to NATS for wasmCloud Connection\nDESCRIPTION: Sets up port forwarding to the NATS pod to enable local connection to wasmCloud using the wash CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward nats-0 4222\n```\n\n----------------------------------------\n\nTITLE: Listing AKS Cluster Extensions using Azure CLI\nDESCRIPTION: Command to list all installed extensions on an AKS cluster. Requires CLUSTER_NAME and RESOURCE_GROUP environment variables to be set.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-marketplace.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension list --cluster-name $CLUSTER_NAME --resource-group $RESOURCE_GROUP --cluster-type managedClusters\n```\n\n----------------------------------------\n\nTITLE: Listing All Pods Across Namespaces\nDESCRIPTION: Command to list all pods in all namespaces with detailed information including their status, IP addresses, and node assignment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -o wide -A\n```\n\n----------------------------------------\n\nTITLE: Creating a Database User for Managed Identity in SQL\nDESCRIPTION: This SQL script creates a database user for the managed identity and assigns it to several database roles. It creates a user from an external provider and adds it to the db_datareader, db_datawriter, and db_ddladmin roles.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/jakartaee/create-azure-sql-database-passwordless.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nCREATE USER \"myManagedIdentity\" FROM EXTERNAL PROVIDER\nALTER ROLE db_datareader ADD MEMBER \"myManagedIdentity\";\nALTER ROLE db_datawriter ADD MEMBER \"myManagedIdentity\";\nALTER ROLE db_ddladmin ADD MEMBER \"myManagedIdentity\";\nGO\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Container for MongoDB Client\nDESCRIPTION: Dockerfile configuration for building the MongoDB client application container using Python 3.10 slim image and installing MongoDB shell\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: dockerfile\nCODE:\n```\n# Use a slim Python image as the base\nFROM python:3.10-slim-bullseye\n\n# Install wget and gnupg\nRUN apt-get update && apt-get install -y wget gnupg\n\n# Add MongoDB GPG Key and repository\nRUN wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | tee /etc/apt/trusted.gpg.d/mongodb.asc && \\\n    echo \"deb [ arch=amd64 ] https://repo.mongodb.org/apt/debian bullseye/mongodb-org/6.0 main\" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list\n\n# Update APT sources and install MongoDB Shell (mongosh)\nRUN apt-get update && apt-get install -y mongodb-mongosh\n\n# Copy your application files\nCOPY requirements.txt ./\nCOPY locustfile.py ./\n\n# Install Python dependencies\nRUN pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: NGINX Welcome Page HTML Output in Azure Kubernetes Service\nDESCRIPTION: This HTML snippet represents the expected output when curling the NGINX service. It shows the first 5 lines of the default NGINX welcome page, confirming that the web server is running correctly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n```\n\n----------------------------------------\n\nTITLE: Creating CSI-Compatible PersistentVolumes and Claims from Existing Volumes\nDESCRIPTION: Script to create new CSI-based PersistentVolumes and PersistentVolumeClaims based on existing in-tree volumes. It supports filtering by creation timestamp and handles reclaim policies and storage classes appropriately.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n#kubectl get pvc -n <namespace> --sort-by=.metadata.creationTimestamp -o custom-columns=NAME:.metadata.name,CreationTime:.metadata.creationTimestamp,StorageClass:.spec.storageClassName,Size:.spec.resources.requests.storage\n# TimeFormat 2022-04-20T13:19:56Z\nNAMESPACE=$1\nFILENAME=$(date +%Y%m%d%H%M)-$NAMESPACE\nEXISTING_STORAGE_CLASS=$2\nSTORAGE_CLASS_NEW=$3\nSTARTTIMESTAMP=$4\nENDTIMESTAMP=$5\ni=1\nfor PVC in $(kubectl get pvc -n $NAMESPACE | awk '{ print $1}'); do\n  # Ignore first record as it contains header\n  if [ $i -eq 1 ]; then\n    i=$((i + 1))\n  else\n    PVC_CREATION_TIME=$(kubectl get pvc  $PVC -n $NAMESPACE -o jsonpath='{.metadata.creationTimestamp}')\n    if [[ $PVC_CREATION_TIME >= $STARTTIMESTAMP ]]; then\n      if [[ $ENDTIMESTAMP > $PVC_CREATION_TIME ]]; then\n        PV=\"$(kubectl get pvc $PVC -n $NAMESPACE -o jsonpath='{.spec.volumeName}')\"\n        RECLAIM_POLICY=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.persistentVolumeReclaimPolicy}')\"\n        STORAGECLASS=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.storageClassName}')\"\n        echo $PVC\n        RECLAIM_POLICY=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.persistentVolumeReclaimPolicy}')\"\n        if [[ $RECLAIM_POLICY == \"Retain\" ]]; then\n          if [[ $STORAGECLASS == $EXISTING_STORAGE_CLASS ]]; then\n            STORAGE_SIZE=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.capacity.storage}')\"\n            SKU_NAME=\"$(kubectl get storageClass $STORAGE_CLASS_NEW -o jsonpath='{.parameters.skuname}')\"\n            DISK_URI=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.azureDisk.diskURI}')\"\n            PERSISTENT_VOLUME_RECLAIM_POLICY=\"$(kubectl get pv $PV -n $NAMESPACE -o jsonpath='{.spec.persistentVolumeReclaimPolicy}')\"\n\n            cat >$PVC-csi.yaml <<EOF\n    apiVersion: v1\n    kind: PersistentVolume\n    metadata:\n      annotations:\n        pv.kubernetes.io/provisioned-by: disk.csi.azure.com\n      name: $PV-csi\n    spec:\n      accessModes:\n      - ReadWriteOnce\n      capacity:\n        storage: $STORAGE_SIZE\n      claimRef:\n        apiVersion: v1\n        kind: PersistentVolumeClaim\n        name: $PVC-csi\n        namespace: $NAMESPACE\n      csi:\n        driver: disk.csi.azure.com\n        volumeAttributes:\n          csi.storage.k8s.io/pv/name: $PV-csi\n          csi.storage.k8s.io/pvc/name: $PVC-csi\n          csi.storage.k8s.io/pvc/namespace: $NAMESPACE\n          requestedsizegib: \"$STORAGE_SIZE\"\n          skuname: $SKU_NAME\n        volumeHandle: $DISK_URI\n      persistentVolumeReclaimPolicy: $PERSISTENT_VOLUME_RECLAIM_POLICY\n      storageClassName: $STORAGE_CLASS_NEW\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: $PVC-csi\n  namespace: $NAMESPACE\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: $STORAGE_CLASS_NEW\n  resources:\n    requests:\n      storage: $STORAGE_SIZE\n  volumeName: $PV-csi\nEOF\n            kubectl apply -f $PVC-csi.yaml\n            LINE=\"PVC:$PVC,PV:$PV,StorageClassTarget:$STORAGE_CLASS_NEW\"\n            printf '%s\\n' \"$LINE\" >>$FILENAME\n          fi\n        fi\n      fi\n    fi\n  fi\ndone\n```\n\n----------------------------------------\n\nTITLE: Configuring Quarkus Container Image Properties\nDESCRIPTION: Properties configuration for Quarkus container image building, specifying build settings and image name with registry location.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_31\n\nLANGUAGE: properties\nCODE:\n```\n%prod.quarkus.container-image.build=true\n%prod.quarkus.container-image.image=<LOGIN_SERVER_VALUE>/todo-quarkus-aks:1.0\n```\n\n----------------------------------------\n\nTITLE: Creating Test Pod for Virtual Node Validation\nDESCRIPTION: Creates a temporary test pod with an interactive terminal session using the .NET runtime dependencies image.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_13\n\nLANGUAGE: console\nCODE:\n```\nkubectl run -it --rm testvk --image=mcr.microsoft.com/dotnet/runtime-deps:6.0\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Resources with Azure Developer CLI\nDESCRIPTION: Creates all application resources including an AKS cluster and Azure Key Vault using the azd up command, which handles provisioning and deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_2\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd up\n```\n\n----------------------------------------\n\nTITLE: Prompting for Windows Administrator Username in Azure CLI\nDESCRIPTION: Command to prompt for and read a username to use as administrator credentials for Windows Server containers in the AKS cluster. This is required for Windows node pools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\necho \"Please enter the username to use as administrator credentials for Windows Server containers on your cluster: \" && read WINDOWS_USERNAME\n```\n\n----------------------------------------\n\nTITLE: Validating Volume Content in Windows Container\nDESCRIPTION: These commands show how to validate the content of the volume in a Windows container. They use kubectl exec to cat the contents of the data.txt file, demonstrating how to access the persistent volume in both Linux/MacOS and Windows environments.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it busybox-azuredisk-0 -- cat c:\\\\mnt\\\\azuredisk\\\\data.txt # on Linux/MacOS Bash\nkubectl exec -it busybox-azuredisk-0 -- cat c:\\mnt\\azuredisk\\data.txt # on Windows Powershell/CMD\n```\n\n----------------------------------------\n\nTITLE: Deleting an AKS Resource Group with PowerShell\nDESCRIPTION: This PowerShell command deletes the entire resource group containing the AKS cluster, which is useful for cleaning up all associated resources when they're no longer needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_16\n\nLANGUAGE: PowerShell\nCODE:\n```\nRemove-AzResourceGroup -Name myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kuberay Namespace\nDESCRIPTION: Command to verify the status of worker and head pods in the kuberay namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n kuberay\n```\n\n----------------------------------------\n\nTITLE: Disabling Automatic CRD Updates using Bicep\nDESCRIPTION: Configures Custom Resource Definition update settings using Bicep.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_21\n\nLANGUAGE: bicep\nCODE:\n```\nproperties: {\n  configurationSettings: {\n    'hooks.applyCrds': false\n  } \n}\n```\n\n----------------------------------------\n\nTITLE: User-Assigned NAT Gateway Resource Setup\nDESCRIPTION: Creates prerequisite resources for a user-assigned NAT gateway including resource group, managed identity, public IP, and NAT gateway.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/nat-gateway.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup \\\n    --location southcentralus\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nIDENTITY_ID=$(az identity create \\\n    --resource-group myResourceGroup \\\n    --name myNatClusterId \\\n    --location southcentralus \\\n    --query id \\\n    --output tsv)\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz network public-ip create \\\n    --resource-group myResourceGroup \\\n    --name myNatGatewayPip \\\n    --location southcentralus \\\n    --sku standard\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz network nat gateway create \\\n    --resource-group myResourceGroup \\\n    --name myNatGateway \\\n    --location southcentralus \\\n    --public-ip-addresses myNatGatewayPip\n```\n\n----------------------------------------\n\nTITLE: Example Output of AKS Cluster Tags\nDESCRIPTION: JSON output showing the department and cost center tags applied to an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_2\n\nLANGUAGE: output\nCODE:\n```\n{\n  \"clusterTags\": {\n    \"dept\": \"IT\",\n    \"costcenter\": \"9999\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Percona Operator Logs in AKS\nDESCRIPTION: Command to fetch logs from the Percona Operator pod in the AKS cluster. The pod name needs to be replaced with the actual Percona Operator pod name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs -n $AKS_MONGODB_NAMESPACE <percona-operator-pod>\n```\n\n----------------------------------------\n\nTITLE: Registering the WindowsGPUPreview Feature Flag\nDESCRIPTION: Command to register the WindowsGPUPreview feature flag with Azure, which enables Windows GPU support for AKS clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"WindowsGPUPreview\"\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Kubelet Identity\nDESCRIPTION: Creates a new AKS cluster with specified kubelet and control plane managed identities, network configuration, and SSH keys.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --network-plugin azure \\\n    --vnet-subnet-id <subnet-id> \\\n    --dns-service-ip 10.2.0.10 \\\n    --service-cidr 10.2.0.0/24 \\\n    --assign-identity <identity-resource-id> \\\n    --assign-kubelet-identity <kubelet-identity-resource-id> \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Retrieving Managed Identity Object ID\nDESCRIPTION: This command retrieves the object ID of the created managed identity and stores it in a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\nIDENTITY_OBJECT_ID=$(az identity show --name MyIdentity --resource-group MyResourceGroup --query 'principalId' -o tsv)\necho $IDENTITY_OBJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Getting Pod Name from Kubernetes Job\nDESCRIPTION: Command to retrieve the pod name associated with the TensorFlow GPU job using a selector, needed for viewing logs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_11\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods --selector app=samples-tf-mnist-demo\n```\n\n----------------------------------------\n\nTITLE: Example Output of Updated AKS Cluster Tags\nDESCRIPTION: JSON output showing the updated team and cost center tags after modifying an AKS cluster's tags.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_4\n\nLANGUAGE: output\nCODE:\n```\n{\n  \"clusterTags\": {\n    \"team\": \"alpha\",\n    \"costcenter\": \"1234\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Environment Variables\nDESCRIPTION: Commands to verify that the APP_URL and DAPR_URL environment variables were correctly set with the service IP addresses.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\necho $APP_URL\necho $DAPR_URL\n```\n\n----------------------------------------\n\nTITLE: Consumer Code for Amazon DynamoDB in AWS\nDESCRIPTION: Python code snippet that uses the boto3 library to write data to an Amazon DynamoDB table in AWS. It authenticates using the IAM identity associated with the EKS pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n# presumes policy deployment ahead of time such as: aws iam create-policy --policy-name <policy_name> --policy-document <policy_document.json>\ndynamodb = boto3.resource('dynamodb', region_name='<region>')\ntable = dynamodb.Table('<dynamodb_table_name>')\ntable.put_item(\n    Item = {\n      'id':'<guid>',\n      'data':jsonMessage[\"<message_data>\"],\n      'srcStamp':jsonMessage[\"<source_timestamp_from_message>\"],\n      'destStamp':'<current_timestamp_now>',\n      'messageProcessingTime':'<duration>'\n    }\n)\n```\n\n----------------------------------------\n\nTITLE: Viewing Extension Instance Details\nDESCRIPTION: Retrieves and displays detailed information about a specific extension instance installed on an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-extensions-az-cli.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension show --name azureml --cluster-name <clusterName> --resource-group <resourceGroupName> --cluster-type managedClusters\n```\n\n----------------------------------------\n\nTITLE: Creating WebLogic Application Model YAML File in Bash\nDESCRIPTION: This command creates a YAML file defining the WebLogic application deployment configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF >appmodel.yaml\nappDeployments:\n  Application:\n    weblogic-cafe:\n      SourcePath: 'wlsdeploy/applications/weblogic-cafe.war'\n      ModuleType: ear\n      Target: 'cluster-1'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster and Resources with Azure CLI\nDESCRIPTION: Removes the entire resource group containing the AKS cluster and all related resources using the az group delete command with the --no-wait option for asynchronous deletion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name myResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Exporting Managed Identity Client ID to Environment Variable\nDESCRIPTION: Retrieves the client ID of the managed identity and stores it in an environment variable for later use in the migration process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport USER_ASSIGNED_CLIENT_ID=\"$(az identity show --resource-group \"resourceGroupName\" --name \"userAssignedIdentityName\" --query 'clientId' -otsv)\"\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Cluster Status using PowerShell\nDESCRIPTION: Command to verify the stopped status of an AKS cluster using PowerShell cmdlet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/start-stop-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzAKSCluster -Name myAKSCluster -ResourceGroupName myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Checking Available AKS Versions with Azure PowerShell\nDESCRIPTION: This snippet shows how to use Azure PowerShell to check for available Kubernetes versions for an AKS cluster in a specific region. It uses the 'Get-AzAksVersion' cmdlet to retrieve version information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: azurepowershell\nCODE:\n```\nGet-AzAksVersion -Location eastus | Where-Object OrchestratorVersion\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterResourcePlacement for Kubernetes Fleet\nDESCRIPTION: YAML configuration that defines a ClusterResourcePlacement resource for distributing cluster role resources across production clusters. It specifies placement rules for the 'secret-reader' ClusterRole to be applied to clusters labeled with 'env: prod'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/cluster-resource-override.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp\nspec:\n  resourceSelectors:\n    - group: rbac.authorization.k8s.io\n      kind: ClusterRole\n      version: v1\n      name: secret-reader\n  policy:\n    placementType: PickAll\n    affinity:\n      clusterAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  env: prod\n```\n\n----------------------------------------\n\nTITLE: Authenticating to AKS Cluster using Azure PowerShell\nDESCRIPTION: PowerShell command to retrieve AKS cluster credentials, allowing kubectl commands to connect to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_12\n\nLANGUAGE: azurepowershell-interactive\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterResourcePlacement Configuration\nDESCRIPTION: YAML configuration for cluster resource placement that selects clusters in the eastus region for workload deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/l4-load-balancing.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: kuard-demo\nspec:\n  resourceSelectors:\n    - group: \"\"\n      version: v1\n      kind: Namespace\n      name: kuard-demo\n  policy:\n    affinity:\n      clusterAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  fleet.azure.com/location: eastus\n```\n\n----------------------------------------\n\nTITLE: Getting OIDC Issuer URL\nDESCRIPTION: Retrieves the OIDC issuer URL from the AKS cluster for workload identity configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nexport OIDC_URL=$(az aks show --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --query oidcIssuerProfile.issuerUrl --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Checking Bookinfo Pod Status and Sidecar Injection\nDESCRIPTION: Command to verify that the Bookinfo application pods are running with the Istio sidecar containers properly injected.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Checking AKS Node Pool Status\nDESCRIPTION: Lists all node pools in an AKS cluster to check their status, including taint configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool list --resource-group $RESOURCE_GROUP_NAME --cluster-name $CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Node Pool with Custom Buffer Size\nDESCRIPTION: This Azure CLI command creates a new AKS node pool with custom UDP buffer size settings using the linuxosconfig.json file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/troubleshoot-udp-packet-drops.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz aks nodepool add --resource-group $RESOURCE_GROUP --cluster-name $CLUSTER_NAME --name $NODE_POOL_NAME --linux-os-config ./linuxosconfig.json\n```\n\n----------------------------------------\n\nTITLE: Disabling OSM Add-on in AKS using Azure CLI\nDESCRIPTION: This command disables the Open Service Mesh add-on for an AKS cluster using the az aks disable-addons command. It requires specifying the resource group, cluster name, and the add-on to disable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-uninstall-add-on.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks disable-addons \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --addons open-service-mesh\n```\n\n----------------------------------------\n\nTITLE: Enabling Pod Security Policy on AKS Cluster\nDESCRIPTION: Command to enable pod security policy on an existing AKS cluster using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --enable-pod-security-policy\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in PowerShell\nDESCRIPTION: Sets environment variables for resource group, container registry, and ingress TLS configuration in PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$Env:RESOURCE_GROUP_NAME=\"<your-resource-group-name>\"\n$Env:REGISTRY_NAME=\"<your-registry-nam-of-container-registry>\"\n$Env:LOGIN_SERVER=\"<your-login-server-of-container-registry>\"\n$Env:INGRESS_TLS_SECRET=\"<your-ingress-tls-secret-name>\"\n```\n\n----------------------------------------\n\nTITLE: Upgrading a Specific Node Pool in AKS\nDESCRIPTION: Use the az aks nodepool upgrade command to upgrade a specific node pool in an AKS cluster to a new Kubernetes version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz aks nodepool upgrade \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name mynodepool \\\n    --kubernetes-version KUBERNETES_VERSION \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Ingress Usage Scenarios Table in Markdown\nDESCRIPTION: A markdown table describing different scenarios and use cases for each ingress controller option in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-network-ingress.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Ingress option | When to use |\n|----------------|-------------|\n| **Managed NGINX - Application Routing addon** | • In-cluster hosted, customizable, and scalable NGINX ingress controllers. </br> • Basic load balancing and routing capabilities. </br> • Internal and external load balancer configuration. </br> • Static IP address configuration. </br> • Integration with Azure Key Vault for certificate management. </br> • Integration with Azure DNS Zones for public and private DNS management. </br> • Supports the Ingress API. |\n| **Application Gateway for Containers** | • Azure hosted ingress gateway. </br> • Flexible deployment strategies managed by the controller or bring your own Application Gateway for Containers. </br> • Advanced traffic management features such as automatic retries, availability zone resiliency, mutual authentication (mTLS) to backend target, traffic splitting / weighted round robin, and autoscaling. </br> • Integration with Azure Key Vault for certificate management. </br> • Integration with Azure DNS Zones for public and private DNS management. </br> • Supports the Ingress and Gateway APIs. |\n| **Istio Ingress Gateway** | • Based on Envoy, when using with Istio for a service mesh. </br> • Advanced traffic management features such as rate limiting and circuit breaking. </br> • Support for mTLS |\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview Extension\nDESCRIPTION: Commands to install and update the aks-preview Azure CLI extension required for AKS Automatic features\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Sample Pod Status Output\nDESCRIPTION: Example output showing the status of pods in the kuberay namespace including worker and head pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_7\n\nLANGUAGE: output\nCODE:\n```\nNAME                                                      READY   STATUS    RESTARTS   AGE\nkuberay-operator-7d7998bcdb-9h8hx                         1/1     Running   0          3d2h\npytorch-mnist-raycluster-s7xd9-worker-small-group-knpgl   1/1     Running   0          6m15s\npytorch-mnist-raycluster-s7xd9-worker-small-group-p74cm   1/1     Running   0          6m15s\nrayjob-pytorch-mnist-fc959                                1/1     Running   0          5m35s\nrayjob-pytorch-mnist-raycluster-s7xd9-head-l24hn          1/1     Running   0          6m15s\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription with Azure CLI\nDESCRIPTION: Uses the Azure CLI to set the current active subscription for subsequent commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription \"subscriptionID\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Key Vault Secrets Provider Add-on\nDESCRIPTION: Command to disable the Azure Key Vault provider for Secrets Store CSI Driver in an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks disable-addons --addons azure-keyvault-secrets-provider --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Installing CNPG operator using Helm\nDESCRIPTION: These commands add the CNPG Helm repo, install the CNPG operator on the AKS cluster using Helm, and verify the installation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add cnpg https://cloudnative-pg.github.io/charts\n\nhelm upgrade --install cnpg \\\n    --namespace $PG_SYSTEM_NAMESPACE \\\n    --create-namespace \\\n    --kube-context=$AKS_PRIMARY_CLUSTER_NAME \\\n    cnpg/cloudnative-pg\n\nkubectl get deployment \\\n    --context $AKS_PRIMARY_CLUSTER_NAME \\\n    --namespace $PG_SYSTEM_NAMESPACE cnpg-cloudnative-pg\n```\n\n----------------------------------------\n\nTITLE: Sample Kubelet Log Output\nDESCRIPTION: Example output showing typical kubelet log entries including node status updates and API endpoint access logs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelet-logs.md#2025-04-21_snippet_2\n\nLANGUAGE: output\nCODE:\n```\nI0508 12:26:17.905042    8672 kubelet_node_status.go:497] Using Node Hostname from cloudprovider: \"aks-agentpool-11482510-0\"\nI0508 12:26:27.943494    8672 kubelet_node_status.go:497] Using Node Hostname from cloudprovider: \"aks-agentpool-11482510-0\"\nI0508 12:26:28.920125    8672 server.go:796] GET /stats/summary: (10.370874ms) 200 [[Ruby] 10.244.0.2:52292]\nI0508 12:26:37.964650    8672 kubelet_node_status.go:497] Using Node Hostname from cloudprovider: \"aks-agentpool-11482510-0\"\nI0508 12:26:47.996449    8672 kubelet_node_status.go:497] Using Node Hostname from cloudprovider: \"aks-agentpool-11482510-0\"\nI0508 12:26:58.019746    8672 kubelet_node_status.go:497] Using Node Hostname from cloudprovider: \"aks-agentpool-11482510-0\"\nI0508 12:27:05.107680    8672 server.go:796] GET /stats/summary/: (24.853838ms) 200 [[Go-http-client/1.1] 10.244.0.3:44660]\n```\n\n----------------------------------------\n\nTITLE: Listing Istio Revision Tag Mappings\nDESCRIPTION: This command lists the current mappings between Istio revision tags and actual revisions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nistioctl tag list\n```\n\n----------------------------------------\n\nTITLE: Generate Client Certificate\nDESCRIPTION: Creates a client certificate and private key for client authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -out bookinfo_certs/client.bookinfo.com.csr -newkey rsa:2048 -nodes -keyout bookinfo_certs/client.bookinfo.com.key -subj \"/CN=client.bookinfo.com/O=client organization\"\nopenssl x509 -req -sha256 -days 365 -CA bookinfo_certs/bookinfo.com.crt -CAkey bookinfo_certs/bookinfo.com.key -set_serial 1 -in bookinfo_certs/client.bookinfo.com.csr -out bookinfo_certs/client.bookinfo.com.crt\n```\n\n----------------------------------------\n\nTITLE: Registering ACI Provider in Azure CLI\nDESCRIPTION: This Azure CLI command registers the Microsoft.ContainerInstance provider if it's not already registered.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz provider register --namespace Microsoft.ContainerInstance\n```\n\n----------------------------------------\n\nTITLE: Verifying Kafka Topic Creation\nDESCRIPTION: Command to verify that the Kafka topic has been successfully created by listing all topics in the Kafka namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get kafkatopic -n kafka\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster to Use IP-based Inbound Pool Membership\nDESCRIPTION: This Azure CLI command updates an existing AKS cluster to use IP-based inbound pool membership for the load balancer. Note that this operation may cause temporary disruption to incoming service traffic.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --load-balancer-backend-pool-type=nodeIP\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Azure CLI\nDESCRIPTION: Command to connect to a Kubernetes cluster using kubectl by retrieving credentials from Azure AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group <ResourceGroupName> --name <ClusterName>\n```\n\n----------------------------------------\n\nTITLE: Checking MongoDB Cluster Status\nDESCRIPTION: Retrieves and displays the status of the MongoDB cluster deployed with the Percona Operator, showing the endpoint and ready status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get psmdb -n ${AKS_MONGODB_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Azure Cache for Redis vs Valkey Feature Comparison Table\nDESCRIPTION: A comparison table showing key features between Azure Cache for Redis Premium tier and the proposed Valkey solution, including memory capacity, replication, and zone redundancy specifications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/valkey-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Azure Cache for Redis Premium tier | Valkey solution |\n| --- | --- |\n| **Memory up to 1.2 TB** | Using *three* Valkey primaries running on the `Standard_E64_v5` SKU. |\n| **Replication** | Adding at least *one* replica pod per primary pod. |\n| **Zone redundancy** | Placing primary and replica pods in different availability zones. |\n```\n\n----------------------------------------\n\nTITLE: Deploying Updated AKS Application with kubectl\nDESCRIPTION: This command applies the updated Kubernetes manifest file to deploy the application changes. It uses kubectl to interact with the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-paas-services.md#2025-04-21_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl apply -f aks-store-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking Node Status in AKS Cluster\nDESCRIPTION: Command to list all nodes in the AKS cluster showing their status, roles, age and version information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resize-node-pool.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Pod Management Commands\nDESCRIPTION: Commands to delete and recreate a pod with updated volume configurations\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod mypod\nkubectl apply -f azure-files-pod.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking Namespace Labels with kubectl\nDESCRIPTION: Command to view namespace labels using kubectl and jq to verify OSM monitoring configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get namespace bookbuyer -o json | jq '.metadata.labels'\n```\n\n----------------------------------------\n\nTITLE: Get AKS Cluster Credentials\nDESCRIPTION: Retrieves user credentials for accessing the AKS cluster using resource group and cluster name parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group <resource-group-name> --name <cluster-name>\n```\n\n----------------------------------------\n\nTITLE: Enabling CORS for NGINX Ingress in AKS\nDESCRIPTION: This YAML configuration shows how to enable Cross-Origin Resource Sharing (CORS) for NGINX Ingress in AKS using the 'nginx.ingress.kubernetes.io/enable-cors' annotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: aks-helloworld\n  namespace: hello-web-app-routing\n  annotations:\n    nginx.ingress.kubernetes.io/enable-cors: \"true\"\nspec:\n  ingressClassName: <IngressClassName>\n  rules:\n  - host: <Hostname>\n    http:\n      paths:\n      - backend:\n          service:\n            name: aks-helloworld\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group using Azure CLI\nDESCRIPTION: Removes the resource group and all associated resources including the AKS cluster using Azure CLI command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name myResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Verifying Native Sidecar Mode Configuration in Istio\nDESCRIPTION: Checks if the ENABLE_NATIVE_SIDECARS environment variable is set to true in the Istio control plane pod template, confirming that native sidecar mode is enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -l app=istiod -n aks-istio-system -o json | jq '.items[].spec.template.spec.containers[].env[] | select(.name==\"ENABLE_NATIVE_SIDECARS\")'\n```\n\n----------------------------------------\n\nTITLE: Analyzing Blocked Requests by IP with Kusto\nDESCRIPTION: A Kusto query that summarizes WAF-blocked requests by client IP address over time. This visualization helps identify potential attackers and track the frequency of their requests.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_10\n\nLANGUAGE: kusto\nCODE:\n```\nAzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.NETWORK\" and Category == \"ApplicationGatewayFirewallLog\"\n| summarize count() by clientIp_s, bin(TimeGenerated, 1m)\n| render timechart\n```\n\n----------------------------------------\n\nTITLE: Markdown Checklist Block for AKS Container Security\nDESCRIPTION: A markdown checklist block defining the key learning objectives for container security in AKS, specifically focusing on image vulnerability scanning and automated image redeployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-container-image-management.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\\\"checklist\\\"]\n>\n> * Scan for and remediate image vulnerabilities.\n> * Automatically trigger and redeploy container images when a base image is updated.\n```\n\n----------------------------------------\n\nTITLE: Removing Specific Node Taint\nDESCRIPTION: Updates a node pool to remove a specific taint using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool update \\\n--cluster-name $CLUSTER_NAME \\\n--name $NODE_POOL_NAME \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--node-taints \"sku=gpu:NoSchedule\"\n```\n\n----------------------------------------\n\nTITLE: Upgrading AKS Cluster Version\nDESCRIPTION: Commands to upgrade an AKS cluster to a specific Kubernetes version, including an example for version 1.27.1.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_32\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks upgrade --resource-group myResourceGroup --name myAKSCluster --kubernetes-version <AKS version>\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks upgrade --resource-group myResourceGroup --name myAKSCluster --kubernetes-version 1.27.1\n```\n\n----------------------------------------\n\nTITLE: Enabling Image Cleaner on an existing AKS cluster\nDESCRIPTION: Updates an existing AKS cluster to enable the Image Cleaner feature using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n  --resource-group myResourceGroup \\\n  --name myManagedCluster \\\n  --enable-image-cleaner\n```\n\n----------------------------------------\n\nTITLE: Example Output of Node Pool Tags\nDESCRIPTION: JSON output showing the A/B testing and cost center tags applied to a specific node pool within the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_7\n\nLANGUAGE: output\nCODE:\n```\n[\n  {\n    \"nodepoolName\": \"nodepool1\",\n    \"tags\": null\n  },\n  {\n    \"nodepoolName\": \"tagnodepool\",\n    \"tags\": {\n      \"abtest\": \"a\",\n      \"costcenter\": \"5555\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Checking Latest Stable Dapr Version for AKS Cluster\nDESCRIPTION: Retrieves the latest stable Dapr version available for installation on an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension extension-types list-versions-by-cluster --resource-group <myResourceGroup> --cluster-name <myCluster> --cluster-type managedClusters --extension-type microsoft.dapr  --release-train stable --show-latest\n```\n\n----------------------------------------\n\nTITLE: Setting Windows Admin Credentials for AKS\nDESCRIPTION: Creates administrator credentials for Windows Server containers with username and password prompt.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$AdminCreds = Get-Credential `\n    -Message 'Please create the administrator credentials for your Windows Server containers'\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials with Azure CLI\nDESCRIPTION: Command to retrieve credentials for accessing your AKS cluster. This is required before you can interact with your cluster to deploy GPU workloads.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Deleting Custom Role Definition\nDESCRIPTION: Removes a custom role definition from Azure RBAC system.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz role definition delete --name \"AKS Deployment Reader\"\n```\n\n----------------------------------------\n\nTITLE: Downloading Ray Job Specification\nDESCRIPTION: Command to download the PyTorch MNIST Ray Job specification file from KubeRay repository\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LO https://raw.githubusercontent.com/ray-project/kuberay/master/ray-operator/config/samples/pytorch-mnist/ray-job.pytorch-mnist.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Managed Identity and SQL Connection in PowerShell\nDESCRIPTION: This snippet shows how to register necessary providers, install the service connector extension, and create a service connection between AKS and Azure SQL Database using PowerShell and Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\n# Register the Service Connector and Kubernetes Configuration resource providers\naz provider register --namespace Microsoft.ServiceLinker --wait\naz provider register --namespace Microsoft.KubernetesConfiguration --wait\n\n# Install the Service Connector passwordless extension\naz extension add --name serviceconnector-passwordless\n\n# Retrieve the AKS cluster and Azure SQL Server resource IDs\n$Env:AKS_CLUSTER_RESOURCE_ID = $(az aks show --resource-group $Env:RESOURCE_GROUP_NAME --name $Env:CLUSTER_NAME --query id --output tsv)\n$Env:AZURE_SQL_SERVER_RESOURCE_ID = $(az sql server show --resource-group $Env:RESOURCE_GROUP_NAME --name $Env:SQL_SERVER_NAME --query id --output tsv)\n\n# Create a user-assigned managed identity used for workload identity\n$Env:USER_ASSIGNED_IDENTITY_NAME = \"workload-identity-uami\"\naz identity create --resource-group $Env:RESOURCE_GROUP_NAME --name $Env:USER_ASSIGNED_IDENTITY_NAME\n\n# Retrieve the user-assigned managed identity resource ID\n$Env:UAMI_RESOURCE_ID = $(az identity show --resource-group $Env:RESOURCE_GROUP_NAME --name $Env:USER_ASSIGNED_IDENTITY_NAME --query id --output tsv)\n\n# Create a service connection between your AKS cluster and your SQL database using Microsoft Entra Workload ID\naz aks connection create sql --connection akssqlconn --client-type java --source-id $Env:AKS_CLUSTER_RESOURCE_ID --target-id $Env:AZURE_SQL_SERVER_RESOURCE_ID/databases/$Env:DB_NAME --workload-identity $Env:UAMI_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Service Principal Authentication with Command-Line Arguments\nDESCRIPTION: Commands to set up service principal authentication using command-line arguments instead of environment variables. Note that this stores secrets in the kubeconfig file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l spn --client-id <SPN client ID> --client-secret <SPN client secret>\n```\n\n----------------------------------------\n\nTITLE: Disabling Pod Security Policy in Azure Kubernetes Service\nDESCRIPTION: This Azure CLI command disables the pod security policy feature on an AKS cluster. It requires the resource group name and the AKS cluster name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_16\n\nLANGUAGE: console\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --disable-pod-security-policy\n```\n\n----------------------------------------\n\nTITLE: Verifying Windows Server Annual Channel Node Pool Creation\nDESCRIPTION: Kubectl command to describe a node and verify the creation of a Windows Server Annual Channel node pool by checking the OS SKU and other labels.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/windows-annual-channel.md#2025-04-21_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl describe node $NODE_POOL_NAME\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Dedicated Host\nDESCRIPTION: Creates a dedicated host within a host group with specified SKU and fault domain.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-dedicated-hosts.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm host create \\\n--host-group myHostGroup \\\n--name myHost \\\n--sku DSv3-Type1 \\\n--platform-fault-domain 1 \\\n--resource-group myDHResourceGroup\n```\n\n----------------------------------------\n\nTITLE: AWS Kubernetes Deployment YAML Configuration\nDESCRIPTION: Example YAML manifest for AWS implementation showing container configuration with SQS and DynamoDB references for KEDA scalers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-prepare.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n    spec:\n      serviceAccountName: $SERVICE_ACCOUNT\n      containers:\n      - name: <sqs app name>\n        image: <name of Python app container>\n        imagePullPolicy: Always\n        env:\n        - name: SQS_QUEUE_URL\n          value: https://<Url To SQS>/<region>/<QueueName>.fifo\n        - name: DYNAMODB_TABLE\n          value: <table name>\n        - name: AWS_REGION\n          value: <region>\n```\n\n----------------------------------------\n\nTITLE: Installing Hubble CLI on Linux\nDESCRIPTION: Installs the Hubble command-line interface from the official GitHub repository. The script detects architecture (amd64/arm64), downloads the appropriate binary, verifies its checksum, and installs it to /usr/local/bin.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n# Set environment variables\nexport HUBBLE_VERSION=v1.16.3\nexport HUBBLE_ARCH=amd64\n\n#Install Hubble CLI\nif [ \"$(uname -m)\" = \"aarch64\" ]; then HUBBLE_ARCH=arm64; fi\ncurl -L --fail --remote-name-all https://github.com/cilium/hubble/releases/download/$HUBBLE_VERSION/hubble-linux-${HUBBLE_ARCH}.tar.gz{,.sha256sum}\nsha256sum --check hubble-linux-${HUBBLE_ARCH}.tar.gz.sha256sum\nsudo tar xzvfC hubble-linux-${HUBBLE_ARCH}.tar.gz /usr/local/bin\nrm hubble-linux-${HUBBLE_ARCH}.tar.gz{,.sha256sum}\n```\n\n----------------------------------------\n\nTITLE: External Public Load Balancer Configuration\nDESCRIPTION: YAML configuration for external Kafka access using Azure Load Balancer with public IP addresses. Uses port 9094 without TLS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nlisteners:\n  - name: external\n    port: 9094\n    type: loadbalancer\n    tls: false\n```\n\n----------------------------------------\n\nTITLE: Deleting an Unprivileged Pod in Kubernetes\nDESCRIPTION: This command deletes the previously created unprivileged pod from the Kubernetes cluster using a non-admin user account.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_15\n\nLANGUAGE: console\nCODE:\n```\nkubectl-nonadminuser delete -f nginx-unprivileged.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking Service Principal Expiration Date with Azure CLI\nDESCRIPTION: This snippet demonstrates how to check the expiration date of a service principal for an AKS cluster using Azure CLI commands. It retrieves the service principal ID and lists its credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/update-credentials.md#2025-04-21_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\nSP_ID=$(az aks show --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME \\\n    --query servicePrincipalProfile.clientId -o tsv)\naz ad app credential list --id \"$SP_ID\" --query \"[].endDateTime\" -o tsv\n```\n\n----------------------------------------\n\nTITLE: Role Binding Creation Response\nDESCRIPTION: Example JSON response showing the successful creation of a Trusted Access role binding\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/trusted-access-feature.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/${RESOURCE_GROUP_NAME}/providers/Microsoft.ContainerService/managedClusters/${CLUSTER_NAME}/trustedAccessRoleBindings/${ROLE_BINDING_NAME}\",\n  \"name\": \"${ROLE_BINDING_NAME}\",\n  \"provisioningState\": \"Succeeded\",\n  \"resourceGroup\": \"${RESOURCE_GROUP_NAME}\",\n  \"roles\": [\n    \"${ROLE_NAME_1}\",\n    \"${ROLE_NAME_2}\"\n  ],\n  \"sourceResourceId\": \"${SOURCE_RESOURCE_ID}\",\n  \"systemData\": null,\n  \"type\": \"Microsoft.ContainerService/managedClusters/trustedAccessRoleBindings\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Azure Fleet Manager\nDESCRIPTION: Sets required environment variables for working with Azure Kubernetes Fleet Manager, including resource group, fleet name, and upgrade profile settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-automation.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport GROUP=<resource-group>\nexport FLEET=<fleet-name>\nexport AUTOUPGRADEPROFILE=<upgrade-profile-name>\n# Optional\nexport STRATEGYID=<strategy-id>\nexport CLUSTER=<aks-cluster-name>\n```\n\n----------------------------------------\n\nTITLE: Waiting for MongoDB Backup Completion\nDESCRIPTION: Script that polls the status of the MongoDB backup until it enters the 'ready' state. This ensures the backup process has completed successfully before proceeding.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nwhile [ \"$(kubectl get psmdb-backup -n ${AKS_MONGODB_NAMESPACE} -o jsonpath='{.items[0].status.state}')\" != \"ready\" ]; do echo \"waiting for the backup to be ready\"; sleep 10; done\n```\n\n----------------------------------------\n\nTITLE: Configuring External Secrets for Airflow\nDESCRIPTION: Creates an ExternalSecret resource to sync Azure Key Vault secrets to Kubernetes secrets for Airflow storage configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: airflow-aks-azure-logs-secrets\n  namespace: ${AKS_AIRFLOW_NAMESPACE}\nspec:\n  refreshInterval: 1h\n  secretStoreRef:\n    kind: SecretStore\n    name: azure-store\n  target:\n    name: ${AKS_AIRFLOW_LOGS_STORAGE_SECRET_NAME}\n    creationPolicy: Owner\n  data:\n    - secretKey: azurestorageaccountname\n      remoteRef:\n        key: AKS-AIRFLOW-LOGS-STORAGE-ACCOUNT-NAME\n    - secretKey: azurestorageaccountkey\n      remoteRef:\n        key: AKS-AIRFLOW-LOGS-STORAGE-ACCOUNT-KEY\n```\n\n----------------------------------------\n\nTITLE: Checking VMAS Agent Node Certificate Expiration Date in AKS\nDESCRIPTION: This Azure CLI command checks the expiration date of the VMAS agent node certificate using az vm run-command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/certificate-rotation.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm run-command invoke --resource-group MC_rg_myAKSCluster_region --name vm-name --command-id RunShellScript --query 'value[0].message' -otsv --scripts \"openssl x509 -in /etc/kubernetes/certs/apiserver.crt -noout -enddate\"\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding to Access Locust Web Interface from Kubernetes Pod\nDESCRIPTION: This command sets up port forwarding between your local machine's port 8089 and the valkey-client Pod's port 8089, allowing access to the Locust web interface for load testing the Valkey cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-valkey-cluster.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward -n valkey valkey-client 8089:8089\n```\n\n----------------------------------------\n\nTITLE: Parameters File for AKS OSM Deployment\nDESCRIPTION: JSON parameters file containing configurable values for the AKS cluster deployment including cluster name, DNS prefix, Kubernetes version, and SSH key.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-bicep.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"clusterName\": {\n      \"value\": \"<YOUR CLUSTER NAME HERE>\"\n    },\n    \"clusterDNSPrefix\": {\n      \"value\": \"<YOUR CLUSTER DNS PREFIX HERE>\"\n    },\n    \"k8Version\": {\n      \"value\": \"<YOUR SUPPORTED KUBERNETES VERSION HERE>\"\n    },\n    \"sshPubKey\": {\n      \"value\": \"<YOUR SSH KEY HERE>\"\n    },\n    \"location\": {\n      \"value\": \"<YOUR AZURE REGION HERE>\"\n    },\n    \"adminUsername\": {\n      \"value\": \"<YOUR ADMIN USERNAME HERE>\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster and Resources with Azure PowerShell\nDESCRIPTION: Deletes the resource group containing the AKS cluster and all associated resources using the Remove-AzResourceGroup cmdlet, which prompts for confirmation before deletion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_15\n\nLANGUAGE: azurepowershell\nCODE:\n```\nRemove-AzResourceGroup -Name myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Rotating Intermediate CA Certificates in Azure Key Vault\nDESCRIPTION: This snippet shows how to update the secrets in Azure Key Vault with new intermediate CA certificates and keys for rotation purposes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault secret set --vault-name $AKV_NAME --name root-cert --file <path-to-folder/root-cert.pem>\naz keyvault secret set --vault-name $AKV_NAME --name ca-cert --file <path-to-folder/ca-cert.pem>\naz keyvault secret set --vault-name $AKV_NAME --name ca-key --file <path-to-folder/ca-key.pem>\naz keyvault secret set --vault-name $AKV_NAME --name cert-chain --file <path/cert-chain.pem>\n```\n\n----------------------------------------\n\nTITLE: Downloading Microsoft SQL Server JDBC Driver for WebLogic on AKS\nDESCRIPTION: Bash commands to download and install the Microsoft SQL Server JDBC driver to the external JDBC libraries directory for WebLogic deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nexport DRIVER_VERSION=\"10.2.1.jre8\"\nexport MSSQL_DRIVER_URL=\"https://repo.maven.apache.org/maven2/com/microsoft/sqlserver/mssql-jdbc/${DRIVER_VERSION}/mssql-jdbc-${DRIVER_VERSION}.jar\"\n\nmkdir ${BASE_DIR}/mystaging/models/wlsdeploy/externalJDBCLibraries\ncurl -m 120 -fL ${MSSQL_DRIVER_URL} -o ${BASE_DIR}/mystaging/models/wlsdeploy/externalJDBCLibraries/mssql-jdbc-${DRIVER_VERSION}.jar\n```\n\n----------------------------------------\n\nTITLE: Searching for NGINX Ingress Helm Charts in AKS\nDESCRIPTION: This command searches the added repository for available NGINX ingress controller charts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nhelm search repo ingress-nginx\n```\n\n----------------------------------------\n\nTITLE: Spot Node Taint Configuration in AKS\nDESCRIPTION: YAML configuration showing the taint structure applied to spot nodes in AKS. When a scheduled event occurs, nodes receive specific taints to mark them as unschedulable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-auto-drain.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes.azure.com/scalesetpriority: spot\nremediator.kubernetes.azure.com/unschedulable\n```\n\n----------------------------------------\n\nTITLE: Listing MongoDB Databases\nDESCRIPTION: Lists all available databases in the MongoDB cluster using the mongosh shell command. This verifies that the MongoDB deployment is functioning correctly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nshow dbs\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Resource Group and Cluster\nDESCRIPTION: Azure CLI commands to create a resource group and AKS cluster, followed by configuring kubectl credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-multi-instance.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location southcentralus\n\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --generate-ssh-keys\n\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Adding Apache Airflow Helm Repository\nDESCRIPTION: These commands add the Apache Airflow Helm repository and update the local repository cache to ensure the latest chart versions are available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add apache-airflow https://airflow.apache.org\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Filtering Fleet Update Runs by Status\nDESCRIPTION: KQL query that filters update runs by both Fleet Manager instance and update run status state\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-monitor-update-runs.md#2025-04-21_snippet_2\n\nLANGUAGE: kusto\nCODE:\n```\naksresources\n| where type == \"microsoft.containerservice/fleets/updateruns\"\n| where id contains ('Microsoft.ContainerService/fleets/your-fleet-name')\n| where properties['status']['status']['state'] == \"INSERT_VALUE_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Sample Access Log Output for Httpbin Pod\nDESCRIPTION: Example of the access log output generated for the 'httpbin' pod after receiving a request from 'sleep'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-telemetry.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n[2024-08-13T00:31:47.696Z] \"GET /status/418 HTTP/1.1\" 418 - via_upstream - \"-\" 0 135 2 1 \"-\" \"curl/8.9.1\" \"cdecaca5-5964-48f3-b42d-f474dfa623d5\" \"httpbin:8000\" \"10.244.0.13:8080\" inbound|8080|| 127.0.0.6:55401 10.244.0.13:8080 10.244.0.12:53336 outbound_.8000_._.httpbin.default.svc.cluster.local default\n```\n\n----------------------------------------\n\nTITLE: Viewing Replica Pod Logs During Failover Process\nDESCRIPTION: This command retrieves logs from the valkey-replicas-0 Pod, showing the replica's detection of the primary node failure, the election process, and the transition to a new primary node during the failover.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-valkey-cluster.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs valkey-replicas-0\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Cluster Resource ID\nDESCRIPTION: Uses the Azure CLI to get the resource ID of an AKS cluster. This ID is used in subsequent role assignments.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nAKS_ID=$(az aks show \\\n    --resource-group <resource-group-name> \\\n    --name <cluster-name> \\\n    --query id \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Showing Current Azure App Configuration Extension Settings\nDESCRIPTION: This Azure CLI command displays the current settings of the Azure App Configuration extension for an AKS cluster. It specifies the cluster type, name, resource group, and extension name to retrieve the configuration information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration-settings.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension show --cluster-type managedClusters \\\n    --cluster-name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --name appconfigurationkubernetesprovider\n```\n\n----------------------------------------\n\nTITLE: Private Load Balancer with Custom DNS\nDESCRIPTION: YAML configuration for private load balancer access with custom DNS names and TLS enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nlisteners:\n  - name: private-lb\n    port: 9094\n    type: loadbalancer\n    tls: true\n    configuration: \n      bootstrap:\n        alternativeNames: \n        - kafka-bootstrap.example.com\n        annotations:\n          service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n      brokers:\n        - broker: 0\n          advertisedHost: kafka-broker-0.example.com\n          annotations:\n            service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Virtual Node Add-on\nDESCRIPTION: Disables the virtual node add-on in the AKS cluster using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks disable-addons --resource-group myResourceGroup --name myAKSCluster --addons virtual-node\n```\n\n----------------------------------------\n\nTITLE: Checking Node Conditions and Events in AKS\nDESCRIPTION: Command to inspect node conditions and events using kubectl. This command provides detailed information about node status, conditions, and recent events that have occurred on the node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-problem-detector.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe node my-aks-node\n```\n\n----------------------------------------\n\nTITLE: Checking Kernel Version in Pod Sandbox\nDESCRIPTION: This command displays the Linux kernel version running inside the container, which helps verify that the pod is running in a Kata Container sandbox with a different kernel.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nuname -r\n```\n\n----------------------------------------\n\nTITLE: Output from Creating Ingress Resource\nDESCRIPTION: Example output showing successful creation of the Kubernetes Ingress resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_22\n\nLANGUAGE: output\nCODE:\n```\ningress.networking.k8s.io/aks-helloworld created\n```\n\n----------------------------------------\n\nTITLE: Registering NRGLockdownPreview Feature Flag\nDESCRIPTION: Steps to register and verify the NRGLockdownPreview feature flag, including refreshing the resource provider registration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-resource-group-lockdown.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"NRGLockdownPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"NRGLockdownPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Retrieving OpenFaaS Gateway Service Information\nDESCRIPTION: Command to get service details for the OpenFaaS gateway, including the external IP address needed to access the OpenFaaS UI and API.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get service -l component=gateway --namespace openfaas\n```\n\n----------------------------------------\n\nTITLE: Retrieving Generated OpenFaaS Password\nDESCRIPTION: Command to display the previously generated password for OpenFaaS authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\necho $PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Cloning the Dapr quickstarts repository\nDESCRIPTION: Command to clone the Dapr quickstarts sample repository which contains the example application used in this guide.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Azure-Samples/dapr-aks-extension-quickstart.git\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials\nDESCRIPTION: Retrieves the credentials for the AKS cluster using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-driver.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Viewing ClusterResourcePlacement Status with kubectl\nDESCRIPTION: Command to describe a ClusterResourcePlacement (crp) object named 'crp-1' to view its current status, including placement decisions and conditions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-resource-propagation.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe crp crp-1\n```\n\nLANGUAGE: output\nCODE:\n```\nName:         crp-1\nNamespace:\nLabels:       <none>\nAnnotations:  <none>\nAPI Version:  placement.kubernetes-fleet.io/v1\nKind:         ClusterResourcePlacement\nMetadata:\n  ...\nSpec:\n  Policy:\n    Number Of Clusters:  2\n    Placement Type:      PickN\n  Resource Selectors:\n    Group:\n    Kind:                  Namespace\n    Name:                  test\n    Version:               v1\n  Revision History Limit:  10\nStatus:\n  Conditions:\n    Last Transition Time:  2023-11-10T08:14:52Z\n    Message:               found all the clusters needed as specified by the scheduling policy\n    Observed Generation:   5\n    Reason:                SchedulingPolicyFulfilled\n    Status:                True\n    Type:                  ClusterResourcePlacementScheduled\n    Last Transition Time:  2023-11-10T08:23:43Z\n    Message:               All 2 cluster(s) are synchronized to the latest resources on the hub cluster\n    Observed Generation:   5\n    Reason:                SynchronizeSucceeded\n    Status:                True\n    Type:                  ClusterResourcePlacementSynchronized\n    Last Transition Time:  2023-11-10T08:23:43Z\n    Message:               Successfully applied resources to 2 member clusters\n    Observed Generation:   5\n    Reason:                ApplySucceeded\n    Status:                True\n    Type:                  ClusterResourcePlacementApplied\n  Placement Statuses:\n    Cluster Name:  aks-member-1\n    Conditions:\n      Last Transition Time:  2023-11-10T08:14:52Z\n      Message:               Successfully scheduled resources for placement in aks-member-1 (affinity score: 0, topology spread score: 0): picked by scheduling policy\n      Observed Generation:   5\n      Reason:                ScheduleSucceeded\n      Status:                True\n      Type:                  ResourceScheduled\n      Last Transition Time:  2023-11-10T08:23:43Z\n      Message:               Successfully Synchronized work(s) for placement\n      Observed Generation:   5\n      Reason:                WorkSynchronizeSucceeded\n      Status:                True\n      Type:                  WorkSynchronized\n      Last Transition Time:  2023-11-10T08:23:43Z\n      Message:               Successfully applied resources\n      Observed Generation:   5\n      Reason:                ApplySucceeded\n      Status:                True\n      Type:                  ResourceApplied\n    Cluster Name:            aks-member-2\n    Conditions:\n      Last Transition Time:  2023-11-10T08:14:52Z\n      Message:               Successfully scheduled resources for placement in aks-member-2 (affinity score: 0, topology spread score: 0): picked by scheduling policy\n      Observed Generation:   5\n      Reason:                ScheduleSucceeded\n      Status:                True\n      Type:                  ResourceScheduled\n      Last Transition Time:  2023-11-10T08:23:43Z\n      Message:               Successfully Synchronized work(s) for placement\n      Observed Generation:   5\n      Reason:                WorkSynchronizeSucceeded\n      Status:                True\n      Type:                  WorkSynchronized\n      Last Transition Time:  2023-11-10T08:23:43Z\n      Message:               Successfully applied resources\n      Observed Generation:   5\n      Reason:                ApplySucceeded\n      Status:                True\n      Type:                  ResourceApplied\n  Selected Resources:\n    Kind:       Namespace\n    Name:       test\n    Version:    v1\n    Kind:       ConfigMap\n    Name:       test-1\n    Namespace:  test\n    Version:    v1\nEvents:\n  Type    Reason                     Age                    From                                   Message\n  ----    ------                     ----                   ----                                   -------\n  Normal  PlacementScheduleSuccess   12m (x5 over 3d22h)    cluster-resource-placement-controller  Successfully scheduled the placement\n  Normal  PlacementSyncSuccess       3m28s (x7 over 3d22h)  cluster-resource-placement-controller  Successfully synchronized the placement\n  Normal  PlacementRolloutCompleted  3m28s (x7 over 3d22h)  cluster-resource-placement-controller  Resources have been applied to the selected clusters\n```\n\n----------------------------------------\n\nTITLE: Checking the Feature Flag Registration Status\nDESCRIPTION: This command checks the registration status of the AzureOverlayDualStackPreview feature flag. The feature is ready to use when status shows as 'Registered'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"AzureOverlayDualStackPreview\"\n```\n\n----------------------------------------\n\nTITLE: Verifying the generated Artifact Streaming referrers\nDESCRIPTION: Command to verify that the streaming artifact was successfully created by listing the referrers for the container image manifest.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr manifest list-referrers --name jupyter/all-spark-notebook:latest\n```\n\n----------------------------------------\n\nTITLE: Describing Pod Configuration\nDESCRIPTION: Command to view the pod configuration and verify the volume mount.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod mypod\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster and Resource Group with Azure CLI\nDESCRIPTION: Removes the entire resource group containing the AKS cluster using the az group delete command. This operation deletes all resources associated with the specified resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-az-cli.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name myResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Configuring GitHub Actions Workflow Schedule\nDESCRIPTION: YAML configuration that sets up a GitHub Actions workflow to run every 15 days at 3am for cluster node upgrades.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-upgrade-github-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: Upgrade cluster node images\non:\n  schedule:\n    - cron: '0 3 */15 * *'\n```\n\n----------------------------------------\n\nTITLE: Creating GPU Resources Namespace in Kubernetes\nDESCRIPTION: Creates a dedicated namespace for GPU resources using kubectl\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace gpu-resources\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Docker Registry Secret\nDESCRIPTION: Creates a Kubernetes secret for authenticating with Azure Container Registry during deployment\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret docker-registry spinkube-on-aks \\\n  --docker-server=$ACR_LOGIN_SERVER \\\n  --docker-username=$ACR_NAME\\\n  --docker-password $ACR_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Detaching ACR from AKS Cluster\nDESCRIPTION: Removes the integration between an ACR and an AKS cluster using either Azure CLI or PowerShell commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-container-registry-integration.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup --detach-acr <acr-name>\n```\n\nLANGUAGE: powershell\nCODE:\n```\nSet-AzAksCluster -Name myAKSCluster -ResourceGroupName myResourceGroup -AcrNameToDetach <acr-name>\n```\n\n----------------------------------------\n\nTITLE: Single Strategy GPU Pod Configuration\nDESCRIPTION: Kubernetes manifest for deploying a pod using single strategy GPU allocation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-multi-instance.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nvidia-single\nspec:\n  containers:\n  - name: nvidia-single\n    image: nvidia/cuda:12.1.1-base-ubuntu22.04\n    command: [\"/bin/sh\"]\n    args: [\"-c\",\"sleep 1000\"]\n    resources:\n      limits:\n        \"nvidia.com/gpu\": 1\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Storage Account for PostgreSQL Backups\nDESCRIPTION: Creates an Azure Storage account in the primary region to store PostgreSQL backups. The storage account uses ZRS (Zone-Redundant Storage) for high availability of the backup data.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz storage account create \\\n    --name $PG_PRIMARY_STORAGE_ACCOUNT_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --location $PRIMARY_CLUSTER_REGION \\\n    --sku Standard_ZRS \\\n    --kind StorageV2 \\\n    --query 'provisioningState' \\\n    --output tsv\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for HPC Cache Mount Addresses\nDESCRIPTION: Defines environment variables for the DNS name and the three mount addresses of the HPC Cache, retrieving the mount addresses from the cache configuration and cleaning them up.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_19\n\nLANGUAGE: azurecli\nCODE:\n```\nDNS_NAME=\"server\"\nHPC_MOUNTS0=$(az hpc-cache show --name \"MyHpcCache\" --resource-group $RESOURCE_GROUP --query \"mountAddresses[0]\" -o tsv | tr --delete '\\r')\nHPC_MOUNTS1=$(az hpc-cache show --name \"MyHpcCache\" --resource-group $RESOURCE_GROUP --query \"mountAddresses[1]\" -o tsv | tr --delete '\\r')\nHPC_MOUNTS2=$(az hpc-cache show --name \"MyHpcCache\" --resource-group $RESOURCE_GROUP --query \"mountAddresses[2]\" -o tsv | tr --delete '\\r')\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure CLI\nDESCRIPTION: Creates a resource group and an AKS cluster with one node using Azure CLI. The cluster is named 'MyAKS' and is created in the 'MyResourceGroup' resource group in the East US region.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-event-grid.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name MyResourceGroup --location eastus\naz aks create --resource-group yResourceGroup --name MyAKS --location eastus  --node-count 1 --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Completing Istio Canary Upgrade in AKS\nDESCRIPTION: This command completes the Istio canary upgrade process in the AKS cluster, removing the previous revision's control plane.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks mesh upgrade complete --resource-group $RESOURCE_GROUP --name $CLUSTER\n```\n\n----------------------------------------\n\nTITLE: Verifying Valkey Cluster Roles Configuration\nDESCRIPTION: This command sequence verifies the roles of each pod in the Valkey cluster by executing the 'role' command on both master and replica nodes. It confirms that the masters are properly configured as masters and replicas are properly configured as slaves.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nfor x in $(seq 0 2); do echo \"valkey-masters-$x\"; kubectl exec -n valkey valkey-masters-$x  -- valkey-cli --pass ${SECRET} role; echo; done\nfor x in $(seq 0 2); do echo \"valkey-replicas-$x\"; kubectl exec -n valkey valkey-replicas-$x -- valkey-cli --pass ${SECRET} role; echo; done\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with PowerShell\nDESCRIPTION: Creates a new Azure resource group named 'myResourceGroup' in the East US region using PowerShell cmdlet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzResourceGroup -Name myResourceGroup -Location eastus\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Route Table for Azure Firewall in Azure CLI\nDESCRIPTION: This command creates an empty route table to be associated with a subnet. The route table will define the next hop as the Azure Firewall.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz network route-table create --resource-group $RG --location $LOC --name $FWROUTE_TABLE_NAME\n```\n\n----------------------------------------\n\nTITLE: Version Number Example Format Updated\nDESCRIPTION: Example formats showing updated version numbers used in NodeImage channel updates for Windows containers\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-update-orchestration.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n20348.2582.240916\n```\n\n----------------------------------------\n\nTITLE: Setting Up Port Forwarding for Hubble Relay\nDESCRIPTION: Establishes port forwarding from the local machine to the Hubble Relay service running in the Kubernetes cluster, allowing access to the Hubble API via localhost.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl port-forward -n kube-system svc/hubble-relay --address 127.0.0.1 4245:443\n```\n\n----------------------------------------\n\nTITLE: Updating Dapr Extension HA Mode\nDESCRIPTION: Azure CLI command to update the Dapr extension with high availability mode enabled after deleting the StatefulSet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-migration.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension update --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr \\\n--extension-type Microsoft.Dapr \\\n--auto-upgrade-minor-version true \\  \n--configuration-settings \"global.ha.enabled=true\" \\    \n```\n\n----------------------------------------\n\nTITLE: Building Quarkus Application Container\nDESCRIPTION: Command to build the Quarkus application using Kubernetes and Jib extensions without running tests.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nquarkus build --no-tests\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Bus Resources with Azure CLI\nDESCRIPTION: A series of Azure CLI commands to create a Service Bus namespace, queue, and authorization rule, then retrieve the necessary credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-paas-services.md#2025-04-21_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz servicebus namespace create --name $SB_NS --resource-group $RG_NAME --location $LOC_NAME\n\naz servicebus queue create --name orders --resource-group $RG_NAME --namespace-name $SB_NS\n\naz servicebus queue authorization-rule create \\\n    --name sender \\\n    --namespace-name $SB_NS \\\n    --resource-group $RG_NAME \\\n    --queue-name orders \\\n    --rights Send\n\naz servicebus namespace show --name $SB_NS --resource-group $RG_NAME --query name -o tsv\naz servicebus queue authorization-rule keys list --namespace-name $SB_NS --resource-group $RG_NAME --queue-name orders --name sender --query primaryKey -o tsv\n```\n\n----------------------------------------\n\nTITLE: Getting the Subnet ID for HPC Cache Creation\nDESCRIPTION: Command to retrieve the subnet ID which is required when creating the HPC Cache resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nSUBNET_ID=$(az network vnet subnet show --resource-group $RESOURCE_GROUP --vnet-name $VNET_NAME --name $SUBNET_NAME --query \"id\" -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Dedicated Host Group\nDESCRIPTION: Creates a host group with specified availability zone and fault domain configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-dedicated-hosts.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm host group create \\\n--name myHostGroup \\\n--resource-group myDHResourceGroup \\\n--zone 1 \\\n--platform-fault-domain-count 1 \\\n--automatic-placement true\n```\n\n----------------------------------------\n\nTITLE: Markdown Workload Identity Callout Include\nDESCRIPTION: Include directive for KEDA workload identity callout content from external file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-about.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [Current version callout](./includes/keda/keda-workload-identity-callout.md)]\n```\n\n----------------------------------------\n\nTITLE: Checking Status of Deployed Pods\nDESCRIPTION: Retrieves the status of the pods in the 'aks-store-demo' namespace to ensure all components are running correctly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n aks-store-demo\n```\n\n----------------------------------------\n\nTITLE: Updating API Server Authorized IP Ranges (Azure PowerShell)\nDESCRIPTION: This snippet demonstrates how to update an existing AKS cluster's API server authorized IP ranges using the Set-AzAksCluster cmdlet with the -ApiServerAccessAuthorizedIpRange parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_6\n\nLANGUAGE: azurepowershell\nCODE:\n```\nSet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -ApiServerAccessAuthorizedIpRange '73.140.245.0/24'\n```\n\n----------------------------------------\n\nTITLE: Initial Setup of Hubless Fleet Resource\nDESCRIPTION: Creates a resource group, initializes a hubless fleet resource, and joins a member cluster using Azure CLI commands. Requires setting environment variables for resource names and subscription details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/upgrade-hub-cluster-type.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nRG=myResourceGroup\nLOCATION=eastus\nFLEET=myKubernetesFleet\nFLEET_MEMBER=<name-identifying-member-cluster>\nSUBSCRIPTION_ID=<your-subscription-id>\nCLUSTER=<your-aks-cluster-name>\n\n# Create resource group\naz group create -g $RG -l $LOCATION\n\n# Create a hubless fleet resource \naz fleet create -g $RG -n $FLEET\n\n# Join member cluster to hubless fleet resource\naz fleet member create --name $FLEET_MEMBER --fleet-name $FLEET --resource-group $RG --member-cluster-id /subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RG/providers/Microsoft.ContainerService/managedClusters/$CLUSTER\n```\n\n----------------------------------------\n\nTITLE: Creating a New AKS Cluster with Istio Add-on in Azure CLI\nDESCRIPTION: Commands to create a resource group and a new AKS cluster with the Istio service mesh add-on enabled during cluster creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group create --name ${RESOURCE_GROUP} --location ${LOCATION}\n\naz aks create \\\n    --resource-group ${RESOURCE_GROUP} \\\n    --name ${CLUSTER} \\\n    --enable-asm \\\n    --generate-ssh-keys    \n```\n\n----------------------------------------\n\nTITLE: Registering Microsoft.NetApp Resource Provider\nDESCRIPTION: Registers the Microsoft.NetApp resource provider in Azure subscription. This is a required step before using Azure NetApp Files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.NetApp --wait\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Private DNS Zone Name in Azure CLI\nDESCRIPTION: Creates an environment variable for the Azure Private DNS zone name that will be used for the client-facing IP addresses of the HPC Cache.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\nPRIVATE_DNS_ZONE=\"myhpccache.local\"\n```\n\n----------------------------------------\n\nTITLE: Setting Blob Container Name Variable\nDESCRIPTION: Command to set an environment variable for the blob container name that will be created in the storage account.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\nCONTAINER_NAME=mystoragecontainer\n```\n\n----------------------------------------\n\nTITLE: Creating Federated Identity Credential for PostgreSQL Recovery Cluster\nDESCRIPTION: Creates a federated identity credential to map the recovery cluster service account to a User-Assigned Managed Identity with blob storage access permissions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nexport PG_PRIMARY_CLUSTER_NAME_RECOVERED=\"$PG_PRIMARY_CLUSTER_NAME-recovered-db\"\n\naz identity federated-credential create \\\n    --name $PG_PRIMARY_CLUSTER_NAME_RECOVERED \\\n    --identity-name $AKS_UAMI_CLUSTER_IDENTITY_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --issuer \"${AKS_PRIMARY_CLUSTER_OIDC_ISSUER}\" \\\n    --subject system:serviceaccount:\"${PG_NAMESPACE}\":\"${PG_PRIMARY_CLUSTER_NAME_RECOVERED}\" \\\n    --audience api://AzureADTokenExchange\n```\n\n----------------------------------------\n\nTITLE: Metrics Server Pod Status with CrashLoopBackOff\nDESCRIPTION: This kubectl output shows Metrics Server pods in a CrashLoopBackOff state due to insufficient resources. The issue occurs in Kubernetes v1.23+ clusters with PodDisruptionBudget enabled and requires increasing coefficient values to resolve.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-metrics-server-vertical-pod-autoscaler.md#2025-04-21_snippet_5\n\nLANGUAGE: output\nCODE:\n```\nmetrics-server-679b886d4-pxwdf        1/2     CrashLoopBackOff   6 (36s ago)   6m33s\nmetrics-server-679b886d4-svxxx        1/2     CrashLoopBackOff   6 (54s ago)   6m33s\nmetrics-server-7d78876589-hcrff       2/2     Running            0             37m\n```\n\n----------------------------------------\n\nTITLE: Describing a volume snapshot in Kubernetes\nDESCRIPTION: Command to view details of the created volume snapshot including its status, bound content name, and restore size.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe volumesnapshot azuredisk-volume-snapshot\n```\n\n----------------------------------------\n\nTITLE: Azure Container Storage Configurations Table\nDESCRIPTION: Markdown table showing recommended Premium SSD v2 disk configurations for different Kafka cluster sizes, including specifications for IOPS and bandwidth requirements.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Kafka cluster size | Disk size | IOPS | Bandwidth |  \n|--------------------|-----------|------|------------|\n| **Small**<br>(3-9 brokers) | 1 TB | 5,000 | 250 MB/s |\n| **Medium**<br>(10-19 brokers) | 2 TB | 10,000 | 500 MB/s |\n| **Large**<br>(20+ brokers) | 4 TB | 20,000 | 1,000 MB/s |\n```\n\n----------------------------------------\n\nTITLE: Deploying NGINX Ingress Controller with Application-Bound Certificate\nDESCRIPTION: This Helm command installs the NGINX ingress controller with the certificate bound to the application. It configures controller replication, node selectors, and Azure Load Balancer health probe settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhelm install ingress-nginx/ingress-nginx --generate-name \\\n    --namespace $NAMESPACE \\\n    --set controller.replicaCount=2 \\\n    --set controller.nodeSelector.\"kubernetes\\.io/os\"=linux \\\n    --set controller.service.annotations.\"service\\.beta\\.kubernetes\\.io/azure-load-balancer-health-probe-request-path\"=/healthz \\\n    --set defaultBackend.nodeSelector.\"kubernetes\\.io/os\"=linux\n```\n\n----------------------------------------\n\nTITLE: Verifying Persistent Volume Claim Status\nDESCRIPTION: Kubectl command to verify that the persistent volume claim is created and bound to the persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pvc pvc-azuredisk\n```\n\n----------------------------------------\n\nTITLE: Listing Node Public IPs\nDESCRIPTION: Lists the public IPs assigned to nodes in a Virtual Machine Scale Set\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz vmss list-instance-public-ips --resource-group <MC_region_aksClusterName_region> --name <virtualMachineScaleSetName>\n```\n\n----------------------------------------\n\nTITLE: Disabling GMSA on Existing Cluster\nDESCRIPTION: Azure CLI command to disable GMSA on an existing AKS cluster with Windows Server nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --disable-windows-gmsa\n```\n\n----------------------------------------\n\nTITLE: Creating FIPS-enabled Linux Node Pool in AKS\nDESCRIPTION: Azure CLI command to add a new FIPS-enabled Linux node pool to an existing AKS cluster using az aks nodepool add command with the --enable-fips-image parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name fipsnp \\\n    --enable-fips-image\n```\n\n----------------------------------------\n\nTITLE: Checking AKS Maintenance Configuration\nDESCRIPTION: Azure CLI command to display the existing maintenance configurations in an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\naz aks maintenanceconfiguration show\n```\n\n----------------------------------------\n\nTITLE: Applying KAITO Inference Workspace in Bash\nDESCRIPTION: Applies the KAITO inference workspace configuration to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-fine-tune.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f workspace-phi-3-mini-adapter.yaml\n```\n\n----------------------------------------\n\nTITLE: Connecting to Pod to Verify Volume Mount\nDESCRIPTION: Executes an interactive shell inside the NGINX pod using the kubectl exec command to verify the volume mount.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it nginx-nfs -- sh\n```\n\n----------------------------------------\n\nTITLE: Listing AKS Cluster Node Pools\nDESCRIPTION: This command uses the Azure CLI to list all node pools in the AKS cluster. It provides details such as OS type, Kubernetes version, VM size, and node count in a tabular format.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-mongodb-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool list --resource-group $MY_RESOURCE_GROUP_NAME --cluster-name $MY_CLUSTER_NAME --output table\n```\n\n----------------------------------------\n\nTITLE: Prompting for SRE User Principal Name\nDESCRIPTION: This command prompts the user to enter the User Principal Name (UPN) for Site Reliability Engineers (SREs) and stores it in a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\necho \"Please enter the UPN for SREs: \" && read AAD_SRE_UPN\n```\n\n----------------------------------------\n\nTITLE: Querying CSI Node Information in Kubernetes\nDESCRIPTION: This command retrieves information about the CSI Node, including the number of volumes that can be allocated per node. It's useful for determining volume limits when using the Azure Disk CSI driver.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get CSINode <nodename> -o yaml\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Resource Group and Deployment Commands\nDESCRIPTION: Azure CLI commands to create a resource group and deploy the Bicep template with required parameters including cluster name, DNS prefix, admin username, and SSH key.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n\naz deployment group create --resource-group myResourceGroup --template-file main.bicep --parameters clusterName=<cluster-name> dnsPrefix=<dns-previs> linuxAdminUsername=<linux-admin-username> sshRSAPublicKey='<ssh-key>'\n```\n\n----------------------------------------\n\nTITLE: Sample HTML Output from AKS Application\nDESCRIPTION: This HTML snippet represents the expected output when accessing the deployed AKS application. It includes the basic structure of an HTML page with references to JavaScript and CSS files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"\">\n   <head>\n      <meta charset=\"utf-8\">\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n      <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n      <link rel=\"icon\" href=\"/favicon.ico\">\n      <title>store-front</title>\n      <script defer=\"defer\" src=\"/js/chunk-vendors.df69ae47.js\"></script>\n      <script defer=\"defer\" src=\"/js/app.7e8cfbb2.js\"></script>\n      <link href=\"/css/app.a5dc49f6.css\" rel=\"stylesheet\">\n   </head>\n   <body>\n      <div id=\"app\"></div>\n   </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Disabling Cost Analysis on an AKS Cluster (Azure CLI)\nDESCRIPTION: This command disables cost analysis on an existing AKS cluster using the Azure CLI. It specifies the cluster name and resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cost-analysis.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name <cluster-name> --resource-group <resource-group> --disable-cost-analysis\n```\n\n----------------------------------------\n\nTITLE: Displaying AKS Application URL\nDESCRIPTION: This command echoes a message with the IP address of the web server, allowing users to easily access the deployed application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_10\n\nLANGUAGE: output\nCODE:\n```\necho \"You can now visit your web server at $IP_ADDRESS\"\n```\n\n----------------------------------------\n\nTITLE: Checking MongoDB Cluster Monitoring Status\nDESCRIPTION: Command to inspect the PerconaServerMongoDB custom resource to verify PMM monitoring status\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks-mongodb.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe PerconaServerMongoDB ${AKS_MONGODB_CLUSTER_NAME} -n ${AKS_MONGODB_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Defining AKS Store Application Manifest in YAML\nDESCRIPTION: This YAML manifest defines the Kubernetes objects required to run the AKS Store application. It includes deployments and services for RabbitMQ, order service, product service, and store front. The manifest sets up container images, environment variables, resource limits, and service configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: rabbitmq\n        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine\n        ports:\n        - containerPort: 5672\n          name: rabbitmq-amqp\n        - containerPort: 15672\n          name: rabbitmq-http\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"username\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"password\"\n        resources:\n          requests:\n            cpu: 10m\n            memory: 128Mi\n          limits:\n            cpu: 250m\n            memory: 256Mi\n        volumeMounts:\n        - name: rabbitmq-enabled-plugins\n          mountPath: /etc/rabbitmq/enabled_plugins\n          subPath: enabled_plugins\n      volumes:\n      - name: rabbitmq-enabled-plugins\n        configMap:\n          name: rabbitmq-enabled-plugins\n          items:\n          - key: rabbitmq_enabled_plugins\n            path: enabled_plugins\n---\napiVersion: v1\ndata:\n  rabbitmq_enabled_plugins: |\n    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].\nkind: ConfigMap\nmetadata:\n  name: rabbitmq-enabled-plugins            \n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n    - name: rabbitmq-amqp\n      port: 5672\n      targetPort: 5672\n    - name: rabbitmq-http\n      port: 15672\n      targetPort: 15672\n  type: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: order-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: order-service\n  template:\n    metadata:\n      labels:\n        app: order-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: order-service\n        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: ORDER_QUEUE_HOSTNAME\n          value: \"rabbitmq\"\n        - name: ORDER_QUEUE_PORT\n          value: \"5672\"\n        - name: ORDER_QUEUE_USERNAME\n          value: \"username\"\n        - name: ORDER_QUEUE_PASSWORD\n          value: \"password\"\n        - name: ORDER_QUEUE_NAME\n          value: \"orders\"\n        - name: FASTIFY_ADDRESS\n          value: \"0.0.0.0\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n      initContainers:\n      - name: wait-for-rabbitmq\n        image: busybox\n        command: ['sh', '-c', 'until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi    \n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: order-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3000\n    targetPort: 3000\n  selector:\n    app: order-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-service\n  template:\n    metadata:\n      labels:\n        app: product-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: product-service\n        image: ghcr.io/azure-samples/aks-store-demo/product-service:latest\n        ports:\n        - containerPort: 3002\n        resources:\n          requests:\n            cpu: 1m\n            memory: 1Mi\n          limits:\n            cpu: 1m\n            memory: 7Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 3002\n    targetPort: 3002\n  selector:\n    app: product-service\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: store-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: store-front\n  template:\n    metadata:\n      labels:\n        app: store-front\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: store-front\n        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest\n        ports:\n        - containerPort: 8080\n          name: store-front\n        env: \n        - name: VUE_APP_ORDER_SERVICE_URL\n          value: \"http://order-service:3000/\"\n        - name: VUE_APP_PRODUCT_SERVICE_URL\n          value: \"http://product-service:3002/\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 200Mi\n          limits:\n            cpu: 1000m\n            memory: 512Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: store-front\nspec:\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: store-front\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Creating Horizontal Pod Autoscaler Manifest in Kubernetes\nDESCRIPTION: This YAML manifest defines a Horizontal Pod Autoscaler (HPA) for the store-front deployment, specifying min and max replicas and CPU utilization target.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-scale.md#2025-04-21_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: store-front-hpa\nspec:\n  maxReplicas: 10 # define max replica count\n  minReplicas: 3  # define min replica count\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: store-front\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 50\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Cluster with No CNI Plugin Using Bicep\nDESCRIPTION: This Bicep template creates an AKS cluster with no CNI plugin preinstalled. It sets the 'networkPlugin' property to 'none' in the network profile.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-byo-cni.md#2025-04-21_snippet_2\n\nLANGUAGE: bicep\nCODE:\n```\nparam clusterName string = 'aksbyocni'\nparam location string = resourceGroup().location\nparam kubernetesVersion string = '1.22'\nparam nodeCount int = 3\nparam nodeSize string = 'Standard_B2ms'\n\nresource aksCluster 'Microsoft.ContainerService/managedClusters@2022-06-01' = {\n  name: clusterName\n  location: location\n  identity: {\n    type: 'SystemAssigned'\n  }\n  properties: {\n    agentPoolProfiles: [\n      {\n        name: 'nodepool1'\n        count: nodeCount\n        mode: 'System'\n        vmSize: nodeSize\n      }\n    ]\n    dnsPrefix: clusterName\n    kubernetesVersion: kubernetesVersion\n    networkProfile: {\n      networkPlugin: 'none'\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Refreshing Container Service Provider Registration\nDESCRIPTION: Command to refresh the registration of the Microsoft.ContainerService resource provider\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription\nDESCRIPTION: Command to set the correct Azure subscription context for fleet management operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-migrate-preview-to-ga-fleets.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set \\\n    --subscription <subscription-id>\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure App Configuration Extension from AKS\nDESCRIPTION: Command to delete the Azure App Configuration extension and remove Azure App Configuration Kubernetes Provider from an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension delete --resource-group myResourceGroup --cluster-name myAKSCluster --cluster-type managedClusters --name appconfigurationkubernetesprovider\n```\n\n----------------------------------------\n\nTITLE: Verifying Tags on Node Pools using Azure CLI\nDESCRIPTION: Command to verify tags applied to node pools by querying all node pools in the cluster and their associated tags.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query 'agentPoolProfiles[].{nodepoolName:name,tags:tags}'\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Admin Credentials\nDESCRIPTION: Command to obtain admin credentials for an AKS cluster using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster --admin\n```\n\n----------------------------------------\n\nTITLE: Aborting AKS Agent Pool Operation using REST API\nDESCRIPTION: This REST API endpoint allows you to abort a long-running operation on a specific agent pool within an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-abort-operations.md#2025-04-21_snippet_7\n\nLANGUAGE: rest\nCODE:\n```\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedclusters/{resourceName}/agentPools/{agentPoolName}/abort\n```\n\n----------------------------------------\n\nTITLE: Installing the aks-preview CLI extension in Azure CLI\nDESCRIPTION: Commands to install and update the aks-preview extension for Azure CLI, which is required to enable Artifact Streaming on AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: External Public Load Balancer with Custom DNS\nDESCRIPTION: YAML configuration for external Kafka access using Azure Load Balancer with custom DNS names and TLS enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nlisteners:\n  - name: external\n    port: 9094\n    type: loadbalancer\n    tls: true\n    configuration: \n      bootstrap:\n        alternativeNames: \n        - kafka-bootstrap.example.com\n      brokers:\n        - broker: 0\n          advertisedHost: kafka-broker-0.example.com\n```\n\n----------------------------------------\n\nTITLE: Initiating Canary Upgrade for Istio in AKS\nDESCRIPTION: This command starts a canary upgrade of Istio from revision asm-1-23 to asm-1-24 in the specified AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks mesh upgrade start --resource-group $RESOURCE_GROUP --name $CLUSTER --revision asm-1-24\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure SQL Server using Azure CLI\nDESCRIPTION: This command creates a new Azure SQL Server using Azure CLI. It specifies the resource group, server name, location, and admin credentials using the previously defined environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/jakartaee/create-azure-sql-database-passwordless.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz sql server create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $AZURESQL_SERVER_NAME \\\n    --location westus \\\n    --admin-user $AZURESQL_ADMIN_USER \\\n    --admin-password $AZURESQL_ADMIN_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Query AKS Load Balancer Outbound Rules\nDESCRIPTION: Azure CLI commands to retrieve the current AllocatedOutboundPorts configuration for an AKS cluster's load balancer.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\nNODE_RG=$(az aks show --resource-group myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv)\naz network lb outbound-rule list --resource-group $NODE_RG --lb-name kubernetes -o table\n```\n\n----------------------------------------\n\nTITLE: Creating a Valkey Cluster with Primary Nodes using kubectl\nDESCRIPTION: This command creates a Valkey cluster by adding three primary nodes across availability zones 1 and 2. It uses the valkey-cli tool to configure hash slots allocation across the three master nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it -n valkey valkey-masters-0 -- valkey-cli --cluster create --cluster-yes --cluster-replicas 0 \\\n                        valkey-masters-0.valkey-masters.valkey.svc.cluster.local:6379 \\\n                        valkey-masters-1.valkey-masters.valkey.svc.cluster.local:6379 \\\n                        valkey-masters-2.valkey-masters.valkey.svc.cluster.local:6379 \\\n                        --pass ${SECRET}\n```\n\n----------------------------------------\n\nTITLE: Deleting All Resources Created for Istio Demo\nDESCRIPTION: This Azure CLI command completely removes the resource group containing all resources created during the Istio setup, including the AKS cluster. The operation runs asynchronously without waiting for completion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-metrics-managed-prometheus.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group delete --name ${RESOURCE_GROUP} --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Cluster Migration to AKS-managed Microsoft Entra ID\nDESCRIPTION: This Azure CLI command checks whether an AKS cluster has been migrated to AKS-managed Microsoft Entra ID by examining the aadProfile property. The output will show 'managed' as 'true' if migration is complete.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show -g <RGName> -n <ClusterName>  --query \"aadProfile\"\n```\n\n----------------------------------------\n\nTITLE: Creating Directory for Model and Application Staging in Bash\nDESCRIPTION: These commands create a directory structure to stage the WebLogic model files and application artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ${BASE_DIR}/mystaging/models\ncd ${BASE_DIR}/mystaging/models\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Admin Credentials\nDESCRIPTION: Retrieves the cluster admin credentials for managing the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name $aksname --admin\n```\n\n----------------------------------------\n\nTITLE: Creating Test Pod with Labels\nDESCRIPTION: Creates an interactive test pod with the necessary labels to match the Cilium Network Policy's endpointSelector, providing a shell environment for testing FQDN connectivity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl run -it client -n demo --image=k8s.gcr.io/e2e-test-images/agnhost:2.43 --labels=\"app=demo-container\" --command -- bash\n```\n\n----------------------------------------\n\nTITLE: Checking Persistent Volume Status\nDESCRIPTION: Verifies the status of the persistent volume using the kubectl describe command, ensuring it is available for use by applications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pv pv-nfs\n```\n\n----------------------------------------\n\nTITLE: Testing Model Inference Service Endpoint in Bash\nDESCRIPTION: Retrieves the service IP address and sends a test request to the deployed model inference service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-fine-tune.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nexport SERVICE_IP=$(kubectl get svc workspace-phi-3-mini-adapter -o jsonpath='{.spec.clusterIP}')\n\nkubectl run -it --rm --restart=Never curl --image=curlimages/curl -- curl -X POST http://$SERVICE_IP/chat -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{\\\"prompt\\\":\\\"What is AKS?\\\"}\"\n```\n\n----------------------------------------\n\nTITLE: Azure Storage Account and File Share Creation Commands\nDESCRIPTION: Azure CLI commands for creating a storage account and file share, including setting up connection strings and retrieving storage keys.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz storage account create -n myAKSStorageAccount -g nodeResourceGroupName -l location --sku Standard_LRS\nexport AZURE_STORAGE_CONNECTION_STRING=$(az storage account show-connection-string -n storageAccountName -g resourceGroupName -o tsv)\naz storage share create -n shareName --connection-string $AZURE_STORAGE_CONNECTION_STRING\nSTORAGE_KEY=$(az storage account keys list --resource-group nodeResourceGroupName --account-name myAKSStorageAccount --query \"[0].value\" -o tsv)\necho Storage account key: $STORAGE_KEY\n```\n\n----------------------------------------\n\nTITLE: PowerShell AKS Cluster Verification Output\nDESCRIPTION: Example output from PowerShell showing the successful upgrade of an AKS cluster to Kubernetes version 1.27.3.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_7\n\nLANGUAGE: output\nCODE:\n```\nName         Location KubernetesVersion ProvisioningState Fqdn                                   \n----         -------- ----------------- ----------------- ----                                   \nmyAKSCluster eastus   1.27.3            Succeeded         myakscluster-dns-379cbbb9.hcp.eastus.azmk8s.io\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl and kubelogin\nDESCRIPTION: Installs the kubectl and kubelogin CLI tools using Azure CLI\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks install-cli\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod Termination Grace Period in Kubernetes YAML\nDESCRIPTION: A pod definition that sets terminationGracePeriodSeconds to 30 seconds, which specifies the amount of time Kubernetes waits before forcefully terminating a pod. This includes time for the PreStop hook to execute.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-app-cluster-reliability.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: example-pod\nspec:\n  terminationGracePeriodSeconds: 30\n  containers:\n  - name: example-container\n    image: nginx\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Storage Account for Airflow Logs\nDESCRIPTION: Creates an Azure Storage Account and container for storing Airflow logs, and stores credentials in Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz storage account create --name $AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_NAME --resource-group $MY_RESOURCE_GROUP_NAME --location $MY_LOCATION --sku Standard_ZRS --output table\nexport AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_KEY=$(az storage account keys list --account-name $AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_NAME --query \"[0].value\" -o tsv)\naz storage container create --name $AKS_AIRFLOW_LOGS_STORAGE_CONTAINER_NAME --account-name $AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_NAME --output table --account-key $AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_KEY\naz keyvault secret set --vault-name $MY_KEYVAULT_NAME --name AKS-AIRFLOW-LOGS-STORAGE-ACCOUNT-NAME --value $AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_NAME\naz keyvault secret set --vault-name $MY_KEYVAULT_NAME --name AKS-AIRFLOW-LOGS-STORAGE-ACCOUNT-KEY --value $AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_KEY\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Managed Disk\nDESCRIPTION: Azure CLI command to create a managed disk for use with AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\naz disk create \\\n  --resource-group MC_myResourceGroup_myAKSCluster_eastus \\\n  --name myAKSDisk \\\n  --size-gb 20 \\\n  --query id --output tsv\n```\n\n----------------------------------------\n\nTITLE: Updating Linux Node Pool to Generation 2 VM\nDESCRIPTION: Azure CLI command to update an existing Linux node pool to use a Generation 2 VM size.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/generation-2-vm.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update --resource-group <resource-group-name> --cluster-name <cluster-name> --name <node-pool-name> --node-vm-size <supported-generation-2-vm-size> --os-type Linux\n```\n\n----------------------------------------\n\nTITLE: Sample AKS Deployment with KEDA Enabled\nDESCRIPTION: Complete ARM template JSON for deploying an AKS cluster with KEDA enabled, including a single node pool of three DS2_v5 nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-arm.md#2025-04-21_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"resources\": [\n        {\n            \"apiVersion\": \"2023-03-01\",\n            \"dependsOn\": [],\n            \"type\": \"Microsoft.ContainerService/managedClusters\",\n            \"location\": \"westcentralus\",\n            \"name\": \"myAKSCluster\",\n            \"properties\": {\n                \"kubernetesVersion\": \"1.27\",\n                \"enableRBAC\": true,\n                \"dnsPrefix\": \"myAKSCluster\",\n                \"agentPoolProfiles\": [\n                    {\n                        \"name\": \"agentpool\",\n                        \"osDiskSizeGB\": 200,\n                        \"count\": 3,\n                        \"enableAutoScaling\": false,\n                        \"vmSize\": \"Standard_D2S_v5\",\n                        \"osType\": \"Linux\",\n                        \"type\": \"VirtualMachineScaleSets\",\n                        \"mode\": \"System\",\n                        \"maxPods\": 110,\n                        \"availabilityZones\": [],\n                        \"nodeTaints\": [],\n                        \"enableNodePublicIP\": false\n                    }\n                ],\n                \"networkProfile\": {\n                    \"loadBalancerSku\": \"standard\",\n                    \"networkPlugin\": \"kubenet\"\n                },\n                \"workloadAutoScalerProfile\": {\n                    \"keda\": {\n                        \"enabled\": true\n                    }\n                }\n            },\n            \"identity\": {\n                \"type\": \"SystemAssigned\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Key Vault Setup Commands\nDESCRIPTION: Commands to create Azure Key Vault and enable the secrets provider add-on.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport AKV_NAME=<azure-key-vault-resource-name>  \naz keyvault create --name $AKV_NAME --resource-group $RESOURCE_GROUP --location $LOCATION\n\naz aks enable-addons --addons azure-keyvault-secrets-provider --resource-group $RESOURCE_GROUP --name $CLUSTER\n```\n\n----------------------------------------\n\nTITLE: Adding a Pod Sandboxing Node Pool to an Existing AKS Cluster\nDESCRIPTION: Commands to add a node pool with Pod Sandboxing support to an existing AKS cluster and update the cluster configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool add --cluster-name myAKSCluster --resource-group myResourceGroup --name nodepool2 --os-sku AzureLinux --workload-runtime KataMshvVmIsolation --node-vm-size Standard_D4s_v3\n```\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables and Getting Kubernetes Credentials\nDESCRIPTION: Sets up environment variables and obtains kubeconfig files for the fleet and member clusters using Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/l4-load-balancing.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport GROUP=<resource-group>\nexport FLEET=<fleet-name>\nexport MEMBER_CLUSTER_1=aks-member-1\nexport MEMBER_CLUSTER_2=aks-member-2\n\naz fleet get-credentials --resource-group ${GROUP} --name ${FLEET} --file fleet\n\naz aks get-credentials --resource-group ${GROUP} --name ${MEMBER_CLUSTER_1} --file aks-member-1\n\naz aks get-credentials --resource-group ${GROUP} --name ${MEMBER_CLUSTER_2} --file aks-member-2\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterResourcePlacement for Member Clusters\nDESCRIPTION: Specification for propagating resources to a specific member cluster using ClusterResourcePlacement.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-envelope-reserved-resources.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n    policy:\n        clusterNames:\n        - kind-cluster-1\n        placementType: PickFixed\n    resourceSelectors:\n    - group: \"\"\n        kind: Namespace\n        name: app\n        version: v1\n    revisionHistoryLimit: 10\n    strategy:\n        type: RollingUpdate\n```\n\n----------------------------------------\n\nTITLE: Sample CoreDNS Autoscaler ConfigMap in AKS\nDESCRIPTION: YAML output showing the default CoreDNS autoscaler ConfigMap with ladder scaling configuration that determines how CoreDNS pods scale based on the number of cores and nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/coredns-custom.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\ndata:\n  ladder: '{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}'\nkind: ConfigMap\nmetadata:\n  name: coredns-autoscaler\n  namespace: kube-system\n  resourceVersion: \"...\"\n  creationTimestamp: \"...\"\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes CLI (kubectl) using Azure CLI\nDESCRIPTION: Installs the Kubernetes command-line tool kubectl locally using Azure CLI command\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks install-cli\n```\n\n----------------------------------------\n\nTITLE: Starting Quarkus in Development Mode\nDESCRIPTION: Command to launch Quarkus in development mode which enables live reload with background compilation and automatic provisioning of development services including a containerized PostgreSQL database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nquarkus dev\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for AKS Access and Identity Documentation\nDESCRIPTION: This YAML snippet defines the frontmatter for the AKS access and identity documentation page. It specifies metadata such as title, description, topic, subservice, date, and author information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-identity.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Concepts - Access and identity in Azure Kubernetes Services (AKS)\ndescription: Learn about access and identity in Azure Kubernetes Service (AKS), including Microsoft Entra integration, Kubernetes role-based access control (Kubernetes RBAC), and roles and bindings.\nms.topic: conceptual\nms.subservice: aks-security\nms.date: 03/07/2024\nauthor: palma21\nms.author: jpalma\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace in AKS\nDESCRIPTION: Creates a new Kubernetes namespace for the Quarkus application deployment\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace ${AKS_NS}\n```\n\n----------------------------------------\n\nTITLE: Setting Azure CLI Variables for NetApp Files Configuration\nDESCRIPTION: Defines environment variables used for Azure NetApp Files configuration including resource group, location, account details, and network settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nRESOURCE_GROUP=\"myresourcegroup\"\nLOCATION=\"mylocation\"\nANF_ACCOUNT_NAME=\"myaccountname\"\nPOOL_NAME=\"mypool1\"\nSIZE=\"poolsize\" # size in TiB\nSERVICE_LEVEL=\"Premium\" # valid values are Standard, Premium and Ultra\nVNET_NAME=\"myvnet\"\nSUBNET_NAME=\"myANFSubnet\"\nADDRESS_PREFIX=\"myprefix\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Dedicated Namespace Pros and Cons\nDESCRIPTION: A markdown table listing the advantages and disadvantages of using dedicated namespace multitenancy in AKS clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/optimize-aks-costs.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Pros | Cons |\n|------|------|\n| • Higher pod density <br> • Best binpacking <br> • Sharing infrastructure to maximize resource utilization | • Unsafe for hostile environments by default <br> • Requires extra security measures in place if all tenants can't be trusted |\n```\n\n----------------------------------------\n\nTITLE: Registering Service Tag Authorized IP Feature Flag in Azure CLI\nDESCRIPTION: This snippet demonstrates how to register the EnableServiceTagAuthorizedIPPreview feature flag using the Azure CLI. It uses the az feature register command to enable the feature for the Microsoft.ContainerService namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"EnableServiceTagAuthorizedIPPreview\"\n```\n\n----------------------------------------\n\nTITLE: Exporting Identity and Resource Group Variables\nDESCRIPTION: Commands to export environment variables for the MC resource group, principal ID, and KAITO identity, which are needed for configuring permissions and identity federation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nexport MC_RESOURCE_GROUP=$(az aks show --resource-group $AZURE_RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --query nodeResourceGroup \\\n    -o tsv)\nexport PRINCIPAL_ID=$(az identity show --name \"ai-toolchain-operator-${CLUSTER_NAME}\" \\\n    --resource-group $MC_RESOURCE_GROUP \\\n    --query 'principalId' \\\n    -o tsv)\nexport KAITO_IDENTITY_NAME=\"ai-toolchain-operator-${CLUSTER_NAME}\"\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Azure Fleet Manager\nDESCRIPTION: Defines required environment variables for managing Fleet resources including resource group, fleet name, cluster ID and strategy name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-create-update-strategy.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport GROUP=<resource-group>\nexport FLEET=<fleet-name>\nexport CLUSTERID=<aks-cluster-resource-id>\nexport STRATEGY=<strategy-name>\n```\n\n----------------------------------------\n\nTITLE: Updating Revision Tag Mapping for Istio Upgrade\nDESCRIPTION: This command updates the prod-stable tag to map to the new Istio revision asm-1-24.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nistioctl tag set prod-stable --revision asm-1-24 --istioNamespace aks-istio-system --overwrite\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Linux Images for Dapr using Azure CLI\nDESCRIPTION: Updates Dapr extension to use Azure Linux (Mariner) based images.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension update --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr \\\n--set global.tag=1.10.0-mariner\n```\n\n----------------------------------------\n\nTITLE: Configuring Private DNS Zone in ARM Template for AKS\nDESCRIPTION: This JSON snippet demonstrates how to configure a custom private DNS zone for an AKS cluster using an ARM template. It specifies the apiServerAccessProfile property with privateDNSZone settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n\"apiServerAccessProfile\": {\n\"enablePrivateCluster\": true,\n\"privateDNSZone\": \"system|none|[resourceId(..., 'Microsoft.Network/privateDnsZones', 'privatelink.<region>.azmk8s.io']\"}\n```\n\n----------------------------------------\n\nTITLE: Applying Ray Job Configuration\nDESCRIPTION: Command to apply the Ray Job specification to the Kubernetes cluster in the kuberay namespace\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n kuberay -f ray-job.pytorch-mnist.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking PVC Status\nDESCRIPTION: Command to verify the status of the persistent volume claim.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pvc azure-managed-disk\n```\n\n----------------------------------------\n\nTITLE: Getting Kubernetes Fleet Credentials\nDESCRIPTION: Retrieves the kubeconfig file for the Kubernetes Fleet hub cluster\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/access-fleet-hub-cluster-kubernetes-api.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz fleet get-credentials --resource-group ${GROUP} --name ${FLEET}\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Status with AppArmor Profile\nDESCRIPTION: This command checks the status of the deployed pod with the AppArmor profile applied.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/secure-container-access.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands\nDESCRIPTION: Commands to remove the application namespace and disable the application routing add-on.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete namespace aks-store\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks approuting disable --name <ClusterName> --resource-group <ResourceGroupName>\n```\n\n----------------------------------------\n\nTITLE: Installing Strimzi Drain Cleaner with Helm\nDESCRIPTION: Installs the Strimzi Drain Cleaner using Helm, specifying the namespace and custom values file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm install strimzi-drain-cleaner oci://quay.io/strimzi-helm/strimzi-drain-cleaner \\\n--namespace strimzi-drain-cleaner \\\n--values values.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Image Names for Azure Container Registry\nDESCRIPTION: Bash commands to set environment variables for the Azure Container Registry name and the auxiliary image name with version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nexport ACR_NAME=<value-from-clipboard>\nexport IMAGE=\"wlsaks-auxiliary-image:1.0\"\n```\n\n----------------------------------------\n\nTITLE: Adding Prometheus Helm Repository\nDESCRIPTION: These commands add the prometheus-community Helm repository and update the repository cache to enable the installation of the Kafka Exporter Helm chart.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Deleting KAITO Workspace on AKS\nDESCRIPTION: This command deletes the KAITO workspace using kubectl. It removes the workspace-falcon-7b-instruct workspace and associated resources from the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl delete workspace workspace-falcon-7b-instruct\n```\n\n----------------------------------------\n\nTITLE: Changing Node Pool Mode from System to User with PowerShell\nDESCRIPTION: This PowerShell script changes an existing node pool's mode from System to User. This operation requires that another system node pool already exists in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_11\n\nLANGUAGE: PowerShell\nCODE:\n```\n$myAKSCluster = Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster\n($myAKSCluster.AgentPoolProfiles | Where-Object Name -eq 'mynodepool').Mode = 'User'\n$myAKSCluster | Set-AzAksCluster\n```\n\n----------------------------------------\n\nTITLE: Creating Azure SQL Database with Entra Admin in Bash\nDESCRIPTION: Creates an Azure SQL Database instance with Microsoft Entra authentication and sets the current user as admin using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nexport ENTRA_ADMIN_NAME=$(az account show --query user.name --output tsv)\n\naz sql server create \\\n    --name $SQL_SERVER_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --enable-ad-only-auth \\\n    --external-admin-principal-type User \\\n    --external-admin-name $ENTRA_ADMIN_NAME \\\n    --external-admin-sid $(az ad signed-in-user show --query id --output tsv)\naz sql db create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --server $SQL_SERVER_NAME \\\n    --name $DB_NAME \\\n    --edition GeneralPurpose \\\n    --compute-model Serverless \\\n    --family Gen5 \\\n    --capacity 2\n```\n\n----------------------------------------\n\nTITLE: Disabling Secure Boot in AKS Node Pool\nDESCRIPTION: This command disables the Secure Boot feature on a specified node pool in an AKS cluster. Note that this update triggers an automatic node reimage operation that can take several minutes per node to complete.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-trusted-launch.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update --cluster-name myCluster --resource-group myResourceGroup --name mynodepool --disable-secure-boot\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Credentials Using Azure CLI\nDESCRIPTION: This command retrieves the credentials for an AKS cluster using the Azure CLI, allowing you to connect to the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kaito-custom-inference-model.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks get-credentials --resource-group <resource-group-name> --name <aks-cluster-name>\n```\n\n----------------------------------------\n\nTITLE: Creating Sample Data for Cosmos DB\nDESCRIPTION: JSON data structure representing a meal plan record to be imported into Azure Cosmos DB for testing the OpenFaaS function.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\" : \"two_person\",\n    \"friendlyName\" : \"Two Person Plan\",\n    \"portionSize\" : \"1-2 Person\",\n    \"mealsPerWeek\" : \"3 Unique meals per week\",\n    \"price\" : 72,\n    \"description\" : \"Our basic plan, delivering 3 meals per week, which will feed 1-2 people.\",\n    \"__v\" : 0\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Node Pool Labels using kubectl\nDESCRIPTION: Checks the newly added node pool labels by filtering for specific label values.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-labels.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes --show-labels | grep -e \"costcenter=5000\" -e \"dept=HR\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster Using Azure CLI\nDESCRIPTION: Command to get credentials for your AKS cluster using Azure CLI, which configures kubectl to connect to your cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --name <cluster-name> --resource-group <resource-group-name>\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for AKS Configuration\nDESCRIPTION: Defines essential environment variables needed for AKS cluster setup including resource group, location, cluster name and DNS prefix.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-flyte.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport RESOURCE_GROUP=\"<resource-group-name>\"\nexport LOCATION=\"<location>\"\nexport CLUSTER_NAME=\"<cluster-name>\"\nexport DNS_NAME_PREFIX=\"<dns-name-prefix>\"\n```\n\n----------------------------------------\n\nTITLE: Azure Container Storage Configuration\nDESCRIPTION: Kubernetes manifest and commands for configuring Azure Container Storage with multi-zone StoragePool setup.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deploy,ds -n acstor\nkubectl apply -f - <<EOF\n---\napiVersion: containerstorage.azure.com/v1\nkind: StoragePool\nmetadata:\n  name: azuredisk-zr\n  namespace: acstor\nspec:\n  zones: [\"1\",\"2\",\"3\"]\n  poolType:\n    azureDisk:\n      skuName: PremiumV2_LRS\n      iopsReadWrite: 5000\n      mbpsReadWrite: 200\n  resources:\n    requests:\n      storage: 1Ti    \nEOF\n```\n\n----------------------------------------\n\nTITLE: Updating deployment.yaml for Environment Variables in YAML\nDESCRIPTION: Modifies the deployment.yaml file to add an env section, passing the name of the Redis deployment as an environment variable to the container.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n...\n          containers:\n            - name: {{ .Chart.Name }}\n              securityContext:\n                {{- toYaml .Values.securityContext | nindent 12 }}\n              image: \"{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}\"\n              imagePullPolicy: {{ .Values.image.pullPolicy }}\n              env:\n              - name: REDIS\n                value: {{ .Values.backendName }}\n...\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Namespace for AKS Store Demo\nDESCRIPTION: Creates a new namespace called 'aks-store-demo' in the Kubernetes cluster to isolate the application resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns aks-store-demo\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Node Status\nDESCRIPTION: Bash commands for viewing node status and details in a Kubernetes cluster, showing both the command and example output with node information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-windows-os.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes -o wide\n```\n\n----------------------------------------\n\nTITLE: Updating Tags on Existing AKS Cluster\nDESCRIPTION: Command to update tags on an existing AKS cluster, which will overwrite any previous tags with the new set of team and cost center tags.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --tags team=alpha costcenter=1234\n```\n\n----------------------------------------\n\nTITLE: Issue Handling Support Table in Markdown\nDESCRIPTION: Markdown table defining the support priority levels for different types of issues in the Dapr extension.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-overview.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|   | Description | Security risks/Regressions | Functional issues |\n| - | ----------- | -------------------------- | ----------------- |\n| **Extension operations** | Issues encountered during extension operations, such as installing/uninstalling or upgrading the Dapr extension. | Microsoft prioritizes for immediate resolution. | Microsoft investigates and addresses as needed. |\n```\n\n----------------------------------------\n\nTITLE: Viewing Kubernetes Resources\nDESCRIPTION: Bash commands to view the deployed Kubernetes resources for the bookbuyer, bookthief, bookstore, and bookwarehouse services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods,deployments,serviceaccounts -n bookbuyer\nkubectl get pods,deployments,serviceaccounts -n bookthief\n\nkubectl get pods,deployments,serviceaccounts,services,endpoints -n bookstore\nkubectl get pods,deployments,serviceaccounts,services,endpoints -n bookwarehouse\n```\n\n----------------------------------------\n\nTITLE: Tracking KAITO Workspace Deployment on AKS\nDESCRIPTION: This command tracks the live resource changes in the KAITO workspace using kubectl. It monitors the status of the workspace-falcon-7b-instruct workspace deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get workspace workspace-falcon-7b-instruct -w\n```\n\n----------------------------------------\n\nTITLE: Modifying an existing ImageList\nDESCRIPTION: Shows how to edit an existing ImageList to add a new image target for manual cleanup using kubectl edit.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl edit ImageList imagelist\n\n# Add a new image to the list\napiVersion: eraser.sh/v1\nkind: ImageList\nmetadata:\n  name: imagelist\nspec:\n  images:\n      docker.io/library/python:alpine3.18\n```\n\n----------------------------------------\n\nTITLE: Checking Node OS Upgrade Channel Configuration in AKS\nDESCRIPTION: Azure CLI command to check the current nodeOsUpgradeChannel setting for an AKS cluster by querying the autoUpgradeProfile.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/auto-upgrade-node-os-image.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query \"autoUpgradeProfile\"\n```\n\n----------------------------------------\n\nTITLE: Installing Fleet CLI Extension\nDESCRIPTION: Commands to install and update the Azure CLI fleet extension required for managing Fleet Manager operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-automation.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz extension add --name fleet\n```\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz extension update --name fleet\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Azure CLI in Bash\nDESCRIPTION: This command connects to the Azure Kubernetes Service (AKS) cluster using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription <subscription>;\naz aks get-credentials \\\n    --resource-group <resource-group> \\\n    --name <name>\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Monitor Workspace\nDESCRIPTION: Deploys an Azure Monitor workspace for cluster monitoring using the az monitor account create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nexport AMW_PRIMARY=\"amw-${LOCAL_NAME}-${SUFFIX}\"\n\nexport AMW_RESOURCE_ID=$(az monitor account create \\\n    --name $AMW_PRIMARY \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --location $PRIMARY_CLUSTER_REGION \\\n    --tags $TAGS \\\n    --query \"id\" \\\n    --output tsv)\n\necho $AMW_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Restarting Deployment for Istio Sidecar Update\nDESCRIPTION: This command restarts a deployment to update the Istio sidecar to the new revision.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart deployment <deployment name> -n <deployment namespace>\n```\n\n----------------------------------------\n\nTITLE: Creating Valkey Replica StatefulSet in Kubernetes\nDESCRIPTION: This snippet creates a StatefulSet for Valkey replicas with specific affinity rules to distribute pods across nodes in zone 3. It includes configuration for container image, environment variables, volume mounts, and storage claims.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: valkey-replicas\n  namespace: valkey\nspec:\n  serviceName: \"valkey-replicas\"\n  replicas: 3\n  selector:\n    matchLabels:\n      app: valkey\n  template:\n    metadata:\n      labels:\n        app: valkey\n        appCluster: valkey-replicas\n    spec:\n      terminationGracePeriodSeconds: 20\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: agentpool\n                operator: In\n                values:\n                - valkey\n              - key: topology.kubernetes.io/zone\n                operator: In\n                values:\n                - ${MY_LOCATION}-3\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 90\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: app\n                  operator: In\n                  values:\n                  - valkey\n              topologyKey: kubernetes.io/hostname\n      containers:\n      - name: valkey\n        image: \"${MY_ACR_REGISTRY}.azurecr.io/valkey:latest\"\n        env:\n        - name: VALKEY_PASSWORD_FILE\n          value: \"/etc/valkey-password/valkey-password-file.conf\"\n        - name: MY_POD_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n        command:\n          - \"valkey-server\"\n        args:\n          - \"/conf/valkey.conf\"\n          - \"--cluster-announce-ip\"\n          - \"$(MY_POD_IP)\"\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"100Mi\"\n        ports:\n            - name: valkey\n              containerPort: 6379\n              protocol: \"TCP\"\n            - name: cluster\n              containerPort: 16379\n              protocol: \"TCP\"\n        volumeMounts:\n        - name: conf\n          mountPath: /conf\n          readOnly: false\n        - name: data\n          mountPath: /data\n          readOnly: false\n        - name: valkey-password\n          mountPath: /etc/valkey-password\n          readOnly: true\n      volumes:\n      - name: valkey-password\n        csi:\n          driver: secrets-store.csi.k8s.io\n          readOnly: true\n          volumeAttributes:\n            secretProviderClass: valkey-password\n      - name: conf\n        configMap:\n          name: valkey-cluster\n          defaultMode: 0755\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: managed-csi-premium\n      resources:\n        requests:\n          storage: 20Gi\nEOF\n```\n\n----------------------------------------\n\nTITLE: Defining Python Dependencies\nDESCRIPTION: Creates requirements.txt file with necessary Python packages including Locust, PyMongo and Faker\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat > requirements.txt <<EOF\nlocust\npymongo\nFaker\nEOF\n```\n\n----------------------------------------\n\nTITLE: Checking Deployed Pod Status\nDESCRIPTION: This command retrieves the status of deployed pods in the current namespace using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_16\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Creating Kubelet Configuration for Windows Node Pools\nDESCRIPTION: This JSON configuration file specifies custom kubelet settings for Windows node pools in AKS. It includes settings for image garbage collection thresholds and container log size limits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-node-configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n \"imageGcHighThreshold\": 90,\n \"imageGcLowThreshold\": 70,\n \"containerLogMaxSizeMB\": 20,\n \"containerLogMaxFiles\": 6\n}\n```\n\n----------------------------------------\n\nTITLE: Final Verification of Certificate Rotation in AKS\nDESCRIPTION: This kubectl command performs a final verification to ensure the certificates have been updated successfully.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/certificate-rotation.md#2025-04-23_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Accepting Terms for Kubernetes Applications Using Azure PowerShell\nDESCRIPTION: This Azure PowerShell command retrieves and accepts the terms and agreements for a Kubernetes application before deployment. You need to provide the Publisher ID, Product ID, and Plan ID values that you copied from the Marketplace application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-application-template.md#2025-04-21_snippet_1\n\nLANGUAGE: azurepowershell\nCODE:\n```\n## Get-AzMarketplaceTerms -Publisher <Publisher ID> -Product <Product ID> -Name <Plan ID>\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Non-Cilium Data Plane and Advanced Container Networking Services\nDESCRIPTION: This command creates a new AKS cluster with a non-Cilium data plane and enables Advanced Container Networking Services. Note that Container Network Security features are not available for non-Cilium clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set an environment variable for the AKS cluster name. Make sure to replace the placeholder with your own value.\nexport CLUSTER_NAME=\"<aks-cluster-name>\"\n\n# Create an AKS cluster\naz aks create \\\n    --name $CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP \\\n    --generate-ssh-keys \\\n    --network-plugin azure \\\n    --network-plugin-mode overlay \\\n    --pod-cidr 192.168.0.0/16 \\\n    --enable-acns\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Monitor Resource for Prometheus\nDESCRIPTION: This command creates an Azure Monitor resource that serves as the backend for storing Prometheus metrics collected from the AKS cluster. It requires specifying a unique name and location.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\n#Set an environment variable for the Grafana name. Make sure to replace the placeholder with your own value.\nexport AZURE_MONITOR_NAME=\"<azure-monitor-name>\"\n\n# Create Azure monitor resource\naz resource create \\\n    --resource-group $RESOURCE_GROUP \\\n    --namespace microsoft.monitor \\\n    --resource-type accounts \\\n    --name $AZURE_MONITOR_NAME \\\n    --location eastus \\\n    --properties '{}'\n```\n\n----------------------------------------\n\nTITLE: Creating Managed Identity and Assigning Network Permissions\nDESCRIPTION: Creates a user-assigned managed identity and grants it Network Contributor role on the virtual network to allow AKS to manage network resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nIDENTITY_NAME=\"myAutomaticIdentity\"\nIDENTITY_ID=$(az identity create --name $IDENTITY_NAME --resource-group $RG_NAME --query id -o tsv)\nPRINCIPAL_ID=$(az identity show --name $IDENTITY_NAME --resource-group $RG_NAME --query principalId -o tsv)\nVNET_ID=$(az network vnet show --resource-group $RG_NAME --name $VNET_NAME --query id -o tsv)\n\naz role assignment create --assignee $PRINCIPAL_ID --scope $VNET_ID --role \"Network Contributor\"\n```\n\n----------------------------------------\n\nTITLE: Monitoring KAITO Workspace Status\nDESCRIPTION: This command monitors the status of the KAITO workspace, allowing you to track the deployment progress.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kaito-custom-inference-model.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get workspace workspace-custom-llm -w\n```\n\n----------------------------------------\n\nTITLE: Applying ConfigMap and Restarting Metrics Server\nDESCRIPTION: Bash commands for applying the ConfigMap and restarting Metrics Server pods to apply the new configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-metrics-server-vertical-pod-autoscaler.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f metrics-server-config.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n kube-system delete po -l k8s-app=metrics-server\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n kube-system logs metrics-server-pod-name -c metrics-server-vpa\n```\n\n----------------------------------------\n\nTITLE: Retrieving Resource Group ID\nDESCRIPTION: Fetches the resource group ID of the AKS cluster using the Azure CLI. This ID is used for assigning roles at the resource group level.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nRG_ID=$(az group show \\\n    --resource-group <resource-group-name> \\\n    --query id \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding MongoDB Locust Web Interface\nDESCRIPTION: Command to set up port forwarding for accessing the Locust web interface on localhost port 8089.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n $AKS_MONGODB_NAMESPACE port-forward mongodb-locust-client-564695f8f-q6745 8089:8089\n```\n\n----------------------------------------\n\nTITLE: Creating Values Configuration for Kafka Exporter\nDESCRIPTION: This snippet creates a values.yaml file with configuration settings for the Kafka Exporter Helm chart, including the Kafka bootstrap server endpoint and ServiceMonitor settings for Azure Managed Prometheus integration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF > values.yaml\nkafkaServer:\n  - <kafka-bootstrap-fqdn-or-privateip>:9092 #additional kafka clusters can be added to the list\nprometheus:\n  serviceMonitor:\n    namespace: azmon-kafka-exporter #ensure namespace is the same as in step 1\n    enabled: true\n    apiVersion: azmonitoring.coreos.com/v1\nEOF\n```\n\n----------------------------------------\n\nTITLE: Assigning Storage Roles to HPC Cache Service Principal\nDESCRIPTION: Commands to assign Storage Account Contributor and Storage Blob Data Contributor roles to the HPC Cache service principal, allowing it to manage and access blob storage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create --role \"Storage Account Contributor\" --assignee $HPC_CACHE_ID --scope $STORAGE_ACCOUNT_ID\naz role assignment create --role \"Storage Blob Data Contributor\" --assignee $HPC_CACHE_ID --scope $STORAGE_ACCOUNT_ID\n```\n\n----------------------------------------\n\nTITLE: Setting Local IP Address Environment Variable for Firewall Rules\nDESCRIPTION: Sets an environment variable with the local machine's IP address to be used in PostgreSQL firewall rules. This allows the local development environment to connect to the Azure-hosted PostgreSQL database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport AZ_LOCAL_IP_ADDRESS=<your local IP address>\n```\n\n----------------------------------------\n\nTITLE: Creating Windows Node Pool with Deallocate Scale-down Mode\nDESCRIPTION: This command adds a new Windows node pool to an AKS cluster with 20 nodes, setting the scale-down mode to deallocate. It specifies managed OS disks and sets the maximum number of pods per node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-down-mode.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --node-count 20 --scale-down-mode Deallocate --os-type Windows --node-osdisk-type Managed --max-pods 10 --name npwin2 --cluster-name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Example Istio Mesh Configuration YAML for AKS\nDESCRIPTION: YAML template for creating a ConfigMap to customize Istio mesh configuration. The ConfigMap must be named according to the specific Istio revision and placed in the aks-istio-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-meshconfig.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: istio-shared-configmap-asm-1-24\n  namespace: aks-istio-system\ndata:\n  mesh: |-\n    accessLogFile: /dev/stdout\n    defaultConfig:\n      holdApplicationUntilProxyStarts: true\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Response from AKS Cluster Information Command\nDESCRIPTION: Sample JSON output from the 'az aks show' command, highlighting the logAnalyticsWorkspaceResourceID which is needed to access the workspace where Container Insights logs are stored.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n\"addonProfiles\": {\n  \"omsagent\": {\n    \"config\": {\n      \"logAnalyticsWorkspaceResourceID\": \"/subscriptions/<WorkspaceSubscription>/resourceGroups/<DefaultWorkspaceRG>/providers/Microsoft.OperationalInsights/workspaces/<defaultWorkspaceName>\"\n    },\n    \"enabled\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Node Shell to Inspect SSH Service Status\nDESCRIPTION: This command uses kubectl node-shell to access a bash shell on a specific node in the AKS cluster, which allows for direct inspection of the node's configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl node-shell aks-nodepool1-20785627-vmss000001\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Advanced Networking and Security Features\nDESCRIPTION: Deploys an AKS cluster using Azure CLI with various advanced features including AAD integration, managed identity, network policies, and autoscaling. The cluster is configured with specific networking, security, and node pool settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n--name $AKS_CLUSTER_NAME \\\n--aad-admin-group-object-ids $AAD_ADMIN_GROUP_OBJECT_IDS \\\n--aad-tenant-id $AAD_TENANT_ID \\\n--assign-identity $(az identity show --resource-group $RESOURCE_GROUP_NAME --name $USER_ASSIGNED_IDENTITY_NAME --query id -o tsv) \\\n--attach-acr $(az acr show --resource-group $RESOURCE_GROUP_NAME --name $ACR_NAME --query id -o tsv) \\\n--auto-upgrade-channel patch \\\n--enable-aad \\\n--enable-addons monitoring \\\n--enable-azure-monitor-metrics \\\n--enable-cluster-autoscaler \\\n--enable-managed-identity \\\n--enable-oidc-issuer \\\n--enable-workload-identity \\\n--kubernetes-version $KUBERNETES_VERSION \\\n--load-balancer-sku standard \\\n--location $LOCATION \\\n--max-count $SYSTEM_NODE_COUNT_MAX \\\n--max-pods 110 \\\n--min-count $SYSTEM_NODE_COUNT_MIN \\\n--network-dataplane cilium \\\n--network-plugin azure \\\n--network-plugin-mode overlay \\\n--network-policy cilium \\\n--node-osdisk-type Ephemeral \\\n--node-os-upgrade-channel NodeImage \\\n--node-vm-size $SYSTEM_NODE_VM_SIZE \\\n--nodepool-labels \"role=system\" \\\n--nodepool-name systempool \\\n--nodepool-tags \"env=production\" \\\n--os-sku AzureLinux \\\n--outbound-type userAssignedNATGateway \\\n--pod-cidr 10.244.0.0/16 \\\n--resource-group $RESOURCE_GROUP_NAME \\\n--tags \"env=production\" \\\n--tier $AKS_TIER \\\n--vnet-subnet-id $(az network vnet subnet show --resource-group $RESOURCE_GROUP_NAME --vnet-name $VNET_NAME --name $SUBNET_NAME --query id -o tsv) \\\n--workspace-resource-id $(az monitor log-analytics workspace show --resource-group $RESOURCE_GROUP_NAME --workspace-name $LOG_ANALYTICS_WORKSPACE_NAME --query id -o tsv) \\\n--zones 1 2 3\n```\n\n----------------------------------------\n\nTITLE: Checking RayJob Status\nDESCRIPTION: Command to check the status and deployment information of the RayJob.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get rayjob -n kuberay\n```\n\n----------------------------------------\n\nTITLE: AKS Cluster Verification Output\nDESCRIPTION: Example output showing the successful upgrade of an AKS cluster to Kubernetes version 1.27.3.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: output\nCODE:\n```\nName          Location    ResourceGroup    KubernetesVersion    ProvisioningState    Fqdn\n------------  ----------  ---------------  -------------------  -------------------  ----------------------------------------------\nmyAKSCluster  eastus      myResourceGroup  1.27.3               Succeeded            myakscluster-dns-379cbbb9.hcp.eastus.azmk8s.io\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Hello World Application One with Secrets Store\nDESCRIPTION: YAML configuration for deploying the first hello world application with CSI secrets store integration. Includes deployment and service definitions with volume mounts for secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: aks-helloworld-one  \nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: aks-helloworld-one\n  template:\n    metadata:\n      labels:\n        app: aks-helloworld-one\n    spec:\n      containers:\n      - name: aks-helloworld-one\n        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1\n        ports:\n        - containerPort: 80\n        env:\n        - name: TITLE\n          value: \"Welcome to Azure Kubernetes Service (AKS)\"\n        volumeMounts:\n        - name: secrets-store-inline\n          mountPath: \"/mnt/secrets-store\"\n          readOnly: true\n      volumes:\n      - name: secrets-store-inline\n        csi:\n          driver: secrets-store.csi.k8s.io\n          readOnly: true\n          volumeAttributes:\n            secretProviderClass: \"azure-tls\"\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: aks-helloworld-one  \nspec:\n  type: ClusterIP\n  ports:\n  - port: 80\n  selector:\n    app: aks-helloworld-one\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group in Azure using PowerShell\nDESCRIPTION: Creates a new Azure resource group named 'myResourceGroup' in the East US region. This is a prerequisite step before deploying an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-powershell.md#2025-04-21_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nNew-AzResourceGroup -Name myResourceGroup -Location eastus\n```\n\n----------------------------------------\n\nTITLE: Adding Multi-instance GPU Node Pool via HTTP Request\nDESCRIPTION: HTTP request body for creating a GPU node pool with MIG configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-multi-instance.md#2025-04-21_snippet_2\n\nLANGUAGE: http\nCODE:\n```\n{\n    \"properties\": {\n        \"count\": 1,\n        \"vmSize\": \"Standard_ND96asr_v4\",\n        \"type\": \"VirtualMachineScaleSets\",\n        \"gpuInstanceProfile\": \"MIG1g\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Environment Variables for Azure Resources\nDESCRIPTION: Bash commands to define environment variables for Azure resource names using a unique value pattern. These variables are used when creating the resource group, PostgreSQL server, AKS cluster, and other resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport UNIQUE_VALUE=<your unique value, such as ejb010717>\nexport RESOURCE_GROUP_NAME=${UNIQUE_VALUE}rg\nexport LOCATION=<your desired Azure region for deploying your resources - for example, northeurope>\nexport REGISTRY_NAME=${UNIQUE_VALUE}reg\nexport DB_SERVER_NAME=${UNIQUE_VALUE}db\nexport DB_NAME=demodb\nexport CLUSTER_NAME=${UNIQUE_VALUE}aks\nexport AKS_NS=${UNIQUE_VALUE}ns\n```\n\n----------------------------------------\n\nTITLE: Deleting MongoDB StatefulSet\nDESCRIPTION: Deletes a specific StatefulSet named cluster-aks-mongodb-rs0 from the MongoDB namespace\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete sts -n $AKS_MONGODB_NAMESPACE cluster-aks-mongodb-rs0\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Deployment Status with kubectl\nDESCRIPTION: Command to verify the pod has been deployed and is running on the virtual node, showing detailed information including the node it's scheduled on.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get pods -o wide\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Links for Windows Containers on AKS\nDESCRIPTION: Collection of markdown links and references for Windows container documentation, including internal Azure docs links and external resources for GitHub and release tracking.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/windows-best-practices.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- LINKS - internal -->\n[azure-cni-overlay]: ./azure-cni-overlay.md\n[azure-cni-dynamic-ip-allocation]: ./configure-azure-cni-dynamic-ip-allocation.md\n[azure-cni-choose-network-model]: ./azure-cni-overlay.md#choosing-a-network-model-to-use\n[network-concepts-for-aks-applications]: ./concepts-network.md\n[windows-vs-linux]: ./windows-vs-linux-containers.md\n[azurenpm-vs-calico]: ./use-network-policies.md#differences-between-network-policy-engines-cilium-azure-npm-and-calico\n[network-policies-aks]: ./use-network-policies.md\n[dsr]: ../load-balancer/load-balancer-multivip-overview.md#rule-type-2-backend-port-reuse-by-using-floating-ip\n[upgrade-aks-cluster]: ./upgrade-cluster.md\n[upgrade-aks-node-images]: ./node-image-upgrade.md\n[upgrade-windows-workloads-aks]: ./upgrade-windows-2019-2022.md\n[windows-on-aks-partner-solutions]: ./windows-aks-partner-solutions.md\n[use-windows-annual]: ./windows-annual-channel.md\n\n<!-- LINKS - external -->\n[aks-release-notes]: https://github.com/Azure/AKS/releases\n[aks-release-tracker]: https://releases.aks.azure.com/\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Firewall Rules in Bash\nDESCRIPTION: Adds local IP address to Azure SQL Database firewall rules for local testing access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nexport AZ_LOCAL_IP_ADDRESS=$(curl -s https://whatismyip.akamai.com)\naz sql server firewall-rule create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --server $SQL_SERVER_NAME \\\n    --name AllowLocalIP \\\n    --start-ip-address $AZ_LOCAL_IP_ADDRESS \\\n    --end-ip-address $AZ_LOCAL_IP_ADDRESS\n```\n\n----------------------------------------\n\nTITLE: Getting AKS OIDC Issuer URL\nDESCRIPTION: Retrieves the OIDC Issuer URL from the AKS cluster, which is required for establishing federated credentials. This is a prerequisite for workload identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport AKS_OIDC_ISSUER=\"$(az aks show --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --query \"oidcIssuerProfile.issuerUrl\" -o tsv)\"\necho $AKS_OIDC_ISSUER\n```\n\n----------------------------------------\n\nTITLE: Importing Valkey Image to Azure Container Registry\nDESCRIPTION: This Azure CLI command imports the Valkey image from Docker Hub into the specified Azure Container Registry. This ensures the image is available in the private registry for use in the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr import \\\n    --name $MY_ACR_REGISTRY \\\n    --source docker.io/valkey/valkey:latest  \\\n    --image valkey:latest \\\n    --output table\n```\n\n----------------------------------------\n\nTITLE: Installing Dapr with Custom Storage Class Using Bicep\nDESCRIPTION: Bicep code to configure Dapr with a custom storage class and high availability enabled for multi-zone deployments.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_10\n\nLANGUAGE: bicep\nCODE:\n```\nproperties: {\n  configurationSettings: {\n    'dapr_placement.volumeclaims.storageClassName': 'custom-zone-redundant-storage'\n    'global.ha.enabled': true  \n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Intercepting Traffic with Telepresence\nDESCRIPTION: Command to intercept traffic from a service in the AKS cluster and route it to the local machine using Telepresence.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-telepresence-aks.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncd src/store-front\ntelepresence intercept store-front --port 8080:80 --env-file .env\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure Region Short Names with Azure CLI\nDESCRIPTION: Command to list available Azure locations to determine the region name to use in subsequent commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: Monitoring NAP Selection Events with kubectl\nDESCRIPTION: This kubectl command allows monitoring of NAP-related events in the Kubernetes cluster. It filters events sourced from Karpenter and watches for new events.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get events -A --field-selector source=karpenter -w\n```\n\n----------------------------------------\n\nTITLE: Monitoring Service External IP with kubectl in Bash\nDESCRIPTION: This command continuously monitors the 'sample' service to watch for changes in its external IP address. It uses the '--watch' flag to keep updating the output until the external IP is assigned.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-portal.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get service sample --watch\n```\n\n----------------------------------------\n\nTITLE: Update DCGM Exporter Service Monitor Configuration\nDESCRIPTION: YAML configuration update to change the apiVersion for Azure Managed Prometheus compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-gpu-metrics.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: azmonitoring.coreos.com/v1\n...\n...\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group\nDESCRIPTION: Creates a new Azure resource group using the Azure CLI to contain all Airflow-related resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name $MY_RESOURCE_GROUP_NAME --location $MY_LOCATION --output table\n```\n\n----------------------------------------\n\nTITLE: Applying ConfigMap Configuration\nDESCRIPTION: Kubectl command to apply the control plane metrics configuration to the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f configmap-controlplane.yaml\n```\n\n----------------------------------------\n\nTITLE: Deploying and Verifying IIS Pod\nDESCRIPTION: Commands for deploying the IIS pod and verifying its status using kubectl. Includes deployment, status checking, and volume mount verification.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f anf-iis-deploy-pod.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod iis-pod\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it iis-pod –- cmd.exe\n```\n\n----------------------------------------\n\nTITLE: Port-Forwarding for Airflow UI Access\nDESCRIPTION: This command sets up port-forwarding to access the Airflow UI securely through localhost:8080.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward svc/airflow-webserver 8080:8080 -n airflow\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster using Azure PowerShell\nDESCRIPTION: PowerShell command to delete an AKS cluster named 'myAKSCluster' from the specified resource group. This operation permanently removes the cluster and all its resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/delete-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nRemove-AzAksCluster -Name myAKSCluster -ResourceGroupName myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Verifying OSM Installation\nDESCRIPTION: Verifies that the OSM client binary is correctly installed and accessible from the system PATH by checking its version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/servicemesh/osm/open-service-mesh-binary-install-macos.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nosm version\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kubernetes Cluster\nDESCRIPTION: This command retrieves the status of all pods in the Kubernetes cluster. It's used to verify that all pods are in the 'Running' state before proceeding with further steps.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Listing Registry Images with PowerShell\nDESCRIPTION: Command to list all images in the ACR instance using PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-acr.md#2025-04-21_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzContainerRegistryRepository -RegistryName $ACRNAME\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials\nDESCRIPTION: Azure CLI command to retrieve the credentials for the newly created AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-confidential-containers-default-policy.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Modifying Snapshot History Configuration\nDESCRIPTION: YAML configuration example showing how to modify the revision history limit in a ClusterResourcePlacement specification.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-placement-snapshots.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-example\nspec:\n  revisionHistoryLimit: 20   # keep 20 items in history\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-namespace\n      version: v1\n  policy:\n    placementType: PickN\n    numberOfClusters: 2\n    affinity:\n      clusterAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  fleet.azure.com/location: westus\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n      maxSurge: 50%\n```\n\n----------------------------------------\n\nTITLE: Updating Existing Node Pool Labels using Azure CLI\nDESCRIPTION: Updates labels on an existing node pool, overwriting previous labels with new department and cost center values.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-labels.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name labelnp \\\n    --labels dept=ACCT costcenter=6000 \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Configuring Envelope ConfigMap Annotation in Kubernetes Fleet\nDESCRIPTION: Demonstrates how to designate a ConfigMap as an envelope object using Kubernetes Fleet reserved annotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-envelope-reserved-resources.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  annotations:\n    kubernetes-fleet.io/envelope-configmap: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Auto-Upgrade Maintenance Schedule JSON Configuration\nDESCRIPTION: JSON configuration for quarterly maintenance windows with specific time slots and blackout dates in UTC-08 timezone\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"properties\": {\n    \"maintenanceWindow\": {\n        \"schedule\": {\n            \"absoluteMonthly\": {\n                \"intervalMonths\": 3,\n                \"dayOfMonth\": 1\n            }\n        },\n        \"durationHours\": 4,\n        \"utcOffset\": \"-08:00\",\n        \"startTime\": \"09:00\",\n        \"notAllowedDates\": [\n            {\n                \"start\": \"2023-12-23\",\n                \"end\": \"2024-01-05\"\n            }\n        ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster for Certificate Rotation\nDESCRIPTION: This Azure CLI command connects to the AKS cluster using az aks get-credentials before performing certificate rotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/certificate-rotation.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Exporting Terraform Output as Environment Variables\nDESCRIPTION: This bash script exports Terraform output values as environment variables. These variables are used in subsequent steps of the Valkey deployment process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nexport MY_ACR_REGISTRY=$(terraform output -raw acr_registry_name)\nexport MY_CLUSTER_NAME=$(terraform output -raw aks_cluster_name)\n```\n\n----------------------------------------\n\nTITLE: Creating Azure NetApp Files Capacity Pool\nDESCRIPTION: Creates a new capacity pool within the Azure NetApp Files account with specified size and service level.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz netappfiles pool create \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $LOCATION \\\n    --account-name $ANF_ACCOUNT_NAME \\\n    --pool-name $POOL_NAME \\\n    --size $SIZE \\\n    --service-level $SERVICE_LEVEL\n```\n\n----------------------------------------\n\nTITLE: Setting up PoP Token Authentication for AKS\nDESCRIPTION: Configures PoP token authentication using service principal credentials stored in environment variables. Sets up KUBECONFIG path and converts kubeconfig with spn login method and pop claims.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l spn --pop-enabled --pop-claims \"u=/ARM/ID/OF/CLUSTER\"\n\nexport AAD_SERVICE_PRINCIPAL_CLIENT_ID=<SPN client ID>\nexport AAD_SERVICE_PRINCIPAL_CLIENT_SECRET=<SPN secret>\n```\n\n----------------------------------------\n\nTITLE: Pod Manifest with Seccomp Profile for Pre-1.19 AKS\nDESCRIPTION: YAML configuration for a pod that implements the custom seccomp profile using annotations, attempting to run a chmod command that should be blocked.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/secure-container-access.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: chmod-prevented\n  annotations:\n    seccomp.security.alpha.kubernetes.io/pod: localhost/prevent-chmod\nspec:\n  containers:\n  - name: chmod\n    image: mcr.microsoft.com/dotnet/runtime-deps:6.0\n    command:\n      - \"chmod\"\n    args:\n     - \"777\"\n     - /etc/hostname\n  restartPolicy: Never\n```\n\n----------------------------------------\n\nTITLE: Getting Subnet ID with Azure CLI\nDESCRIPTION: Command to retrieve the ID of the AKS subnet, which is needed when creating the AKS cluster with advanced networking.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet show --resource-group myResourceGroup --vnet-name myVnet --name myAKSSubnet --query id -o tsv\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Identity Information\nDESCRIPTION: Extracts the Identity ID and Object ID created by the Azure KeyVault Secret Provider Addon for the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport userAssignedIdentityID=$(az aks show --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --query addonProfiles.azureKeyvaultSecretsProvider.identity.clientId --output tsv)\nexport userAssignedObjectID=$(az aks show --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --query addonProfiles.azureKeyvaultSecretsProvider.identity.objectId --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with NFS Volume Mount\nDESCRIPTION: Defines a YAML configuration for an nginx pod that mounts the Azure NetApp Files volume using the NFS persistent volume claim. The pod writes timestamp data to a file in the mounted volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: nginx-nfs\nspec:\n  containers:\n  - image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n    name: nginx-nfs\n    command:\n    - \"/bin/sh\"\n    - \"-c\"\n    - while true; do echo $(date) >> /mnt/azure/outfile; sleep 1; done\n    volumeMounts:\n    - name: disk01\n      mountPath: /mnt/azure\n  volumes:\n  - name: disk01\n    persistentVolumeClaim:\n      claimName: pvc-nfs\n```\n\n----------------------------------------\n\nTITLE: Cloning the Dapr Workflow Sample Repository\nDESCRIPTION: Git command to clone the sample Dapr workflow application repository from GitHub.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/Azure/dapr-workflows-aks-sample.git\n```\n\n----------------------------------------\n\nTITLE: Upgrading Node Pool to Snapshot Configuration in Azure CLI\nDESCRIPTION: This command upgrades an existing node pool to match the configuration of a snapshot. The snapshot must have a more recent Kubernetes version and node image version than the current node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-pool-snapshot.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool upgrade --name nodepool1 --cluster-name myAKSCluster --resource-group myResourceGroup --snapshot-id $SNAPSHOT_ID\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Storage Class\nDESCRIPTION: Command to create the custom storage class in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f sc-azuredisk-csi-waitforfirstconsumer.yaml\n```\n\n----------------------------------------\n\nTITLE: Sample NPD Prometheus Metrics Output\nDESCRIPTION: Example output showing the format of scraped metrics from Node Problem Detector, including problem gauges for different event types.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-problem-detector.md#2025-04-21_snippet_3\n\nLANGUAGE: output\nCODE:\n```\nproblem_gauge{reason=\"UnregisterNetDevice\",type=\"FrequentUnregisterNetDevice\"} 0\nproblem_gauge{reason=\"VMEventScheduled\",type=\"VMEventScheduled\"} 0\n```\n\n----------------------------------------\n\nTITLE: Testing the Cosmos DB Query Function\nDESCRIPTION: Command to invoke the deployed function that queries Azure Cosmos DB using cURL, which should return the previously imported meal plan data.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s http://52.186.64.52:8080/function/cosmos-query\n```\n\n----------------------------------------\n\nTITLE: Listing pods in app-routing-system namespace\nDESCRIPTION: This command lists the pods in the app-routing-system namespace, which includes the ingress-nginx controller pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-prometheus.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n app-routing-system\n```\n\n----------------------------------------\n\nTITLE: Deploying the Untrusted Pod with kubectl apply\nDESCRIPTION: This command applies the YAML manifest to create the untrusted pod in the AKS cluster using the kubectl apply command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f untrusted-app.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for AKS Firewall Configuration\nDESCRIPTION: Defines environment variables used for resource creation including naming conventions for the AKS cluster, virtual network, subnets, and firewall components.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nPREFIX=\"aks-egress\"\nRG=\"${PREFIX}-rg\"\nLOC=\"eastus\"\nPLUGIN=azure\nAKSNAME=\"${PREFIX}\"\nVNET_NAME=\"${PREFIX}-vnet\"\nAKSSUBNET_NAME=\"aks-subnet\"\nFWSUBNET_NAME=\"AzureFirewallSubnet\"\nFWNAME=\"${PREFIX}-fw\"\nFWPUBLICIP_NAME=\"${PREFIX}-fwpublicip\"\nFWIPCONFIG_NAME=\"${PREFIX}-fwconfig\"\nFWROUTE_TABLE_NAME=\"${PREFIX}-fwrt\"\nFWROUTE_NAME=\"${PREFIX}-fwrn\"\nFWROUTE_NAME_INTERNET=\"${PREFIX}-fwinternet\"\n```\n\n----------------------------------------\n\nTITLE: Listing MongoDB Secrets\nDESCRIPTION: Retrieves the list of Kubernetes Secrets in the MongoDB namespace, which include credentials, SSL certificates, and encryption keys for the MongoDB deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secrets -n ${AKS_MONGODB_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Generating TLS Certificate with OpenSSL for AKS Ingress\nDESCRIPTION: This bash command generates a self-signed TLS certificate for use with an NGINX Ingress Controller. It creates a certificate valid for 365 days with the common name 'demo.azure.com'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport CERT_NAME=aks-ingress-cert\nopenssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -out aks-ingress-tls.crt \\\n    -keyout aks-ingress-tls.key \\\n    -subj \"/CN=demo.azure.com/O=aks-ingress-tls\"\n```\n\n----------------------------------------\n\nTITLE: Creating ConfigMap for Prometheus Scrape Configuration\nDESCRIPTION: This command creates a Kubernetes ConfigMap in the kube-system namespace, containing the Prometheus scraping configuration. This enables pod annotation-based metrics collection for your AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-metrics-managed-prometheus.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create configmap ama-metrics-prometheus-config --from-file=prometheus-config -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Validating Azure Disk Mount\nDESCRIPTION: Commands to verify the Azure Disk is correctly mounted by creating and listing files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec nginx-azuredisk -- touch /mnt/azuredisk/test.txt\nkubectl exec nginx-azuredisk -- ls /mnt/azuredisk\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal Control Plane Metrics in YAML\nDESCRIPTION: YAML configuration for specifying which API server metrics to collect when using minimal ingestion profile.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ncontrolplane-apiserver= \"apiserver_admission_webhook_admission_duration_seconds| apiserver_longrunning_requests\"\n```\n\n----------------------------------------\n\nTITLE: Accessing the Trusted Pod Shell with kubectl exec\nDESCRIPTION: This command starts an interactive shell session inside a trusted pod container to compare its environment with the untrusted pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it trusted -- /bin/bash\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Deployment for VPA Testing\nDESCRIPTION: Deployment manifest that creates two pods running nginx containers with initial resource requests of 100m CPU and 50Mi memory. The pods run a continuous load-generating command for testing VPA behavior.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: vpa-auto-deployment\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: vpa-auto-deployment\n  template:\n    metadata:\n      labels:\n        app: vpa-auto-deployment\n    spec:\n      containers:\n      - name: mycontainer\n        image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n        resources:\n          requests:\n            cpu: 100m\n            memory: 50Mi\n        command: [\"/bin/sh\"]\n        args: [\"-c\", \"while true; do timeout 0.5s yes >/dev/null; sleep 0.5s; done\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring kubectl with AKS Credentials using Azure PowerShell\nDESCRIPTION: This PowerShell command imports AKS credentials to configure kubectl for cluster access. It requires the resource group name and AKS cluster name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-paas-services.md#2025-04-21_snippet_3\n\nLANGUAGE: PowerShell\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables from Deployment State\nDESCRIPTION: Read the deployment state file and create environment variables for Azure resource names.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nwhile IFS= read -r; line do \\\necho \"export $line\" \\\nexport $line; \\\ndone < ./deployment/deploy.state\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace for Strimzi Drain Cleaner\nDESCRIPTION: Creates a separate namespace for the Strimzi Drain Cleaner using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace strimzi-drain-cleaner\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Resource Group\nDESCRIPTION: Creates an Azure resource group for the AKS cluster using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-driver.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus2\n```\n\n----------------------------------------\n\nTITLE: Installing Azure CLI Extension for Kubernetes Extensions\nDESCRIPTION: Adds the k8s-extension Azure CLI extension required for managing Kubernetes cluster extensions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name k8s-extension\n```\n\n----------------------------------------\n\nTITLE: Decrypting PowerShell Service Principal Secret\nDESCRIPTION: Converts the secure string password of the service principal to plaintext so it can be used in subsequent commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_2\n\nLANGUAGE: azurepowershell\nCODE:\n```\n$BSTR = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($sp.Secret)\n[System.Runtime.InteropServices.Marshal]::PtrToStringAuto($BSTR)\n```\n\n----------------------------------------\n\nTITLE: Getting Service IP\nDESCRIPTION: Azure CLI command to get the IP address of the store admin service\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get service store-admin\n```\n\n----------------------------------------\n\nTITLE: Skipping Update Stages or Groups with Azure CLI\nDESCRIPTION: Azure CLI command to skip specific stages or groups in an update run. This allows for selectively bypassing certain clusters or stages during the update process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_9\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz fleet updaterun skip \\\n --resource-group $GROUP \\\n --fleet-name $FLEET \\\n --name <run-name> \\\n --targets Group:my-group-name Stage:my-stage-name\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry Using Azure CLI\nDESCRIPTION: Provisions an Azure Container Registry (ACR) instance in the Basic SKU tier. This registry will be used to store container images for the Quarkus application that will be deployed to AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --location ${LOCATION} \\\n    --name $REGISTRY_NAME \\\n    --sku Basic\n```\n\n----------------------------------------\n\nTITLE: Installing curl in Test Pod\nDESCRIPTION: This command installs curl in the test pod to allow testing HTTP connectivity to the virtual node pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_8\n\nLANGUAGE: Bash\nCODE:\n```\napt-get update && apt-get install -y curl\n```\n\n----------------------------------------\n\nTITLE: Delegating Resource Access to Service Principal using PowerShell\nDESCRIPTION: Uses PowerShell to assign an Azure RBAC role to the AKS service principal, providing access to other Azure resources like Key Vault secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-service-principal.md#2025-04-21_snippet_7\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzRoleAssignment -ApplicationId <ApplicationId> `\n    -Scope \"/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.KeyVault/vaults/<vault-name>\" `\n    -RoleDefinitionName \"Key Vault Secrets User\"\n```\n\n----------------------------------------\n\nTITLE: Apply PVC Configuration Command\nDESCRIPTION: Kubernetes command to apply the PersistentVolumeClaim configuration\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f azurefile-mount-pvc.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Variables for AKS Extended Zone Deployment with Azure CLI\nDESCRIPTION: Defines the necessary variables required for deploying an AKS cluster in an Azure Extended Zone, including subscription, resource group, cluster name, extended zone ID, and parent region location.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/extended-zones.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nSUBSCRIPTION=\"<your-subscription>\"\nRG_NAME=\"<your-resource-group>\"\nCLUSTER_NAME=\"<your-cluster>\"\nEXTENDED_ZONE_NAME=\"<extended-zone-id>\"\nLOCATION=\"<parent-region>\" # Ensure this location corresponds to the parent region for your targeted Azure Extended Zone\n```\n\n----------------------------------------\n\nTITLE: Defining Terraform Outputs for AKS Cluster\nDESCRIPTION: This snippet defines the output values that will be displayed after the Terraform execution. It includes the resource group name, Kubernetes cluster name, and the kubeconfig for accessing the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_4\n\nLANGUAGE: HCL\nCODE:\n```\noutput \"resource_group_name\" {\n  value = azurerm_resource_group.rg.name\n}\n\noutput \"kubernetes_cluster_name\" {\n  value = azurerm_kubernetes_cluster.k8s.name\n}\n\noutput \"kube_config\" {\n  value     = azurerm_kubernetes_cluster.k8s.kube_config_raw\n  sensitive = true\n}\n```\n\n----------------------------------------\n\nTITLE: Monitoring Service Deployment\nDESCRIPTION: kubectl command to monitor the external IP assignment for the deployed service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-application.md#2025-04-21_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nkubectl get service store-front --watch\n```\n\n----------------------------------------\n\nTITLE: Identifying Top Matched WAF Rules with Kusto\nDESCRIPTION: A Kusto query that identifies the most frequently triggered WAF rules over time. This query filters for rules that have been matched more than 10 times to focus on the most significant threats.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_12\n\nLANGUAGE: kusto\nCODE:\n```\n| where ResourceProvider == \"MICROSOFT.NETWORK\" and Category == \"ApplicationGatewayFirewallLog\"\n| summarize count() by ruleId_s, bin(TimeGenerated, 1m)\n| where count_ > 10\n| render timechart\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Node Pool Ignoring PDB\nDESCRIPTION: Azure CLI command to delete a node pool while ignoring PodDisruptionBudget requirements. Useful when PDBs are preventing node pool deletion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/delete-node-pool.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool delete \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name nodepool1\n    --ignore-pod-disruption-budget true\n```\n\n----------------------------------------\n\nTITLE: Viewing NodeNetworkConfiguration resources in Kubernetes\nDESCRIPTION: This kubectl command retrieves NodeNetworkConfiguration resources from the kube-system namespace. These resources are responsible for IP allocations when using Azure CNI with dynamic allocation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-dynamic-ip-allocation.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodenetworkconfigs -n kube-system -o wide\n```\n\n----------------------------------------\n\nTITLE: Testing IMDS Access in Pods\nDESCRIPTION: Commands to test IMDS endpoint access from within pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/imds-restriction.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s -H Metadata:true --connect-timeout 10 --noproxy \"*\" \"http://169.254.169.254/metadata/instance?api-version=2023-11-15\"\n```\n\n----------------------------------------\n\nTITLE: Creating OpenFaaS Namespaces in Kubernetes\nDESCRIPTION: Command to create dedicated namespaces for OpenFaaS system and functions by applying a predefined YAML configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/namespaces.yml\n```\n\n----------------------------------------\n\nTITLE: Verifying CVM Node Pool Configuration\nDESCRIPTION: Queries the node pool configuration to verify it uses CVM by checking the vmSize property using az aks nodepool show command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-cvm.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool show \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name cvmnodepool \\\n    --query 'vmSize'\n```\n\n----------------------------------------\n\nTITLE: Resetting Existing Service Principal Credentials with Azure CLI\nDESCRIPTION: This snippet shows how to reset the credentials for an existing service principal of an AKS cluster. It retrieves the service principal ID and resets its credentials using Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/update-credentials.md#2025-04-21_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\nSP_ID=$(az aks show --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME \\\n    --query servicePrincipalProfile.clientId -o tsv)\nSP_SECRET=$(az ad app credential reset --id \"$SP_ID\" --query password -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for PostgreSQL Connection\nDESCRIPTION: Configures environment variables for connecting to the Azure PostgreSQL Flexible Server from a Quarkus application running locally. These variables will be used by the Quarkus application to establish database connectivity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nexport AZURE_POSTGRESQL_HOST=${DB_SERVER_NAME}.postgres.database.azure.com\nexport AZURE_POSTGRESQL_PORT=5432\nexport AZURE_POSTGRESQL_DATABASE=${DB_NAME}\nexport AZURE_POSTGRESQL_USERNAME=${ENTRA_ADMIN_NAME}\n```\n\n----------------------------------------\n\nTITLE: Testing Access to OSM Service via Ingress\nDESCRIPTION: This curl command tests access to the httpbin service using the external IP address of the ingress service to verify that the configuration is working correctly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_8\n\nLANGUAGE: console\nCODE:\n```\ncurl -sI http://<external-ip>/get\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Azure Fleet Manager\nDESCRIPTION: Bash commands to set required environment variables for Azure Fleet Manager configuration\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/intelligent-resource-placement.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport GROUP=<resource-group>\nexport FLEET=<fleet-name>\nexport MEMBERCLUSTER01=<cluster01>\nexport MEMBERCLUSTER02=<cluster02>\n```\n\n----------------------------------------\n\nTITLE: Security and Policies Comparison Table in Markdown\nDESCRIPTION: Markdown table comparing security and policy features between AKS Automatic and AKS Standard clusters, including authentication, cluster security, application security, image security, and policy enforcement options.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/intro-aks-automatic.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Option                    | AKS Automatic   \t| AKS Standard  \t|\n|---\t                    |---\t            |---\t            |\n| Cluster authentication and authorization\t        | **Pre-configured:** Azure RBAC for Kubernetes authorization | **Default:** Local accounts. <br/> **Optional:** Azure RBAC, Kubernetes RBAC with Microsoft Entra integration |\n| Cluster security\t        | **Pre-configured:** API server virtual network integration | **Optional:** API server virtual network integration|\n| Application security\t        | **Pre-configured:** Workload identity, OIDC cluster issuer | **Optional:** Workload identity, OIDC cluster issuer |\n| Image security\t        | **Pre-configured:** Image cleaner | **Optional:** Image cleaner |\n| Policy enforcement\t        | **Pre-configured:** Deployment safeguards | **Optional:** Deployment safeguards |\n```\n\n----------------------------------------\n\nTITLE: Checking Mounted Volumes in Pod\nDESCRIPTION: Checks the mounted file systems inside the pod using the df command with human-readable output to verify the HPC Cache mount is available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\ndf -h\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group for Static IP Setup\nDESCRIPTION: Azure CLI command to create a resource group for networking resources including static IP for ingress controller.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group create --name myNetworkResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Running Deployment Script with Logging\nDESCRIPTION: Execute the deployment script and save the log output to a file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmkdir ./logs\n./deployment/infra/deploy.sh | tee ./logs/install.log\n```\n\n----------------------------------------\n\nTITLE: Creating Static VPA ConfigMap for Metrics Server\nDESCRIPTION: YAML configuration for setting up static resource allocation for Metrics Server with fixed CPU and memory limits, independent of node count.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-metrics-server-vertical-pod-autoscaler.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: metrics-server-config\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  NannyConfiguration: |-\n    apiVersion: nannyconfig/v1alpha1\n    kind: NannyConfiguration\n    baseCPU: 100m\n    cpuPerNode: 0m\n    baseMemory: 100Mi\n    memoryPerNode: 0Mi\n```\n\n----------------------------------------\n\nTITLE: Checking AKS Cluster Identity Type\nDESCRIPTION: Verifies if the AKS cluster is using a user-assigned managed identity by querying the service principal profile.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_16\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show \\\n    --resource-group <RGName> \\\n    --name <ClusterName> \\\n    --query \"servicePrincipalProfile\"\n```\n\n----------------------------------------\n\nTITLE: Configuring JVM Options for Kafka Brokers\nDESCRIPTION: Defines JVM options for optimal Kafka broker performance, including heap size, garbage collection settings, and metaspace configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\njvmOptions:\n  \"-Xms\": \"6g\"\n  \"-Xmx\": \"6g\"\n  \"-XX\":\n    \"MetaspaceSize\": \"96m\"\n    \"UseG1GC\": \"true\"\n    \"MaxGCPauseMillis\": \"20\"\n    \"InitiatingHeapOccupancyPercent\": \"35\"\n    \"G1HeapRegionSize\": \"16M\"\n    \"MinMetaspaceFreeRatio\": \"50\"\n    \"MaxMetaspaceFreeRatio\": \"80\"\n    \"ExplicitGCInvokesConcurrent\": \"true\"\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with HPC Cache Volume\nDESCRIPTION: Creates the NGINX pod with the HPC Cache volume mount using the kubectl apply command with the previously defined YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nginx-nfs.yaml\n```\n\n----------------------------------------\n\nTITLE: NVIDIA Device Plugin DaemonSet Configuration\nDESCRIPTION: YAML manifest for deploying the NVIDIA device plugin as a DaemonSet. Configures pod scheduling, security contexts, and volume mounts for GPU support.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: nvidia-device-plugin-daemonset\n  namespace: gpu-resources\nspec:\n  selector:\n    matchLabels:\n      name: nvidia-device-plugin-ds\n  updateStrategy:\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n      labels:\n        name: nvidia-device-plugin-ds\n    spec:\n      tolerations:\n      - key: CriticalAddonsOnly\n        operator: Exists\n      - key: nvidia.com/gpu\n        operator: Exists\n        effect: NoSchedule\n      - key: \"sku\"\n        operator: \"Equal\"\n        value: \"gpu\"\n        effect: \"NoSchedule\"\n      containers:\n      - image: mcr.microsoft.com/oss/nvidia/k8s-device-plugin:v0.14.1\n        name: nvidia-device-plugin-ctr\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            drop: [\"ALL\"]\n        volumeMounts:\n          - name: device-plugin\n            mountPath: /var/lib/kubelet/device-plugins\n      volumes:\n        - name: device-plugin\n          hostPath:\n            path: /var/lib/kubelet/device-plugins\n```\n\n----------------------------------------\n\nTITLE: Install and Verify DCGM Exporter\nDESCRIPTION: Commands to install the Helm chart and verify its deployment on the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-gpu-metrics.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm install dcgm-nvidia oci://<acr_url>/helm/dcgm-exporter -n <gpu_namespace>\nhelm list -n <gpu_namespace>\nkubectl get pods -n <gpu_namespace>\nkubectl get ds -n <gpu_namespace>\n```\n\n----------------------------------------\n\nTITLE: Verifying Sidecar Injection Success\nDESCRIPTION: Command to check if the sidecar injection was successful by examining the pod description for the istio-proxy container.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod -n namespace <pod name>\n```\n\n----------------------------------------\n\nTITLE: Setting Valkey Variables in Terraform\nDESCRIPTION: This Terraform configuration sets up variables for Valkey deployment, including ACR task content and node pool specifications. It's used to customize the deployment of Valkey in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_9\n\nLANGUAGE: terraform\nCODE:\n```\nacr_task_content = <<-EOF\nversion: v1.1.0\nsteps:\n  - cmd: bash echo Waiting 10 seconds the propagation of the Container Registry Data Importer and Data Reader role\n  - cmd: bash sleep 10\n  - cmd: az login --identity\n  - cmd: az acr import --name $RegistryName --source docker.io/valkey/valkey:latest --image valkey:latest\nEOF\n\nvalkey_enabled = true\nnode_pools = {\n  valkey = {\n    name       = \"valkey\"\n    vm_size    = \"Standard_DS4_v2\"\n    node_count = 3\n    zones      = [1, 2, 3]\n    os_type    = \"Linux\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Granting OpenAI Access to Managed Identity\nDESCRIPTION: Assigns the 'Cognitive Services OpenAI User' role to the managed identity for the Azure OpenAI resource, allowing it to access OpenAI services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create \\\n    --role \"Cognitive Services OpenAI User\" \\\n    --assignee-object-id $MANAGED_IDENTITY_OBJECT_ID \\\n    --assignee-principal-type ServicePrincipal \\\n    --scope $AOAI_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: MongoDB Query Examples\nDESCRIPTION: Various MongoDB shell commands demonstrating different query operations on the employees collection\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-mongodb-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndb.employees.find().pretty();\n\ndb.employees.find({ EmployeeId: \"E1001\" }).pretty();\n\ndb.employees.find({ Department: \"Department1\" }).pretty();\n\ndb.employees.countDocuments({ Department: \"Department1\" });\n\ndb.employees.countDocuments();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Managed Identity Details\nDESCRIPTION: Gets the client ID and object ID of the managed identity, which are required for role assignment and federated credential setup.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\n# Get the managed identity client ID\nMANAGED_IDENTITY_CLIENT_ID=$(az identity show --resource-group $RG_NAME --name $MANAGED_IDENTITY_NAME --query clientId -o tsv)\n\n# Get the managed identity object ID\nMANAGED_IDENTITY_OBJECT_ID=$(az identity show --resource-group $RG_NAME --name $MANAGED_IDENTITY_NAME --query principalId -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Exposing NGINX Deployment with LoadBalancer Services\nDESCRIPTION: These kubectl commands expose an NGINX deployment using LoadBalancer type services for both IPv4 and IPv6. The IPv6 service requires additional configuration to specify the IP family.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl expose deployment nginx --name=nginx-ipv4 --port=80 --type=LoadBalancer'\nkubectl expose deployment nginx --name=nginx-ipv6 --port=80 --type=LoadBalancer --overrides='{\"spec\":{\"ipFamilies\": [\"IPv6\"]}}'\n```\n\n----------------------------------------\n\nTITLE: Labeling Client Pod for Network Policy Access\nDESCRIPTION: Command to add the 'app=client' label to the client pod. This grants the pod access to the server according to the applied network policy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_22\n\nLANGUAGE: console\nCODE:\n```\nkubectl label pod client -n demo app=client\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookthief Service in Kubernetes\nDESCRIPTION: Creates a ServiceAccount and Deployment for the bookthief service. The deployment uses the openservicemesh/bookthief:latest-main image and sets environment variables for communication with the bookstore service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\n# Create bookthief ServiceAccount\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: bookthief\n  namespace: bookthief\n---\n# Create bookthief Deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bookthief\n  namespace: bookthief\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: bookthief\n  template:\n    metadata:\n      labels:\n        app: bookthief\n        version: v1\n    spec:\n      serviceAccountName: bookthief\n      nodeSelector:\n        kubernetes.io/arch: amd64\n        kubernetes.io/os: linux\n      containers:\n        - name: bookthief\n          image: openservicemesh/bookthief:latest-main\n          imagePullPolicy: Always\n          command: [\"/bookthief\"]\n          env:\n            - name: \"BOOKSTORE_NAMESPACE\"\n              value: bookstore\n            - name: \"BOOKSTORE_SVC\"\n              value: bookstore\n            - name: \"BOOKTHIEF_EXPECTED_RESPONSE_CODE\"\n              value: \"503\"\n```\n\n----------------------------------------\n\nTITLE: Deleting All Resources\nDESCRIPTION: Azure CLI command to delete the entire resource group and all associated resources created during the Istio setup. This is a non-reversible operation that runs asynchronously.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-ingress.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group delete --name ${RESOURCE_GROUP} --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating NGINX Ingress Controller with Internal Load Balancer in YAML\nDESCRIPTION: YAML manifest for creating an NGINX ingress controller with an internal facing Azure Load Balancer and a private IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: approuting.kubernetes.azure.com/v1alpha1\nkind: NginxIngressController\nmetadata:\n  name: nginx-internal\nspec:\n  ingressClassName: nginx-internal\n  controllerNamePrefix: nginx-internal\n  loadBalancerAnnotations: \n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Redis component configuration\nDESCRIPTION: Command to verify that the Redis component was successfully configured in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get components.redis -o yaml\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Identity\nDESCRIPTION: Creates a managed identity for AKS cluster authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-dedicated-hosts.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create --resource-group <Resource Group> --name <Managed Identity name>\n```\n\n----------------------------------------\n\nTITLE: Changing Node Pool Mode from User to System with PowerShell\nDESCRIPTION: This PowerShell script changes an existing node pool's mode from User to System, allowing it to host critical system pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_12\n\nLANGUAGE: PowerShell\nCODE:\n```\n$myAKSCluster = Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster\n($myAKSCluster.AgentPoolProfiles | Where-Object Name -eq 'mynodepool').Mode = 'System'\n$myAKSCluster | Set-AzAksCluster\n```\n\n----------------------------------------\n\nTITLE: Retrieving Autoscaler Events and Status\nDESCRIPTION: Commands to view cluster autoscaler events and status using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get events --field-selector source=cluster-autoscaler,reason=NotTriggerScaleUp\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get events --field-selector source=cluster-autoscaler,type=Warning\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get configmap -n kube-system cluster-autoscaler-status -o yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Test Pods for IMDS Restriction Verification\nDESCRIPTION: Kubernetes manifests to create test pods with and without host network access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/imds-restriction.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Pod\nmetadata:\n     name: non-host-nw\nspec:\n  hostNetwork: false\n  containers:\n  - name: non-host-nw\n    image: mcr.microsoft.com/azurelinux/base/nginx:1\n    command: [\"sleep\", \"infinity\"]\nEOF\n```\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Pod\nmetadata:\n  name: host-nw\nspec:\n  hostNetwork: true\n  containers:\n  - name: host-nw\n    image: mcr.microsoft.com/azurelinux/base/nginx:1\n    command: [\"sleep\", \"infinity\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Exporting Environment Variables for ACR Configuration in Bash\nDESCRIPTION: Sets up environment variables for Azure Container Registry (ACR) configuration, including registry name, username, repository, and version. It also retrieves the ACR password using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-fine-tune.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nACR_NAME=\"myACRname\"\nACR_USERNAME=\"myACRusername\"\nREPOSITORY=\"myRepository\"\nVERSION=\"repositoryVersion'\nACR_PASSWORD=$(az acr token create --name $ACR_USERNAME --registry $ACR_NAME --expiration-in-days 10 --repository $REPOSITORY content/write content/read --query \"credentials.passwords[0].value\" --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Cluster\nDESCRIPTION: Azure CLI command to create an AKS cluster with 2 nodes and automatically generate SSH keys for access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\naz aks create --resource-group myResourceGroup --name myAKSCluster --node-count 2 --generate-ssh-keys \n```\n\n----------------------------------------\n\nTITLE: Defining Terraform Variables for AKS Deployment\nDESCRIPTION: Declares Terraform variables for configuring the AKS cluster deployment, including subscription ID, cluster name, Kubernetes version, and RBAC settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_9\n\nLANGUAGE: terraform\nCODE:\n```\nvariable \"azure_subscription_id\" {\ntype        = string\ndescription = \"The Azure subscription ID to use for the resources.\"\n\n}\nvariable \"enable_telemetry\" {\ntype        = bool\ndefault     = true\ndescription = \"This variable controls whether or not telemetry is enabled for the module.\"\n}\n\nvariable \"kubernetes_cluster_name\" {\ntype        = string\ndefault     = \"kafka-cluster\"\ndescription = \"The name of the Kubernetes cluster.\"\n}\n\nvariable \"kubernetes_version\" {\ntype        = string\ndefault     = \"1.30\"\ndescription = \"The version of Kubernetes to use for the cluster.\"\n}\n\nvariable \"resource_group_name\" {\ntype        = string\ndescription = \"The name of the resource group in which to create the resources.\"\n}\n\nvariable \"rbac_aad_admin_group_object_ids\" {\ntype        = list(string)\ndescription = \"The object IDs of the Azure AD groups that should be granted admin access to the Kubernetes cluster.\"    \n}\n\nvariable \"location\" {\ntype        = string\ndescription = \"The location in which to create the resources.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group with Azure CLI\nDESCRIPTION: Creates a new resource group named 'myResourceGroup' in the 'eastus' region using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Assigning Storage Blob Data Contributor Role\nDESCRIPTION: Command to assign the Storage Blob Data Contributor role to the current user for the storage account, allowing data operations on blob storage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create --role \"Storage Blob Data Contributor\" --assignee $AD_USER --scope $STORAGE_ACCOUNT_ID\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials\nDESCRIPTION: Retrieves and configures kubectl with credentials to connect to the AKS cluster, allowing for interaction with the Kubernetes API server.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: Querying PostgreSQL Primary Endpoint with psql in Bash\nDESCRIPTION: Uses the psql command to connect to the PostgreSQL primary endpoint (port 5432) and checks if it's in recovery mode. When connected to the primary, pg_is_in_recovery() returns false.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\necho \"Public endpoint for PostgreSQL cluster: $AKS_PRIMARY_CLUSTER_ALB_DNSNAME\"\n\n# Query the primary, pg_is_in_recovery = false\n\npsql -h $AKS_PRIMARY_CLUSTER_ALB_DNSNAME \\\n    -p 5432 -U app -d appdb -W -c \"SELECT pg_is_in_recovery();\"\n```\n\n----------------------------------------\n\nTITLE: Adding Windows Node Pool with Custom Configuration\nDESCRIPTION: This Azure CLI command adds a new Windows node pool to an existing AKS cluster using a custom kubelet configuration file. It specifies the node pool name, cluster name, resource group, OS type, and path to the kubelet configuration JSON file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-node-configuration.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --name mynp1 --cluster-name myAKSCluster --resource-group myResourceGroup --os-type Windows --kubelet-config ./windowskubeletconfig.json\n```\n\n----------------------------------------\n\nTITLE: Verifying Python application deployment\nDESCRIPTION: Command to check the deployment status of the Python application in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout status deploy/pythonapp\n```\n\n----------------------------------------\n\nTITLE: Adding a Node Pool with Proximity Placement Group to Existing AKS Cluster\nDESCRIPTION: Adds a new node pool to an existing AKS cluster and associates it with the specified proximity placement group. This allows incremental migration to PPG-enabled infrastructure.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/reduce-latency-ppg.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name mynodepool \\\n    --node-count 1 \\\n    --ppg myPPGResourceID\n```\n\n----------------------------------------\n\nTITLE: Manually Scaling Pods in Kubernetes\nDESCRIPTION: This snippet demonstrates how to view existing pods and manually scale the number of pods for a deployment using kubectl commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-scale.md#2025-04-21_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl scale --replicas=5 deployment.apps/store-front\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Extracting Database Configuration from Kubernetes ConfigMap in Bash\nDESCRIPTION: These commands extract the database configuration model from a Kubernetes ConfigMap and save it to a YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nexport WLS_DOMAIN_UID=sample-domain1\nexport WLS_DOMAIN_NS=${WLS_DOMAIN_UID}-ns\nexport DB_K8S_SECRET_NAME=$(kubectl get secret -n ${WLS_DOMAIN_NS} | grep \"ds-secret\" | awk '{print $1}')\n\nkubectl get configmap sample-domain1-wdt-config-map -n ${WLS_DOMAIN_NS} -o=jsonpath=\"{['data']['${DB_K8S_SECRET_NAME}\\.yaml']}\" >${BASE_DIR}/mystaging/models/dbmodel.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking Workflow Status\nDESCRIPTION: Curl command to check the status of the workflow instance with ID '1234' by querying the Dapr workflow API.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\ncurl -i -X GET $DAPR_URL/v1.0-beta1/workflows/dapr/1234\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials with Azure CLI\nDESCRIPTION: Retrieves the credentials for the AKS cluster to enable interaction with the Kubernetes API server for subsequent operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-migrate-from-pod-identity.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --name myAKSCluster --resource-group \"${RESOURCE_GROUP}\"\n```\n\n----------------------------------------\n\nTITLE: Applying blobfuse Storage Class Configuration with kubectl\nDESCRIPTION: This bash command applies the YAML configuration file for the blobfuse-based storage class to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f blobfuse-sc.yaml\n```\n\n----------------------------------------\n\nTITLE: Listing MongoDB StatefulSets in Kubernetes\nDESCRIPTION: Lists all StatefulSet resources in the MongoDB namespace using kubectl\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get sts -n $AKS_MONGODB_NAMESPACE\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME                         READY   AGE\ncluster-aks-mongodb-cfg      3/3     5d21h\ncluster-aks-mongodb-mongos   3/3     5d18h\ncluster-aks-mongodb-rs0      3/3     3h26m\n```\n\n----------------------------------------\n\nTITLE: Creating Role Assignment for Service Principal\nDESCRIPTION: Command to create a new Contributor role assignment for the service principal, granting it permissions to manage resources in the resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create --role \"Contributor\" \\\n    --assignee $PRINCIPAL_ID \\\n    --scope \"/subscriptions/$AZURE_SUBSCRIPTION_ID/resourcegroups/$AZURE_RESOURCE_GROUP\"\n```\n\n----------------------------------------\n\nTITLE: Registering Required Azure Resource Providers with Azure CLI\nDESCRIPTION: Registers the Microsoft.ContainerService and Microsoft.KubernetesConfiguration resource providers which are prerequisites for working with AKS cluster extensions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-extensions-az-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService --wait \naz provider register --namespace Microsoft.KubernetesConfiguration --wait \n```\n\n----------------------------------------\n\nTITLE: Upgrading Valkey Node Pool - Azure CLI\nDESCRIPTION: Command to upgrade the Valkey node pool to version 1.30.0 using Azure CLI. Uses environment variables for resource group and cluster names.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-valkey-aks-nodepool.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz aks nodepool upgrade \\\n    --resource-group $MY_RESOURCE_GROUP_NAME \\\n    --cluster-name $MY_CLUSTER_NAME \\\n    --kubernetes-version 1.30.0 \\\n    --name valkey\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Labels using Azure CLI\nDESCRIPTION: Creates a new AKS cluster with specified node labels for department and cost center. The command initializes a cluster with 2 nodes and generates SSH keys.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-labels.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --node-count 2 \\\n    --nodepool-labels dept=IT costcenter=9000 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Registering EnablePodIdentityPreview feature flag\nDESCRIPTION: Azure CLI commands to register and verify the EnablePodIdentityPreview feature flag, which is necessary for using pod-managed identities in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"EnablePodIdentityPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"EnablePodIdentityPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Applying the Deployment with kubectl\nDESCRIPTION: This kubectl command applies the YAML deployment to the cluster, creating the pod on the virtual node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl apply -f virtual-node.yaml\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Revision Tag Using istioctl\nDESCRIPTION: Command to remove the prod-canary revision tag from the Istio installation using istioctl tool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nistioctl tag remove prod-canary --istioNamespace aks-istio-system\n```\n\n----------------------------------------\n\nTITLE: Querying Activity Logs for API Version Usage in Bash\nDESCRIPTION: This Bash command queries the Azure Monitor activity logs to check for usage of a specific API version within the last 30 days. It filters for the Microsoft.ContainerService namespace and EndRequest events, helping identify which clients or tools are using a particular API version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-preview-api-life-cycle.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nAPI_VERSION=<impacted API version, such as 2022-04-01-preview>\naz monitor activity-log list --offset 30d --max-events 10000 --namespace microsoft.containerservice --query \"[?eventName.value == 'EndRequest' && contains(not_null(httpRequest.uri,''), '${API_VERSION}')]\"\n```\n\n----------------------------------------\n\nTITLE: Metrics Server Error Output with Invalid Configuration\nDESCRIPTION: This log output shows the error messages produced when the Metrics Server configuration has invalid settings. The logs indicate that the Nanny Configuration couldn't be decoded from the config map, causing it to fall back to default parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-metrics-server-vertical-pod-autoscaler.md#2025-04-21_snippet_4\n\nLANGUAGE: output\nCODE:\n```\nERROR: logging before flag.Parse: I0316 23:32:08.383389       1 pod_nanny.go:68] Invoked by [/pod_nanny --config-dir=/etc/config --cpu=44m \n--extra-cpu=0.5m --memory=51Mi --extra-memory=4Mi --poll-period=180000 --threshold=5 --deployment=metrics-server --container=metrics-server]\nERROR: logging before flag.Parse: I0316 23:32:08.383430       1 pod_nanny.go:69] Version: 1.8.14\nERROR: logging before flag.Parse: I0316 23:32:08.383441       1 pod_nanny.go:85] Watching namespace: kube-system, pod: metrics-server-7d78876589-hcrff, container: metrics-server.\nERROR: logging before flag.Parse: I0316 23:32:08.383446       1 pod_nanny.go:86] storage: MISSING, extra_storage: 0Gi\nERROR: logging before flag.Parse: I0316 23:32:08.384554       1 pod_nanny.go:192] Unable to decode Nanny Configuration from config map, using default parameters\nERROR: logging before flag.Parse: I0316 23:32:08.384565       1 pod_nanny.go:116] cpu: 44m, extra_cpu: 0.5m, memory: 51Mi, extra_memory: 4Mi\nERROR: logging before flag.Parse: I0316 23:32:08.384589       1 pod_nanny.go:145] Resources: [{Base:{i:{value:44 scale:-3} d:{Dec:<nil>} s:44m Format:DecimalSI} ExtraPerNode:{i:{value:5 scale:-4} d:{Dec:<nil>} s: Format:DecimalSI} Name:cpu} {Base:{i:{value:53477376 scale:0} d:{Dec:<nil>} s:51Mi Format:BinarySI} ExtraPerNode:{i:{value:4194304 scale:0} \nd:{Dec:<nil>} s:4Mi Format:BinarySI} Name:memory}]\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status\nDESCRIPTION: Azure CLI command to check the status of deployed pods\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status with kubectl in Bash\nDESCRIPTION: This command retrieves the status of all pods in the current namespace using kubectl. It's used to verify that the deployed pods are in the 'Running' state.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-portal.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry for MongoDB on AKS\nDESCRIPTION: Creates an Azure Container Registry instance to store and manage container images for the MongoDB on AKS deployment using the az acr create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz acr create \\\n--name ${MY_ACR_REGISTRY} \\\n--resource-group $MY_RESOURCE_GROUP_NAME \\\n--sku Premium \\\n--location $MY_LOCATION \\\n--admin-enabled true \\\n--output table\nexport MY_ACR_REGISTRY_ID=$(az acr show --name $MY_ACR_REGISTRY --resource-group $MY_RESOURCE_GROUP_NAME --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Exposing Ray Head Service via NodePort\nDESCRIPTION: Creates a service shim to expose the Ray head service on port 80 using NodePort type service in Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl expose service $rayclusterhead \\\n-n $kuberay_namespace \\\n--port=80 \\\n--target-port=8265 \\\n--type=NodePort \\\n--name=ray-dash\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Database for PostgreSQL Flexible Server Using Azure CLI\nDESCRIPTION: Provisions an Azure Database for PostgreSQL flexible server with public access, Standard_B1ms SKU, and Microsoft Entra authentication enabled. This command creates the server, database, admin user, and necessary firewall rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz postgres flexible-server create \\\n    --name $DB_SERVER_NAME \\\n    --database-name $DB_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --location $LOCATION \\\n    --public-access 0.0.0.0 \\\n    --sku-name Standard_B1ms \\\n    --tier Burstable \\\n    --active-directory-auth Enabled \\\n    --yes\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Preview Extension\nDESCRIPTION: Updates the aks-preview extension to the latest version to ensure access to the most recent preview features for AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Terms Acceptance Command\nDESCRIPTION: Command to accept the terms and agreements for a Kubernetes application using Azure CLI, requiring plan publisher, offer ID, and plan name parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-application-az-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm image terms accept --offer <plan-offerID> --plan <plan-name> --publisher <plan-publisher>\n```\n\n----------------------------------------\n\nTITLE: Creating Policy Remediation\nDESCRIPTION: Commands to create a policy remediation for immediate feature enablement\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nassignment_id=$(az policy assignment show --name 'deploy-trustedimages' --scope ${SCOPE} --query id -o tsv)\naz policy remediation create --policy-assignment \"$assignment_id\" --definition-reference-id deployAKSImageIntegrity --name remediation --resource-group ${RESOURCE_GROUP}\n```\n\n----------------------------------------\n\nTITLE: Deploying Public Service to AKS\nDESCRIPTION: Deploys the AKS Store Demo application using kubectl apply command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_13\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/aks-store-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands for SpinKube Components\nDESCRIPTION: Series of commands to remove SpinKube components, operators, and related resources from the AKS cluster\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n# Remove the spin-operator\nhelm delete spin-operator --namespace spin-operator\n\n# Remove the SpinAppExecutor\nkubectl delete -f https://github.com/spinkube/spin-operator/releases/download/v0.2.0/spin-operator.shim-executor.yaml\n\n# Remove the RuntimeClass for Spin\nkubectl delete -f https://github.com/spinkube/spin-operator/releases/download/v0.2.0/spin-operator.runtime-class.yaml\n\n# Remove the SpinKube CRDs\nkubectl delete -f https://github.com/spinkube/spin-operator/releases/download/v0.2.0/spin-operator.crds.yaml\n\n# Remove runtime-class-manager (also known as KWasm)\nhelm delete kwasm-operator --namespace kwasm\n\n# Remove cert-manager Helm Release\nhelm delete cert-manager --namespace cert-manager\n\n# Remove cert-manager CRDs\nkubectl delete -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.3/cert-manager.crds.yaml\n```\n\n----------------------------------------\n\nTITLE: Building the Project and Copying Dependencies in PowerShell\nDESCRIPTION: This snippet shows how to set environment variables for deployment file generation and build the Java application using Maven in PowerShell. It also copies the Azure Identity dependencies to the Liberty shared resources directory.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_14\n\nLANGUAGE: powershell\nCODE:\n```\ncd $env:BASE_DIR\\java-app\n\n# The following variables are used for deployment file generation into the target.\n$Env:LOGIN_SERVER=$Env:LOGIN_SERVER\n$Env:SC_SERVICE_ACCOUNT_NAME=$Env:SERVICE_ACCOUNT_NAME\n$Env:SC_SECRET_NAME=$Env:SECRET_NAME\n$Env:INGRESS_TLS_SECRET=$Env:INGRESS_TLS_SECRET\n\nmvn clean install\nmvn dependency:copy-dependencies -f pom-azure-identity.xml -DoutputDirectory=target/liberty/wlp/usr/shared/resources\n```\n\n----------------------------------------\n\nTITLE: Deploying Host Process Container for Windows Node Access in YAML\nDESCRIPTION: This YAML configuration creates a Host Process Container (HPC) pod that allows access to a Windows node in an AKS cluster. It specifies security contexts, node selectors, and tolerations to ensure proper deployment on the target Windows node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    pod: hpc\n  name: hpc\nspec:\n  securityContext:\n    windowsOptions:\n      hostProcess: true\n      runAsUserName: \"NT AUTHORITY\\\\SYSTEM\"\n  hostNetwork: true\n  containers:\n    - name: hpc\n      image: mcr.microsoft.com/windows/servercore:ltsc2022 # Use servercore:1809 for WS2019\n      command:\n        - powershell.exe\n        - -Command\n        - \"Start-Sleep 2147483\"\n      imagePullPolicy: IfNotPresent\n  nodeSelector:\n    kubernetes.io/os: windows\n    kubernetes.io/hostname: AKSWINDOWSNODENAME\n  tolerations:\n    - effect: NoSchedule\n      key: node.kubernetes.io/unschedulable\n      operator: Exists\n    - effect: NoSchedule\n      key: node.kubernetes.io/network-unavailable\n      operator: Exists\n    - effect: NoExecute\n      key: node.kubernetes.io/unreachable\n      operator: Exists\n```\n\n----------------------------------------\n\nTITLE: Creating Node Image Auto-upgrade Profile\nDESCRIPTION: Azure CLI commands for creating auto-upgrade profiles specifically for node image updates with different configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-automation.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz fleet autoupgradeprofile create \\\n  --resource-group $GROUP \\\n  --fleet-name $FLEET \\\n  --name $AUTOUPGRADEPROFILE \\\n  --channel NodeImage\n```\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz fleet autoupgradeprofile create \\\n  --resource-group $GROUP \\\n  --fleet-name $FLEET \\\n  --name $AUTOUPGRADEPROFILE \\\n  --update-strategy-id $STRATEGYID \\\n  --channel NodeImage\n```\n\n----------------------------------------\n\nTITLE: Disabling Istio-based Service Mesh Add-on in Azure CLI\nDESCRIPTION: This command disables the Istio-based service mesh add-on for an AKS cluster using Azure CLI. It removes the Istio control plane, ingress gateways, and managed namespaces.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-uninstall-addon.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks mesh disable --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}\n```\n\n----------------------------------------\n\nTITLE: Assigning Network Contributor Role to AKS Managed Identity\nDESCRIPTION: Uses Azure CLI to assign the Network Contributor role to the user-assigned managed identity for AKS. This allows AKS to manage network resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-infrastructure.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz role assignment create \\\n--assignee $(az identity show --resource-group $RESOURCE_GROUP_NAME --name $USER_ASSIGNED_IDENTITY_NAME --query principalId -o tsv) \\\n--role \"Network Contributor\" \\\n--scope $(az group show --name $RESOURCE_GROUP_NAME --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Azure Resources\nDESCRIPTION: Uses Azure CLI to delete the resource group and all contained resources after completing the deployment tests. The --no-wait flag allows the command to return immediately without waiting for deletion to complete.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\naz group delete --resource-group $RESOURCE_GROUP_NAME --no-wait --yes\n```\n\n----------------------------------------\n\nTITLE: Listing Services Available for Interception\nDESCRIPTION: Command to list services that can be intercepted by Telepresence.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-telepresence-aks.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ntelepresence list\n```\n\n----------------------------------------\n\nTITLE: Updating Existing AKS Cluster with Lockdown\nDESCRIPTION: Command to update an existing AKS cluster to enable node resource group lockdown in ReadOnly mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-resource-group-lockdown.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME --nrg-lockdown-restriction-level ReadOnly\n```\n\n----------------------------------------\n\nTITLE: Checking Node Image Version of a Member Cluster using Azure CLI\nDESCRIPTION: This command retrieves the node image version and other details for a specified AKS cluster using the az aks show command with a complex query.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-automation.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show \\\n  --resource-group $GROUP \\\n  --name $CLUSTER \\\n  --query \"agentPoolProfiles[].{name:name,mode:mode, nodeImageVersion:nodeImageVersion, osSku:osSku, osType:osType}\"\n```\n\n----------------------------------------\n\nTITLE: Testing TCP Connectivity to Server Pod\nDESCRIPTION: Command to test TCP connectivity from the client pod to the server pod. This verifies that without network policies, pods can communicate freely.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_19\n\nLANGUAGE: console\nCODE:\n```\n/agnhost connect <server-ip>:80 --timeout=3s --protocol=tcp\n```\n\n----------------------------------------\n\nTITLE: Creating an Update Run for Azure Kubernetes Fleet Manager\nDESCRIPTION: Creates an update run to upgrade Kubernetes version and node images across multiple clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet updaterun create \\\n --resource-group $GROUP \\\n --fleet-name $FLEET \\\n --name run-1 \\\n --upgrade-type Full \\\n --kubernetes-version 1.26.0 \\\n --node-image-selection Latest\n```\n\n----------------------------------------\n\nTITLE: Opening Project in Visual Studio Code\nDESCRIPTION: Commands to navigate to the project directory and open it in Visual Studio Code\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-overview.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd aws-to-azure-web-app-workshop\ncode .\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Override Rules in Azure Kubernetes Fleet Manager\nDESCRIPTION: This YAML example demonstrates how to apply multiple override rules in a ResourceOverride object. It configures different container images based on cluster environment labels (prod vs test).\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/resource-override.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1alpha1\nkind: ResourceOverride\nmetadata:\n  name: ro-1\n  namespace: test\nspec:\n  resourceSelectors:\n    -  group: apps\n       kind: Deployment\n       version: v1\n       name: test-nginx\n  policy:\n    overrideRules:\n      - clusterSelector:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  env: prod\n        jsonPatchOverrides:\n          - op: replace\n            path: /spec/template/spec/containers/0/image\n            value: \"nginx:1.20.0\"\n      - clusterSelector:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  env: test\n        jsonPatchOverrides:\n          - op: replace\n            path: /spec/template/spec/containers/0/image\n            value: \"nginx:latest\"\n```\n\n----------------------------------------\n\nTITLE: Viewing AKS Cluster Upgrade Events with kubectl\nDESCRIPTION: Retrieves and displays Kubernetes events related to cluster upgrades, including node draining, upgrading, and deletion operations, filtered by the source field.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_8\n\nLANGUAGE: console\nCODE:\n```\nkubectl get events --field-selector source=upgrader\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl CLI in Azure\nDESCRIPTION: Commands to install the Kubernetes command-line tool kubectl using Azure CLI or PowerShell\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks install-cli\n```\n\nLANGUAGE: azurepowershell\nCODE:\n```\nInstall-AzAksKubectl\n```\n\n----------------------------------------\n\nTITLE: Security Testing Script for Yelb UI\nDESCRIPTION: Bash script for testing the Yelb UI service security features, including basic connectivity tests and SQL injection attack simulation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n# Variables\nsource ./00-variables.sh\n# Call REST API\necho \"Calling Yelb UI service at $URL...\"\ncurl -w 'HTTP Status: %{http_code}\\n' -s -o /dev/null $URL\n# Simulate SQL injection\necho \"Simulating SQL injection when calling $URL...\"\ncurl -w 'HTTP Status: %{http_code}\\n' -s -o /dev/null $URL/?users=ExampleSQLInjection%27%20--\n```\n\n----------------------------------------\n\nTITLE: Manually Updating Linux Node Packages\nDESCRIPTION: Commands to manually trigger package updates on a Linux node after SSH connection. This updates the package list and upgrades all installed packages.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-updates-kured.md#2025-04-21_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nsudo apt-get update && sudo apt-get upgrade -y\n```\n\n----------------------------------------\n\nTITLE: Applying the SMB Persistent Volume Claim in Kubernetes\nDESCRIPTION: These commands apply the PVC configuration and verify its status. The kubectl describe command confirms the PVC is bound to the persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pvc-smb.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pvc anf-pvc-smb\n```\n\n----------------------------------------\n\nTITLE: Generating Kubernetes Deployment Manifest\nDESCRIPTION: Scaffolds the necessary Kubernetes deployment manifests for the Spin application\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nspin kube scaffold --from $ACR_LOGIN_SERVER/hello-spinkube:0.0.1 -s spinkube-on-aks > spinapp.yaml\n```\n\n----------------------------------------\n\nTITLE: Validating PostgreSQL Cluster Deployment\nDESCRIPTION: Command to verify the successful deployment of PostgreSQL cluster pods and their running status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-postgresql-ha.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods --context $AKS_PRIMARY_CLUSTER_NAME --namespace $PG_NAMESPACE -l cnpg.io/cluster=$PG_PRIMARY_CLUSTER_NAME\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME                         READY   STATUS    RESTARTS   AGE\npg-primary-cnpg-r8c7unrw-1   1/1     Running   0          4m25s\npg-primary-cnpg-r8c7unrw-2   1/1     Running   0          3m33s\npg-primary-cnpg-r8c7unrw-3   1/1     Running   0          2m49s\n```\n\n----------------------------------------\n\nTITLE: Default Maintenance Schedule JSON Configuration\nDESCRIPTION: JSON configuration for scheduling maintenance windows on Tuesdays and Wednesdays with specified time slots and blackout periods\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"timeInWeek\": [\n    {\n      \"day\": \"Tuesday\",\n      \"hour_slots\": [\n        1,\n        2\n      ]\n    },\n    {\n      \"day\": \"Wednesday\",\n      \"hour_slots\": [\n        1,\n        6\n      ]\n    }\n  ],\n  \"notAllowedTime\": [\n    {\n      \"start\": \"2021-05-26T03:00:00Z\",\n      \"end\": \"2021-05-30T12:00:00Z\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing aks-preview Azure CLI Extension\nDESCRIPTION: Commands to add and update the aks-preview extension for the Azure CLI, which is required to use the Pod Sandboxing preview feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Cloning and Navigating to Sample Application\nDESCRIPTION: Clones the Azure Vote application from GitHub and navigates to the application directory.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Azure-Samples/azure-voting-app-redis.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd azure-voting-app-redis/azure-vote/\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory and Opening in VS Code\nDESCRIPTION: Commands to navigate to the cloned project directory and open it in Visual Studio Code for development and configuration. This provides an easy way to access and edit the project files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-overview.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd aws-to-azure-edw-workshop\ncode .\n```\n\n----------------------------------------\n\nTITLE: Deploying the Sample Workflow Application\nDESCRIPTION: Kubectl command to deploy the sample workflow application to the AKS cluster using the deployment manifest.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nkubectl apply -f deployment.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Privileged User in Microsoft Entra ID\nDESCRIPTION: Creates a 'privileged' user in Microsoft Entra ID and adds them to the approver group. This user can approve or deny just-in-time access requests.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nPUSER_ID=$(az ad user create \\\n    --display-name p01 \\\n    --password ${PASSWORD} \\\n    --user-principal-name p01@${DOMAIN} \\\n    --query id \\\n    --output tsv)\n\naz ad group member add \\\n    --group $APPROVER_ID \\\n    --member-id $PUSER_ID\n```\n\n----------------------------------------\n\nTITLE: Accessing the Untrusted Pod Shell with kubectl exec\nDESCRIPTION: This command starts an interactive shell session inside the untrusted pod container to verify its environment and isolation properties.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it untrusted -- /bin/bash\n```\n\n----------------------------------------\n\nTITLE: Testing Pod HTTP Access\nDESCRIPTION: Uses curl to access the demo application running on the virtual node pod via its internal IP.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_15\n\nLANGUAGE: console\nCODE:\n```\ncurl -L http://10.241.0.4\n```\n\n----------------------------------------\n\nTITLE: Restarting Deployment for Sidecar Updates\nDESCRIPTION: Command to restart deployments after updating Dapr control plane to update sidecars.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart deploy/<DEPLOYMENT-NAME>\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Cluster Upgrades with Azure PowerShell\nDESCRIPTION: Enables automatic cluster upgrades with the Set-AzAksCluster cmdlet by setting the -AutoUpgradeChannel parameter to Patch, which automatically applies security patches to the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_7\n\nLANGUAGE: azurepowershell\nCODE:\n```\nSet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -AutoUpgradeChannel Patch\n```\n\n----------------------------------------\n\nTITLE: Verifying Access Logs for Sleep Pod in Azure CLI\nDESCRIPTION: Retrieves and displays the access logs for the 'sleep' pod's Istio proxy container.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-telemetry.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl logs -l app=sleep -c istio-proxy\n```\n\n----------------------------------------\n\nTITLE: Displaying Latest AKS Operation Status using Azure CLI\nDESCRIPTION: This Azure CLI command shows how to retrieve the status of the most recent operation on an AKS cluster using the az aks operation show-latest command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-abort-operations.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks operation show-latest \\\n    --resource-group myResourceGroup \\\n    --name myCluster\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Key Vault Provider Components\nDESCRIPTION: Commands to remove the Azure Key Vault provider pods from both Linux and Windows nodes using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# Delete AKV provider pods from Linux nodes\nkubectl delete -f https://raw.githubusercontent.com/Azure/secrets-store-csi-driver-provider-azure/master/deployment/provider-azure-installer.yaml\n\n# Delete AKV provider pods from Windows nodes\nkubectl delete -f https://raw.githubusercontent.com/Azure/secrets-store-csi-driver-provider-azure/master/deployment/provider-azure-installer-windows.yaml\n```\n\n----------------------------------------\n\nTITLE: Viewing Percona Operator Logs\nDESCRIPTION: Retrieves logs from the Percona Operator pod showing the recovery process after StatefulSet deletion\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs -n $AKS_MONGODB_NAMESPACE <percona-operator-pod>\n```\n\nLANGUAGE: output\nCODE:\n```\n...\\n2024-11-29T13:48:07.427Z        ERROR   failed to reconcile cluster     {\\\"controller\\\": \\\"psmdb-controller\\\", \\\"object\\\": {\\\"name\\\":\\\"cluster-aks-mongodb\\\",\\\"namespace\\\":\\\"mongodb\\\"}, \\\"namespace\\\": \\\"mongodb\\\", \\\"name\\\": \\\"cluster-aks-mongodb\\\", \\\"reconcileID\\\": \\\"2e037504-d213-4bf7-a2b8-5af396b2d16c\\\", \\\"replset\\\": \\\"rs0\\\", \\\"error\\\": \\\"dial: ping mongo: server selection error: context deadline exceeded, current topology: { Type: ReplicaSetNoPrimary, ...\\n...\\n2024-11-29T13:49:45.433Z        INFO    Cluster state changed   {\\\"controller\\\": \\\"psmdb-controller\\\", \\\"object\\\": {\\\"name\\\":\\\"cluster-aks-mongodb\\\",\\\"namespace\\\":\\\"mongodb\\\"}, \\\"namespace\\\": \\\"mongodb\\\", \\\"name\\\": \\\"cluster-aks-mongodb\\\", \\\"reconcileID\\\": \\\"0765ea5f-52d8-44e2-a680-c7d082dd88e1\\\", \\\"previous\\\": \\\"initializing\\\", \\\"current\\\": \\\"ready\\\"}\n```\n\n----------------------------------------\n\nTITLE: Random Password Generation Function\nDESCRIPTION: Bash function to generate a 32-character random password using alphanumeric characters\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-mongodb-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngenerateRandomPasswordString() {\n  cat /dev/urandom | LC_ALL=C tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Environment Variables\nDESCRIPTION: Bash commands to set environment variables for external ingress host and ports, retrieving values from the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nexport INGRESS_HOST_EXTERNAL=$(kubectl -n aks-istio-ingress get service aks-istio-ingressgateway-external -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\nexport SECURE_INGRESS_PORT_EXTERNAL=$(kubectl -n aks-istio-ingress get service aks-istio-ingressgateway-external -o jsonpath='{.spec.ports[?(@.name==\"https\")].port}')\nexport SECURE_GATEWAY_URL_EXTERNAL=$INGRESS_HOST_EXTERNAL:$SECURE_INGRESS_PORT_EXTERNAL\n\necho \"https://$SECURE_GATEWAY_URL_EXTERNAL/productpage\"\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in AKS Cluster\nDESCRIPTION: Retrieves the status of pods in the aks-store-demo namespace to verify that all components of the application are running correctly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n aks-store-demo\n```\n\n----------------------------------------\n\nTITLE: Applying NVIDIA Device Plugin DaemonSet with kubectl\nDESCRIPTION: This command applies the NVIDIA device plugin DaemonSet configuration to the Kubernetes cluster, enabling GPU support.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl apply -f nvidia-device-plugin-ds.yaml\n```\n\n----------------------------------------\n\nTITLE: KEDA Add-on Configuration Warning\nDESCRIPTION: Markdown note block warning users about KEDA version 2.15+ breaking changes regarding pod identity support and recommending migration to workload identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-keda-existing-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\\nKEDA version 2.15+ introduces a breaking change that [removes pod identity support](https://github.com/kedacore/keda/issues/5035). We recommend moving over to workload identity for your authentication if you're using pod identity. While the KEDA managed add-on doesn't currently run KEDA version 2.15, it will begin running it in the AKS preview version 1.31.\\n>\\nFor more information on how to securely scale your applications with workload identity, please read our [tutorial][keda-workload-identity]. To view KEDA's breaking change/deprecation policy, please read their [official documentation][keda-support-policy].\n```\n\n----------------------------------------\n\nTITLE: Connecting to MongoDB Client Pod in AKS\nDESCRIPTION: Command to execute an interactive shell in the MongoDB client pod. The pod name needs to be replaced with the actual client pod name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n $AKS_MONGODB_NAMESPACE exec -it mongodb-locust-client-564695f8f-q6745 -- /bin/bash\n```\n\n----------------------------------------\n\nTITLE: Describing Kubernetes Service in Console\nDESCRIPTION: This command uses kubectl to describe a Kubernetes service named 'azure-load-balancer'. It's used to troubleshoot issues with the service creation, particularly related to static IP address configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/static-ip.md#2025-04-21_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl describe service azure-load-balancer\n```\n\n----------------------------------------\n\nTITLE: Minimal Ingestion Profile Metrics - API Server\nDESCRIPTION: List of metrics collected by default for the controlplane-apiserver target when minimal ingestion profile is enabled\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks-reference.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\napiserver_request_total\napiserver_cache_list_fetched_objects_total\napiserver_cache_list_returned_objects_total\napiserver_flowcontrol_demand_seats_average\napiserver_flowcontrol_current_limit_seats\napiserver_request_sli_duration_seconds_sum\napiserver_request_sli_duration_seconds_count\nprocess_start_time_seconds\napiserver_request_duration_seconds_sum\napiserver_request_duration_seconds_count\napiserver_storage_list_fetched_objects_total\napiserver_storage_list_returned_objects_total\napiserver_current_inflight_requests\n```\n\n----------------------------------------\n\nTITLE: Checking Namespace Annotations with kubectl\nDESCRIPTION: Command to view namespace annotations using kubectl and jq to verify OSM sidecar injection configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get namespace bookbuyer -o json | jq '.metadata.annotations'\n```\n\n----------------------------------------\n\nTITLE: Generating Random Password Function\nDESCRIPTION: Creates a function to generate 32-character random passwords using only alphanumeric characters for MongoDB connection strings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngenerateRandomPasswordString() {\n    cat /dev/urandom | LC_ALL=C tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ServiceAccount with Workload Identity\nDESCRIPTION: Creates a Kubernetes ServiceAccount in the default namespace with managed identity client ID annotation for cross-tenant authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/workload-identity-cross-tenant.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: $CLIENT_ID\n  name: myserviceaccount\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview CLI Extension\nDESCRIPTION: Azure CLI commands to install and update the aks-preview extension required for node autoprovisioning.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Verifying Credentials for AKS Cluster with Disabled Local Accounts\nDESCRIPTION: This command attempts to get credentials for an AKS cluster with disabled local accounts. It should result in an error message indicating that local accounts are disabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-local-accounts-managed-azure-ad.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group <resource-group> --name <cluster-name> --admin\n```\n\n----------------------------------------\n\nTITLE: Node Status During Reboot Process\nDESCRIPTION: Example output showing node status when kured prepares for node reboot. The SchedulingDisabled status indicates the node is cordoned off.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-updates-kured.md#2025-04-21_snippet_2\n\nLANGUAGE: output\nCODE:\n```\nNAME                       STATUS                     ROLES     AGE       VERSION\naks-nodepool1-28993262-0   Ready,SchedulingDisabled   agent     1h        v1.11.7\n```\n\n----------------------------------------\n\nTITLE: Submitting Approval for Staged Update in AKS\nDESCRIPTION: This command submits an approval for a staged update by patching the ClusterApprovalRequest resource with the approval status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch clusterapprovalrequests example-staged-update-run-canary --type=merge -p {\"status\":{\"conditions\":[{\"type\":\"Approved\",\"status\":\"True\",\"reason\":\"tested as OK\",\"message\":\"lgtm\",\"lastTransitionTime\":\"'$(date --utc +%Y-%m-%dT%H:%M:%SZ)'\",\"observedGeneration\":1}]}} --subresource=status\n```\n\n----------------------------------------\n\nTITLE: Alternative Environment Variables for Service Principal Authentication\nDESCRIPTION: An alternative approach to setting up service principal authentication using different environment variable names that are also supported by kubelogin.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBECONFIG=/path/to/kubeconfig\n\nkubelogin convert-kubeconfig -l spn\n\nexport AZURE_CLIENT_ID=<SPN client ID>\nexport AZURE_CLIENT_SECRET=<SPN secret>\n```\n\n----------------------------------------\n\nTITLE: Pod Manifest with Seccomp Profile for AKS 1.19+\nDESCRIPTION: Updated YAML configuration for AKS 1.19+ that implements the seccomp profile using securityContext instead of annotations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/secure-container-access.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: chmod-prevented\nspec:\n  securityContext:\n    seccompProfile:\n      type: Localhost\n      localhostProfile: prevent-chmod\n  containers:\n  - name: chmod\n    image: mcr.microsoft.com/dotnet/runtime-deps:6.0\n    command:\n      - \"chmod\"\n    args:\n     - \"777\"\n     - /etc/hostname\n  restartPolicy: Never\n```\n\n----------------------------------------\n\nTITLE: Updating Azure CLI Fleet Extension\nDESCRIPTION: Updates the 'fleet' Azure CLI extension to the latest version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name fleet\n```\n\n----------------------------------------\n\nTITLE: Verifying Trident Installation using kubectl in Bash\nDESCRIPTION: This command uses kubectl to describe the Trident Orchestrator resource, which provides details about the Trident installation and its current status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe torc trident\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Resource Group with Azure CLI\nDESCRIPTION: Creates a new Azure resource group to contain the AKS cluster using the Azure CLI. The resource group name and location are specified through environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-node-pools.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name $RESOURCE_GROUP_NAME --location $LOCATION\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster and Resources using Azure CLI\nDESCRIPTION: This Azure CLI command deletes the entire resource group containing the AKS cluster and all related resources. It's used for cleaning up resources when they're no longer needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_8\n\nLANGUAGE: console\nCODE:\n```\naz group delete --name myResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Private DNS Zone for HPC Cache\nDESCRIPTION: Creates an Azure Private DNS zone for the client-facing IP addresses of the HPC Cache using the az network private-dns zone create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_17\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz network private-dns zone create \\\n  --resource-group $RESOURCE_GROUP \\\n  --name $PRIVATE_DNS_ZONE\n```\n\n----------------------------------------\n\nTITLE: Creating and Assigning Managed Identity to VM Scale Set\nDESCRIPTION: Commands to create a new managed identity and assign it to VM scale sets or VMs in the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create --resource-group <resource-group> --name <identity-name>\naz vmss identity assign --resource-group <resource-group> --name <agent-pool-vmss> --identities <identity-resource-id>\naz vm identity assign --resource-group <resource-group> --name <agent-pool-vm> --identities <identity-resource-id>\n\naz identity show --resource-group <resource-group> --name <identity-name> --query 'clientId' -o tsv\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Nodes\nDESCRIPTION: Kubernetes command to list all nodes in the cluster, used to verify node pool deletion or view current nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/delete-node-pool.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Creating NGINX Pod YAML with HPC Cache Volume Mount\nDESCRIPTION: YAML manifest for creating a Kubernetes pod that uses the NGINX image and mounts the HPC Cache volume. The pod writes date entries to a file on the mounted volume every second.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: nginx-nfs\nspec:\n  containers:\n - image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n    name: nginx-nfs\n    command:\n    - \"/bin/sh\"\n    - \"-c\"\n    - while true; do echo $(date) >> /mnt/azure/myfilepath/outfile; sleep 1; done\n    volumeMounts:\n    - name: disk01\n      mountPath: /mnt/azure\n  volumes:\n - name: disk01\n    persistentVolumeClaim:\n      claimName: pvc-nfs\n```\n\n----------------------------------------\n\nTITLE: Remove Kubernetes Login Tokens\nDESCRIPTION: Command to remove existing stored tokens using kubelogin for permission refresh.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubelogin remove-tokens\n```\n\n----------------------------------------\n\nTITLE: SSH to Windows Node via Proxy\nDESCRIPTION: Command to establish SSH connection to Windows node through a proxy using the forwarded port.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nssh -o 'ProxyCommand ssh -p 2022 -W %h:%p azureuser@127.0.0.1' azureuser@10.224.0.62\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl CLI Using Azure CLI\nDESCRIPTION: Installs the Kubernetes command-line tool (kubectl) locally using Azure CLI. This tool is required for interacting with the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks install-cli\n```\n\n----------------------------------------\n\nTITLE: WebLogic Domain Properties Configuration\nDESCRIPTION: This properties file defines the cluster size for the WebLogic domain.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_8\n\nLANGUAGE: properties\nCODE:\n```\nCLUSTER_SIZE=5\n```\n\n----------------------------------------\n\nTITLE: Verifying wasmCloud Host Connection\nDESCRIPTION: Uses the wash CLI to verify the connection to the wasmCloud host and retrieve host information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nwash get hosts\n```\n\n----------------------------------------\n\nTITLE: Refreshing the Resource Provider Registration in Azure\nDESCRIPTION: Refreshes the registration of the Microsoft.ContainerService resource provider after the feature flag has been registered to make the feature available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Creating an Untrusted Pod Manifest with Kata Container Runtime Class in YAML\nDESCRIPTION: This YAML manifest defines an untrusted pod that uses the kata-mshv-vm-isolation runtime class for pod sandboxing. It specifies a base Ubuntu container that runs a simple loop command to demonstrate isolation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_6\n\nLANGUAGE: yml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: untrusted\nspec:\n  runtimeClassName: kata-mshv-vm-isolation\n  containers:\n  - name: untrusted\n    image: mcr.microsoft.com/aks/fundamental/base-ubuntu:v0.0.11\n    command: [\"/bin/sh\", \"-ec\", \"while :; do echo '.'; sleep 5 ; done\"]\n```\n\n----------------------------------------\n\nTITLE: Rolling Back Istio Revision Tag\nDESCRIPTION: This command rolls back the prod-stable tag to the previous Istio revision asm-1-23 in case of issues.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nistioctl tag set prod-stable --revision asm-1-23 --istioNamespace aks-istio-system --overwrite\n```\n\n----------------------------------------\n\nTITLE: IP Address Range Calculation Example\nDESCRIPTION: Demonstrates IP address calculations for kubenet vs Azure CNI networking in AKS. Shows how kubenet can support more nodes and pods with smaller IP ranges compared to Azure CNI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nkubenet: /24 range supports:\n- 251 nodes (3 IPs reserved)\n- Up to 27,610 pods (110 pods/node default)\n\nAzure CNI: /24 range supports:\n- 8 nodes maximum\n- Up to 240 pods (30 pods/node default)\n```\n\n----------------------------------------\n\nTITLE: Listing AKS Nodes with kubectl\nDESCRIPTION: Kubernetes command to list all nodes in the cluster, showing both FIPS-enabled and regular nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Store application using kubectl apply\nDESCRIPTION: Deploys the AKS Store application components into the aks-store-demo namespace using a YAML manifest file from GitHub. The deployment includes store-front, product-service, order-service, and RabbitMQ components.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n aks-store-demo -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/aks-store-ingress-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for AKS Cluster\nDESCRIPTION: Creates a new resource group in Azure for the AKS cluster using Azure CLI. This command specifies the name and location of the resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Creating Dockerfile for WebLogic Auxiliary Image\nDESCRIPTION: Bash commands to create a Dockerfile based on busybox that will contain the WebLogic configuration and deployment resources. This Dockerfile sets up the necessary user permissions and paths.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\ncd ${BASE_DIR}/mystaging\ncat <<EOF >Dockerfile\nFROM busybox\nARG AUXILIARY_IMAGE_PATH=/auxiliary\nARG USER=oracle\nARG USERID=1000\nARG GROUP=root\nENV AUXILIARY_IMAGE_PATH=\\${AUXILIARY_IMAGE_PATH}\nRUN adduser -D -u \\${USERID} -G \\$GROUP \\$USER\nCOPY --chown=\\$USER:\\$GROUP ./ \\${AUXILIARY_IMAGE_PATH}/\nUSER \\$USER\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group for Cosmos DB\nDESCRIPTION: Azure CLI command to create a new resource group that will contain the Azure Cosmos DB instance used by the OpenFaaS function.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name serverless-backing --location eastus\n```\n\n----------------------------------------\n\nTITLE: Resetting kubeconfig Context for AKS Cluster\nDESCRIPTION: Uses the Azure CLI to reset the kubeconfig context to clear previously cached authentication tokens. This allows testing with different user credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster --overwrite-existing\n```\n\n----------------------------------------\n\nTITLE: Deleting and recreating an ImageList for manual cleanup\nDESCRIPTION: Shows how to delete an existing ImageList and create a new one to trigger manual cleanup of the same image again. The name must be 'imagelist'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete ImageList imagelist\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Cosmos DB MongoDB Instance\nDESCRIPTION: Azure CLI command to create a new Azure Cosmos DB instance with MongoDB API compatibility for use with OpenFaaS functions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\naz cosmosdb create --resource-group serverless-backing --name openfaas-cosmos --kind MongoDB\n```\n\n----------------------------------------\n\nTITLE: Removing Dedicated Host Node Pool\nDESCRIPTION: Removes a dedicated host node pool from an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-dedicated-hosts.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool delete --cluster-name MyManagedCluster --name agentpool3 --resource-group MyResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Deploying ScaledJob to Consume Messages from Azure Service Bus\nDESCRIPTION: This snippet creates a KEDA ScaledJob resource to consume messages from an Azure Service Bus queue. It configures scaling triggers based on message count and uses workload identity for authentication. The job scales out for every 10 messages.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: keda.sh/v1alpha1\nkind: ScaledJob\nmetadata:\n  name: myconsumer-scaledjob\nspec:\n  jobTargetRef:\n    template:\n      metadata:\n        labels:\n          azure.workload.identity/use: \"true\"\n      spec:\n        serviceAccountName: $MI_NAME\n        containers:\n        - image: ghcr.io/azure-samples/aks-app-samples/servicebusdemo:latest\n          name: myconsumer\n          env:\n          - name: OPERATION_MODE\n            value: \"consumer\"\n          - name: MESSAGE_COUNT\n            value: \"10\"\n          - name: AZURE_SERVICEBUS_QUEUE_NAME\n            value: $SB_QUEUE_NAME\n          - name: AZURE_SERVICEBUS_HOSTNAME\n            value: $SB_HOSTNAME\n        restartPolicy: Never\n  triggers:\n  - type: azure-servicebus\n    metadata:\n      queueName: $SB_QUEUE_NAME\n      namespace: $SB_NAME\n      messageCount: \"10\"\n    authenticationRef:\n      name: azure-servicebus-auth\nEOF\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Test Namespaces\nDESCRIPTION: Removes the test namespaces created for demonstrating Pod Security Admission policies, cleaning up all resources created during the demonstration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-psa.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl delete namespace test-restricted test-privileged\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials with Azure CLI\nDESCRIPTION: Command to retrieve the credentials for the AKS cluster using Azure CLI, necessary for accessing the cluster with kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group <resourceGroupName> --name <clusterName>\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Resource Group\nDESCRIPTION: Removes the resource group containing the AKS cluster and all related resources to prevent incurring unnecessary Azure charges after completing the quickstart.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\naz group delete --name <resource-group> --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Verify PVC Status Command\nDESCRIPTION: Command to verify the status of a PersistentVolumeClaim\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pvc azurefile\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Event Subscription with Azure CLI\nDESCRIPTION: Verifies the subscription to AKS events using Azure CLI. It lists the event subscriptions for the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-event-grid.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz eventgrid event-subscription list --source-resource-id $SOURCE_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Deleting Resource Group and AKS Cluster\nDESCRIPTION: Removes the resource group containing the AKS cluster and all associated resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-azure-rbac.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name $RESOURCE_GROUP --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating Node Pool via Azure CLI\nDESCRIPTION: Azure CLI command to create a dedicated node pool for the PMM server\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks-mongodb.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool add \\\n--resource-group $MY_RESOURCE_GROUP_NAME \\\n--cluster-name $MY_CLUSTER_NAME \\\n--name pmmsrvpool \\\n--node-vm-size Standard_DS4_v2 \\\n--node-count 3 \\\n--zones 1 2 3 \\\n--mode User \\\n--output table\n```\n\n----------------------------------------\n\nTITLE: Example Output of Latest AKS Operation Status\nDESCRIPTION: This snippet demonstrates the JSON output format when querying the latest operation status on an AKS cluster. It includes details such as percentage complete, start time, and current status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-abort-operations.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n{\n  \"endTime\": null,\n  \"error\": null,\n  \"id\": \"/subscriptions/<subscription-id>/resourcegroups/myResourceGroup/providers/Microsoft.ContainerService/managedClusters/contoso/operations/<operation-id>\",\n  \"name\": \"<operation-id>\",\n  \"operations\": null,\n  \"percentComplete\": 1.0,\n  \"resourceGroup\": \"myResourceGroup\",\n  \"resourceId\": null,\n  \"startTime\": \"2024-06-12T18:16:21+00:00\",\n  \"status\": \"InProgress\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Azure App Configuration Extension on AKS with Bicep\nDESCRIPTION: Bicep template to create the Azure App Configuration extension on an AKS cluster, along with the command to deploy it using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: bicep\nCODE:\n```\n@description('The name of the Managed Cluster resource.')\nparam clusterName string\n\nresource existingManagedCluster 'Microsoft.ContainerService/managedClusters@2024-02-01' existing = {\n  name: clusterName\n}\n\nresource appConfigExtension 'Microsoft.KubernetesConfiguration/extensions@2022-11-01' = {\n  name: 'appconfigurationkubernetesprovider'\n  scope: existingManagedCluster\n  properties: {\n    autoUpgradeMinorVersion: true\n    configurationSettings: {\n      'global.clusterType': 'managedclusters'\n    }\n    extensionType: 'microsoft.appconfiguration'\n  }\n}\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create \\\n  --resource-group myResourceGroup \\\n  --template-file ./my-bicep-file-path.bicep \\\n  --parameters clusterName=myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status\nDESCRIPTION: Kubectl command to check the status of the deployed pod to ensure it's running correctly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Connecting to MongoDB Shell in AKS\nDESCRIPTION: Command to connect to the MongoDB shell within the client pod. Requires replacing placeholders with actual cluster name, admin credentials, and authentication database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nmongosh --host ${MY_CLUSTER_NAME}-mongodb-rs0-0.${MY_CLUSTER_NAME}-mongodb-rs0.mongodb.svc.cluster.local --port 27017 -u ${databaseAdmin} -p ${databaseAdminPassword} --authenticationDatabase admin\n```\n\n----------------------------------------\n\nTITLE: Disabling CSI Storage Drivers on New AKS Cluster\nDESCRIPTION: This Azure CLI command creates a new AKS cluster with all CSI storage drivers (Disk, File, and Blob) and the snapshot controller explicitly disabled. SSH keys are automatically generated for cluster access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-storage-drivers.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name myAKSCluster \\\n    --resource-group myResourceGroup \\\n    --disable-disk-driver \\\n    --disable-file-driver \\\n    --disable-blob-driver \\\n    --disable-snapshot-controller \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Enabling PMM Monitoring\nDESCRIPTION: Command to enable PMM monitoring by patching the PerconaServerMongoDB resource\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks-mongodb.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch PerconaServerMongoDB ${AKS_MONGODB_CLUSTER_NAME} -n ${AKS_MONGODB_NAMESPACE} --type='merge' -p '{\"spec\":{\"pmm\":{\"enabled\":true}}}'\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace in Kubernetes Fleet\nDESCRIPTION: Command to create a new namespace that will be placed onto member clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-resource-propagation.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace my-namespace\n```\n\n----------------------------------------\n\nTITLE: Querying PostgreSQL Read-Only Replica with psql in Bash\nDESCRIPTION: Uses the psql command to connect to the PostgreSQL read-only replica endpoint (port 5433) and checks if it's in recovery mode. For replicas, pg_is_in_recovery() returns true.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\necho \"Query a replica, pg_is_in_recovery = true\"\n\npsql -h $AKS_PRIMARY_CLUSTER_ALB_DNSNAME \\\n    -p 5433 -U app -d appdb -W -c \"SELECT pg_is_in_recovery();\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Namespace for OSM Application Service\nDESCRIPTION: This command creates a Kubernetes namespace called 'httpbin' for deploying an application service that will be managed by Open Service Mesh.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nkubectl create ns httpbin\n```\n\n----------------------------------------\n\nTITLE: Setting Storage Account Name Variable\nDESCRIPTION: Command to set an environment variable for a unique storage account name, which must be between 3 and 24 characters and contain only numbers and lowercase letters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nSTORAGE_ACCOUNT_NAME=uniquestorageaccount\n```\n\n----------------------------------------\n\nTITLE: WebLogic Domain Model YAML Configuration\nDESCRIPTION: This YAML configuration defines the WebLogic domain structure, including admin server, managed servers, and security settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ndomainInfo:\n  AdminUserName: \"@@SECRET:__weblogic-credentials__:username@@\"\n  AdminPassword: \"@@SECRET:__weblogic-credentials__:password@@\"\n  ServerStartMode: \"prod\"\n\ntopology:\n  Name: \"@@ENV:CUSTOM_DOMAIN_NAME@@\"\n  ProductionModeEnabled: true\n  AdminServerName: \"admin-server\"\n  Cluster:\n    \"cluster-1\":\n      DynamicServers:\n        ServerTemplate: \"cluster-1-template\"\n        ServerNamePrefix: \"@@ENV:MANAGED_SERVER_PREFIX@@\"\n        DynamicClusterSize: \"@@PROP:CLUSTER_SIZE@@\"\n        MaxDynamicClusterSize: \"@@PROP:CLUSTER_SIZE@@\"\n        MinDynamicClusterSize: \"0\"\n        CalculatedListenPorts: false\n  Server:\n    \"admin-server\":\n      ListenPort: 7001\n  ServerTemplate:\n    \"cluster-1-template\":\n      Cluster: \"cluster-1\"\n      ListenPort: 8001\n  SecurityConfiguration:\n    NodeManagerUsername: \"@@SECRET:__weblogic-credentials__:username@@\"\n    NodeManagerPasswordEncrypted: \"@@SECRET:__weblogic-credentials__:password@@\"\n\nresources:\n  SelfTuning:\n    MinThreadsConstraint:\n      SampleMinThreads:\n        Target: \"cluster-1\"\n        Count: 1\n    MaxThreadsConstraint:\n      SampleMaxThreads:\n        Target: \"cluster-1\"\n        Count: 10\n    WorkManager:\n      SampleWM:\n        Target: \"cluster-1\"\n        MinThreadsConstraint: \"SampleMinThreads\"\n        MaxThreadsConstraint: \"SampleMaxThreads\"\n```\n\n----------------------------------------\n\nTITLE: Final Certificate Update and Verification\nDESCRIPTION: Commands to update Azure Key Vault with only the new certificates and verify the changes in Istiod logs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs deploy/istiod-asm-1-17 -c discovery -n aks-istio-system | grep -v validationController\n```\n\nLANGUAGE: bash\nCODE:\n```\n2023-11-07T08:01:17.780299Z     info    x509 cert - Issuer: \"CN=Intermediate CA - B1,O=Istio,L=cluster-B1\", Subject: \"\", SN: 1159747c72cc7ac7a54880cd49b8df0a, NotBefore: \"2023-11-07T07:59:17Z\", NotAfter: \"2033-11-04T08:01:17Z\"\n2023-11-07T08:01:17.780330Z     info    x509 cert - Issuer: \"CN=Root B,O=Istio\", Subject: \"CN=Intermediate CA - B1,O=Istio,L=cluster-B1\", SN: 2aba0c438652a1f9beae4249457023013948c7e2, NotBefore: \"2023-11-04T01:42:12Z\", NotAfter: \"2033-11-01T01:42:12Z\"\n2023-11-07T08:01:17.780345Z     info    x509 cert - Issuer: \"CN=Root B,O=Istio\", Subject: \"CN=Root B,O=Istio\", SN: 3f9da6ddc4cb03749c3f43243a4b701ce5eb4e96, NotBefore: \"2023-11-04T01:41:54Z\", NotAfter: \"2033-11-01T01:41:54Z\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Seccomp Filter for AKS 1.19+\nDESCRIPTION: Updated JSON configuration for seccomp filter in AKS 1.19 and later versions, using a consolidated format to block chmod-related system calls.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/secure-container-access.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"defaultAction\": \"SCMP_ACT_ALLOW\",\n  \"syscalls\": [\n    {\n      \"names\": [\"chmod\",\"fchmodat\",\"chmodat\"],\n      \"action\": \"SCMP_ACT_ERRNO\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Virtual Network Resources\nDESCRIPTION: Script to remove virtual network resources, network profiles, and subnet delegations associated with virtual nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_19\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\n# Change the name of your resource group, cluster and network resources as needed\nRES_GROUP=myResourceGroup\nAKS_CLUSTER=myAKScluster\nAKS_VNET=myVnet\nAKS_SUBNET=myVirtualNodeSubnet\n\n# Get AKS node resource group\nNODE_RES_GROUP=$(az aks show --resource-group $RES_GROUP --name $AKS_CLUSTER --query nodeResourceGroup --output tsv)\n\n# Get network profile ID\nNETWORK_PROFILE_ID=$(az network profile list --resource-group $NODE_RES_GROUP --query \"[0].id\" --output tsv)\n\n# Delete the network profile\naz network profile delete --id $NETWORK_PROFILE_ID -y\n\n# Grab the service association link ID\nSAL_ID=$(az network vnet subnet show --resource-group $RES_GROUP --vnet-name $AKS_VNET --name $AKS_SUBNET --query id --output tsv)/providers/Microsoft.ContainerInstance/serviceAssociationLinks/default\n\n# Delete the service association link for the subnet\naz resource delete --ids $SAL_ID --api-version 2021-10-01\n\n# Delete the subnet delegation to Azure Container Instances\naz network vnet subnet update --resource-group $RES_GROUP --vnet-name $AKS_VNET --name $AKS_SUBNET --remove delegations\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Azure Resources\nDESCRIPTION: This command deletes the Azure resource group and all resources within it to avoid incurring additional costs after testing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group delete --name $RG_NAME --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Managed Identity for PostgreSQL on AKS\nDESCRIPTION: Creates a user-assigned managed identity (UAMI) that allows the PostgreSQL cluster to use AKS workload identity to access Azure Blob Storage without using secrets for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nAKS_UAMI_WI_IDENTITY=$(az identity create \\\n    --name $AKS_UAMI_CLUSTER_IDENTITY_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --location $PRIMARY_CLUSTER_REGION \\\n    --output json)\n```\n\n----------------------------------------\n\nTITLE: Verifying Feature Registration Status in Azure\nDESCRIPTION: Checks the registration status of the IstioNativeSidecarModePreview feature flag. This command shows if the feature is registered and available for use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz feature show --namespace Microsoft.ContainerService --name IstioNativeSidecarModePreview\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Azure Resources\nDESCRIPTION: Command to delete the resource group and all related resources when finished with the demo\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep.md#2025-04-21_snippet_6\n\nLANGUAGE: console\nCODE:\n```\naz group delete --name myResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Creating a user-defined exclusion list for Image Cleaner\nDESCRIPTION: Demonstrates how to create and label a ConfigMap containing user-defined images that should be excluded from Image Cleaner operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncat > sample.json <<EOF\n{\"excluded\": [\"excluded-image-name\"]}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Static Public IP Address for AKS\nDESCRIPTION: Azure CLI commands to create a static public IP address in the AKS node resource group and retrieve its value.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/static-ip.md#2025-04-21_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz network public-ip create \\\n    --resource-group <node resource group name> \\\n    --name myAKSPublicIP \\\n    --sku Standard \\\n    --allocation-method static\n\naz network public-ip show --resource-group <node resource group name> --name myAKSPublicIP --query ipAddress --output tsv\n```\n\n----------------------------------------\n\nTITLE: Removing Image Integrity Policy Initiative\nDESCRIPTION: An Azure CLI command to delete the policy assignment for Image Integrity, which removes the enforcement policy from the Azure subscription.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\naz policy assignment delete --name 'deploy-trustedimages'\n```\n\n----------------------------------------\n\nTITLE: Creating Sample PostgreSQL Dataset with Basic SQL Operations\nDESCRIPTION: SQL commands to create a test table, insert sample data, and validate the insertion by counting records. This demonstrates basic PostgreSQL functionality within the AKS-deployed database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\n# Run the following PSQL commands to create a small dataset\n# postgres=#\n\nCREATE TABLE datasample (id INTEGER,name VARCHAR(255));\nINSERT INTO datasample (id, name) VALUES (1, 'John');\nINSERT INTO datasample (id, name) VALUES (2, 'Jane');\nINSERT INTO datasample (id, name) VALUES (3, 'Alice');\nSELECT COUNT(*) FROM datasample;\n\n# Type \\q to exit psql\n```\n\n----------------------------------------\n\nTITLE: Getting Ingress Status\nDESCRIPTION: Kubernetes command to verify the creation and status of the Ingress resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get ingress -n aks-store\n```\n\n----------------------------------------\n\nTITLE: Patching Horizontal Pod Autoscaler Configuration for Istio Components in AKS\nDESCRIPTION: Command to modify the HPA configuration for the external ingress gateway in the Istio service mesh add-on. This example adjusts the minimum replicas to 3 and maximum replicas to 6 using kubectl patch with a merge strategy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-scale.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch hpa aks-istio-ingressgateway-external-asm-1-19 -n aks-istio-ingress --type merge --patch '{\"spec\": {\"minReplicas\": 3, \"maxReplicas\": 6}}'\n```\n\n----------------------------------------\n\nTITLE: Enabling KEDA Add-on in ARM Template\nDESCRIPTION: JSON snippet to enable the KEDA add-on by specifying the workloadAutoScalerProfile field in the ARM template.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-arm.md#2025-04-21_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n\"workloadAutoScalerProfile\": {\n    \"keda\": {\n        \"enabled\": true\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Azure Kubernetes Fleet Manager\nDESCRIPTION: Sets required environment variables for the Azure resource group, fleet name, and AKS cluster resource ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport GROUP=<resource-group>\nexport FLEET=<fleet-name>\nexport AKS_CLUSTER_ID=<aks-cluster-resource-id>\n```\n\n----------------------------------------\n\nTITLE: Checking Azure CLI Version\nDESCRIPTION: Command to verify the installed Azure CLI version which must be 2.0.81 or greater for UDR configuration\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/egress-udr.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz --version\n```\n\n----------------------------------------\n\nTITLE: Installing curl in Test Pod\nDESCRIPTION: Updates package list and installs curl utility in the test pod for HTTP testing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_14\n\nLANGUAGE: console\nCODE:\n```\napt-get update && apt-get install -y curl\n```\n\n----------------------------------------\n\nTITLE: Configuring PickAll Placement Type with Cluster Affinity\nDESCRIPTION: Example of a ClusterResourcePlacement using PickAll placement type to deploy a prod-deployment namespace to all clusters that match the label 'environment: production'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-resource-propagation.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-pickall\nspec:\n  policy:\n    placementType: PickAll\n    affinity:\n        clusterAffinity:\n            requiredDuringSchedulingIgnoredDuringExecution:\n                clusterSelectorTerms:\n                - labelSelector:\n                    matchLabels:\n                        environment: production\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: prod-deployment\n      version: v1\n```\n\n----------------------------------------\n\nTITLE: Limiting Dapr Extension to Specific Nodes with Azure CLI\nDESCRIPTION: Azure CLI command to install Dapr only on specific nodes by using nodeSelector to target nodes in a particular zone.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr \\\n--extension-type Microsoft.Dapr \\\n--auto-upgrade-minor-version true \\\n--configuration-settings \"global.ha.enabled=true\" \\\n--configuration-settings \"dapr_operator.replicaCount=2\" \\\n--configuration-settings \"global.nodeSelector.kubernetes\\.io/zone=us-east-1c\"\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Add-on Revision Version\nDESCRIPTION: Verifies that the Istio add-on is on asm-1-20 or newer revision, which is required to support native sidecar mode for Istio in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --resource-group $RESOURCE_GROUP --name $CLUSTER -o json | jq \".serviceMeshProfile.istio.revisions\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Error Message for Blocked AKS Upgrade\nDESCRIPTION: This snippet shows an example error message when an AKS upgrade is blocked due to usage of deprecated Kubernetes APIs. It includes details about the specific API causing the issue and the version where it will be removed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/stop-cluster-upgrade-api-breaking-changes.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nBad Request({\n  \"code\": \"ValidationError\",\n  \"message\": \"Control Plane upgrade is blocked due to recent usage of a Kubernetes API deprecated in the specified version. Please refer to https://kubernetes.io/docs/reference/using-api/deprecation-guide to migrate the usage. To bypass this error, set enable-force-upgrade in upgradeSettings.overrideSettings. Bypassing this error without migrating usage will result in the deprecated Kubernetes API calls failing. Usage details: 1 error occurred:\\n\\t* usage has been detected on API flowcontrol.apiserver.k8s.io.prioritylevelconfigurations.v1beta1, and was recently seen at: 2023-03-23 20:57:18 +0000 UTC, which will be removed in 1.26\\n\\n\",\n  \"subcode\": \"UpgradeBlockedOnDeprecatedAPIUsage\"\n})\n```\n\n----------------------------------------\n\nTITLE: Sending Test Request from Sleep to Httpbin in Azure CLI\nDESCRIPTION: Executes a curl command from the 'sleep' pod to the 'httpbin' service to generate access logs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-telemetry.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl exec \"$SOURCE_POD\" -c sleep -- curl -sS -v httpbin:8000/status/418\n```\n\n----------------------------------------\n\nTITLE: Updating Arm64 Node Pool to Enable FIPS\nDESCRIPTION: Updates an existing Arm64 node pool to enable FIPS compliance. Triggers an immediate reimage of the node pool to deploy the FIPS-compliant Operating System.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-arm64-vms.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update \\\n   --resource-group myResourceGroup \\\n   --cluster-name myAKSCluster \\\n   --name np \\\n   --enable-fips-image\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing WebLogic Auxiliary Image to Azure Container Registry\nDESCRIPTION: Bash command to build the WebLogic auxiliary image using Azure Container Registry's build service and push it to the registry, specifying the Linux platform for compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\naz acr build -t ${IMAGE} --build-arg AUXILIARY_IMAGE_PATH=/auxiliary -r ${ACR_NAME} --platform linux/amd64 .\n```\n\n----------------------------------------\n\nTITLE: Deleting an AKS Resource Group with Azure CLI\nDESCRIPTION: This Azure CLI command deletes the entire resource group containing the AKS cluster, which is useful for cleaning up all associated resources when they're no longer needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_15\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group delete --name myResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Generate Root Certificate and Private Key\nDESCRIPTION: Creates a root certificate and private key for signing service certificates using OpenSSL.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir bookinfo_certs\nopenssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=bookinfo Inc./CN=bookinfo.com' -keyout bookinfo_certs/bookinfo.com.key -out bookinfo_certs/bookinfo.com.crt\n```\n\n----------------------------------------\n\nTITLE: Creating Terraform Variables File for MongoDB\nDESCRIPTION: Bash command to create a mongodb.tfvars file containing configuration for AKS cluster, ACR, and MongoDB deployment settings\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncat > mongodb.tfvars <<EOL\nlocation = \"$MY_LOCATION\"\nresource_group_name = \"$MY_RESOURCE_GROUP_NAME\"\nacr_registry_name = \"$MY_ACR_REGISTRY\"\ncluster_name = \"$MY_CLUSTER_NAME\"\nidentity_name = \"$MY_IDENTITY_NAME\"\nkeyvault_name = \"$MY_KEYVAULT_NAME\"\naks_mongodb_backup_storage_account_name = \"$AKS_MONGODB_BACKUP_STORAGE_ACCOUNT_NAME\"\naks_mongodb_backup_storage_container_name = \"$AKS_MONGODB_BACKUP_STORAGE_CONTAINER_NAME\"\nmongodb_enabled = true\nmongodb_namespace = \"$AKS_MONGODB_NAMESPACE\"\nservice_account_name = \"$SERVICE_ACCOUNT_NAME\"\n\nacr_task_content = <<-EOF\nversion: v1.1.0\nsteps:\n  - cmd: bash echo Waiting 10 seconds the propagation of the Container Registry Data Importer and Data Reader role\n  - cmd: bash sleep 10\n  - cmd: az login --identity\n  - cmd: az acr import --name \\$RegistryName --source docker.io/percona/percona-server-mongodb:7.0.8-5 --image percona-server-mongodb:7.0.8-5\n  - cmd: az acr import --name \\$RegistryName --source docker.io/percona/pmm-client:2.41.2 --image pmm-client:2.41.2\n  - cmd: az acr import --name \\$RegistryName --source docker.io/percona/percona-backup-mongodb:2.4.1 --image percona-backup-mongodb:2.4.1\n  - cmd: az acr import --name \\$RegistryName --source docker.io/percona/percona-server-mongodb-operator:1.16.1 --image percona-server-mongodb-operator:1.16.1\nEOF\n\nnode_pools = {\n  mongodbserver = {\n    name       = \"mongodbpool\"\n    vm_size    = \"Standard_D2ds_v4\"\n    node_count = 3\n    zones      = [1, 2, 3]\n    os_type    = \"Linux\"\n  }\n}\nEOL\n```\n\n----------------------------------------\n\nTITLE: Getting Virtual Network Resource ID\nDESCRIPTION: Retrieves the virtual network resource ID and stores it in a variable named VNET_ID for use in role assignment commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\nVNET_ID=$(az network vnet show --resource-group myResourceGroup --name myAKSVnet --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Applying NGINX Ingress Controller Configuration with kubectl\nDESCRIPTION: Uses kubectl apply command to create the NGINX ingress controller resources from the YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nginx-internal-controller.yaml\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Azure Disk Resources\nDESCRIPTION: Commands to remove the created Kubernetes resources when they are no longer needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n# Remove the pod\nkubectl delete -f azure-pvc-disk.yaml\n\n# Remove the persistent volume claim\nkubectl delete -f azure-pvc.yaml\n```\n\n----------------------------------------\n\nTITLE: Displaying Node Pool Details with PowerShell\nDESCRIPTION: This PowerShell command retrieves and displays detailed information about a specific node pool in an AKS cluster, including its mode, taints, size, and other configuration settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_8\n\nLANGUAGE: PowerShell\nCODE:\n```\nGet-AzAksNodePool -ResourceGroupName myResourceGroup -ClusterName myAKSCluster -Name systempool\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Credentials with Azure CLI\nDESCRIPTION: Command to download AKS cluster credentials and configure kubectl to use them, allowing you to connect to and manage your AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Checking OSM Controller Components in AKS\nDESCRIPTION: Command to verify the deployment, pod, and service status of the OSM Controller in the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get deployment,pod,service -n kube-system --selector app=osm-controller\n```\n\n----------------------------------------\n\nTITLE: Refreshing Resource Provider Registration\nDESCRIPTION: Command to refresh the registration of the Microsoft.ContainerService resource provider after the feature flag registration is complete.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Checking Host Instance Details\nDESCRIPTION: Command to retrieve instance view details for a specific dedicated host within a host group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-dedicated-hosts.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm host get-instance-view --resource-group myDHResourceGroup --host-group MyHostGroup --name MyHost\n```\n\n----------------------------------------\n\nTITLE: Azure AKS Scale-Up Issues Resolution Table\nDESCRIPTION: Markdown table showing common causes and mitigation recommendations for scale-up operation failures in AKS clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler-overview.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Common causes | Mitigation recommendations |\n|--------------|--------------|\\n| PersistentVolume node affinity conflicts | Use one node pool per availability zone and enabling `--balance-similar-node-groups`. Set `volumeBindingMode` to `WaitForFirstConsumer` |\n| Taints and Tolerations/Node affinity conflicts | Assess node taints and pod tolerations, adjust as needed |\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes CLI (kubectl) using PowerShell\nDESCRIPTION: Installs the Kubernetes command-line tool kubectl locally using Azure PowerShell cmdlet\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nInstall-AzAksCliTool\n```\n\n----------------------------------------\n\nTITLE: Verifying Node Labels using kubectl\nDESCRIPTION: Retrieves and filters node labels to verify the department and cost center labels were correctly set.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-labels.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes --show-labels | grep -e \"costcenter=9000\" -e \"dept=IT\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a StatefulSet with Orphaned Pods to Simulate Controlled Outage\nDESCRIPTION: This command deletes the valkey-masters StatefulSet with the --cascade=orphan flag, which prevents the StatefulSet controller from automatically recreating deleted Pods, allowing for controlled failure testing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-valkey-cluster.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete statefulset valkey-masters --cascade=orphan\n```\n\n----------------------------------------\n\nTITLE: Supported WASI RuntimeClass Configurations in Markdown\nDESCRIPTION: Lists all supported RuntimeClass options for WASI node pools, including wasmtime-spin versions and their aliases. Each version corresponds to specific spin shim implementations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-wasi-node-pools.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n- wasmtime-spin-v2 (alias to wasmtime-spin-v0-15-1)\n- wasmtime-spin-v1 (alias to wasmtime-spin-v0-8-0)\n- wasmtime-spin-v0-15-1\n- wasmtime-spin-v0-8-0\n- wasmtime-spin-v0-5-1\n- wasmtime-spin-v0-3-0\n```\n\n----------------------------------------\n\nTITLE: Creating VM in AKS Cluster Subnet using Azure PowerShell\nDESCRIPTION: This snippet creates a virtual machine in the same subnet as the AKS cluster Windows Server nodes using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n$ipParams = @{\n    Name              = 'myPublicIP'\n    ResourceGroupName = 'myResourceGroup'\n    Location          = 'eastus'\n    AllocationMethod  = 'Dynamic'\n    IpAddressVersion  = 'IPv4'\n}\nNew-AzPublicIpAddress @ipParams\n\n$vmParams = @{\n    ResourceGroupName            = 'myResourceGroup'\n    Name                         = 'myVM'\n    Image                        = 'win2019datacenter'\n    Credential                   = Get-Credential azureuser\n    VirtualNetworkName           = $VNET_NAME\n    AddressPrefix                = $ADDRESS_PREFIX\n    SubnetName                   = $SUBNET_NAME\n    SubnetAddressPrefix          = $SUBNET_ADDRESS_PREFIX\n    PublicIpAddressName          = 'myPublicIP'\n    OSDiskDeleteOption           = 'Delete'\n    NetworkInterfaceDeleteOption = 'Delete'\n    DataDiskDeleteOption         = 'Delete'\n}\nNew-AzVM @vmParams\n\n(Get-AzPublicIpAddress -ResourceGroupName myResourceGroup -Name myPublicIP).IpAddress\n```\n\n----------------------------------------\n\nTITLE: Downloading OSM Binary using curl and tar\nDESCRIPTION: Downloads a specific version of the OSM release using curl and extracts it using tar. Sets up the OSM version variable that will be used throughout the installation process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/servicemesh/osm/open-service-mesh-binary-install-macos.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Specify the OSM version that will be leveraged throughout these instructions\nOSM_VERSION=v1.2.0\n\ncurl -sL \"https://github.com/openservicemesh/osm/releases/download/$OSM_VERSION/osm-$OSM_VERSION-darwin-amd64.tar.gz\" | tar -vxzf -\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Capacity Reservation Group and User-Assigned Identity\nDESCRIPTION: This Azure CLI command creates a new AKS cluster, associating it with a capacity reservation group and a user-assigned identity. It uses the '--crg-id' and '--assign-identity' flags to specify the CRG and identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nIDENTITY_NAME=myID\nRG_NAME=myResourceGroup\nCLUSTER_NAME=myAKSCluster\nNODEPOOL_NAME=myNodepool\nCRG_NAME=myCRG\nCRG_ID=$(az capacity reservation group show --capacity-reservation-group $CRG_NAME --resource-group $RG_NAME --query id -o tsv)\nIDENTITY_ID=$(az identity show --name $IDENTITY_NAME --resource-group $RG_NAME --query identity.id -o tsv)\n\naz aks create \\\n    --resource-group $RG_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --crg-id $CRG_ID \\\n    --assign-identity $IDENTITY_ID \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Invoking the Figlet Function with cURL\nDESCRIPTION: Command to call the deployed Figlet function using HTTP POST with a text payload, which returns ASCII art of the input text.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST http://52.186.64.52:8080/function/figlet -d \"Hello Azure\"\n```\n\n----------------------------------------\n\nTITLE: Verifying TCP Keepalive Settings in a Kubernetes Pod Using Shell Command\nDESCRIPTION: This shell command executes in a pod to verify the configured TCP keepalive settings. It uses the sysctl command to display the current values for keepalive time, interval, and probe count.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/improve-network-fault-tolerance-in-aks-using-tcp-keepalive.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nkubectl exec -it busybox-sysctls -- sh -c \"sysctl net.ipv4.tcp_keepalive_time net.ipv4.tcp_keepalive_intvl net.ipv4.tcp_keepalive_probes\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Feature Registration Status in Azure CLI\nDESCRIPTION: Command to check the registration status of the WindowsNetworkPolicyPreview feature. This verifies if the feature has been successfully registered before proceeding.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"WindowsNetworkPolicyPreview\"\n```\n\n----------------------------------------\n\nTITLE: Creating Fleet Resource Without Hub\nDESCRIPTION: Creates a basic Fleet resource for update orchestration without hub cluster configuration\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet create --resource-group ${GROUP} --name ${FLEET} --location eastus\n```\n\n----------------------------------------\n\nTITLE: Restarting Workload Deployment\nDESCRIPTION: Command to force restart a deployment to update workload certificates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart deployment <deployment name> -n <deployment namespace>\n```\n\n----------------------------------------\n\nTITLE: Setting Service Account and Secret Environment Variables in PowerShell\nDESCRIPTION: This snippet shows how to set environment variables for the service account name and secret name that will be used when deploying the Liberty application to the AKS cluster in PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\n$Env:SERVICE_ACCOUNT_NAME = \"<service-account-name>\"\n$Env:SECRET_NAME = \"<secret-name>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Aggressive Scale Down Profile\nDESCRIPTION: Sets up an aggressive scale-down configuration with minimal delays and high thresholds for node removal.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --cluster-autoscaler-profile scan-interval=30s,scale-down-delay-after-add=0m,scale-down-delay-after-failure=1m,scale-down-unneeded-time=3m,scale-down-unready-time=3m,max-graceful-termination-sec=30,skip-nodes-with-local-storage=false,max-empty-bulk-delete=1000,max-total-unready-percentage=100,ok-total-unready-count=1000,max-node-provision-time=15m\n```\n\n----------------------------------------\n\nTITLE: Setting Service Account and Secret Environment Variables in Bash\nDESCRIPTION: This snippet shows how to set environment variables for the service account name and secret name that will be used when deploying the Liberty application to the AKS cluster in Bash.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nexport SERVICE_ACCOUNT_NAME=<service-account-name>\nexport SECRET_NAME=<secret-name>\n```\n\n----------------------------------------\n\nTITLE: Importing Data into Azure Cosmos DB\nDESCRIPTION: Command to import the sample JSON data into the Azure Cosmos DB collection using the mongoimport tool with the connection string stored previously.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nmongoimport --uri=$COSMOS -c plans < plans.json\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for AKS Documentation\nDESCRIPTION: YAML frontmatter configuration defining metadata for the Azure Kubernetes Service documentation page, including title, description, topic category, service name, date, authors and collection information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/stateful-workloads-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Stateful workloads in Azure Kubernetes Service (AKS)\ndescription: Learn about running stateful workloads in Azure Kubernetes Service (AKS).\nms.topic: overview\nms.service: azure-kubernetes-service\nms.date: 04/04/2025\nauthor: schaffererin\nms.author: schaffererin\nms.collection: \n - migration\n---\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure DNS Zone Resource ID\nDESCRIPTION: Gets the Azure DNS zone resource ID and stores it in a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\nZONEID=$(az network dns zone show --resource-group <ResourceGroupName> --name <ZoneName> --query \"id\" --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Deleting Auto-Upgrade Profile using Azure CLI\nDESCRIPTION: This command deletes an existing auto-upgrade profile using the az fleet autoupgradeprofile delete command. It requires confirmation unless the --yes flag is included.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-automation.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet autoupgradeprofile delete \\\n  --resource-group $GROUP \\\n  --fleet-name $FLEET \\\n  --name $AUTOUPGRADEPROFILE\n```\n\n----------------------------------------\n\nTITLE: Verifying Disk Move in Target Resource Group\nDESCRIPTION: Azure CLI command to verify that the disk volume has been successfully moved to the target resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz disk list --resource-group MC_myResourceGroup_myAKSCluster_eastus\n```\n\n----------------------------------------\n\nTITLE: Adding Istio Sidecar Injection Labels\nDESCRIPTION: Bash commands to label namespaces for automatic Istio sidecar proxy injection. Replaces OSM namespace add command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label namespace bookstore istio-injection=enabled\nkubectl label namespace bookbuyer istio-injection=enabled\nkubectl label namespace bookthief istio-injection=enabled\nkubectl label namespace bookwarehouse istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Configuring SecretProviderClass for Key Vault Access\nDESCRIPTION: YAML configuration for SecretProviderClass that defines how to access Key Vault using managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: azure-kvname-user-msi\nspec:\n  provider: azure\n  parameters:\n    usePodIdentity: \"false\"\n    useVMManagedIdentity: \"true\"          # Set to true for using managed identity\n    userAssignedIdentityID: <client-id>   # Set the clientID of the user-assigned managed identity to use\n    keyvaultName: <key-vault-name>        # Set to the name of your key vault\n    cloudName: \"\"                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud\n    objects:  |\n      array:\n        - |\n          objectName: secret1\n          objectType: secret              # object types: secret, key, or cert\n          objectVersion: \"\"               # [OPTIONAL] object versions, default to latest if empty\n        - |\n          objectName: key1\n          objectType: key\n          objectVersion: \"\"\n    tenantId: <tenant-id>                 # The tenant ID of the key vault\n```\n\n----------------------------------------\n\nTITLE: Removing AKS Resources\nDESCRIPTION: Azure CLI command to remove the resource group and all related resources, including the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-arm.md#2025-04-21_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\naz group delete --name <resource-group-name>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Store-Front Service External IP with kubectl\nDESCRIPTION: This command retrieves the external IP address of the store-front service in the AKS cluster. It's used to access the application from a web browser.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-paas-services.md#2025-04-21_snippet_6\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl get service store-front\n```\n\n----------------------------------------\n\nTITLE: Deleting an AKS Cluster with Azure CLI\nDESCRIPTION: This Azure CLI command deletes the entire AKS cluster and associated resources when you're finished with testing pod sandboxing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\naz aks delete --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding for SSH Access\nDESCRIPTION: Sets up port forwarding from local machine to the debug pod for SSH access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward node-debugger-aks-nodepool1-37663765-vmss000000-bkmmx 2022:22\n```\n\n----------------------------------------\n\nTITLE: Viewing MongoDB Backup Agent Logs\nDESCRIPTION: Retrieves logs from the backup-agent container in a MongoDB replica set pod to troubleshoot any backup issues. This is useful for diagnosing problems with the backup process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs pod/${AKS_MONGODB_CLUSTER_NAME}-rs0-0 -c backup-agent -n ${AKS_MONGODB_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Checking ACI Provider Registration Status with Azure CLI\nDESCRIPTION: Command to check if the Microsoft.ContainerInstance provider is registered with your Azure subscription, which is required for using virtual nodes with AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider list --query \"[?contains(namespace,'Microsoft.ContainerInstance')]\" -o table\n```\n\n----------------------------------------\n\nTITLE: Viewing Pod Security Policies in AKS\nDESCRIPTION: Command to view available pod security policies in the cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nkubectl get psp\n```\n\n----------------------------------------\n\nTITLE: Generating WebLogic Domain Properties File using Base64 Decoding\nDESCRIPTION: This command decodes a base64-encoded string to produce the WebLogic domain properties file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\necho -e IyBDb3B5cml...pFPTUK | base64 -d > model.properties\n```\n\n----------------------------------------\n\nTITLE: Removing Node Resource Group Lockdown\nDESCRIPTION: Command to remove node resource group lockdown restrictions from an AKS cluster by setting it to Unrestricted mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-resource-group-lockdown.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME --nrg-lockdown-restriction-level Unrestricted\n```\n\n----------------------------------------\n\nTITLE: Creating a Private Access Mode Kubernetes Fleet in Azure CLI\nDESCRIPTION: Command to create a private access mode Kubernetes Fleet resource with a hub cluster using the Azure CLI. This command enables private cluster functionality and specifies the subnet for node VMs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\naz fleet create --resource-group ${GROUP} --name ${FLEET} --enable-hub --enable-private-cluster --agent-subnet-id \"${SUBNET_ID}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network and Subnet with Azure CLI\nDESCRIPTION: Creates a virtual network named 'vnet-1' with a subnet 'subnet-1' in the 'test-rg' resource group using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet create \\\n  --name vnet-1 \\\n  --resource-group test-rg \\\n  --location eastus \\\n  --address-prefix 10.2.0.0/16 \\\n  --subnet-name subnet-1 \\\n  --subnet-prefixes 10.2.0.0/24\n```\n\n----------------------------------------\n\nTITLE: Verifying Cluster Nodes with kubectl\nDESCRIPTION: Bash command to list all nodes in the AKS cluster with detailed information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-terraform.md#2025-04-21_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl get node -o wide\n```\n\n----------------------------------------\n\nTITLE: Defining a Pod with Persistent Volume Claim in YAML\nDESCRIPTION: This YAML manifest defines a pod that uses a persistent volume claim. It mounts the volume at /mnt/azure for a nginx container.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-storage.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: nginx\nspec:\n  containers:\n    - name: myfrontend\n      image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n      volumeMounts:\n      - mountPath: \"/mnt/azure\"\n        name: volume\n  volumes:\n    - name: volume\n      persistentVolumeClaim:\n        claimName: azure-managed-disk\n```\n\n----------------------------------------\n\nTITLE: Monitoring Service External IP Assignment\nDESCRIPTION: Monitors the store-front service to detect when an external IP address is assigned, which indicates the application is accessible from the internet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nkubectl get service store-front --watch\n```\n\n----------------------------------------\n\nTITLE: Setting Azure NetApp Files Variables for AKS Integration\nDESCRIPTION: Defines environment variables for the Azure NetApp Files resource group, account name, pool name, and volume name for later use in volume provisioning commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nRESOURCE_GROUP=\"myresourcegroup\"\nANF_ACCOUNT_NAME=\"myaccountname\"\nPOOL_NAME=\"mypool1\"\nVOLUME_NAME=\"myvolname\"\n```\n\n----------------------------------------\n\nTITLE: Registering the AzureOverlayDualStackPreview Feature Flag\nDESCRIPTION: This command registers the AzureOverlayDualStackPreview feature flag, which enables preview support for dual-stack networking in Azure CNI Overlay with Windows nodepools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"AzureOverlayDualStackPreview\"\n```\n\n----------------------------------------\n\nTITLE: Viewing Created Docker Images\nDESCRIPTION: This command lists the Docker images created for the multi-container application, including the product service, order service, and store front components.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-app.md#2025-04-21_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\ndocker images\n```\n\n----------------------------------------\n\nTITLE: Disabling SSL Redirect for NGINX Ingress in AKS\nDESCRIPTION: This YAML configuration demonstrates how to disable SSL redirect for NGINX Ingress in AKS using the 'nginx.ingress.kubernetes.io/ssl-redirect' annotation. This is useful when TLS is enabled but you want to disable automatic redirection to HTTPS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: aks-helloworld\n  namespace: hello-web-app-routing\n  annotations:\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\nspec:\n  ingressClassName: <IngressClassName>\n  rules:\n  - host: <Hostname>\n    http:\n      paths:\n      - backend:\n          service:\n            name: aks-helloworld\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n```\n\n----------------------------------------\n\nTITLE: Registering AzureMonitorMetricsControlPlanePreview Feature Flag\nDESCRIPTION: Commands to register and verify the AzureMonitorMetricsControlPlanePreview feature flag, which enables control plane metrics functionality in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"AzureMonitorMetricsControlPlanePreview\"\n```\n\n----------------------------------------\n\nTITLE: Labeling Namespace for Sidecar Injection in Azure CLI\nDESCRIPTION: Labels the default namespace for Istio sidecar injection using the specified revision.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-telemetry.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl label ns default istio.io/rev=asm-1-22\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure using Azure Developer CLI\nDESCRIPTION: This command initiates the authentication process with Azure using the azd auth login command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_13\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd auth login\n```\n\n----------------------------------------\n\nTITLE: Disabling AKS Deployment Safeguards\nDESCRIPTION: Command to disable deployment safeguards on an AKS cluster by setting the safeguards level to Off.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deployment-safeguards.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group myResourceGroup --safeguards-level Off\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Azure Resources\nDESCRIPTION: Azure CLI command to delete the resource group and all associated resources created for the application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/devops-pipeline.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name myapp-rg\n```\n\n----------------------------------------\n\nTITLE: Listing Node Information\nDESCRIPTION: Commands to list internal IP addresses of Windows Server nodes in the cluster\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_10\n\nLANGUAGE: console\nCODE:\n```\nkubectl get nodes -o wide\n```\n\n----------------------------------------\n\nTITLE: Enabling KMS with Private Key Vault in AKS\nDESCRIPTION: Command to enable KMS on an AKS cluster using a private key vault configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_28\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group MyResourceGroup  --enable-azure-keyvault-kms --azure-keyvault-kms-key-id $NewKEY_ID --azure-keyvault-kms-key-vault-network-access \"Private\" --azure-keyvault-kms-key-vault-resource-id $KEYVAULT_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Service Description Output\nDESCRIPTION: This output shows the details of a Kubernetes service resource named 'azure-load-balancer'. It includes information about the service type, IP addresses, ports, and events. The output indicates an error where the specified static IP address was not found.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/static-ip.md#2025-04-21_snippet_7\n\nLANGUAGE: output\nCODE:\n```\nName:                     azure-load-balancer\nNamespace:                default\nLabels:                   <none>\nAnnotations:              <none>\nSelector:                 app=azure-load-balancer\nType:                     LoadBalancer\nIP:                       10.0.18.125\nIP:                       40.121.183.52\nPort:                     <unset>  80/TCP\nTargetPort:               80/TCP\nNodePort:                 <unset>  32582/TCP\nEndpoints:                <none>\nSession Affinity:         None\nExternal Traffic Policy:  Cluster\nEvents:\n  Type     Reason                      Age               From                Message\n  ----     ------                      ----              ----                -------\n  Normal   CreatingLoadBalancer        7s (x2 over 22s)  service-controller  Creating load balancer\n  Warning  CreatingLoadBalancerFailed  6s (x2 over 12s)  service-controller  Error creating load balancer (will retry): Failed to create load balancer for service default/azure-load-balancer: user supplied IP Address 40.121.183.52 was not found\n```\n\n----------------------------------------\n\nTITLE: Checking wasmCloud Application Status\nDESCRIPTION: Verifies the status of the deployed wasmCloud application using the wash CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nwash app status hello-world\n```\n\n----------------------------------------\n\nTITLE: Installing aks-preview Azure CLI Extension\nDESCRIPTION: Commands to add and update the aks-preview extension for Azure CLI, which is required for using WASI node pools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-wasi-node-pools.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Example Output of AKS Operation Progress\nDESCRIPTION: This snippet shows an example of the JSON output returned when querying the progress of an AKS operation. It includes details such as the operation ID, percentage complete, start time, and status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-abort-operations.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"id\": \"/subscriptions/<subscription-id>/resourcegroups/myResourceGroup/providers/Microsoft.ContainerService/managedClusters/contoso/operations/<operation-id>\",\n  \"name\": \"<operation-id>\",\n  \"percentComplete\": 10,\n  \"startTime\": \"2024-04-08T18:21:31Z\",\n  \"status\": \"InProgress\"\n```\n\n----------------------------------------\n\nTITLE: Defining a Virtual Network with Bicep\nDESCRIPTION: This Bicep template defines a virtual network for the AKS cluster. It includes parameters for network name, address prefix, and subnet configurations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_6\n\nLANGUAGE: bicep\nCODE:\n```\nparam vnetName string = 'aksAutomaticVnet'\nparam addressPrefix string = '172.19.0.0/16'\nparam apiServerSubnetPrefix string = '172.19.0.0/28'\nparam clusterSubnetPrefix string = '172.19.1.0/24'\n\nresource vnet 'Microsoft.Network/virtualNetworks@2021-02-01' = {\n  name: vnetName\n  location: resourceGroup().location\n  properties: {\n    addressSpace: {\n      addressPrefixes: [\n        addressPrefix\n      ]\n    }\n    subnets: [\n      {\n        name: 'apiServerSubnet'\n        properties: {\n          addressPrefix: apiServerSubnetPrefix\n        }\n      }\n      {\n        name: 'clusterSubnet'\n        properties: {\n          addressPrefix: clusterSubnetPrefix\n        }\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Cilium Agent Shell\nDESCRIPTION: Opens an interactive shell in the Cilium agent pod to monitor and debug network traffic filtering. This allows observation of dropped packets in real-time.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it -n kube-system cilium-s4x24 -- sh\n```\n\n----------------------------------------\n\nTITLE: Resource Cleanup Commands\nDESCRIPTION: Azure CLI commands to clean up Istio service mesh and associated resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-secure-gateway.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\naz aks mesh disable --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}\naz group delete --name ${RESOURCE_GROUP} --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Listing Auto-Upgrade Profiles for a Fleet using Azure CLI\nDESCRIPTION: This command lists all auto-upgrade profiles for a specified Fleet using the az fleet autoupgradeprofile list command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-automation.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet autoupgradeprofile list \\\n  --resource-group $GROUP \\\n  --fleet-name $FLEET\n```\n\n----------------------------------------\n\nTITLE: Deleting Kubernetes Extension Instance in Azure AKS\nDESCRIPTION: Azure CLI command to delete a Kubernetes extension instance from an AKS cluster. The command requires the extension name, cluster name, resource group, and cluster type parameters. Note that while the Azure resource is deleted immediately, the associated Helm release deletion depends on cluster network connectivity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-extensions-az-cli.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension delete --name azureml --cluster-name <clusterName> --resource-group <resourceGroupName> --cluster-type managedClusters\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription for Extension Installation\nDESCRIPTION: Sets the active Azure subscription to ensure the extension is installed in the correct subscription.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription <YOUR-AZURE-SUBSCRIPTION-ID>\n```\n\n----------------------------------------\n\nTITLE: Registering DisableSSHPreview Feature Flag\nDESCRIPTION: Register and enable the DisableSSHPreview feature flag in your Azure subscription using Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"DisableSSHPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"DisableSSHPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Installing Telepresence Traffic Manager\nDESCRIPTION: Command to install the Telepresence traffic manager in the Kubernetes cluster using Helm.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-telepresence-aks.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntelepresence helm install\n```\n\n----------------------------------------\n\nTITLE: IAM Policy for Amazon SQS Access in AWS\nDESCRIPTION: JSON policy document that grants full access to Amazon Simple Queue Service (SQS) resources in AWS. This policy would be attached to an IAM role used by the application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"sqs:*\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Examining OSM Validating Webhook Configuration\nDESCRIPTION: Commands to check the OSM Validating Webhook configuration and its service details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get ValidatingWebhookConfiguration --selector app=osm-controller\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get ValidatingWebhookConfiguration aks-osm-validator-mesh-osm -o json | jq '.webhooks[0].clientConfig.service'\n```\n\n----------------------------------------\n\nTITLE: Networking Configuration Comparison Table in Markdown\nDESCRIPTION: Markdown table comparing networking features between AKS Automatic and AKS Standard clusters, including virtual network configurations, ingress/egress options, and service mesh capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/intro-aks-automatic.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Option                    | AKS Automatic   \t| AKS Standard  \t|\n|---\t                    |---\t            |---\t            |\n| Virtual network\t        | **Default:** Managed Virtual Network using Azure CNI Overlay powered by Cilium <br/> **Optional:** Custom virtual network options | **Default:** Managed Virtual Network with kubenet <br/> **Optional:** Various CNI options |\n| Ingress\t        | **Pre-configured:** Managed NGINX <br/> **Optional:** Azure Service Mesh, custom options | **Optional:** Managed NGINX, Azure Service Mesh, custom options |\n| Egress\t        | **Pre-configured:** AKS managed NAT gateway <br/> **Optional:** Load Balancer, NAT gateway, UDR | **Default:** Azure Load Balancer <br/> **Optional:** NAT gateway options, UDR |\n| Service mesh\t        | **Optional:** Azure Service Mesh (Istio) or custom | **Optional:** Azure Service Mesh (Istio) or custom |\n```\n\n----------------------------------------\n\nTITLE: Enable Private Cluster Mode with API Server VNet Integration\nDESCRIPTION: Command to enable private cluster mode on an existing AKS cluster with API Server VNet Integration. This operation modifies public DNS entries while maintaining the API server hostname.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-vnet-integration.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name <cluster-name> \\\n--resource-group <resource-group> \\\n--enable-private-cluster\n```\n\n----------------------------------------\n\nTITLE: Setting the default ACR instance for Azure CLI\nDESCRIPTION: Command to configure the default ACR instance for your Azure CLI session, simplifying subsequent commands by not requiring the registry name to be specified.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/artifact-streaming.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz configure --defaults acr=\"mystreamingtest\"\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Service with Static IP and DNS Label\nDESCRIPTION: YAML configuration for a Kubernetes service using a static IP address and DNS label in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/static-ip.md#2025-04-21_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-resource-group: <node resource group name>\n    service.beta.kubernetes.io/azure-pip-name: myAKSPublicIP\n    service.beta.kubernetes.io/azure-dns-label-name: <unique-service-label>\n  name: azure-load-balancer\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n  selector:\n    app: azure-load-balancer\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure OpenAI Service Configuration\nDESCRIPTION: YAML manifest for deploying an AI service using Azure OpenAI configuration. Includes deployment and service specifications with environment variables for Azure OpenAI integration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-quickstart.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ai-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: ai-service\n  template:\n    metadata:\n      labels:\n        app: ai-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: ai-service\n        image: ghcr.io/azure-samples/aks-store-demo/ai-service:latest\n        ports:\n        - containerPort: 5001\n        env:\n        - name: USE_AZURE_OPENAI \n          value: \"True\"\n        - name: AZURE_OPENAI_DEPLOYMENT_NAME \n          value: \"\"\n        - name: AZURE_OPENAI_ENDPOINT \n          value: \"\"\n        - name: OPENAI_API_KEY \n          value: \"\"\n        resources:\n          requests:\n            cpu: 20m\n            memory: 50Mi\n          limits:\n            cpu: 50m\n            memory: 128Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: ai-service\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n    port: 5001\n    targetPort: 5001\n  selector:\n    app: ai-service\n```\n\n----------------------------------------\n\nTITLE: Running Python Producer App\nDESCRIPTION: Command to run the Python producer application that generates simulated load by sending messages to the queue.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\npython3 ./app/keda/aqs-producer.py\n```\n\n----------------------------------------\n\nTITLE: Registering NodeAutoProvisioningPreview Feature\nDESCRIPTION: Azure CLI commands to register and verify the NodeAutoProvisioningPreview feature flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"NodeAutoProvisioningPreview\"\naz feature show --namespace \"Microsoft.ContainerService\" --name \"NodeAutoProvisioningPreview\"\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for AKS Cluster\nDESCRIPTION: Command to create a new resource group for hosting the AKS cluster if needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-customer-managed-keys.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location myAzureRegionName\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Node Pool with Deallocate Scale-down Mode\nDESCRIPTION: This command adds a new node pool to an AKS cluster with 20 nodes, setting the scale-down mode to deallocate. It specifies managed OS disks and sets the maximum number of pods per node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-down-mode.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --node-count 20 --scale-down-mode Deallocate --node-osdisk-type Managed --max-pods 10 --name nodepool2 --cluster-name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Re-enabling SSH on an Existing AKS Cluster using Azure CLI\nDESCRIPTION: This command re-enables SSH access on all node pools in an existing AKS cluster. After execution, a message indicates that the changes will take effect only after all nodes are reimaged.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myManagedCluster --ssh-access localuser\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS resource group to clean up resources\nDESCRIPTION: Removes the entire resource group containing the AKS cluster and all related resources to avoid unnecessary Azure charges. This command runs asynchronously without waiting for completion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\naz group delete --name <resource-group> --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Importing Certificate into Azure Key Vault\nDESCRIPTION: Imports the SSL certificate into Azure Key Vault using az keyvault certificate import command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault certificate import --vault-name <KeyVaultName> --name <KeyVaultCertificateName> --file aks-ingress-tls.pfx [--password <certificate password if specified>]\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure SQL Database in Serverless Compute Tier\nDESCRIPTION: This command creates a new Azure SQL Database using the Azure CLI. It configures the database with the AdventureWorksLT sample, using the GeneralPurpose edition with Serverless compute model on the Gen5 family with 2 capacity units.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/jakartaee/create-azure-sql-database-passwordless.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz sql db create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --server $AZURESQL_SERVER_NAME \\\n    --name $DATABASE_NAME \\\n    --sample-name AdventureWorksLT \\\n    --edition GeneralPurpose \\\n    --compute-model Serverless \\\n    --family Gen5 \\\n    --capacity 2\n```\n\n----------------------------------------\n\nTITLE: Placement Disruption Budget Configuration\nDESCRIPTION: YAML configuration for setting up a ClusterResourcePlacementDisruptionBudget to protect against voluntary disruptions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-eviction-disruption.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1beta1\nkind: ClusterResourcePlacementDisruptionBudget\nmetadata:\n  name: crp-app-sample\nspec:\n  minAvailable: 1\n```\n\n----------------------------------------\n\nTITLE: Deleting Dapr Placement Server StatefulSet\nDESCRIPTION: Command to delete the Dapr placement server StatefulSet, which is required before updating HA mode or placement service settings due to Kubernetes limitations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-migration.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl delete statefulset.apps/dapr-placement-server -n dapr-system\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster Resource Group\nDESCRIPTION: Creates a resource group in East US region for the AKS cluster deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location EastUS\n```\n\n----------------------------------------\n\nTITLE: Listing OSM Mesh Information\nDESCRIPTION: Command to display OSM mesh configuration and SMI specification versions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nosm mesh list\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with User-Assigned Identity\nDESCRIPTION: This Azure CLI command creates a new AKS cluster and assigns the newly created user-assigned identity to it. It specifies the resource group, cluster name, location, VM size, node count, and generates SSH keys.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group $RG_NAME \\\n    --name $CLUSTER_NAME \\\n    --location $LOCATION \\\n    --node-vm-size $VM_SKU --node-count $NODE_COUNT \\\n    --assign-identity $IDENTITY_ID \\\n    --generate-ssh-keys \n```\n\n----------------------------------------\n\nTITLE: Disabling HTTP application routing add-on using Azure CLI\nDESCRIPTION: This Azure CLI command disables the old HTTP application routing add-on for an AKS cluster. It requires specifying the resource group name and cluster name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-migration.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz aks disable-addons --resource-group <ResourceGroupName> --name <ClusterName> --addons http_application_routing\n```\n\n----------------------------------------\n\nTITLE: OSM MeshConfig YAML Configuration Example\nDESCRIPTION: Example YAML output of the OSM MeshConfig resource showing various configuration settings including certificate validity, feature flags, observability settings, sidecar configuration, and traffic policy settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-bicep.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.openservicemesh.io/v1alpha1\nkind: MeshConfig\nmetadata:\n  creationTimestamp: \"0000-00-00A00:00:00A\"\n  generation: 1\n  name: osm-mesh-config\n  namespace: kube-system\n  resourceVersion: \"2494\"\n  uid: 6c4d67f3-c241-4aeb-bf4f-b029b08faa31\nspec:\n  certificate:\n    serviceCertValidityDuration: 24h\n  featureFlags:\n    enableEgressPolicy: true\n    enableMulticlusterMode: false\n    enableWASMStats: true\n  observability:\n    enableDebugServer: true\n    osmLogLevel: info\n    tracing:\n      address: jaeger.osm-system.svc.cluster.local\n      enable: false\n      endpoint: /api/v2/spans\n      port: 9411\n  sidecar:\n    configResyncInterval: 0s\n    enablePrivilegedInitContainer: false\n    envoyImage: mcr.microsoft.com/oss/envoyproxy/envoy:v1.18.3\n    initContainerImage: mcr.microsoft.com/oss/openservicemesh/init:v0.9.1\n    logLevel: error\n    maxDataPlaneConnections: 0\n    resources: {}\n  traffic:\n    enableEgress: true\n    enablePermissiveTrafficPolicyMode: true\n    inboundExternalAuthorization:\n      enable: false\n      failureModeAllow: false\n      statPrefix: inboundExtAuthz\n      timeout: 1s\n    useHTTPSIngress: false\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Rotation Interval for Secrets\nDESCRIPTION: Specifies a custom rotation interval for secrets in an AKS cluster using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz aks addon update --resource-group myResourceGroup --name myAKSCluster2 --addon azure-keyvault-secrets-provider --enable-secret-rotation --rotation-poll-interval 5m\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Cluster Credentials\nDESCRIPTION: Retrieve the AKS cluster credentials using the az aks get-credentials command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: Creating SSH Key Pair in Azure CLI\nDESCRIPTION: Commands to create an SSH key pair using Azure CLI's az sshkey create command or the ssh-keygen command. This step is necessary for AKS cluster deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Create an SSH key pair using Azure CLI\naz sshkey create --name \"mySSHKey\" --resource-group \"myResourceGroup\"\n\n# or\n\n# Create an SSH key pair using ssh-keygen\nssh-keygen -t rsa -b 4096\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in Bash\nDESCRIPTION: Sets environment variables for resource group, container registry, and ingress TLS configuration in Bash shell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport RESOURCE_GROUP_NAME=<your-resource-group-name>\nexport REGISTRY_NAME=<your-registry-nam-of-container-registry>\nexport LOGIN_SERVER=<your-login-server-of-container-registry>\nexport INGRESS_TLS_SECRET=<your-ingress-tls-secret-name>\n```\n\n----------------------------------------\n\nTITLE: Checking Pods in the Restricted Namespace\nDESCRIPTION: Verifies that no pods are running in the restricted namespace since they were blocked by the Pod Security Admission policy for not meeting the 'restricted' security standards.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-psa.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get pods --namespace test-restricted\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault for GMSA Credentials\nDESCRIPTION: Creates a new Azure Key Vault to store GMSA domain user credentials securely.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault create --resource-group myResourceGroup --name myGMSAVault\n```\n\n----------------------------------------\n\nTITLE: Creating Test Namespace and Service Account\nDESCRIPTION: Commands to create a test namespace and service account for policy testing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nkubectl create namespace psp-aks\nkubectl create serviceaccount --namespace psp-aks nonadmin-user\n```\n\n----------------------------------------\n\nTITLE: Verifying Node Pool Versions and Power State\nDESCRIPTION: Checks if all node pools are running Kubernetes version 1.29 or newer and are in the running power state, which is required for native sidecar mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --resource-group $RESOURCE_GROUP --name $CLUSTER -o json | jq \".agentPoolProfiles[] | { currentOrchestratorVersion, powerState}\"\n```\n\n----------------------------------------\n\nTITLE: Getting Ray Head Service Name in Kubernetes\nDESCRIPTION: Command to retrieve the Ray head service name from the Kubernetes cluster and store it in a shell variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nrayclusterhead=$(kubectl get service -n $kuberay_namespace | grep 'rayjob-pytorch-mnist-raycluster' | grep 'ClusterIP' | awk '{print $1}')\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group\nDESCRIPTION: Creates an Azure resource group for the AKS cluster using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-flyte.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name $RESOURCE_GROUP --location $LOCATION\n```\n\n----------------------------------------\n\nTITLE: Azure Kubernetes Extension Resource Configuration\nDESCRIPTION: ARM template section defining the Kubernetes Configuration extension resource with properties including extension type, version settings, and configuration parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-application-az-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"type\": \"Microsoft.KubernetesConfiguration/extensions\",\n    \"apiVersion\": \"2022-11-01\",\n    \"name\": \"[parameters('extensionResourceName')]\",          \n    \"properties\": {\n        \"extensionType\": \"[variables('clusterExtensionTypeName')]\",\n        \"autoUpgradeMinorVersion\": true,\n        \"releaseTrain\": \"[variables('releaseTrain')]\",\n        \"configurationSettings\": {\n            \"title\": \"[parameters('app-title')]\",\n            \"value1\": \"[parameters('app-value1')]\",\n            \"value2\": \"[parameters('app-value2')]\"\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Internal NGINX Ingress Controller with Kubectl\nDESCRIPTION: Bash command to create internal NGINX ingress controller resources using kubectl apply with the configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f nginx-internal-controller.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying MongoDB Backup Status\nDESCRIPTION: Checks the status of the MongoDB backup to ensure it completed successfully. The command shows details including the backup type, storage location, and completion status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get psmdb-backup -n ${AKS_MONGODB_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Restarting and Verifying KAITO Deployment\nDESCRIPTION: Commands to restart the KAITO GPU provisioner deployment and verify that it's running correctly, which is the final step in enabling the AI toolchain operator.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl rollout restart deployment/kaito-gpu-provisioner -n kube-system\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get deployment -n kube-system | grep kaito\n```\n\n----------------------------------------\n\nTITLE: Copying WebLogic Application WAR File in Bash\nDESCRIPTION: These commands create a directory for the application and copy the WebLogic application WAR file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ${BASE_DIR}/mystaging/models/wlsdeploy/applications\ncp $BASE_DIR/weblogic-on-azure/javaee/weblogic-cafe/target/weblogic-cafe.war ${BASE_DIR}/mystaging/models/wlsdeploy/applications/weblogic-cafe.war\n```\n\n----------------------------------------\n\nTITLE: Generating Test Traffic for Istio Sample Application\nDESCRIPTION: This command sends HTTP requests to the Istio sample application's product page through the external gateway, allowing you to verify that metrics are being generated. It extracts just the page title from the response.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-metrics-managed-prometheus.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s \"http://${GATEWAY_URL_EXTERNAL}/productpage\" | grep -o \"<title>.*</title>\"\n```\n\n----------------------------------------\n\nTITLE: Checking Dapr Root Certificate Expiry with Dapr CLI\nDESCRIPTION: Command to check when the Dapr root certificate of your Kubernetes cluster expires using the Dapr CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndapr mtls expiry\n```\n\n----------------------------------------\n\nTITLE: Deleting Debug Pod\nDESCRIPTION: Command to clean up the debugging pod after finishing troubleshooting session.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod node-debugger-aks-nodepool1-37663765-vmss000000-bkmmx\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Event Subscription with Azure PowerShell\nDESCRIPTION: Verifies the subscription to AKS events using Azure PowerShell. It retrieves and displays the event subscriptions for the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-event-grid.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzEventGridSubscription -ResourceId $SOURCE_RESOURCE_ID | Select-Object -ExpandProperty PSEventSubscriptionsList\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding for Application Access\nDESCRIPTION: Sets up port forwarding to the wasmCloud host to enable local access to the deployed application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward port-forward deployment/wasmcloud-host 8080\n```\n\n----------------------------------------\n\nTITLE: Installing Spin Operator\nDESCRIPTION: Commands to deploy the Spin operator CRDs, RuntimeClass, and operator components using kubectl and Helm.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-spinkube.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/spinkube/spin-operator/releases/download/v0.2.0/spin-operator.crds.yaml\nkubectl apply -f https://github.com/spinkube/spin-operator/releases/download/v0.2.0/spin-operator.runtime-class.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm install spin-operator --version 0.2.0 \\\n  --namespace spin-operator --create-namespace \\\n  --wait oci://ghcr.io/spinkube/charts/spin-operator\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/spinkube/spin-operator/releases/download/v0.2.0/spin-operator.shim-executor.yaml\n```\n\n----------------------------------------\n\nTITLE: Monitoring Dropped Network Traffic\nDESCRIPTION: Runs the Cilium monitor command to observe packets dropped by network policies. This helps verify that FQDN filtering is working correctly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncilium monitor -t drop\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Login for Normal User\nDESCRIPTION: Command to log in to Azure portal as a normal user using username and domain credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz login --username n01@$DOMAIN --password ${PASSWORD}\n```\n\n----------------------------------------\n\nTITLE: Setting OSM Permissive Traffic Policy Mode to True\nDESCRIPTION: Command to enable permissive traffic policy mode in OSM using kubectl patch. This bypasses SMI traffic policy enforcement and allows automatic discovery and communication between services in the mesh.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-bicep.md#2025-04-21_snippet_5\n\nLANGUAGE: OSM Permissive Mode to True\nCODE:\n```\nkubectl patch meshconfig osm-mesh-config -n kube-system -p '{\"spec\":{\"traffic\":{\"enablePermissiveTrafficPolicyMode\":true}}}' --type=merge\n```\n\n----------------------------------------\n\nTITLE: Setting the Redis host and port in component configuration\nDESCRIPTION: YAML configuration showing how to set the Redis host and port in the Dapr component configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- name: redisHost\n  value: <your-cache-name>.redis.cache.windows.net:6380\n```\n\n----------------------------------------\n\nTITLE: Output from Creating Static IP NGINX Ingress Controller\nDESCRIPTION: Example output showing successful creation of the NGINX ingress controller resource with static IP.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_15\n\nLANGUAGE: output\nCODE:\n```\nnginxingresscontroller.approuting.kubernetes.azure.com/nginx-static created\n```\n\n----------------------------------------\n\nTITLE: Checking VMSS Agent Node Certificate Expiration Date in AKS\nDESCRIPTION: This Azure CLI command checks the expiration date of the virtual machine scale set agent node certificate using az vmss run-command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/certificate-rotation.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz vmss run-command invoke --resource-group \"MC_rg_myAKSCluster_region\" --name \"vmss-name\" --command-id RunShellScript --instance-id 1 --scripts \"openssl x509 -in  /var/lib/kubelet/pki/kubelet-client-current.pem -noout -enddate\" --query \"value[0].message\"\n```\n\n----------------------------------------\n\nTITLE: Finding Existing Authorized IP Ranges (Azure PowerShell)\nDESCRIPTION: This snippet demonstrates how to find existing authorized IP ranges for an AKS cluster using the Get-AzAksCluster cmdlet and selecting the ApiServerAccessProfile property.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_10\n\nLANGUAGE: azurepowershell\nCODE:\n```\nGet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster | Select-Object -ExpandProperty ApiServerAccessProfile\n```\n\n----------------------------------------\n\nTITLE: Creating a Valkey Test Client Pod with CSI Secret Store in Kubernetes\nDESCRIPTION: This snippet demonstrates how to create a Valkey client Pod using kubectl apply. The Pod uses a Locust load testing client and mounts a Valkey password from the Secret Store CSI driver to connect to the Valkey cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-valkey-cluster.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\n---\nkind: Pod\napiVersion: v1\nmetadata:\n  name: valkey-client\n  namespace: valkey\nspec:\n    affinity:\n      nodeAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          nodeSelectorTerms:\n          - matchExpressions:\n            - key: agentpool\n              operator: In\n              values:\n              - nodepool1\n    containers:\n    - name: valkey-client\n      image: ${MY_ACR_REGISTRY}.azurecr.io/valkey-client\n      command: [\"locust\", \"--processes\", \"4\"]\n      volumeMounts:\n        - name: valkey-password\n          mountPath: \"/etc/valkey-password\"\n    volumes:\n    - name: valkey-password\n      csi:\n        driver: secrets-store.csi.k8s.io\n        readOnly: true\n        volumeAttributes:\n          secretProviderClass: \"valkey-password\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod to Run on vTPM-Enabled Nodes\nDESCRIPTION: Adds a node selector to a pod manifest that ensures the pod will only be scheduled on nodes with vTPM enabled, providing additional security guarantees.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-trusted-launch.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  nodeSelector:\n        kubernetes.azure.com/trusted-launch: true\n```\n\n----------------------------------------\n\nTITLE: Verifying Mounted Blob Storage in Bash\nDESCRIPTION: This Bash command creates an interactive shell session with the pod to verify that the Blob storage is correctly mounted.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it nginx-blob -- df -h\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Node Pool Status using Azure CLI\nDESCRIPTION: Use the az aks nodepool show command to verify the status of an AKS node pool. This command displays detailed information about the node pool, including its power state.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/start-stop-nodepools.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool show --resource-group myResourceGroup --cluster-name myAKSCluster --nodepool-name testnodepool\n```\n\n----------------------------------------\n\nTITLE: Verifying Feature Flag Registration Status in Azure CLI\nDESCRIPTION: Commands to verify the registration status of Image Integrity feature flags\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-integrity.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Verify the EnableImageIntegrityPreview feature flag registration status\naz feature show --namespace \"Microsoft.ContainerService\" --name \"EnableImageIntegrityPreview\"\n\n# Verify the AKS-AzurePolicyExternalData feature flag registration status\naz feature show --namespace \"Microsoft.ContainerService\" --name \"AKS-AzurePolicyExternalData\"\n```\n\n----------------------------------------\n\nTITLE: Adding AKS Node Pool with Custom Message of the Day\nDESCRIPTION: Add a new node pool to an existing AKS cluster with a custom Message of the Day for Linux nodes using the az aks nodepool add command with the --message-of-the-day parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --name mynodepool1 --cluster-name myAKSCluster --resource-group myResourceGroup --message-of-the-day ./newMOTD.txt\n```\n\n----------------------------------------\n\nTITLE: Updating Manual Scale Profile in AKS Node Pool using Azure CLI\nDESCRIPTION: This command updates an existing manual scale profile in the 'myvmpool' node pool. It changes the node count to 5 and updates the VM SKU from Standard_D4s_v3 to Standard_D8s_v3.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-machines-node-pools.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool manual-scale update \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name myvmpool \\\n    --current-vm-sizes \"Standard_D4s_v3\" \\\n    --vm-sizes \"Standard_D8s_v3\" \\\n    --node-count 5\n```\n\n----------------------------------------\n\nTITLE: Retrieving Public IP Information for AKS Cluster\nDESCRIPTION: This Azure CLI command retrieves the ID of a specific public IP address. It's used to get the necessary information for updating an AKS cluster with custom outbound public IPs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz network public-ip show --resource-group myResourceGroup --name myPublicIP --query id -o tsv\n```\n\n----------------------------------------\n\nTITLE: Deploying User Assigned Managed Identity Bicep Template with Azure CLI\nDESCRIPTION: This Azure CLI command deploys the Bicep template for creating the user assigned managed identity. It specifies the resource group and the Bicep file to use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group <resource-group> --template-file uami.bicep\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Types in Kubernetes YAML\nDESCRIPTION: When defining a Kubernetes Service in AKS, you can specify one of four service types: ClusterIP (default) for internal cluster access, NodePort for direct node access, LoadBalancer for external load balancing, or ExternalName for DNS mapping.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-network-services.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntype: ClusterIP  # Default internal service\ntype: NodePort    # Exposes node port directly\ntype: LoadBalancer # Creates Azure load balancer\ntype: ExternalName # Creates DNS entry\n```\n\n----------------------------------------\n\nTITLE: Member Cluster Properties YAML Configuration\nDESCRIPTION: Example YAML configuration showing member cluster properties including labels, resource usage, and costs\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/intelligent-resource-placement.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: cluster.kubernetes-fleet.io/v1\nkind: MemberCluster\nmetadata:\n  annotations:\n    ...\n  labels:\n    fleet.azure.com/location: eastus2\n    fleet.azure.com/resource-group: resource-group\n    fleet.azure.com/subscription-id: 8xxxxxxx-dxxx-4xxx-bxxx-xxxxxxxxxxx8\n  name: cluster01\n  resourceVersion: \"123456\"\n  uid: 7xxxxxxx-5xxx-4xxx-bxxx-xxxxxxxxxxx4\nspec:\n  ...\nstatus:\n  ...\n  properties:\n    kubernetes-fleet.io/node-count:\n      observationTime: \"2024-09-19T01:33:54Z\"\n      value: \"2\"\n    kubernetes.azure.com/per-cpu-core-cost:\n      observationTime: \"2024-09-19T01:33:54Z\"\n      value: \"0.073\"\n    kubernetes.azure.com/per-gb-memory-cost:\n      observationTime: \"2024-09-19T01:33:54Z\"\n      value: \"0.022\"\n  resourceUsage:\n    allocatable:\n      cpu: 3800m\n      memory: 10320392Ki\n    available:\n      cpu: 2740m\n      memory: 8821256Ki\n    capacity:\n      cpu: \"4\"\n      memory: 14195208Ki\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Azure Airflow Deployment\nDESCRIPTION: Sets environment variables used throughout the deployment process including resource names, locations, and identifiers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nrandom=$(echo $RANDOM | tr '[0-9]' '[a-z]')\nexport MY_LOCATION=canadacentral\nexport MY_RESOURCE_GROUP_NAME=apache-airflow-rg\nexport MY_IDENTITY_NAME=airflow-identity-123\nexport MY_ACR_REGISTRY=mydnsrandomname$(echo $random)\nexport MY_KEYVAULT_NAME=airflow-vault-$(echo $random)-kv\nexport MY_CLUSTER_NAME=apache-airflow-aks\nexport SERVICE_ACCOUNT_NAME=airflow\nexport SERVICE_ACCOUNT_NAMESPACE=airflow\nexport AKS_AIRFLOW_NAMESPACE=airflow\nexport AKS_AIRFLOW_CLUSTER_NAME=cluster-aks-airflow\nexport AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_NAME=airflowsasa$(echo $random)\nexport AKS_AIRFLOW_LOGS_STORAGE_CONTAINER_NAME=airflow-logs\nexport AKS_AIRFLOW_LOGS_STORAGE_SECRET_NAME=storage-account-credentials\n```\n\n----------------------------------------\n\nTITLE: Upgrading Specific Node Pool Images in AKS\nDESCRIPTION: Update the OS image of a specific node pool without performing a full Kubernetes cluster upgrade.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-image-upgrade.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool upgrade \\\n    --resource-group <resource-group> \\\n    --cluster-name <cluster-name> \\\n    --name <node-pool-name> \\\n    --node-image-only\n```\n\n----------------------------------------\n\nTITLE: Deleting Primary MongoDB Pod in AKS\nDESCRIPTION: Command to delete the primary MongoDB pod in the AKS cluster to simulate a failure. Requires replacing the pod name with the actual primary member name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod cluster-aks-mongodb-rs0-1 -n $AKS_MONGODB_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current IP Address (Bash)\nDESCRIPTION: This snippet shows how to retrieve the current IP address using the dig command in a Bash environment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nCURRENT_IP=$(dig +short \"myip.opendns.com\" \"@resolver1.opendns.com\")\n```\n\n----------------------------------------\n\nTITLE: Restarting Workloads to Apply Native Sidecar Mode\nDESCRIPTION: Performs a rolling restart of all deployments in namespaces with Istio injection enabled to allow istiod to inject native sidecars into the workloads.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nfor ns in $(kubectl get ns -l istio.io/rev -o=jsonpath='{.items[0].metadata.name}'); do\n  kubectl rollout restart deployments -n $ns\ndone\n```\n\n----------------------------------------\n\nTITLE: Disabling Secret Rotation in AKS Cluster\nDESCRIPTION: Disables the secrets provider add-on and re-enables it without secret rotation using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-configuration-options.md#2025-04-21_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\naz aks addon disable --resource-group myResourceGroup --name myAKSCluster2 --addon azure-keyvault-secrets-provider\n\naz aks addon enable --resource-group myResourceGroup --name myAKSCluster2 --addon azure-keyvault-secrets-provider\n```\n\n----------------------------------------\n\nTITLE: Creating Public IP Prefix\nDESCRIPTION: Creates a public IP prefix for use with AKS nodes\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz network public-ip prefix create --length 28 --location <region> --name <publicIPPrefixName> --resource-group <resourceGroup>\n```\n\n----------------------------------------\n\nTITLE: Generating Authentication Credentials for OpenFaaS\nDESCRIPTION: Commands to generate a random password, create a Kubernetes secret for basic authentication on the OpenFaaS Gateway, and retrieve the generated password.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# generate a random password\nPASSWORD=$(head -c 12 /dev/urandom | shasum| cut -d' ' -f1)\n\nkubectl -n openfaas create secret generic basic-auth \\\n--from-literal=basic-auth-user=admin \\\n--from-literal=basic-auth-password=\"$PASSWORD\"\n```\n\n----------------------------------------\n\nTITLE: Running Liberty Application Locally in PowerShell\nDESCRIPTION: PowerShell commands to start and test the Liberty application locally using Maven plugin with Azure SQL Database connection string configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_16\n\nLANGUAGE: powershell\nCODE:\n```\ncd $env:BASE_DIR\\java-app\n\n# The value of environment variable AZURE_SQL_CONNECTIONSTRING is read by configuration variable `azure.sql.connectionstring` in server.xml\n$Env:AZURE_SQL_CONNECTIONSTRING = \"jdbc:sqlserver://$Env:SQL_SERVER_NAME.database.windows.net:1433;databaseName=$Env:DB_NAME;authentication=ActiveDirectoryDefault\"\nmvn liberty:run\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Manifest and Checking Deployment Status\nDESCRIPTION: Commands for deploying the application using kubectl and verifying the deployment status. Includes commands to check pod status and monitor the external IP assignment for the store-front service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-powershell.md#2025-04-21_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f aks-store-quickstart.yaml\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\nLANGUAGE: console\nCODE:\n```\nkubectl get service store-front --watch\n```\n\n----------------------------------------\n\nTITLE: Setting up Kubernetes Namespace for Ingress Resources\nDESCRIPTION: These bash commands create a namespace called 'ingress-basic' for organizing ingress-related resources in the Kubernetes cluster. The namespace is exported as an environment variable and then created using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport NAMESPACE=ingress-basic\n```\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl create namespace $NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Verifying custom CA certificates in AKS cluster using Azure CLI\nDESCRIPTION: Azure CLI command to check if custom CA certificates are installed in an AKS cluster by displaying the security profile.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-certificate-authority.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show -g <resource-group-name> -n <cluster-name> | grep securityProfile -A 4\n```\n\n----------------------------------------\n\nTITLE: Main AKS Cluster Configuration\nDESCRIPTION: Primary Terraform configuration that defines the AKS cluster resources including resource group, virtual network, and node pools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-terraform.md#2025-04-21_snippet_1\n\nLANGUAGE: Terraform\nCODE:\n```\n:::code language=\"Terraform\" source=\"~/terraform_samples/quickstart/101-aks-cluster-windows/main.tf\":::\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current AKS Cluster Version\nDESCRIPTION: This command uses the Azure CLI to show the current Kubernetes version of the AKS cluster. It queries the 'kubernetesVersion' field from the cluster information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-mongodb-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --query kubernetesVersion\n```\n\n----------------------------------------\n\nTITLE: Checking Certificate Expiration Date from Kubernetes Secret\nDESCRIPTION: Command to find the expiration date for the current Dapr certificate stored in the Kubernetes dapr-trust-bundle secret.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secret dapr-trust-bundle -n dapr-system -o jsonpath='{.data.issuer\\.crt}' | base64 -d | openssl x509 -noout -dates\n```\n\n----------------------------------------\n\nTITLE: Azure CLI - Getting ACR Login Server\nDESCRIPTION: Azure CLI command to retrieve the login server address for an Azure Container Registry instance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-application.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr list --resource-group myResourceGroup --query \"[].{acrLoginServer:loginServer}\" --output table\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for Azure Storage\nDESCRIPTION: Creates a Kubernetes secret containing Azure storage account credentials that will be used to access the file share.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic azure-secret --from-literal=azurestorageaccountname=myAKSStorageAccount --from-literal=azurestorageaccountkey=$STORAGE_KEY\n```\n\n----------------------------------------\n\nTITLE: Applying Pod Configuration and Verification Commands\nDESCRIPTION: Set of commands for deploying the IIS pod and verifying its status, including mounting verification through kubectl commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f iis-smb.yaml\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod iis-pod\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it iis-pod –- cmd.exe\n```\n\n----------------------------------------\n\nTITLE: Getting Storage Account Resource ID for RBAC Assignment\nDESCRIPTION: Retrieves the primary resource ID for the storage account to be used in the RBAC role assignment. This ID defines the scope for the subsequent role assignment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nexport STORAGE_ACCOUNT_PRIMARY_RESOURCE_ID=$(az storage account show \\\n    --name $PG_PRIMARY_STORAGE_ACCOUNT_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --query \"id\" \\\n    --output tsv)\n\necho $STORAGE_ACCOUNT_PRIMARY_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Starting an Update Run with Azure CLI\nDESCRIPTION: Azure CLI command to initiate a previously created update run in Azure Kubernetes Fleet Manager. This command starts the update process for the configured clusters and stages.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz fleet updaterun start \\\n --resource-group $GROUP \\\n --fleet-name $FLEET \\\n --name run-1\n```\n\n----------------------------------------\n\nTITLE: Applying Ingress Configuration\nDESCRIPTION: kubectl command to apply the Ingress configuration to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ingress.yaml -n hello-web-app-routing\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Node Resource Group Lockdown\nDESCRIPTION: Command to create a new AKS cluster with node resource group lockdown enabled in ReadOnly mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-resource-group-lockdown.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --name $CLUSTER_NAME \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --nrg-lockdown-restriction-level ReadOnly \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Nodes\nDESCRIPTION: Lists all nodes in the Kubernetes cluster to verify GPU node presence\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_12\n\nLANGUAGE: console\nCODE:\n```\nkubectl get nodes\n```\n\nLANGUAGE: console\nCODE:\n```\nNAME                   STATUS   ROLES   AGE   VERSION\naks-gpunp-28993262-0   Ready    agent   13m   v1.20.7\n```\n\n----------------------------------------\n\nTITLE: Adding and Searching Flyte Helm Repository\nDESCRIPTION: Adds the Flyte Helm repository and searches for available charts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-flyte.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add flyteorg https://flyteorg.github.io/flyte\nhelm search repo flyteorg\n```\n\n----------------------------------------\n\nTITLE: Checking AKS Control Plane Scaling Status\nDESCRIPTION: This command describes the configmap 'control-plane-scaling-status' in the kube-system namespace to confirm if the AKS control plane has been scaled up.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/best-practices-performance-scale-large.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe configmap control-plane-scaling-status -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Reverting UDP Buffer Size to Default in AKS\nDESCRIPTION: This JSON configuration sets the UDP buffer size back to the default value of 1 MB for AKS nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/troubleshoot-udp-packet-drops.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"sysctls\": {\n        \"netCoreRmemMax\": 1048576,\n        \"netCoreRmemDefault\": 1048576\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Available Dapr Versions for AKS Cluster\nDESCRIPTION: Retrieves a list of stable Dapr versions available for installation on an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension extension-types list-versions-by-cluster --resource-group <myResourceGroup> --cluster-name <myCluster> --cluster-type managedClusters --extension-type microsoft.dapr --release-train stable\n```\n\n----------------------------------------\n\nTITLE: Installing Latest kubectl Version - Azure CLI\nDESCRIPTION: Command to install or update kubectl to the latest version using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/supported-kubernetes-versions.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks install-cli\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes NFS Persistent Volume YAML\nDESCRIPTION: YAML manifest for creating a Kubernetes persistent volume that uses the HPC Cache as an NFS server. The volume connects to the round-robin DNS name and supports the ReadWriteMany access mode.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-nfs\nspec:\n  capacity:\n    storage: 10000Gi\n  accessModes:\n    - ReadWriteMany\n  mountOptions:\n    - vers=3\n  nfs:\n    server: server.myhpccache.local\n    path: /\n```\n\n----------------------------------------\n\nTITLE: Retrieving Subnet Information for AKS Cluster using Azure PowerShell\nDESCRIPTION: This snippet retrieves the subnet information used by the Windows Server node pool in an AKS cluster using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n$CLUSTER_RG = (Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster).nodeResourceGroup\n$VNET_NAME = (Get-AzVirtualNetwork -ResourceGroupName $CLUSTER_RG).Name\n$ADDRESS_PREFIX = (Get-AzVirtualNetwork -ResourceGroupName $CLUSTER_RG).AddressSpace | Select-Object -ExpandProperty AddressPrefixes\n$SUBNET_NAME = (Get-AzVirtualNetwork -ResourceGroupName $CLUSTER_RG).Subnets[0].Name\n$SUBNET_ADDRESS_PREFIX = (Get-AzVirtualNetwork -ResourceGroupName $CLUSTER_RG).Subnets[0] | Select-Object -ExpandProperty AddressPrefix\n```\n\n----------------------------------------\n\nTITLE: Example Output of kubectl Command with Microsoft Entra Authentication\nDESCRIPTION: Sample output showing the authentication process and successful pod listing after Microsoft Entra authentication. The user is prompted to visit a URL and enter a code to authenticate.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_15\n\nLANGUAGE: output\nCODE:\n```\nTo sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code BYMK7UXVD to authenticate.\n\nNAMESPACE     NAME                                    READY   STATUS    RESTARTS   AGE\nkube-system   coredns-754f947b4-2v75r                 1/1     Running   0          23h\nkube-system   coredns-754f947b4-tghwh                 1/1     Running   0          23h\nkube-system   coredns-autoscaler-6fcdb7d64-4wkvp      1/1     Running   0          23h\nkube-system   heapster-5fb7488d97-t5wzk               2/2     Running   0          23h\nkube-system   kube-proxy-2nd5m                        1/1     Running   0          23h\nkube-system   kube-svc-redirect-swp9r                 2/2     Running   0          23h\nkube-system   kubernetes-dashboard-847bb4ddc6-trt7m   1/1     Running   0          23h\nkube-system   metrics-server-7b97f9cd9-btxzz          1/1     Running   0          23h\nkube-system   tunnelfront-6ff887cffb-xkfmq            1/1     Running   0          23h\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Storage ExternalSecret Resource\nDESCRIPTION: Creates an ExternalSecret resource for Azure Blob Storage credentials by retrieving them from Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: ${AKS_AZURE_SECRETS_NAME}\n  namespace: ${AKS_MONGODB_NAMESPACE}\nspec:\n  refreshInterval: 1h\n  secretStoreRef:\n    kind: SecretStore\n    name: azure-store\n\n  target:\n    name: \"${AKS_AZURE_SECRETS_NAME}\"\n    creationPolicy: Owner\n\n  data:\n    - secretKey: AZURE_STORAGE_ACCOUNT_NAME\n      remoteRef:\n        key: AZURE-STORAGE-ACCOUNT-NAME\n    - secretKey: AZURE_STORAGE_ACCOUNT_KEY\n      remoteRef:\n        key: AZURE-STORAGE-ACCOUNT-KEY\nEOF\n```\n\n----------------------------------------\n\nTITLE: Storing Domain Credentials in Key Vault\nDESCRIPTION: Stores the domain user credentials as a secret in Azure Key Vault using the fully qualified domain name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault secret set --vault-name myGMSAVault --name \"GMSADomainUserCred\" --value \"$Domain\\\\$DomainUsername:$DomainUserPassword\"\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Cluster Bicep Template\nDESCRIPTION: Azure CLI command to deploy an AKS cluster using a Bicep template with custom network configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz deployment group create --resource-group <resource-group> --template-file aks.bicep \\\n--parameters apiServerSubnetId=<API server subnet resource id> \\\n--parameters clusterSubnetId=<cluster subnet resource id> \\\n--parameters uamiPrincipalId=<user assigned identity prinicipal id>\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Persistent Volume for SMB Protocol\nDESCRIPTION: Defines a YAML configuration for a Kubernetes persistent volume that connects to an Azure NetApp Files volume using the SMB protocol. Uses the CSI driver and references credentials stored in a Kubernetes secret.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: anf-pv-smb\nspec:\n  storageClassName: \"\"\n  capacity:\n    storage: 100Gi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain\n  mountOptions:\n    - dir_mode=0777\n    - file_mode=0777\n    - vers=3.0\n  csi:\n    driver: smb.csi.k8s.io\n    readOnly: false\n    volumeHandle: myvolname  # make sure it's a unique name in the cluster\n    volumeAttributes:\n      source: \\\\ANF-1be3.contoso.com\\myvolname\n    nodeStageSecretRef:\n      name: smbcreds\n      namespace: default\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Namespace for Dapr Extension using Bicep\nDESCRIPTION: Defines the custom namespace for Dapr extension installation using Bicep configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_12\n\nLANGUAGE: bicep\nCODE:\n```\nproperties: {\n  scope: {\n    cluster: {\n      releaseNamespace: 'dapr-custom'\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Cluster Connection\nDESCRIPTION: Command to verify connection to the AKS cluster by retrieving node information using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Mounting Volumes in Windows Containers using YAML\nDESCRIPTION: This YAML snippet demonstrates how to mount volumes in Windows containers by specifying the drive letter and path.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-storage.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n...      \n      volumeMounts:\n      - mountPath: \"d:\"\n        name: volume\n      - mountPath: \"c:\\k\"\n        name: k-dir\n...\n```\n\n----------------------------------------\n\nTITLE: Updating PV Reclaim Policy in Kubernetes\nDESCRIPTION: Command to patch a PersistentVolume's ReclaimPolicy from Delete to Retain\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch pv pvName -p '{\"spec\":{\"persistentVolumeReclaimPolicy\":\"Retain\"}}'\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resources After Use\nDESCRIPTION: Cleans up all resources by deleting the resource group that contains the AKS cluster and proximity placement group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/reduce-latency-ppg.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name myResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Groups for WebLogic Server Deployment\nDESCRIPTION: This Azure CLI command removes the resource groups containing the WebLogic Server deployment on AKS, including the container service, container registry, database, and all related resources. It uses the 'az group delete' command with the '--yes' and '--no-wait' flags for non-interactive deletion.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_31\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name <resource-group-name> --yes --no-wait\naz group delete --name <db-resource-group-name> --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for AKS Deployment\nDESCRIPTION: Defines environment variables with random hex values for resource naming to ensure uniqueness across Azure. Variables include resource group name, region, cluster name, and DNS label.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport RANDOM_ID=\"$(openssl rand -hex 3)\"\nexport MY_RESOURCE_GROUP_NAME=\"myAKSResourceGroup$RANDOM_ID\"\nexport REGION=\"westeurope\"\nexport MY_AKS_CLUSTER_NAME=\"myAKSCluster$RANDOM_ID\"\nexport MY_DNS_LABEL=\"mydnslabel$RANDOM_ID\"\n```\n\n----------------------------------------\n\nTITLE: Assigning ACR Pull Role\nDESCRIPTION: Assigns the AcrPull role to the kubelet identity, allowing the AKS cluster to pull images from the Azure Container Registry.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBELET_IDENTITY=$(az aks show --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --output tsv --query identityProfile.kubeletidentity.objectId)\naz role assignment create \\\n  --assignee ${KUBELET_IDENTITY} \\\n  --role \"AcrPull\" \\\n  --scope ${MY_ACR_REGISTRY_ID} \\\n  --output table\n```\n\n----------------------------------------\n\nTITLE: Creating ACR Cache Rule for MCR Images in Azure CLI\nDESCRIPTION: This snippet creates an ACR cache rule to allow caching of Microsoft Container Registry (MCR) images in the new ACR. The cache rule name and repository names must strictly align with the provided guidance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz acr cache create -n aks-managed-mcr -r ${REGISTRY_NAME} -g ${RESOURCE_GROUP} --source-repo \"mcr.microsoft.com/*\" --target-repo \"aks-managed-repository/*\"\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for AKS Deployment\nDESCRIPTION: Creates a new Azure resource group that will contain the AKS cluster and its networking components.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-powered-by-cilium.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create the resource group\naz group create --name <resourceGroupName> --location <location>\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterResourcePlacement Configuration\nDESCRIPTION: YAML configuration that defines a ClusterResourcePlacement object to deploy a namespace to all member clusters using PickAll placement policy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-resource-propagation.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: distribute-my-namespace\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      version: v1          \n      name: my-namespace\n  policy:\n    placementType: PickAll\n```\n\n----------------------------------------\n\nTITLE: Sample Output of Upgrade Events\nDESCRIPTION: Example output showing Kubernetes events during an AKS cluster upgrade, including node draining, deletion, reimaging, and successful upgrade completion messages.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_9\n\nLANGUAGE: output\nCODE:\n```\nLAST SEEN   TYPE      REASON    OBJECT                                   MESSAGE\n...\n5m          Normal    Drain     node/aks-nodepool1-96663640-vmss000000   Draining node: aks-nodepool1-96663640-vmss000000\n5m          Normal    Upgrade   node/aks-nodepool1-96663640-vmss000000   Deleting node aks-nodepool1-96663640-vmss000000 from API server\n4m          Normal    Upgrade   node/aks-nodepool1-96663640-vmss000000   Successfully reimaged node: aks-nodepool1-96663640-vmss000000\n4m          Normal    Upgrade   node/aks-nodepool1-96663640-vmss000000   Successfully upgraded node: aks-nodepool1-96663640-vmss000000\n4m          Normal    Drain     node/aks-nodepool1-96663640-vmss000000   Draining node: aks-nodepool1-96663640-vmss000000\n...\n```\n\n----------------------------------------\n\nTITLE: Creating a non-RBAC public key vault in Azure CLI\nDESCRIPTION: This command creates a new Azure Key Vault without using Azure role-based access control (RBAC).\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz keyvault create --name MyKeyVault --resource-group MyResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Applying MemberCluster Taint Configuration\nDESCRIPTION: Command to apply the MemberCluster taint configuration using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f member-cluster-taint.yml\n```\n\n----------------------------------------\n\nTITLE: Adding Blob Storage as an HPC Cache Target\nDESCRIPTION: Command to add the blob container as a storage target to the HPC Cache, specifying the virtual namespace path that will be used to access the stored data.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz hpc-cache blob-storage-target add \\\n  --resource-group $RESOURCE_GROUP \\\n  --cache-name MyHpcCache \\\n  --name MyStorageTarget \\\n  --storage-account $STORAGE_ACCOUNT_ID \\\n  --container-name $CONTAINER_NAME \\\n  --virtual-namespace-path \"/myfilepath\"\n```\n\n----------------------------------------\n\nTITLE: Listing Dapr Installation Details with Helm\nDESCRIPTION: Command to list details of your current Dapr installation using Helm to identify the release name and namespace needed for migration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-migration.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nhelm list -A\n```\n\n----------------------------------------\n\nTITLE: Disabling SSH for Existing AKS Node Pool\nDESCRIPTION: Disable SSH on an existing AKS node pool using the az aks nodepool update command, followed by reimaging the node pool to apply the changes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool update --cluster-name myManagedCluster --name mynodepool --resource-group myResourceGroup --ssh-access disabled\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool upgrade --cluster-name myManagedCluster --name mynodepool --resource-group myResourceGroup --node-image-only\n```\n\n----------------------------------------\n\nTITLE: Deploying Pod with Mounted Volume\nDESCRIPTION: Kubectl command to apply the pod configuration and mount the persistent volume.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f azure-disk-pod.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Database Connection Model with SQL Server Secret References\nDESCRIPTION: Bash commands to create a YAML model file for WebLogic database connections using secret placeholders for SQL Server credentials. The model configures a JDBC data source with the JNDI name jdbc/WebLogicCafeDB.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF >dbmodel.yaml\nresources:\n  JDBCSystemResource:\n    jdbc/WebLogicCafeDB:\n      Target: 'cluster-1'\n      JdbcResource:\n        JDBCDataSourceParams:\n          JNDIName: [\n            jdbc/WebLogicCafeDB\n          ]\n          GlobalTransactionsProtocol: None\n        JDBCDriverParams:\n          DriverName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n          URL: '@@SECRET:sqlserver-secret:url@@'\n          PasswordEncrypted: '@@SECRET:sqlserver-secret:password@@'\n          Properties:\n            user:\n              Value: '@@SECRET:sqlserver-secret:user@@'\n        JDBCConnectionPoolParams:\n          TestTableName: SQL SELECT 1\n          TestConnectionsOnReserve: true\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Application Namespace with kubectl\nDESCRIPTION: Creates a Kubernetes namespace named 'aks-store' for the example application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace aks-store\n```\n\n----------------------------------------\n\nTITLE: Pod Zone Distribution Configuration\nDESCRIPTION: YAML manifest demonstrating how to configure pod topology spread constraints to ensure even distribution across availability zones.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/aks-zone-resiliency.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: mypod\n  labels:\n    foo: bar\nspec:\n  topologySpreadConstraints:\n  - maxSkew: 1\n    topologyKey: \"topology.kubernetes.io/zone\"\n    whenUnsatisfiable: DoNotSchedule\n    labelSelector:\n      matchLabels:\n        foo: bar\n  containers:\n  - name: pause\n    image: registry.k8s.io/pause:3.1\n```\n\n----------------------------------------\n\nTITLE: Listing Nodes in Kubernetes Cluster\nDESCRIPTION: Command to list all nodes in a Kubernetes cluster to verify the GPU-enabled node is available and ready for scheduling workloads.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-cluster.md#2025-04-23_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Detailed YAML Output of ClusterStagedUpdateRun in AKS\nDESCRIPTION: This YAML output provides a detailed status of a ClusterStagedUpdateRun, including information about stages, clusters, and update progress.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1beta1\nkind: ClusterStagedUpdateRun\nmetadata:\n  ...\n  name: example-staged-update-run\n  ...\nspec:\n  placementName: crp-staged-update-sample\n  resourceSnapshotIndex: \"1\"\n  stagedRolloutStrategyName: example-staged-strategy\nstatus:\n  conditions:\n  - lastTransitionTime: ...\n    message: ClusterStagedUpdateRun initialized successfully\n    observedGeneration: 1\n    reason: UpdateRunInitializedSuccessfully\n    status: \"True\"           # the updateRun is initialized successfully\n    type: Initialized\n  - lastTransitionTime: ...\n    message: \"\"\n    observedGeneration: 1\n    reason: UpdateRunStarted\n    status: \"True\"\n    type: Progressing        # the updateRun is still running\n  deletionStageStatus:\n    clusters: []             # no clusters need to be cleaned up\n    stageName: kubernetes-fleet.io/deleteStage\n  policyObservedClusterCount: 3     # number of clusters to be updated\n  policySnapshotIndexUsed: \"0\"\n  stagedUpdateStrategySnapshot:     # snapshot of the strategy\n    stages:\n    - afterStageTasks:\n      - type: TimedWait\n        waitTime: 1h\n      labelSelector:\n        matchLabels:\n          environment: staging\n      name: staging\n      sortingLabelKey: name\n    - afterStageTasks:\n      - type: Approval\n      labelSelector:\n        matchLabels:\n          environment: canary\n      name: canary\n      sortingLabelKey: order\n  stagesStatus:                # detailed status for each stage\n  - afterStageTaskStatus:\n    - conditions:\n      - lastTransitionTime: ...\n        message: \"\"\n        observedGeneration: 1\n        reason: AfterStageTaskWaitTimeElapsed\n        status: \"True\"         # the wait after-stage task has completed\n        type: WaitTimeElapsed\n      type: TimedWait\n    clusters:\n    - clusterName: member-cluster-02    # stage staging contains member-cluster-02 cluster only\n      conditions:\n      - lastTransitionTime: ...\n        message: \"\"\n        observedGeneration: 1\n        reason: ClusterUpdatingStarted\n        status: \"True\"\n        type: Started\n      - lastTransitionTime: ...\n        message: \"\"\n        observedGeneration: 1\n        reason: ClusterUpdatingSucceeded\n        status: \"True\"                  # member-cluster-02 is updated successfully\n        type: Succeeded\n    conditions:\n    - lastTransitionTime: ...\n      message: \"\"\n      observedGeneration: 1\n      reason: StageUpdatingWaiting\n      status: \"False\"\n      type: Progressing\n    - lastTransitionTime: ...\n      message: \"\"\n      observedGeneration: 1\n      reason: StageUpdatingSucceeded\n      status: \"True\"                    # stage staging has completed successfully\n      type: Succeeded\n    endTime: ...\n    stageName: staging\n    startTime: ...\n  - afterStageTaskStatus:\n    - approvalRequestName: example-staged-update-run-canary # ClusterApprovalRequest name for this stage\n      type: Approval\n    clusters:\n    - clusterName: member-cluster-03         # according the labelSelector and sortingLabelKey, member-cluster-03 is selected first in this stage\n      conditions:\n      - lastTransitionTime: ...\n        message: \"\"\n        observedGeneration: 1\n        reason: ClusterUpdatingStarted\n        status: \"True\"\n        type: Started\n      - lastTransitionTime: ...\n        message: \"\"\n        observedGeneration: 1\n        reason: ClusterUpdatingSucceeded\n        status: \"True\"                      # member-cluster-03 update is completed\n        type: Succeeded\n    - clusterName: member-cluster-01        # member-cluster-01 is selected after member-cluster-03 because of order=2 label\n      conditions:\n      - lastTransitionTime: ...\n        message: \"\"\n        observedGeneration: 1\n        reason: ClusterUpdatingStarted\n        status: \"True\"                      # member-cluster-01 update has not finished yet\n        type: Started\n    conditions:\n    - lastTransitionTime: ...\n      message: \"\"\n      observedGeneration: 1\n      reason: StageUpdatingStarted\n      status: \"True\"                        # stage canary is still executing\n      type: Progressing\n    stageName: canary\n```\n\n----------------------------------------\n\nTITLE: Verifying Bookinfo Services Deployment\nDESCRIPTION: Command to verify that the Bookinfo sample application services were created successfully.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get services\n```\n\n----------------------------------------\n\nTITLE: Configuring kubectl Credentials\nDESCRIPTION: Commands to configure kubectl with credentials for connecting to an AKS cluster\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\nLANGUAGE: azurepowershell\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Disabling VPA on AKS Cluster\nDESCRIPTION: Command to disable the Vertical Pod Autoscaler feature on an existing AKS cluster using the --disable-vpa flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name <cluster-name> --resource-group <resource-group-name> --disable-vpa\n```\n\n----------------------------------------\n\nTITLE: ARM Template for AKS Node Autoprovisioning\nDESCRIPTION: ARM template JSON configuration for deploying an AKS cluster with node autoprovisioning enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"metadata\": {},\n  \"parameters\": {},\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.ContainerService/managedClusters\",\n      \"apiVersion\": \"2023-09-02-preview\",\n      \"sku\": {\n        \"name\": \"Base\",\n        \"tier\": \"Standard\"\n      },\n      \"name\": \"napcluster\",\n      \"location\": \"uksouth\",\n      \"identity\": {\n        \"type\": \"SystemAssigned\"\n      },\n      \"properties\": {\n        \"networkProfile\": {\n            \"networkPlugin\": \"azure\",\n            \"networkPluginMode\": \"overlay\",\n            \"networkPolicy\": \"cilium\",\n            \"networkDataplane\":\"cilium\",\n            \"loadBalancerSku\": \"Standard\"\n        },\n        \"dnsPrefix\": \"napcluster\",\n        \"agentPoolProfiles\": [\n          {\n            \"name\": \"agentpool\",\n            \"count\": 3,\n            \"vmSize\": \"standard_d2s_v3\",\n            \"osType\": \"Linux\",\n            \"mode\": \"System\"\n          }\n        ],\n        \"nodeProvisioningProfile\": {\n          \"mode\": \"Auto\"\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Disable Private Cluster Mode\nDESCRIPTION: Command to disable private cluster mode on an AKS cluster. This feature is in preview and modifies the cluster's network access settings while preserving the API server hostname.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-vnet-integration.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name <cluster-name> \\\n--resource-group <resource-group> \\\n--disable-private-cluster\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio VirtualService and DestinationRule\nDESCRIPTION: YAML configuration for Istio traffic management using VirtualService and DestinationRule resources to handle traffic routing and versioning.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: bookstore-virtualservice\n  namespace: bookstore\nspec:\n  hosts:\n  - bookstore\n  http:\n  - route:\n    - destination:\n        host: bookstore\n        subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: bookstore-destination\n  namespace: bookstore\nspec:\n  host: bookstore\n  subsets:\n  - name: v1\n    labels:\n      app: bookstore\n      version: v1\n  - name: v2\n    labels:\n      app: bookstore\n      version: v2\n```\n\n----------------------------------------\n\nTITLE: Exposing the Application and Dapr Sidecar\nDESCRIPTION: Commands to apply the service manifest and export the external IP addresses for both the application and the Dapr sidecar as environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nkubectl apply -f service.yaml\nexport APP_URL=$(kubectl get svc/workflows-sample -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\nexport DAPR_URL=$(kubectl get svc/workflows-sample-dapr -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n```\n\n----------------------------------------\n\nTITLE: Disabling ACNS on AKS Cluster\nDESCRIPTION: Disables all Advanced Container Networking Services features on an existing AKS cluster including both Observability and Security components.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/advanced-container-networking-services-overview.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group $RESOURCE_GROUP \\\n    --name $CLUSTER_NAME \\\n    --disable-acns\n```\n\n----------------------------------------\n\nTITLE: Sample Cluster Resource Placement Configuration\nDESCRIPTION: Example YAML configuration for setting up a basic cluster resource placement that selects a namespace and places it on clusters matching specific criteria.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-eviction-disruption.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-app-sample\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-namespace\n      version: v1\n  policy:\n    placementType: PickN\n    numberOfClusters: 2\n    affinity:\n      clusterAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  fleet.azure.com/location: westus\n```\n\n----------------------------------------\n\nTITLE: Showing Specific Auto-Upgrade Profile for a Fleet using Azure CLI\nDESCRIPTION: This command displays details of a specific auto-upgrade profile for a Fleet using the az fleet autoupgradeprofile list command with additional parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-automation.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet autoupgradeprofile list \\\n  --resource-group $GROUP \\\n  --fleet-name $FLEET \\\n  --name $AUTOUPGRADEPROFILE\n```\n\n----------------------------------------\n\nTITLE: Starting an Update Run in Azure Kubernetes Fleet Manager\nDESCRIPTION: Initiates the execution of a previously created update run for multiple clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet updaterun start \\\n --resource-group $GROUP \\\n --fleet-name $FLEET \\\n --name run-1\n```\n\n----------------------------------------\n\nTITLE: Getting Node Internal IPs\nDESCRIPTION: Custom query to retrieve node names and their internal IP addresses.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get no -o custom-columns=NAME:metadata.name,'INTERNAL_IP:status.addresses[?(@.type == \\\"InternalIP\\\")].address'\n```\n\n----------------------------------------\n\nTITLE: Upgrading AKS Control Plane - Azure CLI\nDESCRIPTION: Command to upgrade only the AKS control plane to version 1.30.0 using Azure CLI. Uses environment variables for resource group and cluster names.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-valkey-aks-nodepool.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz aks upgrade --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --control-plane-only --kubernetes-version 1.30.0\n```\n\n----------------------------------------\n\nTITLE: Storing Azure Managed Grafana and Azure Monitor Resource IDs in Variables\nDESCRIPTION: These commands retrieve the resource IDs for the Azure Managed Grafana instance and Azure Monitor resource, storing them in variables for later use in linking them to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\ngrafanaId=$(az grafana show \\\n                --name $GRAFANA_NAME \\\n                --resource-group $RESOURCE_GROUP \\\n                --query id \\\n                --output tsv)\nazuremonitorId=$(az resource show \\\n                    --resource-group $RESOURCE_GROUP \\\n                    --name $AZURE_MONITOR_NAME \\\n                    --resource-type \"Microsoft.Monitor/accounts\" \\\n                    --query id \\\n                    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Retrieving SSH Public Key in Azure CLI\nDESCRIPTION: Command to retrieve the public key from the SSH pair using Azure CLI. This public key is required for deploying the ARM template.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz sshkey show --name \"mySSHKey\" --resource-group \"myResourceGroup\" --query \"publicKey\"\n```\n\n----------------------------------------\n\nTITLE: Applying Pod YAML Manifest\nDESCRIPTION: This Azure CLI command applies the YAML manifest file to deploy the pod with the generic ephemeral volume on the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-azure-container-storage.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f acstor-pod.yaml\n```\n\n----------------------------------------\n\nTITLE: Deleting Resources with Azure CLI\nDESCRIPTION: Removes the resource group, AKS cluster, namespace, event hub, and all related resources using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-event-grid.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz group delete --name MyResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Installing NGINX Ingress Controller with ModSecurity WAF\nDESCRIPTION: This bash script checks if the NGINX ingress controller is already installed and installs it if needed. It configures the controller with ModSecurity WAF enabled and sets up the appropriate Kubernetes service annotations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\n# Variables\nsource ./00-variables.sh\n\n# Check if the NGINX ingress controller Helm chart is already installed\nresult=$(helm list -n $NGINX_NAMESPACE | grep $NGINX_RELEASE_NAME | awk '{print $1}')\n\nif [[ -n $result ]]; then\n  echo \"[$NGINX_RELEASE_NAME] NGINX ingress controller release already exists in the [$NGINX_NAMESPACE] namespace\"\nelse\n  # Check if the NGINX ingress controller repository is not already added\n  result=$(helm repo list | grep $NGINX_REPO_NAME | awk '{print $1}')\n\n  if [[ -n $result ]]; then\n    echo \"[$NGINX_REPO_NAME] Helm repo already exists\"\n  else\n    # Add the NGINX ingress controller repository\n    echo \"Adding [$NGINX_REPO_NAME] Helm repo...\"\n    helm repo add $NGINX_REPO_NAME $NGINX_REPO_URL\n  fi\n\n  # Update your local Helm chart repository cache\n  echo 'Updating Helm repos...'\n  helm repo update\n\n  # Deploy NGINX ingress controller\n  echo \"Deploying [$NGINX_RELEASE_NAME] NGINX ingress controller to the [$NGINX_NAMESPACE] namespace...\"\n  helm install $NGINX_RELEASE_NAME $NGINX_REPO_NAME/$nginxChartName \\\n    --create-namespace \\\n    --namespace $NGINX_NAMESPACE \\\n    --set controller.nodeSelector.\"kubernetes\\.io/os\"=linux \\\n    --set controller.replicaCount=$NGINX_REPLICA_COUNT \\\n    --set defaultBackend.nodeSelector.\"kubernetes\\.io/os\"=linux \\\n    --set controller.service.annotations.\"service\\.beta\\.kubernetes\\.io/azure-load-balancer-health-probe-request-path\"=/healthz\nfi\n\n# Get values\nhelm get values $NGINX_RELEASE_NAME --namespace $NGINX_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Monitor ConfigMap for OSM Metrics\nDESCRIPTION: This YAML defines a ConfigMap that configures Azure Monitor to collect metrics from the specified namespace in the OSM mesh. It's applied to the kube-system namespace to configure the monitoring agent.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nkind: ConfigMap\napiVersion: v1\ndata:\n  schema-version: v1\n  config-version: ver1\n  osm-metric-collection-configuration: |-\n    # OSM metric collection settings\n    [osm_metric_collection_configuration]\n      [osm_metric_collection_configuration.settings]\n          # Namespaces to monitor\n          monitor_namespaces = [\"myappnamespace\"]\nmetadata:\n  name: container-azm-ms-osmconfig\n  namespace: kube-system\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group\nDESCRIPTION: Azure CLI command to create a new resource group for AKS deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group create --name <resource-group> --location <location>\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Dev Namespace\nDESCRIPTION: Command to create a new namespace named 'dev' in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_13\n\nLANGUAGE: console\nCODE:\n```\nkubectl create namespace dev\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes namespace for AKS Store demo\nDESCRIPTION: Creates a dedicated Kubernetes namespace called 'aks-store-demo' to isolate and organize the application resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns aks-store-demo\n```\n\n----------------------------------------\n\nTITLE: Creating Normal User in Microsoft Entra ID\nDESCRIPTION: Creates a 'normal' user in Microsoft Entra ID and adds them to the default group. This user will have basic read-only access to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nDOMAIN=contoso.com\nPASSWORD=Password1\n\nNUSER_ID=$(az ad user create \\\n    --display-name n01 \\\n    --password ${PASSWORD} \\\n    --user-principal-name n01@${DOMAIN} \\\n    --query id \\\n    --output tsv)\n\naz ad group member add \\\n    --group $DEFAULT_ID \\\n    --member-id $NUSER_ID\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault with RBAC Authorization\nDESCRIPTION: Creates an Azure Key Vault using az keyvault create command with RBAC authorization enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault create --resource-group <ResourceGroupName> --location <Location> --name <KeyVaultName> --enable-rbac-authorization true\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group with Azure PowerShell\nDESCRIPTION: Creates a new resource group named 'myResourceGroup' in the 'eastus' region using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzResourceGroup -ResourceGroupName myResourceGroup -Location eastus\n```\n\n----------------------------------------\n\nTITLE: Deleting Namespace in Kubernetes\nDESCRIPTION: This command deletes the 'psp-aks' namespace from the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_19\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete namespace psp-aks\n```\n\n----------------------------------------\n\nTITLE: Creating ConfigMap for Kafka and Cruise Control Metrics in Kubernetes\nDESCRIPTION: This snippet creates two ConfigMaps: 'kafka-metrics' and 'cruise-control-metrics'. These ConfigMaps contain JMX Prometheus Exporter configurations for Kafka and Cruise Control, defining how JMX metrics are transformed and exposed in Prometheus format.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n kafka -f - <<'EOF'\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kafka-metrics\n  labels:\n    app: strimzi\ndata:\n  kafka-metrics-config.yaml: |\n    # See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics\n    lowercaseOutputName: true\n    rules:\n    # Special cases and very specific rules\n    - pattern: kafka.server<type=(.+), name=(.+), clientId=(.+), topic=(.+), partition=(.*)><>Value\n      name: kafka_server_$1_$2\n      type: GAUGE\n      labels:\n        clientId: \"$3\"\n        topic: \"$4\"\n        partition: \"$5\"\n    - pattern: kafka.server<type=(.+), name=(.+), clientId=(.+), brokerHost=(.+), brokerPort=(.+)><>Value\n      name: kafka_server_$1_$2\n      type: GAUGE\n      labels:\n        clientId: \"$3\"\n        broker: \"$4:$5\"\n    - pattern: kafka.server<type=(.+), cipher=(.+), protocol=(.+), listener=(.+), networkProcessor=(.+)><>connections\n      name: kafka_server_$1_connections_tls_info\n      type: GAUGE\n      labels:\n        cipher: \"$2\"\n        protocol: \"$3\"\n        listener: \"$4\"\n        networkProcessor: \"$5\"\n    - pattern: kafka.server<type=(.+), clientSoftwareName=(.+), clientSoftwareVersion=(.+), listener=(.+), networkProcessor=(.+)><>connections\n      name: kafka_server_$1_connections_software\n      type: GAUGE\n      labels:\n        clientSoftwareName: \"$2\"\n        clientSoftwareVersion: \"$3\"\n        listener: \"$4\"\n        networkProcessor: \"$5\"\n    - pattern: \"kafka.server<type=(.+), listener=(.+), networkProcessor=(.+)><>(.+-total):\"\n      name: kafka_server_$1_$4\n      type: COUNTER\n      labels:\n        listener: \"$2\"\n        networkProcessor: \"$3\"\n    - pattern: \"kafka.server<type=(.+), listener=(.+), networkProcessor=(.+)><>(.+):\"\n      name: kafka_server_$1_$4\n      type: GAUGE\n      labels:\n        listener: \"$2\"\n        networkProcessor: \"$3\"\n    - pattern: kafka.server<type=(.+), listener=(.+), networkProcessor=(.+)><>(.+-total)\n      name: kafka_server_$1_$4\n      type: COUNTER\n      labels:\n        listener: \"$2\"\n        networkProcessor: \"$3\"\n    - pattern: kafka.server<type=(.+), listener=(.+), networkProcessor=(.+)><>(.+)\n      name: kafka_server_$1_$4\n      type: GAUGE\n      labels:\n        listener: \"$2\"\n        networkProcessor: \"$3\"\n    # Some percent metrics use MeanRate attribute\n    # Ex) kafka.server<type=(KafkaRequestHandlerPool), name=(RequestHandlerAvgIdlePercent)><>MeanRate\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+)Percent\\w*><>MeanRate\n      name: kafka_$1_$2_$3_percent\n      type: GAUGE\n    # Generic gauges for percents\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+)Percent\\w*><>Value\n      name: kafka_$1_$2_$3_percent\n      type: GAUGE\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+)Percent\\w*, (.+)=(.+)><>Value\n      name: kafka_$1_$2_$3_percent\n      type: GAUGE\n      labels:\n        \"$4\": \"$5\"\n    # Generic per-second counters with 0-2 key/value pairs\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*, (.+)=(.+), (.+)=(.+)><>Count\n      name: kafka_$1_$2_$3_total\n      type: COUNTER\n      labels:\n        \"$4\": \"$5\"\n        \"$6\": \"$7\"\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*, (.+)=(.+)><>Count\n      name: kafka_$1_$2_$3_total\n      type: COUNTER\n      labels:\n        \"$4\": \"$5\"\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*><>Count\n      name: kafka_$1_$2_$3_total\n      type: COUNTER\n    # Generic gauges with 0-2 key/value pairs\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+), (.+)=(.+)><>Value\n      name: kafka_$1_$2_$3\n      type: GAUGE\n      labels:\n        \"$4\": \"$5\"\n        \"$6\": \"$7\"\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+)><>Value\n      name: kafka_$1_$2_$3\n      type: GAUGE\n      labels:\n        \"$4\": \"$5\"\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+)><>Value\n      name: kafka_$1_$2_$3\n      type: GAUGE\n    # Emulate Prometheus 'Summary' metrics for the exported 'Histogram's.\n    # Note that these are missing the '_sum' metric!\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+), (.+)=(.+)><>Count\n      name: kafka_$1_$2_$3_count\n      type: COUNTER\n      labels:\n        \"$4\": \"$5\"\n        \"$6\": \"$7\"\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.*), (.+)=(.+)><>(\\d+)thPercentile\n      name: kafka_$1_$2_$3\n      type: GAUGE\n      labels:\n        \"$4\": \"$5\"\n        \"$6\": \"$7\"\n        quantile: \"0.$8\"\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+)><>Count\n      name: kafka_$1_$2_$3_count\n      type: COUNTER\n      labels:\n        \"$4\": \"$5\"\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.*)><>(\\d+)thPercentile\n      name: kafka_$1_$2_$3\n      type: GAUGE\n      labels:\n        \"$4\": \"$5\"\n        quantile: \"0.$6\"\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+)><>Count\n      name: kafka_$1_$2_$3_count\n      type: COUNTER\n    - pattern: kafka.(\\w+)<type=(.+), name=(.+)><>(\\d+)thPercentile\n      name: kafka_$1_$2_$3\n      type: GAUGE\n      labels:\n        quantile: \"0.$4\"\n    # KRaft overall related metrics\n    # distinguish between always increasing COUNTER (total and max) and variable GAUGE (all others) metrics\n    - pattern: \"kafka.server<type=raft-metrics><>(.+-total|.+-max):\"\n      name: kafka_server_raftmetrics_$1\n      type: COUNTER\n    - pattern: \"kafka.server<type=raft-metrics><>(current-state): (.+)\"\n      name: kafka_server_raftmetrics_$1\n      value: 1\n      type: UNTYPED\n      labels:\n        $1: \"$2\"\n    - pattern: \"kafka.server<type=raft-metrics><>(.+):\"\n      name: kafka_server_raftmetrics_$1\n      type: GAUGE\n    # KRaft \"low level\" channels related metrics\n    # distinguish between always increasing COUNTER (total and max) and variable GAUGE (all others) metrics\n    - pattern: \"kafka.server<type=raft-channel-metrics><>(.+-total|.+-max):\"\n      name: kafka_server_raftchannelmetrics_$1\n      type: COUNTER\n    - pattern: \"kafka.server<type=raft-channel-metrics><>(.+):\"\n      name: kafka_server_raftchannelmetrics_$1\n      type: GAUGE\n    # Broker metrics related to fetching metadata topic records in KRaft mode\n    - pattern: \"kafka.server<type=broker-metadata-metrics><>(.+):\"\n      name: kafka_server_brokermetadatametrics_$1\n      type: GAUGE\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cruise-control-metrics\n  labels:\n    app: strimzi\ndata:\n  metrics-config.yaml: |\n    # See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics\n    lowercaseOutputName: true\n    rules:\n    - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n      name: kafka_cruisecontrol_$1_$2\n      type: GAUGE\nEOF\n```\n\n----------------------------------------\n\nTITLE: Assigning Storage Blob Data Contributor Role for PostgreSQL Access\nDESCRIPTION: Assigns the Storage Blob Data Contributor role to the user-assigned managed identity, allowing the PostgreSQL cluster to read from and write to the storage account for backup operations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\naz role assignment create \\\n    --role \"Storage Blob Data Contributor\" \\\n    --assignee-object-id $AKS_UAMI_WORKLOAD_OBJECTID \\\n    --assignee-principal-type ServicePrincipal \\\n    --scope $STORAGE_ACCOUNT_PRIMARY_RESOURCE_ID \\\n    --query \"id\" \\\n    --output tsv\n```\n\n----------------------------------------\n\nTITLE: Downloading and Installing WebLogic Deploy Tooling\nDESCRIPTION: Bash commands to download and install WebLogic Deploy Tooling (WDT), unzip it, and remove unnecessary Windows command files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\ncd ${BASE_DIR}/mystaging\ncurl -m 120 -fL https://github.com/oracle/weblogic-deploy-tooling/releases/latest/download/weblogic-deploy.zip -o weblogic-deploy.zip\n\nunzip weblogic-deploy.zip -d .\nrm ./weblogic-deploy/bin/*.cmd\n```\n\n----------------------------------------\n\nTITLE: Istio Service Entry Configuration for HTTP Proxy\nDESCRIPTION: YAML configuration for creating an Istio Service Entry to enable external service access via HTTP proxy.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/http-proxy.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: proxy\nspec:\n  hosts:\n  - my-company-proxy.com # ignored\n  addresses:\n  - $PROXY_IP/32\n  ports:\n  - number: $PROXY_PORT\n    name: tcp\n    protocol: TCP\n  location: MESH_EXTERNAL\n```\n\n----------------------------------------\n\nTITLE: Deploying Sleep Application and Setting Environment Variable in Azure CLI\nDESCRIPTION: Deploys the 'sleep' application and sets the SOURCE_POD environment variable to the pod name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-telemetry.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/sleep/sleep.yaml\nexport SOURCE_POD=$(kubectl get pod -l app=sleep -o jsonpath={.items..metadata.name})\n```\n\n----------------------------------------\n\nTITLE: Starting AKS Cluster using Azure CLI\nDESCRIPTION: Command to start a stopped AKS cluster using Azure CLI. Restores previous control plane state and node count.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/start-stop-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks start --name myAKSCluster --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Viewing Detailed Placement Information\nDESCRIPTION: Command to view detailed information about the placement object and its status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-resource-propagation.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe clusterresourceplacement distribute-my-namespace\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Cluster Status After Failover\nDESCRIPTION: Example output showing the PostgreSQL cluster status after failover. Note that pg-primary-cnpg-sryti1qf-2 has been promoted to primary while the former primary is now a standby replica.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_21\n\nLANGUAGE: output\nCODE:\n```\npg-primary-cnpg-sryti1qf-2  0/9000060   Primary         OK      aks-postgres-32388626-vmss000001\npg-primary-cnpg-sryti1qf-1  0/9000060   Standby (sync)  OK      aks-postgres-32388626-vmss000000\npg-primary-cnpg-sryti1qf-3  0/9000060   Standby (sync)  OK      aks-postgres-32388626-vmss000002\n```\n\n----------------------------------------\n\nTITLE: Updating Kubernetes Manifest for Azure Service Bus Integration\nDESCRIPTION: YAML configuration for updating the order-service Deployment in a Kubernetes manifest to use Azure Service Bus instead of RabbitMQ.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-paas-services.md#2025-04-21_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: order-service\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: order-service\n  template:\n    metadata:\n      labels:\n        app: order-service\n    spec:\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      containers:\n      - name: order-service\n        image: <REPLACE_WITH_YOUR_ACR_NAME>.azurecr.io/aks-store-demo/order-service:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: ORDER_QUEUE_HOSTNAME\n          value: \"<REPLACE_WITH_YOUR_SB_NS_HOSTNAME>\" # Example: sb-store-demo-123456.servicebus.windows.net\n        - name: ORDER_QUEUE_PORT\n          value: \"5671\"\n        - name: ORDER_QUEUE_TRANSPORT\n          value: \"tls\"\n        - name: ORDER_QUEUE_USERNAME\n          value: \"sender\"\n        - name: ORDER_QUEUE_PASSWORD\n          value: \"<REPLACE_WITH_YOUR_SB_SENDER_PASSWORD>\"\n        - name: ORDER_QUEUE_NAME\n          value: \"orders\"\n        - name: FASTIFY_ADDRESS\n          value: \"0.0.0.0\"\n        resources:\n          requests:\n            cpu: 1m\n            memory: 50Mi\n          limits:\n            cpu: 75m\n            memory: 128Mi\n```\n\n----------------------------------------\n\nTITLE: Creating SSH Key Pair in Azure CLI\nDESCRIPTION: Command to create an SSH key pair using Azure CLI, which is required for AKS cluster deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-arm.md#2025-04-21_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz sshkey create --name <sshkey-name> --resource-group <resource-group-name>\n```\n\n----------------------------------------\n\nTITLE: Generating Update Run from Auto-Upgrade Profile using Azure CLI\nDESCRIPTION: This command generates a new update run based on the current AKS-published Kubernetes or node image version. The generated update run isn't automatically started, allowing for review before execution.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet autoupgradeprofile generate-update-run \\ \n    --resource-group $GROUP \\ \n    --fleet-name $FLEET \\ \n    --name $AUTOUPGRADEPROFILE\n```\n\n----------------------------------------\n\nTITLE: Restarting Workloads to Obtain New Leaf Certificates\nDESCRIPTION: This command restarts a deployment to force workloads to obtain new leaf certificates from the new intermediate CA immediately after rotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart deployment <deployment name> -n <deployment namespace>\n```\n\n----------------------------------------\n\nTITLE: Verifying Certificate Refresh After Rotation\nDESCRIPTION: This command checks the Istio control plane logs to confirm that the certificates have been refreshed based on the new intermediate CA after rotation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs deploy/istiod-asm-1-17 -c discovery -n aks-istio-system | grep -v validationController\n```\n\n----------------------------------------\n\nTITLE: Creating a text file with CA certificates\nDESCRIPTION: Example of a text file containing multiple CA certificates separated by blank lines. This file can be used to pass certificates to an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/custom-certificate-authority.md#2025-04-21_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n-----BEGIN CERTIFICATE-----\ncert1\n-----END CERTIFICATE-----\n\n-----BEGIN CERTIFICATE-----\ncert2\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Installing Dapr with Custom Storage Class Using Azure CLI\nDESCRIPTION: Azure CLI command to install Dapr extension with a custom zone-redundant storage class for the placement service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension create --cluster-type managedClusters  \n--cluster-name XXX  \n--resource-group XXX  \n--name XXX  \n--extension-type Microsoft.Dapr  \n--auto-upgrade-minor-version XXX  \n--version XXX  \n--configuration-settings \"dapr_placement.volumeclaims.storageClassName=custom-zone-redundant-storage\"\n```\n\n----------------------------------------\n\nTITLE: Updating Chart.yaml with Dependencies in YAML\nDESCRIPTION: Modifies the Chart.yaml file to add a dependency for the redis chart and update the appVersion. This configuration sets up the chart's metadata and dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v2\nname: azure-vote-front\ndescription: A Helm chart for Kubernetes\n\ndependencies:\n  - name: redis\n    version: 17.3.17\n    repository: https://charts.bitnami.com/bitnami\n\n...\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application.\nappVersion: v1\n```\n\n----------------------------------------\n\nTITLE: Deploying wasmCloud Application\nDESCRIPTION: Uses the wash CLI to deploy the wasmCloud application defined in the YAML manifest.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nwash app deploy hello-world.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Resource Group\nDESCRIPTION: Azure CLI command to create a resource group for the AKS cluster in the East US region.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Stopping AKS Cluster using PowerShell\nDESCRIPTION: Command to stop a running AKS cluster including nodes and control plane using PowerShell cmdlet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/start-stop-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nStop-AzAksCluster -Name myAKSCluster -ResourceGroupName myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Disabling IMDS Restriction\nDESCRIPTION: Command to disable IMDS restriction on an AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/imds-restriction.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --disable-imds-restriction\n```\n\n----------------------------------------\n\nTITLE: Resetting Windows Admin Password in AKS Cluster using Azure PowerShell\nDESCRIPTION: This snippet shows how to update the Windows administrator password for an AKS cluster using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$cluster = Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster\n$cluster.WindowsProfile.AdminPassword = $WINDOWS_ADMIN_PASSWORD\n$cluster | Set-AzAksCluster\n```\n\n----------------------------------------\n\nTITLE: Disabling Windows OutboundNAT in Node Pool\nDESCRIPTION: Adds a Windows node pool to an AKS cluster with OutboundNAT disabled to prevent connection issues.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/nat-gateway.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myNatCluster \\\n    --name mynp \\\n    --node-count 3 \\\n    --os-type Windows \\\n    --disable-windows-outbound-nat\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster with kubectl\nDESCRIPTION: Azure CLI command to configure kubectl to connect to the AKS cluster by retrieving credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-arm.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz aks get-credentials --resource-group MyResourceGroup --name MyAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Deploying Application Resources with Azure Developer CLI\nDESCRIPTION: This command creates all the application resources using the azd up command, which runs the necessary hooks to provision and deploy the application services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_14\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd up\n```\n\n----------------------------------------\n\nTITLE: Retrieving the Subnet Resource ID\nDESCRIPTION: Gets the subnet resource ID and stores it in a variable named SUBNET_ID for use in later AKS cluster creation commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nSUBNET_ID=$(az network vnet subnet show --resource-group myResourceGroup --vnet-name myAKSVnet --name myAKSSubnet --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Service IP Address\nDESCRIPTION: Command to obtain the external IP address of the store-admin service running in the AKS cluster. This IP is used to access the web application for testing the AI functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\necho \"http://$(kubectl get svc/store-admin -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\"\n```\n\n----------------------------------------\n\nTITLE: Creating an SMB Persistent Volume Claim in Kubernetes\nDESCRIPTION: This YAML configuration defines a PersistentVolumeClaim that references an existing SMB persistent volume. It requests 100Gi of storage with ReadWriteMany access mode for multi-pod access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: anf-pvc-smb\nspec:\n  accessModes:\n    - ReadWriteMany\n  volumeName: anf-pv-smb\n  storageClassName: \"\"\n  resources:\n    requests:\n      storage: 100Gi\n```\n\n----------------------------------------\n\nTITLE: Applying MemberCluster Configuration\nDESCRIPTION: Command to apply the MemberCluster taint configuration\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f member-cluster-taint.yml\n```\n\n----------------------------------------\n\nTITLE: Accessing Deployed Application\nDESCRIPTION: Commands to obtain and verify the external IP address of the deployed service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\nexport QUARKUS_URL=http://$(kubectl get svc -n ${AKS_NS} | grep quarkus-todo-demo-app-aks | cut -d \" \" -f10)\necho $QUARKUS_URL\n```\n\n----------------------------------------\n\nTITLE: OSM Sidecar Injection Annotation Output\nDESCRIPTION: Expected JSON output showing the required OSM sidecar injection annotation for namespace configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"openservicemesh.io/sidecar-injection\": \"enabled\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Ingress Controller IP\nDESCRIPTION: Command to retrieve the public IP address of the ingress controller in the app-routing-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get service -n app-routing-system\n```\n\n----------------------------------------\n\nTITLE: Creating a volume snapshot class in AKS\nDESCRIPTION: Command to apply the volume snapshot class definition for Azure Disk CSI driver. This creates a VolumeSnapshotClass resource that defines the parameters for creating volume snapshots.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/deploy/example/snapshot/storageclass-azuredisk-snapshot.yaml\n```\n\n----------------------------------------\n\nTITLE: Resource-specific WAF Log Query with Kusto\nDESCRIPTION: A Kusto query that accesses firewall logs using the resource-specific AGWFirewallLogs table format. This provides a more direct way to access WAF logs in Log Analytics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_9\n\nLANGUAGE: kusto\nCODE:\n```\nAGWFirewallLogs\n| limit 10\n```\n\n----------------------------------------\n\nTITLE: Example MongoDB Replica Set Status Output\nDESCRIPTION: Sample JSON output of the rs.status() command showing the replica set configuration after failover, with one primary and two secondary members.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  set: 'rs0',\n  ... // Additional details\n  members: [\n    {\n      _id: 0,\n      name: 'cluster-aks-mongodb-rs0-0.cluster-aks-mongodb-rs0.mongodb.svc.cluster.local:27017',\n      health: 1,\n      state: 2,\n      stateStr: 'PRIMARY',\n      uptime: 207037,\n      ... // Additional details for the first member\n    },\n    {\n      _id: 1,\n      name: 'cluster-aks-mongodb-rs0-1.cluster-aks-mongodb-rs0.mongodb.svc.cluster.local:27017',\n      health: 1,\n      state: 1,\n      stateStr: 'SECONDARY',\n      uptime: 207033,\n      ... // Additional details for the second member\n    },\n    {\n      _id: 2,\n      name: 'cluster-aks-mongodb-rs0-2.cluster-aks-mongodb-rs0.mongodb.svc.cluster.local:27017',\n      health: 1,\n      state: 2,\n      stateStr: 'SECONDARY',\n      uptime: 207033,\n      ... // Additional details for the third member\n    }\n  ],\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Resources with Azure PowerShell\nDESCRIPTION: Removes the resource group, AKS cluster, namespace, event hub, and all related resources using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-event-grid.md#2025-04-21_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nRemove-AzResourceGroup -Name MyResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group in Azure using Azure CLI\nDESCRIPTION: This snippet creates a new resource group in Azure using the Azure CLI. It sets the resource group name as an environment variable and then creates the resource group in the 'eastus' location.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/jakartaee/create-azure-sql-database-passwordless.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nexport RESOURCE_GROUP_NAME=\"abc1228rg\"\naz group create \\\n    --name ${RESOURCE_GROUP_NAME} \\\n    --location eastus\n```\n\n----------------------------------------\n\nTITLE: Creating AppArmor Profile to Deny Write Access\nDESCRIPTION: This code snippet creates an AppArmor profile that prevents writing to files. It includes base abstractions and denies all file writes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/secure-container-access.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#include <tunables/global>\nprofile k8s-apparmor-example-deny-write flags=(attach_disconnected) {\n  #include <abstractions/base>\n\n  file,\n  # Deny all file writes.\n  deny /** w,\n}\n```\n\n----------------------------------------\n\nTITLE: Generating WebLogic Domain Model YAML File using Base64 Decoding\nDESCRIPTION: This command decodes a base64-encoded string to produce the WebLogic domain model YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\necho -e IyBDb3B5cmlna...Cgo= | base64 -d > model.yaml\n```\n\n----------------------------------------\n\nTITLE: Registering the KataVMIsolationPreview Feature Flag\nDESCRIPTION: Commands to register and verify the KataVMIsolationPreview feature flag, which is required to enable Pod Sandboxing in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"KataVMIsolationPreview\"\n```\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"KataVMIsolationPreview\"\n```\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz provider register --namespace \"Microsoft.ContainerService\"\n```\n\n----------------------------------------\n\nTITLE: Verifying MongoDB Client Pod Status\nDESCRIPTION: Checks if the MongoDB client pod was successfully created in the specified namespace. The command returns details about the pod including its status and age.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod percona-client -n ${AKS_MONGODB_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Defining Role Assignments with Bicep\nDESCRIPTION: This Bicep template defines role assignments for the virtual network. It includes parameters for the virtual network name and the user assigned identity principal ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_10\n\nLANGUAGE: bicep\nCODE:\n```\nparam vnetName string = 'aksAutomaticVnet'\nparam uamiPrincipalId string\n\nresource vnet 'Microsoft.Network/virtualNetworks@2021-02-01' existing = {\n  name: vnetName\n}\n\nresource networkContributorRoleDefinition 'Microsoft.Authorization/roleDefinitions@2018-01-01-preview' existing = {\n  scope: subscription()\n  name: '4d97b98b-1d4f-4787-a291-c67834d212e7'\n}\n\nresource networkContributorAssignment 'Microsoft.Authorization/roleAssignments@2020-04-01-preview' = {\n  scope: vnet\n  name: guid(vnet.id, uamiPrincipalId, networkContributorRoleDefinition.id)\n  properties: {\n    roleDefinitionId: networkContributorRoleDefinition.id\n    principalId: uamiPrincipalId\n    principalType: 'ServicePrincipal'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Temporarily Removing Node Initialization Taints\nDESCRIPTION: Removes initialization taints from a specific node using kubectl. Note that these taints will reappear after node scaling or upgrades.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl taint nodes $NODE_POOL_NAME sku=gpu:NoSchedule-\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster and Resources\nDESCRIPTION: Removes the entire resource group containing the AKS cluster and related resources to clean up after testing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\naz group delete --name myResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Verifying contents of restored PVC\nDESCRIPTION: Command to check if the files from the original volume are present in the restored volume by executing a command in the pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-disk-csi.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec nginx-restored -- ls /mnt/azuredisk\n```\n\n----------------------------------------\n\nTITLE: Registering the StaticEgressGatewayPreview feature flag\nDESCRIPTION: Commands to register the StaticEgressGatewayPreview feature flag with Azure, verify its registration status, and refresh the Microsoft.ContainerService resource provider.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-static-egress-gateway.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"StaticEgressGatewayPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"StaticEgressGatewayPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Registering Feature Flags for AKS Automatic\nDESCRIPTION: Commands to register the AutomaticSKUPreview feature flag, verify registration status, and refresh the resource provider registration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace Microsoft.ContainerService --name AutomaticSKUPreview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace Microsoft.ContainerService --name AutomaticSKUPreview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Retrieving Key Vault Secret Provider Identity Client ID\nDESCRIPTION: This Azure CLI command retrieves the client ID of the user-assigned managed identity used by the Azure Key Vault Provider for Secrets Store CSI Driver, which is required for certificate retrieval by the Kubernetes Ingress.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz aks show \\\n  --name <aks-name> \\\n  --resource-group <aks-resource-group-name> \\\n  --query addonProfiles.azureKeyvaultSecretsProvider.identity.clientId \\\n  --output tsv \\\n  --only-show-errors\n```\n\n----------------------------------------\n\nTITLE: Azure Kubernetes Deployment YAML Configuration\nDESCRIPTION: Example YAML manifest for Azure implementation showing container configuration with Azure Storage Queue and Table references for KEDA scalers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-prepare.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n    spec:\n      serviceAccountName: $SERVICE_ACCOUNT\n      containers:\n      - name: keda-queue-reader\n        image: ${AZURE_CONTAINER_REGISTRY_NAME}.azurecr.io/aws2azure/aqs-consumer\n        imagePullPolicy: Always\n        env:\n        - name: AZURE_QUEUE_NAME\n          value: $AZURE_QUEUE_NAME\n        - name: AZURE_STORAGE_ACCOUNT_NAME\n          value: $AZURE_STORAGE_ACCOUNT_NAME\n        - name: AZURE_TABLE_NAME\n          value: $AZURE_TABLE_NAME\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Store Application using kubectl\nDESCRIPTION: This command applies the YAML manifest file to deploy the AKS Store application on the Kubernetes cluster. It creates all the necessary deployments and services defined in the manifest.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-rm-template.md#2025-04-21_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f aks-store-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Default Node Pool Configuration\nDESCRIPTION: YAML configuration for the default node pool definition in AKS node autoprovisioning.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: karpenter.sh/v1beta1\nkind: NodePool\nmetadata:\n  name: default\nspec:\n  disruption:\n    consolidationPolicy: WhenUnderutilized\n    expireAfter: Never\n  template:\n    spec:\n      nodeClassRef:\n        name: default\n      requirements:\n      - key: kubernetes.io/arch\n        operator: In\n        values:\n        - amd64\n      - key: kubernetes.io/os\n        operator: In\n        values:\n        - linux\n      - key: karpenter.sh/capacity-type\n        operator: In\n        values:\n        - on-demand\n      - key: karpenter.azure.com/sku-family\n        operator: In\n        values:\n        - D\n```\n\n----------------------------------------\n\nTITLE: Disabling Specific Istio Ingress Gateway Type\nDESCRIPTION: Azure CLI command to disable either external or internal ingress gateway while keeping the mesh enabled on the cluster. Requires resource group name and cluster name as parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-ingress.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks mesh disable-ingress-gateway --ingress-gateway-type <external/internal> --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}\n```\n\n----------------------------------------\n\nTITLE: Adding Manual Trigger to GitHub Actions Workflow for AKS Node Image Upgrades\nDESCRIPTION: This YAML snippet adds the workflow_dispatch trigger to a GitHub Actions workflow, allowing the workflow to be triggered manually in addition to the scheduled runs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-upgrade-github-actions.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nname: Upgrade cluster node images\non:\n  schedule:\n    - cron: '0 3 */15 * *'\n  workflow_dispatch:\n```\n\n----------------------------------------\n\nTITLE: Verifying OSM CRDs Installation\nDESCRIPTION: Command to list and verify the required Custom Resource Definitions for OSM operation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get crds\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription\nDESCRIPTION: Sets the default Azure subscription using az CLI\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/access-fleet-hub-cluster-kubernetes-api.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz account set --subscription ${SUBSCRIPTION_ID}\n```\n\n----------------------------------------\n\nTITLE: Azure Container Registry Creation Success Output\nDESCRIPTION: Example output snippet showing successful creation of the Azure Container Registry instance with provisioning state 'Succeeded'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_13\n\nLANGUAGE: output\nCODE:\n```\n  \"provisioningState\": \"Succeeded\",\n  \"publicNetworkAccess\": \"Enabled\",\n  \"resourceGroup\": \"<YOUR_RESOURCE_GROUP>\",\n```\n\n----------------------------------------\n\nTITLE: Viewing VPA Recommendations\nDESCRIPTION: Bash command to view VPA recommendations for the hamster deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe vpa/hamster-vpa\n```\n\n----------------------------------------\n\nTITLE: Testing AKS Application Accessibility with cURL\nDESCRIPTION: This command uses cURL to test the accessibility of the deployed AKS application by sending a request to the retrieved IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-cli.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\ncurl $IP_ADDRESS\n```\n\n----------------------------------------\n\nTITLE: Adding Node Pool with Public IPs\nDESCRIPTION: Adds a new node pool to an existing AKS cluster with public IPs enabled\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --resource-group <resourceGroup> --cluster-name <aksClusterName> --name <newNodePool> --enable-node-public-ip\n```\n\n----------------------------------------\n\nTITLE: Successful Resource Deletion Confirmation in Azure CLI\nDESCRIPTION: Shows the success message displayed after resources are successfully deleted, including the total time taken for the operation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_9\n\nLANGUAGE: output\nCODE:\n```\nSUCCESS: Your application was removed from Azure in 14 minutes 30 seconds.\n```\n\n----------------------------------------\n\nTITLE: Creating PVC using kubectl\nDESCRIPTION: Command to apply the PVC configuration using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f azure-pvc.yaml\n```\n\n----------------------------------------\n\nTITLE: Registering IMDS Restriction Preview Feature\nDESCRIPTION: Commands to register and verify the IMDSRestrictionPreview feature flag in Azure.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/imds-restriction.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace Microsoft.ContainerService --name IMDSRestrictionPreview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace Microsoft.ContainerService --name IMDSRestrictionPreview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Retrieving Service Principal ID with Terraform\nDESCRIPTION: This snippet shows how to get the service principal ID using Terraform's output command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\nsp=$(terraform output -raw sp)\n```\n\n----------------------------------------\n\nTITLE: Describing Kubernetes Node Configuration\nDESCRIPTION: Shows detailed information about a specific node in the Kubernetes cluster, including its taint configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-taints.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe node $NODE_NAME\n```\n\n----------------------------------------\n\nTITLE: Retrieving OSM MeshConfig Configuration\nDESCRIPTION: Commands to retrieve and examine the OSM MeshConfig resource configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get meshconfig osm-mesh-config -n kube-system\n```\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get meshconfig osm-mesh-config -n kube-system -o yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Cluster Connection with kubectl\nDESCRIPTION: This kubectl command lists the nodes in the cluster, verifying the connection and showing the virtual node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Istio Service Entry Deployment Command\nDESCRIPTION: kubectl command to deploy the Istio Service Entry configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/http-proxy.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f service_proxy.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Image in Azure Container Registry\nDESCRIPTION: Bash command to verify that the WebLogic auxiliary image was successfully pushed to Azure Container Registry by retrieving its metadata.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\naz acr repository show --name ${ACR_NAME} --image ${IMAGE}\n```\n\n----------------------------------------\n\nTITLE: Exporting SSL Certificate to PKCS12 Format\nDESCRIPTION: Exports the SSL certificate to PKCS12 format using the openssl pkcs12 command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl pkcs12 -export -in aks-ingress-tls.crt -inkey aks-ingress-tls.key -out aks-ingress-tls.pfx\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Tags using Azure CLI\nDESCRIPTION: Command to create a new AKS cluster with Azure tags using the --tags parameter to assign department and cost center information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-tags.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --tags dept=IT costcenter=9999 \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Extended Istio Authorization Policy with Bookthief Access\nDESCRIPTION: Updated Istio AuthorizationPolicy configuration that includes access rules for both bookbuyer and bookthief services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\n##################################################################################################\n# bookstore policy\n##################################################################################################\napiVersion: \"security.istio.io/v1beta1\"\nkind: \"AuthorizationPolicy\"\nmetadata:\n  name: \"bookstore\"\n  namespace: bookstore\nspec:\n  selector:\n    matchLabels:\n      app: bookstore\n  action: ALLOW\n  rules:\n    - from:\n        - source:\n            principals: [\"cluster.local/ns/bookbuyer/sa/bookbuyer\", \"cluster.local/ns/bookthief/sa/bookthief\"]\n        - source:\n            namespaces: [\"bookbuyer\", \"bookthief\"]\n      to:\n        - operation:\n            methods: [\"GET\"]\n            paths: [\"*/books-bought\", \"*/buy-a-book/new\"]\n    - when:\n        - key: request.headers[User-Agent]\n          values: [\"*-http-client/*\"]\n        - key: request.headers[Client-App]\n          values: [\"bookbuyer\"]\n---\n##################################################################################################\n# bookwarehouse policy\n##################################################################################################\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"bookwarehouse\"\n  namespace: bookwarehouse\nspec:\n  selector:\n    matchLabels:\n      app: bookwarehouse\n  action: ALLOW\n  rules:\n    - from:\n        - source:\n            principals: [\"cluster.local/ns/bookstore/sa/bookstore\"]\n        - source:\n            namespaces: [\"bookstore\"]\n      to:\n        - operation:\n            methods: [\"POST\"]\n---\n##################################################################################################\n# mysql policy\n##################################################################################################\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"mysql\"\n  namespace: bookwarehouse\nspec:\n  selector:\n    matchLabels:\n      app: mysql\n  action: ALLOW\n  rules:\n    - from:\n        - source:\n            principals: [\"cluster.local/ns/bookwarehouse/sa/bookwarehouse\"]\n        - source:\n            namespaces: [\"bookwarehouse\"]\n      to:\n         - operation:\n            ports: [\"3306\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Managing AKS Maintenance Configurations with Azure CLI\nDESCRIPTION: Azure CLI commands for listing, showing, and deleting maintenance configurations\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks maintenanceconfiguration list --resource-group myResourceGroup --cluster-name myAKSCluster\n\naz aks maintenanceconfiguration show --resource-group myResourceGroup --cluster-name myAKSCluster --name aksManagedAutoUpgradeSchedule\n\naz aks maintenanceconfiguration delete --resource-group myResourceGroup --cluster-name myAKSCluster --name autoUpgradeSchedule\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Principal Name from Microsoft Entra ID using Azure CLI\nDESCRIPTION: This command retrieves the user principal name (UPN) of the currently signed-in Azure AD user. The UPN will be used to create RBAC bindings in Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz ad signed-in-user show --query userPrincipalName -o tsv\n```\n\n----------------------------------------\n\nTITLE: Deploying Consumer App Container\nDESCRIPTION: Bash commands to deploy the consumer application container to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nchmod +x ./deployment/keda/deploy-keda-app-workload-id.sh\n./deployment/keda/deploy-keda-app-workload-id.sh\n```\n\n----------------------------------------\n\nTITLE: Establishing SSH Connection to AKS Node using Private IP\nDESCRIPTION: This bash command demonstrates how to establish an SSH connection to an AKS node using its private IP address. It requires the path to the private key file and the username 'azureuser', which is the default for AKS nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-access.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nssh -i /path/to/private_key.pem azureuser@10.224.0.33\n```\n\n----------------------------------------\n\nTITLE: Creating Test Namespace in Kubernetes\nDESCRIPTION: Command to create a new namespace for testing resource propagation\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns test-ns\n```\n\n----------------------------------------\n\nTITLE: Deploying Pod with Azure Files Volume Mount\nDESCRIPTION: YAML configuration for creating a pod that mounts an Azure Files share using a persistent volume claim at /mnt/azure path.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-files-storage-provision.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: mypod\nspec:\n  containers:\n    - name: mypod\n      image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n      resources:\n        requests:\n          cpu: 100m\n          memory: 128Mi\n        limits:\n          cpu: 250m\n          memory: 256Mi\n      volumeMounts:\n        - mountPath: /mnt/azure\n          name: volume\n          readOnly: false\n  volumes:\n   - name: volume\n     persistentVolumeClaim:\n       claimName: my-azurefile\n```\n\n----------------------------------------\n\nTITLE: Deploying Application to AKS using kubectl apply in PowerShell\nDESCRIPTION: This snippet shows how to deploy the application to AKS using the kubectl apply command. It applies the YAML manifest file to create the deployment and service in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_9\n\nLANGUAGE: PowerShell\nCODE:\n```\nkubectl apply -f sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying AKS Authentication\nDESCRIPTION: Common command to verify successful authentication by retrieving node information from the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster with Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the credentials for the AKS cluster and configures kubectl to use them for cluster management.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_14\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group <resource-group> --name <cluster-name>\n```\n\n----------------------------------------\n\nTITLE: Adding a Labeled Node Pool in AKS using Azure CLI\nDESCRIPTION: Azure CLI command to add a new node pool with a custom label that can be targeted by pods using node selectors.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-advanced-scheduler.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group myResourceGroup \\\n    --cluster-name myAKSCluster \\\n    --name labelnp \\\n    --node-count 1 \\\n    --labels hardware=highmem \\\n    --no-wait\n```\n\n----------------------------------------\n\nTITLE: Verifying OSM Client Binary Installation\nDESCRIPTION: Checks that the OSM client binary has been correctly installed and is accessible in the system PATH by displaying its version information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/servicemesh/osm/open-service-mesh-binary-install-linux.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nosm version\n```\n\n----------------------------------------\n\nTITLE: Installing Quarkus Extensions\nDESCRIPTION: Adds Kubernetes and container image extensions to the Quarkus application\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nquarkus ext add kubernetes container-image-jib\n```\n\n----------------------------------------\n\nTITLE: Installing OSM Client Binary to System Path\nDESCRIPTION: Moves the downloaded OSM client binary to /usr/local/bin and makes it executable. This places the binary in a location that's typically in the user's PATH environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/servicemesh/osm/open-service-mesh-binary-install-linux.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo mv ./linux-amd64/osm /usr/local/bin/osm\nsudo chmod +x /usr/local/bin/osm\n```\n\n----------------------------------------\n\nTITLE: Installing Fleet CLI Extension\nDESCRIPTION: Azure CLI commands for installing and updating the fleet extension required for managing Kubernetes Fleet Manager.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-migrate-preview-to-ga-fleets.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name fleet\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name fleet\n```\n\n----------------------------------------\n\nTITLE: Checking Azure Files Volume Size in AKS Pod\nDESCRIPTION: Command to check the current size of an Azure Files volume mounted in an AKS pod, which displays the filesystem details including total size, used space, and mount path.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it nginx-azurefile -- df -h /mnt/azurefile\n```\n\n----------------------------------------\n\nTITLE: Creating a new ImageList after deletion\nDESCRIPTION: Creates a new ImageList with the same image target after deleting the previous one, which triggers another manual cleanup operation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: eraser.sh/v1\nkind: ImageList\nmetadata:\n  name: imagelist\nspec:\n  images:\n    - docker.io/library/alpine:3.7.3\nEOF\n```\n\n----------------------------------------\n\nTITLE: Disabling Automatic CRD Updates using Azure CLI\nDESCRIPTION: Disables automatic Custom Resource Definition updates during Dapr extension upgrades.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-settings.md#2025-04-21_snippet_20\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension update --cluster-type managedClusters \\\n--cluster-name myAKSCluster \\\n--resource-group myResourceGroup \\\n--name dapr \\\n--configuration-settings \"hooks.applyCrds=false\"\n```\n\n----------------------------------------\n\nTITLE: Creating Fleet Resource With Public Hub\nDESCRIPTION: Creates a Fleet resource with public hub cluster enabled for Kubernetes object propagation and multi-cluster load balancing\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet create --resource-group ${GROUP} --name ${FLEET} --location eastus --enable-hub\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Environment Variables\nDESCRIPTION: Sets up environment variables for subscription ID, resource group, and Kubernetes Fleet resource\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/access-fleet-hub-cluster-kubernetes-api.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport SUBSCRIPTION_ID=<subscription-id>\nexport GROUP=<resource-group-name>\nexport FLEET=<fleet-name>\n```\n\n----------------------------------------\n\nTITLE: Applying Hamster Deployment Configuration\nDESCRIPTION: Bash command to apply the hamster deployment configuration with extra recommender to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f hamster-extra-recommender.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Updated Node Pool Labels using kubectl\nDESCRIPTION: Confirms the label updates by checking for the new department and cost center values.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-labels.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes --show-labels | grep -e \"costcenter=6000\" -e \"dept=ACCT\"\n```\n\n----------------------------------------\n\nTITLE: Creating Test Namespace in Kubernetes\nDESCRIPTION: Creates a new namespace for testing resource propagation in the member cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns test-ns\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group for AKS Automatic\nDESCRIPTION: Command to create an Azure resource group named 'myResourceGroup' in the East US region to contain the AKS resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterRole in YAML\nDESCRIPTION: This YAML snippet shows the definition of a ClusterRole object named 'secret-reader' that grants permissions to get, watch, and list secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/cluster-resource-override.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: secret-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n```\n\n----------------------------------------\n\nTITLE: Starting a Stopped AKS Node Pool using Azure CLI\nDESCRIPTION: Use the az aks nodepool start command to restart a stopped AKS node pool. This brings the node pool back online when needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/start-stop-nodepools.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool start --resource-group myResourceGroup --cluster-name myAKSCluster --nodepool-name testnodepool\n```\n\n----------------------------------------\n\nTITLE: Prompting for SRE Password\nDESCRIPTION: This command prompts the user to enter a secure password for Site Reliability Engineers (SREs) and stores it in a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\necho \"Please enter the secure password for SREs: \" && read AAD_SRE_PW\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node Pool Information - PowerShell\nDESCRIPTION: PowerShell command to get node pool information from an AKS cluster. Returns detailed information about agent pool profiles.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-cluster.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster |\n Select-Object -ExpandProperty AgentPoolProfiles\n```\n\n----------------------------------------\n\nTITLE: Installing OSM Binary to System Path\nDESCRIPTION: Moves the OSM binary to the local bin directory and sets proper execution permissions. This makes the OSM command available system-wide through the PATH variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/servicemesh/osm/open-service-mesh-binary-install-macos.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo mv ./darwin-amd64/osm /usr/local/bin/osm\nsudo chmod +x /usr/local/bin/osm\n```\n\n----------------------------------------\n\nTITLE: Setting Fleet ID Environment Variable\nDESCRIPTION: Sets up the FLEET_ID environment variable for the hub cluster's Kubernetes Fleet resource\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/access-fleet-hub-cluster-kubernetes-api.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport FLEET_ID=/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${GROUP}/providers/Microsoft.ContainerService/fleets/${FLEET}\n```\n\n----------------------------------------\n\nTITLE: Building the Project and Copying Dependencies in Bash\nDESCRIPTION: This snippet shows how to set environment variables for deployment file generation and build the Java application using Maven in Bash. It also copies the Azure Identity dependencies to the Liberty shared resources directory.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ncd $BASE_DIR/java-app\n# The following variables are used for deployment file generation into the target.\nexport LOGIN_SERVER=${LOGIN_SERVER}\nexport SC_SERVICE_ACCOUNT_NAME=${SERVICE_ACCOUNT_NAME}\nexport SC_SECRET_NAME=${SECRET_NAME}\nexport INGRESS_TLS_SECRET=${INGRESS_TLS_SECRET}\n\nmvn clean install\nmvn dependency:copy-dependencies -f pom-azure-identity.xml -DoutputDirectory=target/liberty/wlp/usr/shared/resources\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterResourcePlacement in YAML\nDESCRIPTION: This YAML snippet demonstrates how to create a ClusterResourcePlacement resource to specify placement rules for distributing cluster resource overrides across the cluster infrastructure. It selects clusters labeled with 'env: prod'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/cluster-resource-override.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp\nspec:\n  resourceSelectors:\n    - group: rbac.authorization.k8s.io\n      kind: ClusterRole\n      version: v1\n      name: secret-reader\n  policy:\n    placementType: PickAll\n    affinity:\n      clusterAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  env: prod\n```\n\n----------------------------------------\n\nTITLE: Creating a Dedicated Subnet for HPC Cache\nDESCRIPTION: Command to create a dedicated subnet for the HPC Cache with at least 64 IP addresses (using a /26 CIDR block), which is a requirement for HPC Cache deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet create \\\n    --resource-group $RESOURCE_GROUP \\\n    --vnet-name $VNET_NAME \\\n    --name $SUBNET_NAME \\\n    --address-prefixes 10.0.0.0/26\n```\n\n----------------------------------------\n\nTITLE: Disabling KEDA Add-on\nDESCRIPTION: Disables the KEDA add-on on the AKS cluster using Azure CLI. This command updates the cluster configuration to remove KEDA.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-deploy-add-on-cli.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --disable-keda \n```\n\n----------------------------------------\n\nTITLE: Version Number Example Format\nDESCRIPTION: Example formats showing version numbers used in NodeImage channel updates for Windows containers\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-update-orchestration.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n20348.2582.240716\n```\n\n----------------------------------------\n\nTITLE: Azure File PersistentVolumeClaim Configuration\nDESCRIPTION: YAML configuration for creating a PersistentVolumeClaim that binds to an Azure File CSI PersistentVolume\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: azurefile\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: azurefile-csi\n  volumeName: azurefile\n  resources:\n    requests:\n      storage: 5Gi\n```\n\n----------------------------------------\n\nTITLE: Monitoring WebLogic Pod Status\nDESCRIPTION: Kubectl command to watch the status of WebLogic server pods in the specified namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod -n ${WLS_DOMAIN_NS} -w\n```\n\n----------------------------------------\n\nTITLE: Checking Azure Monitor Pods Status in AKS\nDESCRIPTION: Verifies that Azure Monitor pods are running properly in the AKS cluster by listing all pods with 'ama-' prefix in the kube-system namespace with their status and additional details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get pods -o wide -n kube-system | grep ama-\n```\n\nLANGUAGE: output\nCODE:\n```\nama-metrics-5bc6c6d948-zkgc9          2/2     Running   0 (21h ago)   26h\nama-metrics-ksm-556d86b5dc-2ndkv      1/1     Running   0 (26h ago)   26h\nama-metrics-node-lbwcj                2/2     Running   0 (21h ago)   26h\nama-metrics-node-rzkzn                2/2     Running   0 (21h ago)   26h\nama-metrics-win-node-gqnkw            2/2     Running   0 (26h ago)   26h\nama-metrics-win-node-tkrm8            2/2     Running   0 (26h ago)   26h\n```\n\n----------------------------------------\n\nTITLE: Defining Privileged NGINX Pod\nDESCRIPTION: YAML manifest for creating a privileged NGINX pod with elevated security context.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-privileged\nspec:\n  containers:\n    - name: nginx-privileged\n      image: mcr.microsoft.com/oss/nginx/nginx:1.14.2-alpine\n      securityContext:\n        privileged: true\n```\n\n----------------------------------------\n\nTITLE: Listing Available Host SKUs in Azure CLI\nDESCRIPTION: Command to list available dedicated host SKUs and their restrictions in a specific Azure region.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-dedicated-hosts.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm list-skus --location eastus --resource-type hostGroups/hosts  -o table\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Disk PersistentVolume Configuration\nDESCRIPTION: YAML configuration for creating a PersistentVolume resource that references an Azure Disk. Specifies the disk capacity, access mode, and CSI driver details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  annotations:\n    pv.kubernetes.io/provisioned-by: disk.csi.azure.com\n  name: pv-azuredisk\nspec:\n  capacity:\n    storage: 20Gi\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: managed-csi\n  csi:\n    driver: disk.csi.azure.com\n    volumeHandle: /subscriptions/<subscriptionID>/resourceGroups/MC_myAKSCluster_myAKSCluster_eastus/providers/Microsoft.Compute/disks/myAKSDisk\n    volumeAttributes:\n      fsType: ext4\n```\n\n----------------------------------------\n\nTITLE: Tracking KAITO Workspace Resource Changes\nDESCRIPTION: This command monitors the status of the deployed KAITO workspace in real-time, allowing you to track the progress of the inference service deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-monitoring.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get workspace workspace-qwen-2-5-coder-7b-instruct -w\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Connection Settings in Azure Portal\nDESCRIPTION: This snippet demonstrates how to configure database connection settings for WebLogic Server on AKS using the Azure portal. It includes options for both passwordless (using managed identity) and password-based authentication methods for connecting to a Microsoft SQL Server database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### [Passwordless (Recommended)](#tab/passwordless)\n\nUse the following steps to configure a database connection using a managed identity:\n\n1. For **Connect to database?**, select **Yes**.\n2. Under **Connection settings**, for **Choose database type**, open the dropdown menu and then select **Microsoft SQL Server (with support for passwordless connection)**.\n3. For **JNDI Name**, input *jdbc/WebLogicCafeDB*.\n4. For **DataSource Connection String**, input the connection string you obtained in last section.\n5. Select **Use passwordless datasource connection**.\n6. For **User assigned managed identity**, select the managed identity you created in previous step. In this example, its name is `myManagedIdentity`.\n7. Select **Add**.\n\n### [Password](#tab/password)\n\nTo configure a database connection using a password, follow the instructions shown later in this article.\n```\n\n----------------------------------------\n\nTITLE: Tutorial Navigation Links in Markdown\nDESCRIPTION: A collection of internal markdown links for tutorial navigation and reference documentation, including links to application deployment, app preparation, cluster deployment, CLI installation, and container storage documentation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-azure-container-storage.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[aks-tutorial-deploy-app]: ./tutorial-kubernetes-deploy-application.md\n[aks-tutorial-prepare-app]: ./tutorial-kubernetes-prepare-app.md\n[aks-tutorial-deploy-cluster]: ./tutorial-kubernetes-deploy-cluster.md\n[azure-cli-install]: /cli/azure/install-azure-cli\n[azure-container-storage]: /azure/storage/container-storage/container-storage-introduction\n```\n\n----------------------------------------\n\nTITLE: Listing AKS Node Pools\nDESCRIPTION: This Azure CLI command lists all node pools in an AKS cluster, showing details such as node count, VM size, and provisioning state for each node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool list --resource-group myResourceGroup --cluster-name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Example Workflow Status Response\nDESCRIPTION: Example JSON response from checking the workflow status, showing that the order processing workflow completed successfully.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"instanceID\":\"1234\",\n  \"workflowName\":\"OrderProcessingWorkflow\",\n  \"createdAt\":\"2024-04-23T15:35:00.156714334Z\",\n  \"lastUpdatedAt\":\"2024-04-23T15:35:00.176459055Z\",\n  \"runtimeStatus\":\"COMPLETED\",\n  \"dapr.workflow.input\":\"{ \\\"input\\\" : {\\\"Name\\\": \\\"Paperclips\\\", \\\"TotalCost\\\": 99.95, \\\"Quantity\\\": 1}}\",\n  \"dapr.workflow.output\":\"{\\\"Processed\\\":true}\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Cluster Managed Identity ID\nDESCRIPTION: Azure CLI commands to retrieve the principal ID or client ID of the AKS cluster's managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/static-ip.md#2025-04-21_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\n# For system-assigned managed identity\nCLIENT_ID=$(az aks show \\\n    --name myAKSCluster \\\n    --resource-group myNetworkResourceGroup \\\n    --query identity.principalId \\\n    --output tsv)\n\n# For user-assigned managed identity\nCLIENT_ID=$(az aks show \\\n    --name myAKSCluster \\\n    --resource-group myNetworkResourceGroup \\\n    --query identity.userAssignedIdentities.*.clientId \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Validating Azure Policy Constraint Templates in Kubernetes\nDESCRIPTION: This command retrieves the list of constraint templates applied to the Kubernetes cluster by Azure Policy. It helps confirm that policy assignments have been successfully synced to the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-policy.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get constrainttemplates\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster and Resources (Azure CLI)\nDESCRIPTION: Uses the az group delete command to remove the resource group, AKS cluster, Azure container registry, and all related resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\naz group delete --name myResourceGroup --yes --no-wait\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookbuyer Service Configuration\nDESCRIPTION: YAML configuration for the bookbuyer service account and deployment in Istio.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: bookbuyer\n  namespace: bookbuyer\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bookbuyer\n  namespace: bookbuyer\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: bookbuyer\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: bookbuyer\n        version: v1\n    spec:\n      serviceAccountName: bookbuyer\n      nodeSelector:\n        kubernetes.io/arch: amd64\n        kubernetes.io/os: linux\n      containers:\n        - name: bookbuyer\n          image: openservicemesh/bookbuyer:latest-main\n          imagePullPolicy: Always\n          command: [\"/bookbuyer\"]\n          env:\n            - name: \"BOOKSTORE_NAMESPACE\"\n              value: bookstore\n            - name: \"BOOKSTORE_SVC\"\n              value: bookstore\n```\n\n----------------------------------------\n\nTITLE: API Version Declaration in Bicep\nDESCRIPTION: Example of how to specify the API version for a Fleet resource in a Bicep template.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-preview-api-lifecycle.md#2025-04-21_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nresource symbolicname 'Microsoft.ContainerService/fleets@2024-05-02-preview' = {\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating NGINX Deployment with kubectl in Azure Kubernetes Service\nDESCRIPTION: This snippet creates an NGINX web server deployment with 3 replicas using kubectl. It demonstrates how to use the kubectl create deployment command to set up a basic web server in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create deployment nginx --image=nginx:latest --replicas=3\n```\n\n----------------------------------------\n\nTITLE: Complete GitHub Actions Workflow for AKS Node Upgrades\nDESCRIPTION: Complete YAML workflow configuration that combines Azure authentication and node upgrade commands using GitHub Actions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-upgrade-github-actions.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nname: Upgrade cluster node images\non:\n  schedule:\n    - cron: '0 3 */15 * *'\njobs:\n  upgrade-node:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Azure Login\n        uses: Azure/login@v1.4.6\n        with:\n          creds: ${{ secrets.AZURE_CREDENTIALS }}\n      - name: Upgrade node images\n        uses: Azure/cli@v1.0.8\n        with:\n          inlineScript: az aks upgrade --resource-group <resourceGroupName> --name <aksClusterName> --node-image-only --yes\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node Pool Resource ID in Azure CLI\nDESCRIPTION: This command retrieves the resource ID of a specific node pool in an AKS cluster, which is required for creating a snapshot.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-pool-snapshot.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nNODEPOOL_ID=$(az aks nodepool show --name nodepool1 --cluster-name myAKSCluster --resource-group myResourceGroup --query id -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status\nDESCRIPTION: Verifies the status of the pod using the kubectl describe command, ensuring the pod is running with the volume mounted.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod nginx-nfs\n```\n\n----------------------------------------\n\nTITLE: Adding Windows Node Pool to AKS Cluster\nDESCRIPTION: Command to add a Windows node pool to an existing AKS cluster. This creates a new node pool with Windows OS and a single node for running Windows containers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --cluster-name $CLUSTER_NAME \\\n    --os-type Windows \\\n    --name npwin \\\n    --node-count 1\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterResourcePlacement in Azure Kubernetes Fleet using YAML\nDESCRIPTION: This YAML snippet defines a ClusterResourcePlacement resource that distributes resources within 'test-namespace' across clusters labeled with 'env:prod' and 'env:test'. It uses a PickAll placement type and specifies cluster affinity rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/resource-override.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-example\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-namespace\n      version: v1\n  policy:\n    placementType: PickAll\n    affinity:\n      clusterAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  env: prod\n            - labelSelector:\n                matchLabels:\n                  env: test\n```\n\n----------------------------------------\n\nTITLE: Cloning the Quarkus Azure Sample Repository\nDESCRIPTION: Commands to clone the sample Java project repository, check out a specific dated version, and navigate to the AKS Quarkus directory.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Azure-Samples/quarkus-azure\ncd quarkus-azure\ngit checkout 2024-12-16\ncd aks-quarkus\n```\n\n----------------------------------------\n\nTITLE: Creating a Virtual Network with node and pod subnets for AKS\nDESCRIPTION: This script creates a virtual network with two subnets: one for AKS nodes and another for pods. It first creates a resource group, then creates the virtual network with address space 10.0.0.0/8, and finally adds the two required subnets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-dynamic-ip-allocation.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nRESOURCE_GROUP_NAME=\"myResourceGroup\"\nVNET_NAME=\"myVirtualNetwork\"\nLOCATION=\"westcentralus\"\nSUBNET_NAME_1=\"nodesubnet\"\nSUBNET_NAME_2=\"podsubnet\"\n\n# Create the resource group\naz group create --name $RESOURCE_GROUP_NAME --location $LOCATION\n\n# Create our two subnet network \naz network vnet create --resource-group $RESOURCE_GROUP_NAME --location $LOCATION --name $VNET_NAME --address-prefixes 10.0.0.0/8 -o none \naz network vnet subnet create --resource-group $RESOURCE_GROUP_NAME --vnet-name $VNET_NAME --name $SUBNET_NAME_1 --address-prefixes 10.240.0.0/16 -o none \naz network vnet subnet create --resource-group $RESOURCE_GROUP_NAME --vnet-name $VNET_NAME --name $SUBNET_NAME_2 --address-prefixes 10.241.0.0/16 -o none \n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with Toleration for GPU Nodes in Kubernetes\nDESCRIPTION: YAML configuration for a pod that includes a toleration matching the GPU taint, allowing it to be scheduled on the tainted GPU nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-advanced-scheduler.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: app\nspec:\n  containers:\n  - name: app\n    image: <your-workload>:gpu\n    resources:\n      requests:\n        cpu: 0.5\n        memory: 2Gi\n      limits:\n        cpu: 4.0\n        memory: 16Gi\n  tolerations:\n  - key: \"sku\"\n    operator: \"Equal\"\n    value: \"gpu\"\n    effect: \"NoSchedule\"\n```\n\n----------------------------------------\n\nTITLE: Patching WebLogic Domain CRD for Passwordless Configuration\nDESCRIPTION: Bash commands to patch the WebLogic domain CRD with auxiliary image configuration and remove ConfigMap, including version increment for restart.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nexport VERSION=$(kubectl -n ${WLS_DOMAIN_NS} get domain ${WLS_DOMAIN_UID} -o=jsonpath='{.spec.restartVersion}' | tr -d \"\\\"\")\nexport VERSION=$((VERSION+1))\n\nexport ACR_LOGIN_SERVER=$(az acr show --name ${ACR_NAME} --query \"loginServer\" --output tsv)\n\ncat <<EOF >patch-file.json\n[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/spec/restartVersion\",\n    \"value\": \"${VERSION}\"\n  },\n  {\n    \"op\": \"add\",\n    \"path\": \"/spec/configuration/model/auxiliaryImages\",\n    \"value\": [{\"image\": \"$ACR_LOGIN_SERVER/$IMAGE\", \"imagePullPolicy\": \"IfNotPresent\", \"sourceModelHome\": \"/auxiliary/models\", \"sourceWDTInstallHome\": \"/auxiliary/weblogic-deploy\"}]\n  },\n  {\n   \"op\": \"remove\",\n   \"path\": \"/spec/configuration/model/configMap\"\n  }\n]\nEOF\n\nkubectl -n ${WLS_DOMAIN_NS} patch domain ${WLS_DOMAIN_UID} \\\n    --type=json \\\n    --patch-file patch-file.json\n```\n\n----------------------------------------\n\nTITLE: Creating Directory Structure for MongoDB Client\nDESCRIPTION: Creates a new directory for the MongoDB Locust client application\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir mongodb-locust-client\ncd mongodb-locust-client\n```\n\n----------------------------------------\n\nTITLE: Prompting for Application Developer Password\nDESCRIPTION: This command prompts the user to enter a secure password for application developers and stores it in a variable for later use.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\necho \"Please enter the secure password for application developers: \" && read AAD_DEV_PW\n```\n\n----------------------------------------\n\nTITLE: Accessing Live Logs in Container Insights\nDESCRIPTION: Instructions for accessing real-time log data for various Kubernetes resources (Cluster, Nodes, Controllers, or Containers) through the Container Insights interface in Azure portal.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the [Azure portal](https://portal.azure.com/), navigate to your AKS cluster.\n1. Under **Monitoring**, select **Insights**.\n1. Select the *Cluster*, *Nodes*, *Controllers*, or *Containers* tab, and then select the object you want to view logs for.\n1. On the resource **Overview**, select **Live Logs**.\n```\n\n----------------------------------------\n\nTITLE: Creating a ServiceMonitor for vLLM Prometheus Metrics\nDESCRIPTION: This command deploys a ServiceMonitor resource in the kube-system namespace that defines how to scrape vLLM Prometheus metrics from the inference service endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-monitoring.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\ncat <<EOF | kubectl apply -n kube-system -f -\napiVersion: azmonitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: prometheus-kaito-monitor\nspec:\n  selector:\n    matchLabels:\n      App: qwen-2-5-coder\n  endpoints:\n  - port: http\n    interval: 30s\n    path: /metrics\n    scheme: http\nEOF\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Revision on AKS Cluster using Azure CLI\nDESCRIPTION: Command to determine which revision of Istio is deployed on an AKS cluster using the Azure CLI. This information is needed to properly name configuration resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-meshconfig.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --name $CLUSTER --resource-group $RESOURCE_GROUP --query 'serviceMeshProfile'\n```\n\n----------------------------------------\n\nTITLE: Listing AKS Node Pools\nDESCRIPTION: This command lists the node pools in the AKS cluster. It uses the Azure CLI to retrieve information about the node pools, which is necessary for identifying and deleting the GPU node pools provisioned by the KAITO deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator.md#2025-04-21_snippet_17\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks nodepool list --resource-group $AZURE_RESOURCE_GROUP --cluster-name $CLUSTER_NAME\n```\n\n----------------------------------------\n\nTITLE: AKS Cluster Nodes Output\nDESCRIPTION: Example output showing the single node in the AKS cluster with 'Ready' status, confirming that the cluster is operational.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_23\n\nLANGUAGE: output\nCODE:\n```\nNAME                                STATUS   ROLES   AGE     VERSION\naks-nodepool1-xxxxxxxx-yyyyyyyyyy   Ready    agent   76s     v1.28.9\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Azure Resources\nDESCRIPTION: Sets up environment variables for resource naming and configuration that will be used throughout the deployment process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-valkey-infrastructure.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nrandom=$(echo $RANDOM | tr '[0-9]' '[a-z]')\nexport MY_RESOURCE_GROUP_NAME=myResourceGroup-rg\nexport MY_LOCATION=eastus\nexport MY_ACR_REGISTRY=mydnsrandomname$(echo $random)\nexport MY_KEYVAULT_NAME=vault-$(echo $random)-kv\nexport MY_CLUSTER_NAME=cluster-aks\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterResourcePlacement\nDESCRIPTION: YAML configuration for setting up a PickAll placement policy\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nresourceSelectors:\n  - group: \"\"\n    kind: Namespace\n    version: v1          \n    name: test-ns\npolicy:\n  placementType: PickAll\n```\n\n----------------------------------------\n\nTITLE: Unregistering Control Plane Metrics Feature\nDESCRIPTION: Azure CLI command to unregister the AzureMonitorMetricsControlPlanePreview feature flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature unregister \"Microsoft.ContainerService\" --name \"AzureMonitorMetricsControlPlanePreview\"\n```\n\n----------------------------------------\n\nTITLE: Deploying the Python application\nDESCRIPTION: Command to apply the Python application deployment configuration to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ./deploy/python.yaml\n```\n\n----------------------------------------\n\nTITLE: Permanent Deletion Confirmation for Azure Resources\nDESCRIPTION: Displays a warning about soft delete and prompts the user to confirm permanent deletion of resources, allowing their names to be reused immediately.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_8\n\nLANGUAGE: output\nCODE:\n```\n[Warning]: These resources have soft delete enabled allowing them to be recovered for a period or time after deletion. During this period, their names may not be reused. In the future, you can use the argument --purge to skip this confirmation.\n\n? Would you like to permanently delete these resources instead, allowing their names to be reused? (y/N)\n```\n\n----------------------------------------\n\nTITLE: Adding Node Pool with Host Ports and Security Groups\nDESCRIPTION: Adds a new node pool with specified allowed host ports and application security groups\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-node-public-ips.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add \\\n  --resource-group <resourceGroup> \\\n  --cluster-name <aksClusterName> \\\n  --name <nodePoolName> \\\n  --allowed-host-ports 80/tcp,443/tcp,53/udp,40000-60000/tcp,40000-50000/udp \\\n  --asg-ids \"<asgId>,<asgId>\"\n```\n\n----------------------------------------\n\nTITLE: Executing Terraform Deployment Commands\nDESCRIPTION: Commands to initialize, format, and apply the Terraform configuration for deploying the infrastructure\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nterraform init\nterraform fmt\nterraform apply -var-file=\"mongodb.tfvars\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Individual Pods with kubectl delete\nDESCRIPTION: This kubectl command deletes individual pods when you're finished testing without removing the entire cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod pod-name\n```\n\n----------------------------------------\n\nTITLE: Creating Server Pod in Kubernetes\nDESCRIPTION: Command to create a server pod that listens on TCP port 80. This pod is labeled with 'app=server' which will be used in network policy rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_16\n\nLANGUAGE: console\nCODE:\n```\nkubectl run server -n demo --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 --labels=\"app=server\" --port=80 --command -- /agnhost serve-hostname --tcp --http=false --port \"80\"\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Cloud using Azure Developer CLI\nDESCRIPTION: Signs into an Azure account using the azd auth login command, which generates a device code for browser authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_1\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd auth login\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubectl for AKS Cluster Access\nDESCRIPTION: Command to retrieve and set the credentials for accessing the AKS cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks get-credentials --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}\n```\n\n----------------------------------------\n\nTITLE: Scaling User Node Pool to Zero - PowerShell\nDESCRIPTION: PowerShell command to scale a user node pool to zero nodes. This operation is only supported for user node pools, not system node pools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nUpdate-AzAksNodePool -Name <your node pool name> -ClusterName myAKSCluster -ResourceGroupName myResourceGroup -NodeCount 0\n```\n\n----------------------------------------\n\nTITLE: Creating Fleet Member with Update Group\nDESCRIPTION: Azure CLI command to create a new fleet member and assign it to a specific update group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-create-update-strategy.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz fleet member create \\\n    --resource-group $GROUP \\\n    --fleet-name $FLEET \\\n    --name member1 \\\n    --member-cluster-id $CLUSTERID \\\n    --update-group group-1a\n```\n\n----------------------------------------\n\nTITLE: Cleanup Resources using Azure CLI\nDESCRIPTION: Commands to remove RDP access by deleting the VM, public IP, and NSG rule using Azure CLI\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\n# Delete the virtual machine\naz vm delete \\\n --resource-group myResourceGroup \\\n --name myVM\n\naz network public-ip delete \\\n --resource-group myResourceGroup \\\n --name $PUBLIC_IP_ADDRESS\n\nCLUSTER_RG=$(az aks show --resource-group myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv)\nNSG_NAME=$(az network nsg list --resource-group $CLUSTER_RG --query [].name -o tsv)\naz network nsg rule delete \\\n --resource-group $CLUSTER_RG \\\n --nsg-name $NSG_NAME \\\n --name tempRDPAccess\n```\n\n----------------------------------------\n\nTITLE: ServiceMonitor Creation Confirmation\nDESCRIPTION: This output confirms that the ServiceMonitor for KAITO inference metrics has been successfully created in the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-monitoring.md#2025-04-21_snippet_5\n\nLANGUAGE: output\nCODE:\n```\nservicemonitor.azmonitoring.coreos.com/prometheus-kaito-monitor created\n```\n\n----------------------------------------\n\nTITLE: Basic WAF Log Query with Kusto\nDESCRIPTION: A Kusto query that retrieves Application Gateway Firewall logs to analyze security events. This query filters diagnostic logs to show WAF activity with a limit of 10 records.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_8\n\nLANGUAGE: kusto\nCODE:\n```\nAzureDiagnostics \n| where ResourceProvider == \"MICROSOFT.NETWORK\" and Category == \"ApplicationGatewayFirewallLog\"\n| limit 10\n```\n\n----------------------------------------\n\nTITLE: Disabling Istio Service Mesh\nDESCRIPTION: Azure CLI command to completely disable the Istio service mesh and ingresses while preserving the underlying cluster. Requires resource group name and cluster name as parameters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-ingress.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks mesh disable --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}\n```\n\n----------------------------------------\n\nTITLE: Configuring PickN Placement Type with Topology Spread Constraints\nDESCRIPTION: Example of a ClusterResourcePlacement using PickN placement type with topology spread constraints to distribute workloads across regions and update days for improved availability.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-resource-propagation.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-pickn-02\nspec:\n  resourceSelectors:\n    - ...\n  policy:\n    placementType: PickN\n    topologySpreadConstraints:\n    - maxSkew: 2\n      topologyKey: region\n      whenUnsatisfiable: DoNotSchedule\n    - maxSkew: 2\n      topologyKey: updateDay\n      whenUnsatisfiable: ScheduleAnyway\n```\n\n----------------------------------------\n\nTITLE: Building Container Image in Azure CLI\nDESCRIPTION: Azure CLI command to build and push the Liberty application container image to Azure Container Registry.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\ncd $BASE_DIR/java-app/target\n\naz acr build \\\n    --registry ${REGISTRY_NAME} \\\n    --image javaee-cafe:v1 \\\n    .\n```\n\n----------------------------------------\n\nTITLE: Validating Network Isolated Cluster Status in AKS\nDESCRIPTION: This snippet demonstrates how to use the 'az aks show' command to check if the network isolated cluster feature is enabled. It displays the cluster's properties, including the outboundType and artifactSource, which indicate the feature's status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-isolated.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks show --resource-group ${RESOURCE_GROUP} --name ${AKS_NAME}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n\"kubernetesVersion\": \"1.30.3\",\n\"name\": \"myAKSCluster\"\n\"type\": \"Microsoft.ContainerService/ManagedClusters\"\n\"properties\": {\n  ...\n  \"networkProfile\": {\n    ...\n    \"outboundType\": \"none\",\n    ...\n  },\n  ...\n  \"bootstrapProfile\": {\n    \"artifactSource\": \"Cache\",\n    \"containerRegistryId\": \"/subscriptions/my-subscription-id/my-node-resource-group-name/providers/Microsoft.ContainerRegistry/registries/my-registry-name\"\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription for Workload Identity Configuration\nDESCRIPTION: Sets the Azure subscription context and exports environment variables needed for workload identity configuration. These variables will be used in subsequent commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-identity-access.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport SUBSCRIPTION_ID=<subscription id>\nexport RESOURCE_GROUP=<resource group name>\nexport UAMI=<name for user assigned identity>\nexport KEYVAULT_NAME=<existing keyvault name>\nexport CLUSTER_NAME=<aks cluster name>\n\naz account set --subscription $SUBSCRIPTION_ID\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group for MongoDB on AKS\nDESCRIPTION: Creates an Azure resource group to contain all resources for the MongoDB on AKS deployment using the az group create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-mongodb-infrastructure.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name $MY_RESOURCE_GROUP_NAME --location $MY_LOCATION --output table\n```\n\n----------------------------------------\n\nTITLE: Example of ETag in Agent Pool Profiles\nDESCRIPTION: Shows an example of how an ETag appears in the agentPoolProfiles section of a response.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-etags.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"agentPoolProfiles\": [\n    {\"eTag\": \"5e5ffdce-356b-431b-b050-81b45eef2a12\"}\n]\n```\n\n----------------------------------------\n\nTITLE: Refreshing Microsoft.ContainerService Resource Provider\nDESCRIPTION: Command to refresh the registration of the Microsoft.ContainerService resource provider after feature flag registration is complete.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace \"Microsoft.ContainerService\"\n```\n\n----------------------------------------\n\nTITLE: Example Output of Kafka Deployment Status Check\nDESCRIPTION: Sample output showing the running Kafka pods, node pools, and cluster resources after successful deployment on AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_13\n\nLANGUAGE: output\nCODE:\n```\nNAME                                                     READY   STATUS    RESTARTS   AGE\npod/kafka-aks-cluster-broker-0                           1/1     Running   0          1d22h\npod/kafka-aks-cluster-broker-1                           1/1     Running   0          1d22h\npod/kafka-aks-cluster-broker-2                           1/1     Running   0          1d22h\npod/kafka-aks-cluster-controller-3                       1/1     Running   0          1d22h\npod/kafka-aks-cluster-controller-4                       1/1     Running   0          1d22h\npod/kafka-aks-cluster-controller-5                       1/1     Running   0          1d22h\npod/kafka-aks-cluster-cruise-control-844b69848-87rf6     1/1     Running   0          1d22h\npod/kafka-aks-cluster-entity-operator-6f949f6774-t8wql   2/2     Running   0          1d22h\n\nNAME                                        DESIRED REPLICAS   ROLES            NODEIDS\nkafkanodepool.kafka.strimzi.io/broker       3                  [\"broker\"]       [0,1,2]\nkafkanodepool.kafka.strimzi.io/controller   3                  [\"controller\"]   [3,4,5]\n\nNAME                                       DESIRED KAFKA REPLICAS   DESIRED ZK REPLICAS   READY   METADATA STATE   WARNINGS\nkafka.kafka.strimzi.io/kafka-aks-cluster\n```\n\n----------------------------------------\n\nTITLE: Getting Ingress IP Address\nDESCRIPTION: Kubernetes command to retrieve the public IP address of the Ingress controller.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get service -n app-routing-system nginx -o jsonpath=\"{.status.loadBalancer.ingress[0].ip}\"\n```\n\n----------------------------------------\n\nTITLE: Region Support Table in Markdown\nDESCRIPTION: Markdown table showing Azure regions with their support status for AKS and Arc for Kubernetes using checkmarks and x marks.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-overview.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Region | AKS support | Arc for Kubernetes support |\n| ------ | ----------- | -------------------------- |\n| `australiaeast` | :heavy_check_mark: | :heavy_check_mark: |\n| `australiasoutheast` | :heavy_check_mark: | :x: |\n```\n\n----------------------------------------\n\nTITLE: Checking for Nginx Ingress Controller Installation\nDESCRIPTION: Kubernetes command to check if ingress-nginx is installed on the cluster by looking for pods with the ingress-nginx label\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/security-bulletins/overview.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods --all-namespaces --selector app.kubernetes.io/name=ingress-nginx\n```\n\n----------------------------------------\n\nTITLE: Creating VM in AKS Cluster Subnet using Azure CLI\nDESCRIPTION: This snippet creates a virtual machine in the same subnet as the AKS cluster Windows Server nodes using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nPUBLIC_IP_ADDRESS=\"myVMPublicIP\"\n\naz vm create \\\n    --resource-group myResourceGroup \\\n    --name myVM \\\n    --image win2019datacenter \\\n    --admin-username azureuser \\\n    --admin-password {admin-password} \\\n    --subnet $SUBNET_ID \\\n    --nic-delete-option delete \\\n    --os-disk-delete-option delete \\\n    --nsg \"\" \\\n    --public-ip-address $PUBLIC_IP_ADDRESS \\\n    --query publicIpAddress -o tsv\n```\n\n----------------------------------------\n\nTITLE: Basic Azure Resource Graph Query for Fleet Update Runs\nDESCRIPTION: Simple KQL query to retrieve all update run data from Azure Resource Graph for the current Azure Subscription\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-monitor-update-runs.md#2025-04-21_snippet_0\n\nLANGUAGE: kusto\nCODE:\n```\naksresources\n| where type == \"microsoft.containerservice/fleets/updateruns\"\n```\n\n----------------------------------------\n\nTITLE: Manually removing images using ImageList CRD\nDESCRIPTION: Demonstrates how to manually trigger image removal by creating an ImageList custom resource in Kubernetes. This example removes a specific alpine image if it's unused.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: eraser.sh/v1\nkind: ImageList\nmetadata:\n  name: imagelist\nspec:\n  images:\n    - docker.io/library/alpine:3.7.3\nEOF\n```\n\n----------------------------------------\n\nTITLE: Sample Application Directory Structure\nDESCRIPTION: File structure layout of the WebLogic Cafe sample application, showing the Maven project organization including Java source files, resources, and web application configuration files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nweblogic-cafe\n├── pom.xml\n└── src\n    └── main\n        ├── java\n        │   └── cafe\n        │       ├── model\n        │       │   ├── CafeRepository.java\n        │       │   └── entity\n        │       │       └── Coffee.java\n        │       └── web\n        │           ├── rest\n        │           │   └── CafeResource.java\n        │           └── view\n        │               └── Cafe.java\n        ├── resources\n        │   ├── META-INF\n        │   │   └── persistence.xml\n        │   └── cafe\n        │       └── web\n        │           ├── messages.properties\n        │           └── messages_es.properties\n        └── webapp\n            ├── WEB-INF\n            │   ├── beans.xml\n            │   ├── faces-config.xml\n            │   └── web.xml\n            ├── index.xhtml\n            └── resources\n                └── components\n                    └── inputPrice.xhtml\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio CustomResourceDefinitions in Bash\nDESCRIPTION: This bash command identifies and deletes all Istio-related CustomResourceDefinitions (CRDs) from the Kubernetes cluster. It uses kubectl to list and remove the CRDs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-uninstall-addon.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete crd $(kubectl get crd -A | grep \"istio.io\" | awk '{print $1}')\n```\n\n----------------------------------------\n\nTITLE: Analyzing Update Run Properties JSON in Azure Kubernetes Fleet Manager\nDESCRIPTION: This JSON structure represents the properties payload for an update run in Azure Kubernetes Fleet Manager. It includes information about update status, node image selection, stages, groups, and individual cluster members. The structure can be used to build alerting queries and dashboards for monitoring fleet updates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-monitor-update-runs.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"status\": {\n        \"status\": {\n            \"state\": \"Pending\",\n            \"startTime\": \"2025-03-05T13:17:18.277945575Z\"\n        },\n        \"nodeImageSelection\": {\n            \"selectedNodeImageVersions\": [\n                {\n                    \"version\": \"AKSAzureLinux-V2gen2-202502.26.0\"\n                },\n                {\n                    \"version\": \"AKSWindows-2022-containerd-20348.3207.250214\"\n                }\n            ]\n        },\n        \"stages\": [\n            {\n                \"status\": {\n                    \"state\": \"Pending\",\n                    \"startTime\": \"2025-03-05T13:17:19.51815878Z\"\n                },\n                \"name\": \"prod\",\n                \"groups\": [\n                    {\n                        \"status\": {\n                            \"completedTime\": \"2025-03-05T13:48:59.049364234Z\",\n                            \"state\": \"Completed\",\n                            \"startTime\": \"2025-03-05T13:17:19.51815818Z\"\n                        },\n                        \"name\": \"canary\",\n                        \"members\": [\n                            {\n                                \"clusterResourceId\": \"/subscriptions/a22dfd3c-4a99-4d5a-9e2f-70ba55d59fbe/resourceGroups/rg-contoso-demo-01/providers/Microsoft.ContainerService/managedClusters/consoto-web-01\",\n                                \"status\": {\n                                    \"completedTime\": \"2025-03-05T13:31:09.441388843Z\",\n                                    \"state\": \"Completed\",\n                                    \"startTime\": \"2025-03-05T13:17:19.51815698Z\"\n                                },\n                                \"name\": \"member-consoto-web-01\",\n                                \"operationId\": \"b046b73e-8827-45a7-8696-d1da0815941b\",\n                                \"message\": \"Skipped upgrade of following agent pool(s): current node image version \\\"AKSWindows-2022-containerd-20348.3207.250214\\\" of agent pool \\\"win\\\" is already at or ahead of target upgrade version \\\"AKSWindows-2022-containerd-20348.3207.250214\\\".\"\n                            },\n                            {\n                                \"clusterResourceId\": \"/subscriptions/3a22dfd3c-4a99-4d5a-9e2f-70ba55d59fbe/resourceGroups/rg-contoso-demo-01/providers/Microsoft.ContainerService/managedClusters/consoto-web-02\",\n                                \"status\": {\n                                    \"completedTime\": \"2025-03-05T13:48:59.049364234Z\",\n                                    \"state\": \"Completed\",\n                                    \"startTime\": \"2025-03-05T13:31:09.495402941Z\"\n                                },\n                                \"name\": \"member-consoto-web-02\",\n                                \"operationId\": \"759816e9-d924-4ff4-a992-97aac2a2dddb\"\n                            }\n                        ]\n                    },\n                    {\n                        \"status\": {\n                            \"state\": \"Pending\",\n                            \"startTime\": \"2025-03-05T13:17:19.51826128Z\"\n                        },\n                        \"name\": \"apac\",\n                        \"members\": [\n                            {\n                                \"clusterResourceId\": \"/subscriptions/fe691fe1-d1ce-43b9-869a-73c4a14cdafc/resourceGroups/rg-contoso-demo-02/providers/Microsoft.ContainerService/managedClusters/consoto-app-01\",\n                                \"status\": {\n                                    \"state\": \"Pending\",\n                                    \"startTime\": \"2025-03-05T13:17:19.51826048Z\",\n                                    \"error\": {\n                                        \"message\": \"target upgrade node image version \\\"AKSAzureLinux-V2gen2-202502.26.0\\\" for agent pool pool is not available in region \\\"australiaeast\\\" \\n\",\n                                        \"code\": \"NodeImageVersionNotAvailable\"\n                                    }\n                                },\n                                \"name\": \"member-consoto-app-01\",\n                                \"message\": \"set member: member-consoto-app-01 to Pending due to failed validation err: target upgrade node image version \\\"AKSAzureLinux-V2gen2-202502.26.0\\\" for agent pool pool is not available in region \\\"australiaeast\\\" \\n\"\n                            }\n                        ]\n                    },\n                    {\n                        \"status\": {\n                            \"state\": \"Pending\",\n                            \"startTime\": \"2025-03-05T13:17:19.518346681Z\"\n                        },\n                        \"name\": \"europe\",\n                        \"members\": [\n                            {\n                                \"clusterResourceId\": \"/subscriptions/fe691fe1-d1ce-43b9-869a-73c4a14cdafc/resourceGroups/rg-contoso-demo-03/providers/Microsoft.ContainerService/managedClusters/contoso-db-01\",\n                                \"status\": {\n                                    \"state\": \"Pending\",\n                                    \"startTime\": \"2025-03-05T13:17:19.518345781Z\",\n                                    \"error\": {\n                                        \"message\": \"target upgrade node image version \\\"AKSAzureLinux-V2gen2-202502.26.0\\\" for agent pool pool is not available in region \\\"northeurope\\\" \\n\",\n                                        \"code\": \"NodeImageVersionNotAvailable\"\n                                    }\n                                },\n                                \"name\": \"member-contoso-db-01\",\n                                \"message\": \"set member: member-contoso-db-01 to Pending due to failed validation err: target upgrade node image version \\\"AKSAzureLinux-V2gen2-202502.26.0\\\" for agent pool pool is not available in region \\\"northeurope\\\" \\n\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    \"provisioningState\": \"Succeeded\",\n    \"managedClusterUpdate\": {\n        \"nodeImageSelection\": {\n            \"customNodeImageVersions\": [\n                {\n                    \"version\": \"AKSAzureLinux-V2-202502.26.0\"\n                },\n                {\n                    \"version\": \"AKSWindows-23H2-gen2-25398.1425.250214\"\n                }\n            ],\n            \"type\": \"Custom\"\n        },\n        \"upgrade\": {\n            \"type\": \"NodeImageOnly\"\n        }\n    },\n    \"updateStrategyId\": \"/subscriptions/00a3c596-fcb8-43ec-bf56-a2d19b4d3663/resourceGroups/flt-contoso-demo/providers/Microsoft.ContainerService/fleets/contoso-fleet-01/updateStrategies/safedeployment\",\n    \"strategy\": {\n        \"stages\": [\n            {\n                \"name\": \"prod\",\n                \"afterStageWaitInSeconds\": 0,\n                \"groups\": [\n                    {\n                        \"name\": \"canary\"\n                    },\n                    {\n                        \"name\": \"apac\"\n                    },\n                    {\n                        \"name\": \"europe\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ResourceOverride with Resource Selector in Azure Kubernetes Fleet Manager\nDESCRIPTION: This YAML snippet demonstrates how to create a ResourceOverride object with a resource selector to target a specific Deployment in a namespace. The resourceSelectors field specifies the group, kind, version, and name of the target resource.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/resource-override.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1alpha1\nkind: ResourceOverride\nmetadata:\n  name: example-resource-override\n  namespace: test-namespace\nspec:\n  resourceSelectors:\n    -  group: apps\n       kind: Deployment\n       version: v1\n       name: test-nginx\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Import-AzAksCredential in PowerShell\nDESCRIPTION: This snippet shows how to use the Import-AzAksCredential cmdlet to configure kubectl to connect to your Kubernetes cluster. It downloads credentials and configures the Kubernetes CLI to use them.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_6\n\nLANGUAGE: PowerShell\nCODE:\n```\nImport-AzAksCredential -ResourceGroupName myResourceGroup -Name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Checking ServiceMonitor Status\nDESCRIPTION: This command checks the status of the ServiceMonitor deployment to confirm it's running successfully.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-monitoring.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get servicemonitor prometheus-kaito-monitor -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Deploying Role Assignments Bicep Template with Azure CLI\nDESCRIPTION: This Azure CLI command deploys the Bicep template for creating role assignments. It specifies the resource group, Bicep file, and the user assigned identity principal ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group <resource-group> --template-file roleAssignments.bicep \\\n--parameters uamiPrincipalId=<user assigned identity prinicipal id>\n```\n\n----------------------------------------\n\nTITLE: Viewing CoreDNS Logs in AKS\nDESCRIPTION: Console command to view the CoreDNS debug logs after enabling logging, which helps diagnose DNS resolution problems in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/coredns-custom.md#2025-04-21_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl logs --namespace kube-system -l k8s-app=kube-dns\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group using PowerShell\nDESCRIPTION: Removes the resource group and all associated resources including the AKS cluster using PowerShell cmdlet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_9\n\nLANGUAGE: azurepowershell\nCODE:\n```\nRemove-AzResourceGroup -Name myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Setting Kubernetes Namespace Context\nDESCRIPTION: This command sets the current namespace context to 'pets' using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_15\n\nLANGUAGE: console\nCODE:\n```\nkubectl config set-context --current --namespace=pets\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Model Inference Service\nDESCRIPTION: This command sends a test request to the deployed inference service using the OpenAI API format, demonstrating how to interact with the model.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kaito-custom-inference-model.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl run -it --rm --restart=Never curl --image=curlimages/curl -- curl -X POST http://$SERVICE_IP/v1/completions \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"model\": \"bloom-1b7\",\n  \"prompt\": \"What sport should I play in rainy weather?\",\n  \"max_tokens\": 20\n}'\n```\n\n----------------------------------------\n\nTITLE: Checking UDP Buffer Settings in AKS Node\nDESCRIPTION: This snippet demonstrates how to check the current UDP buffer settings on an AKS node using kubectl and sysctl commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/troubleshoot-udp-packet-drops.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\nkubectl debug -it node/<node-name> --image=ubuntu --share-processes -- bash\nsysctl net.core.rmem_max net.core.rmem_default\n```\n\n----------------------------------------\n\nTITLE: Linking Virtual Network to Private DNS Zone with Azure CLI\nDESCRIPTION: Creates a link between the virtual network 'vnet-1' and the private DNS zone 'private.contoso.com' using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz network private-dns link vnet create \\\n    --resource-group test-rg \\\n    --name dns-link \\\n    --zone-name private.contoso.com \\\n    --virtual-network vnet-1 \\\n    --registration-enabled false\n```\n\n----------------------------------------\n\nTITLE: Running the Local Application for Telepresence Integration with AKS\nDESCRIPTION: Commands to install dependencies and start the development server for local testing. When executed, these commands enable the application to run locally while interacting with services in the AKS cluster through Telepresence.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-telepresence-aks.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run serve\n```\n\n----------------------------------------\n\nTITLE: Access Secrets with Admin Role\nDESCRIPTION: Command to list secrets in kube-system namespace with admin role permissions, showing successful access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secrets --namespace kube-system\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME                     TYPE                            DATA   AGE\nbootstrap-token-sw3rck   bootstrap.kubernetes.io/token   4      35h\nkonnectivity-certs       Opaque                          3      35h\n```\n\n----------------------------------------\n\nTITLE: Deleting Virtual Node Pod\nDESCRIPTION: Removes the aci-helloworld pod running on the virtual node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_17\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete -f virtual-node.yaml\n```\n\n----------------------------------------\n\nTITLE: Disabling Istio Service Mesh from AKS Cluster\nDESCRIPTION: This Azure CLI command removes the Istio service mesh add-on from your AKS cluster while keeping the cluster itself intact. It disables mesh functionality in the specified resource group and cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-metrics-managed-prometheus.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz aks mesh disable --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}\n```\n\n----------------------------------------\n\nTITLE: Verifying KEDA Scaler Functionality\nDESCRIPTION: This command describes the ScaledJob resource to verify that the KEDA scaler is working as intended. It shows events related to scaling activities.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-workload-identity.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl describe scaledjob myconsumer-scaledjob\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Deployment Directory\nDESCRIPTION: Command to navigate to the Deploy directory containing Kubernetes manifests for the sample application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ncd Deploy\n```\n\n----------------------------------------\n\nTITLE: OSM Traffic Target and HTTP Route Configuration\nDESCRIPTION: Example of OSM TrafficTarget and HTTPRouteGroup configurations that define access control between bookbuyer and bookstore services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nkind: TrafficTarget\napiVersion: access.smi-spec.io/v1alpha3\nmetadata:\n  name: bookstore\n  namespace: bookstore\nspec:\n  destination:\n    kind: ServiceAccount\n    name: bookstore\n    namespace: bookstore\n  rules:\n    - kind: HTTPRouteGroup\n      name: bookstore-service-routes\n      matches:\n        - buy-a-book\n        - books-bought\n  sources:\n    - kind: ServiceAccount\n      name: bookbuyer\n      namespace: bookbuyer\n---\napiVersion: specs.smi-spec.io/v1alpha4\nkind: HTTPRouteGroup\nmetadata:\n  name: bookstore-service-routes\n  namespace: bookstore\nspec:\n  matches:\n    - name: books-bought\n      pathRegex: /books-bought\n      methods:\n        - GET\n      headers:\n        - \"user-agent\": \".*-http-client/*.*\"\n        - \"client-app\": \"bookbuyer\"\n    - name: buy-a-book\n      pathRegex: \".*a-book.*new\"\n      methods:\n        - GET\n```\n\n----------------------------------------\n\nTITLE: Cleanup Resources using PowerShell\nDESCRIPTION: Commands to remove RDP access by deleting the VM, public IP, and NSG configurations using PowerShell\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/rdp.md#2025-04-21_snippet_12\n\nLANGUAGE: azurepowershell\nCODE:\n```\nRemove-AzVM -ResourceGroupName myResourceGroup -Name myVM\n\nRemove-AzPublicIpAddress -ResourceGroupName myResourceGroup -Name myPublicIP\n\n$CLUSTER_RG = (Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster).nodeResourceGroup\n$NSG_NAME = (Get-AzNetworkSecurityGroup -ResourceGroupName $CLUSTER_RG).Name\n\nGet-AzNetworkSecurityGroup -Name $NSG_NAME -ResourceGroupName $CLUSTER_RG | Remove-AzNetworkSecurityRuleConfig -Name tempRDPAccess | Set-AzNetworkSecurityGroup\n\nRemove-AzNetworkSecurityGroup -ResourceGroupName myResourceGroup -Name myVM\n```\n\n----------------------------------------\n\nTITLE: Downloading and Installing Microsoft SQL Server JDBC Driver in Bash\nDESCRIPTION: These commands download and install the Microsoft SQL Server JDBC driver for WebLogic.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nexport DRIVER_VERSION=\"10.2.1.jre8\"\nexport MSSQL_DRIVER_URL=\"https://repo.maven.apache.org/maven2/com/microsoft/sqlserver/mssql-jdbc/${DRIVER_VERSION}/mssql-jdbc-${DRIVER_VERSION}.jar\"\n\nmkdir ${BASE_DIR}/mystaging/models/wlsdeploy/externalJDBCLibraries\ncurl -m 120 -fL ${MSSQL_DRIVER_URL} -o ${BASE_DIR}/mystaging/models/wlsdeploy/externalJDBCLibraries/mssql-jdbc-${DRIVER_VERSION}.jar\n```\n\n----------------------------------------\n\nTITLE: Updating Azure CLI Extension for Kubernetes Extensions\nDESCRIPTION: Updates the k8s-extension Azure CLI extension to the latest version if it's already installed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name k8s-extension\n```\n\n----------------------------------------\n\nTITLE: Confirmation Prompt for Resource Deletion in Azure CLI\nDESCRIPTION: Shows the confirmation prompt displayed when deleting resources with 'azd down'. It asks the user to confirm the deletion of a specified number of resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_7\n\nLANGUAGE: output\nCODE:\n```\n? Total resources to delete: 14, are you sure you want to continue? (y/N)\n```\n\n----------------------------------------\n\nTITLE: Deleting KAITO Workspace\nDESCRIPTION: This command deletes the KAITO workspace, cleaning up the deployed resources when they are no longer needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kaito-custom-inference-model.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete workspace workspace-custom-llm\n```\n\n----------------------------------------\n\nTITLE: Verifying Kafka Deployment on AKS using kubectl\nDESCRIPTION: Command to check that all KafkaNodePools, Kafka cluster resources, and their corresponding pods are created and running in the Kafka namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-deploy.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods,kafkanodepool,kafka -n kafka\n```\n\n----------------------------------------\n\nTITLE: Configuring UDP Buffer Size for AKS Node Pool\nDESCRIPTION: This JSON configuration file sets custom UDP buffer sizes for a new AKS node pool to mitigate packet drops.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/troubleshoot-udp-packet-drops.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"sysctls\": {\n        \"netCoreRmemMax\": 1572864,\n        \"netCoreRmemDefault\": 1572864\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Istiod Logs\nDESCRIPTION: Command to verify Istiod logs after certificate synchronization and expected output showing successful certificate update.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs deploy/istiod-asm-1-17 -c discovery -n aks-istio-system\n```\n\nLANGUAGE: bash\nCODE:\n```\n2023-11-07T06:42:00.287916Z     info    Updating new ROOT-CA\n2023-11-07T06:42:00.287928Z     info    update root cert and generate new dns certs\n2023-11-07T06:42:00.288254Z     info    Update trust anchor with new root cert\n2023-11-07T06:42:00.288279Z     info    trustBundle     updating Source IstioCA with certs\n2023-11-07T06:42:00.288298Z     info    Istiod has detected the newly added intermediate CA and updated its key and certs accordingly\n2023-11-07T06:42:00.288303Z     info    Istiod certificates are reloaded\n```\n\n----------------------------------------\n\nTITLE: kubectl Credentials Configuration Output\nDESCRIPTION: Example output showing the successful configuration of kubectl credentials for the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_20\n\nLANGUAGE: output\nCODE:\n```\nMerged \"ejb010718aks-admin\" as current context in /Users/edburns/.kube/config\n```\n\n----------------------------------------\n\nTITLE: Deploying Cosmos DB Query Function with OpenFaaS\nDESCRIPTION: Command to deploy a pre-built Docker image as an OpenFaaS function that can query the Azure Cosmos DB instance, passing the connection string as an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nfaas-cli deploy -g http://52.186.64.52:8080 --image=shanepeckham/openfaascosmos --name=cosmos-query --env=NODE_ENV=$COSMOS\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Pod Status with CloudNativePG Operator\nDESCRIPTION: Uses the kubectl cnpg status command to check the status of PostgreSQL pods in the cluster, showing information about primary and replica roles.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nkubectl cnpg status $PG_PRIMARY_CLUSTER_NAME --namespace $PG_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Scaling User Node Pool to Zero - Azure CLI\nDESCRIPTION: Command to scale a user node pool to zero nodes using Azure CLI. This operation is only supported for user node pools, not system node pools.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/scale-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool scale --name <your node pool name> --cluster-name myAKSCluster --resource-group myResourceGroup  --node-count 0\n```\n\n----------------------------------------\n\nTITLE: Retrieving Detailed Staged Rollout Status in AKS\nDESCRIPTION: This command fetches the detailed YAML output of a ClusterStagedUpdateRun resource named 'example-staged-update-run' using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get clusterStagedUpdateRun example-staged-update-run -o yaml\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Manifest using kubectl in Bash\nDESCRIPTION: This command applies the Kubernetes manifest file 'sample.yaml' to the cluster using kubectl. It creates the Deployment and Service defined in the YAML file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-portal.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ServiceAccount with Workload Identity\nDESCRIPTION: Creates a Kubernetes ServiceAccount and annotates it with the managed identity client ID to enable workload identity federation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: ${MANAGED_IDENTITY_CLIENT_ID}\n  name: ${SERVICE_ACCOUNT_NAME}\n  namespace: ${SERVICE_ACCOUNT_NAMESPACE}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Best Practice Note - Networking Modes\nDESCRIPTION: Guidance note specifying that Windows node pools only support Azure Container Networking Interface (Azure CNI) networking.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/windows-best-practices.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> **Best practice guidance**\n>\n> AKS clusters with Windows node pools only support Azure Container Networking Interface (Azure CNI) and use it by default.\n```\n\n----------------------------------------\n\nTITLE: Failed Envelope ConfigMap Placement Status\nDESCRIPTION: Example of a failed placement status showing error details and failed resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-envelope-reserved-resources.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nstatus:\nconditions:\n- lastTransitionTime: \"2023-12-06T00:09:53Z\"\n  message: found all the clusters needed as specified by the scheduling policy\n  observedGeneration: 2\n  reason: SchedulingPolicyFulfilled\n  status: \"True\"\n  type: ClusterResourcePlacementScheduled\n- lastTransitionTime: \"2023-12-06T00:09:58Z\"\n  message: All 1 cluster(s) are synchronized to the latest resources on the hub\n  cluster\n  observedGeneration: 2\n  reason: SynchronizeSucceeded\n  status: \"True\"\n  type: ClusterResourcePlacementSynchronized\n- lastTransitionTime: \"2023-12-06T00:09:58Z\"\n  message: Failed to apply manifests to 1 clusters, please check the `failedPlacements`\n  status\n  observedGeneration: 2\n  reason: ApplyFailed\n  status: \"False\"\n  type: ClusterResourcePlacementApplied\n  placementStatuses:\n- clusterName: kind-cluster-1\n  conditions:\n    - lastTransitionTime: \"2023-12-06T00:09:53Z\"\n      message: 'Successfully scheduled resources for placement in kind-cluster-1:\n      picked by scheduling policy'\n      observedGeneration: 2\n      reason: ScheduleSucceeded\n      status: \"True\"\n      type: ResourceScheduled\n    - lastTransitionTime: \"2023-12-06T00:09:58Z\"\n      message: Successfully Synchronized work(s) for placement\n      observedGeneration: 2\n      reason: WorkSynchronizeSucceeded\n      status: \"True\"\n      type: WorkSynchronized\n    - lastTransitionTime: \"2023-12-06T00:09:58Z\"\n      message: Failed to apply manifests, please check the `failedPlacements` status\n      observedGeneration: 2\n      reason: ApplyFailed\n      status: \"False\"\n      type: ResourceApplied\n      failedPlacements:\n    - condition:\n      lastTransitionTime: \"2023-12-06T00:09:53Z\"\n      message: 'Failed to apply manifest: namespaces \"app\" not found'\n      reason: AppliedManifestFailedReason\n      status: \"False\"\n      type: Applied\n      envelope:\n      name: envelop-configmap\n      namespace: test-ns\n      type: ConfigMap\n      kind: ResourceQuota\n      name: mem-cpu-demo\n      namespace: app\n      version: v1\n      selectedResources:\n- kind: Namespace\n  name: test-ns\n  version: v1\n- kind: ConfigMap\n  name: envelop-configmap\n  namespace: test-ns\n  version: v1\n```\n\n----------------------------------------\n\nTITLE: Setting Up Port Forwarding for Hubble UI\nDESCRIPTION: Command to establish port forwarding from local port 12000 to the Hubble UI service in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_18\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl -n kube-system port-forward svc/hubble-ui 12000:80\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group with Azure CLI\nDESCRIPTION: This command creates an Azure resource group using the Azure CLI. It specifies the name and location of the resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name <resource-group> --location <location>\n```\n\n----------------------------------------\n\nTITLE: Removing Cached Tokens in kubelogin\nDESCRIPTION: Command to clean up cached authentication tokens from the kubelogin default directory. This is useful for troubleshooting or refreshing authentication.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubelogin-authentication.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubelogin remove-tokens\n```\n\n----------------------------------------\n\nTITLE: Retrieving External IP for MongoDB Express Service in Bash\nDESCRIPTION: This Bash script continuously checks for the external IP address of the MongoDB Express service in AKS. It uses kubectl to query the service information and extracts the LoadBalancer IP when available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-mongodb-cluster.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nwhile true; do\nIP=$(kubectl get service mongo-express -n ${AKS_MONGODB_NAMESPACE} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\nif [[ -n $IP ]]; then\n  kubectl get service mongo-express -n ${AKS_MONGODB_NAMESPACE}\n  break\nelse\n  echo \"Waiting for LoadBalancer IP...\"\n  sleep 5\nfi\ndone\n```\n\n----------------------------------------\n\nTITLE: Retrieving identity resource ID in Azure CLI\nDESCRIPTION: This command retrieves the resource ID of a specified user-assigned managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_7\n\nLANGUAGE: Azure CLI\nCODE:\n```\nIDENTITY_RESOURCE_ID=$(az identity show --name MyIdentity --resource-group MyResourceGroup --query 'id' -o tsv)\necho $IDENTITY_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Configuring Internal Load Balancer with Specific IP (LoadBalancerIP)\nDESCRIPTION: YAML configuration showing how to specify a static IP address using the deprecated LoadBalancerIP property in the service specification.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/internal-lb.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: internal-app\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\nspec:\n  type: LoadBalancer\n  loadBalancerIP: 10.240.0.25\n  ports:\n  - port: 80\n  selector:\n    app: internal-app\n```\n\n----------------------------------------\n\nTITLE: Cloning an AKS Store Demo Template with Azure Developer CLI\nDESCRIPTION: Initializes a new project by cloning the AKS store demo template from the Azure-Samples GitHub repository using azd init command with the template parameter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_0\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd init --template Azure-Samples/aks-store-demo\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Monitor Log Analytics Workspace\nDESCRIPTION: Sets up a Log Analytics workspace for detailed monitoring and logging capabilities.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nexport ALA_PRIMARY=\"ala-${LOCAL_NAME}-${SUFFIX}\"\n\nexport ALA_RESOURCE_ID=$(az monitor log-analytics workspace create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --workspace-name $ALA_PRIMARY \\\n    --location $PRIMARY_CLUSTER_REGION \\\n    --query \"id\" \\\n    --output tsv)\n\necho $ALA_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: SSH Re-enable Operation Output Message\nDESCRIPTION: This is the output message displayed when re-enabling SSH access on an AKS cluster, indicating that the operation will only take effect after all nodes are reimaged.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_8\n\nLANGUAGE: output\nCODE:\n```\nOnly after all the nodes are reimaged, does the disable/enable SSH Access operation take effect.\"\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group\nDESCRIPTION: Creates a new Azure resource group to contain the AKS cluster and related resources using the az group create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name $RG_NAME --location $LOCATION\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kubernetes Cluster\nDESCRIPTION: Retrieves and displays the status of all pods in the current namespace to verify that they are running properly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Pod with GPU Toleration\nDESCRIPTION: This YAML manifest defines a Kubernetes pod that can be scheduled on GPU nodes. It includes a toleration for the 'sku=gpu:NoSchedule' taint, allowing it to run on nodes with this taint applied.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-node-pools.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mypod\nspec:\n  containers:\n - image: mcr.microsoft.com/oss/nginx/nginx:1.15.9-alpine\n    name: mypod\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 1\n        memory: 2G\n  tolerations:\n - key: \"sku\"\n    operator: \"Equal\"\n    value: \"gpu\"\n    effect: \"NoSchedule\"\n```\n\n----------------------------------------\n\nTITLE: Authorizing Identity Access\nDESCRIPTION: Sets up identity authorization and role assignment for accessing the Kubernetes Fleet hub cluster\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/access-fleet-hub-cluster-kubernetes-api.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport IDENTITY=$(az ad signed-in-user show --query \"id\" --output tsv)\nexport ROLE=\"Azure Kubernetes Fleet Manager RBAC Cluster Admin\"\naz role assignment create --role \"${ROLE}\" --assignee ${IDENTITY} --scope ${FLEET_ID}\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod and Node Distribution in Kubernetes Cluster\nDESCRIPTION: These commands are used to verify the distribution of Valkey pods across different nodes and zones in the Kubernetes cluster. They display detailed information about pod placement and node zones.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n valkey -o wide\nkubectl get node -o custom-columns=Name:.metadata.name,Zone:\".metadata.labels.topology\\.kubernetes\\.io/zone\"\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for AKS Deployment\nDESCRIPTION: Commands to create a resource group for deploying AKS with static CIDR allocation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-static-block-allocation.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nresourceGroup=\"myResourceGroup\"\nvnet=\"myVirtualNetwork\"\nlocation=\"myRegion\"\n\n# Create the resource group\naz group create --name $resourceGroup --location $location\n```\n\n----------------------------------------\n\nTITLE: Customizing Deployment Variables Script\nDESCRIPTION: This bash script defines the variables needed for deploying the Yelb application to AKS. It includes Azure subscription details, resource names, DNS configuration, ingress controller settings, and Key Vault parameters for TLS certificates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Azure subscription and tenant\nRESOURCE_GROUP_NAME=\"<aks-resource-group>\"\nSUBSCRIPTION_ID=\"$(az account show --query id --output tsv)\"\nSUBSCRIPTION_NAME=\"$(az account show --query name --output tsv)\"\nTENANT_ID=\"$(az account show --query tenantId --output tsv)\"\nAKS_CLUSTER_NAME=\"<aks-name>\"\nAGW_NAME=\"<application-gateway-name>\"\nAGW_PUBLIC_IP_NAME=\"<application-gateway-public-ip-name>\"\nDNS_ZONE_NAME=\"<your-azure-dns-zone-name-eg-contoso.com>\"\nDNS_ZONE_RESOURCE_GROUP_NAME=\"<your-azure-dns-zone-resource-group-name>\"\nDNS_ZONE_SUBSCRIPTION_ID=\"<your-azure-dns-zone-subscription-id>\"\n\n# NGINX ingress controller installed via Helm\nNGINX_NAMESPACE=\"ingress-basic\"\nNGINX_REPO_NAME=\"ingress-nginx\"\nNGINX_REPO_URL=\"https://kubernetes.github.io/ingress-nginx\"\nNGINX_CHART_NAME=\"ingress-nginx\"\nNGINX_RELEASE_NAME=\"ingress-nginx\"\nNGINX_REPLICA_COUNT=3\n\n# Specify the ingress class name for the ingress controller\n# - nginx: Unmanaged NGINX ingress controller installed via Helm\n# - webapprouting.kubernetes.azure.com: Managed NGINX ingress controller installed via AKS application routing add-on\nINGRESS_CLASS_NAME=\"webapprouting.kubernetes.azure.com\"\n\n# Subdomain of the Yelb UI service\nSUBDOMAIN=\"<yelb-application-subdomain>\"\n\n# URL of the Yelb UI service\nURL=\"https://$SUBDOMAIN.$DNS_ZONE_NAME\"\n\n# Secret provider class\nKEY_VAULT_NAME=\"<key-vault-name>\"\nKEY_VAULT_CERTIFICATE_NAME=\"<key-vault-resource-group-name>\"\nKEY_VAULT_SECRET_PROVIDER_IDENTITY_CLIENT_ID=\"<key-vault-secret-provider-identity-client-id>\"\nTLS_SECRET_NAME=\"yelb-tls-secret\"\nNAMESPACE=\"yelb\"\n```\n\n----------------------------------------\n\nTITLE: Monitoring Service External IP in AKS using kubectl in PowerShell\nDESCRIPTION: This command monitors the status of the deployed service, specifically watching for the assignment of an external IP address. It's useful for determining when the service is fully provisioned and accessible.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_11\n\nLANGUAGE: PowerShell\nCODE:\n```\nkubectl get service sample --watch\n```\n\n----------------------------------------\n\nTITLE: Adding Windows Server 2019 Node Pool\nDESCRIPTION: Creates a Windows Server 2019 node pool in the AKS cluster, supported until Kubernetes version 1.32.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzAksNodePool -ResourceGroupName myResourceGroup `\n    -ClusterName myAKSCluster `\n    -VmSetType VirtualMachineScaleSets `\n    -OsType Windows `\n    -OsSKU Windows2019 `\n    -Name npwin\n```\n\n----------------------------------------\n\nTITLE: Removing OSM Resources from AKS Cluster\nDESCRIPTION: This command uninstalls the remaining Open Service Mesh resources from the cluster using the osm uninstall cluster-wide-resources command. It's important to run this after disabling the add-on to prevent issues with future OSM add-on installations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-uninstall-add-on.md#2025-04-21_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nosm uninstall cluster-wide-resources\n```\n\n----------------------------------------\n\nTITLE: Checking Pods in the Privileged Namespace\nDESCRIPTION: Confirms that pods are running in the privileged namespace since the security policy allows pods to run even if they don't meet strict security standards.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-psa.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get pods --namespace test-privileged\n```\n\n----------------------------------------\n\nTITLE: Checking SSH Service Status with Systemctl\nDESCRIPTION: This command checks the status of the SSH service on a node using systemctl. It can be run after accessing the node through node-shell to verify if SSH is enabled or disabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/manage-ssh-node-access.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl status ssh\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Managed Grafana Instance\nDESCRIPTION: Creates an Azure Managed Grafana instance with zone redundancy enabled. Uses environment variables for naming and tagging.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nexport GRAFANA_PRIMARY=\"grafana-${LOCAL_NAME}-${SUFFIX}\"\n\nexport GRAFANA_RESOURCE_ID=$(az grafana create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $GRAFANA_PRIMARY \\\n    --location $PRIMARY_CLUSTER_REGION \\\n    --zone-redundancy Enabled \\\n    --tags $TAGS \\\n    --query \"id\" \\\n    --output tsv)\n\necho $GRAFANA_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Monitoring Options Comparison Table\nDESCRIPTION: Markdown table comparing monitoring capabilities between EKS and AKS, including native monitoring solutions and third-party integrations.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-understand.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| **Monitoring Options** | **EKS** | **AKS** |\n| -----------------------| --------| ------- |\n| Native Monitoring | [Amazon CloudWatch][aws-cloudwatch] | [Azure Monitor](/azure/aks/monitor-aks) |\n| Managed Prometheus and Grafana | [Amazon Managed Service for Prometheus][aws-prometheus] and [Amazon Managed Grafana][aws-grafana] | [Azure Monitor managed service for Prometheus][azure-prometheus] and [Azure Managed Grafana][azure-grafana] |\n| Datadog | [Yes](https://docs.datadoghq.com/integrations/amazon_eks/) | [Yes](https://docs.datadoghq.com/integrations/azure_container_service/) |\n| Dynatrace | [Yes](https://docs.dynatrace.com/docs/ingest-from/amazon-web-services/integrate-into-aws/aws-eks) | [Yes](https://docs.dynatrace.com/docs/ingest-from/microsoft-azure-services/azure-integrations/azure-aks) |\n```\n\n----------------------------------------\n\nTITLE: Installing OSM Binary and Configuring PATH in PowerShell\nDESCRIPTION: Creates an OSM directory in C: drive, moves the extracted OSM executable to that location, and adds the directory to the system PATH. Updates both the permanent user PATH and the current shell's PATH variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/servicemesh/osm/open-service-mesh-binary-install-windows.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n# Copy osm.exe to C:\\OSM\nNew-Item -ItemType Directory -Force -Path \"C:\\OSM\"\nMove-Item -Path .\\windows-amd64\\osm.exe -Destination \"C:\\OSM\\\"\n\n# Add C:\\OSM to PATH.\n# Make the new PATH permanently available for the current User\n$USER_PATH = [environment]::GetEnvironmentVariable(\"PATH\", \"User\") + \";C:\\OSM\\\"\n[environment]::SetEnvironmentVariable(\"PATH\", $USER_PATH, \"User\")\n# Make the new PATH immediately available in the current shell\n$env:PATH += \";C:\\OSM\\\"\n```\n\n----------------------------------------\n\nTITLE: Analyzing Blocked Requests by URI with Kusto\nDESCRIPTION: A Kusto query that summarizes WAF-blocked requests by URI over time. This visualization helps identify which resources are being targeted by potential attackers.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_11\n\nLANGUAGE: kusto\nCODE:\n```\nAzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.NETWORK\" and Category == \"ApplicationGatewayFirewallLog\"\n| summarize count() by requestUri_s, bin(TimeGenerated, 1m)\n| render timechart\n```\n\n----------------------------------------\n\nTITLE: Getting the KAITO Inference Service IP Address\nDESCRIPTION: These commands retrieve and store the cluster IP address of the deployed inference service, which will be needed for accessing the service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-monitoring.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nexport SERVICE_IP=$(kubectl get svc workspace-qwen-2-5-coder-7b-instruct -o jsonpath='{.spec.clusterIP}')\n\necho $SERVICE_IP\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Service Mesh Add-on with Custom CA Certificates\nDESCRIPTION: This command enables the Istio service mesh add-on on an AKS cluster, specifying custom CA certificates stored in Azure Key Vault for use by Istio.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-plugin-ca.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz aks mesh enable --resource-group $RESOURCE_GROUP --name $CLUSTER \\\n--root-cert-object-name root-cert \\\n--ca-cert-object-name ca-cert \\\n--ca-key-object-name ca-key \\\n--cert-chain-object-name cert-chain \\\n--key-vault-id /subscriptions/$SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.KeyVault/vaults/$AKV_NAME\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directive\nDESCRIPTION: Include directive for change value callout content from external file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-about.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [change value callout](./includes/keda/change-value-callout.md)]\n```\n\n----------------------------------------\n\nTITLE: Rolling Back Namespace Label to Previous Istio Revision\nDESCRIPTION: This command relabels the default namespace to use the previous Istio revision asm-1-23 for rollback.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label namespace default istio.io/rev=asm-1-23 --overwrite\n```\n\n----------------------------------------\n\nTITLE: Setting Resource Group and AKS Cluster Name Variables\nDESCRIPTION: Sets environment variables for the resource group and retrieves the AKS cluster name using the Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set the resource group variable\nRG_NAME=myResourceGroup\n\n# Set the AKS cluster resource group variable\nAKS_NAME=$(az resource list --resource-group $RG_NAME --resource-type Microsoft.ContainerService/managedClusters --query \"[0].name\" -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Updating an Azure Machine Learning Extension Instance\nDESCRIPTION: Updates an existing Azure Machine Learning extension instance on an AKS cluster, modifying settings like auto-upgrade behavior.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-extensions-az-cli.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension update --name azureml --extension-type Microsoft.AzureML.Kubernetes --scope cluster --cluster-name <clusterName> --resource-group <resourceGroupName> --cluster-type managedClusters\n```\n\n----------------------------------------\n\nTITLE: Best Practice Note - Windows OS Version\nDESCRIPTION: Highlighted guidance note recommending Windows Server 2022 for Windows node pools on AKS due to improved security and performance features.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/windows-best-practices.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> **Best practice guidance**\n>\n> Windows Server 2022 provides improved security and performance and is the recommended OS for Windows node pools on AKS. AKS uses Windows Server 2022 as the host OS version and only supports process isolation.\n```\n\n----------------------------------------\n\nTITLE: Applying Updated YAML Configuration\nDESCRIPTION: Bash command for applying updated YAML configurations to existing Kubernetes workloads using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-windows-os.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f <filename>\n```\n\n----------------------------------------\n\nTITLE: Monitoring Store-Front Service External IP\nDESCRIPTION: This command monitors the external IP assignment for the store-front service using kubectl with the --watch flag.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_17\n\nLANGUAGE: console\nCODE:\n```\nkubectl get service store-front --watch\n```\n\n----------------------------------------\n\nTITLE: Creating Dockerfile and requirements.txt for Valkey Client\nDESCRIPTION: This snippet shows how to create a Dockerfile and requirements.txt file for the Valkey client application using bash commands. The Dockerfile sets up a Python environment and installs necessary dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-valkey-cluster.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir valkey-client\ncd valkey-client\n\ncat > Dockerfile <<EOF\nFROM python:3.10-slim-bullseye\nCOPY requirements.txt .\nCOPY locustfile.py .\nRUN pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt\nEOF\n\ncat > requirements.txt <<EOF\nvalkey\nlocust\nEOF\n```\n\n----------------------------------------\n\nTITLE: Absolute Monthly Schedule JSON Configuration for AKS Upgrades\nDESCRIPTION: This JSON snippet shows how to configure an absolute monthly schedule that runs every three months on the first day of the month.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n\"schedule\": {\n    \"absoluteMonthly\": {\n        \"intervalMonths\": 3,\n        \"dayOfMonth\": 1\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group and Container Registry with PowerShell\nDESCRIPTION: Commands to create a resource group and ACR instance using PowerShell. Requires Azure PowerShell version 5.9.0 or later.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-acr.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzResourceGroup -Name myResourceGroup -Location westus2\n$rand=New-Object System.Random\n$RAND=$rand.Next()\n$ACRNAME=\"myregistry$RAND\"\nNew-AzContainerRegistry -ResourceGroupName myResourceGroup -Name $ACRNAME -Location westus2 -Sku Basic\n```\n\n----------------------------------------\n\nTITLE: Running Liberty Application Locally in Bash\nDESCRIPTION: Commands to start and test the Liberty application locally using Maven plugin with Azure SQL Database connection string configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ncd $BASE_DIR/java-app\n\n# The value of environment variable AZURE_SQL_CONNECTIONSTRING is read by configuration variable `azure.sql.connectionstring` in server.xml\nexport AZURE_SQL_CONNECTIONSTRING=\"jdbc:sqlserver://$SQL_SERVER_NAME.database.windows.net:1433;databaseName=$DB_NAME;authentication=ActiveDirectoryDefault\"\nmvn liberty:run\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kubernetes Secret\nDESCRIPTION: Command to decode and examine Kubernetes secrets using kubectl\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n ${AKS_NS} get secret <secret-name> -o jsonpath=\"{.data.AZURE_POSTGRESQL_USERNAME}\" | base64 --decode\n```\n\n----------------------------------------\n\nTITLE: Getting Node.js service details\nDESCRIPTION: Command to retrieve service information for the Node.js application, including its external IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc nodeapp\n```\n\n----------------------------------------\n\nTITLE: Applying ClusterRole in Kubernetes using kubectl\nDESCRIPTION: This command applies the ClusterRole defined in the YAML file to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_10\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f psp-deny-privileged-clusterrole.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kubernetes with kubectl\nDESCRIPTION: Uses kubectl to verify that all pods are in the 'Running' state before proceeding with testing the application. This command lists all pods in the current namespace with their status information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-portal.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Pod Volume Configuration with PVC\nDESCRIPTION: YAML snippet showing how to configure a pod to use a PersistentVolumeClaim as a volume\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n...\n  volumes:\n  - name: azure\n    persistentVolumeClaim:\n      claimName: azurefile\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with PowerShell\nDESCRIPTION: Creates a new Azure resource group named 'myResourceGroup' in the East US region using Azure PowerShell cmdlet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_6\n\nLANGUAGE: azurepowershell\nCODE:\n```\nNew-AzResourceGroup -Name myResourceGroup -Location eastus\n```\n\n----------------------------------------\n\nTITLE: Restricting Inbound Traffic by IP Range for Kubernetes LoadBalancer Service in YAML\nDESCRIPTION: YAML configuration for a Kubernetes service of type LoadBalancer that restricts inbound traffic to specific IP ranges using loadBalancerSourceRanges. This allows you to limit access to your service to only specified external IP addresses or internal subnets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/load-balancer-standard.md#2025-04-21_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: azure-vote-front\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n  selector:\n    app: azure-vote-front\n  loadBalancerSourceRanges:\n  - MY_EXTERNAL_IP_RANGE\n```\n\n----------------------------------------\n\nTITLE: Filtering Fleet Update Runs by Fleet Manager Instance\nDESCRIPTION: KQL query that filters update runs for a specific Fleet Manager instance by adding a where clause with the fleet name\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-monitor-update-runs.md#2025-04-21_snippet_1\n\nLANGUAGE: kusto\nCODE:\n```\naksresources\n| where type == \"microsoft.containerservice/fleets/updateruns\"\n| where id contains ('Microsoft.ContainerService/fleets/your-fleet-name')\n```\n\n----------------------------------------\n\nTITLE: Successful Envelope ConfigMap Placement Status\nDESCRIPTION: Example of a successful placement status showing synchronization and application across clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-envelope-reserved-resources.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstatus:\nconditions:\n- lastTransitionTime: \"2023-11-30T19:54:13Z\"\n  message: found all the clusters needed as specified by the scheduling policy\n  observedGeneration: 2\n  reason: SchedulingPolicyFulfilled\n  status: \"True\"\n  type: ClusterResourcePlacementScheduled\n- lastTransitionTime: \"2023-11-30T19:54:18Z\"\n  message: All 1 cluster(s) are synchronized to the latest resources on the hub\n  cluster\n  observedGeneration: 2\n  reason: SynchronizeSucceeded\n  status: \"True\"\n  type: ClusterResourcePlacementSynchronized\n- lastTransitionTime: \"2023-11-30T19:54:18Z\"\n  message: Successfully applied resources to 1 member clusters\n  observedGeneration: 2\n  reason: ApplySucceeded\n  status: \"True\"\n  type: ClusterResourcePlacementApplied\n  placementStatuses:\n- clusterName: kind-cluster-1\n  conditions:\n    - lastTransitionTime: \"2023-11-30T19:54:13Z\"\n      message: 'Successfully scheduled resources for placement in kind-cluster-1:\n      picked by scheduling policy'\n      observedGeneration: 2\n      reason: ScheduleSucceeded\n      status: \"True\"\n      type: ResourceScheduled\n    - lastTransitionTime: \"2023-11-30T19:54:18Z\"\n      message: Successfully Synchronized work(s) for placement\n      observedGeneration: 2\n      reason: WorkSynchronizeSucceeded\n      status: \"True\"\n      type: WorkSynchronized\n    - lastTransitionTime: \"2023-11-30T19:54:18Z\"\n      message: Successfully applied resources\n      observedGeneration: 2\n      reason: ApplySucceeded\n      status: \"True\"\n      type: ResourceApplied\n      selectedResources:\n- kind: Namespace\n  name: app\n  version: v1\n- kind: ConfigMap\n  name: envelope-configmap\n  namespace: app\n  version: v1\n```\n\n----------------------------------------\n\nTITLE: Observing Network Flows with Hubble CLI\nDESCRIPTION: Uses the configured Hubble CLI to observe network flows through a specific Hubble Relay pod, allowing for real-time monitoring of network traffic in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nhubble observe --pod hubble-relay-7ddd887cdb-h6khj\n```\n\n----------------------------------------\n\nTITLE: Azure AKS Scale-Down Issues Resolution Table\nDESCRIPTION: Markdown table detailing common causes and solutions for scale-down operation failures in AKS clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cluster-autoscaler-overview.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Common causes | Mitigation recommendations |\n|--------------|--------------|\\n| Pod preventing node drain | • View pod types preventing scale down\\n• Set `skip-nodes-with-local-storage` to `false`\\n• Set annotation `cluster-autoscaler.kubernetes.io/safe-to-evict` to `true`\\n• Check PDB restrictions |\n| Min size of node pool | Reduce minimum size of node pool |\n| Requests/Calls exceeding rate limit | See 429 Too Many Requests errors |\n```\n\n----------------------------------------\n\nTITLE: Granting Server Application Permissions\nDESCRIPTION: Grants the configured permissions and adds admin consent for the server application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad app permission grant --id $serverApplicationId --api 00000003-0000-0000-c000-000000000000\naz ad app permission admin-consent --id  $serverApplicationId\n```\n\n----------------------------------------\n\nTITLE: Bicep Module Import in main.bicep\nDESCRIPTION: Bicep code to import and reference the Kubernetes manifest module in the main deployment template. Connects to the AKS cluster using admin credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_4\n\nLANGUAGE: bicep\nCODE:\n```\nmodule kubernetes './aks-store-quickstart.bicep' = {\n  name: 'buildbicep-deploy'\n  params: {\n    kubeConfig: aks.listClusterAdminCredential().kubeconfigs[0].value\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking the Image Cleaner version\nDESCRIPTION: Retrieves the current version of Image Cleaner being used in the AKS cluster by examining the eraser-manager-config ConfigMap.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe configmap -n kube-system eraser-manager-config | grep tag -C 3\n```\n\n----------------------------------------\n\nTITLE: Binding Network Policy Role to Users in Kubernetes\nDESCRIPTION: Creates a RoleBinding that associates the network-policy-editor role with specific users or teams. This example binds the role to a developer user within the team-a namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/network-policy-best-practices.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: team-a-network-policy-binding\n  namespace: team-a\nsubjects:\n  - kind: User\n    name: developer@example.com\n    apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: network-policy-editor\n  apiGroup: rbac.authorization.k8s.io\n```\n\n----------------------------------------\n\nTITLE: Applying ClusterResourcePlacement\nDESCRIPTION: Command to apply the ClusterResourcePlacement configuration\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f cluster-resource-placement-pick-all.yml\n```\n\n----------------------------------------\n\nTITLE: Listing Managed Disks Using Azure CLI\nDESCRIPTION: Command to list all managed disks in a specified resource group, which is useful for identifying disks to be moved and checking their current state.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-disk-move-subscriptions.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz disk list --resource-group MC_myResourceGroup_myAKSCluster_eastus\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Azure Discount Types\nDESCRIPTION: A markdown table detailing different Azure discount options including Savings Plans, Reserved Instances, and Azure Hybrid Benefits with their specific features and benefits.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/optimize-aks-costs.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Azure discount type | Details |\n|---------------------|----------|\n| [**Azure Savings Plans**](/azure/cost-management-billing/savings-plan/savings-plan-compute-overview) | • 1-3 year upfront commitment <br> • Save up to 65% compared to pay-as-you-go <br> • Flexible, with no SKU family or region restrictions <br> • Best for workloads with consistent costs with resources in various SKUs and regions |\n| [**Reserved Instances**](/azure/cost-management-billing/reservations/save-compute-costs-reservations) | • 1-3 year upfront commitment <br> • Save up to 72% compared to pay-as-you-go <br> • Restricted to specific SKU families and regions <br> • Best for stable workloads running continuously (with no unexpected SKU or region changes) |\n| [**Azure Hybrid Benefits**](./azure-hybrid-benefit.md) | • Bring your own on-premises Windows Server and SQL Server licenses to Azure <br> • Use any qualifying on-premises licenses that have an active Software Assurance (SA) or qualifying subscription |\n```\n\n----------------------------------------\n\nTITLE: MongoDB Database and Collection Creation Script\nDESCRIPTION: JavaScript code to create a database named employeeDB and populate it with 200 employee records\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-mongodb-cluster.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nuse employeeDB;\n\nfor (let i = 1; i <= 200; i++) {\n    db.employees.insertOne({\n        Id: i,\n        EmployeeId: `E${1000 + i}`,\n        FirstName: `FirstName${i}`,\n        LastName: `LastName${i}`,\n        Department: `Department${(i % 10) + 1}`\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: Relative Monthly Schedule JSON Configuration for AKS Upgrades\nDESCRIPTION: This JSON snippet shows how to configure a relative monthly schedule that runs every two months on the last Monday of the month.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/planned-maintenance.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n\"schedule\": {\n    \"relativeMonthly\": {\n        \"intervalMonths\": 2,\n        \"dayOfWeek\": \"Monday\",\n        \"weekIndex\": \"Last\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring kubectl Connection\nDESCRIPTION: Configures kubectl to connect to the AKS cluster using credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_CLUSTER_NAME --overwrite-existing --output table\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Cleaner interval on AKS clusters\nDESCRIPTION: Shows how to set or update the Image Cleaner interval hours parameter for both new and existing clusters. The example sets a 48-hour interval for automatic cleaning.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/image-cleaner.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create a new cluster with specifying the interval\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --enable-image-cleaner \\\n    --image-cleaner-interval-hours 48 \\\n    --generate-ssh-keys\n\n# Update the interval on an existing cluster\naz aks update \\\n    --resource-group myResourceGroup \\\n    --name myManagedCluster \\\n    --enable-image-cleaner \\\n    --image-cleaner-interval-hours 48\n```\n\n----------------------------------------\n\nTITLE: Viewing Cluster Resource Snapshots in Kubernetes\nDESCRIPTION: Command to list all cluster resource snapshots with their labels in the Fleet Manager hub cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-placement-snapshots.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get clusterresourcesnapshots --show-labels\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group for PostgreSQL Server Using Azure CLI\nDESCRIPTION: Creates a new Azure resource group to contain the PostgreSQL server and related resources. Uses the values of environment variables for resource group name and location.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create \\\n    --name $RESOURCE_GROUP_NAME \\\n    --location $LOCATION\n```\n\n----------------------------------------\n\nTITLE: Assigning Fleet Manager RBAC Reader Role at Cluster Scope\nDESCRIPTION: Creates a role assignment for the Azure Kubernetes Fleet Manager RBAC Reader role at the fleet cluster scope. Uses Azure CLI to get the current user's identity and fleet ID, then assigns the reader role.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rbac.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nIDENTITY=$(az ad signed-in-user show --output tsv --query id)\nFLEET_ID=$(az fleet show --resource-group $GROUP --name $FLEET --output tsv --query id)\n\naz role assignment create --role 'Azure Kubernetes Fleet Manager RBAC Reader' --assignee \"$IDENTITY\" --scope \"$FLEET_ID\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure OpenAI Resource ID\nDESCRIPTION: Gets the resource ID of the Azure OpenAI service, which is needed to assign appropriate roles to the managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nAOAI_RESOURCE_ID=$(az resource list --resource-group $RG_NAME --resource-type Microsoft.CognitiveServices/accounts --query \"[0].id\" -o tsv)\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Resource Group with az CLI\nDESCRIPTION: Command to delete the Azure resource group containing OSM test resources using the Azure CLI. This removes all related resources created for testing OSM.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-deploy-addon-bicep.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group delete --name osm-bicep-test\n```\n\n----------------------------------------\n\nTITLE: Creating Alias for kubectl Command\nDESCRIPTION: Creates a shell alias 'k' for the kubectl command to enable shorter typing when working with Kubernetes commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nalias k=kubectl\n```\n\n----------------------------------------\n\nTITLE: Installing PMM Server Components\nDESCRIPTION: Series of commands to add Percona repo, install PMM server, and configure access\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks-mongodb.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add percona https://percona.github.io/percona-helm-charts/\nhelm repo update\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm install pmm --namespace mongodb \\\n--set nodeSelector.\"kubernetes\\.azure\\.com/agentpool\"=\"pmmsrvpool\" \\\n--set service.type=\"LoadBalancer\" \\\n--version 1.3.13 \\\npercona/pmm\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport SERVICE_IP=$(kubectl get svc --namespace mongodb monitoring-service -o jsonpath=\"{.status.loadBalancer.ingress[0].ip}\")\n  echo https://$SERVICE_IP:\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport ADMIN_PASS=$(kubectl get secret pmm-secret --namespace mongodb -o jsonpath='{.data.PMM_ADMIN_PASSWORD}' | base64 --decode)\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward svc/monitoring-service -n mongodb 8080:80\n```\n\n----------------------------------------\n\nTITLE: Installing AKS Preview Extension in Azure CLI\nDESCRIPTION: Commands to install and update the aks-preview extension in Azure CLI, required for IMDS restriction functionality.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/imds-restriction.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension update --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: List Kubernetes System Pods\nDESCRIPTION: Command to list all pods in the kube-system namespace using kubectl, demonstrating default role access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods --namespace kube-system\n```\n\nLANGUAGE: output\nCODE:\n```\nNAME                                   READY   STATUS    RESTARTS   AGE\nazure-ip-masq-agent-2rdd9              1/1     Running   0          30h\nazure-policy-767c9d9d9d-886rf          1/1     Running   0          31h\ncloud-node-manager-92t6h               1/1     Running   0          30h\ncoredns-789789675-b2dhg                1/1     Running   0          31h\ncoredns-autoscaler-77bbc46446-pgt92    1/1     Running   0          31h\ncsi-azuredisk-node-lnzrf               3/3     Running   0          30h\ncsi-azurefile-node-lhbxr               3/3     Running   0          31h\nkonnectivity-agent-7645d94b-9wqct      1/1     Running   0          30h\nkube-proxy-lkx4w                       1/1     Running   0          31h\nmetrics-server-5955767688-lpbjb        2/2     Running   0          30h\n```\n\n----------------------------------------\n\nTITLE: Dapr vs CSI Driver Comparison Table in Markdown\nDESCRIPTION: Markdown table comparing capabilities between Dapr secrets API and Secrets Store CSI driver.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-overview.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| | Dapr secrets API | Secrets Store CSI driver |\n| --- | --- | ---|\n| **Supported secrets stores** | Local environment variables (for Development); Local file (for Development); Kubernetes Secrets; AWS Secrets Manager; Azure Key Vault secret store; Azure Key Vault with Managed Identities on Kubernetes; GCP Secret Manager; HashiCorp Vault | Azure Key Vault secret store|\n```\n\n----------------------------------------\n\nTITLE: Helm Package and Registry Commands\nDESCRIPTION: Commands for packaging the Helm chart, authenticating with ACR, and pushing the chart.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-gpu-metrics.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm package .\nhelm registry login <acr_url> --username <user_name> --password <password>\nhelm push dcgm-exporter-<dcgm_exporter_version>.tgz oci://<acr_url>/helm\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Pod with AppArmor Annotation\nDESCRIPTION: This YAML snippet defines a Kubernetes pod manifest that includes an annotation to apply the AppArmor profile created earlier.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/secure-container-access.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hello-apparmor\n  annotations:\n    container.apparmor.security.beta.kubernetes.io/hello: localhost/k8s-apparmor-example-deny-write\nspec:\n  containers:\n  - name: hello\n    image: mcr.microsoft.com/dotnet/runtime-deps:6.0\n    command: [ \"sh\", \"-c\", \"echo 'Hello AppArmor!' && sleep 1h\" ]\n```\n\n----------------------------------------\n\nTITLE: Comparing AKS Upgrade Settings in Markdown Table\nDESCRIPTION: This markdown table compares different upgrade settings for AKS clusters, showing the maxSurge and maxUnavailable values, available resources for surging, and the expected behavior during the upgrade process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-cluster.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n|Upgrade settings|Available resources for surging|Expected behavior|\n|-|-|-|\n| `maxSurge` = `5`   `maxUnavailable` = `0` | 5 nodes available for surging | 5 nodes will be surged to upgrade the node pool. |\n| `maxSurge` = `5`   `maxUnavailable` = `0` | 0-4 nodes available for surging | The upgrade operation fails due to not having enough nodes to meet `maxSurge`. |\n| `maxSurge` = `0`   `maxUnavailable` = `5` | N/A since no surge nodes are needed | The operation uses 5 nodes from the existing node pool without surging new nodes to upgrade the node pool. |\n```\n\n----------------------------------------\n\nTITLE: Applying ClusterRoleBinding in Kubernetes using kubectl\nDESCRIPTION: This command applies the ClusterRoleBinding defined in the YAML file to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_12\n\nLANGUAGE: console\nCODE:\n```\nkubectl apply -f psp-deny-privileged-clusterrolebinding.yaml\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Replica Query Results\nDESCRIPTION: Sample output from querying the read-only PostgreSQL endpoint. The 't' result for pg_is_in_recovery() confirms this is a read-only replica instance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_17\n\nLANGUAGE: output\nCODE:\n```\n# Example output\n\npg_is_in_recovery\n-------------------\nt\n(1 row)\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Subscriptions\nDESCRIPTION: List the names and IDs of Azure subscriptions using the az account list command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz account list --query \"[].{id: id, name:name }\" --output table\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for PostgreSQL Deployment on AKS\nDESCRIPTION: Sets environment variables needed throughout the deployment process, including unique identifiers, cluster names, regions, and configuration options for the PostgreSQL database setup.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-postgresql-ha.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport SUFFIX=$(cat /dev/urandom | LC_ALL=C tr -dc 'a-z0-9' | fold -w 8 | head -n 1)\nexport LOCAL_NAME=\"cnpg\"\nexport TAGS=\"owner=user\"\nexport RESOURCE_GROUP_NAME=\"rg-${LOCAL_NAME}-${SUFFIX}\"\nexport PRIMARY_CLUSTER_REGION=\"eastus2\"\nexport AKS_PRIMARY_CLUSTER_NAME=\"aks-primary-${LOCAL_NAME}-${SUFFIX}\"\nexport AKS_PRIMARY_MANAGED_RG_NAME=\"rg-${LOCAL_NAME}-primary-aksmanaged-${SUFFIX}\"\nexport AKS_PRIMARY_CLUSTER_FED_CREDENTIAL_NAME=\"pg-primary-fedcred1-${LOCAL_NAME}-${SUFFIX}\"\nexport AKS_PRIMARY_CLUSTER_PG_DNSPREFIX=$(echo $(echo \"a$(openssl rand -hex 5 | cut -c1-11)\"))\nexport AKS_UAMI_CLUSTER_IDENTITY_NAME=\"mi-aks-${LOCAL_NAME}-${SUFFIX}\"\nexport AKS_CLUSTER_VERSION=\"1.29\"\nexport PG_NAMESPACE=\"cnpg-database\"\nexport PG_SYSTEM_NAMESPACE=\"cnpg-system\"\nexport PG_PRIMARY_CLUSTER_NAME=\"pg-primary-${LOCAL_NAME}-${SUFFIX}\"\nexport PG_PRIMARY_STORAGE_ACCOUNT_NAME=\"hacnpgpsa${SUFFIX}\"\nexport PG_STORAGE_BACKUP_CONTAINER_NAME=\"backups\"\nexport ENABLE_AZURE_PVC_UPDATES=\"true\"\nexport MY_PUBLIC_CLIENT_IP=$(dig +short myip.opendns.com @resolver3.opendns.com)\n```\n\n----------------------------------------\n\nTITLE: Implementing Locust Load Test Script for Valkey\nDESCRIPTION: This Python script defines a Locust User class for load testing a Valkey cluster. It includes methods for setting and getting values, and handles performance metrics reporting.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-valkey-cluster.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport time\nfrom locust import between, task, User, events,tag, constant_throughput\nfrom valkey import ValkeyCluster\nfrom random import randint\n\nclass ValkeyLocust(User):\n    wait_time = constant_throughput(50)\n    host = \"valkey-cluster.valkey.svc.cluster.local\"\n    def __init__(self, *args, **kwargs):\n        super(ValkeyLocust, self).__init__(*args, **kwargs)\n        self.client = ValkeyClient(host=self.host)\n    def on_stop(self):\n        self.client.close()\n    @task\n    @tag(\"set\")\n    def set_value(self):\n        self.client.set_value(\"set_value\")\n    @task\n    @tag(\"get\")\n    def get_value(self):\n        self.client.get_value(\"get_value\")\n\nclass ValkeyClient(object):\n    def __init__(self, host, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        with open(\"/etc/valkey-password/valkey-password-file.conf\", \"r\") as f:\n            self.password = f.readlines()[0].split(\" \")[1].strip()\n        self.host = host\n        self.vc = ValkeyCluster(host=self.host,\n                                port=6379,\n                                password=self.password,\n                                username=\"default\",\n                                cluster_error_retry_attempts=0,\n                                socket_timeout=2,\n                                keepalive=1\n                                )\n\n    def set_value(self, key, command='SET'):\n        start_time = time.perf_counter()\n        try:\n            result = self.vc.set(randint(0, 1000), randint(0, 1000))\n            if not result:\n                result = ''\n            length = len(str(result))\n            total_time = (time.perf_counter()- start_time) * 1000\n            events.request.fire(\n                request_type=command,\n                name=key,\n                response_time=total_time,\n                response_length=length,\n            )\n        except Exception as e:\n            total_time = (time.perf_counter()- start_time) * 1000\n            events.request.fire(\n                request_type=command,\n                name=key,\n                response_time=total_time,\n                response_length=0,\n                exception=e\n            )\n            result = ''\n        return result\n    def get_value(self, key, command='GET'):\n        start_time = time.perf_counter()\n        try:\n            result = self.vc.get(randint(0, 1000))\n            if not result:\n                result = ''\n            length = len(str(result))\n            total_time = (time.perf_counter()- start_time) * 1000\n            events.request.fire(\n                request_type=command,\n                name=key,\n                response_time=total_time,\n                response_length=length,\n            )\n        except Exception as e:\n            total_time = (time.perf_counter()- start_time) * 1000\n            events.request.fire(\n                request_type=command,\n                name=key,\n                response_time=total_time,\n                response_length=0,\n                exception=e\n            )\n            result = ''\n        return result\n```\n\n----------------------------------------\n\nTITLE: Cloning Ray Sample Repository\nDESCRIPTION: Commands to clone the AKS Ray sample repository and navigate to its root directory\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Azure-Samples/aks-ray-sample\ncd aks-ray-sample\n```\n\n----------------------------------------\n\nTITLE: Confirming order submission\nDESCRIPTION: Command to verify that the order was successfully processed by retrieving it from the Node.js application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncurl $EXTERNAL_IP/order\n```\n\n----------------------------------------\n\nTITLE: Using Command Palette Keyboard Shortcut\nDESCRIPTION: Keyboard shortcut command to open the VS Code command palette for attaching ACR to AKS\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/aks-extension-attach-azure-container-registry.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCtrl+Shift+P\n```\n\n----------------------------------------\n\nTITLE: Node Size Comparison for Storage Performance\nDESCRIPTION: Markdown table comparing different VM node sizes in AKS and their storage capabilities, including CPU, memory, and disk performance metrics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-storage.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Node type and size | vCPU | Memory (GiB) | Max data disks | Max uncached disk IOPS | Max uncached throughput (MBps) |\n|--------------------|------|--------------|----------------|------------------------|--------------------------------|\n| Standard_B2ms | 2 | 8 | 4 | 1,920 | 22.5 |\n| Standard_DS2_v2 | 2 | 7 | 8 | 6,400 | 96 |\n```\n\n----------------------------------------\n\nTITLE: Checking and Registering KubernetesConfiguration Resource Provider\nDESCRIPTION: Commands to check the registration status of the Microsoft.KubernetesConfiguration resource provider and register it if needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider list --query \"[?namespace=='Microsoft.KubernetesConfiguration']\" -o table\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.KubernetesConfiguration\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with Persistent Volume\nDESCRIPTION: YAML manifest for creating an NGINX pod that mounts the Azure managed disk at /mnt/azure using the previously created PVC.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-disk-storage-provision.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: mypod\nspec:\n  containers:\n    - name: mypod\n      image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine\n      resources:\n        requests:\n          cpu: 100m\n          memory: 128Mi\n        limits:\n          cpu: 250m\n          memory: 256Mi\n      volumeMounts:\n        - mountPath: \"/mnt/azure\"\n          name: volume\n          readOnly: false\n  volumes:\n    - name: volume\n      persistentVolumeClaim:\n        claimName: azure-managed-disk\n```\n\n----------------------------------------\n\nTITLE: Testing WAF Security with Bash Script\nDESCRIPTION: A Bash script that simulates various security attacks including XSS and query string manipulation to test Web Application Firewall rules. The script shows how legitimate requests succeed while malicious ones are blocked with 403 responses.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# Simulate XSS\necho \"Simulating XSS when calling $URL...\"\ncurl -w 'HTTP Status: %{http_code}\\n' -s -o /dev/null $URL/?users=ExampleXSS%3Cscript%3Ealert%28%27XSS%27%29%3C%2Fscript%3E\n# A custom rule blocks any request with the word blockme in the querystring.\necho \"Simulating query string manipulation with the 'blockme' word in the query string...\"\ncurl -w 'HTTP Status: %{http_code}\\n' -s -o /dev/null $URL/?users?task=blockme\n```\n\n----------------------------------------\n\nTITLE: Verifying Node.js application deployment\nDESCRIPTION: Command to check the deployment status of the Node.js application in the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout status deploy/nodeapp\n```\n\n----------------------------------------\n\nTITLE: Downloading and Extracting OSM Binary with PowerShell\nDESCRIPTION: Downloads a specific version of the OSM binary from GitHub releases and extracts it to the current directory. Uses TLS 1.2 for secure download and silences progress display for cleaner output.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/servicemesh/osm/open-service-mesh-binary-install-windows.md#2025-04-21_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n# Specify the OSM version that will be leveraged throughout these instructions\n$OSM_VERSION=\"v1.2.0\"\n\n[Net.ServicePointManager]::SecurityProtocol = \"tls12\"\n$ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest -URI \"https://github.com/openservicemesh/osm/releases/download/$OSM_VERSION/osm-$OSM_VERSION-windows-amd64.zip\" -OutFile \"osm-$OSM_VERSION.zip\"\nExpand-Archive -Path \"osm-$OSM_VERSION.zip\" -DestinationPath .\n```\n\n----------------------------------------\n\nTITLE: Exposing NGINX Deployment with Dual-Stack LoadBalancer in AKS v1.27+\nDESCRIPTION: This kubectl command exposes the NGINX deployment using a LoadBalancer service with dual-stack (IPv4 and IPv6) support. It's specific to AKS version 1.27 and later, which supports dual-stack LoadBalancer services.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl expose deployment nginx --name=nginx --port=80 --type=LoadBalancer --overrides='{\"spec\":{\"ipFamilyPolicy\": \"PreferDualStack\", \"ipFamilies\": [\"IPv4\", \"IPv6\"]}}'\n```\n\n----------------------------------------\n\nTITLE: SRE RoleBinding YAML\nDESCRIPTION: YAML manifest for binding the SRE role to the opssre group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-rbac.md#2025-04-21_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: sre-user-access\n  namespace: sre\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: sre-user-full-access\nsubjects:\n- kind: Group\n  namespace: sre\n  name: groupObjectId\n```\n\n----------------------------------------\n\nTITLE: Deploying OpenFaaS with Helm\nDESCRIPTION: Command to deploy OpenFaaS to an AKS cluster using Helm with basic authentication enabled and LoadBalancer service type for external access.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade openfaas --install openfaas/openfaas \\\n    --namespace openfaas  \\\n    --set basic_auth=true \\\n    --set functionNamespace=openfaas-fn \\\n    --set serviceType=LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Upgrading AKS Cluster to Latest LTS Version\nDESCRIPTION: Upgrades an existing AKS cluster to a specified LTS-compatible Kubernetes version. Example shows upgrade to version 1.32.2.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/long-term-support.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks upgrade --resource-group <resource-group-name> --name <cluster-name> --kubernetes-version 1.32.2\n```\n\n----------------------------------------\n\nTITLE: Verifying Apache Airflow Installation\nDESCRIPTION: This command retrieves the list of pods in the 'airflow' namespace to verify the successful deployment of Apache Airflow components.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-deploy.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n airflow\n```\n\n----------------------------------------\n\nTITLE: GMSA Role Definition\nDESCRIPTION: YAML configuration for defining ClusterRole with permissions to use GMSA credential specifications.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-group-managed-service-accounts.md#2025-04-21_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: aks-gmsa-role\nrules:\n- apiGroups: [\"windows.k8s.io\"]\n  resources: [\"gmsacredentialspecs\"]\n  verbs: [\"use\"]\n  resourceNames: [\"aks-gmsa-spec\"]\n```\n\n----------------------------------------\n\nTITLE: Listing Pods with IP Addresses in Kubernetes\nDESCRIPTION: Command to list all pods in the demo namespace with their IP addresses. This allows finding the server pod's IP for connectivity testing.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_18\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pod --output=wide -n demo\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription as Active\nDESCRIPTION: Command to set a specific Azure subscription as the current active subscription using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-managed-identity.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription <subscription-id>\n```\n\n----------------------------------------\n\nTITLE: CIS Benchmark Compliance Table in Markdown\nDESCRIPTION: Markdown table showing the compliance status of Azure Linux Container Host against CIS benchmark recommendations. Each row contains the CIS rule ID, recommendation description, compliance status and reasons for non-compliance where applicable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/cis-azure-linux.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| CIS ID | Recommendation description | Status | Reason |\n|---|---|---|---|\n|1.1.4| Disable Automounting|Pass||\n|1.1.1.1|Ensure mounting of cramfs filesystems is disabled|Pass||\n|1.1.2.1|Ensure /tmp is a separate partition|Pass||\n[...truncated for brevity...]\n```\n\n----------------------------------------\n\nTITLE: Installing Kafka Exporter with Helm\nDESCRIPTION: This command installs the Kafka Exporter using Helm with the specific version, namespace, and custom values configuration defined in the values.yaml file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kafka-configure.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm install azmon-kafka-exporter prometheus-community/prometheus-kafka-exporter \\\n--version 2.11.0 \\\n--namespace azmon-kafka-exporter \\\n--values values.yaml\n```\n\n----------------------------------------\n\nTITLE: Rotating Keys for Private Key Vault KMS\nDESCRIPTION: This command updates an AKS cluster to use a new key for KMS encryption with a private key vault. It specifies the new key ID and maintains the private network access setting.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_25\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --name myAKSCluster --resource-group MyResourceGroup  --enable-azure-keyvault-kms --azure-keyvault-kms-key-id $NewKEY_ID --azure-keyvault-kms-key-vault-network-access \"Private\" --azure-keyvault-kms-key-vault-resource-id $KEYVAULT_RESOURCE_ID\n```\n\n----------------------------------------\n\nTITLE: Rejoining Member Clusters After Upgrade\nDESCRIPTION: Reconciles member clusters with the newly upgraded fleet resource. This step is necessary for existing member clusters after the hub upgrade.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/upgrade-hub-cluster-type.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet member reconcile -g $RG -f $FLEET -n $FLEET_MEMBER\n```\n\n----------------------------------------\n\nTITLE: Running Single Command on Private AKS Cluster\nDESCRIPTION: Demonstrates how to run a single kubectl command on a private AKS cluster using az aks command invoke. This example retrieves pods from the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/access-private-cluster.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks command invoke \\\n  --resource-group myResourceGroup \\\n  --name myPrivateCluster \\\n  --command \"kubectl get pods -n kube-system\"\n```\n\n----------------------------------------\n\nTITLE: Initializing AKS Store Demo Template with Azure Developer CLI\nDESCRIPTION: This command clones the AKS store demo template from the Azure-Samples repository using the azd init command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_12\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd init --template Azure-Samples/aks-store-demo\n```\n\n----------------------------------------\n\nTITLE: Configuring TCP Keepalive Settings in a Kubernetes Pod YAML Definition\nDESCRIPTION: This YAML configuration defines a pod with custom TCP keepalive sysctls. It sets the keepalive time to 45 seconds, the number of probes to 5, and the interval between probes to 45 seconds, implementing a more responsive connection monitoring strategy than the system defaults.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/improve-network-fault-tolerance-in-aks-using-tcp-keepalive.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox-sysctls\nspec:\n  securityContext:\n    sysctls:\n      - name: \"net.ipv4.tcp_keepalive_time\"\n        value: \"45\"\n      - name: \"net.ipv4.tcp_keepalive_probes\"\n        value: \"5\"\n      - name: \"net.ipv4.tcp_keepalive_intvl\"\n        value: \"45\"\n  containers:\n    - name: busybox\n      image: busybox\n      command: [\"sleep\", \"3600\"]\n```\n\n----------------------------------------\n\nTITLE: Creating a User-Assigned Managed Identity\nDESCRIPTION: Creates a user-assigned managed identity named myIdentity that will be used to grant the AKS cluster permissions to interact with Azure resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-kubenet.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz identity create --name myIdentity --resource-group myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster\nDESCRIPTION: Azure CLI command to configure kubectl credentials for accessing the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group <ResourceGroupName> --name <ClusterName>\n```\n\n----------------------------------------\n\nTITLE: Getting Fleet Credentials\nDESCRIPTION: Command to download Kubernetes credentials for the Fleet hub cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-migrate-preview-to-ga-fleets.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet get-credentials \\\n    --resource-group <resource-group> \\\n    --name <fleet-name>\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Namespace in AKS\nDESCRIPTION: Creates a dedicated namespace called 'aks-store-demo' in the Kubernetes cluster to isolate and organize the application resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns aks-store-demo\n```\n\n----------------------------------------\n\nTITLE: Deleting resources with Azure CLI\nDESCRIPTION: Azure CLI command to delete all resources created during this quickstart by removing the resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\naz group delete --name MyResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Checking Pending Approvals for Staged Updates in AKS\nDESCRIPTION: This command retrieves the list of ClusterApprovalRequest resources, which represent pending approvals for staged updates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get clusterapprovalrequest\n```\n\n----------------------------------------\n\nTITLE: Defining VM SKU Cores and Default OS Disk Configuration in YAML\nDESCRIPTION: This YAML snippet shows the default OS disk configuration for different VM SKU core counts in Azure Kubernetes Service. It specifies the disk tier, provisioned IOPS, and throughput for various vCPU ranges.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-storage.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nVM SKU Cores (vCPUs): 1 - 7\nDefault OS Disk Tier: P10/128G\nProvisioned IOPS: 500\nProvisioned Throughput (Mbps): 100\n\nVM SKU Cores (vCPUs): 8 - 15\nDefault OS Disk Tier: P15/256G\nProvisioned IOPS: 1100\nProvisioned Throughput (Mbps): 125\n\nVM SKU Cores (vCPUs): 16 - 63\nDefault OS Disk Tier: P20/512G\nProvisioned IOPS: 2300\nProvisioned Throughput (Mbps): 150\n\nVM SKU Cores (vCPUs): 64+\nDefault OS Disk Tier: P30/1024G\nProvisioned IOPS: 5000\nProvisioned Throughput (Mbps): 200\n```\n\n----------------------------------------\n\nTITLE: Open Source Projects Support Comparison Table\nDESCRIPTION: Markdown table comparing support for open source projects between EKS and AKS, focusing on KEDA and Karpenter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-understand.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| **Open source projects** | **EKS** | **AKS** |\n| -------------------------| --------| ------- |\n| [Kubernetes Event-driven Autoscaling (KEDA)][keda] | [Yes](https://aws.amazon.com/it/blogs/mt/proactive-autoscaling-kubernetes-workloads-keda-metrics-ingested-into-aws-amp/) | [Yes][azure-keda] |\n| [Karpenter][karpenter] | [Yes](https://docs.aws.amazon.com/eks/latest/best-practices/karpenter.html) | [Node Autoprovisioning][node-autoprovisioning] and [AKS Karpenter Provider](https://github.com/Azure/karpenter-provider-azure) |\n```\n\n----------------------------------------\n\nTITLE: Installing Azure CLI Fleet Extension\nDESCRIPTION: Installs the 'fleet' Azure CLI extension required for managing Azure Kubernetes Fleet Manager.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name fleet\n```\n\n----------------------------------------\n\nTITLE: Modifying Vue Template for Navigation in AKS Store Demo Application\nDESCRIPTION: Vue template code that shows how to modify the Products navigation item to New Products in the TopNav.Vue component of the AKS store demo application. The template includes navigation links with router functionality and a cart item counter.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-telepresence-aks.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<template>\n  <nav>\n    <div class=\"logo\">\n      <a href=\"/\">\n        <img src=\"/contoso-pet-store-logo.png\" alt=\"Contoso Pet Store Logo\">\n      </a>\n    </div>\n    <button class=\"hamburger\" @click=\"toggleNav\">\n  <span class=\"hamburger-icon\"></span>\n    </button>\n    <ul class=\"nav-links\" :class=\"{ 'nav-links--open': isNavOpen }\">\n      <li><router-link to=\"/\" @click=\"closeNav\">New Products</router-link></li>\n      <li><router-link to=\"/cart\" @click=\"closeNav\">Cart ({{ cartItemCount }})</router-link></li>\n    </ul>\n  </nav>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Listing Service Details in OSM Mesh\nDESCRIPTION: This command displays the details of the httpbin service in the mesh, showing its ClusterIP and port configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-integrations.md#2025-04-21_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nkubectl get svc -n httpbin\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding for Application UIs\nDESCRIPTION: Bash commands to set up port forwarding for the bookbuyer and bookthief UIs.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\nbash <<EOF\n./scripts/port-forward-bookbuyer-ui.sh &\n./scripts/port-forward-bookthief-ui.sh &\nwait\nEOF\n```\n\n----------------------------------------\n\nTITLE: Disabling the Static Egress Gateway Feature\nDESCRIPTION: Command to disable the Static Egress Gateway feature on an AKS cluster. All gateway node pools should be deleted first.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-static-egress-gateway.md#2025-04-23_snippet_8\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update -n <cluster-name> -g <resource-group> --disable-static-egress-gateway\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Secret for SMB Authentication\nDESCRIPTION: Creates a Kubernetes secret containing Active Directory credentials (username, password, and domain) required for accessing Azure NetApp Files SMB volumes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-dual-protocol.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic smbcreds --from-literal=username=USERNAME --from-literal=password=\"PASSWORD\" --from-literal=domain='DOMAIN_NAME'\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Configurations and Checking Secrets\nDESCRIPTION: Bash commands for applying the YAML configurations and verifying the creation of Kubernetes secrets.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-secrets-store-nginx-tls.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f aks-helloworld-one.yaml -n $NAMESPACE\nkubectl apply -f aks-helloworld-two.yaml -n $NAMESPACE\nkubectl get secret -n $NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Associating Route Table with AKS Subnet in Azure CLI\nDESCRIPTION: This command associates the created route table with the AKS subnet, ensuring that the cluster's traffic follows the defined routes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/limit-egress-traffic.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz network vnet subnet update --resource-group $RG --vnet-name $VNET_NAME --name $AKSSUBNET_NAME --route-table $FWROUTE_TABLE_NAME\n```\n\n----------------------------------------\n\nTITLE: Enabling Azure Hybrid Benefit on Existing AKS Cluster (Azure PowerShell)\nDESCRIPTION: This snippet shows how to enable Azure Hybrid Benefit on an existing AKS cluster using Azure PowerShell. It retrieves the cluster and sets the Azure Hybrid Benefit feature.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hybrid-benefit.md#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$rg_name = \"myResourceGroup\"\n$cluster = \"myAKSCluster\"\n\nGet-AzAksCluster -ResourceGroupName $rg_name -Name $cluster | Set-AzAksCluster -EnableAHUB\n```\n\n----------------------------------------\n\nTITLE: Building and Publishing Docker Image\nDESCRIPTION: Azure CLI command to build and push the Docker image to Azure Container Registry\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/resiliency-mongodb-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz acr build --image mongodb-locust-client --registry $MY_ACR_REGISTRY .\n```\n\n----------------------------------------\n\nTITLE: IAM Policy for Amazon DynamoDB Access in AWS\nDESCRIPTION: JSON policy document that grants full access to Amazon DynamoDB resources in AWS. This policy would be attached to an IAM role used by the application.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n        \"Effect\": \"Allow\",\n        \"Action\": \"dynamodb:*\",\n        \"Resource\": \"*\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Service Tag Authorized IP Feature Flag Registration in Azure CLI\nDESCRIPTION: This snippet shows how to verify the registration of the EnableServiceTagAuthorizedIPPreview feature flag using the Azure CLI. It uses the az feature show command to display the feature's status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/api-server-authorized-ip-ranges.md#2025-04-21_snippet_15\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"EnableServiceTagAuthorizedIPPreview\"\n```\n\n----------------------------------------\n\nTITLE: API Version Declaration in Terraform\nDESCRIPTION: Example of how to specify the API version for a Fleet resource in a Terraform configuration using the azapi provider.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-preview-api-lifecycle.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\nresource \"azapi_resource\" \"symbolicname\" {\n  type = \"Microsoft.ContainerService/fleets@2024-05-02-preview\"\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Terraform Outputs Configuration\nDESCRIPTION: Output definitions to expose important values from the created AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-terraform.md#2025-04-21_snippet_3\n\nLANGUAGE: Terraform\nCODE:\n```\n:::code language=\"Terraform\" source=\"~/terraform_samples/quickstart/101-aks-cluster-windows/outputs.tf\":::\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Key Vault Instance\nDESCRIPTION: Creates an Azure Key Vault instance for storing secrets and exports its ID and URL.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/airflow-create-infrastructure.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault create --name $MY_KEYVAULT_NAME --resource-group $MY_RESOURCE_GROUP_NAME --location $MY_LOCATION --enable-rbac-authorization false --output table\nexport KEYVAULTID=$(az keyvault show --name $MY_KEYVAULT_NAME --query \"id\" --output tsv)\nexport KEYVAULTURL=$(az keyvault show --name $MY_KEYVAULT_NAME --query \"properties.vaultUri\" --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Installing Trident Using Helm\nDESCRIPTION: Commands for installing NetApp Trident storage provisioner using Helm, configured for Windows worker nodes support.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add netapp-trident https://netapp.github.io/trident-helm-chart\n\nhelm install trident netapp-trident/trident-operator --version 23.04.0  --create-namespace --namespace trident –-set windows=true\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe torc trident\n```\n\n----------------------------------------\n\nTITLE: OSM Monitoring Label Output\nDESCRIPTION: Expected JSON output showing the required OSM monitoring label for namespace configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-troubleshoot.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"openservicemesh.io/monitored-by\": \"osm\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting resources with Azure PowerShell\nDESCRIPTION: Azure PowerShell command to delete all resources created during this quickstart by removing the resource group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-dapr.md#2025-04-21_snippet_18\n\nLANGUAGE: powershell\nCODE:\n```\nRemove-AzResourceGroup -Name MyResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Enabling Sidecar Injection with Revision Label\nDESCRIPTION: Command to label a namespace with the appropriate Istio revision to enable automatic sidecar injection for all pods created in that namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-deploy-addon.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label namespace default istio.io/rev=asm-X-Y\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Helm Releases in AKS\nDESCRIPTION: This command removes a Helm release from the Kubernetes cluster, cleaning up all associated resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kubernetes-helm.md#2025-04-21_snippet_8\n\nLANGUAGE: console\nCODE:\n```\nhelm uninstall --namespace ingress-basic ingress-nginx\n```\n\n----------------------------------------\n\nTITLE: Azure Developer CLI Tutorial Checklist\nDESCRIPTION: A markdown checklist showing the key learning outcomes from the tutorial, including cloning azd templates and understanding container image usage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-prepare-app.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n> [!div class=\"checklist\"]\n>\n> * Clone a sample `azd` template from GitHub.\n> * View where container images are used from the sample application source.\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Node Resource Group for Blob Storage Creation\nDESCRIPTION: This Azure CLI command retrieves the node resource group name for an AKS cluster, which is needed when creating Azure Blob storage resources that the cluster can access and manage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --resource-group myResourceGroup --name myAKSCluster --query nodeResourceGroup -o tsv\n```\n\n----------------------------------------\n\nTITLE: Sample Azure Private DNS A Record Output\nDESCRIPTION: Example JSON output showing the structure of an A record in Azure private DNS. Includes IP address, FQDN, resource identifiers, and TTL settings.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/create-nginx-ingress-private-controller.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"aRecords\": [\n      {\n        \"ipv4Address\": \"10.224.0.7\"\n      }\n    ],\n    \"etag\": \"ecc303c5-4577-4ca2-b545-d34e160d1c2d\",\n    \"fqdn\": \"store-front.private.contoso.com.\",\n    \"id\": \"/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/test-rg/providers/Microsoft.Network/privateDnsZones/private.contoso.com/A/store-front\",\n    \"isAutoRegistered\": false,\n    \"name\": \"store-front\",\n    \"resourceGroup\": \"test-rg\",\n    \"ttl\": 300,\n    \"type\": \"Microsoft.Network/privateDnsZones/A\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving identity object ID in Azure CLI\nDESCRIPTION: This command retrieves the object ID of a specified user-assigned managed identity.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-kms-etcd-encryption.md#2025-04-21_snippet_6\n\nLANGUAGE: Azure CLI\nCODE:\n```\nIDENTITY_OBJECT_ID=$(az identity show --name MyIdentity --resource-group MyResourceGroup --query 'principalId' -o tsv)\necho $IDENTITY_OBJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Installing NVIDIA Device Plugin with Helm\nDESCRIPTION: Commands to install NVIDIA device plugin and GPU feature discovery components using Helm.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/gpu-multi-instance.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\nhelm repo add nvdp https://nvidia.github.io/k8s-device-plugin\nhelm repo update\n\nhelm install nvdp nvdp/nvidia-device-plugin \\\n--version=0.17.0 \\\n--set migStrategy=${MIG_STRATEGY} \\\n--set gfd.enabled=true \\\n--namespace nvidia-device-plugin \\\n--create-namespace\n```\n\n----------------------------------------\n\nTITLE: Logging in with Azure CLI using Microsoft Graph scope\nDESCRIPTION: This command logs in to Azure using the Azure CLI with the Microsoft Graph API scope. This is required as part of the authentication workaround for Azure Developer CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/azd/azd-login-ts.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz login --scope https://graph.microsoft.com/.default\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Proxy Version Configuration\nDESCRIPTION: Command to check the version of Istio proxy configured in the cluster's ConfigMap.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get cm -n aks-istio-system -o yaml | grep \"mcr.microsoft.com\\/oss\\/istio\\/proxyv2\"\n```\n\n----------------------------------------\n\nTITLE: Installing Latest kubectl Version - PowerShell\nDESCRIPTION: Command to install or update kubectl to the latest version using Azure PowerShell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/supported-kubernetes-versions.md#2025-04-21_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nInstall-AzAksKubectl -Version latest\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Control Plane Pods\nDESCRIPTION: These commands check the existence of Istio control plane pods for both revisions in the aks-istio-system and aks-istio-ingress namespaces.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-upgrade.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n aks-istio-system\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n aks-istio-ingress\n```\n\n----------------------------------------\n\nTITLE: Clean Up Kubernetes Resources\nDESCRIPTION: Command to delete a Kubernetes namespace and its associated resources including pods and network policies using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_24\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete namespace demo\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group for AKS Cluster with Azure CLI\nDESCRIPTION: Command to create an Azure resource group that will contain the AKS cluster using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-dual-stack.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz group create --location <region> --name <resourceGroupName>\n```\n\n----------------------------------------\n\nTITLE: Attaching Azure DNS Zone to AKS Application Routing Add-on\nDESCRIPTION: Updates the AKS application routing add-on to enable integration with Azure DNS and apply necessary role assignments.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_9\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks approuting zone add --resource-group <ResourceGroupName> --name <ClusterName> --ids=${ZONEID} --attach-zones\n```\n\n----------------------------------------\n\nTITLE: Apply and Verify PodMonitor\nDESCRIPTION: Commands to apply the PodMonitor configuration and verify its creation in the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-gpu-metrics.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f pod-monitor.yaml -n kube-system\nkubectl get podmonitor -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Displaying Pros and Cons Table in Markdown\nDESCRIPTION: Markdown table showing advantages and disadvantages of using pre-trained language models (PLMs) in AI/ML workflows.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/concepts-fine-tune-language-models.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Pros | Cons |\n|------|------|\n| • Get started quickly with deployment in your machine learning lifecycle. \\n • Avoid heavy compute costs associated with model training. \\n • Reduces the need to store large, labeled datasets. | • Might provide generalized or outdated responses based on pre-training data sources. \\n • Might not be suitable for all tasks or domains. \\n • Performance can vary depending on inferencing context. |\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster and Resources (Azure PowerShell)\nDESCRIPTION: Uses the Remove-AzResourceGroup cmdlet to remove the resource group, AKS cluster, Azure container registry, and all related resources.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/quickstart-helm.md#2025-04-21_snippet_18\n\nLANGUAGE: powershell\nCODE:\n```\nRemove-AzResourceGroup -Name myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Deployment Options Comparison Table\nDESCRIPTION: Markdown table comparing deployment options between EKS and AKS, including portal access, infrastructure as code, CLI tools, and third-party solutions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-understand.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Deployment Options** | **EKS** | **AKS** |\n| -----------------------| --------| ------- |\n| Portal | [AWS Management Console](https://docs.aws.amazon.com/eks/latest/userguide/getting-started-console.html) | [Azure portal][azure-portal] |\n| Native Infrastructure as Code | [AWS Cloud Formation][aws-cloudformation] | [Bicep][bicep] and [Azure Resource Manager (ARM)][arm] |\n| Native CLI | [AWS CLI](https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html) and [EKS CLI][eksctl] | [Azure CLI][azure-cli], [Azure Developer CLI][azure-developer-cli], and [PowerShell][powershell] |\n| Terraform | [EKS module](https://registry.terraform.io/modules/terraform-aws-modules/eks/aws/latest?tab=resources) | [AzureRM Provider][azure-terraform] |\n| Pulumi | [EKS Cluster](https://www.pulumi.com/registry/packages/aws/api-docs/eks/cluster/) | [AKS ManagedCluster](https://www.pulumi.com/registry/packages/azure-native/api-docs/containerservice/managedcluster/) |\n| Crossplane | [Yes](https://aws.amazon.com/it/tutorials/deploy-serverless-application-using-crossplane-on-eks/) | [Yes](https://github.com/Azure-Samples/aks-platform-engineering) |\n| Cluster API | [Yes](https://cluster-api-aws.sigs.k8s.io/topics/eks/) | [Yes](https://github.com/kubernetes-sigs/cluster-api-provider-azure) |\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Registry Secret in Kubernetes\nDESCRIPTION: Creates a new Kubernetes secret for Docker registry authentication, allowing access to push and pull images from the Azure Container Registry.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/ai-toolchain-operator-fine-tune.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret docker-registry myregistrysecret --docker-server=$ACR_NAME.azurecr.io --docker-username=$ACR_USERNAME --docker-password=$ACR_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Deploying a Trusted Application Pod to AKS\nDESCRIPTION: Creating and applying a YAML manifest to deploy a trusted application pod on the shared kernel in the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-sandboxing.md#2025-04-21_snippet_5\n\nLANGUAGE: yml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: trusted\nspec:\n  containers:\n  - name: trusted\n    image: mcr.microsoft.com/aks/fundamental/base-ubuntu:v0.0.11\n    command: [\"/bin/sh\", \"-ec\", \"while :; do echo '.'; sleep 5 ; done\"]\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f trusted-app.yaml\n```\n\n----------------------------------------\n\nTITLE: Output from NGINX Ingress Controller Conditions Check\nDESCRIPTION: Example output showing the conditions of a healthy NGINX ingress controller, including readiness, availability, and progression status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_19\n\nLANGUAGE: output\nCODE:\n```\n2023-11-29T19:59:24Z    True    IngressClassReady       Ingress Class is up-to-date\n2023-11-29T19:59:50Z    True    Available               Controller Deployment has minimum availability and IngressClass is up-to-date\n2023-11-29T19:59:50Z    True    ControllerAvailable     Controller Deployment is available\n2023-11-29T19:59:25Z    True    Progressing             Controller Deployment has successfully progressed\n```\n\n----------------------------------------\n\nTITLE: Configuring MySQL Service in Istio\nDESCRIPTION: YAML configuration for the MySQL database service modified for Istio compatibility. Removes OSM-specific targetPort and appProtocol attributes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysqldb\n  labels:\n    app: mysqldb\n    service: mysqldb\nspec:\n  ports:\n    - port: 3306\n      name: tcp\n  selector:\n    app: mysqldb\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML frontmatter metadata configuration for the documentation page, including title, description, topic type, date, and author information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/operator-best-practices-container-image-management.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Operator best practices - Container image management in Azure Kubernetes Services (AKS)\ndescription: Learn the cluster operator best practices for how to manage and secure container images in Azure Kubernetes Service (AKS).\nms.topic: best-practice\nms.date: 06/27/2023\nauthor: nickomang\nms.author: nickoman\n---\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kubernetes\nDESCRIPTION: This command retrieves the status of pods in the Kubernetes cluster using a non-admin user account to verify the creation of the unprivileged pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_14\n\nLANGUAGE: console\nCODE:\n```\nkubectl-nonadminuser get pods\n```\n\n----------------------------------------\n\nTITLE: Creating Azure DNS Zone\nDESCRIPTION: Creates an Azure DNS zone using az network dns zone create command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-dns-ssl.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\naz network dns zone create --resource-group <ResourceGroupName> --name <ZoneName>\n```\n\n----------------------------------------\n\nTITLE: Creating Key Vault Connection using Azure CLI\nDESCRIPTION: Command to establish a connection between AKS and Key Vault using Service Connector with CSI driver enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/service-connector/csi-secrets-store-service-connector.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks connection create keyvault \\\n    --connection <connection-name> \\\n    --resource-group <resource-group-of-cluster> \\\n    --name <cluster-name> \\\n    --target-resource-group <resource-group-of-key-vault> \\\n    --vault <key-vault-name> \\\n    --enable-csi \\\n    --client-type none\n```\n\n----------------------------------------\n\nTITLE: Checking Staged Rollout Status in AKS\nDESCRIPTION: This command retrieves the status of a ClusterStagedUpdateRun resource named 'example-staged-update-run' using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get clusterStagedUpdateRun example-staged-update-run\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Sample Project Directory\nDESCRIPTION: Command to navigate to the root directory of the cloned sample project.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd dapr-workflows-aks-sample\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Version Number Format Example\nDESCRIPTION: Demonstrates the semantic versioning format used in Kubernetes, showing the major, minor, and patch version components. Format follows [major].[minor].[patch] pattern.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/supported-kubernetes-versions.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n[major].[minor].[patch]\n\nExamples:\n  1.29.2\n  1.29.1\n```\n\n----------------------------------------\n\nTITLE: Deploying Virtual Network Bicep Template\nDESCRIPTION: Azure CLI command to deploy a virtual network using a Bicep template file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-custom-network.md#2025-04-21_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz deployment group create --resource-group <resource-group> --template-file virtualNetwork.bicep\n```\n\n----------------------------------------\n\nTITLE: Creating and Attaching IAM Policies and Roles in AWS\nDESCRIPTION: Bash commands to create IAM policies and roles in AWS, then attach these policies to the role. This setup grants the necessary permissions for the application to access SQS and DynamoDB.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naws iam create-policy --policy-name sqs-sample-policy --policy-document <filepath/filename>.json\naws iam create-policy --policy-name dynamodb-sample-policy --policy-document <filepath/filename>.json\naws iam create-role --role-name keda-sample-iam-role  --assume-role-policy-document <filepath/filename>.json\n\naws iam attach-role-policy --role-name keda-sample-iam-role --policy-arn=arn:aws:iam::${<AWSAccountID>}:policy/sqs-sample-policy\naws iam attach-role-policy --role-name keda-sample-iam-role --policy-arn=arn:aws:iam::${<AWSAccountID>}:policy/dynamodb-sample-policy\n\n# Set up trust relationship Kubernetes federated identity credential and map IAM role via kubectl annotate serviceaccount\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up wasmCloud Resources\nDESCRIPTION: Removes the wasmCloud namespace and all associated resources from the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete namespace wasmcloud\n```\n\n----------------------------------------\n\nTITLE: Deleting SQL Firewall Rule in Azure CLI\nDESCRIPTION: Azure CLI command to remove the firewall rule that allows local IP access to Azure SQL Database.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_17\n\nLANGUAGE: azurecli\nCODE:\n```\naz sql server firewall-rule delete \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --server $SQL_SERVER_NAME \\\n    --name AllowLocalIP\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookwarehouse Service in Kubernetes\nDESCRIPTION: Creates a ServiceAccount, Service, and Deployment for the bookwarehouse service. The deployment uses the openservicemesh/bookwarehouse:latest-main image.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-service-mesh-istio-migration-guidance.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\n# Create bookwarehouse Service Account\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: bookwarehouse\n  namespace: bookwarehouse\n---\n# Create bookwarehouse Service\napiVersion: v1\nkind: Service\nmetadata:\n  name: bookwarehouse\n  namespace: bookwarehouse\n  labels:\n    app: bookwarehouse\nspec:\n  ports:\n  - port: 14001\n    name: bookwarehouse-port\n  selector:\n    app: bookwarehouse\n---\n# Create bookwarehouse Deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bookwarehouse\n  namespace: bookwarehouse\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: bookwarehouse\n  template:\n    metadata:\n      labels:\n        app: bookwarehouse\n        version: v1\n    spec:\n      serviceAccountName: bookwarehouse\n      nodeSelector:\n        kubernetes.io/arch: amd64\n        kubernetes.io/os: linux\n      containers:\n        - name: bookwarehouse\n          image: openservicemesh/bookwarehouse:latest-main\n          imagePullPolicy: Always\n          command: [\"/bookwarehouse\"]\n```\n\n----------------------------------------\n\nTITLE: Deleting Service Principal with Azure CLI\nDESCRIPTION: This command deletes the service principal using the Azure CLI's ad sp delete command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli\nCODE:\n```\naz ad sp delete --id $sp\n```\n\n----------------------------------------\n\nTITLE: Restocking Inventory Items\nDESCRIPTION: Curl command to call the sample app's restock endpoint to ensure there are items in inventory before starting the workflow.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/dapr-workflow.md#2025-04-21_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\ncurl -X GET $APP_URL/stock/restock\n```\n\n----------------------------------------\n\nTITLE: Setting Up Service Connector in AKS\nDESCRIPTION: Configures Service Connector for connecting AKS with Azure SQL Database using Microsoft Entra Workload ID.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\n# Register the Service Connector and Kubernetes Configuration resource providers\naz provider register --namespace Microsoft.ServiceLinker --wait\naz provider register --namespace Microsoft.KubernetesConfiguration --wait\n\n# Install the Service Connector passwordless extension\naz extension add --name serviceconnector-passwordless\n\n# Retrieve the AKS cluster and Azure SQL Server resource IDs\nexport AKS_CLUSTER_RESOURCE_ID=$(az aks show \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --query id \\\n    --output tsv)\nexport AZURE_SQL_SERVER_RESOURCE_ID=$(az sql server show \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $SQL_SERVER_NAME \\\n    --query id \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Checking Hubble Relay Pod Status\nDESCRIPTION: Verifies that the Hubble Relay pod is running properly in the AKS cluster by listing pods with the 'hubble-relay' label in the kube-system namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/container-network-observability-how-to.md#2025-04-21_snippet_11\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\nkubectl get pods -o wide -n kube-system -l k8s-app=hubble-relay\n```\n\nLANGUAGE: output\nCODE:\n```\nhubble-relay-7ddd887cdb-h6khj     1/1  Running     0       23h \n```\n\n----------------------------------------\n\nTITLE: Azure Policy Reference Structure\nDESCRIPTION: Reference document structure using markdown includes to pull in policy definitions for Azure Kubernetes Service.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/policy-reference.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[!INCLUDE [azure-policy-reference-policysets-kubernetes](~/azure-docs-pr/includes/policy/reference/bycat/policysets-kubernetes.md)]\n\n[!INCLUDE [azure-policy-reference-rp-aks-containerservice](~/azure-docs-pr/includes/policy/reference/byrp/microsoft.containerservice.md)]\n```\n\n----------------------------------------\n\nTITLE: Deleting Kubernetes Resources in AKS\nDESCRIPTION: This command removes the container instances and resources defined in the aks-store-quickstart.yaml file from the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-application.md#2025-04-21_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete -f aks-store-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Headless Services for Valkey Cluster in Kubernetes\nDESCRIPTION: This snippet creates three headless Services for the Valkey cluster: one for the entire cluster, one for the primaries, and one for the secondaries. These services are used to get IP addresses of Valkey pods.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-valkey-cluster.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: valkey-cluster\n  namespace: valkey\nspec:\n  clusterIP: None\n  ports:\n  - name: valkey-port\n    port: 6379\n    protocol: TCP\n    targetPort: 6379\n  selector:\n    app: valkey\n  sessionAffinity: None\n  type: ClusterIP\nEOF\n\nkubectl apply -f - <<EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: valkey-masters\n  namespace: valkey\nspec:\n  clusterIP: None\n  ports:\n  - name: valkey-port\n    port: 6379\n    protocol: TCP\n    targetPort: 6379\n  selector:\n    app: valkey\n    appCluster: valkey-masters\n  sessionAffinity: None\n  type: ClusterIP\nEOF\n\nkubectl apply -f - <<EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: valkey-replicas\n  namespace: valkey\nspec:\n  clusterIP: None\n  ports:\n  - name: valkey-port\n    port: 6379\n    protocol: TCP\n    targetPort: 6379\n  selector:\n    app: valkey\n    appCluster: valkey-replicas\n  sessionAffinity: None\n  type: ClusterIP\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying VPA Example Application\nDESCRIPTION: Command to apply the VPA test configuration file using kubectl, which creates both the VPA resource and application deployment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-vertical-pod-autoscaler.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f hamster.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Up GitHub OIDC for Draft in AKS\nDESCRIPTION: This command registers your application with GitHub using Draft's setup-gh command, which is required once per repository.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/draft.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks draft setup-gh\n```\n\n----------------------------------------\n\nTITLE: Deploying Httpbin Application in Azure CLI\nDESCRIPTION: Deploys the 'httpbin' application to the Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-telemetry.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/httpbin/httpbin.yaml\n```\n\n----------------------------------------\n\nTITLE: Sample RayJob Status Output\nDESCRIPTION: Example output showing the status information of a RayJob including job status and timing details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_8\n\nLANGUAGE: output\nCODE:\n```\nNAME                   JOB STATUS   DEPLOYMENT STATUS   START TIME             END TIME   AGE\nrayjob-pytorch-mnist   RUNNING      Running             2024-11-22T03:08:22Z              9m36s\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster\nDESCRIPTION: Azure CLI commands to connect to an AKS cluster by setting the subscription and retrieving cluster credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription <subscription>;\naz aks get-credentials \\\n    --resource-group <resource-group> \\\n    --name <name>\n```\n\n----------------------------------------\n\nTITLE: Listing VM SKU Capabilities with Azure CLI\nDESCRIPTION: This command uses the Azure CLI to list available VM SKUs for a specific location. It outputs the names of the SKUs in a table format.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-autoprovision.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz vm list-skus --resource-type virtualMachines --location <location> --query '[].name' --output table\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up GPU Workload Resources\nDESCRIPTION: Removes the GPU workload job from the Kubernetes cluster\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-windows-gpu.md#2025-04-21_snippet_13\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete jobs windows-gpu-workload\n```\n\n----------------------------------------\n\nTITLE: Disabling Automatic Updates for App Configuration Extension\nDESCRIPTION: Syntax to disable automatic updates of the Azure App Configuration extension in both Azure CLI and Bicep formats.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-app-configuration.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\n--auto-upgrade-minor-version false\n```\n\nLANGUAGE: bicep\nCODE:\n```\nproperties {\n  autoUpgradeMinorVersion: false\n}\n```\n\n----------------------------------------\n\nTITLE: Creating SSH Keys for AKS Authentication\nDESCRIPTION: Commands to generate SSH key pairs either using Azure CLI's sshkey command or the traditional ssh-keygen utility. SSH keys are required for secure authentication to the AKS cluster nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-bicep-kubernetes-extension.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Create an SSH key pair using Azure CLI\naz sshkey create --name \"mySSHKey\" --resource-group \"myResourceGroup\"\n\n# Create an SSH key pair using ssh-keygen\nssh-keygen -t rsa -b 4096\n```\n\n----------------------------------------\n\nTITLE: Connecting to MongoDB Cluster with mongosh\nDESCRIPTION: Establishes a connection to the MongoDB cluster using the mongosh shell client and a connection string stored in the CONN_STR environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nmongosh $CONN_STR\n```\n\n----------------------------------------\n\nTITLE: Update AKS Cluster from ManagedNATGateway to UserDefinedRouting\nDESCRIPTION: Converts cluster outbound type to userDefinedRouting. Requires adding a 0.0.0.0/0 default route table before execution.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/egress-outboundtype.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group <resourceGroup> --name <clusterName> --outbound-type userDefinedRouting\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for Private AKS Cluster\nDESCRIPTION: Uses Azure CLI to create a new resource group for the private AKS cluster. This step is optional if an existing resource group is available.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/private-clusters.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create \\\n    --name <private-cluster-resource-group> \\\n    --location <location>\n```\n\n----------------------------------------\n\nTITLE: Getting Application URL in Bash\nDESCRIPTION: Bash commands to retrieve and display the public URL of the deployed application from the AKS ingress.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nexport APP_URL=https://$(kubectl get ingress | grep javaee-cafe-cluster-agic-ingress | cut -d \" \" -f14)/\necho $APP_URL\n```\n\n----------------------------------------\n\nTITLE: Markdown Configuration and Metadata\nDESCRIPTION: YAML frontmatter defining document metadata including title, description, author and date information.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/keda-about.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Kubernetes Event-driven Autoscaling (KEDA)\ndescription: Simplified application autoscaling with Kubernetes Event-driven Autoscaling (KEDA) add-on.\nauthor: tomkerkhove\nms.topic: concept-article\nms.date: 08/08/2023\nms.author: tomkerkhove\n---\n```\n\n----------------------------------------\n\nTITLE: AKS Cluster Creation Success Output\nDESCRIPTION: Example output snippet showing successful creation of the AKS cluster with provisioning state 'Succeeded'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_17\n\nLANGUAGE: output\nCODE:\n```\n  \"nodeResourceGroup\": \"MC_<your resource_group_name>_<your cluster name>_<your region>\",\n  \"privateFqdn\": null,\n  \"provisioningState\": \"Succeeded\",\n  \"resourceGroup\": \"<your resource group name>\",\n```\n\n----------------------------------------\n\nTITLE: Creating Backend Secret for Azure NetApp Files in YAML\nDESCRIPTION: This YAML file defines a Kubernetes Secret that stores the client ID and client secret required for authenticating with Azure NetApp Files.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: backend-tbc-anf-secret\ntype: Opaque\nstringData:\n  clientID: 00001111-aaaa-2222-bbbb-3333cccc4444\n  clientSecret: rR0rUmWXfNioN1KhtHisiSAnoTherboGuskey6pU\n```\n\n----------------------------------------\n\nTITLE: Creating Backend Secret Configuration for Azure NetApp Files\nDESCRIPTION: YAML configuration for creating a Kubernetes secret to store Azure NetApp Files authentication credentials including Client ID and Secret.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-smb.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: backend-tbc-anf-secret\ntype: Opaque\nstringData:\n  clientID: 00001111-aaaa-2222-bbbb-3333cccc4444\n  clientSecret: rR0rUmWXfNioN1KhtHisiSAnoTherboGuskey6pU\n```\n\n----------------------------------------\n\nTITLE: Verifying API Access\nDESCRIPTION: Verifies access to the API server by retrieving member clusters\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/access-fleet-hub-cluster-kubernetes-api.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get memberclusters\n```\n\n----------------------------------------\n\nTITLE: HTML response from successful authentication\nDESCRIPTION: This is the HTML output displayed when the authentication is successful. It includes a message confirming successful login and instructions for using Web Account Manager on Windows.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/azd/azd-login-ts.md#2025-04-21_snippet_3\n\nLANGUAGE: output\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"refresh\" content=\"60;url=https://docs.microsoft.com/cli/azure/\">\n    <title>Login successfully</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n\n        code {\n            font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;\n            display: inline-block;\n            background-color: rgb(242, 242, 242);\n            padding: 12px 16px;\n            margin: 8px 0px;\n        }\n    </style>\n</head>\n<body>\n    <h3>You have logged into Microsoft Azure!</h3>\n    <p>You can close this window, or we will redirect you to the <a href=\"https://docs.microsoft.com/cli/azure/\">Azure CLI documentation</a> in 1 minute.</p>\n    <h3>Announcements</h3>\n    <p>[Windows only] Azure CLI is collecting feedback on using the <a href=\"https://learn.microsoft.com/windows/uwp/security/web-account-manager\">Web Account Manager</a> (WAM) broker for the login experience.</p>\n    <p>You may opt-in to use WAM by running the following commands:</p>\n    <code>\n        az config set core.allow_broker=true<br>\n        az account clear<br>\n        az login\n    </code>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating Admin Group in Microsoft Entra ID\nDESCRIPTION: Creates an 'admin' group in Microsoft Entra ID using the Azure CLI. This group will have admin access to the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/privileged-identity-management.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nADMIN_ID=$(az ad group create \\\n    --display-name admin \\\n    --mail-nickname admin \\\n    --query id \\\n    --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with IMDS Restriction\nDESCRIPTION: Command to create a new AKS cluster with IMDS restriction enabled.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/imds-restriction.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSCluster \\\n    --enable-imds-restriction\n```\n\n----------------------------------------\n\nTITLE: Creating Demo Namespace in Kubernetes\nDESCRIPTION: Command to create a namespace called 'demo' for running example pods. This isolates the test resources in their own namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-network-policies.md#2025-04-21_snippet_15\n\nLANGUAGE: console\nCODE:\n```\nkubectl create namespace demo\n```\n\n----------------------------------------\n\nTITLE: Deleting and Scaling Node Pool\nDESCRIPTION: Azure CLI commands to delete blocked machines and scale the node pool to restore original size and cluster status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-cluster.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool delete-machines --cluster-name $CLUSTER_NAME --machine-names aks-$NODE_POOL_NAME-test123-vmss000000 --name $NODE_POOL_NAME --resource-group $RESOURCE_GROUP\n\n# Update the cluster to restore the provisioning status\naz aks update --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME\n\n# Scale the node pool to restore the original size\naz aks nodepool scale --resource-group $RESOURCE_GROUP --cluster-name $CLUSTER_NAME --name $NODE_POOL_NAME --node-count 2\n```\n\n----------------------------------------\n\nTITLE: Verifying Sidecar Injection in Pods\nDESCRIPTION: Checks that istio-proxy container appears as an init container in pods, which confirms that native sidecar mode is successfully enabled and applied.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/istio-native-sidecar.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -o \"custom-columns=NAME:.metadata.name,INIT:.spec.initContainers[*].name,CONTAINERS:.spec.containers[*].name\"\n```\n\n----------------------------------------\n\nTITLE: Listing Nodes in AKS Cluster\nDESCRIPTION: List all nodes in the AKS cluster using the kubectl get nodes command. This helps identify which nodes are part of the FIPS-enabled node pool.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/enable-fips-nodes.md#2025-04-21_snippet_7\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Disabling Pod-Managed Identity on AKS Cluster\nDESCRIPTION: Commands to disable pod-managed identity on an existing AKS cluster. This involves removing the pod identities and then disabling the feature on the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-ad-pod-identity.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks pod-identity delete --name ${POD_IDENTITY_NAME} --namespace ${POD_IDENTITY_NAMESPACE} --resource-group myResourceGroup --cluster-name myAKSCluster\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --resource-group myResourceGroup --name myAKSCluster --disable-pod-identity\n```\n\n----------------------------------------\n\nTITLE: Minimal Ingestion Profile Metrics - ETCD\nDESCRIPTION: List of metrics collected by default for the controlplane-etcd target when minimal ingestion profile is enabled\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/monitor-aks-reference.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\netcd_server_has_leader\nrest_client_requests_total\netcd_mvcc_db_total_size_in_bytes\netcd_mvcc_db_total_size_in_use_in_bytes\netcd_server_slow_read_indexes_total\netcd_server_slow_apply_total\netcd_network_client_grpc_sent_bytes_total\netcd_server_heartbeat_send_failures_total\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Flexible Server Creation Output\nDESCRIPTION: Example output from the PostgreSQL flexible server creation command showing the connection string, database name, hostname, and other configuration details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_6\n\nLANGUAGE: output\nCODE:\n```\n{\n  \"connectionString\": \"postgresql://REDACTED@ejb011212qdb.postgres.database.azure.com/demodb?sslmode=require\",\n  \"databaseName\": \"demodb\",\n  \"firewallName\": \"AllowAllAzureServicesAndResourcesWithinAzureIps_2024-12-12_14-30-22\",\n  \"host\": \"ejb011212qdb.postgres.database.azure.com\",\n  \"id\": \"/subscriptions/c7844e91-b11d-4a7f-ac6f-996308fbcdb9/resourceGroups/ejb011211sfi/providers/Microsoft.DBforPostgreSQL/flexibleServers/ejb011212qdb\",\n  \"location\": \"East US 2\",\n  \"password\": \"REDACTED\",\n  \"resourceGroup\": \"ejb011211sfi\",\n  \"skuname\": \"Standard_B1ms\",\n  \"username\": \"sorrycamel2\",\n  \"version\": \"16\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Node Pool to an Existing AKS Cluster using Azure PowerShell\nDESCRIPTION: Adds a new node pool named 'systempool' with three nodes to an existing AKS cluster using Azure PowerShell. Note that this creates a user node pool by default, which would need to be updated to a system node pool later.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-system-pools.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n# By default, New-AzAksNodePool creates a user node pool\n# We need to update the node pool's mode to System later\nNew-AzAksNodePool -ResourceGroupName myResourceGroup -ClusterName myAKSCluster -Name systempool -Count 3\n```\n\n----------------------------------------\n\nTITLE: Sample Pod Log Output\nDESCRIPTION: Example log output from the AI service pod showing successful initialization. Note that while it mentions missing configuration variables, it indicates that Azure Identity SDK handles setting the necessary AZURE_CLIENT_ID and AZURE_TENANT_ID variables.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/open-ai-secure-access-quickstart.md#2025-04-21_snippet_15\n\nLANGUAGE: output\nCODE:\n```\nIncomplete environment configuration. These variables are set: AZURE_CLIENT_ID, AZURE_TENANT_ID\nINFO:     Started server process [1]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://0.0.0.0:5001 (Press CTRL+C to quit)\n```\n\n----------------------------------------\n\nTITLE: Output from NGINX Ingress Controller Status Check\nDESCRIPTION: Example output showing the status of a created NGINX ingress controller, including its availability status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/app-routing-nginx-configuration.md#2025-04-21_snippet_17\n\nLANGUAGE: output\nCODE:\n```\nNAME           INGRESSCLASS   CONTROLLERNAMEPREFIX   AVAILABLE\nnginx-public   nginx-public   nginx                  True\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group in Azure with CLI\nDESCRIPTION: Command to create a new Azure resource group named 'myResourceGroup' in the East US region, which will contain all the resources for the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name myResourceGroup --location eastus\n```\n\n----------------------------------------\n\nTITLE: Installing MongoDB Tools on macOS\nDESCRIPTION: Command to install MongoDB tools using Homebrew package manager, which are needed to import data into the Azure Cosmos DB instance.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/openfaas.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nbrew install mongodb\n```\n\n----------------------------------------\n\nTITLE: Testing Allowed FQDN Connection\nDESCRIPTION: Tests connectivity to an allowed FQDN (*.bing.com) from the test pod. This connection should succeed as it matches the Cilium Network Policy rules.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/how-to-apply-fqdn-filtering-policies.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nbash-5.0# ./agnhost connect www.bing.com:80\n```\n\n----------------------------------------\n\nTITLE: Verifying Staging Files for WebLogic Auxiliary Image\nDESCRIPTION: Bash commands to list and verify all the staging files created for the WebLogic auxiliary image before building.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-wls-app.md#2025-04-21_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\ncd ${BASE_DIR}/mystaging\nfind -maxdepth 2 -type f -print\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for AKS Cluster\nDESCRIPTION: Creates an Azure resource group using Azure CLI to contain AKS resources. Requires environment variables for resource group name and location.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/advanced-container-networking-services-overview.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n# Set environment variables for the resource group name and location. Make sure to replace the placeholders with your own values.\nexport RESOURCE_GROUP=\"<resource-group-name>\"\nexport LOCATION=\"<azure-region>\"\n# Create a resource group\naz group create --name $RESOURCE_GROUP --location $LOCATION\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Cluster Extension using Azure CLI\nDESCRIPTION: Command to remove an extension from an AKS cluster. Requires EXTENSION_NAME, CLUSTER_NAME, and RESOURCE_GROUP environment variables to be set.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-marketplace.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz k8s-extension delete --name $EXTENSION_NAME --cluster-name $CLUSTER_NAME --resource-group $RESOURCE_GROUP --cluster-type managedClusters\n```\n\n----------------------------------------\n\nTITLE: Deleting Pod Security Policy in Kubernetes\nDESCRIPTION: This command deletes the previously created pod security policy from the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_18\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete -f psp-deny-privileged.yaml\n```\n\n----------------------------------------\n\nTITLE: Validating Azure File Contents in Windows Container\nDESCRIPTION: Commands to verify the contents of the file stored in the Azure File share mounted in a Windows container, showing versions for both Linux/macOS and Windows terminal systems.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-files-csi.md#2025-04-23_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it busybox-azurefile-0 -- cat c:\\\\mnt\\\\azurefile\\\\data.txt # on Linux/MacOS Bash\nkubectl exec -it busybox-azurefile-0 -- cat c:\\mnt\\azurefile\\data.txt # on Windows Powershell/CMD\n```\n\n----------------------------------------\n\nTITLE: Viewing RayJob Logs\nDESCRIPTION: Command to view the training logs of a specific RayJob pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs -n kuberay rayjob-pytorch-mnist-fc959\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster with Azure CNI and Static Block IP Allocation\nDESCRIPTION: Creates an AKS cluster with Azure CNI networking plugin and StaticBlock pod IP allocation mode. It configures separate subnets for nodes and pods, and enables the monitoring add-on. The cluster supports up to 250 pods per node.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-static-block-allocation.md#2025-04-23_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\nclusterName=\"myAKSCluster\"\nsubscription=\"aaaaaaa-aaaaa-aaaaaa-aaaa\"\n\naz aks create \\\n    --name $clusterName \\\n    --resource-group $resourceGroup \\\n    --location $location \\\n    --max-pods 250 \\\n    --node-count 2 \\\n    --network-plugin azure \\\n    --pod-ip-allocation-mode StaticBlock \\\n    --vnet-subnet-id /subscriptions/$subscription/resourceGroups/$resourceGroup/providers/Microsoft.Network/virtualNetworks/$vnet/subnets/nodesubnet \\\n    --pod-subnet-id /subscriptions/$subscription/resourceGroups/$resourceGroup/providers/Microsoft.Network/virtualNetworks/$vnet/subnets/podsubnet \\\n    --enable-addons monitoring \\\n    --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Verifying wasmCloud Host Status\nDESCRIPTION: Checks the status of the wasmCloud host pod using kubectl to ensure it's running correctly.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/wasmcloud.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod -l app.kubernetes.io/instance=wasmcloud-host\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volume for Blob Storage using NFS in YAML\nDESCRIPTION: This YAML snippet defines a PersistentVolume for Azure Blob Storage using the NFS protocol. It specifies the storage capacity, access mode, and CSI driver details.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  annotations:\n    pv.kubernetes.io/provisioned-by: blob.csi.azure.com\n  name: pv-blob\nspec:\n  capacity:\n    storage: 1Pi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain  # If set as \"Delete\" container would be removed after pvc deletion\n  storageClassName: azureblob-nfs-premium\n  mountOptions:\n    - nconnect=4\n  csi:\n    driver: blob.csi.azure.com\n    # make sure volumeid is unique for every identical storage blob container in the cluster\n    # character `#` and `/` are reserved for internal use and cannot be used in volumehandle\n    volumeHandle: account-name_container-name\n    volumeAttributes:\n      resourceGroup: resourceGroupName\n      storageAccount: storageAccountName\n      containerName: containerName\n      protocol: nfs\n```\n\n----------------------------------------\n\nTITLE: Creating a ClusterResourcePlacement for ResourceOverride Distribution\nDESCRIPTION: This YAML manifest defines a ClusterResourcePlacement resource to distribute namespace resources across clusters with specific labels. It uses a PickAll placement type and defines cluster affinity rules to target clusters with prod or test environment labels.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/resource-override.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-example\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-namespace\n      version: v1\n  policy:\n    placementType: PickAll\n    affinity:\n      clusterAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  env: prod\n            - labelSelector:\n                matchLabels:\n                  env: test\n```\n\n----------------------------------------\n\nTITLE: Advanced Fleet Update Run Filtering with Stage and Group Analysis\nDESCRIPTION: Complex KQL query that unpacks stages, groups, and member clusters to identify failed clusters in specific stages and groups using mv-expand and json_parse\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-monitor-update-runs.md#2025-04-21_snippet_3\n\nLANGUAGE: kusto\nCODE:\n```\naksresources\n| where type == \"microsoft.containerservice/fleets/updateruns\"\n| where id contains ('Microsoft.ContainerService/fleets/your-fleet-name')\n| extend parsedProperties = parse_json(properties)\n| mv-expand stages = parsedProperties.status.stages\n| mv-expand groups = stages.groups\n| mv-expand members = groups.members\n| where properties.status.status.state == \"Failed\"\n| where stages.name == \"prod\" and groups.name == \"canary\" and members.status.state == \"Failed\"\n| project stageName = stages.name, groupName = groups.name, memberName = members.name, memberState = members.status.state, memberStartTime = members.status.startTime\n```\n\n----------------------------------------\n\nTITLE: Defining Rolling Update Strategy for Cluster Resource Placement in YAML\nDESCRIPTION: This YAML snippet demonstrates how to define an explicit rolling update strategy for a cluster resource placement. It includes configuration for resourceSelectors, policy, and strategy parameters like maxUnavailable and maxSurge.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-example\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-namespace\n      version: v1\n  policy:\n    placementType: PickN\n    numberOfClusters: 2\n    affinity:\n      clusterAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          clusterSelectorTerms:\n            - labelSelector:\n                matchLabels:\n                  fleet.azure.com/location: westus\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n      maxSurge: 50%\n```\n\n----------------------------------------\n\nTITLE: Creating a Test Pod for Connectivity Check\nDESCRIPTION: This kubectl command creates a test pod and opens an interactive shell to test connectivity to the virtual node pod.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_7\n\nLANGUAGE: Bash\nCODE:\n```\nkubectl run -it --rm virtual-node-test --image=mcr.microsoft.com/dotnet/runtime-deps:6.0\n```\n\n----------------------------------------\n\nTITLE: Querying AKS Resources for Failed Update Runs in Kusto\nDESCRIPTION: This Kusto query filters AKS resources to find failed update runs for a specific fleet. It extracts the start time of the failed runs and projects the id and startTime fields. The query is designed to be used in Azure Monitor log search alerts.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-monitor-update-runs.md#2025-04-21_snippet_4\n\nLANGUAGE: kusto\nCODE:\n```\narg(\"\").aksresources\n| where type == \"microsoft.containerservice/fleets/updateruns\"\n| where id contains ('Microsoft.ContainerService/fleets/your-fleet-name')\n| extend parsedProps = parse_json(properties)\n| where parsedProps.status.status.state == \"Failed\"\n| project id, startTime = parsedProps.status.status.startTime\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Network and Subnet for Private Hub Cluster in Azure CLI\nDESCRIPTION: Commands to create a virtual network and subnet for the hub cluster's node VMs, and capturing the subnet ID for later use. This establishes the networking environment required for a private hub cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz network vnet create --resource-group ${GROUP} --name vnet --address-prefixes 192.168.0.0/16\naz network vnet subnet create --resource-group ${GROUP} --vnet-name vnet --name subnet --address-prefixes 192.168.0.0/24\n\nSUBNET_ID=$(az network vnet subnet show --resource-group ${GROUP} --vnet-name vnet -n subnet -o tsv --query id)\n```\n\n----------------------------------------\n\nTITLE: Producer Code for Azure Storage Queue\nDESCRIPTION: Python code snippet that uses the Azure SDK for Python to send messages to an Azure Storage Queue. It authenticates using the DefaultAzureCredential class, which is workload identity aware.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-refactor.md#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom azure.identity import DefaultAzureCredential\nfrom azure.storage.queue import QueueClient\n# other imports removed for brevity\n\n# authenticate to the storage queue.\naccount_url = \"https://<storageaccountname>.queue.core.windows.net\"\ndefault_credential = DefaultAzureCredential()\naqs_queue_client = QueueClient(account_url, queue_name=queue_name ,credential=default_credential)\n\naqs_queue_client.create_queue()\naqs_queue_client.send_message('messageBody1')\n```\n\n----------------------------------------\n\nTITLE: Exporting Kubernetes Deployments for Migration to AKS\nDESCRIPTION: Command to export deployment configurations from an existing Kubernetes cluster to YAML format for migration to AKS. This allows you to capture your current deployment definitions that can then be applied to a new AKS cluster after reviewing and removing unnecessary live data fields.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/aks-migration.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -o yaml > deployments.yaml\n```\n\n----------------------------------------\n\nTITLE: Testing Connectivity to Virtual Node Pod\nDESCRIPTION: This curl command tests the connectivity to the pod running on the virtual node using its internal IP address.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/virtual-nodes-portal.md#2025-04-21_snippet_9\n\nLANGUAGE: Bash\nCODE:\n```\ncurl -L http://10.241.0.4\n```\n\n----------------------------------------\n\nTITLE: Markdown Links and References for AKS Documentation\nDESCRIPTION: Collection of markdown formatted links and references for navigating AKS documentation, including both external Kubernetes documentation and internal Azure documentation references.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/availability-zones-overview.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n## Next steps\n\n* Learn about [System Node pool](/azure/aks/use-system-pools)\n* Learn about [User Node pools](/azure/aks/create-node-pools)\n* Learn about [Load Balancers](/azure/aks/load-balancer-standard)\n* [Best practices for business continuity and disaster recovery in AKS][best-practices-multi-region]\n\n<!-- LINKS - external -->\n[kubernetes-well-known-labels]: https://kubernetes.io/docs/reference/labels-annotations-taints/\n\n<!-- LINKS - internal -->\n[aks-vm-sizes]: ./quotas-skus-regions.md#supported-vm-sizes\n[zones]: /azure/reliability/availability-zones-region-support\n[best-practices-multi-region]: ./operator-best-practices-storage.md\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterResourceOverride with Cluster Resource Selector in YAML\nDESCRIPTION: This YAML snippet demonstrates how to define a ClusterResourceOverride object with a cluster resource selector to specify which resources to override. It selects a ClusterRole object named 'secret-reader' from the rbac.authorization.k8s.io/v1 API group.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/cluster-resource-override.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1alpha1\nkind: ClusterResourceOverride\nmetadata:\n  name: example-cro\nspec:\n  clusterResourceSelectors:\n    - group: rbac.authorization.k8s.io\n      kind: ClusterRole\n      version: v1\n      name: secret-reader\n```\n\n----------------------------------------\n\nTITLE: Creating YAML Manifest for Kubernetes ClusterRoleBinding with Microsoft Entra ID\nDESCRIPTION: This YAML manifest creates a ClusterRoleBinding that assigns the cluster-admin role to a specific Microsoft Entra user. The userPrincipalName_or_objectId should be replaced with the actual UPN or object ID from the previous command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-ad-integration-cli.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: contoso-cluster-admins\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- apiGroup: rbac.authorization.k8s.io\n  kind: User\n  name: userPrincipalName_or_objectId\n```\n\n----------------------------------------\n\nTITLE: Snapshot Contents Example\nDESCRIPTION: Example YAML output showing the structure of a cluster resource snapshot, including selected resources and metadata.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-placement-snapshots.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourceSnapshot\nmetadata:\n  ...\n  labels:\n    kubernetes-fleet.io/is-latest-snapshot: \"true\"\n    kubernetes-fleet.io/parent-CRP: example-placement\n    kubernetes-fleet.io/resource-index: \"1\"\n  name: example-placement-1-snapshot\n  ...\nspec:\n  selectedResources:\n  - apiVersion: v1\n    kind: Namespace\n    metadata:\n      labels:\n        kubernetes.io/metadata.name: test-namespace\n      name: test-namespace\n    spec:\n      finalizers:\n      - kubernetes\n  - apiVersion: v1\n    data:\n      key: value2\n    kind: ConfigMap\n    metadata:\n      name: test-cm\n      namespace: test-namespace\n```\n\n----------------------------------------\n\nTITLE: Visualizing Top WAF Rule Groups with Kusto\nDESCRIPTION: A Kusto query that creates a pie chart of the top five WAF rule groups that matched traffic. This visualization helps understand which categories of threats are most common in your environment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-web-deploy.md#2025-04-21_snippet_13\n\nLANGUAGE: kusto\nCODE:\n```\nAzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.NETWORK\" and Category == \"ApplicationGatewayFirewallLog\"\n| summarize Count=count() by details_file_s, action_s\n| top 5 by Count desc\n| render piechart\n```\n\n----------------------------------------\n\nTITLE: Installing the aks-preview Azure CLI Extension\nDESCRIPTION: This command installs the aks-preview extension for Azure CLI, which is required for accessing preview features like dual-stack networking with Windows nodepools in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-cni-overlay.md#2025-04-21_snippet_6\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name aks-preview\n```\n\n----------------------------------------\n\nTITLE: Creating an Update Run with Azure CLI\nDESCRIPTION: Azure CLI command to create an update run in Azure Kubernetes Fleet Manager. This command creates a run that upgrades both Kubernetes versions and node images using a predefined JSON file for staging configuration.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_6\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz fleet updaterun create \\\n --resource-group $GROUP \\\n --fleet-name $FLEET \\\n --name run-1 \\\n --upgrade-type Full \\\n --kubernetes-version 1.26.0 \\\n --node-image-selection Latest \\\n --stages example-stages.json\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster Resource Placement for External Strategy in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure a cluster resource placement to use an external strategy. It specifies the resourceSelectors, policy, and sets the strategy type to External.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-staged-update-sample\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-namespace\n      version: v1\n  policy:\n    placementType: PickAll\n  strategy:\n    type: External\n```\n\n----------------------------------------\n\nTITLE: Restarting KEDA Operator Pods for Microsoft Entra Workload ID in AKS\nDESCRIPTION: A series of kubectl commands to restart KEDA operator pods and verify the injection of Microsoft Entra Workload ID environment variables. These commands ensure that KEDA can properly authenticate using the Workload Identity features in AKS.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/keda/keda-workload-identity-callout.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart deployment keda-operator -n kube-system\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod -n kube-system\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod <keda-operator-pod> -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Checking API Version Usage with Azure CLI\nDESCRIPTION: Azure CLI command to query activity logs for specific API version usage within the last 30 days, limited to 10000 events in the Container Service Fleets namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-preview-api-lifecycle.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\nAPI_VERSION=\"2024-05-02-preview\"\naz monitor activity-log list \\\n    --offset 30d \\\n    --max-events 10000 \\\n    --namespace microsoft.containerservice.fleets \\\n    --query \"[?eventName.value == 'EndRequest' && contains(not_null(httpRequest.uri,''), '${API_VERSION}')]\"\n```\n\n----------------------------------------\n\nTITLE: Sample Workload YAML Configuration\nDESCRIPTION: YAML configuration for deploying a sample nginx workload with service and deployment definitions\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/intelligent-resource-placement.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\n  namespace: test-app\nspec:\n  selector:\n    app: nginx\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n  type: LoadBalancer\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  namespace: test-app\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.16.1 \n        ports:\n        - containerPort: 80\n```\n\n----------------------------------------\n\nTITLE: Setting up access to an AKS cluster for monitoring and management\nDESCRIPTION: These commands set the current subscription and retrieve credentials for an AKS cluster to enable monitoring and management. This setup is required before applying configurations or monitoring IP subnet usage.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-dynamic-ip-allocation.md#2025-04-23_snippet_5\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription $SUBSCRIPTION\naz aks get-credentials --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Store Demo Application with kubectl\nDESCRIPTION: Applies a Kubernetes manifest file from GitHub to deploy the AKS Store demo application, including its frontend, services, and RabbitMQ components, into the aks-store-demo namespace.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n aks-store-demo -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/aks-store-ingress-quickstart.yaml\n```\n\n----------------------------------------\n\nTITLE: Executing Ray Deployment Script\nDESCRIPTION: Commands to make the deployment script executable and run it for non-interactive deployment\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-ray.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nchmod +x deploy.sh\n./deploy.sh\n```\n\n----------------------------------------\n\nTITLE: Approval Payload Format for Staged Updates in AKS\nDESCRIPTION: This JSON structure represents the format for submitting approval responses in staged updates, including status conditions.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-rollout-strategy.md#2025-04-23_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"status\":\n    {\n        \"conditions\":[\n            {\n                \"type\":\"Approved\",\n                \"status\":\"True\",\n                \"reason\":\"reason for approval\",\n                \"message\":\"longer message describing approval\",\n                \"lastTransitionTime\":\"2025-03-12T06:15:21Z\",\n                \"observedGeneration\":1\n            }\n          ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Label Selector and Property Based Placement\nDESCRIPTION: YAML configuration for cluster resource placement combining label selection and property sorting\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/intelligent-resource-placement.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-demo\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-app\n      version: v1\n  policy:\n    placementType: PickN\n    numberOfClusters: 10\n    affinity:\n        clusterAffinity:\n            preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 20\n              preference:\n                labelSelector:\n                  matchLabels:\n                    env: prod\n                metricSorter:\n                  name: resources.kubernetes-fleet.io/total-cpu\n                  sortOrder: Descending\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterResourcePlacement in Azure Kubernetes Fleet\nDESCRIPTION: YAML configuration for creating a ClusterResourcePlacement that distributes a namespace across all clusters. The placement uses the PickAll policy type to distribute the 'my-namespace' resource to all available clusters.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-resource-propagation.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: distribute-my-namespace\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      version: v1          \n      name: my-namespace\n  policy:\n    placementType: PickAll\n```\n\n----------------------------------------\n\nTITLE: Verifying ResourceOverride Application with kubectl describe\nDESCRIPTION: This Bash command checks the status of a ClusterResourcePlacement resource to verify if the ResourceOverride was successfully applied to the selected resources. It shows how to inspect the results of the override operation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/resource-override.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe clusterresourceplacement crp-example\n```\n\n----------------------------------------\n\nTITLE: Updating Fleet Member Identity in Azure CLI\nDESCRIPTION: Azure CLI command to recreate a fleet member after changing the cluster identity. This command updates the fleet's awareness of the member cluster's new identity by creating the member connection with updated credentials.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/faq.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz fleet member create \\\n    --resource-group ${GROUP} \\\n    --fleet-name ${FLEET} \\\n    --name ${MEMBER_NAME} \\\n    --member-cluster-id ${MEMBER_CLUSTER_ID}\n```\n\n----------------------------------------\n\nTITLE: Stopping an Update Run with Azure CLI\nDESCRIPTION: Azure CLI command to halt a running update run in Azure Kubernetes Fleet Manager. This command stops the update process for all clusters that haven't yet been updated.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-orchestration.md#2025-04-23_snippet_8\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz fleet updaterun stop \\\n --resource-group $GROUP \\\n --fleet-name $FLEET \\\n --name <run-name>\n```\n\n----------------------------------------\n\nTITLE: Listing Fleet Member Clusters in Azure CLI\nDESCRIPTION: Command to list all member clusters in a Fleet resource for verification using the Azure CLI. This produces a table output showing cluster resource IDs, names, provisioning states, and resource groups.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\naz fleet member list --resource-group ${GROUP} --fleet-name ${FLEET} -o table\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Quickstart Resources with Azure Developer CLI\nDESCRIPTION: Uses the 'azd down' command to remove all resources created during the AKS quickstart. This command prompts for confirmation before deleting resources and offers an option to permanently delete resources for name reuse.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-azd.md#2025-04-21_snippet_6\n\nLANGUAGE: azdeveloper\nCODE:\n```\nazd down\n```\n\n----------------------------------------\n\nTITLE: Verifying KEDA Operator Pods\nDESCRIPTION: Check if KEDA operator pods are running in the kube-system namespace of the AKS cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/eks-edw-deploy.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods --namespace kube-system | grep keda\n```\n\n----------------------------------------\n\nTITLE: Creating Windows Node Pool with Generation 2 VM\nDESCRIPTION: Azure CLI command to add a new Windows node pool using Generation 2 VM, requiring Windows Server 2022 and custom header specification.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/generation-2-vm.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks nodepool add --resource-group <resource-group-name> --cluster-name <cluster-name> --name <node-pool-name> --node-vm-size <supported-generation-2-vm-size> --os-type Windows --os-sku Windows2022 --aks-custom-headers UseWindowsGen2VM=true\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for AKS Member Clusters in Azure CLI\nDESCRIPTION: Command to set environment variables needed for joining member clusters to a Fleet. This defines the member cluster name and resource ID for subsequent commands.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport MEMBER_NAME_1=aks-member-1\nexport MEMBER_CLUSTER_ID_1=/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${GROUP}/providers/Microsoft.ContainerService/managedClusters/${MEMBER_NAME_1}\n```\n\n----------------------------------------\n\nTITLE: Viewing AKS Upgrade Events using kubectl\nDESCRIPTION: This command shows how to view upgrade events in an AKS cluster using kubectl. It displays events related to node draining, soak duration, and surge node creation during the upgrade process.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-aks-cluster.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get events\n```\n\n----------------------------------------\n\nTITLE: Configuring PickFixed Placement Type in ClusterResourcePlacement\nDESCRIPTION: Example of a ClusterResourcePlacement using PickFixed placement type to deploy a test-deployment namespace to specific member clusters named 'cluster1' and 'cluster2'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-resource-propagation.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-fixed\nspec:\n  policy:\n    placementType: PickFixed\n    clusterNames:\n    - cluster1\n    - cluster2\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-deployment\n      version: v1\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Backup Status with kubectl\nDESCRIPTION: Command to describe a specific backup resource and check its status, showing the progression from starting to completion. This validates the backup process has completed successfully.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/validate-postgresql-ha.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe backup $BACKUP_ONDEMAND_NAME \\\n    --context $AKS_PRIMARY_CLUSTER_NAME \\\n    --namespace $PG_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Node Count Based Placement Configuration\nDESCRIPTION: YAML configuration for cluster resource placement based on node count with descending order preference\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/intelligent-resource-placement.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1\nkind: ClusterResourcePlacement\nmetadata:\n  name: crp-demo\nspec:\n  resourceSelectors:\n    - group: \"\"\n      kind: Namespace\n      name: test-app\n      version: v1\n  policy:\n    placementType: PickN\n    numberOfClusters: 10\n    affinity:\n        clusterAffinity:\n            preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 20\n              preference:\n                metricSorter:\n                  name: kubernetes-fleet.io/node-count\n                  sortOrder: Descending\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Commands for Service Deployment and Verification\nDESCRIPTION: Series of kubectl commands to create namespace, apply configurations, and verify the deployment status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/l4-load-balancing.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nKUBECONFIG=fleet kubectl create namespace kuard-demo\nKUBECONFIG=fleet kubectl apply -f https://raw.githubusercontent.com/Azure/AKS/master/examples/fleet/kuard/kuard-export-service.yaml\nKUBECONFIG=fleet kubectl apply -f crp-2.yaml\nKUBECONFIG=fleet kubectl get clusterresourceplacements\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for Blob Storage Access in Bash\nDESCRIPTION: This Bash command creates a Kubernetes Secret containing the Azure storage account name and key, which is used for authentication when mounting Blob storage using Blobfuse.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-csi-blob-storage-provision.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic azure-secret --from-literal azurestorageaccountname=NAME --from-literal azurestorageaccountkey=\"KEY\" --type=Opaque\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Azure Container Storage Resources\nDESCRIPTION: These commands delete the pod, storage pool, and Azure Container Storage extension from the AKS cluster to avoid unnecessary Azure charges.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-deploy-azure-container-storage.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl delete pod fiopod\nkubectl delete sp -n acstor <storage-pool-name>\naz aks update -n myAKSCluster -g myResourceGroup --disable-azure-container-storage all\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Azure CLI\nDESCRIPTION: Commands to configure kubectl to connect to your AKS cluster using Azure CLI, and verify the connection by listing all nodes in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-portal.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kubernetes\nDESCRIPTION: This command retrieves the status of pods in the Kubernetes cluster. It's used to verify if a pod has been successfully scheduled and is running after applying the YAML manifest.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-azure-policy.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Upgrading Fleet Resource to Hub Cluster Type\nDESCRIPTION: Upgrades an existing hubless fleet resource to include a hub cluster using the Azure CLI. This operation is irreversible and makes the fleet resource configuration immutable.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/upgrade-hub-cluster-type.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\n# Upgrade the Kubernetes fleet resource without a hub cluster to one with a hub cluster\naz fleet create --name $FLEET --resource-group $RG --enable-hub\n```\n\n----------------------------------------\n\nTITLE: Sample Output of AKS Cluster Validation with PowerShell\nDESCRIPTION: Example output from the Get-AzAksCluster cmdlet showing the cluster's properties after a successful upgrade to Kubernetes version 1.29.2.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/tutorial-kubernetes-upgrade-cluster.md#2025-04-21_snippet_13\n\nLANGUAGE: output\nCODE:\n```\nName             Location     KubernetesVersion     ProvisioningState\n----             --------     -----------------     -----------------\nmyAKSCluster     westus2       1.29.2                Succeeded\n```\n\n----------------------------------------\n\nTITLE: Applying and Verifying Storage Class using kubectl in Bash\nDESCRIPTION: These commands apply the storage class configuration and then list all storage classes to verify its creation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f anf-storageclass.yaml\nkubectl get sc\n```\n\n----------------------------------------\n\nTITLE: Verifying ClusterResourceOverride Application using kubectl\nDESCRIPTION: This bash command verifies that the ClusterResourceOverride object was applied to the selected resources by checking the status of the ClusterResourcePlacement resource using kubectl describe command.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/cluster-resource-override.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe clusterresourceplacement crp\n```\n\n----------------------------------------\n\nTITLE: Defining User Assigned Managed Identity with Bicep\nDESCRIPTION: This Bicep template defines a user assigned managed identity for the AKS cluster. It includes a parameter for the identity name.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-private-custom-network.md#2025-04-23_snippet_8\n\nLANGUAGE: bicep\nCODE:\n```\nparam uamiName string = 'aksAutomaticUAMI'\n\nresource uami 'Microsoft.ManagedIdentity/userAssignedIdentities@2018-11-30' = {\n  name: uamiName\n  location: resourceGroup().location\n}\n```\n\n----------------------------------------\n\nTITLE: Cluster Resource Placement Eviction Configuration\nDESCRIPTION: YAML definition for creating a ClusterResourcePlacementEviction object to remove resources from a specific cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-eviction-disruption.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: placement.kubernetes-fleet.io/v1beta1\nkind: ClusterResourcePlacementEviction\nmetadata:\n  name: eviction-sample\nspec:\n  placementName: crp-app-sample\n  clusterName: member-cluster-02\n```\n\n----------------------------------------\n\nTITLE: Creating a Blob Container\nDESCRIPTION: Command to create a blob container in the storage account using Azure AD authentication, which will be used as a storage target for the HPC Cache.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-hpc-cache.md#2025-04-21_snippet_12\n\nLANGUAGE: azurecli\nCODE:\n```\naz storage container create --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT_NAME --auth-mode login\n```\n\n----------------------------------------\n\nTITLE: Adding Default Windows Node Pool\nDESCRIPTION: Adds a Windows Server node pool to the AKS cluster using default OS SKU based on Kubernetes version.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzAksNodePool -ResourceGroupName myResourceGroup `\n    -ClusterName myAKSCluster `\n    -VmSetType VirtualMachineScaleSets `\n    -OsType Windows `\n    -Name npwin\n```\n\n----------------------------------------\n\nTITLE: Update Strategy Stages Configuration\nDESCRIPTION: JSON configuration defining update strategy stages, groups, and wait times between stages.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-create-update-strategy.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"stages\": [\n        {\n            \"name\": \"stage-1\",\n            \"groups\": [\n                {\n                    \"name\": \"group-1\"\n                },\n                {\n                    \"name\": \"group-2\"\n                }\n            ],\n            \"afterStageWaitInSeconds\": 300\n        },\n        {\n            \"name\": \"stage-2\",\n            \"groups\": [\n                {\n                    \"name\": \"group-3\"\n                }\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Executing curl request to localhost URL\nDESCRIPTION: This command uses curl to access the localhost URL generated from the previous login attempt. This completes the authentication flow by retrieving the authentication token.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/azd/azd-login-ts.md#2025-04-21_snippet_1\n\nLANGUAGE: console\nCODE:\n```\ncurl <localhost>\n```\n\n----------------------------------------\n\nTITLE: Creating PVC using kubectl\nDESCRIPTION: Commands to create and verify the PVC using kubectl, including checking the status and details of the created PVC.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/azure-netapp-files-nfs.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f anf-pvc.yaml\n```\n\nLANGUAGE: output\nCODE:\n```\npersistentvolumeclaim/anf-pvc created\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pvc\n```\n\nLANGUAGE: output\nCODE:\n```\nkubectl get pvc -n trident\nNAME      STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS         AGE\nanf-pvc   Bound    pvc-bffa315d-3f44-4770-86eb-c922f567a075   1Ti        RWO            azure-netapp-files   62s\n```\n\n----------------------------------------\n\nTITLE: Setting Azure subscription\nDESCRIPTION: This command sets the active Azure subscription for subsequent commands. It requires the subscription ID copied from the JSON output of the previous login step.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/includes/azd/azd-login-ts.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz account set --subscription <subscription_id>\n```\n\n----------------------------------------\n\nTITLE: Deleting AKS Resources using Remove-AzResourceGroup in PowerShell\nDESCRIPTION: This PowerShell cmdlet removes the entire resource group containing the AKS cluster and all related resources. It's used for cleanup after the quickstart or when the resources are no longer needed.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-windows-container-deploy-powershell.md#2025-04-21_snippet_12\n\nLANGUAGE: PowerShell\nCODE:\n```\nRemove-AzResourceGroup -Name myResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Creating Auto-upgrade Profile for Stable Channel\nDESCRIPTION: Azure CLI commands for creating auto-upgrade profiles with various configurations for the Stable channel Kubernetes updates.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-automation.md#2025-04-21_snippet_2\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz fleet autoupgradeprofile create \\\n  --resource-group $GROUP \\\n  --fleet-name $FLEET \\\n  --name $AUTOUPGRADEPROFILE \\\n  --channel Stable\n```\n\nLANGUAGE: azurecli-interactive\nCODE:\n```\naz fleet autoupgradeprofile create \\\n  --resource-group $GROUP \\\n  --fleet-name $FLEET \\\n  --name $AUTOUPGRADEPROFILE \\\n  --update-strategy-id $STRATEGYID \\\n  --channel Stable\n```\n\n----------------------------------------\n\nTITLE: Registering PodSecurityPolicy Feature Flag in Azure\nDESCRIPTION: Series of commands to register and verify the PodSecurityPolicyPreview feature flag and refresh the resource provider.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/use-pod-security-policies.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature register --namespace \"Microsoft.ContainerService\" --name \"PodSecurityPolicyPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz feature show --namespace \"Microsoft.ContainerService\" --name \"PodSecurityPolicyPreview\"\n```\n\nLANGUAGE: azurecli\nCODE:\n```\naz provider register --namespace Microsoft.ContainerService\n```\n\n----------------------------------------\n\nTITLE: Enabling Container Insights Monitoring\nDESCRIPTION: Command to enable Container Insights monitoring addon in an existing AKS cluster for IP subnet usage tracking.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/configure-azure-cni-static-block-allocation.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks enable-addons --addons monitoring --name <cluster-name> --resource-group <resource-group-name>\n```\n\n----------------------------------------\n\nTITLE: API Version Declaration in ARM Template\nDESCRIPTION: Example of how to specify the API version for a Fleet resource in an ARM template using JSON format.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-preview-api-lifecycle.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"Microsoft.ContainerService/fleets\",\n  \"apiVersion\": \"2024-05-02-preview\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an AKS Automatic Cluster\nDESCRIPTION: Command to create an AKS Automatic cluster with default settings. The command specifies the resource group, cluster name, and sets the SKU to 'automatic'.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks create \\\n    --resource-group myResourceGroup \\\n    --name myAKSAutomaticCluster \\\n    --sku automatic\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Deployment Status\nDESCRIPTION: Bash command for monitoring pod deployment status and viewing detailed pod information in Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/upgrade-windows-os.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -o wide\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables\nDESCRIPTION: Sets required environment variables for subscription ID, resource group, and fleet name\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\nexport SUBSCRIPTION_ID=<subscription_id>\nexport GROUP=<your_resource_group_name>\nexport FLEET=<your_fleet_name>\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group\nDESCRIPTION: Sets subscription and creates a new resource group in the specified location\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set -s ${SUBSCRIPTION_ID}\naz group create --name ${GROUP} --location eastus\n```\n\n----------------------------------------\n\nTITLE: Updating Fleet Member Group Assignment\nDESCRIPTION: Azure CLI command to update an existing fleet member's update group assignment.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-create-update-strategy.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz fleet member update \\\n --resource-group $GROUP \\\n --fleet-name $FLEET \\\n --name member1 \\\n --update-group group-1a\n```\n\n----------------------------------------\n\nTITLE: Defining Ubuntu Job Runner Configuration\nDESCRIPTION: YAML configuration for specifying the job runner environment as Ubuntu.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-upgrade-github-actions.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n  upgrade-node:\n    runs-on: ubuntu-latest\n```\n\n----------------------------------------\n\nTITLE: Deploying to AKS\nDESCRIPTION: kubectl commands for deploying the application to AKS and verifying deployment status.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-quarkus-app.md#2025-04-21_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f target/kubernetes/kubernetes.yml -n ${AKS_NS}\n```\n\n----------------------------------------\n\nTITLE: Inspecting Specific Snapshot Details\nDESCRIPTION: Command to view detailed YAML output of a specific cluster resource snapshot.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-placement-snapshots.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get clusterresourcesnapshots example-placement-1-snapshot -o yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Update Strategy\nDESCRIPTION: Azure CLI command to create a new update strategy using a JSON configuration file.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/update-create-update-strategy.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz fleet updatestrategy create \\\n --resource-group $GROUP \\\n --fleet-name $FLEET \\\n --name $STRATEGY \\\n --stages example-stages.json\n```\n\n----------------------------------------\n\nTITLE: Checking CRD Versions\nDESCRIPTION: Kubernetes commands to check if old CRD versions are deployed in the cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/howto-migrate-preview-to-ga-fleets.md#2025-04-21_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\nkubectl get crd memberclusters.fleet.azure.com\nkubectl get crd internalmemberclusters.fleet.azure.com\n```\n\n----------------------------------------\n\nTITLE: Check Eviction Status Command\nDESCRIPTION: Bash command to verify the status of a cluster resource placement eviction.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/concepts-eviction-disruption.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get crpe eviction-sample\n```\n\n----------------------------------------\n\nTITLE: Setting SQL Database Variables in Bash\nDESCRIPTION: Sets environment variables for SQL Database configuration in Bash shell.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/howto-deploy-java-liberty-app.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport SQL_SERVER_NAME=<your-unique-sql-server-name>\nexport DB_NAME=demodb\n```\n\n----------------------------------------\n\nTITLE: Verifying Resource Propagation\nDESCRIPTION: Command to verify the resource propagation status using kubectl describe.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe clusterresourceplacement test-ns\n```\n\nLANGUAGE: output\nCODE:\n```\nstatus:\n  conditions:\n    - lastTransitionTime: \"2024-04-16T20:16:10Z\"\n      message: found all the clusters needed as specified by the scheduling policy\n      observedGeneration: 3\n      reason: SchedulingPolicyFulfilled\n      status: \"True\"\n      type: ClusterResourcePlacementScheduled\n    - lastTransitionTime: \"2024-04-16T20:16:15Z\"\n      message: All 1 cluster(s) are synchronized to the latest resources on the hub\n        cluster\n      observedGeneration: 3\n      reason: SynchronizeSucceeded\n      status: \"True\"\n      type: ClusterResourcePlacementSynchronized\n    - lastTransitionTime: \"2024-04-16T20:16:15Z\"\n      message: Successfully applied resources to 1 member clusters\n      observedGeneration: 3\n      reason: ApplySucceeded\n      status: \"True\"\n      type: ClusterResourcePlacementApplied\n  observedResourceIndex: \"0\"\n  placementStatuses:\n    - clusterName: kind-cluster-1\n      conditions:\n        - lastTransitionTime: \"2024-04-16T20:16:10Z\"\n          message: 'Successfully scheduled resources for placement in kind-cluster-1 (affinity\n        score: 0, topology spread score: 0): picked by scheduling policy'\n          observedGeneration: 3\n          reason: ScheduleSucceeded\n          status: \"True\"\n          type: Scheduled\n        - lastTransitionTime: \"2024-04-16T20:16:15Z\"\n          message: Successfully Synchronized work(s) for placement\n          observedGeneration: 3\n          reason: WorkSynchronizeSucceeded\n          status: \"True\"\n          type: WorkSynchronized\n        - lastTransitionTime: \"2024-04-16T20:16:15Z\"\n          message: Successfully applied resources\n          observedGeneration: 3\n          reason: ApplySucceeded\n          status: \"True\"\n          type: Applied\n  selectedResources:\n    - kind: Namespace\n      name: test-ns\n      version: v1\n```\n\n----------------------------------------\n\nTITLE: Checking Resource Propagation Status\nDESCRIPTION: Command to check the progress of resource propagation across the fleet.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-resource-propagation.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get clusterresourceplacement distribute-my-namespace\n```\n\n----------------------------------------\n\nTITLE: Describing PV Details Command\nDESCRIPTION: Command to retrieve details about a specific PersistentVolume\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pv pvName\n```\n\n----------------------------------------\n\nTITLE: Installing Fleet CLI Extension\nDESCRIPTION: Adds the Fleet extension to Azure CLI with minimum version 1.0.0\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/quickstart-create-fleet-and-members.md#2025-04-21_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz extension add --name fleet\n```\n\n----------------------------------------\n\nTITLE: Verifying Resource Placement\nDESCRIPTION: Command to check the status of the ClusterResourcePlacement\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/kubernetes-fleet/use-taints-tolerations.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe clusterresourceplacement test-ns\n```\n\n----------------------------------------\n\nTITLE: Apply PV Configuration Command\nDESCRIPTION: Kubernetes command to apply the PersistentVolume configuration\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/csi-migrate-in-tree-volumes.md#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f azurefile-mount-pv.yaml\n```\n\n----------------------------------------\n\nTITLE: Cloning KAITO Project Repository\nDESCRIPTION: This command clones the KAITO project GitHub repository to your local machine using git.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/kaito-custom-inference-model.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/kaito-project/kaito.git\n```\n\n----------------------------------------\n\nTITLE: Creating MongoDB Connection String\nDESCRIPTION: Decodes the Base64-encoded MongoDB database admin credentials from Kubernetes secrets and constructs a connection string for connecting to the MongoDB cluster.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/deploy-mongodb-cluster.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nexport databaseAdmin=$(kubectl get secret ${AKS_MONGODB_SECRETS_NAME} -n ${AKS_MONGODB_NAMESPACE} -o jsonpath=\"{.data.MONGODB_DATABASE_ADMIN_USER}\" | base64 --decode)\nexport databaseAdminPassword=$(kubectl get secret ${AKS_MONGODB_SECRETS_NAME} -n ${AKS_MONGODB_NAMESPACE} -o jsonpath=\"{.data.MONGODB_DATABASE_ADMIN_PASSWORD}\" | base64 --decode)\nexport connectionString=\"mongodb://${databaseAdmin}:${databaseAdminPassword}@${AKS_MONGODB_CLUSTER_NAME}-mongos.mongodb.svc.cluster.local/admin?replicaSet=rs0&ssl=false&directConnection=true\"\n\n```\n\n----------------------------------------\n\nTITLE: Disabling Azure Monitor Metrics\nDESCRIPTION: Azure CLI command to disable the metrics add-on that scrapes Prometheus metrics.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/control-plane-metrics-monitor.md#2025-04-21_snippet_10\n\nLANGUAGE: azurecli\nCODE:\n```\naz aks update --disable-azure-monitor-metrics --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP\n```\n\n----------------------------------------\n\nTITLE: Detailed Node Status After Updates\nDESCRIPTION: Extended node status output showing kernel version differences between updated and non-updated nodes.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/node-updates-kured.md#2025-04-21_snippet_3\n\nLANGUAGE: output\nCODE:\n```\nNAME                       STATUS    ROLES     AGE       VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION      CONTAINER-RUNTIME\naks-nodepool1-28993262-0   Ready     agent     1h        v1.11.7   10.240.0.4    <none>        Ubuntu 16.04.6 LTS   4.15.0-1039-azure   docker://3.0.4\naks-nodepool1-28993262-1   Ready     agent     1h        v1.11.7   10.240.0.5    <none>        Ubuntu 16.04.6 LTS   4.15.0-1037-azure   docker://3.0.4\n```\n\n----------------------------------------\n\nTITLE: Generating SSH Key Pair for AKS Cluster in Terraform\nDESCRIPTION: This snippet uses the azapi_resource_action resource to generate an SSH key pair for the AKS cluster. It specifies the resource type, API version, and parameters for key generation.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/learn/quick-kubernetes-deploy-terraform.md#2025-04-21_snippet_1\n\nLANGUAGE: HCL\nCODE:\n```\nresource \"azapi_resource_action\" \"ssh_public_key\" {\n  type        = \"Microsoft.Compute/sshPublicKeys@2022-11-01\"\n  resource_id = azapi_resource.ssh_public_key_resource.id\n  action      = \"generateKeyPair\"\n  method      = \"POST\"\n\n  response_export_values = [\"publicKey\", \"privateKey\"]\n}\n\nresource \"azapi_resource\" \"ssh_public_key_resource\" {\n  type      = \"Microsoft.Compute/sshPublicKeys@2022-11-01\"\n  name      = \"ssh-public-key\"\n  location  = azurerm_resource_group.rg.location\n  parent_id = azurerm_resource_group.rg.id\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AKS Automatic Cluster with Bicep\nDESCRIPTION: This Bicep template defines an AKS Automatic cluster with a system nodepool. It uses a SystemAssigned managed identity and deploys the cluster to the specified location.\nSOURCE: https://github.com/microsoftdocs/azure-aks-docs.git/blob/main/articles/aks/automatic/quick-automatic-managed-network.md#2025-04-21_snippet_8\n\nLANGUAGE: bicep\nCODE:\n```\n@description('The name of the managed cluster resource.')\nparam clusterName string = 'myAKSAutomaticCluster'\n\n@description('The location of the managed cluster resource.')\nparam location string = resourceGroup().location\n\nresource aks 'Microsoft.ContainerService/managedClusters@2024-03-02-preview' = {\n  name: clusterName\n  location: location  \n  sku: {\n\tname: 'Automatic'\n  }\n  properties: {\n    agentPoolProfiles: [\n      {\n        name: 'systempool'\n        mode: 'System'\n\tcount: 3\n      }\n    ]\n  }\n  identity: {\n    type: 'SystemAssigned'\n  }\n}\n```"
  }
]
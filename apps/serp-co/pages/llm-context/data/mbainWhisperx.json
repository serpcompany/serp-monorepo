[
  {
    "owner": "m-bain",
    "repo": "whisperx",
    "content": "TITLE: Using WhisperX in Python\nDESCRIPTION: A comprehensive Python script demonstrating how to use WhisperX for transcription, alignment, and speaker diarization within a Python environment.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nimport whisperx\nimport gc \n\ndevice = \"cuda\" \naudio_file = \"audio.mp3\"\nbatch_size = 16 # reduce if low on GPU mem\ncompute_type = \"float16\" # change to \"int8\" if low on GPU mem (may reduce accuracy)\n\n# 1. Transcribe with original whisper (batched)\nmodel = whisperx.load_model(\"large-v2\", device, compute_type=compute_type)\n\n# save model to local path (optional)\n# model_dir = \"/path/\"\n# model = whisperx.load_model(\"large-v2\", device, compute_type=compute_type, download_root=model_dir)\n\naudio = whisperx.load_audio(audio_file)\nresult = model.transcribe(audio, batch_size=batch_size)\nprint(result[\"segments\"]) # before alignment\n\n# delete model if low on GPU resources\n# import gc; gc.collect(); torch.cuda.empty_cache(); del model\n\n# 2. Align whisper output\nmodel_a, metadata = whisperx.load_align_model(language_code=result[\"language\"], device=device)\nresult = whisperx.align(result[\"segments\"], model_a, metadata, audio, device, return_char_alignments=False)\n\nprint(result[\"segments\"]) # after alignment\n\n# delete model if low on GPU resources\n# import gc; gc.collect(); torch.cuda.empty_cache(); del model_a\n\n# 3. Assign speaker labels\ndiarize_model = whisperx.DiarizationPipeline(use_auth_token=YOUR_HF_TOKEN, device=device)\n\n# add min/max number of speakers if known\ndiarize_segments = diarize_model(audio)\n# diarize_model(audio, min_speakers=min_speakers, max_speakers=max_speakers)\n\nresult = whisperx.assign_word_speakers(diarize_segments, result)\nprint(diarize_segments)\nprint(result[\"segments\"]) # segments are now assigned speaker IDs\n```\n\n----------------------------------------\n\nTITLE: Running WhisperX on English Audio\nDESCRIPTION: Demonstrates basic usage of WhisperX for transcribing English audio files using default parameters.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nwhisperx path/to/audio.wav\n```\n\n----------------------------------------\n\nTITLE: Running WhisperX with Speaker Diarization\nDESCRIPTION: Demonstrates how to use WhisperX with speaker diarization enabled for labeling transcripts with speaker IDs.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nwhisperx path/to/audio.wav --model large-v2 --diarize --highlight_words True\n```\n\n----------------------------------------\n\nTITLE: Running WhisperX with Advanced Options\nDESCRIPTION: Shows how to use WhisperX with a larger model and specific alignment model for increased accuracy.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nwhisperx path/to/audio.wav --model large-v2 --align_model WAV2VEC2_ASR_LARGE_LV60K_960H --batch_size 4\n```\n\n----------------------------------------\n\nTITLE: Running WhisperX for Non-English Languages\nDESCRIPTION: Demonstrates how to use WhisperX for transcribing audio in languages other than English, using German as an example.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nwhisperx --model large-v2 --language de path/to/audio.wav\n```\n\n----------------------------------------\n\nTITLE: Installing WhisperX via pip\nDESCRIPTION: Installs the WhisperX package using pip, which is the recommended method for most users.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install whisperx\n```\n\n----------------------------------------\n\nTITLE: Running WhisperX on CPU\nDESCRIPTION: Shows how to run WhisperX on CPU instead of GPU, which is useful for systems without GPU or for Mac OS X users.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nwhisperx path/to/audio.wav --compute_type int8\n```\n\n----------------------------------------\n\nTITLE: Running WhisperX with French language model\nDESCRIPTION: Command to transcribe a French audio file using WhisperX with the large whisper model. This specifies French as the language parameter to ensure proper language detection and alignment.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/EXAMPLES.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwhisperx --model large --language fr examples/sample_fr_01.wav\n```\n\n----------------------------------------\n\nTITLE: Running WhisperX with Japanese language model\nDESCRIPTION: Command to transcribe a Japanese audio file using WhisperX with the large whisper model. This specifies Japanese as the language parameter to ensure proper language detection and alignment.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/EXAMPLES.md#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nwhisperx --model large --language ja examples/sample_ja_01.wav\n```\n\n----------------------------------------\n\nTITLE: Running WhisperX with German language model\nDESCRIPTION: Command to transcribe a German audio file using WhisperX with the large whisper model. This specifies German as the language parameter to ensure proper language detection and alignment.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/EXAMPLES.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwhisperx --model large --language de examples/sample_de_01.wav\n```\n\n----------------------------------------\n\nTITLE: Running WhisperX with Italian language model\nDESCRIPTION: Command to transcribe an Italian audio file using WhisperX with the large whisper model. This specifies German (likely a typo, should be 'it') as the language parameter and points to an Italian sample file.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/EXAMPLES.md#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nwhisperx --model large --language de examples/sample_it_01.wav\n```\n\n----------------------------------------\n\nTITLE: Installing WhisperX directly from GitHub\nDESCRIPTION: Installs the latest development version of WhisperX directly from the GitHub repository.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nuvx git+https://github.com/m-bain/whisperX.git\n```\n\n----------------------------------------\n\nTITLE: Developer Installation of WhisperX\nDESCRIPTION: Clones the WhisperX repository and sets up a development environment with all extras and dev dependencies.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/m-bain/whisperX.git\ncd whisperX\nuv sync --all-extras --dev\n```\n\n----------------------------------------\n\nTITLE: Installing WhisperX using uvx\nDESCRIPTION: Alternative installation method using the uvx package manager.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nuvx whisperx\n```\n\n----------------------------------------\n\nTITLE: Citation for WhisperX in BibTeX Format\nDESCRIPTION: BibTeX citation for the WhisperX paper, to be used when referencing this project in research.\nSOURCE: https://github.com/m-bain/whisperX/blob/main/README.md#2025-04-11_snippet_10\n\nLANGUAGE: bibtex\nCODE:\n```\n@article{bain2022whisperx,\n  title={WhisperX: Time-Accurate Speech Transcription of Long-Form Audio},\n  author={Bain, Max and Huh, Jaesung and Han, Tengda and Zisserman, Andrew},\n  journal={INTERSPEECH 2023},\n  year={2023}\n}\n```"
  }
]
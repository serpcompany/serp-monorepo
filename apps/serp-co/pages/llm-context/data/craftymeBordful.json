[
  {
    "owner": "craftyme",
    "repo": "bordful",
    "content": "TITLE: Configuring Job Board Settings in TypeScript\nDESCRIPTION: TypeScript configuration object that defines all customizable aspects of a job board platform. Includes settings for marketing, SEO, scripts, navigation, pricing plans, contact information, currency options, and UI customization. The configuration allows for deep customization of appearance, functionality, and business logic.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nexport const config = {\n  // Marketing & SEO\n  badge: \"The #1 Open Source Tech Job Board\",\n  title: \"Find Your Next Tech Role\",\n  description: \"Browse curated tech opportunities...\",\n  url: process.env.NEXT_PUBLIC_APP_URL || \"http://localhost:3000\",\n\n  // Scripts Configuration (analytics, tracking, etc.)\n  scripts: {\n    head: [\n      // Scripts to be loaded in <head>\n      {\n        src: \"https://analytics.com/script.js\",\n        strategy: \"afterInteractive\",\n        attributes: {\n          \"data-website-id\": \"xxx\",\n          defer: \"\"  // Boolean attributes should use empty string\n        }\n      }\n    ],\n    body: [\n      // Scripts to be loaded at end of <body>\n      {\n        src: \"https://widget.com/embed.js\",\n        strategy: \"lazyOnload\",\n        attributes: {\n          async: \"\"  // Boolean attributes should use empty string\n        }\n      }\n    ]\n  },\n\n  // Navigation\n  nav: {\n    title: \"JobBoard\", // Navigation bar text\n    logo: {\n      enabled: false, // Set to true to use a custom logo instead of icon + text\n      src: \"/your-logo.svg\", // Path to your logo image (place it in the public directory)\n      width: 120, // Width of the logo in pixels\n      height: 32, // Height of the logo in pixels\n      alt: \"Your Company Logo\", // Alt text for the logo\n    },\n    github: {\n      show: true, // Show/hide GitHub button\n      url: \"https://github.com/yourusername/yourrepo\",\n    },\n    linkedin: {\n      show: true, // Show/hide LinkedIn button\n      url: \"https://linkedin.com/company/yourcompany\",\n    },\n    twitter: {\n      show: true, // Show/hide Twitter/X button\n      url: \"https://x.com/yourhandle\",\n    },\n    bluesky: {\n      show: true, // Show/hide Bluesky button\n      url: \"https://bsky.app/profile/yourdomain.com\",\n    },\n    postJob: {\n      show: true, // Show/hide Post Job button\n      label: \"Post a Job\", // Button text\n      link: \"/post\", // Button URL\n    },\n    topMenu: [\n      // Navigation menu items\n      { label: \"Home\", link: \"/\" },\n      { label: \"Jobs\", link: \"/jobs\" },\n      { label: \"About\", link: \"/about\" },\n      { label: \"Changelog\", link: \"/changelog\" },\n    ],\n    \n    // Navigation menu with dropdown support\n    menu: [\n      { label: \"Home\", link: \"/\" },\n      // Example dropdown menu\n      { \n        label: \"Jobs\", \n        link: \"/jobs\",\n        dropdown: true,\n        items: [\n          { label: \"All Jobs\", link: \"/jobs\" },\n          { label: \"Job Types\", link: \"/jobs/types\" },\n          { label: \"Job Locations\", link: \"/jobs/locations\" },\n          { label: \"Job Levels\", link: \"/jobs/levels\" },\n          { label: \"Job Languages\", link: \"/jobs/languages\" }\n        ]\n      },\n      { label: \"About\", link: \"/about\" },\n      { label: \"Resources\", link: \"#\", dropdown: true, items: [\n        { label: \"FAQ\", link: \"/faq\" },\n        { label: \"Job Alerts\", link: \"/job-alerts\" },\n        { label: \"RSS Feed\", link: \"/feed.xml\" }\n      ]},\n    ],\n    // Helper functions are also available:\n    // import { createJobsMenu, createResourcesMenu } from \"@/lib/menu-helpers\";\n  },\n  \n  // Pricing Configuration\n  pricing: {\n    // Enable or disable the pricing page\n    enabled: true,\n    \n    // Show pricing link in navigation\n    showInNavigation: true,\n    \n    // Show pricing link in footer resources\n    showInFooter: true,\n    \n    // Navigation label\n    navigationLabel: \"Pricing\",\n    \n    // Page title and description\n    title: \"Simple, Transparent Pricing\",\n    description: \"Choose the plan that's right for your job board needs.\",\n    \n    // Currency symbol\n    currencySymbol: \"$\",\n    \n    // Payment processing information (displayed below pricing cards)\n    paymentProcessingText: \"Payments are processed & secured by Stripe. Price in USD. VAT may apply.\",\n    \n    // Payment method icons to display\n    paymentMethods: {\n      enabled: true,\n      icons: [\n        { name: \"visa\", alt: \"Visa\" },\n        { name: \"mastercard\", alt: \"Mastercard\" },\n        { name: \"amex\", alt: \"American Express\" },\n        { name: \"applepay\", alt: \"Apple Pay\" },\n        { name: \"googlepay\", alt: \"Google Pay\" },\n        { name: \"paypal\", alt: \"PayPal\" },\n      ],\n    },\n    \n    // Plans configuration\n    plans: [\n      {\n        name: \"Free\",\n        price: 0,\n        billingTerm: \"forever\",\n        description: \"Perfect for getting started with basic hiring needs.\",\n        features: [\n          \"1 active job posting\",\n          \"Basic job listing\",\n          \"30-day visibility\",\n          \"Standard support\",\n        ],\n        cta: {\n          label: \"Get Started\",\n          link: \"/post\",\n          variant: \"outline\", // Using button variants\n        },\n        badge: null, // No badge\n        highlighted: false, // No highlighted border\n      },\n      {\n        name: \"Pro\",\n        price: 99,\n        billingTerm: \"job posting\",\n        description: \"Great for occasional hiring needs with better visibility.\",\n        features: [\n          \"3 active job postings\",\n          \"Standard job listings\",\n          \"30-day visibility\",\n          \"Email support\",\n        ],\n        cta: {\n          label: \"Choose Pro\",\n          link: \"https://stripe.com\",\n          variant: \"outline\",\n        },\n        badge: {\n          text: \"Popular\",\n          type: \"featured\", // Using badge types from JobBadge component\n        },\n        highlighted: true, // Highlighted with prominent border\n      },\n      {\n        name: \"Business\",\n        price: 999,\n        billingTerm: \"year\",\n        description: \"Unlimited jobs postings for one year for serious recruiters.\",\n        features: [\n          \"5 active job postings\",\n          \"Featured job listings\",\n          \"30-day visibility\",\n          \"Priority support\",\n        ],\n        cta: {\n          label: \"Upgrade Now\",\n          link: \"https://stripe.com\",\n          variant: \"default\",\n        },\n        badge: {\n          text: \"Best Value\",\n          type: \"featured\",\n        },\n        highlighted: false,\n      },\n    ],\n  },\n\n  // Contact Page Customization\n  contact: {\n    // Enable or disable the contact page\n    enabled: true,\n\n    // Show contact link in navigation\n    showInNavigation: true,\n\n    // Show contact link in footer\n    showInFooter: true,\n\n    // Navigation label\n    navigationLabel: \"Contact\",\n\n    // Page title and description\n    title: \"Get in Touch\",\n    description: \"Have questions or feedback? We'd love to hear from you.\",\n    \n    // Support channels section\n    supportChannels: {\n      title: \"Support Channels\",\n      channels: [\n        {\n          type: \"email\",\n          title: \"Email Support\",\n          description: \"Our support team is available to help you with any questions or issues you might have.\",\n          buttonText: \"Contact via Email\",\n          buttonLink: \"mailto:hello@bordful.com\",\n          icon: \"Mail\"\n        },\n        {\n          type: \"twitter\",\n          title: \"Twitter/X Support\",\n          description: \"Get quick responses and stay updated with our latest announcements on Twitter/X.\",\n          buttonText: \"Follow on Twitter/X\",\n          buttonLink: \"https://twitter.com/bordful\",\n          icon: \"Twitter\"\n        },\n        {\n          type: \"faq\",\n          title: \"FAQ\",\n          description: \"Browse our comprehensive FAQ section to find answers to the most common questions.\",\n          buttonText: \"View FAQ\",\n          buttonLink: \"/faq\",\n          icon: \"HelpCircle\"\n        }\n      ]\n    },\n    \n    // Contact information section\n    contactInfo: {\n      title: \"Contact Information\",\n      description: \"Here's how you can reach us directly.\",\n      companyName: \"Bordful Inc.\",\n      email: \"hello@bordful.com\",\n      phone: \"+1 (555) 123-4567\",\n      address: \"123 Main Street, San Francisco, CA 94105\"\n    }\n  },\n\n  // Currency Configuration\n  currency: {\n    // Default currency code used when no currency is specified\n    defaultCurrency: \"USD\" as CurrencyCode,\n\n    // Allowed currencies for job listings\n    // This list can include any valid CurrencyCode from lib/constants/currencies.ts\n    // Set to null to allow all currencies, or specify a subset\n    allowedCurrencies: [\"USD\", \"EUR\", \"GBP\", \"BTC\", \"ETH\", \"USDT\", \"USDC\"] as CurrencyCode[] | null, // null means all currencies are allowed\n  },\n\n  // UI Configuration\n  ui: {\n    // Hero section background color (CSS color value)\n    // Can be hex, rgb, hsl, etc. Leave empty for default.\n    heroBackgroundColor: \"#005450\", // Example: light gray background\n\n    // Hero section gradient background\n    // Takes precedence over heroBackgroundColor when enabled\n    heroGradient: {\n      enabled: false, // Set to true to enable gradient background\n      type: \"linear\", // Type of gradient: \"linear\" or \"radial\"\n      direction: \"to right\", // For linear gradients: \"to right\", \"to bottom\", \"45deg\", etc.\n      // For radial gradients: \"circle\", \"ellipse at center\", etc.\n      colors: [\n        \"#005450\", // Start color\n        \"#007a73\", // Optional middle color(s)\n        \"#00a59c\", // End color\n      ],\n      // Optional stops for precise control (0-100%)\n      // If not provided, colors will be evenly distributed\n      stops: [\"0%\", \"50%\", \"100%\"],\n    },\n\n    // Hero section main title color (CSS color value)\n    // Can be hex, rgb, hsl, etc. Leave empty for default.\n    heroTitleColor: \"#fff\", // Example: \"text-gray-900\"\n\n    // Hero section subtitle color (CSS color value)\n    // Can be hex, rgb, hsl, etc. Leave empty for default.\n    heroSubtitleColor: \"#fff\", // Example: \"text-gray-600\"\n\n    // Hero section background image\n    heroBackgroundImage: {\n      enabled: false, // Make sure background image is disabled\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Job Board Configuration\nDESCRIPTION: Essential environment variables needed for configuring the job board in production environments. Includes variables for application URL, Airtable credentials, and email service configuration.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/deployment.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nNEXT_PUBLIC_APP_URL=https://your-domain.com\nAIRTABLE_ACCESS_TOKEN=your_token\nAIRTABLE_BASE_ID=your_base_id\nAIRTABLE_TABLE_NAME=your_table_name\nEMAIL_PROVIDER=your_provider\nENCHARGE_WRITE_KEY=your_key\n```\n\n----------------------------------------\n\nTITLE: Complete Navigation Bar Configuration Example in TypeScript\nDESCRIPTION: A comprehensive example showing all configuration options for the navigation bar including title, logo, social media links, post job button, and menu structure with dropdowns.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/navbar-customization.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnav: {\n  title: \"JobBoard\", // Navigation bar text\n  logo: {\n    enabled: false, // Set to true to use a custom logo instead of icon + text\n    src: \"/your-logo.svg\", // Path to your logo image\n    width: 120, // Width in pixels\n    height: 32, // Height in pixels\n    alt: \"Your Company Logo\", // Alt text\n  },\n  // Social media links with individual toggle\n  github: {\n    show: true,\n    url: \"https://github.com/yourusername/yourrepo\",\n  },\n  linkedin: {\n    show: true,\n    url: \"https://linkedin.com/company/yourcompany\",\n  },\n  twitter: {\n    show: true,\n    url: \"https://x.com/yourhandle\",\n  },\n  bluesky: {\n    show: true,\n    url: \"https://bsky.app/profile/yourdomain.com\",\n  },\n  reddit: {\n    show: true,\n    url: \"https://reddit.com/r/yoursubreddit\",\n  },\n  // Post job button configuration\n  postJob: {\n    show: true,\n    label: \"Post a Job\",\n    link: \"/post\",\n    external: false, // Set to true for external links\n    variant: \"default\", // Button variant (default, outline, etc.)\n  },\n  // Navigation menu with dropdown support\n  menu: [\n    { label: \"Home\", link: \"/\" },\n    // Example dropdown menu\n    { \n      label: \"Jobs\", \n      link: \"/jobs\",\n      dropdown: true,\n      items: [\n        { label: \"All Jobs\", link: \"/jobs\" },\n        { label: \"Job Types\", link: \"/jobs/types\" },\n        { label: \"Job Locations\", link: \"/jobs/locations\" },\n        { label: \"Job Levels\", link: \"/jobs/levels\" },\n        { label: \"Job Languages\", link: \"/jobs/languages\" }\n      ]\n    },\n    { label: \"About\", link: \"/about\" },\n    { label: \"Resources\", link: \"#\", dropdown: true, items: [\n      { label: \"FAQ\", link: \"/faq\" },\n      { label: \"Job Alerts\", link: \"/job-alerts\" },\n      { label: \"RSS Feed\", link: \"/feed.xml\" }\n    ]},\n  ],\n},\n```\n\n----------------------------------------\n\nTITLE: Configuring Pricing Plans in TypeScript\nDESCRIPTION: Examples of how to configure different pricing plan types with various badge and highlighting options for the pricing page. Shows implementation of free, popular, and \"best value\" plans with their respective configurations.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\n// Free plan with no badge or highlighting\n{\n  name: \"Free\",\n  price: 0,\n  billingTerm: \"forever\",\n  // ... other properties\n  badge: null,\n  highlighted: false,\n}\n\n// Popular plan with badge and highlighting\n{\n  name: \"Pro\",\n  price: 99,\n  billingTerm: \"job posting\",\n  // ... other properties\n  badge: {\n    text: \"Popular\",\n    type: \"featured\",\n  },\n  highlighted: true,\n}\n\n// Best value plan with badge but no highlighting\n{\n  name: \"Business\",\n  price: 999,\n  billingTerm: \"year\",\n  // ... other properties\n  badge: {\n    text: \"Best Value\",\n    type: \"featured\",\n  },\n  highlighted: false,\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Rate Limiting with API Route in TypeScript\nDESCRIPTION: Implementation of rate limiting in the POST handler of the API route. It extracts the client IP, checks if the request should be rate limited, and returns a 429 status if the limit is exceeded.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/rate-limiting.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport async function POST(request: Request) {\n  try {\n    // Get client IP address\n    const ip = request.headers.get('x-forwarded-for') || 'unknown';\n    \n    // Check if rate limited\n    if (isRateLimited(ip)) {\n      return NextResponse.json(\n        { error: 'Too many requests. Please try again later.' },\n        { status: 429 }\n      );\n    }\n    \n    // Continue with normal request processing...\n  } catch (error) {\n    // Error handling...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Contact Page in TypeScript\nDESCRIPTION: Comprehensive example of contact page configuration including basic settings, support channels, and company contact information. Demonstrates how to set up email, social media, and FAQ support options with custom icons and URLs.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\n// Contact Page Configuration\ncontact: {\n  // Enable or disable the contact page\n  enabled: true,\n\n  // Show contact link in navigation\n  showInNavigation: true,\n\n  // Show contact link in footer\n  showInFooter: true,\n\n  // Navigation label\n  navigationLabel: \"Contact\",\n\n  // Page title and description\n  title: \"Get in Touch\",\n  description: \"Have questions or feedback? We'd love to hear from you.\",\n  \n  // Support channels section\n  supportChannels: {\n    title: \"Support Channels\",\n    channels: [\n      {\n        type: \"email\",\n        title: \"Email Support\",\n        description: \"Our support team is available to help you with any questions or issues you might have.\",\n        buttonText: \"Contact via Email\",\n        buttonLink: \"mailto:hello@bordful.com\",\n        icon: \"Mail\"\n      },\n      {\n        type: \"twitter\",\n        title: \"Twitter/X Support\",\n        description: \"Get quick responses and stay updated with our latest announcements on Twitter/X.\",\n        buttonText: \"Follow on Twitter/X\",\n        buttonLink: \"https://twitter.com/bordful\",\n        icon: \"Twitter\"\n      },\n      {\n        type: \"faq\",\n        title: \"FAQ\",\n        description: \"Browse our comprehensive FAQ section to find answers to the most common questions.\",\n        buttonText: \"View FAQ\",\n        buttonLink: \"/faq\",\n        icon: \"HelpCircle\"\n      }\n    ]\n  },\n  \n  // Contact information section\n  contactInfo: {\n    title: \"Contact Information\",\n    description: \"Here's how you can reach us directly.\",\n    companyName: \"Bordful Inc.\",\n    email: \"hello@bordful.com\",\n    phone: \"+1 (555) 123-4567\",\n    address: \"123 Main Street, San Francisco, CA 94105\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Job Alerts Settings in TypeScript\nDESCRIPTION: Main configuration object for job alerts feature including UI settings, form fields, messages, and provider selection. Controls visibility, labels, hero section, form fields, and notification messages.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/job-alerts-configuration.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// Job Alerts Configuration\njobAlerts: {\n  // Enable or disable the job alerts feature\n  enabled: true,\n\n  // Show job alerts link in navigation\n  showInNavigation: true,\n\n  // Show job alerts link in footer resources\n  showInFooter: true,\n\n  // Navigation label\n  navigationLabel: \"Job Alerts\",\n  \n  // Hero section configuration\n  hero: {\n    // Badge text in hero section\n    badge: \"Job Alerts\",\n    \n    // Main title in hero section\n    title: \"Get Jobs Right to Your Inbox\",\n    \n    // Description text in hero section\n    description: \"Subscribe to job alerts and get notified when new opportunities are posted.\"\n  },\n  \n  // Hero image configuration (overrides global setting)\n  heroImage: {\n    enabled: false, // Disable hero image on the job alerts page\n    src: \"\", // Optional custom image path\n    alt: \"\", // Optional custom alt text\n  },\n  \n  // Form text configuration\n  form: {\n    // Heading text for the form section\n    heading: \"Subscribe for Updates\",\n    \n    // Description text under the heading\n    description: \"Get notified when new jobs are posted. We'll also subscribe you to Bordful newsletter.\",\n    \n    // Form fields configuration\n    fields: {\n      // Name field labels and errors\n      name: {\n        label: \"Name *\",\n        placeholder: \"Your name\",\n        required: \"Name is required\"\n      },\n      // Email field labels and errors\n      email: {\n        label: \"Email *\",\n        placeholder: \"your@email.com\",\n        required: \"Email is required\",\n        invalid: \"Please enter a valid email address\"\n      }\n    },\n    \n    // Button text for the subscribe form\n    buttonText: \"Subscribe to Job Alerts\",\n    \n    // Loading text when form is being submitted\n    loadingText: \"Subscribing...\",\n    \n    // Success message heading after successful subscription\n    successHeading: \"Subscription Confirmed!\",\n    \n    // Success message description after successful subscription\n    successDescription: \"Thank you for subscribing to job alerts. You'll receive emails when jobs matching your interests are posted.\",\n    \n    // Text for the button to subscribe with another email after success\n    resetButtonText: \"Subscribe with another email\",\n    \n    // Toast notification messages\n    toast: {\n      success: {\n        title: \"Subscription successful!\",\n        description: \"You'll now receive job alerts in your inbox.\"\n      },\n      rateLimit: {\n        title: \"Rate limit exceeded\",\n        description: \"Too many requests. Please try again later.\"\n      },\n      error: {\n        title: \"Something went wrong\",\n        description: \"Failed to subscribe to job alerts. Please try again.\"\n      }\n    }\n  },\n\n  // The email provider to use (must match a provider in the email section)\n  provider: \"encharge\",\n},\n```\n\n----------------------------------------\n\nTITLE: Configuring Post Job Banner Settings in TypeScript\nDESCRIPTION: Basic configuration example showing the structure and available options for the post job banner component. Includes settings for enabling the banner, content configuration, trust indicators, and call-to-action buttons.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/post-job-banner.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\npostJobBanner: {\n  // Enable or disable the post job banner\n  enabled: true,\n\n  // Banner content\n  title: \"Hiring? Post Your Job Ad Here\",\n  description: \"Reach talented professionals. Get quality applications fast.\",\n\n  // Trust indicators\n  showTrustedBy: true,\n  trustedByText: \"Trusted by top companies\",\n  companyAvatars: [\n    {\n      src: \"/avatars/company1.png\",\n      alt: \"Company 1\",\n      fallback: \"C1\",\n    },\n    // ... more company avatars\n  ],\n\n  // Call to action\n  cta: {\n    text: \"Post a Job ($59)\",\n    link: \"https://your-payment-link.com\",\n    external: true,\n  },\n\n  // Trust message\n  trustMessage: \"30-day money-back guarantee\",\n}\n```\n\n----------------------------------------\n\nTITLE: Advanced Email Provider Configuration in TypeScript\nDESCRIPTION: This snippet demonstrates advanced configuration for the email provider system. It shows how to set up Encharge with custom tags and event name in the application's configuration file.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\nemail: {\n  provider: \"encharge\",\n  encharge: {\n    writeKey: process.env.ENCHARGE_WRITE_KEY || \"your_key_here\",\n    defaultTags: \"job-alerts-subscriber, custom-tag\",\n    eventName: \"Job Alert Subscription\",\n  }\n},\n```\n\n----------------------------------------\n\nTITLE: Parsing Education Credentials in TypeScript\nDESCRIPTION: This function parses free-text education requirements and maps them to standardized schema.org credential types using the EDUCATION_CREDENTIAL_MAP configuration.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/schema-implementation.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nfunction parseEducationCredential(education: string | null | undefined): string {\n  if (!education) return \"EducationalOccupationalCredential\";\n  \n  const lowerEd = education.toLowerCase();\n  \n  // Check each credential type for matching keywords\n  for (const [credentialType, keywords] of Object.entries(EDUCATION_CREDENTIAL_MAP)) {\n    if (keywords.some(keyword => lowerEd.includes(keyword))) {\n      return credentialType;\n    }\n  }\n  \n  // Default fallback value\n  return \"EducationalOccupationalCredential\";\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Third-Party Scripts in Next.js\nDESCRIPTION: This snippet shows how to configure third-party scripts in the job board application using Next.js's Script component. It demonstrates setting up scripts for both head and body placement with different loading strategies and custom attributes.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nscripts: {\n  head: [\n    // Scripts to be loaded in <head>\n    {\n      src: \"https://analytics.com/script.js\",\n      strategy: \"afterInteractive\",\n      attributes: {\n        \"data-website-id\": \"xxx\",\n        defer: \"\"  // Boolean attributes should use empty string\n      }\n    }\n  ],\n  body: [\n    // Scripts to be loaded at end of <body>\n    {\n      src: \"https://widget.com/embed.js\",\n      strategy: \"lazyOnload\",\n      attributes: {\n        async: \"\"  // Boolean attributes should use empty string\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing RSS Feed Route Handler in Next.js\nDESCRIPTION: Implementation of an RSS feed route handler in Next.js with configuration options for feed formats, title, and description length. Uses revalidation for keeping feeds up-to-date.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\n// app/feed.xml/route.ts (and similar for other formats)\nexport const revalidate = 300; // 5 minutes\n\nexport async function GET() {\n  // Check if RSS feeds are enabled in the configuration\n  if (!config.rssFeed?.enabled || !config.rssFeed?.formats?.rss) {\n    return new Response(\"RSS feed not enabled\", { status: 404 });\n  }\n\n  // Feed setup with configuration options\n  const feed = new Feed({\n    title: config.rssFeed?.title || `${config.title} | Job Feed`,\n    // ... other feed settings\n  });\n  \n  // Use the configured description length\n  const descriptionLength = config.rssFeed?.descriptionLength || 500;\n  \n  // Add job items with the configured description length\n  jobs.forEach(job => {\n    // ... job processing\n    const jobDescription = `\n      // ... job description formatting\n      ${job.description.substring(0, descriptionLength)}...\n    `;\n    \n    // Add to feed\n    // ...\n  });\n  \n  // Return with proper content type\n  return new Response(feed.rss2(), {\n    headers: {\n      'Content-Type': 'application/rss+xml; charset=utf-8',\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing robots.txt with Next.js Metadata API in TypeScript\nDESCRIPTION: This code demonstrates how to programmatically generate a robots.txt file using Next.js's built-in Metadata API. It defines rules for web crawlers, specifying allowed and disallowed paths, and links to the sitemap and host.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\n// Example robots.ts\nexport default function robots(): MetadataRoute.Robots {\n  return {\n    rules: {\n      userAgent: '*',\n      allow: '/',\n      disallow: ['/admin/', '/private/', '/api/*'],\n    },\n    sitemap: 'https://yourdomain.com/sitemap.xml',\n    host: 'https://yourdomain.com',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: RSS Feed Configuration for Job Board\nDESCRIPTION: Configuration options for the RSS feed system, controlling enabled formats, UI integration, custom labels, and content settings. Provides fine-grained control over the feed system behavior.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\nrssFeed: {\n  // Enable or disable RSS feeds\n  enabled: true,\n\n  // Show RSS feed links in navigation\n  showInNavigation: true,\n  \n  // Show RSS feed links in footer\n  showInFooter: true,\n\n  // Navigation label (if showing in navigation)\n  navigationLabel: \"RSS Feed\",\n  \n  // Footer label (if showing in footer)\n  footerLabel: \"Job Feeds\",\n  \n  // Title for the RSS feed\n  title: \"Latest Jobs Feed\",\n  \n  // Number of job description characters to include (preview length)\n  descriptionLength: 500,\n\n  // Available formats (enable/disable specific formats)\n  formats: {\n    rss: true,    // RSS 2.0 format\n    atom: true,   // Atom format\n    json: true,   // JSON Feed format\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Example Schema.org JobPosting JSON-LD\nDESCRIPTION: This JSON-LD snippet demonstrates a complete Schema.org JobPosting implementation, including all essential properties and additional recommended fields for enhanced job listing visibility.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/schema-implementation.md#2025-04-23_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"@context\": \"https://schema.org/\",\n  \"@type\": \"JobPosting\",\n  \"title\": \"Senior Software Engineer\",\n  \"description\": \"We're looking for a senior software engineer...\",\n  \"datePosted\": \"2025-03-01T00:00:00.000Z\",\n  \"validThrough\": \"2025-04-01T00:00:00.000Z\",\n  \"hiringOrganization\": {\n    \"@type\": \"Organization\",\n    \"name\": \"Example Company\"\n  },\n  \"jobLocation\": {\n    \"@type\": \"Place\",\n    \"address\": {\n      \"@type\": \"PostalAddress\",\n      \"addressLocality\": \"San Francisco\",\n      \"addressRegion\": \"CA\",\n      \"addressCountry\": \"USA\"\n    }\n  },\n  \"employmentType\": \"FULL_TIME\",\n  \"baseSalary\": {\n    \"@type\": \"MonetaryAmount\",\n    \"currency\": \"USD\",\n    \"value\": {\n      \"@type\": \"QuantitativeValue\",\n      \"minValue\": 120000,\n      \"maxValue\": 150000,\n      \"unitText\": \"YEAR\"\n    }\n  },\n  \"skills\": \"React, TypeScript, Node.js\",\n  \"qualifications\": \"Bachelor's degree in Computer Science or related field\",\n  \"experienceRequirements\": \"5+ years of software development experience\",\n  \"industry\": \"Software Development\",\n  \"occupationalCategory\": \"15-1252.00 Software Developers\",\n  \"jobBenefits\": \"Medical, dental, vision insurance, 401(k) matching, unlimited PTO\",\n  \"directApply\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Navigation Menu Structure with Dropdowns in TypeScript\nDESCRIPTION: Shows how to define navigation menu items with optional dropdowns and submenu items using a TypeScript configuration array.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/navbar-customization.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nmenu: [\n  { label: \"Home\", link: \"/\" },\n  { \n    label: \"Jobs\", \n    link: \"/jobs\",\n    dropdown: true,\n    items: [\n      { label: \"All Jobs\", link: \"/jobs\" },\n      { label: \"Job Types\", link: \"/jobs/types\" },\n      { label: \"Job Locations\", link: \"/jobs/locations\" },\n    ]\n  },\n  { label: \"About\", link: \"/about\" },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Airtable Fields for Job Listings\nDESCRIPTION: Airtable field configuration for storing job listing information, including title, company, salary details, and other job-related attributes.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\ntitle: Single line text\ncompany: Single line text\ntype: Single select (Full-time, Part-time, Contract, Freelance)\nsalary_min: Number\nsalary_max: Number\nsalary_currency: Single select (USD, EUR, GBP, USDT, USDC, BTC, ETH, etc.)\nsalary_unit: Single select (hour, day, week, month, year, project)\ndescription: Long text (with rich text enabled)\nbenefits: Long text (plain text, recommended format: \"• Benefit 1\\n• Benefit 2\\n• Benefit 3\", max 500 characters)\napplication_requirements: Long text (plain text, comma-separated format, max 500 characters)\napply_url: URL\nposted_date: Date\nvalid_through: Date (application deadline date)\njob_identifier: Single line text (unique identifier/reference code for the job)\njob_source_name: Single line text (the name of the job source platform, e.g. \"LinkedIn Jobs\", \"Workable\", \"Figma Careers\")\nstatus: Single select (active, inactive)\nworkplace_type: Single select (On-site, Hybrid, Remote, Not specified)\nremote_region: Single select (Worldwide, Americas Only, Europe Only, Asia-Pacific Only, US Only, EU Only, UK/EU Only, US/Canada Only)\ntimezone_requirements: Single line text\nworkplace_city: Single line text\nworkplace_country: Single select (from ISO 3166 country list)\ncareer_level: Multiple select (Internship, Entry Level, Associate, Junior, Mid Level, Senior, Staff, Principal, Lead, Manager, Senior Manager, Director, Senior Director, VP, SVP, EVP, C-Level, Founder, Not Specified)\nvisa_sponsorship: Single select (Yes, No, Not specified)\nfeatured: Checkbox\nlanguages: Multiple select (format: \"Language Name (code)\", e.g. \"English (en)\", \"Spanish (es)\", \"French (fr)\")\n# Schema.org enhanced fields (optional but recommended for better SEO)\nskills: Long text (skills required for the position)\nqualifications: Long text (specific qualifications needed)\neducation_requirements: Long text (educational background needed)\nexperience_requirements: Long text (experience needed for the position)\nresponsibilities: Long text (key responsibilities of the role)\nindustry: Single line text (industry associated with the job)\noccupational_category: Single line text (preferably using O*NET-SOC codes, e.g. \"15-1252.00 Software Developers\")\n```\n\n----------------------------------------\n\nTITLE: Implementing Rate Limit Check Function in TypeScript\nDESCRIPTION: Function that checks if a given IP address should be rate limited. It manages a count of requests within a time window and returns true if the limit is exceeded.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/rate-limiting.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nfunction isRateLimited(ip: string): boolean {\n  const now = Date.now();\n  \n  // Get current rate limit info for this IP\n  const rateLimitInfo = rateLimitMap.get(ip);\n  \n  // If no previous requests or reset time has passed, initialize/reset the counter\n  if (!rateLimitInfo || now > rateLimitInfo.resetTime) {\n    rateLimitMap.set(ip, {\n      count: 1,\n      resetTime: now + WINDOW_DURATION_MS\n    });\n    return false;\n  }\n  \n  // If under the limit, increment the counter\n  if (rateLimitInfo.count < MAX_REQUESTS_PER_WINDOW) {\n    rateLimitMap.set(ip, {\n      count: rateLimitInfo.count + 1,\n      resetTime: rateLimitInfo.resetTime\n    });\n    return false;\n  }\n  \n  // Rate limit exceeded\n  return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Sitemap Entry in Next.js\nDESCRIPTION: Example of how to create a sitemap entry for a job listing in Next.js using the Metadata API. Includes URL, last modified date, change frequency, and priority settings for SEO optimization.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\n// Example sitemap entry\n{\n  url: 'https://yourdomain.com/jobs/senior-developer-at-company',\n  lastModified: new Date(),\n  changeFrequency: 'daily',\n  priority: 0.7\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring FAQ System in Bordful\nDESCRIPTION: TypeScript configuration for customizing the FAQ page in the config.ts file. This allows for enabling/disabling the FAQ feature, controlling navigation visibility, and defining FAQ categories with questions and answers.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nfaq: {\n  // Enable or disable the FAQ page\n  enabled: true,\n  \n  // Show FAQ link in navigation and footer\n  showInNavigation: true,\n  showInFooter: true,\n  \n  // Page title and description\n  title: \"Frequently Asked Questions\",\n  description: \"Find answers to common questions about our job board and services.\",\n  \n  // Categories of FAQs\n  categories: [\n    {\n      title: \"General Questions\",\n      items: [\n        {\n          question: \"What is Bordful?\",\n          answer: \"Bordful is a modern, minimal job board...\",\n          isRichText: false, // Set to true for markdown support\n        },\n        // More FAQ items...\n      ],\n    },\n    // More categories...\n  ],\n},\n```\n\n----------------------------------------\n\nTITLE: Hero Section Configuration with Background Image\nDESCRIPTION: This configuration shows how to set up a background image for the hero section. It includes options for image source, positioning, sizing, and an optional overlay for better text readability.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_26\n\nLANGUAGE: typescript\nCODE:\n```\nui: {\n  heroBackgroundImage: {\n    enabled: true, // Enable background image\n    src: \"/images/hero-background.jpg\",\n    position: \"center\",\n    size: \"cover\",\n    overlay: {\n      enabled: true, // Enable overlay for better text readability\n      color: \"rgba(0, 0, 0, 0.5)\", // Semi-transparent overlay\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Post Job Banner Implementation Example\nDESCRIPTION: Full implementation example of the post job banner configuration including all available options with specific values. Shows how to configure multiple company avatars, trust indicators, and call-to-action settings.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/post-job-banner.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\npostJobBanner: {\n  enabled: true,\n  title: \"Hiring? Post Your Job Ad Here\",\n  description: \"Reach talented professionals. Get quality applications fast.\",\n  showTrustedBy: true,\n  trustedByText: \"Trusted by top companies\",\n  companyAvatars: [\n    {\n      src: \"/avatars/company1.png\",\n      alt: \"Company 1\",\n      fallback: \"C1\",\n    },\n    {\n      src: \"/avatars/company2.png\",\n      alt: \"Company 2\",\n      fallback: \"C2\",\n    },\n    {\n      src: \"/avatars/company3.png\",\n      alt: \"Company 3\",\n      fallback: \"C3\",\n    },\n  ],\n  cta: {\n    text: \"Post a Job ($59)\",\n    link: \"https://your-payment-link.com\",\n    external: true,\n  },\n  trustMessage: \"30-day money-back guarantee\",\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Hero Section Text and Badge Styles in TypeScript\nDESCRIPTION: Configuration for customizing text colors and badge appearance in hero sections. Demonstrates how to set text colors for titles and subtitles, and how to style badges with different variants, background colors, text colors, and border colors.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_30\n\nLANGUAGE: typescript\nCODE:\n```\nui: {\n  // Text colors\n  heroTitleColor: \"#ffffff\",\n  heroSubtitleColor: \"#f3f4f6\",\n  \n  // Badge styling\n  heroBadgeVariant: \"outline\", // \"default\", \"secondary\", \"outline\", \"destructive\"\n  heroBadgeBgColor: \"#ffffff\",\n  heroBadgeTextColor: \"#005450\",\n  heroBadgeBorderColor: \"#ffffff\",\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Netlify Build Settings\nDESCRIPTION: Netlify configuration file (netlify.toml) that specifies build commands, output directory, and Node.js version requirements for the job board deployment.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/deployment.md#2025-04-23_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[build]\n  command = \"npm run build\"\n  publish = \".next\"\n\n[build.environment]\n  NODE_VERSION = \"18\"\n```\n\n----------------------------------------\n\nTITLE: Adding Umami Analytics to Next.js Application\nDESCRIPTION: This example demonstrates how to add Umami Analytics to a Next.js application using the script configuration. It sets up the analytics script to load after the page becomes interactive, which is the recommended strategy for analytics scripts.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nscripts: {\n  head: [\n    {\n      src: \"https://analytics.example.com/script.js\",\n      strategy: \"afterInteractive\",  // Best for analytics\n      attributes: {\n        \"data-website-id\": \"your-website-id\",\n        defer: \"\"  // Boolean attributes should use empty string\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Primary Color in TypeScript\nDESCRIPTION: Sets the primary color for the job board UI in the config.ts file. This color is applied consistently across various UI elements like buttons and links.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/theming-customization.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// config/config.ts\nexport const config = {\n  // ... other configuration\n  ui: {\n    // Hero section background color\n    heroBackgroundColor: \"#f8fafc\",\n    \n    // Primary color used throughout the site (buttons, links, etc.)\n    // Can be hex, rgb, hsl, etc.\n    primaryColor: \"#4f46e5\", // Example: indigo color\n  },\n  // ... other configuration\n};\n```\n\n----------------------------------------\n\nTITLE: Example JSON-LD WebSite Schema for SEO\nDESCRIPTION: This example demonstrates the automatically generated WebSite schema in JSON-LD format that gets injected into every page. It includes the website name, URL, description, publisher information, social media links, and search functionality.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/schema-implementation.md#2025-04-23_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"WebSite\",\n  \"name\": \"Bordful\",\n  \"url\": \"https://bordful.com\",\n  \"description\": \"Browse curated opportunities from leading companies. Updated daily with the latest positions.\",\n  \"publisher\": {\n    \"@type\": \"Organization\",\n    \"name\": \"Bordful\",\n    \"logo\": \"https://bordful.com/logo.png\"\n  },\n  \"sameAs\": [\n    \"https://twitter.com/bordful\",\n    \"https://github.com/craftled/bordful\",\n    \"https://linkedin.com/company/bordful\"\n  ],\n  \"potentialAction\": {\n    \"@type\": \"SearchAction\",\n    \"target\": {\n      \"@type\": \"EntryPoint\",\n      \"urlTemplate\": \"https://bordful.com/jobs?q={search_term_string}\"\n    },\n    \"query-input\": \"required name=search_term_string\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Education Credential Mapping in TypeScript\nDESCRIPTION: This code defines a configuration map for education credential types and their corresponding keywords, used for parsing free-text education requirements into standardized schema.org credential categories.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/schema-implementation.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst EDUCATION_CREDENTIAL_MAP: Record<string, string[]> = {\n  \"BachelorDegree\": [\"bachelor\", \"bs\", \"ba\", \"b.s.\", \"b.a.\"],\n  \"MasterDegree\": [\"master\", \"ms\", \"ma\", \"m.s.\", \"m.a.\", \"mba\"],\n  \"DoctoralDegree\": [\"phd\", \"doctorate\", \"doctoral\"],\n  \"AssociateDegree\": [\"associate\", \"aa\", \"a.a.\"],\n  \"HighSchool\": [\"high school\", \"secondary\"],\n  \"Certificate\": [\"certificate\", \"certification\"],\n  \"ProfessionalDegree\": [\"professional\"],\n};\n```\n\n----------------------------------------\n\nTITLE: Next.js Project Directory Structure\nDESCRIPTION: Outlines the directory structure of the job board application, including app layout, pages, components, and utility files. This structure follows Next.js app router conventions.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\napp/\n  layout.tsx          # Root layout with Geist font\n  page.tsx           # Home page with job listings\n  jobs/\n    [id]/\n      page.tsx       # Individual job page\n      loading.tsx    # Loading state for job page\nlib/\n  db/\n    airtable.ts     # Airtable integration and salary formatting\n  utils/\n    formatDate.ts   # Date formatting utilities\ncomponents/\n  ui/\n    job-details-sidebar.tsx  # Job details sidebar\n    post-job-banner.tsx     # Post job promotion banner\n    similar-jobs.tsx        # Similar jobs suggestions\n  jobs/\n    JobCard.tsx     # Job listing card\n```\n\n----------------------------------------\n\nTITLE: Setting Production URL in Environment Variables\nDESCRIPTION: Configuration of the production URL in the environment variables file to ensure proper generation of absolute URLs for the sitemap and other features.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_16\n\nLANGUAGE: env\nCODE:\n```\nNEXT_PUBLIC_APP_URL=https://yourdomain.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Hero Background Image with Custom Position in TypeScript\nDESCRIPTION: This snippet demonstrates how to configure a hero background image with custom positioning that shows the bottom part of the image. It includes settings for image source, bottom center positioning, sizing, and a light dark overlay.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/theming-customization.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nheroBackgroundImage: {\n  enabled: true,\n  src: \"/images/cityscape.jpg\",\n  position: \"bottom center\", // Shows the bottom part of the image\n  size: \"cover\",\n  overlay: {\n    enabled: true,\n    color: \"rgba(0, 0, 0, 0.4)\",\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Social Media Links in TypeScript\nDESCRIPTION: Shows how to configure social media platform links with individual toggle controls for the navigation bar.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/navbar-customization.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngithub: {\n  show: true,\n  url: \"https://github.com/yourusername/yourrepo\",\n},\nlinkedin: {\n  show: true,\n  url: \"https://linkedin.com/company/yourcompany\",\n},\ntwitter: {\n  show: true,\n  url: \"https://x.com/yourhandle\",\n},\nbluesky: {\n  show: true,\n  url: \"https://bsky.app/profile/yourdomain.com\",\n},\nreddit: {\n  show: true,\n  url: \"https://reddit.com/r/yoursubreddit\",\n},\n```\n\n----------------------------------------\n\nTITLE: Implementing Hero Background Image with Overlay in CSS\nDESCRIPTION: This CSS snippet shows the technical implementation of hero background images with overlays. It uses background properties for the image and a pseudo-element (::before) to create the overlay effect, with proper z-indexing to ensure content appears above the overlay.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/theming-customization.md#2025-04-23_snippet_8\n\nLANGUAGE: css\nCODE:\n```\n/* Base background image */\n.hero {\n  background-image: url('/path/to/image.jpg');\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  position: relative;\n}\n\n/* Overlay implementation */\n.hero::before {\n  content: '';\n  position: absolute;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n}\n\n/* Content sits above the overlay */\n.hero-content {\n  position: relative;\n  z-index: 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Post Job Button in TypeScript\nDESCRIPTION: Shows how to define a call-to-action button for posting jobs with options for label text, link destination, and visual styling.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/navbar-customization.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\npostJob: {\n  show: true,\n  label: \"Post a Job\",\n  link: \"/post\",\n  external: false, // Set to true for external links\n  variant: \"default\", // Button variant (default, outline, etc.)\n},\n```\n\n----------------------------------------\n\nTITLE: URL Parameter Examples for Job Board Filtering\nDESCRIPTION: Examples of URL parameters used for filtering and sorting job listings, including job types, roles, remote status, salary ranges, visa sponsorship, and language requirements.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\n/?types=Full-time,Contract&roles=Senior,Lead&remote=true\n/?salary=50K-100K,100K-200K&visa=true&page=2\n/?sort=salary&per_page=25\n```\n\n----------------------------------------\n\nTITLE: Configuring Hero Section Background Images in TypeScript\nDESCRIPTION: Examples showing how to configure background images for hero sections, including basic setup and adding overlay effects for better text readability. Parameters include image source, position, size, and overlay opacity.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_29\n\nLANGUAGE: typescript\nCODE:\n```\n// Simple background image\nheroBackgroundImage: {\n  enabled: true,\n  src: \"/images/hero-background.jpg\",\n  position: \"center\",\n  size: \"cover\",\n}\n\n// Background image with overlay\nheroBackgroundImage: {\n  enabled: true,\n  src: \"/images/team.jpg\",\n  position: \"center\",\n  size: \"cover\",\n  overlay: {\n    enabled: true,\n    color: \"rgba(0, 0, 0, 0.5)\", // Dark overlay for better text readability\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Currency Settings in TypeScript\nDESCRIPTION: This snippet shows how to configure currency-related settings in the config.ts file. It includes options for setting the default currency and specifying allowed currencies for job listings.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/currencies.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ncurrency: {\n  // Default currency code used when no currency is specified\n  defaultCurrency: \"USD\",\n  \n  // Allowed currencies for job listings\n  // Set to null to allow all currencies, or specify a subset\n  allowedCurrencies: [\"USD\", \"EUR\", \"GBP\", \"USDT\", \"USDC\", \"BTC\", \"ETH\"],\n},\n```\n\n----------------------------------------\n\nTITLE: Configuring Hero Gradient Background in TypeScript\nDESCRIPTION: Sets up a gradient background for the hero section of the job board. This configuration allows for linear or radial gradients with multiple colors and stops.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/theming-customization.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// config/config.ts\nexport const config = {\n  // ... other configuration\n  ui: {\n    // Hero section solid background color (used as fallback)\n    heroBackgroundColor: \"#005450\",\n    \n    // Hero section gradient background\n    heroGradient: {\n      enabled: true, // Set to true to enable gradient background\n      type: \"linear\", // \"linear\" or \"radial\"\n      direction: \"to right\", // Direction for linear or style for radial\n      colors: [\n        \"#005450\", // Start color\n        \"#007a73\", // Optional middle color(s)\n        \"#00a59c\", // End color\n      ],\n      // Optional stops for precise color position control\n      stops: [\"0%\", \"50%\", \"100%\"],\n    },\n    \n    // ... other UI configuration\n  },\n  // ... other configuration\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Email Provider Settings in TypeScript\nDESCRIPTION: Email provider configuration for job alerts including provider selection, API keys, default tags, and event naming. Supports multiple email service providers with Encharge as the example implementation.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/job-alerts-configuration.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// Email Provider Configuration\nemail: {\n  // The email provider to use for subscriptions\n  provider: process.env.EMAIL_PROVIDER || \"encharge\",\n\n  // Encharge configuration\n  encharge: {\n    // Your Encharge write key (from Encharge dashboard)\n    writeKey: process.env.ENCHARGE_WRITE_KEY,\n\n    // Default tags to apply to subscribers\n    defaultTags: \"job-alerts-subscriber\",\n\n    // Event name for subscriptions\n    eventName: \"Job Alert Subscription\",\n  },\n},\n```\n\n----------------------------------------\n\nTITLE: Configuring Hero Background Image in TypeScript\nDESCRIPTION: Sets up a background image for the hero section of the job board. This configuration allows for image positioning, sizing, and an optional overlay for better text readability.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/theming-customization.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// config/config.ts\nexport const config = {\n  // ... other configuration\n  ui: {\n    // Hero background image (highest precedence)\n    heroBackgroundImage: {\n      enabled: true, // Set to true to enable background image\n      src: \"/hero-background.jpg\", // Path to image from public directory\n      position: \"center\", // CSS background-position value\n      size: \"cover\", // CSS background-size value\n      // Optional overlay for better text readability\n      overlay: {\n        enabled: true, // Set to true to enable a color overlay\n        color: \"rgba(0, 84, 80, 0.7)\", // Semi-transparent color\n        opacity: 0.7, // Opacity from 0 to 1\n      },\n    },\n    \n    // Fallback options if image is disabled or fails to load\n    heroGradient: {\n      enabled: false,\n      // gradient options...\n    },\n    heroBackgroundColor: \"#005450\",\n    \n    // ... other UI configuration\n  },\n  // ... other configuration\n};\n```\n\n----------------------------------------\n\nTITLE: Hero Section Configuration with Gradient Background\nDESCRIPTION: This snippet demonstrates how to configure a gradient background for the hero section. It enables the gradient option and specifies the type, direction, colors, and optional stops for the gradient.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_25\n\nLANGUAGE: typescript\nCODE:\n```\nui: {\n  heroGradient: {\n    enabled: true, // Enable gradient background\n    type: \"linear\", // \"linear\" or \"radial\"\n    direction: \"to right\", // Direction for linear gradients\n    colors: [\"#3b82f6\", \"#8b5cf6\", \"#d946ef\"], // Array of colors (2+ colors)\n    stops: [\"0%\", \"50%\", \"100%\"], // Optional percentage stops\n  },\n  heroBackgroundImage: {\n    enabled: false, // Make sure background image is disabled\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Scripts and Analytics in Bordful\nDESCRIPTION: TypeScript configuration for script management in the config.ts file. This allows for loading scripts in different parts of the page with various loading strategies and custom attributes.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nscripts: {\n  head: [\n    // Scripts to load in the <head> section\n    {\n      src: \"your-script-url\",\n      strategy: \"afterInteractive\", // or \"beforeInteractive\", \"lazyOnload\"\n      attributes: {\n        // Additional script attributes\n        \"data-custom\": \"value\",\n        defer: \"\", // Boolean attributes should use empty string\n      },\n    },\n  ],\n  body: [\n    // Scripts to load at the end of <body>\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Hero Section Configuration with Solid Background\nDESCRIPTION: This code shows how to configure the hero section with a solid background color. It disables gradient and background image options to ensure only the solid color is applied.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\nui: {\n  heroBackgroundColor: \"#005450\", // Any valid CSS color value\n  heroGradient: {\n    enabled: false, // Make sure gradient is disabled\n  },\n  heroBackgroundImage: {\n    enabled: false, // Make sure background image is disabled\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Encharge Integration in TypeScript\nDESCRIPTION: This TypeScript configuration snippet demonstrates how to set up the Encharge integration with custom options. It includes the provider, write key, default tags, and event name for job alert subscriptions.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/encharge-integration.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nemail: {\n  provider: \"encharge\",\n  encharge: {\n    writeKey: \"your_encharge_write_key_here\", // Or use process.env.ENCHARGE_WRITE_KEY\n    defaultTags: \"job-alerts-subscriber, custom-tag, bordful-user\",\n    eventName: \"Job Alert Subscription\",\n  }\n},\n```\n\n----------------------------------------\n\nTITLE: Configuring Hero Background Image with Dark Overlay in TypeScript\nDESCRIPTION: This snippet demonstrates how to configure a hero background image with a dark overlay for better text contrast. It includes settings for image source, positioning, sizing, and overlay opacity.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/theming-customization.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nheroBackgroundImage: {\n  enabled: true,\n  src: \"/images/office-space.jpg\",\n  position: \"center\",\n  size: \"cover\",\n  overlay: {\n    enabled: true,\n    color: \"rgba(0, 0, 0, 0.6)\", // Dark overlay for better text contrast\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Linear Gradient Examples for Hero Section\nDESCRIPTION: This snippet provides examples of different linear gradient configurations for the hero section, including horizontal, diagonal, and vertical gradients with various color stops.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_27\n\nLANGUAGE: typescript\nCODE:\n```\n// Horizontal gradient (left to right)\nheroGradient: {\n  enabled: true,\n  type: \"linear\",\n  direction: \"to right\",\n  colors: [\"#3b82f6\", \"#d946ef\"],\n}\n\n// Diagonal gradient\nheroGradient: {\n  enabled: true,\n  type: \"linear\",\n  direction: \"45deg\", // You can use any degree value\n  colors: [\"#3b82f6\", \"#8b5cf6\", \"#d946ef\"],\n}\n\n// Vertical gradient with explicit stops\nheroGradient: {\n  enabled: true,\n  type: \"linear\",\n  direction: \"to bottom\",\n  colors: [\"#3b82f6\", \"#8b5cf6\", \"#d946ef\"],\n  stops: [\"0%\", \"60%\", \"100%\"], // Control color distribution\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hero Background Image with Brand Color Overlay in TypeScript\nDESCRIPTION: This snippet shows how to configure a hero background image with a brand color overlay (indigo). It specifies image source, positioning at the top center, sizing, and a semi-transparent brand color overlay.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/theming-customization.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nheroBackgroundImage: {\n  enabled: true,\n  src: \"/images/team-collaboration.jpg\",\n  position: \"top center\",\n  size: \"cover\",\n  overlay: {\n    enabled: true,\n    color: \"rgba(79, 70, 229, 0.7)\", // Brand color (indigo) overlay\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Radial Gradient Examples for Hero Section\nDESCRIPTION: This snippet demonstrates different radial gradient configurations for the hero section. It includes examples for circular and elliptical gradients with various positioning options.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_28\n\nLANGUAGE: typescript\nCODE:\n```\n// Simple radial gradient\nheroGradient: {\n  enabled: true,\n  type: \"radial\",\n  direction: \"circle\", // Creates a circular gradient\n  colors: [\"#3b82f6\", \"#d946ef\"],\n}\n\n// Elliptical gradient with center position\nheroGradient: {\n  enabled: true,\n  type: \"radial\",\n  direction: \"ellipse at center\", // Creates an elliptical gradient\n  colors: [\"#3b82f6\", \"#8b5cf6\", \"#d946ef\"],\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Rate Limit Storage Structure in TypeScript\nDESCRIPTION: Creates a Map to store rate limit information for each client IP address and defines the RateLimitInfo interface with count and resetTime properties.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/rate-limiting.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// Map to store rate limit information for each IP\nconst rateLimitMap = new Map<string, RateLimitInfo>();\n\ninterface RateLimitInfo {\n  count: number;\n  resetTime: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Brand Display Options in TypeScript\nDESCRIPTION: Shows how to configure the brand display options for both icon & text mode and custom logo mode in the navigation bar.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/navbar-customization.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// Icon & Text mode\nlogo: {\n  enabled: false,\n}\n\n// Custom Logo mode\nlogo: {\n  enabled: true,\n  src: \"/your-logo.svg\",\n  width: 120,\n  height: 32,\n  alt: \"Your Company Logo\",\n}\n```\n\n----------------------------------------\n\nTITLE: Local Production Testing Commands\nDESCRIPTION: Commands for testing production build locally before deployment to catch potential issues early in the development cycle.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/deployment.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration for Airtable Integration\nDESCRIPTION: Example of environment variables configuration in .env file. Contains the Airtable access token and base ID needed for the application to connect to Airtable.\nSOURCE: https://github.com/craftyme/bordful/blob/main/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: env\nCODE:\n```\nAIRTABLE_ACCESS_TOKEN=your_token_here\nAIRTABLE_BASE_ID=your_base_id_here\n```\n\n----------------------------------------\n\nTITLE: Handling Rate Limit Responses on Client Side in TypeScript\nDESCRIPTION: Client-side code that handles rate limit responses by displaying a user-friendly error message using a toast notification when a 429 status is received.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/rate-limiting.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n// Inside handleSubmit function\nif (response.status === 429) {\n  toast({\n    title: \"Rate limit exceeded\",\n    description: \"Too many requests. Please try again later.\",\n    variant: \"destructive\",\n  });\n  return;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Revalidation Period in Next.js Pages\nDESCRIPTION: Sets the revalidation period for Next.js pages to control how frequently the page rebuilds. This determines the balance between content freshness and API call frequency to data sources like Airtable.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\n// Set revalidation period in seconds (e.g., 300 = 5 minutes)\nexport const revalidate = 300;\n```\n\n----------------------------------------\n\nTITLE: Configuring Encharge Provider Settings\nDESCRIPTION: TypeScript configuration file setup for Encharge email provider with customizable options including write key, default tags, and event name.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/email-providers.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nemail: {\n  provider: \"encharge\",\n  encharge: {\n    writeKey: \"your_encharge_write_key_here\", // Or use process.env.ENCHARGE_WRITE_KEY\n    defaultTags: \"job-alerts-subscriber, custom-tag\",\n    eventName: \"Job Alert Subscription\",\n  }\n},\n```\n\n----------------------------------------\n\nTITLE: Generating CSS Linear Gradient\nDESCRIPTION: Example of the CSS output generated for a linear gradient based on the TypeScript configuration. This is applied to the hero section background.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/theming-customization.md#2025-04-23_snippet_3\n\nLANGUAGE: css\nCODE:\n```\nbackground: linear-gradient(to right, #3b82f6 0%, #8b5cf6 50%, #d946ef 100%);\n```\n\n----------------------------------------\n\nTITLE: Generating CSS Radial Gradient\nDESCRIPTION: Example of the CSS output generated for a radial gradient based on the TypeScript configuration. This is applied to the hero section background.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/theming-customization.md#2025-04-23_snippet_4\n\nLANGUAGE: css\nCODE:\n```\nbackground: radial-gradient(circle, #3b82f6 0%, #d946ef 100%);\n```\n\n----------------------------------------\n\nTITLE: Adding New Cryptocurrency Exchange Rates in TypeScript\nDESCRIPTION: This snippet shows how to add exchange rates for new cryptocurrencies in the CURRENCY_RATES object. It includes examples of existing currencies and demonstrates how to add a new cryptocurrency with its USD exchange rate.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/currencies.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// Example of adding a new cryptocurrency\nconst CURRENCY_RATES: Record<CurrencyCode, number> = {\n  // Existing currencies...\n  USD: 1.00,\n  USDT: 1.00, // Stablecoins pegged to USD\n  BTC: 83000, // Approximate BTC/USD rate\n  // Your new cryptocurrency\n  XYZ: 123.45, // Exchange rate relative to USD\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Airtable Environment Variables\nDESCRIPTION: Example of environment variables to be set in the .env file for Airtable integration, including access token, base ID, and table name.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: env\nCODE:\n```\nAIRTABLE_ACCESS_TOKEN=your_token_here\nAIRTABLE_BASE_ID=your_base_id_here\nAIRTABLE_TABLE_NAME=your_table_name_here (defaults to \"Jobs\" if not specified)\n```\n\n----------------------------------------\n\nTITLE: Configuring Email Provider in Environment Variables\nDESCRIPTION: This snippet shows the required environment variables for setting up the Encharge email integration. It configures the email provider type and the API write key needed for authentication.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_22\n\nLANGUAGE: plaintext\nCODE:\n```\nEMAIL_PROVIDER=encharge\nENCHARGE_WRITE_KEY=your_encharge_write_key_here\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Encharge\nDESCRIPTION: Environment variable configuration for Encharge email provider setup. Defines the provider type and authentication key.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/email-providers.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nEMAIL_PROVIDER=encharge\nENCHARGE_WRITE_KEY=your_encharge_write_key_here\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Encharge Integration\nDESCRIPTION: This snippet shows how to set the required environment variables for configuring the Encharge integration. It includes the email provider and the Encharge write key.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/encharge-integration.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nEMAIL_PROVIDER=encharge\nENCHARGE_WRITE_KEY=your_encharge_write_key_here\n```\n\n----------------------------------------\n\nTITLE: Configuring Rate Limit Parameters in TypeScript\nDESCRIPTION: Defines the configuration parameters for rate limiting, setting the maximum number of requests allowed in the time window and the duration of the time window.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/rate-limiting.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// Rate limiting configuration\nconst MAX_REQUESTS_PER_WINDOW = 5; // Maximum number of requests allowed in the time window\nconst WINDOW_DURATION_MS = 60 * 60 * 1000; // 1 hour in milliseconds\n```\n\n----------------------------------------\n\nTITLE: Getting Started with Bordful Installation\nDESCRIPTION: Basic instructions for installing and starting the Bordful job board application. This includes cloning the repository, installing dependencies, configuring environment variables, and running the development server.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Clone the repository\n2. Install dependencies with `npm install`\n3. Copy `.env.example` to `.env` and configure your environment variables\n4. Copy `config/config.example.ts` to `config/config.ts` and customize as needed\n5. Run the development server with `npm run dev`\n```\n\n----------------------------------------\n\nTITLE: Setting up Languages in Airtable for Bordful\nDESCRIPTION: Configuration example for setting up the languages field in Airtable as Multiple Select options with the format 'Language Name (code)'. This approach combines human readability with standardized language codes.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nEnglish (en)\nSpanish (es)\nFrench (fr)\nGerman (de)\nJapanese (ja)\n```\n\n----------------------------------------\n\nTITLE: Cloning and Installing Bordful Repository\nDESCRIPTION: Commands to clone the Bordful repository from GitHub, navigate to the project directory, and install dependencies using npm.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/craftled/bordful\ncd bordful\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Copying and Editing Configuration File in Bash\nDESCRIPTION: This snippet demonstrates how to copy the example configuration file and prepare it for editing. It involves copying config.example.ts to config.ts, which can then be customized with specific settings.\nSOURCE: https://github.com/craftyme/bordful/blob/main/config/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Copy the example configuration\ncp config/config.example.ts config/config.ts\n\n# Edit the configuration with your settings\n# (Open config/config.ts in your editor)\n```\n\n----------------------------------------\n\nTITLE: Docker Container Deployment Commands\nDESCRIPTION: Docker commands for building and running the job board application in a containerized environment. Includes port mapping for local access.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/deployment.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t job-board .\ndocker run -p 3000:3000 job-board\n```\n\n----------------------------------------\n\nTITLE: Importing Schema.org Types in TypeScript\nDESCRIPTION: This snippet shows how to import necessary types from schema-dts for TypeScript type safety when working with Schema.org structured data.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/schema-implementation.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport type {\n  JobPosting,\n  WithContext,\n  MonetaryAmount,\n  QuantitativeValue,\n  Organization,\n  Place,\n  PostalAddress,\n  Country,\n} from \"schema-dts\";\n```\n\n----------------------------------------\n\nTITLE: Copying Bordful Configuration File\nDESCRIPTION: Command to copy the example configuration file to create a custom configuration for the Bordful project.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncp config/config.example.ts config/config.ts\n```\n\n----------------------------------------\n\nTITLE: Copying Environment Configuration File\nDESCRIPTION: Command to copy the example environment configuration file to create a new .env file for local settings.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env  # or copy manually if you're on Windows\n```\n\n----------------------------------------\n\nTITLE: Creating Feature Branch in Git\nDESCRIPTION: Command for creating a new feature branch in Git when starting development work. This is part of the standard Git workflow for contributing to the project.\nSOURCE: https://github.com/craftyme/bordful/blob/main/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b feature/your-feature-name\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server for local testing and development work. Runs the application in development mode with hot reloading.\nSOURCE: https://github.com/craftyme/bordful/blob/main/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Bordful Development Server\nDESCRIPTION: Command to start the Bordful development server using npm.\nSOURCE: https://github.com/craftyme/bordful/blob/main/README.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all required npm dependencies for the project. This is the first step in setting up the development environment.\nSOURCE: https://github.com/craftyme/bordful/blob/main/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Configuring Pricing Display Currency in TypeScript\nDESCRIPTION: This code snippet demonstrates how to configure the display currency for the pricing page in the config.ts file. The currency symbol is automatically derived from the specified currency code.\nSOURCE: https://github.com/craftyme/bordful/blob/main/docs/currencies.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\npricing: {\n  // Other pricing configuration...\n  \n  // Currency for pricing display\n  currency: \"USD\",\n  \n  // Currency symbol is derived automatically\n},\n```"
  }
]
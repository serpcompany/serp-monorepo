[
  {
    "owner": "jfversluis",
    "repo": "plugin.maui.pedometer",
    "content": "TITLE: Using Pedometer with Dependency Injection\nDESCRIPTION: Demonstrates how to use dependency injection to access the Pedometer service in a ViewModel class, including subscription to reading changes and starting the monitoring.\nSOURCE: https://github.com/jfversluis/plugin.maui.pedometer/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\npublic class StepCounterViewModel\n{\n    readonly IPedometer pedometer;\n\n    public StepCounterViewModel(IPedometer pedometer)\n    {\n        this.pedometer = pedometer;\n    }\n\n    public void StartCounting()\n    {\n        pedometer.ReadingChanged += (sender, reading) =>\n        {\n            Console.WriteLine(reading.NumberOfSteps);\n        };\n\n        pedometer.Start();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Pedometer with MauiAppBuilder\nDESCRIPTION: Shows how to register the Pedometer service with the MauiAppBuilder for dependency injection in a .NET MAUI application.\nSOURCE: https://github.com/jfversluis/plugin.maui.pedometer/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.AddSingleton(Pedometer.Default);\n```\n\n----------------------------------------\n\nTITLE: Using Pedometer Directly Without Dependency Injection\nDESCRIPTION: Shows how to use the Pedometer service directly using the Default property, without using dependency injection.\nSOURCE: https://github.com/jfversluis/plugin.maui.pedometer/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\npublic class StepCounterViewModel\n{\n    public void StartCounting()\n    {\n        pedometer.ReadingChanged += (sender, reading) =>\n        {\n            Console.WriteLine(reading.NumberOfSteps);\n        };\n\n        Pedometer.Default.Start();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: iOS Pedometer Permission Configuration\nDESCRIPTION: XML snippet showing how to add the required NSMotionUsageDescription key to the iOS info.plist file for pedometer access.\nSOURCE: https://github.com/jfversluis/plugin.maui.pedometer/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<key>NSMotionUsageDescription</key>\n<string>This app wants to track your pedometer readings</string>\n```\n\n----------------------------------------\n\nTITLE: Android Pedometer Permission Configuration\nDESCRIPTION: XML snippet showing how to add the required ACTIVITY_RECOGNITION permission to the Android manifest file for pedometer access on API 29+.\nSOURCE: https://github.com/jfversluis/plugin.maui.pedometer/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<uses-permission android:name=\"android.permission.ACTIVITY_RECOGNITION\" />\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets with FileSystem in C#\nDESCRIPTION: Asynchronous method that demonstrates how to open and read a raw asset file using the FileSystem class from MAUI Essentials. The example shows how to load a file named 'AboutAssets.txt' and read its contents as text.\nSOURCE: https://github.com/jfversluis/plugin.maui.pedometer/blob/main/samples/Plugin.Maui.Pedometer.Sample/Resources/Raw/AboutAssets.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n    using var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n    using var reader = new StreamReader(stream);\n\n    var contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that defines how raw assets are included in the MAUI application build. The MauiAsset build action ensures files in the Resources/Raw directory are deployed with the application package.\nSOURCE: https://github.com/jfversluis/plugin.maui.pedometer/blob/main/samples/Plugin.Maui.Pedometer.Sample/Resources/Raw/AboutAssets.txt#2025-04-23_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```"
  }
]
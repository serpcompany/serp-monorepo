[
  {
    "owner": "mondaycom",
    "repo": "monday-code-quickstarts",
    "content": "TITLE: Custom Action Sequence Diagram for Monday Code Integration\nDESCRIPTION: Mermaid sequence diagram showing how custom actions are processed. It illustrates the flow from user triggering an action in Monday's workflows through the app retrieving credentials and queuing the work to be processed asynchronously.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-python/README.md#2025-04-21_snippet_3\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant User\n    participant Monday\n    participant App\n    participant Monday SDK API\n\n    User->>Monday: Uses the custom action in their workflows\n    Monday->>App: Sends a request when the custom action should be executed\n    App->>Monday SDK API: Gets the access token from StorageAPI, using the user's context\n    App->>Monday SDK API: Sends the requested action to the Worker Queue\n    App->>Monday: Responds that the action has been received and will be processed\n```\n\n----------------------------------------\n\nTITLE: Authorization Flow Sequence Diagram for Monday Code Integration\nDESCRIPTION: Mermaid sequence diagram illustrating the OAuth authorization flow between the user, Monday platform, the application, and Monday SDK API. This shows how authentication is established when a user adds a recipe from the automation center.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-python/README.md#2025-04-21_snippet_2\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant User\n    participant Monday\n    participant App\n    participant Monday SDK API\n\n    User->>Monday: Adds recipe from automation center\n    Monday->>App: Sends request to app's authorization URL\n    App->>User: Redirects user to Monday's OAuth authorization page (if not yet authorized)\n    User->>Monday: Logs in and authorizes the app\n    Monday->>App: Sends user back to app's callback URL with an authorization code\n    App->>Monday: Requests access token using the authorization code\n    Monday->>App: Sends access token\n    App->>Monday SDK API: Saves the access token using StorageAPI\n    App->>User: Redirects user back to the first-received redirect URL (recipe page)\n```\n\n----------------------------------------\n\nTITLE: Worker Queue Sequence Diagram for Monday Code Integration\nDESCRIPTION: Mermaid sequence diagram depicting how the worker queue processes actions asynchronously. It shows the Monday SDK API triggering the app to process a queued action, which then executes the required operations.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-python/README.md#2025-04-21_snippet_4\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant App\n    participant Monday SDK API\n\n    Monday SDK API->>App: Worker queue sends a request to the app to process the action\n    App->>App: Processes the action and sends an email\n```\n\n----------------------------------------\n\nTITLE: Defining Python Dependencies in requirements.txt\nDESCRIPTION: Lists all required Python packages and their version constraints for a Monday Code Quickstart project. Includes the monday-code SDK (~=0.2.2), Flask web framework (3.0.0), gunicorn server, and utility libraries for HTTP requests (requests, urllib3), authentication (PyJWT), and encryption (bcrypt).\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-python/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmonday-code~=0.2.2\nFlask==3.0.0\ngunicorn==20.1.0\nWerkzeug==3.0.1\nurllib3~=2.0.7\nPyJWT~=2.8.0\nbcrypt~=4.1.2\nrequests~=2.31.0\n```\n\n----------------------------------------\n\nTITLE: Deploying Code to Monday Platform\nDESCRIPTION: Command to push and deploy code to the monday.com platform using the monday apps CLI.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmapps code:push\n```\n\n----------------------------------------\n\nTITLE: Installing Required Packages with pip in Python Project\nDESCRIPTION: Command to install all dependencies listed in the requirements.txt file for the Monday Code Python project. This should be run after cloning the repository and navigating to the project directory.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-python/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Running the Python Flask Application for Monday Code Integration\nDESCRIPTION: Command to start the Flask application that integrates with Monday Code. When executed, the application will run on http://0.0.0.0:8080 and be ready to handle requests.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-python/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython main.py\n```\n\n----------------------------------------\n\nTITLE: Running Development Server\nDESCRIPTION: Command to start the application in development mode, which includes creating a tunnel using monday-apps-cli\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-node/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM\nDESCRIPTION: Commands to navigate to the project directory and install required npm packages\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-node/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd quickstart-node\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Building and Starting Production Server\nDESCRIPTION: Commands to compile TypeScript files and start the application in production mode\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-node/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Generating GraphQL Types\nDESCRIPTION: Command to generate TypeScript types from GraphQL queries, mutations, and fragments defined in queries.graphql.ts\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-node/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fetch:generate\n```\n\n----------------------------------------\n\nTITLE: Running the PHP Application Locally with Docker\nDESCRIPTION: Commands to start the application locally using Docker Compose for containerization and PHP's built-in web server. The application will be available at http://0.0.0.0:8080.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-php/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up\nphp -S 0.0.0.0:8080\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Composer in PHP Project\nDESCRIPTION: Command to update and install the required PHP dependencies using Composer, which should be run after cloning the repository and navigating to the project directory.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-php/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nphp composer.phar update\n```\n\n----------------------------------------\n\nTITLE: Deploying to Monday Code Platform\nDESCRIPTION: Command to deploy the PHP application to the Monday code platform using the mapps CLI tool.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-php/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmapps code:push\n```\n\n----------------------------------------\n\nTITLE: Viewing Monday App Deployment Logs\nDESCRIPTION: Command to view live logs of the deployed monday.com application using the CLI.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmapps code:logs\n```\n\n----------------------------------------\n\nTITLE: Specifying FastAPI and Uvicorn Dependencies with Version Constraints\nDESCRIPTION: Defines required Python packages for a FastAPI web application with specific version constraints. FastAPI is limited to versions 0.103 or newer but less than version 1, while Uvicorn (ASGI server) is constrained to versions 0.23 or newer but less than version 1.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-python-fastapi/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: requirements.txt\nCODE:\n```\nfastapi>=0.103,<1\nuvicorn>=0.23,<1\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Dependencies for Django with Google Cloud Run\nDESCRIPTION: This requirements.txt file defines exact versions of Python packages needed for a Django application that will run on Google Cloud Run. It includes Django 5.0, environment variable management, PostgreSQL database connectivity, ASGI server for production, and static file handling.\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-python-django/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nDjango==5.0\ndjango-environ==0.10.0\ngoogle-cloud-run==0.10.1\npsycopg2-binary==2.9.9\nuvicorn==0.29.0\nwhitenoise==6.6.0\n```\n\n----------------------------------------\n\nTITLE: Robot.txt File Reference Comment\nDESCRIPTION: Documentation reference comment pointing to the official robots.txt specification and usage guide\nSOURCE: https://github.com/mondaycom/monday-code-quickstarts/blob/main/quickstart-ruby-rails/public/robots.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n# See https://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file\n```"
  }
]
[
  {
    "owner": "sadmann7",
    "repo": "diceui",
    "content": "TITLE: Defining Complex Column Definitions for Data Table\nDESCRIPTION: Comprehensive example of column definitions for the data table, including custom accessors, headers, cells, metadata, and filtering options for different data types.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = React.useMemo<ColumnDef<Project>[]>(() => [\n  {\n    // Required: Unique identifier for the column\n    id: \"title\", // [!code highlight]\n    // Required: Key to access the data, `accessorFn` can also be used\n    accessorKey: \"title\", // [!code highlight]\n    // Optional: Custom header component\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Title\" />\n    ),\n    // Optional: Custom cell component\n    cell: ({ row }) => <div>{row.getValue(\"title\")}</div>,\n    // Optional: Meta options for filtering, sorting, and view options\n    meta: {\n      label: \"Title\",\n      placeholder: \"Search titles...\",\n      variant: \"text\",\n      icon: Text,\n    },\n    // By default, the column will not be filtered. Set to `true` to enable filtering.\n    enableColumnFilter: true, // [!code highlight]\n  },\n  {\n    id: \"status\",\n    // Access nested data using `accessorFn`\n    accessorFn: (row) => row.lineItem.status,\n    header: \"Status\",\n    meta: {\n      label: \"Status\",\n      variant: \"select\",\n      options: [\n        { label: \"Active\", value: \"active\" },\n        { label: \"Inactive\", value: \"inactive\" },\n      ],\n    },\n    enableColumnFilter: true,\n  },\n], []);\n```\n\n----------------------------------------\n\nTITLE: Defining Data Table Columns with Metadata\nDESCRIPTION: Example of defining columns with appropriate metadata for the data table, including unique IDs, accessors, header components, and filtering options.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text, CalendarIcon, DollarSign } from \"lucide-react\";\nimport { DataTableColumnHeader } from \"@/components/data-table-column-header\";\n\nconst columns = React.useMemo(() => [\n  {\n    // Provide an unique id for the column\n    // This id will be used as query key for the column filter\n    id: \"title\", // [!code highlight]\n    accessorKey: \"title\",\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Title\" />\n    ),\n    cell: ({ row }) => <div>{row.getValue(\"title\")}</div>,\n    // Define the column meta options for sorting, filtering, and view options\n    meta: { // [!code highlight]\n      label: \"Title\", // [!code highlight]\n      placeholder: \"Search titles...\", // [!code highlight]\n      variant: \"text\", // [!code highlight]\n      icon: Text, // [!code highlight]\n    }, // [!code highlight] \n    // By default, the column will not be filtered. Set to `true` to enable filtering.\n    enableColumnFilter: true, // [!code highlight]\n  },\n], []);\n```\n\n----------------------------------------\n\nTITLE: Initializing Data Table State with useDataTable Hook\nDESCRIPTION: Example of initializing the table state using the useDataTable hook, including configuration for data, columns, pagination, and row identification.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useDataTable } from \"@/hooks/use-data-table\";\n\nfunction DataTableDemo() {\n  const { table } = useDataTable({\n    data,\n    columns,\n    // Pass the total number of pages for the table\n    pageCount, // [!code highlight]\n    initialState: {\n      sorting: [{ id: \"createdAt\", desc: true }],\n      pagination: { pageSize: 10 },\n    },\n    // Unique identifier for rows, can be used for unique row selection\n    getRowId: (row) => row.id, // [!code highlight]\n  });\n\n  return (\n    // ... render table\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Data Table with Advanced Filtering Toolbar\nDESCRIPTION: Example of using the DataTableAdvancedToolbar component with FilterList and SortList for advanced data filtering and sorting capabilities.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DataTableAdvancedToolbar } from \"@/components/data-table-advanced-toolbar\";\nimport { DataTableFilterList } from \"@/components/data-table-filter-list\";\nimport { DataTableFilterMenu } from \"@/components/data-table-filter-menu\";\n\nfunction DataTableDemo() {\n  return (\n    <DataTable table={table}>\n      <DataTableAdvancedToolbar table={table}>\n        <DataTableFilterList table={table} />\n        <DataTableSortList table={table} />\n      </DataTableAdvancedToolbar>\n    </DataTable>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Data Table with Standard Toolbar\nDESCRIPTION: Example of passing the table instance to the DataTable and DataTableToolbar components to render a table with standard toolbar functionality.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DataTable } from \"@/components/data-table\";\nimport { DataTableToolbar } from \"@/components/data-table-toolbar\";\nimport { DataTableSortList } from \"@/components/data-table-sort-list\";\n\nfunction DataTableDemo() {\n  return (\n    <DataTable table={table}>\n      <DataTableToolbar table={table}>\n        <DataTableSortList table={table} />\n      </DataTableToolbar>\n    </DataTable>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Combobox Basic Layout Implementation\nDESCRIPTION: Example showing the complete structure of the combobox component with all available parts including root, label, anchor, input, trigger, content, and various other subcomponents\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/combobox.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Combobox from \"@diceui/combobox\";\n\n<Combobox.Root>\n  <Combobox.Label />\n  <Combobox.Anchor>\n    <Combobox.BadgeList>\n      <Combobox.BadgeItem>\n        <Combobox.BadgeItemDelete />\n      </Combobox.BadgeItem>\n    </Combobox.BadgeList>\n    <Combobox.Input />\n    <Combobox.Trigger />\n    <Combobox.Cancel />\n  </Combobox.Anchor>\n  <Combobox.Portal>\n    <Combobox.Content>\n      <Combobox.Arrow />\n      <Combobox.Loading />\n      <Combobox.Empty />\n      <Combobox.Group>\n        <Combobox.GroupLabel />\n        <Combobox.Item>\n          <Combobox.ItemText />\n          <Combobox.ItemIndicator />\n        </Combobox.Item>\n      </Combobox.Group>\n      <Combobox.Separator />\n    </Combobox.Content>\n  </Combobox.Portal>\n</Combobox.Root>\n```\n\n----------------------------------------\n\nTITLE: Composing Kanban Component in React\nDESCRIPTION: Example of how to import and compose the Kanban component parts in a React application.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/kanban.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Kanban from \"@/components/ui/kanban\";\n\n<Kanban.Root>\n  <Kanban.Board>\n    <Kanban.Column>\n      <Kanban.ColumnHandle />\n      <Kanban.Item>\n        <Kanban.ItemHandle />\n      </Kanban.Item>\n    </Kanban.Column>\n  </Kanban.Board>\n  <Kanban.Overlay />\n</Kanban.Root>\n```\n\n----------------------------------------\n\nTITLE: Basic File Upload Component Layout\nDESCRIPTION: Example of how to import and compose the file upload component parts together to create a complete file upload interface.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/file-upload.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as FileUpload from \"@/components/ui/file-upload\";\n\n<FileUpload.Root>\n  <FileUpload.Dropzone />\n  <FileUpload.Trigger />\n  <FileUpload.List>\n    <FileUpload.Item>\n      <FileUpload.ItemPreview />\n      <FileUpload.ItemMetadata />\n      <FileUpload.ItemProgress />\n      <FileUpload.ItemDelete />\n    </FileUpload.Item>\n  </FileUpload.List>\n</FileUpload.Root>\n```\n\n----------------------------------------\n\nTITLE: Basic Editable Component Layout\nDESCRIPTION: Example of how to import and compose the Editable component parts together in a React application.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/editable.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Editable from \"@/components/ui/editable\";\n\n<Editable.Root>\n  <Editable.Label />\n  <Editable.Area>\n    <Editable.Preview />\n    <Editable.Input />\n    <Editable.Trigger />\n  </Editable.Area>\n  <Editable.Trigger />\n  <Editable.Toolbar>\n    <Editable.Submit />\n    <Editable.Cancel />\n  </Editable.Toolbar>\n</Editable.Root>\n```\n\n----------------------------------------\n\nTITLE: Basic Tags Input Layout Implementation\nDESCRIPTION: Example showing how to compose the Tags Input component using its constituent parts including Root, Label, Item, ItemText, ItemDelete, Input and Clear components\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/tags-input.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as TagsInput from \"@diceui/tags-input\";\n\n<TagsInput.Root>\n  <TagsInput.Label/>\n  <TagsInput.Item >\n    <TagsInput.ItemText />\n    <TagsInput.ItemDelete />\n  </TagsInput.Item>\n  <TagsInput.Input />\n  <TagsInput.Clear />\n</TagsInput.Root>\n```\n\n----------------------------------------\n\nTITLE: Implementing Direction Provider in React Application\nDESCRIPTION: Example of how to use the DirectionProvider component to wrap an application and provide direction context.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/direction-provider.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DirectionProvider } from \"@diceui/direction-provider\"\n\nexport default function App() {\n  return (\n    <DirectionProvider dir=\"ltr\">\n      <YourApp />\n    </DirectionProvider>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Composing Refs in React\nDESCRIPTION: Example demonstrating the usage of useComposedRefs hook to combine multiple refs in an Input component\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/composition.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useComposedRefs } from \"@/lib/composition\"\n\nexport function Input({ forwardedRef, ...props }) {\n  const localRef = React.useRef(null)\n  const composedRefs = useComposedRefs(forwardedRef, localRef)\n\n  return <input ref={composedRefs} {...props} />\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Client-Only Component in React\nDESCRIPTION: Example usage of the ClientOnly component wrapper with a fallback loading state for client-side only rendering.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/client-only.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ClientOnly } from \"@/components/client-only\"\n\nexport default function App() {\n  return (\n    <ClientOnly fallback={<LoadingSpinner />}>\n      <ClientComponent />\n    </ClientOnly>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Portal Component Usage\nDESCRIPTION: Demonstrates how to use the Portal component to render content in a different part of the DOM. By default, content is rendered in the document body.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/portal.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Portal } from \"@/components/portal\"\n\nexport default function App() {\n  return (\n    <Portal>\n      {/* Content to be rendered in a different part of the DOM */}\n      <div>This will be rendered in the document body by default</div>\n    </Portal>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Using Visually Hidden Component in React\nDESCRIPTION: Example of how to import and use the Visually Hidden component in a React component. This snippet demonstrates wrapping hidden text within a button for accessibility.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/visually-hidden.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { VisuallyHidden } from \"@diceui/visually-hidden\"\n\nexport function IconButton() {\n  return (\n    <button>\n      <Icon />\n      <VisuallyHidden>Close menu</VisuallyHidden>\n    </button>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Scroller Component Implementation\nDESCRIPTION: Example showing how to import and use the Scroller component in a React component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/scroller.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Scroller } from \"@/components/ui/scroller\"\n\n<Scroller>\n   {/* Scrollable content */}\n</Scroller>\n```\n\n----------------------------------------\n\nTITLE: Composing Sortable Component in React\nDESCRIPTION: Example of how to import and compose the Sortable component parts in a React application.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/sortable.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Sortable from \"@/components/ui/sortable\";\n\n<Sortable.Root>\n  <Sortable.Content>\n    <Sortable.Item >\n      <Sortable.ItemHandle />\n    </Sortable.Item>\n    <Sortable.Item />\n  </Sortable.Content>\n  <Sortable.Overlay />\n</Sortable.Root>\n```\n\n----------------------------------------\n\nTITLE: Using Visually Hidden Input Component with React\nDESCRIPTION: Example demonstrating how to implement the VisuallyHiddenInput component in a custom form with a checkbox. The component helps maintain accessibility while keeping the input visually hidden.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/visually-hidden-input.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { VisuallyHiddenInput } from \"@diceui/visually-hidden-input\"\n\nexport function CustomForm() {\n  const [checked, setChecked] = React.useState(false)\n  const controlRef = React.useRef(null)\n  \n  return (\n    <form>\n      <button \n        ref={controlRef}\n        onClick={() => setChecked(!checked)}\n        aria-checked={checked}\n        role=\"checkbox\"\n      >\n        {checked ? \"✓\" : \"\"}\n      </button>\n      <VisuallyHiddenInput\n        type=\"checkbox\"\n        checked={checked}\n        control={controlRef.current}\n      />\n    </form>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Masonry Component Usage in React\nDESCRIPTION: Example showing how to import and use the Masonry component in a React application. This demonstrates the basic composition of the Root and Item components.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/masonry.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Masonry from \"@/components/ui/masonry\";\n\n<Masonry.Root>\n  <Masonry.Item />\n</Masonry.Root>\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of Listbox Dependencies\nDESCRIPTION: Command to manually install the required dependencies for using the Listbox component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/listbox.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n@diceui/listbox\n```\n\n----------------------------------------\n\nTITLE: Basic Mention Component Layout\nDESCRIPTION: Example showing how to compose the Mention component parts together including Root, Label, Input, Portal, Content, and Item components\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/mention.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Mention from \"@diceui/mention\";\n\n<Mention.Root>\n  <Mention.Label />\n  <Mention.Input />\n  <Mention.Portal>\n    <Mention.Content>\n      <Mention.Item />\n    </Mention.Content>\n  </Mention.Portal>\n</Mention.Root>\n```\n\n----------------------------------------\n\nTITLE: Basic Kbd Component Layout\nDESCRIPTION: Example showing how to compose the basic keyboard component structure using Root, Key, and Separator parts\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/kbd.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Kbd from \"@/components/ui/kbd\";\n\n<Kbd.Root>\n  <Kbd.Key/>\n  <Kbd.Separator />\n  <Kbd.Key />\n</Kbd.Root>\n```\n\n----------------------------------------\n\nTITLE: Composing Checkbox Group Component in React\nDESCRIPTION: Example of how to import and compose the Checkbox Group component parts in a React application.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/checkbox-group.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as CheckboxGroup from \"@diceui/checkbox-group\";\n\n<CheckboxGroup.Root>\n  <CheckboxGroup.Label />\n  <CheckboxGroup.List>\n    <CheckboxGroup.Item>\n      <CheckboxGroup.Indicator />\n    </CheckboxGroup.Item>\n  </CheckboxGroup.List>\n  <CheckboxGroup.Description>\n</CheckboxGroup.Root>\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all necessary dependencies for the Dice UI project using pnpm package manager.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/CONTRIBUTING.md#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Adding Action Bar for Selected Rows in Data Table\nDESCRIPTION: Example of rendering a DataTableActionBar component when rows are selected, allowing for custom actions on the selected data.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DataTableActionBar } from \"@/components/data-table-action-bar\";\nimport { CustomTableActions } from \"@/components/custom-table-actions\";\n\nfunction DataTableDemo() {\n  return (\n    <DataTable \n      table={table}\n      actionBar={\n        <DataTableActionBar table={table}>\n          {/* Add your custom actions here */}\n          <CustomTableActions />\n        </DataTableActionBar>\n      }\n    >\n      <DataTableToolbar table={table} />\n    </DataTable>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Switching from Filter List to Filter Menu in Data Table\nDESCRIPTION: Example of swapping DataTableFilterList with DataTableFilterMenu to provide a command palette-style interface for filtering data.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DataTableAdvancedToolbar } from \"@/components/data-table-advanced-toolbar\";\nimport { DataTableFilterList } from \"@/components/data-table-filter-list\"; // [!code --]\nimport { DataTableFilterMenu } from \"@/components/data-table-filter-menu\"; // [!code ++]\nimport { DataTableSortList } from \"@/components/data-table-sort-list\";\n\nfunction DataTableDemo() {\n  return (\n    <DataTable table={table}>\n      <DataTableAdvancedToolbar table={table}>\n        {/* [!code --] */}\n        <DataTableFilterList table={table} />\n        {/* [!code ++] */}\n        <DataTableFilterMenu table={table} />\n        <DataTableSortList table={table} />\n      </DataTableAdvancedToolbar>\n    </DataTable>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Data Table Action Bar Component\nDESCRIPTION: Command to install the action bar component that provides a toolbar for the data table when rows are selected.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_6\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/data-table-action-bar\"\n```\n\n----------------------------------------\n\nTITLE: Installing Data Table Filter Menu Component\nDESCRIPTION: Command to install the filter menu component that provides a command palette-style interface for managing filters.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_5\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/data-table-filter-menu\"\n```\n\n----------------------------------------\n\nTITLE: Installing Data Table Filter List Component\nDESCRIPTION: Command to install the filter list component that enables filtering data with multiple conditions using AND/OR logic.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_4\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/data-table-filter-list\"\n```\n\n----------------------------------------\n\nTITLE: Installing Data Table Sort List Component\nDESCRIPTION: Command to install the sort list component that provides comprehensive sorting capabilities with multiple columns simultaneously.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_3\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/data-table-sort-list\"\n```\n\n----------------------------------------\n\nTITLE: Composing Data Table Components with Standard and Advanced Toolbars\nDESCRIPTION: Example of how to import and compose data table components together, showing both standard and advanced toolbar implementations.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DataTable } from \"@/components/data-table\";\nimport { DataTableToolbar } from \"@/components/data-table-toolbar\";\nimport { DataTableAdvancedToolbar } from \"@/components/data-table-advanced-toolbar\";\nimport { DataTableFilterList } from \"@/components/data-table-filter-list\";\nimport { DataTableSortList } from \"@/components/data-table-sort-list\";\nimport { useDataTable } from \"@/hooks/use-data-table\";\n\nconst { table } = useDataTable({\n  data,\n  columns,\n  pageCount,\n});\n\n// With standard toolbar\n<DataTable table={table}>\n  <DataTableToolbar table={table}>\n    <DataTableSortList table={table} />\n  </DataTableToolbar>\n</DataTable>\n\n// With advanced toolbar\n<DataTable table={table}>\n  <DataTableAdvancedToolbar table={table}>\n    <DataTableFilterList table={table} />\n    <DataTableSortList table={table} />\n  </DataTableAdvancedToolbar>\n</DataTable>\n```\n\n----------------------------------------\n\nTITLE: Configuring NuqsAdapter for Query State Management\nDESCRIPTION: Wrap the application with NuqsAdapter to enable query state management for the data table.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { NuqsAdapter } from \"nuqs/adapters/next/app\";\n\n<NuqsAdapter>\n  <App />\n</NuqsAdapter>\n```\n\n----------------------------------------\n\nTITLE: Installing Data Table Component with shadcn\nDESCRIPTION: Command to install the data table component and its dependencies using shadcn.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/data-table.mdx#2025-04-11_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/data-table\"\n```\n\n----------------------------------------\n\nTITLE: Using Presence Component with Force Mount Option\nDESCRIPTION: Example showing how to use the forceMount prop with Presence to keep elements in the DOM regardless of presence state, useful for accessibility and focus management.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/presence.mdx#2025-04-11_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Presence } from \"@/components/presence\"\n\nexport default function App() {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <Presence present={isOpen} forceMount>\n      <div \n        className={cn(\n          \"transition-opacity duration-200\",\n          isOpen ? \"opacity-100\" : \"opacity-0\"\n        )}\n      >\n        This content will always be mounted but will fade in/out\n      </div>\n    </Presence>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Using Presence Component with Render Function Pattern\nDESCRIPTION: Example demonstrating the render function pattern with Presence, where the presence state is accessed through a function parameter to control animations.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/presence.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Presence } from \"@/components/presence\"\n\nexport default function App() {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <Presence present={isOpen}>\n      {({ present }) => (\n        <div className={present ? \"animate-in fade-in-0\" : \"animate-out fade-out-0\"}>\n          This content will animate based on presence state\n        </div>\n      )}\n    </Presence>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Presence Component in React\nDESCRIPTION: Example showing how to use the Presence component to animate content based on a state variable. It demonstrates toggling visibility with animation classes.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/presence.mdx#2025-04-11_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Presence } from \"@/components/presence\"\n\nexport default function App() {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Presence present={open}>\n      <div\n        data-state={open ? \"open\" : \"closed\"}\n        className=\"data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:animate-out data-[state=open]:animate-in\"\n      >\n        This content will animate in and out\n      </div>\n    </Presence>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Presence Component via CLI\nDESCRIPTION: Command to install the Presence component using the shadcn CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/presence.mdx#2025-04-11_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/presence\"\n```\n\n----------------------------------------\n\nTITLE: Portal Component with Custom Container\nDESCRIPTION: Shows how to use the Portal component with a custom container. This example creates a container reference and passes it to the Portal component to specify where children should be rendered.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/portal.mdx#2025-04-11_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Portal } from \"@/components/portal\"\n\nexport default function App() {\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <>\n      <div ref={containerRef} />\n      <Portal container={containerRef.current}>\n        <div>This will be rendered in the custom container</div>\n      </Portal>\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Portal Component\nDESCRIPTION: Command to install the required dependencies for the Portal component. The component depends on @radix-ui/react-slot package.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/portal.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n@radix-ui/react-slot\n```\n\n----------------------------------------\n\nTITLE: Installing Portal Component via CLI\nDESCRIPTION: Command to install the Portal component using the shadcn CLI tool. This provides an automated way to add the component to your project.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/portal.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/portal\"\n```\n\n----------------------------------------\n\nTITLE: Custom Key Titles Implementation\nDESCRIPTION: Example showing how to implement custom key titles for Windows key and Lock screen combinations\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/kbd.mdx#2025-04-11_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\n<Kbd.Root>\n  <Kbd.Key title=\"Windows key\">⊞</Kbd.Key>\n  <Kbd.Separator />\n  <Kbd.Key title=\"Lock screen\">L</Kbd.Key>\n</Kbd.Root>\n```\n\n----------------------------------------\n\nTITLE: Using the useDirection Hook in a React Component\nDESCRIPTION: Demonstration of how to use the useDirection hook to access the current direction within a component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/direction-provider.mdx#2025-04-11_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useDirection } from \"@/components/direction-provider\"\n\nfunction Component() {\n  const dir = useDirection()\n  \n  return (\n    <button dir={dir}>\n      Do a kickflip\n    </button>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Direction Provider Dependencies Manually\nDESCRIPTION: Command to manually install the required dependency for the Direction Provider component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/direction-provider.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n@diceui/direction-provider\n```\n\n----------------------------------------\n\nTITLE: Installing Direction Provider via CLI\nDESCRIPTION: Command to install the Direction Provider component using the shadcn CLI.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/direction-provider.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/direction-provider\"\n```\n\n----------------------------------------\n\nTITLE: Composing Event Handlers in React\nDESCRIPTION: Example showing how to use composeEventHandlers to combine multiple click handlers in a Button component\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/composition.mdx#2025-04-11_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { composeEventHandlers } from \"@/lib/composition\"\n\nexport function Button({ onClick, ...props }) {\n  const handleClick = composeEventHandlers(onClick, (event) => {\n    console.log(\"Button clicked\")\n  })\n\n  return <button onClick={handleClick} {...props} />\n}\n```\n\n----------------------------------------\n\nTITLE: Installing DiceUI Composition Package\nDESCRIPTION: Command to install the composition utility package using the shadcn CLI\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/composition.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/composition\"\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies\nDESCRIPTION: Manual installation of the hydration boundary dependency required for the client-only component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/client-only.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n@diceui/hydration-boundary\n```\n\n----------------------------------------\n\nTITLE: Installing Client-Only Component via CLI\nDESCRIPTION: Command to install the client-only component using the shadcn CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/client-only.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/client-only\"\n```\n\n----------------------------------------\n\nTITLE: Installing Visually Hidden Input Package Manually\nDESCRIPTION: Command to install the required dependency package for the visually hidden input component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/visually-hidden-input.mdx#2025-04-11_snippet_1\n\nLANGUAGE: package-install\nCODE:\n```\n@diceui/visually-hidden-input\n```\n\n----------------------------------------\n\nTITLE: Installing Visually Hidden Input Component via CLI\nDESCRIPTION: Command to install the visually hidden input component using the shadcn CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/visually-hidden-input.mdx#2025-04-11_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/visually-hidden-input\"\n```\n\n----------------------------------------\n\nTITLE: Installing Visually Hidden Component Dependencies Manually\nDESCRIPTION: Command to manually install the required dependency for the Visually Hidden component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/visually-hidden.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n@diceui/visually-hidden\n```\n\n----------------------------------------\n\nTITLE: Installing Visually Hidden Component via CLI\nDESCRIPTION: Command to install the Visually Hidden component using the shadcn CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/utilities/visually-hidden.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/visually-hidden\"\n```\n\n----------------------------------------\n\nTITLE: Installing via shadcn/ui CLI\nDESCRIPTION: Command to install the tags input component using shadcn's CLI\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/tags-input.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/tags-input\"\n```\n\n----------------------------------------\n\nTITLE: Installing Tags Input Package\nDESCRIPTION: Command to install the @diceui/tags-input package\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/tags-input.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n@diceui/tags-input\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Sortable Component\nDESCRIPTION: Command to install the required dependencies for the Sortable component manually.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/sortable.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n@dnd-kit/core @dnd-kit/modifiers @dnd-kit/sortable @dnd-kit/utilities @radix-ui/react-slot\n```\n\n----------------------------------------\n\nTITLE: Installing Sortable Component via CLI\nDESCRIPTION: Command to install the Sortable component using the shadcn CLI.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/sortable.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/sortable\"\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies for Scroller\nDESCRIPTION: Command to install the necessary dependencies for the Scroller component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/scroller.mdx#2025-04-11_snippet_1\n\nLANGUAGE: package-install\nCODE:\n```\n@radix-ui/react-slot\n```\n\n----------------------------------------\n\nTITLE: Installing Scroller Component via CLI\nDESCRIPTION: Command to install the Scroller component using the shadcn CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/scroller.mdx#2025-04-11_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/scroller\"\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies for Relative Time Card\nDESCRIPTION: Commands to install the necessary dependencies for the Relative Time Card component including Radix UI hover-card and slot packages.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/relative-time-card.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n@radix-ui/react-hover-card\n@radix-ui/react-slot\n```\n\n----------------------------------------\n\nTITLE: Installing Relative Time Card Component via CLI\nDESCRIPTION: Command to install the Relative Time Card component using the shadcn CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/relative-time-card.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/relative-time-card\"\n```\n\n----------------------------------------\n\nTITLE: Installing via shadcn/ui CLI\nDESCRIPTION: Command to install Mention component using shadcn CLI\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/mention.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/mention\"\n```\n\n----------------------------------------\n\nTITLE: Installing Mention Package\nDESCRIPTION: Command to install the Mention component package\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/mention.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n@diceui/mention\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies for Masonry\nDESCRIPTION: Command to install the necessary dependencies for the masonry component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/masonry.mdx#2025-04-11_snippet_1\n\nLANGUAGE: package-install\nCODE:\n```\n@radix-ui/react-slot\n```\n\n----------------------------------------\n\nTITLE: Installing Masonry Component via CLI\nDESCRIPTION: Command to install the masonry component using the shadcn CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/masonry.mdx#2025-04-11_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/masonry\"\n```\n\n----------------------------------------\n\nTITLE: Basic Listbox Component Structure in React\nDESCRIPTION: Example showing the basic structure of a Listbox component with nested Group, GroupLabel, Item, and ItemIndicator components.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/listbox.mdx#2025-04-11_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Listbox from \"@diceui/listbox\"\n\n<Listbox.Root>\n  <Listbox.Group>\n    <Listbox.GroupLabel/>\n    <Listbox.Item >\n      <Listbox.ItemIndicator />\n    </Listbox.Item>\n  </Listbox.Group>\n</Listbox.Root>\n```\n\n----------------------------------------\n\nTITLE: Installing Listbox with shadcn/ui CLI\nDESCRIPTION: Command to install the Listbox component using the shadcn/ui CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/listbox.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/listbox\"\n```\n\n----------------------------------------\n\nTITLE: Installing Listbox Package\nDESCRIPTION: Command to install the @diceui/listbox package using npm, yarn, or pnpm.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/listbox.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n@diceui/listbox\n```\n\n----------------------------------------\n\nTITLE: Built-in Key Titles Implementation\nDESCRIPTION: Example demonstrating the use of built-in keyboard symbol titles for Command, Shift, and Option keys\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/kbd.mdx#2025-04-11_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<Kbd.Root>\n  <Kbd.Key>⌘</Kbd.Key> {/* Shows \"Command\" on hover */}\n  <Kbd.Key>⇧</Kbd.Key> {/* Shows \"Shift\" on hover */}\n  <Kbd.Key>⌥</Kbd.Key> {/* Shows \"Option\" on hover */}\n</Kbd.Root>\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies\nDESCRIPTION: Installation command for the required Radix UI slot dependency\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/kbd.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n@radix-ui/react-slot\n```\n\n----------------------------------------\n\nTITLE: Installing Kbd Component via CLI\nDESCRIPTION: Command to install the keyboard component using the shadcn CLI\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/kbd.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/kbd\"\n```\n\n----------------------------------------\n\nTITLE: Installing Kanban Component Dependencies\nDESCRIPTION: Command to install the required dependencies for the Kanban component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/kanban.mdx#2025-04-11_snippet_1\n\nLANGUAGE: package-install\nCODE:\n```\n@dnd-kit/core @dnd-kit/modifiers @dnd-kit/sortable @dnd-kit/utilities @radix-ui/react-slot\n```\n\n----------------------------------------\n\nTITLE: Installing Kanban Component via CLI\nDESCRIPTION: Command to install the Kanban component using the shadcn CLI.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/kanban.mdx#2025-04-11_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/kanban\"\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies\nDESCRIPTION: Command to install the dependencies required for the file upload component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/file-upload.mdx#2025-04-11_snippet_1\n\nLANGUAGE: package-install\nCODE:\n```\n@radix-ui/react-slot\n```\n\n----------------------------------------\n\nTITLE: Installing File Upload Component via CLI\nDESCRIPTION: Command to install the file upload component using the shadcn CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/file-upload.mdx#2025-04-11_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/file-upload\"\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies for Editable Component\nDESCRIPTION: Command to install the dependencies required for the Editable component.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/editable.mdx#2025-04-11_snippet_1\n\nLANGUAGE: package-install\nCODE:\n```\n@radix-ui/react-slot\n```\n\n----------------------------------------\n\nTITLE: Installing Editable Component via CLI\nDESCRIPTION: Command to install the Editable component using the shadcn CLI tool.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/editable.mdx#2025-04-11_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/editable\"\n```\n\n----------------------------------------\n\nTITLE: Installing via shadcn CLI\nDESCRIPTION: Command to install the combobox component using shadcn CLI\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/combobox.mdx#2025-04-11_snippet_1\n\nLANGUAGE: package-install\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/combobox\"\n```\n\n----------------------------------------\n\nTITLE: Installing Combobox Package\nDESCRIPTION: Command to install the @diceui/combobox package\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/combobox.mdx#2025-04-11_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\n@diceui/combobox\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind for Animated Checkbox\nDESCRIPTION: Tailwind configuration to include custom animation for the checkbox indicator.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/checkbox-group.mdx#2025-04-11_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nexport default {\n  theme: {\n    extend: {\n      keyframes: {\n        \"stroke-dashoffset\": {\n          \"0%\": { strokeDashoffset: \"100%\" },\n          \"100%\": { strokeDashoffset: \"0\" },\n        },\n      },\n      animation: {\n        \"stroke-dashoffset\": \"stroke-dashoffset 0.2s linear forwards\",\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Checkbox Group with shadcn/ui CLI\nDESCRIPTION: Command to install the Checkbox Group component using the shadcn/ui CLI.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/checkbox-group.mdx#2025-04-11_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx shadcn@latest add \"https://diceui.com/r/checkbox-group\"\n```\n\n----------------------------------------\n\nTITLE: Installing Checkbox Group Package\nDESCRIPTION: Command to install the @diceui/checkbox-group package using a package manager.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/components/checkbox-group.mdx#2025-04-11_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n@diceui/checkbox-group\n```\n\n----------------------------------------\n\nTITLE: Updating Component Usage for ComboboxLoading in TypeScript React\nDESCRIPTION: This snippet shows how to update the usage of the renamed ComboboxLoading component (previously ComboboxProgress) in TypeScript React JSX code.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/packages/combobox/CHANGELOG.md#2025-04-11_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n// Before\n<ComboboxProgress value={progress} />\n\n// After\n<ComboboxLoading value={progress} />\n```\n\n----------------------------------------\n\nTITLE: Updating Import Statement for ComboboxLoading in TypeScript React\nDESCRIPTION: This snippet demonstrates how to update the import statement for the renamed ComboboxLoading component (previously ComboboxProgress) in TypeScript React code.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/packages/combobox/CHANGELOG.md#2025-04-11_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n// Before\nimport { ComboboxProgress } from \"@diceui/combobox\";\n\n// After\nimport { ComboboxLoading } from \"@diceui/combobox\";\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog for @diceui/checkbox-group\nDESCRIPTION: Version history documenting changes to the checkbox-group component, including dependency updates, feature additions, and bug fixes. Notable changes include form validation improvements for required props and version bumps for peer dependencies.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/packages/checkbox-group/CHANGELOG.md#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @diceui/checkbox-group\n\n## 0.7.2\n\n### Patch Changes\n\n- Updated dependencies [a13ae2e]\n  - @diceui/shared@0.12.0\n\n## 0.7.1\n\n### Patch Changes\n\n- Updated dependencies [d38e0e1]\n  - @diceui/shared@0.11.0\n\n## 0.7.0\n\n### Minor Changes\n\n- 90d0462: Bump peer-deps\n\n### Patch Changes\n\n- Updated dependencies [90d0462]\n  - @diceui/shared@0.10.0\n\n## 0.6.0\n\n### Patch Changes\n\n- Updated dependencies [91c8b92]\n  - @diceui/shared@0.9.0\n\n## 0.5.0\n\n### Minor Changes\n\n- 732b7ce: Bump slot\n\n### Patch Changes\n\n- Updated dependencies [732b7ce]\n  - @diceui/shared@0.8.0\n\n## 0.4.0\n\n### Minor Changes\n\n- ca07b5d: Update keywords\n\n## 0.3.0\n\n### Minor Changes\n\n- ba62131: Bump version\n\n### Patch Changes\n\n- Updated dependencies [ba62131]\n  - @diceui/shared@0.7.0\n\n## 0.2.0\n\n### Minor Changes\n\n- 2bbc35f: Update slot and primitive\n\n### Patch Changes\n\n- Updated dependencies [2bbc35f]\n  - @diceui/shared@0.6.0\n\n## 0.1.1\n\n### Patch Changes\n\n- Updated dependencies [6074f6a]\n  - @diceui/shared@0.5.0\n\n## 0.1.0\n\n### Minor Changes\n\n- 175b0d1: Better form validation for `required` prop for both `CheckboxGroup` and `CheckboxGroupItem`\n\n### Patch Changes\n\n- Updated dependencies [175b0d1]\n  - @diceui/shared@0.4.0\n\n## 0.0.5\n\n### Patch Changes\n\n- Updated dependencies [b19c602]\n  - @diceui/shared@0.3.0\n\n## 0.0.4\n\n### Patch Changes\n\n- Updated dependencies [6217fa2]\n  - @diceui/shared@0.2.1\n\n## 0.0.3\n\n### Patch Changes\n\n- Updated dependencies [6ab450b]\n  - @diceui/shared@0.2.0\n\n## 0.0.2\n\n### Patch Changes\n\n- Updated dependencies [e60ff2d]\n  - @diceui/shared@0.1.0\n```\n\n----------------------------------------\n\nTITLE: Installing Combobox Component using Package Managers\nDESCRIPTION: Shows how to install the @diceui/combobox package using npm, pnpm, yarn, or bun package managers. This snippet provides multiple installation options for different development environments.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/packages/combobox/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @diceui/combobox\n# or\npnpm add @diceui/combobox\n# or\nyarn add @diceui/combobox\n# or\nbun add @diceui/combobox\n```\n\n----------------------------------------\n\nTITLE: Installing Listbox Component using Package Managers\nDESCRIPTION: Instructions for installing the @diceui/listbox package using various package managers including npm, pnpm, yarn, and bun.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/packages/listbox/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @diceui/listbox\n# or\npnpm add @diceui/listbox\n# or\nyarn add @diceui/listbox\n# or\nbun add @diceui/listbox\n```\n\n----------------------------------------\n\nTITLE: Installing DiceUI Tags Input Component with Package Managers\nDESCRIPTION: Instructions for installing the @diceui/tags-input package using npm, pnpm, yarn, or bun package managers. Each command accomplishes the same goal of adding the component to your project dependencies.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/packages/tags-input/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @diceui/tags-input\n# or\npnpm add @diceui/tags-input\n# or\nyarn add @diceui/tags-input\n# or\nbun add @diceui/tags-input\n```\n\n----------------------------------------\n\nTITLE: Installing the DiceUI Mention Component\nDESCRIPTION: Commands for installing the Mention component package using different JavaScript package managers including npm, pnpm, yarn, and bun.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/packages/mention/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @diceui/mention\n# or\npnpm add @diceui/mention\n# or\nyarn add @diceui/mention\n# or\nbun add @diceui/mention\n```\n\n----------------------------------------\n\nTITLE: Installing @diceui/shared Package with Various Package Managers\nDESCRIPTION: Commands for installing the @diceui/shared package using different JavaScript package managers: npm, pnpm, yarn, and bun. This package contains shared utilities specific to the Dice UI ecosystem and is intended for internal use only.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/packages/shared/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @diceui/shared\n# or\npnpm add @diceui/shared\n# or\nyarn add @diceui/shared\n# or\nbun add @diceui/shared\n```\n\n----------------------------------------\n\nTITLE: Installing DiceUI Checkbox Group Package\nDESCRIPTION: Commands for installing the @diceui/checkbox-group package using different package managers including npm, pnpm, yarn, and bun.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/packages/checkbox-group/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @diceui/checkbox-group\n# or\npnpm add @diceui/checkbox-group\n# or\nyarn add @diceui/checkbox-group\n# or\nbun add @diceui/checkbox-group\n```\n\n----------------------------------------\n\nTITLE: Rendering Card Component in JSX for DiceUI Documentation\nDESCRIPTION: This snippet demonstrates how to use the Cards and Card components from fumadocs-ui to create a navigation card linking to the components documentation. It showcases the basic structure for building a documentation interface.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/docs/content/docs/introduction.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Cards>\n  <Card \n    title=\"Components\" \n    href=\"/docs/components/checkbox-group\" \n    description=\"Explore our collection of UI components.\"\n  />\n</Cards>\n```\n\n----------------------------------------\n\nTITLE: Running Tests\nDESCRIPTION: Command to execute the test suite for the Dice UI project using pnpm.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/CONTRIBUTING.md#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm test\n```\n\n----------------------------------------\n\nTITLE: Package Structure Example\nDESCRIPTION: Example directory structure for a new component package in the Dice UI project.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/CONTRIBUTING.md#2025-04-11_snippet_4\n\nLANGUAGE: text\nCODE:\n```\npackages/your-component/\n├── src/\n│   ├── index.ts\n│   ├── your-component-root.tsx\n│   ├── your-component-content.tsx\n│   └── types.ts\n├── test/\n│   └── your-component.test.ts\n├── tsconfig.json\n└── tsup.config.ts\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server for the Dice UI project using Turbo.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/CONTRIBUTING.md#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nturbo dev\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory\nDESCRIPTION: Command to change the current working directory to the cloned Dice UI project folder.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/CONTRIBUTING.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd diceui\n```\n\n----------------------------------------\n\nTITLE: Cloning the Dice UI Repository\nDESCRIPTION: Instructions for cloning the Dice UI repository to the local machine using Git.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/CONTRIBUTING.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/sadmann7/diceui.git\n```\n\n----------------------------------------\n\nTITLE: Displaying Dice UI Project Title in Markdown\nDESCRIPTION: This snippet shows the main title of the Dice UI project using a Markdown h1 heading.\nSOURCE: https://github.com/sadmann7/diceui/blob/main/README.md#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `Dice UI`\n```"
  }
]
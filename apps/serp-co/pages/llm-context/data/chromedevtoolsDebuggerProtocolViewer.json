[
  {
    "owner": "chromedevtools",
    "repo": "debugger-protocol-viewer",
    "content": "TITLE: Build and Serve DevTools Protocol Viewer (npm)\nDESCRIPTION: This code snippet shows the npm commands used to install dependencies, regenerate protocol files, build the project, and serve it locally. These commands are essential for setting up and running the DevTools Protocol Viewer development environment.\nSOURCE: https://github.com/chromedevtools/debugger-protocol-viewer/blob/master/readme.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# install dependencies\nnpm i\n\n# regenerate the protocol files\nnpm run prep\n\n# build it\nnpm run build\n\n# serve it locally\nnpm run serve\n```\n\n----------------------------------------\n\nTITLE: GET /json/version Endpoint Response\nDESCRIPTION: This snippet represents the JSON response returned by the `/json/version` HTTP endpoint.  It provides metadata about the browser version, protocol version, user agent, V8 version, WebKit version, and the WebSocket debugger URL.\nSOURCE: https://github.com/chromedevtools/debugger-protocol-viewer/blob/master/pages/index.md#_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Browser\": \"Chrome/72.0.3601.0\",\n    \"Protocol-Version\": \"1.3\",\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3601.0 Safari/537.36\",\n    \"V8-Version\": \"7.2.233\",\n    \"WebKit-Version\": \"537.36 (@cfede9db1d154de0468cb0538479f34c0755a0f4)\",\n    \"webSocketDebuggerUrl\": \"ws://localhost:9222/devtools/browser/b0b8a4fb-bb17-4359-9533-a8d9f3908bd8\"\n}\n```\n\n----------------------------------------\n\nTITLE: GET /json or /json/list Endpoint Response\nDESCRIPTION: This snippet shows the JSON response from the `/json` or `/json/list` HTTP endpoints. It contains a list of available WebSocket targets, each described by properties such as `description`, `devtoolsFrontendUrl`, `id`, `title`, and `type`.\nSOURCE: https://github.com/chromedevtools/debugger-protocol-viewer/blob/master/pages/index.md#_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"description\": \"\",\n  \"devtoolsFrontendUrl\": \"/devtools/inspector.html?ws=localhost:9222/devtools/page/DAB7FB6187B554E10B0BD18821265734\",\n  \"id\": \"DAB7FB6187B554E10B0BD18821265734\",\n  \"title\": \"Yahoo\",\n  \"type\": \"page\",\n\n```\n\n----------------------------------------\n\nTITLE: Send command with parameters using Protocol Monitor\nDESCRIPTION: This snippet demonstrates how to send a command with parameters using the Protocol Monitor. It requires the Protocol Monitor to be enabled in Chrome DevTools. The command and its parameters are provided as a JSON object in the prompt at the bottom of the Protocol Monitor panel.\nSOURCE: https://github.com/chromedevtools/debugger-protocol-viewer/blob/master/pages/index.md#_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\"cmd\":\"Page.captureScreenshot\",\"args\":{\"format\": \"jpeg\"}}\n```\n\n----------------------------------------\n\nTITLE: Send command using Protocol Monitor\nDESCRIPTION: This snippet demonstrates how to send a command using the Protocol Monitor without parameters. It requires the Protocol Monitor to be enabled in Chrome DevTools. The command is typed directly into the prompt at the bottom of the Protocol Monitor panel and executed by pressing Enter.\nSOURCE: https://github.com/chromedevtools/debugger-protocol-viewer/blob/master/pages/index.md#_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nPage.captureScreenshot\n```\n\n----------------------------------------\n\nTITLE: Send Protocol Command from DevTools Console\nDESCRIPTION: This snippet demonstrates how to send a protocol command from the DevTools console using `Main.MainImpl.sendOverProtocol()`. It requires opening devtools-on-devtools first.  It first imports the main module and then uses `sendOverProtocol` to set device metrics and capture a screenshot.\nSOURCE: https://github.com/chromedevtools/debugger-protocol-viewer/blob/master/pages/index.md#_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nlet Main = await import('./devtools-frontend/front_end/entrypoints/main/main.js'); // or './entrypoints/main/main.js' or './main/main.js' depending on the browser version\nawait Main.MainImpl.sendOverProtocol('Emulation.setDeviceMetricsOverride', {\n  mobile: true,\n  width: 412,\n  height: 732,\n  deviceScaleFactor: 2.625,\n});\n\nconst data = await Main.MainImpl.sendOverProtocol(\"Page.captureScreenshot\");\n```\n\n----------------------------------------\n\nTITLE: Retrieve DevTools Protocol JSON\nDESCRIPTION: Retrieves the current DevTools protocol as a JSON object. The JSON structure contains information about domains, types, and other protocol-related data. This endpoint is used to discover and understand the capabilities of the DevTools protocol.\nSOURCE: https://github.com/chromedevtools/debugger-protocol-viewer/blob/master/pages/index.md#_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"domains\": [\n      {\n          \"domain\": \"Accessibility\",\n          \"experimental\": true,\n          \"dependencies\": [\n              \"DOM\"\n          ],\n          \"types\": [\n              {\n                  \"id\": \"AXValueType\",\n                  \"description\": \"Enum of possible property types.\",\n                  \"type\": \"string\",\n                  \"enum\": [\n                      \"boolean\",\n                      \"tristate\",\n// ...</pre>\n```"
  }
]
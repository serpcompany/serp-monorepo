[
  {
    "owner": "lmsqueezy",
    "repo": "lemonsqueezy.js",
    "content": "TITLE: Basic Usage of Lemon Squeezy JavaScript SDK\nDESCRIPTION: Example demonstrating how to set up the Lemon Squeezy SDK with an API key and make a request to get the authenticated user. Includes error handling for API responses.\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  getAuthenticatedUser,\n  lemonSqueezySetup,\n} from \"@lemonsqueezy/lemonsqueezy.js\";\n\nconst apiKey = import.meta.env.LEMON_SQUEEZY_API_KEY;\n\nlemonSqueezySetup({\n  apiKey,\n  onError: (error) => console.error(\"Error!\", error),\n});\n\nconst { data, error } = await getAuthenticatedUser();\n\nif (error) {\n  console.log(error.message);\n} else {\n  console.log(data);\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Lemon Squeezy SDK with API Key\nDESCRIPTION: Example showing how to initialize the SDK with your API key using the lemonSqueezySetup function. This is part of the v2.0.0 update that completely rewrote the SDK for better type-safety and tree-shakeability.\n\nLANGUAGE: typescript\nCODE:\n```\nlemonSqueezySetup({ apiKey });\n```\n\n----------------------------------------\n\nTITLE: Using SDK Function to Retrieve Authenticated User Data\nDESCRIPTION: Example demonstrating how to fetch the authenticated user data using the new function-based approach introduced in v2.0.0. The response includes data, error, and statusCode properties.\n\nLANGUAGE: typescript\nCODE:\n```\nconst { data, error, statusCode } = await getAuthenticatedUser();\n```\n\n----------------------------------------\n\nTITLE: Installing Lemon Squeezy JavaScript SDK with NPM\nDESCRIPTION: Command to install the Lemon Squeezy JavaScript SDK using the NPM package manager.\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpm install @lemonsqueezy/lemonsqueezy.js\n```\n\n----------------------------------------\n\nTITLE: Installing Lemon Squeezy JavaScript SDK with PNPM\nDESCRIPTION: Command to install the Lemon Squeezy JavaScript SDK using the PNPM package manager.\n\nLANGUAGE: bash\nCODE:\n```\n# pnpm\npnpm install @lemonsqueezy/lemonsqueezy.js\n```\n\n----------------------------------------\n\nTITLE: Installing Lemon Squeezy JavaScript SDK with Bun\nDESCRIPTION: Command to install the Lemon Squeezy JavaScript SDK using the Bun package manager.\n\nLANGUAGE: bash\nCODE:\n```\n# bun\nbun install @lemonsqueezy/lemonsqueezy.js\n```\n\n----------------------------------------\n\nTITLE: Running All Unit Tests for lemonsqueezyjs\nDESCRIPTION: Command to execute all unit tests in the project using Bun's test runner. This helps verify that code changes don't break existing functionality.\n\nLANGUAGE: bash\nCODE:\n```\nbun test\n```\n\n----------------------------------------\n\nTITLE: Running Specific Unit Tests for lemonsqueezyjs\nDESCRIPTION: Command to run a specific test file using Bun's test runner. This allows developers to focus on testing particular functionality they're working on.\n\nLANGUAGE: bash\nCODE:\n```\nbun test test/<test-file>.ts\n```\n\n----------------------------------------\n\nTITLE: Running Development Environment for lemonsqueezyjs\nDESCRIPTION: Command to start the development environment locally using Bun. This allows developers to work on the codebase with live updates.\n\nLANGUAGE: bash\nCODE:\n```\nbun run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Bun for lemonsqueezyjs\nDESCRIPTION: Command to install project dependencies using Bun package manager. This should be run after cloning the repository to set up the development environment.\n\nLANGUAGE: bash\nCODE:\n```\nbun install\n```"
  }
]
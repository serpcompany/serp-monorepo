[
  {
    "owner": "qdrant",
    "repo": "qdrant",
    "content": "TITLE: Creating a Qdrant Collection\nDESCRIPTION: curl command to create a new collection in Qdrant with dot-production metric. Includes the expected JSON response.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/QUICK_START.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X PUT 'http://localhost:6333/collections/test_collection' \\\n    -H 'Content-Type: application/json' \\\n    --data-raw '{\n        \"vectors\": {\n          \"size\": 4,\n          \"distance\": \"Dot\"\n        }\n    }'\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"result\": true,\n  \"status\": \"ok\",\n  \"time\": 0.031095451\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Collections Service Interface in Protocol Buffers\nDESCRIPTION: Service definition for the Collections API in Qdrant, specifying methods for creating, retrieving, updating, and deleting collections, as well as managing aliases and cluster operations.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_35\n\nLANGUAGE: protobuf\nCODE:\n```\n| Method Name | Request Type | Response Type | Description |\n| ----------- | ------------ | ------------- | ------------|\n| Get | [GetCollectionInfoRequest](#qdrant-GetCollectionInfoRequest) | [GetCollectionInfoResponse](#qdrant-GetCollectionInfoResponse) | Get detailed information about specified existing collection |\n| List | [ListCollectionsRequest](#qdrant-ListCollectionsRequest) | [ListCollectionsResponse](#qdrant-ListCollectionsResponse) | Get list name of all existing collections |\n| Create | [CreateCollection](#qdrant-CreateCollection) | [CollectionOperationResponse](#qdrant-CollectionOperationResponse) | Create new collection with given parameters |\n| Update | [UpdateCollection](#qdrant-UpdateCollection) | [CollectionOperationResponse](#qdrant-CollectionOperationResponse) | Update parameters of the existing collection |\n| Delete | [DeleteCollection](#qdrant-DeleteCollection) | [CollectionOperationResponse](#qdrant-CollectionOperationResponse) | Drop collection and all associated data |\n| UpdateAliases | [ChangeAliases](#qdrant-ChangeAliases) | [CollectionOperationResponse](#qdrant-CollectionOperationResponse) | Update Aliases of the existing collection |\n| ListCollectionAliases | [ListCollectionAliasesRequest](#qdrant-ListCollectionAliasesRequest) | [ListAliasesResponse](#qdrant-ListAliasesResponse) | Get list of all aliases for a collection |\n| ListAliases | [ListAliasesRequest](#qdrant-ListAliasesRequest) | [ListAliasesResponse](#qdrant-ListAliasesResponse) | Get list of all aliases for all existing collections |\n| CollectionClusterInfo | [CollectionClusterInfoRequest](#qdrant-CollectionClusterInfoRequest) | [CollectionClusterInfoResponse](#qdrant-CollectionClusterInfoResponse) | Get cluster information for a collection |\n| CollectionExists | [CollectionExistsRequest](#qdrant-CollectionExistsRequest) | [CollectionExistsResponse](#qdrant-CollectionExistsResponse) | Check the existence of a collection |\n| UpdateCollectionClusterSetup | [UpdateCollectionClusterSetupRequest](#qdrant-UpdateCollectionClusterSetupRequest) | [UpdateCollectionClusterSetupResponse](#qdrant-UpdateCollectionClusterSetupResponse) | Update cluster setup for a collection |\n| CreateShardKey | [CreateShardKeyRequest](#qdrant-CreateShardKeyRequest) | [CreateShardKeyResponse](#qdrant-CreateShardKeyResponse) | Create shard key |\n| DeleteShardKey | [DeleteShardKeyRequest](#qdrant-DeleteShardKeyRequest) | [DeleteShardKeyResponse](#qdrant-DeleteShardKeyResponse) | Delete shard key |\n```\n\n----------------------------------------\n\nTITLE: Initializing In-Memory Qdrant Client in Python\nDESCRIPTION: Code snippet demonstrating how to create an in-memory Qdrant instance using the Python client. This is useful for testing and CI/CD environments where persistence isn't required.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom qdrant_client import QdrantClient\nqdrant = QdrantClient(\":memory:\") # Create in-memory Qdrant instance, for testing, CI/CD\n# OR\nclient = QdrantClient(path=\"path/to/db\")  # Persists changes to disk, fast prototyping\n```\n\n----------------------------------------\n\nTITLE: Connecting to Qdrant Server with Python Client\nDESCRIPTION: Python code showing how to connect to a running Qdrant server instance using the Python client by specifying the server URL.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/README.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nqdrant = QdrantClient(\"http://localhost:6333\") # Connect to existing Qdrant instance\n```\n\n----------------------------------------\n\nTITLE: Collection Management Message Definitions in Protocol Buffers\nDESCRIPTION: Protocol Buffer message definitions for Qdrant collection operations including existence checks, info retrieval, creation, deletion, and configuration. Defines structures for collection parameters, shard keys, aliases and indexing options.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_1\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage CollectionExists {\n  bool exists = 1;\n}\n\nmessage CollectionExistsRequest {\n  string collection_name = 1;\n}\n\nmessage CollectionExistsResponse {\n  CollectionExists result = 1;\n  double time = 2; // Time spent to process\n}\n\nmessage CollectionInfo {\n  CollectionStatus status = 1; // operating condition of the collection\n  OptimizerStatus optimizer_status = 2; // status of collection optimizers \n  optional uint64 vectors_count = 3; // Approximate number of vectors in the collection\n  uint64 segments_count = 4; // Number of independent segments\n  CollectionConfig config = 5; // Configuration\n  repeated CollectionInfo.PayloadSchemaEntry payload_schema = 6; // Collection data types\n  optional uint64 points_count = 7; // Approximate number of points in the collection\n  optional uint64 indexed_vectors_count = 8; // Approximate number of indexed vectors in the collection.\n}\n\n// Additional message definitions follow similar pattern...\n```\n\n----------------------------------------\n\nTITLE: Points Service Interface Definition (Protobuf)\nDESCRIPTION: Defines the gRPC service interface for managing points in Qdrant collections, including operations for inserting, updating, deleting, searching and retrieving points with vector similarity.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_86\n\nLANGUAGE: protobuf\nCODE:\n```\nMethod Name | Request Type | Response Type | Description\n-----------|--------------|--------------|-----------\nUpsert | UpsertPoints | PointsOperationResponse | Perform insert + updates on points\nDelete | DeletePoints | PointsOperationResponse | Delete points\nGet | GetPoints | GetResponse | Retrieve points\nSearch | SearchPoints | SearchResponse | Retrieve closest points based on vector similarity\nRecommend | RecommendPoints | RecommendResponse | Find points closer to positive examples and further from negative examples\n```\n\n----------------------------------------\n\nTITLE: Performing Basic Vector Search in Qdrant\nDESCRIPTION: curl command to perform a basic vector search in Qdrant collection. Includes the expected JSON response with search results.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/QUICK_START.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L -X POST 'http://localhost:6333/collections/test_collection/points/search' \\\n    -H 'Content-Type: application/json' \\\n    --data-raw '{\n        \"vector\": [0.2,0.1,0.9,0.7],\n        \"top\": 3\n    }'\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"result\": [\n    { \"id\": 4, \"score\": 1.362, \"payload\": null, \"version\": 0 },\n    { \"id\": 1, \"score\": 1.273, \"payload\": null, \"version\": 0 },\n    { \"id\": 3, \"score\": 1.208, \"payload\": null, \"version\": 0 }\n  ],\n  \"status\": \"ok\",\n  \"time\": 0.000055785\n}\n```\n\n----------------------------------------\n\nTITLE: Running Qdrant in Docker Container\nDESCRIPTION: Docker command to run a Qdrant instance in a container with port mapping, exposing the service on port 6333.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 6333:6333 qdrant/qdrant\n```\n\n----------------------------------------\n\nTITLE: Performing Filtered Vector Search in Qdrant\nDESCRIPTION: curl command to perform a vector search with filtering in Qdrant collection. Includes the expected JSON response with filtered search results.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/QUICK_START.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L -X POST 'http://localhost:6333/collections/test_collection/points/search' \\\n    -H 'Content-Type: application/json' \\\n    --data-raw '{\n      \"filter\": {\n          \"should\": [\n              {\n                  \"key\": \"city\",\n                  \"match\": {\n                      \"value\": \"London\"\n                  }\n              }\n          ]\n      },\n      \"vector\": [0.2, 0.1, 0.9, 0.7],\n      \"top\": 3\n  }'\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"result\": [\n    { \"id\": 4, \"score\": 1.362 },\n    { \"id\": 2, \"score\": 0.871 }\n  ],\n  \"status\": \"ok\",\n  \"time\": 0.000093972\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Qdrant Collection Status\nDESCRIPTION: curl command to verify the creation of a collection in Qdrant. Includes the expected JSON response with collection details.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/QUICK_START.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl 'http://localhost:6333/collections/test_collection'\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"result\": {\n    \"status\": \"green\",\n    \"vectors_count\": 0,\n    \"segments_count\": 5,\n    \"disk_data_size\": 0,\n    \"ram_data_size\": 0,\n    \"config\": {\n      \"params\": {\n        \"vectors\": {\n          \"size\": 4,\n          \"distance\": \"Dot\"\n        }\n      },\n      \"hnsw_config\": {\n        \"m\": 16,\n        \"ef_construct\": 100,\n        \"full_scan_threshold\": 10000\n      },\n      \"optimizer_config\": {\n        \"deleted_threshold\": 0.2,\n        \"vacuum_min_vector_number\": 1000,\n        \"default_segment_number\": 2,\n        \"max_segment_size\": null,\n        \"memmap_threshold\": null,\n        \"indexing_threshold\": 20000,\n        \"flush_interval_sec\": 5,\n        \"max_optimization_threads\": null\n      },\n      \"wal_config\": {\n        \"wal_capacity_mb\": 32,\n        \"wal_segments_ahead\": 0\n      }\n    }\n  },\n  \"status\": \"ok\",\n  \"time\": 2.1199e-5\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Snapshots Service in Protocol Buffers\nDESCRIPTION: Defines the Snapshots service with methods for creating, listing, and deleting snapshots for both collections and full storage.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_95\n\nLANGUAGE: protobuf\nCODE:\n```\nservice Snapshots {\n  rpc Create(CreateSnapshotRequest) returns (CreateSnapshotResponse) {}        // Create collection snapshot\n  rpc List(ListSnapshotsRequest) returns (ListSnapshotsResponse) {}            // List collection snapshots\n  rpc Delete(DeleteSnapshotRequest) returns (DeleteSnapshotResponse) {}        // Delete collection snapshot\n  rpc CreateFull(CreateFullSnapshotRequest) returns (CreateSnapshotResponse) {} // Create full storage snapshot\n  rpc ListFull(ListFullSnapshotsRequest) returns (ListSnapshotsResponse) {}     // List full storage snapshots\n  rpc DeleteFull(DeleteFullSnapshotRequest) returns (DeleteSnapshotResponse) {} // Delete full storage snapshot\n}\n```\n\n----------------------------------------\n\nTITLE: Running Qdrant Docker Container\nDESCRIPTION: Commands to pull, run, and build Qdrant Docker containers. Includes options for custom configuration and volume mounting.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/QUICK_START.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull qdrant/qdrant\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 6333:6333 qdrant/qdrant\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker build . --tag=qdrant/qdrant\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 6333:6333 \\\n    -v $(pwd)/path/to/data:/qdrant/storage \\\n    -v $(pwd)/path/to/snapshots:/qdrant/snapshots \\\n    -v $(pwd)/path/to/custom_config.yaml:/qdrant/config/production.yaml \\\n    qdrant/qdrant\n```\n\n----------------------------------------\n\nTITLE: Installing Qdrant Python Client\nDESCRIPTION: Command to install the Qdrant Python client library using pip package manager.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install qdrant-client\n```\n\n----------------------------------------\n\nTITLE: Running Basic Qdrant Docker Container\nDESCRIPTION: Command to run a basic Qdrant container with default settings, exposing the service on port 6333.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 6333:6333 qdrant/qdrant\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for ScoredPoint in Qdrant\nDESCRIPTION: Defines the structure for a point with similarity score from search results. It includes point ID, payload, similarity score, version information, optional vectors, shard key, and order value.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_73\n\nLANGUAGE: protobuf\nCODE:\n```\n### ScoredPoint\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| id | [PointId](#qdrant-PointId) |  | Point id |\n| payload | [ScoredPoint.PayloadEntry](#qdrant-ScoredPoint-PayloadEntry) | repeated | Payload |\n| score | [float](#float) |  | Similarity score |\n| version | [uint64](#uint64) |  | Last update operation applied to this point |\n| vectors | [VectorsOutput](#qdrant-VectorsOutput) | optional | Vectors to search |\n| shard_key | [ShardKey](#qdrant-ShardKey) | optional | Shard key |\n| order_value | [OrderValue](#qdrant-OrderValue) | optional | Order by value |\n```\n\n----------------------------------------\n\nTITLE: Defining Point Data Structures in Protocol Buffers\nDESCRIPTION: Definitions for point-related structures used in vector operations, including batch results, payload operations, and condition filters for querying points in a collection.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_38\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-BatchResult\"></a>\n\n### BatchResult\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | [ScoredPoint](#qdrant-ScoredPoint) | repeated |  |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-ClearPayloadPoints\"></a>\n\n### ClearPayloadPoints\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | [string](#string) |  | name of the collection |\n| wait | [bool](#bool) | optional | Wait until the changes have been applied? |\n| points | [PointsSelector](#qdrant-PointsSelector) |  | Affected points |\n| ordering | [WriteOrdering](#qdrant-WriteOrdering) | optional | Write ordering guarantees |\n| shard_key_selector | [ShardKeySelector](#qdrant-ShardKeySelector) | optional | Option for custom sharding to specify used shard keys |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-Condition\"></a>\n\n### Condition\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| field | [FieldCondition](#qdrant-FieldCondition) |  |  |\n| is_empty | [IsEmptyCondition](#qdrant-IsEmptyCondition) |  |  |\n| has_id | [HasIdCondition](#qdrant-HasIdCondition) |  |  |\n| filter | [Filter](#qdrant-Filter) |  |  |\n| is_null | [IsNullCondition](#qdrant-IsNullCondition) |  |  |\n| nested | [NestedCondition](#qdrant-NestedCondition) |  |  |\n| has_vector | [HasVectorCondition](#qdrant-HasVectorCondition) |  |  |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-ContextExamplePair\"></a>\n\n### ContextExamplePair\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| positive | [VectorExample](#qdrant-VectorExample) |  |  |\n| negative | [VectorExample](#qdrant-VectorExample) |  |  |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-ContextInput\"></a>\n\n### ContextInput\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| pairs | [ContextInputPair](#qdrant-ContextInputPair) | repeated | Search space will be constrained by these pairs of vectors |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-ContextInputPair\"></a>\n\n### ContextInputPair\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| positive | [VectorInput](#qdrant-VectorInput) |  | A positive vector |\n| negative | [VectorInput](#qdrant-VectorInput) |  | Repel from this vector |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-CountPoints\"></a>\n\n### CountPoints\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | [string](#string) |  | Name of the collection |\n| filter | [Filter](#qdrant-Filter) |  | Filter conditions - return only those points that satisfy the specified conditions |\n| exact | [bool](#bool) | optional | If `true` - return exact count, if `false` - return approximate count |\n| read_consistency | [ReadConsistency](#qdrant-ReadConsistency) | optional | Options for specifying read consistency guarantees |\n| shard_key_selector | [ShardKeySelector](#qdrant-ShardKeySelector) | optional | Specify in which shards to look for the points, if not specified - look in all shards |\n| timeout | [uint64](#uint64) | optional | If set, overrides global timeout setting for this request. Unit is seconds. |\n```\n\n----------------------------------------\n\nTITLE: Pulling Pre-built Qdrant Docker Image\nDESCRIPTION: Command to pull the latest pre-built Qdrant image from DockerHub, providing a quick way to get started without building from source.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull qdrant/qdrant\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for SearchGroupsResponse in Qdrant\nDESCRIPTION: Defines the response structure for group search operations in Qdrant. It contains grouped search results, processing time, and optional hardware usage information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_79\n\nLANGUAGE: protobuf\nCODE:\n```\n### SearchGroupsResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | [GroupsResult](#qdrant-GroupsResult) |  |  |\n| time | [double](#double) |  | Time spent to process |\n| usage | [HardwareUsage](#qdrant-HardwareUsage) | optional |  |\n```\n\n----------------------------------------\n\nTITLE: Defining Update Operation Messages in Protocol Buffers\nDESCRIPTION: Defines messages for various update operations on points in Qdrant, including upsert, delete, set payload, and update vectors.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_63\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage PointsUpdateOperation {\n  oneof operation {\n    PointStructList upsert = 1;\n    PointsSelector delete_deprecated = 2 [deprecated = true];\n    SetPayload set_payload = 3;\n    OverwritePayload overwrite_payload = 4;\n    DeletePayload delete_payload = 5;\n    PointsSelector clear_payload_deprecated = 6 [deprecated = true];\n    UpdateVectors update_vectors = 7;\n    DeleteVectors delete_vectors = 8;\n    DeletePoints delete_points = 9;\n    ClearPayload clear_payload = 10;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Development Dependencies for Qdrant\nDESCRIPTION: Commands to install system dependencies required for building Qdrant in a local development environment.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y curl unzip gcc-multilib \\\n    clang cmake jq \\\n    g++-9-aarch64-linux-gnu \\\n    gcc-9-aarch64-linux-gnu\n```\n\n----------------------------------------\n\nTITLE: Building Qdrant Docker Image from Source\nDESCRIPTION: Command to build a Docker image for Qdrant from source code. This allows developers to create their own custom Qdrant image.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker build . --tag=qdrant/qdrant\n```\n\n----------------------------------------\n\nTITLE: QueryPoints Message Definition in Protobuf\nDESCRIPTION: Defines the structure for querying points in a collection with options for filtering, pagination, and customizing the returned results.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_65\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage QueryPoints {\n  string collection_name = 1;\n  repeated PrefetchQuery prefetch = 2;\n  optional Query query = 3;\n  optional string using = 4;\n  optional Filter filter = 5;\n  optional SearchParams params = 6;\n  optional float score_threshold = 7;\n  optional uint64 limit = 8;\n  optional uint64 offset = 9;\n  optional WithVectorsSelector with_vectors = 10;\n  optional WithPayloadSelector with_payload = 11;\n  optional ReadConsistency read_consistency = 12;\n  optional ShardKeySelector shard_key_selector = 13;\n  optional LookupLocation lookup_from = 14;\n  optional uint64 timeout = 15;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Rust Formatting Tools for Development\nDESCRIPTION: Command to install the rustfmt component, which is required for code formatting during Qdrant development.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nrustup component add rustfmt\n```\n\n----------------------------------------\n\nTITLE: Building and Running Qdrant Locally\nDESCRIPTION: Commands to build Qdrant from source in release mode and run the executable, which creates a local development instance.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncargo build --release --bin qdrant\n\n./target/release/qdrant\n```\n\n----------------------------------------\n\nTITLE: Defining Vector-related Messages in Protocol Buffers\nDESCRIPTION: Defines messages for various vector representations including MultiDenseVector, NamedVectors, and NamedVectorsOutput in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_61\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage MultiDenseVector {\n  repeated DenseVector vectors = 1;\n}\n\nmessage NamedVectors {\n  map<string, Vector> vectors = 1;\n}\n\nmessage NamedVectorsOutput {\n  map<string, VectorOutput> vectors = 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for RecommendPoints in Qdrant\nDESCRIPTION: Defines the message structure for recommending points in a Qdrant collection based on positive and negative examples. It includes parameters for filtering, limiting results, specifying payload and vector inclusion, and setting search parameters.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_67\n\nLANGUAGE: protobuf\nCODE:\n```\n### RecommendPoints\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | [string](#string) |  | name of the collection |\n| positive | [PointId](#qdrant-PointId) | repeated | Look for vectors closest to the vectors from these points |\n| negative | [PointId](#qdrant-PointId) | repeated | Try to avoid vectors like the vector from these points |\n| filter | [Filter](#qdrant-Filter) |  | Filter conditions - return only those points that satisfy the specified conditions |\n| limit | [uint64](#uint64) |  | Max number of result |\n| with_payload | [WithPayloadSelector](#qdrant-WithPayloadSelector) |  | Options for specifying which payload to include or not |\n| params | [SearchParams](#qdrant-SearchParams) |  | Search config |\n| score_threshold | [float](#float) | optional | If provided - cut off results with worse scores |\n| offset | [uint64](#uint64) | optional | Offset of the result |\n| using | [string](#string) | optional | Define which vector to use for recommendation, if not specified - default vector |\n| with_vectors | [WithVectorsSelector](#qdrant-WithVectorsSelector) | optional | Options for specifying which vectors to include into response |\n| lookup_from | [LookupLocation](#qdrant-LookupLocation) | optional | Name of the collection to use for points lookup, if not specified - use current collection |\n| read_consistency | [ReadConsistency](#qdrant-ReadConsistency) | optional | Options for specifying read consistency guarantees |\n| strategy | [RecommendStrategy](#qdrant-RecommendStrategy) | optional | How to use the example vectors to find the results |\n| positive_vectors | [Vector](#qdrant-Vector) | repeated | Look for vectors closest to those |\n| negative_vectors | [Vector](#qdrant-Vector) | repeated | Try to avoid vectors like this |\n| timeout | [uint64](#uint64) | optional | If set, overrides global timeout setting for this request. Unit is seconds. |\n| shard_key_selector | [ShardKeySelector](#qdrant-ShardKeySelector) | optional | Specify in which shards to look for the points, if not specified - look in all shards |\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for RetrievedPoint in Qdrant\nDESCRIPTION: Defines the structure for a point retrieved from the Qdrant database. It includes the point ID, payload map, optional vectors, shard key, and order value.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_71\n\nLANGUAGE: protobuf\nCODE:\n```\n### RetrievedPoint\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| id | [PointId](#qdrant-PointId) |  |  |\n| payload | [RetrievedPoint.PayloadEntry](#qdrant-RetrievedPoint-PayloadEntry) | repeated |  |\n| vectors | [VectorsOutput](#qdrant-VectorsOutput) | optional |  |\n| shard_key | [ShardKey](#qdrant-ShardKey) | optional | Shard key |\n| order_value | [OrderValue](#qdrant-OrderValue) | optional | Order-by value |\n```\n\n----------------------------------------\n\nTITLE: Defining Health Check Protocol in gRPC\nDESCRIPTION: Implementation of the standard gRPC health checking protocol, including request/response messages and service definitions that allow clients to verify service availability.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_36\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"grpc-health-v1-HealthCheckRequest\"></a>\n\n### HealthCheckRequest\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| service | [string](#string) |  |  |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"grpc-health-v1-HealthCheckResponse\"></a>\n\n### HealthCheckResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| status | [HealthCheckResponse.ServingStatus](#grpc-health-v1-HealthCheckResponse-ServingStatus) |  |  |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"grpc-health-v1-HealthCheckResponse-ServingStatus\"></a>\n\n### HealthCheckResponse.ServingStatus\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| UNKNOWN | 0 |  |\n| SERVING | 1 |  |\n| NOT_SERVING | 2 |  |\n| SERVICE_UNKNOWN | 3 | Used only by the Watch method. |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"grpc-health-v1-Health\"></a>\n\n### Health\n\n\n| Method Name | Request Type | Response Type | Description |\n| ----------- | ------------ | ------------- | ------------|\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for SearchBatchPoints in Qdrant\nDESCRIPTION: Defines parameters for batch search operations in a Qdrant collection. It allows sending multiple search queries in a single request with options for read consistency and timeout settings.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_77\n\nLANGUAGE: protobuf\nCODE:\n```\n### SearchBatchPoints\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | [string](#string) |  | Name of the collection |\n| search_points | [SearchPoints](#qdrant-SearchPoints) | repeated |  |\n| read_consistency | [ReadConsistency](#qdrant-ReadConsistency) | optional | Options for specifying read consistency guarantees |\n| timeout | [uint64](#uint64) | optional | If set, overrides global timeout setting for this request. Unit is seconds. |\n```\n\n----------------------------------------\n\nTITLE: Health Check Service Definition (Protobuf)\nDESCRIPTION: Defines the health check service interface for Qdrant, including messages for health check requests and responses with version information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_87\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage HealthCheckReply {\n  string title = 1;\n  string version = 2; \n  optional string commit = 3;\n}\n\nmessage HealthCheckRequest {}\n\nservice Qdrant {\n  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckReply);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DiscoverPoints Message in Protocol Buffers\nDESCRIPTION: Defines a message for discovering points in a collection, including various search parameters and options.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_52\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DiscoverPoints {\n  string collection_name = 1;\n  TargetVector target = 2;\n  repeated ContextExamplePair context = 3;\n  Filter filter = 4;\n  uint64 limit = 5;\n  WithPayloadSelector with_payload = 6;\n  SearchParams params = 7;\n  uint64 offset = 8;\n  string using = 9;\n  WithVectorsSelector with_vectors = 10;\n  LookupLocation lookup_from = 11;\n  ReadConsistency read_consistency = 12;\n  uint64 timeout = 13;\n  ShardKeySelector shard_key_selector = 14;\n}\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for ScrollPoints in Qdrant\nDESCRIPTION: Defines parameters for scrolling through points in a Qdrant collection with pagination. It includes filtering options, offset and limit for pagination, and selectors for payload and vector inclusion.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_75\n\nLANGUAGE: protobuf\nCODE:\n```\n### ScrollPoints\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | [string](#string) |  |  |\n| filter | [Filter](#qdrant-Filter) |  | Filter conditions - return only those points that satisfy the specified conditions |\n| offset | [PointId](#qdrant-PointId) | optional | Start with this ID |\n| limit | [uint32](#uint32) | optional | Max number of result |\n| with_payload | [WithPayloadSelector](#qdrant-WithPayloadSelector) |  | Options for specifying which payload to include or not |\n| with_vectors | [WithVectorsSelector](#qdrant-WithVectorsSelector) | optional | Options for specifying which vectors to include into response |\n| read_consistency | [ReadConsistency](#qdrant-ReadConsistency) | optional | Options for specifying read consistency guarantees |\n| shard_key_selector | [ShardKeySelector](#qdrant-ShardKeySelector) | optional | Specify in which shards to look for the points, if not specified - look in all shards |\n| order_by | [OrderBy](#qdrant-OrderBy) | optional | Order the records by a payload field |\n| timeout | [uint64](#uint64) | optional | If set, overrides global timeout setting for this request. Unit is seconds. |\n```\n\n----------------------------------------\n\nTITLE: Defining VectorParamsDiff Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message for updating vector parameters. Allows modification of HNSW index configuration, quantization parameters, and storage location options.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_13\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-VectorParamsDiff\"></a>\n\n### VectorParamsDiff\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| hnsw_config | [HnswConfigDiff](#qdrant-HnswConfigDiff) | optional | Update params for HNSW index. If empty object - it will be unset |\n| quantization_config | [QuantizationConfigDiff](#qdrant-QuantizationConfigDiff) | optional | Update quantization params. If none - it is left unchanged. |\n| on_disk | [bool](#bool) | optional | If true - serve vectors from disk. If set to false, the vectors will be loaded in RAM. |\n```\n\n----------------------------------------\n\nTITLE: Defining Filter Condition Messages in Protocol Buffers\nDESCRIPTION: Defines messages for various filter conditions like IsEmptyCondition and IsNullCondition in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_58\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage IsEmptyCondition {\n  string key = 1;\n}\n\nmessage IsNullCondition {\n  string key = 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for SearchBatchResponse in Qdrant\nDESCRIPTION: Defines the response structure for batch search operations in Qdrant. It includes an array of batch results, processing time, and optional hardware usage information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_78\n\nLANGUAGE: protobuf\nCODE:\n```\n### SearchBatchResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | [BatchResult](#qdrant-BatchResult) | repeated |  |\n| time | [double](#double) |  | Time spent to process |\n| usage | [HardwareUsage](#qdrant-HardwareUsage) | optional |  |\n```\n\n----------------------------------------\n\nTITLE: Implementing Tracing for Functions in Qdrant with Optional Dependencies\nDESCRIPTION: Shows how to add tracing to functions in Qdrant, including conditional compilation for optional tracing dependencies. Demonstrates both using cfg_attr for compatibility with disabled tracing feature and direct instrumentation when tracing is enabled.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_17\n\nLANGUAGE: rust\nCODE:\n```\n// `tracing` crate is an *optional* dependency in `lib/*` crates, so if you want the code to compile\n// when `tracing` feature is disabled, you have to use `#[cfg_attr(...)]`...\n//\n// See https://doc.rust-lang.org/reference/conditional-compilation.html#the-cfg_attr-attribute\n#[cfg_attr(feature = \"tracing\", tracing::instrument)]\nfn my_function(some_parameter: String) {\n    // ...\n}\n\n// ...or if you just want to do some quick-and-dirty profiling, you can use `#[tracing::instrument]`\n// directly, just don't forget to add `--features tracing` when running `cargo` (or add `tracing`\n// to default features in `Cargo.toml`)\n#[tracing::instrument]\nfn some_other_function() {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: QueryPointGroups Message Definition in Protobuf\nDESCRIPTION: Defines the structure for querying and grouping points in a collection with options for filtering, pagination, and result customization.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_64\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage QueryPointGroups {\n  string collection_name = 1;\n  repeated PrefetchQuery prefetch = 2;\n  optional Query query = 3;\n  optional string using = 4;\n  optional Filter filter = 5;\n  optional SearchParams params = 6;\n  optional float score_threshold = 7;\n  WithPayloadSelector with_payload = 8;\n  optional WithVectorsSelector with_vectors = 9;\n  optional LookupLocation lookup_from = 10;\n  optional uint64 limit = 11;\n  optional uint64 group_size = 12;\n  string group_by = 13;\n  optional ReadConsistency read_consistency = 14;\n  optional WithLookup with_lookup = 15;\n  optional uint64 timeout = 16;\n  optional ShardKeySelector shard_key_selector = 17;\n}\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for ScrollResponse in Qdrant\nDESCRIPTION: Defines the response structure for scrolling through points in a Qdrant collection. It includes the next page offset for pagination, array of retrieved points, processing time, and optional hardware usage information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_76\n\nLANGUAGE: protobuf\nCODE:\n```\n### ScrollResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| next_page_offset | [PointId](#qdrant-PointId) | optional | Use this offset for the next query |\n| result | [RetrievedPoint](#qdrant-RetrievedPoint) | repeated |  |\n| time | [double](#double) |  | Time spent to process |\n| usage | [HardwareUsage](#qdrant-HardwareUsage) | optional |  |\n```\n\n----------------------------------------\n\nTITLE: Defining QuantizationType Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for vector quantization types in Qdrant. Currently supports Int8 quantization for reduced precision storage of vectors.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_29\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-QuantizationType\"></a>\n\n### QuantizationType\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| UnknownQuantization | 0 |  |\n| Int8 | 1 |  |\n```\n\n----------------------------------------\n\nTITLE: RecommendPointGroups Message Definition in Protobuf\nDESCRIPTION: Defines the structure for getting recommendations based on positive and negative examples, with support for grouping results.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_66\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage RecommendPointGroups {\n  string collection_name = 1;\n  repeated PointId positive = 2;\n  repeated PointId negative = 3;\n  Filter filter = 4;\n  uint32 limit = 5;\n  WithPayloadSelector with_payload = 6;\n  SearchParams params = 7;\n  optional float score_threshold = 8;\n  optional string using = 9;\n  optional WithVectorsSelector with_vectors = 10;\n  optional LookupLocation lookup_from = 11;\n  string group_by = 12;\n  uint32 group_size = 13;\n  optional ReadConsistency read_consistency = 14;\n  optional WithLookup with_lookup = 15;\n  optional RecommendStrategy strategy = 16;\n  repeated Vector positive_vectors = 17;\n  repeated Vector negative_vectors = 18;\n  optional uint64 timeout = 19;\n  optional ShardKeySelector shard_key_selector = 20;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VectorsConfig Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message for configuring vector spaces. Supports both a single vector configuration and a map of named vector configurations.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_18\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-VectorsConfig\"></a>\n\n### VectorsConfig\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| params | [VectorParams](#qdrant-VectorParams) |  |  |\n| params_map | [VectorParamsMap](#qdrant-VectorParamsMap) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Running Code Formatting Tools for Rust\nDESCRIPTION: Commands for running rustfmt formatter and clippy linter before submitting pull requests to ensure code quality and consistent style.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncargo +nightly fmt --all\n```\n\nLANGUAGE: bash\nCODE:\n```\ncargo clippy --workspace --all-features\n```\n\n----------------------------------------\n\nTITLE: Defining Distance Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for distance functions in Qdrant. Supports Cosine, Euclidean, Dot Product, and Manhattan distance metrics for vector comparisons.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_24\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-Distance\"></a>\n\n### Distance\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| UnknownDistance | 0 |  |\n| Cosine | 1 |  |\n| Euclid | 2 |  |\n| Dot | 3 |  |\n| Manhattan | 4 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining VectorParams Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message for vector parameters configuration. Specifies vector size, distance function, HNSW configuration, quantization, storage location, data type, and multi-vector search configuration.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_12\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-VectorParams\"></a>\n\n### VectorParams\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| size | [uint64](#uint64) |  | Size of the vectors |\n| distance | [Distance](#qdrant-Distance) |  | Distance function used for comparing vectors |\n| hnsw_config | [HnswConfigDiff](#qdrant-HnswConfigDiff) | optional | Configuration of vector HNSW graph. If omitted - the collection configuration will be used |\n| quantization_config | [QuantizationConfig](#qdrant-QuantizationConfig) | optional | Configuration of vector quantization config. If omitted - the collection configuration will be used |\n| on_disk | [bool](#bool) | optional | If true - serve vectors from disk. If set to false, the vectors will be loaded in RAM. |\n| datatype | [Datatype](#qdrant-Datatype) | optional | Data type of the vectors |\n| multivector_config | [MultiVectorConfig](#qdrant-MultiVectorConfig) | optional | Configuration for multi-vector search |\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for ScoredPoint.PayloadEntry in Qdrant\nDESCRIPTION: Defines the key-value pair structure for payload entries in a scored point. This is used to store custom metadata associated with vectors in search results.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_74\n\nLANGUAGE: protobuf\nCODE:\n```\n### ScoredPoint.PayloadEntry\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | [string](#string) |  |  |\n| value | [Value](#qdrant-Value) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Defining ShardingMethod Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for sharding methods in Qdrant. Supports Auto sharding based on record IDs and Custom sharding using user-defined keys.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_33\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-ShardingMethod\"></a>\n\n### ShardingMethod\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| Auto | 0 | Auto-sharding based on record ids |\n| Custom | 1 | Shard by user-defined key |\n```\n\n----------------------------------------\n\nTITLE: Defining VectorsConfigDiff Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message for updating vector configurations. Supports updating both a single vector configuration and a map of named vector configurations.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_19\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-VectorsConfigDiff\"></a>\n\n### VectorsConfigDiff\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| params | [VectorParamsDiff](#qdrant-VectorParamsDiff) |  |  |\n| params_map | [VectorParamsDiffMap](#qdrant-VectorParamsDiffMap) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Defining VectorParamsDiffMap Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message for mapping named vector parameters to their update configurations. Uses a map structure with string keys and VectorParamsDiff values.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_14\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-VectorParamsDiffMap\"></a>\n\n### VectorParamsDiffMap\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| map | [VectorParamsDiffMap.MapEntry](#qdrant-VectorParamsDiffMap-MapEntry) | repeated |  |\n```\n\n----------------------------------------\n\nTITLE: Defining ShardTransferMethod Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for shard transfer methods in Qdrant. Includes options for streaming records, snapshot transfer, WAL delta transfer, and resharding stream transfer.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_32\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-ShardTransferMethod\"></a>\n\n### ShardTransferMethod\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| StreamRecords | 0 | Stream shard records in batches |\n| Snapshot | 1 | Snapshot the shard and recover it on the target peer |\n| WalDelta | 2 | Resolve WAL delta between peers and transfer the difference |\n| ReshardingStreamRecords | 3 | Stream shard records in batches for resharding |\n```\n\n----------------------------------------\n\nTITLE: Defining UpdateCollection Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message definition for updating Qdrant collection configurations. Includes fields for collection name, optimizer configurations, timeouts, vector parameters, quantization settings, and strict mode options.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_8\n\nLANGUAGE: protobuf\nCODE:\n```\n### UpdateCollection\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | [string](#string) |  | Name of the collection |\n| optimizers_config | [OptimizersConfigDiff](#qdrant-OptimizersConfigDiff) | optional | New configuration parameters for the collection. This operation is blocking, it will only proceed once all current optimizations are complete |\n| timeout | [uint64](#uint64) | optional | Wait timeout for operation commit in seconds if blocking, if not specified - default value will be supplied |\n| params | [CollectionParamsDiff](#qdrant-CollectionParamsDiff) | optional | New configuration parameters for the collection |\n| hnsw_config | [HnswConfigDiff](#qdrant-HnswConfigDiff) | optional | New HNSW parameters for the collection index |\n| vectors_config | [VectorsConfigDiff](#qdrant-VectorsConfigDiff) | optional | New vector parameters |\n| quantization_config | [QuantizationConfigDiff](#qdrant-QuantizationConfigDiff) | optional | Quantization configuration of vector |\n| sparse_vectors_config | [SparseVectorConfig](#qdrant-SparseVectorConfig) | optional | New sparse vector parameters |\n| strict_mode_config | [StrictModeConfig](#qdrant-StrictModeConfig) | optional | New strict mode configuration |\n```\n\n----------------------------------------\n\nTITLE: Defining VectorParamsDiffMap.MapEntry Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer map entry definition for VectorParamsDiffMap. Maps string keys to VectorParamsDiff values for named vector parameter updates.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_15\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-VectorParamsDiffMap-MapEntry\"></a>\n\n### VectorParamsDiffMap.MapEntry\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | [string](#string) |  |  |\n| value | [VectorParamsDiff](#qdrant-VectorParamsDiff) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Defining PayloadSchemaType Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for payload schema data types in Qdrant. Supports various data types including Keyword, Integer, Float, Geo, Text, Bool, Datetime, and Uuid.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_28\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-PayloadSchemaType\"></a>\n\n### PayloadSchemaType\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| UnknownType | 0 |  |\n| Keyword | 1 |  |\n| Integer | 2 |  |\n| Float | 3 |  |\n| Geo | 4 |  |\n| Text | 5 |  |\n| Bool | 6 |  |\n| Datetime | 7 |  |\n| Uuid | 8 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining UpdateCollectionClusterSetupRequest Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message for updating cluster setup of a collection in Qdrant. Includes operations for moving, replicating, and managing shards, as well as timeout configuration for operation commits.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_9\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-UpdateCollectionClusterSetupRequest\"></a>\n\n### UpdateCollectionClusterSetupRequest\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| collection_name | [string](#string) |  | Name of the collection |\n| move_shard | [MoveShard](#qdrant-MoveShard) |  |  |\n| replicate_shard | [ReplicateShard](#qdrant-ReplicateShard) |  |  |\n| abort_transfer | [AbortShardTransfer](#qdrant-AbortShardTransfer) |  |  |\n| drop_replica | [Replica](#qdrant-Replica) |  |  |\n| create_shard_key | [CreateShardKey](#qdrant-CreateShardKey) |  |  |\n| delete_shard_key | [DeleteShardKey](#qdrant-DeleteShardKey) |  |  |\n| restart_transfer | [RestartTransfer](#qdrant-RestartTransfer) |  |  |\n| timeout | [uint64](#uint64) | optional | Wait timeout for operation commit in seconds, if not specified - default value will be supplied |\n```\n\n----------------------------------------\n\nTITLE: Defining VectorParamsMap.MapEntry Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer map entry definition for VectorParamsMap. Maps string keys to VectorParams values for named vector configurations.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_17\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-VectorParamsMap-MapEntry\"></a>\n\n### VectorParamsMap.MapEntry\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | [string](#string) |  |  |\n| value | [VectorParams](#qdrant-VectorParams) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Defining ReplicaState Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for replica states in Qdrant. Includes various states such as Active, Dead, Partial, Initializing, Listener, Recovery, and Resharding states.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_30\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-ReplicaState\"></a>\n\n### ReplicaState\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| Active | 0 | Active and sound |\n| Dead | 1 | Failed for some reason |\n| Partial | 2 | The shard is partially loaded and is currently receiving data from other shards |\n| Initializing | 3 | Collection is being created |\n| Listener | 4 | A shard which receives data, but is not used for search; Useful for backup shards |\n| PartialSnapshot | 5 | Deprecated: snapshot shard transfer is in progress; Updates should not be sent to (and are ignored by) the shard |\n| Recovery | 6 | Shard is undergoing recovered by an external node; Normally rejects updates, accepts updates if force is true |\n| Resharding | 7 | Points are being migrated to this shard as part of scale-up resharding |\n| ReshardingScaleDown | 8 | Points are being migrated to this shard as part of scale-down resharding |\n```\n\n----------------------------------------\n\nTITLE: Defining QuantizationConfig Message in Protocol Buffers\nDESCRIPTION: Defines the QuantizationConfig message which can contain scalar, product, or binary quantization settings for vector compression in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_2\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage QuantizationConfig {\n  oneof config {\n    ScalarQuantization scalar = 1;\n    ProductQuantization product = 2;\n    BinaryQuantization binary = 3;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Protocol Buffers Compiler from Source\nDESCRIPTION: Script to download and install protoc (Protocol Buffers compiler) from source, which is required for building Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nPROTOC_VERSION=22.2\nPKG_NAME=$(uname -s | awk '{print ($1 == \"Darwin\") ? \"osx-universal_binary\" : (($1 == \"Linux\") ? \"linux-x86_64\" : \"\")}')\n\n# curl `proto` source file\ncurl -LO https://github.com/protocolbuffers/protobuf/releases//download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-$PKG_NAME.zip\n\nunzip protoc-$PROTOC_VERSION-$PKG_NAME.zip -d $HOME/.local\n\nexport PATH=\"$PATH:$HOME/.local/bin\"\n\n# remove source file if not needed\nrm protoc-$PROTOC_VERSION-$PKG_NAME.zip\n\n# check installed `protoc` version\nprotoc --version\n```\n\n----------------------------------------\n\nTITLE: Defining TokenizerType Enumeration in Protocol Buffers\nDESCRIPTION: Enumeration that defines different tokenizer types available in Qdrant, including Unknown, Prefix, Whitespace, Word, and Multilingual tokenizers.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_34\n\nLANGUAGE: protobuf\nCODE:\n```\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| Unknown | 0 |  |\n| Prefix | 1 |  |\n| Whitespace | 2 |  |\n| Word | 3 |  |\n| Multilingual | 4 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining SparseIndexConfig Message in Protocol Buffers\nDESCRIPTION: Defines the SparseIndexConfig message for configuring sparse vector indexing, including full scan threshold, on-disk storage, and datatype settings.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_6\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage SparseIndexConfig {\n  optional uint64 full_scan_threshold = 1;\n  optional bool on_disk = 2;\n  optional Datatype datatype = 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Running Qdrant Benchmarks with Profiling\nDESCRIPTION: Command to run benchmarks with profiling enabled, generating FlameGraph visualizations for performance analysis.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncargo bench --bench name_of_benchmark -- --profile-time=60\n```\n\n----------------------------------------\n\nTITLE: Defining JSON with Integer Handling in Protocol Buffers\nDESCRIPTION: Definitions for representing structured JSON data in Protocol Buffers that support numeric values as both doubles and integers, facilitating proper JSON serialization and deserialization.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_37\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-ListValue\"></a>\n\n### ListValue\n`ListValue` is a wrapper around a repeated field of values.\n\nThe JSON representation for `ListValue` is a JSON array.\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| values | [Value](#qdrant-Value) | repeated | Repeated field of dynamically typed values. |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-Struct\"></a>\n\n### Struct\n`Struct` represents a structured data value, consisting of fields\nwhich map to dynamically typed values. In some languages, `Struct`\nmight be supported by a native representation. For example, in\nscripting languages like JS a struct is represented as an\nobject. The details of that representation are described together\nwith the proto support for the language.\n\nThe JSON representation for `Struct` is a JSON object.\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| fields | [Struct.FieldsEntry](#qdrant-Struct-FieldsEntry) | repeated | Unordered map of dynamically typed values. |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-Struct-FieldsEntry\"></a>\n\n### Struct.FieldsEntry\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | [string](#string) |  |  |\n| value | [Value](#qdrant-Value) |  |  |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-Value\"></a>\n\n### Value\n`Value` represents a dynamically typed value which can be either\nnull, a number, a string, a boolean, a recursive struct value, or a\nlist of values. A producer of value is expected to set one of those\nvariants, absence of any variant indicates an error.\n\nThe JSON representation for `Value` is a JSON value.\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| null_value | [NullValue](#qdrant-NullValue) |  | Represents a null value. |\n| double_value | [double](#double) |  | Represents a double value. |\n| integer_value | [int64](#int64) |  | Represents an integer value |\n| string_value | [string](#string) |  | Represents a string value. |\n| bool_value | [bool](#bool) |  | Represents a boolean value. |\n| struct_value | [Struct](#qdrant-Struct) |  | Represents a structured value. |\n| list_value | [ListValue](#qdrant-ListValue) |  | Represents a repeated `Value`. |\n```\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-NullValue\"></a>\n\n### NullValue\n`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| NULL_VALUE | 0 | Null value. |\n```\n\n----------------------------------------\n\nTITLE: Defining WalConfigDiff Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message for updating Write-Ahead Log configuration. Includes options for setting WAL block file size and number of segments to create in advance.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_20\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-WalConfigDiff\"></a>\n\n### WalConfigDiff\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| wal_capacity_mb | [uint64](#uint64) | optional | Size of a single WAL block file |\n| wal_segments_ahead | [uint64](#uint64) | optional | Number of segments to create in advance |\n```\n\n----------------------------------------\n\nTITLE: Generating Local Code Coverage Reports\nDESCRIPTION: Commands to install the necessary tool and generate code coverage reports for Qdrant locally, then serve the HTML report.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ncd qdrant\ncargo install cargo-llvm-cov\n./tools/coverage.sh\n\ncd target/llvm-cov/html\npython -m http.server\nopen http://localhost:8000\n```\n\n----------------------------------------\n\nTITLE: Defining Point-related Messages in Protocol Buffers\nDESCRIPTION: Defines messages for point structures, including PointStruct and PointVectors in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_62\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage PointStruct {\n  PointId id = 1;\n  map<string, Value> payload = 2;\n  optional Vectors vectors = 3;\n}\n\nmessage PointVectors {\n  PointId id = 1;\n  Vectors vectors = 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VectorParamsMap Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message for mapping named vectors to their configuration parameters. Uses a map structure with string keys and VectorParams values.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_16\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-VectorParamsMap\"></a>\n\n### VectorParamsMap\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| map | [VectorParamsMap.MapEntry](#qdrant-VectorParamsMap-MapEntry) | repeated |  |\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for SearchMatrixPair in Qdrant\nDESCRIPTION: Defines a pair of point IDs with an associated similarity score for matrix-based search operations in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_82\n\nLANGUAGE: protobuf\nCODE:\n```\n### SearchMatrixPair\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| a | [PointId](#qdrant-PointId) |  | first id of the pair |\n| b | [PointId](#qdrant-PointId) |  | second id of the pair |\n| score | [float](#float) |  | score of the pair |\n```\n\n----------------------------------------\n\nTITLE: Defining DiscoverBatchPoints Message in Protocol Buffers\nDESCRIPTION: Defines a message for batch discovery of points in a collection, including collection name, discover points, read consistency, and timeout.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_49\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DiscoverBatchPoints {\n  string collection_name = 1;\n  repeated DiscoverPoints discover_points = 2;\n  ReadConsistency read_consistency = 3;\n  uint64 timeout = 4;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UuidIndexParams Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message for configuring UUID index parameters. Includes options for tenant optimization and disk storage of the index.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_11\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-UuidIndexParams\"></a>\n\n### UuidIndexParams\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| is_tenant | [bool](#bool) | optional | If true - used for tenant optimization. |\n| on_disk | [bool](#bool) | optional | If true - store index on disk. |\n```\n\n----------------------------------------\n\nTITLE: Internal Consensus Service Definition (Protobuf)\nDESCRIPTION: Defines the internal service interface for managing Qdrant consensus operations including getting and waiting for commit states.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_88\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage GetConsensusCommitResponse {\n  int64 commit = 1;  // Raft commit as u64\n  int64 term = 2;    // Raft term as u64\n}\n\nmessage WaitOnConsensusCommitRequest {\n  int64 commit = 1;   // Raft commit as u64\n  int64 term = 2;     // Raft term as u64 \n  int64 timeout = 3;  // Timeout in seconds\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DiscoverBatchResponse Message in Protocol Buffers\nDESCRIPTION: Defines a response message for batch discovery, including results, processing time, and optional hardware usage information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_50\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DiscoverBatchResponse {\n  repeated BatchResult result = 1;\n  double time = 2;\n  HardwareUsage usage = 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for SearchMatrixOffsetsResponse in Qdrant\nDESCRIPTION: Defines the response structure for matrix-based search operations using offsets in Qdrant. It includes matrix results, processing time, and optional hardware usage information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_81\n\nLANGUAGE: protobuf\nCODE:\n```\n### SearchMatrixOffsetsResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | [SearchMatrixOffsets](#qdrant-SearchMatrixOffsets) |  |  |\n| time | [double](#double) |  | Time spent to process |\n| usage | [HardwareUsage](#qdrant-HardwareUsage) | optional |  |\n```\n\n----------------------------------------\n\nTITLE: Defining ListSnapshotsResponse Message in Protocol Buffers\nDESCRIPTION: Defines a message for the response to a list snapshots request. It includes fields for snapshot descriptions and processing time.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_93\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage ListSnapshotsResponse {\n  repeated SnapshotDescription snapshot_descriptions = 1;\n  double time = 2;  // Time spent to process\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DiscoverInput Message in Protocol Buffers\nDESCRIPTION: Defines input for discovery, including target vector and context input for constraining the search space.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_51\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DiscoverInput {\n  VectorInput target = 1;\n  ContextInput context = 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for SearchMatrixOffsets in Qdrant\nDESCRIPTION: Defines the structure for matrix-based search results using offsets. It includes row and column indices, scores associated with matrix coordinates, and point IDs.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_80\n\nLANGUAGE: protobuf\nCODE:\n```\n### SearchMatrixOffsets\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| offsets_row | [uint64](#uint64) | repeated | Row indices of the matrix |\n| offsets_col | [uint64](#uint64) | repeated | Column indices of the matrix |\n| scores | [float](#float) | repeated | Scores associated with matrix coordinates |\n| ids | [PointId](#qdrant-PointId) | repeated | Ids of the points in order |\n```\n\n----------------------------------------\n\nTITLE: Defining QuantizationConfigDiff Message in Protocol Buffers\nDESCRIPTION: Defines the QuantizationConfigDiff message which includes options for updating quantization settings, including disabling quantization.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_3\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage QuantizationConfigDiff {\n  oneof config {\n    ScalarQuantization scalar = 1;\n    ProductQuantization product = 2;\n    Disabled disabled = 3;\n    BinaryQuantization binary = 4;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DiscoverResponse Message in Protocol Buffers\nDESCRIPTION: Defines a response message for discovery, including results, processing time, and optional hardware usage information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_53\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DiscoverResponse {\n  repeated ScoredPoint result = 1;\n  double time = 2;\n  HardwareUsage usage = 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Declaration for SearchMatrixPoints in Qdrant\nDESCRIPTION: Declares an empty message type for SearchMatrixPoints in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_85\n\nLANGUAGE: protobuf\nCODE:\n```\n### SearchMatrixPoints\n```\n\n----------------------------------------\n\nTITLE: Installing Python Testing Dependencies\nDESCRIPTION: Command to install Python dependencies required for running Qdrant tests using Poetry dependency management.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npoetry -C tests install --sync\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for RecommendResponse in Qdrant\nDESCRIPTION: Defines the response structure for recommendation operations in Qdrant. It contains an array of scored points, processing time, and optional hardware usage information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_68\n\nLANGUAGE: protobuf\nCODE:\n```\n### RecommendResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | [ScoredPoint](#qdrant-ScoredPoint) | repeated |  |\n| time | [double](#double) |  | Time spent to process |\n| usage | [HardwareUsage](#qdrant-HardwareUsage) | optional |  |\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for RepeatedIntegers in Qdrant\nDESCRIPTION: Defines a simple message structure to hold repeated integer values used in various Qdrant operations.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_69\n\nLANGUAGE: protobuf\nCODE:\n```\n### RepeatedIntegers\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| integers | [int64](#int64) | repeated |  |\n```\n\n----------------------------------------\n\nTITLE: Syncing Web UI for Local Development\nDESCRIPTION: Command to synchronize the Qdrant web UI from its separate repository to the local static folder for development.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n./tools/sync-web-ui.sh\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for RetrievedPoint.PayloadEntry in Qdrant\nDESCRIPTION: Defines the key-value pair structure for payload entries in a retrieved point. This is used to store custom metadata associated with vectors.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_72\n\nLANGUAGE: protobuf\nCODE:\n```\n### RetrievedPoint.PayloadEntry\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| key | [string](#string) |  |  |\n| value | [Value](#qdrant-Value) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Defining RemoteShardInfo Message in Protocol Buffers\nDESCRIPTION: Defines the RemoteShardInfo message which contains information about a remote shard, including its ID, peer ID, state, and optional shard key.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_4\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage RemoteShardInfo {\n  uint32 shard_id = 1;\n  uint64 peer_id = 2;\n  ReplicaState state = 3;\n  optional ShardKey shard_key = 4;\n}\n```\n\n----------------------------------------\n\nTITLE: Generating gRPC Documentation for Qdrant\nDESCRIPTION: Shell command to generate documentation for the gRPC API. This should be run after making changes to the protocol buffer definitions or service implementation.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n./tools/generate_grpc_docs.sh\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for SearchMatrixPairs in Qdrant\nDESCRIPTION: Defines a collection of point ID pairs with associated similarity scores for matrix-based search operations in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_83\n\nLANGUAGE: protobuf\nCODE:\n```\n### SearchMatrixPairs\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| pairs | [SearchMatrixPair](#qdrant-SearchMatrixPair) | repeated | List of pairs of points with scores |\n```\n\n----------------------------------------\n\nTITLE: Defining DeleteSnapshotRequest Message in Protocol Buffers\nDESCRIPTION: Defines a message for requesting the deletion of a collection snapshot. It includes fields for the collection name and snapshot name.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_89\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DeleteSnapshotRequest {\n  string collection_name = 1;  // Name of the collection\n  string snapshot_name = 2;     // Name of the collection snapshot\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MaxOptimizationThreads.Setting Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for maximum optimization threads setting. Currently only supports Auto mode for automatic thread allocation.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_25\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-MaxOptimizationThreads-Setting\"></a>\n\n### MaxOptimizationThreads.Setting\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| Auto | 0 |  |\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for SearchMatrixPairsResponse in Qdrant\nDESCRIPTION: Defines the response structure for matrix-based search operations using point pairs in Qdrant. It includes pair results, processing time, and optional hardware usage information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_84\n\nLANGUAGE: protobuf\nCODE:\n```\n### SearchMatrixPairsResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | [SearchMatrixPairs](#qdrant-SearchMatrixPairs) |  |  |\n| time | [double](#double) |  | Time spent to process |\n| usage | [HardwareUsage](#qdrant-HardwareUsage) | optional |  |\n```\n\n----------------------------------------\n\nTITLE: Defining DeleteSnapshotResponse Message in Protocol Buffers\nDESCRIPTION: Defines a message for the response to a delete snapshot request. It includes a field for the time spent processing the request.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_90\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DeleteSnapshotResponse {\n  double time = 1;  // Time spent to process\n}\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer Definition for RepeatedStrings in Qdrant\nDESCRIPTION: Defines a simple message structure to hold repeated string values used in various Qdrant operations.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_70\n\nLANGUAGE: protobuf\nCODE:\n```\n### RepeatedStrings\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| strings | [string](#string) | repeated |  |\n```\n\n----------------------------------------\n\nTITLE: Defining SnapshotDescription Message in Protocol Buffers\nDESCRIPTION: Defines a message for describing a snapshot. It includes fields for the snapshot name, creation time, size, and optional checksum.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_94\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage SnapshotDescription {\n  string name = 1;                                    // Name of the snapshot\n  google.protobuf.Timestamp creation_time = 2;        // Creation time of the snapshot\n  int64 size = 3;                                     // Size of the snapshot in bytes\n  optional string checksum = 4;                       // SHA256 digest of the snapshot file\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListFullSnapshotsRequest Message in Protocol Buffers\nDESCRIPTION: Defines an empty message for requesting a list of full storage snapshots.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_91\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage ListFullSnapshotsRequest {}\n```\n\n----------------------------------------\n\nTITLE: Defining RenameAlias Message in Protocol Buffers\nDESCRIPTION: Defines the RenameAlias message used for renaming collection aliases in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_5\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage RenameAlias {\n  string old_alias_name = 1;\n  string new_alias_name = 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DeletePayloadPoints Message in Protocol Buffers\nDESCRIPTION: Defines a message for deleting payload from points in a collection, including collection name, wait flag, keys to delete, and points selector.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_45\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DeletePayloadPoints {\n  string collection_name = 1;\n  bool wait = 2;\n  repeated string keys = 3;\n  PointsSelector points_selector = 4;\n  WriteOrdering ordering = 5;\n  ShardKeySelector shard_key_selector = 6;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListSnapshotsRequest Message in Protocol Buffers\nDESCRIPTION: Defines a message for requesting a list of snapshots for a specific collection. It includes a field for the collection name.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_92\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage ListSnapshotsRequest {\n  string collection_name = 1;  // Name of the collection\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DeletePointVectors Message in Protocol Buffers\nDESCRIPTION: Defines a message for deleting vectors from points in a collection, including collection name, wait flag, points selector, and vectors selector.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_46\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DeletePointVectors {\n  string collection_name = 1;\n  bool wait = 2;\n  PointsSelector points_selector = 3;\n  VectorsSelector vectors = 4;\n  WriteOrdering ordering = 5;\n  ShardKeySelector shard_key_selector = 6;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UpdateCollectionClusterSetupResponse Message in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer message definition for the response to a cluster setup update operation. Contains a boolean result field indicating success or failure of the operation.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_10\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-UpdateCollectionClusterSetupResponse\"></a>\n\n### UpdateCollectionClusterSetupResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| result | [bool](#bool) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Defining DeletePoints Message in Protocol Buffers\nDESCRIPTION: Defines a message for deleting points from a collection, including collection name, wait flag, points selector, and ordering.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_47\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DeletePoints {\n  string collection_name = 1;\n  bool wait = 2;\n  PointsSelector points = 3;\n  WriteOrdering ordering = 4;\n  ShardKeySelector shard_key_selector = 5;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CollectionStatus Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration of possible collection status values in Qdrant. Includes Green (ready), Yellow (optimization in process), Red (error), and Grey (pending) statuses.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_21\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-CollectionStatus\"></a>\n\n### CollectionStatus\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| UnknownCollectionStatus | 0 |  |\n| Green | 1 | All segments are ready |\n| Yellow | 2 | Optimization in process |\n| Red | 3 | Something went wrong |\n| Grey | 4 | Optimization is pending |\n```\n\n----------------------------------------\n\nTITLE: Defining CreateFieldIndexCollection Message in Protocol Buffers\nDESCRIPTION: Defines a message for creating a field index in a collection, including collection name, wait flag, field name, type, and index parameters.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_41\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage CreateFieldIndexCollection {\n  string collection_name = 1;\n  bool wait = 2;\n  string field_name = 3;\n  FieldType field_type = 4;\n  PayloadIndexParams field_index_params = 5;\n  WriteOrdering ordering = 6;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Datatype Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for vector data types in Qdrant. Includes Default, Float32, Uint8, and Float16 data types for vectors.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_23\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-Datatype\"></a>\n\n### Datatype\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| Default | 0 |  |\n| Float32 | 1 |  |\n| Uint8 | 2 |  |\n| Float16 | 3 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining DeleteFieldIndexCollection Message in Protocol Buffers\nDESCRIPTION: Defines a message for deleting a field index from a collection, including collection name, wait flag, field name, and ordering.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_44\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DeleteFieldIndexCollection {\n  string collection_name = 1;\n  bool wait = 2;\n  string field_name = 3;\n  WriteOrdering ordering = 4;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Modifier Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for vector modifiers in Qdrant. Includes None (no modification) and Idf (Inverse Document Frequency) options.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_26\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-Modifier\"></a>\n\n### Modifier\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| None | 0 |  |\n| Idf | 1 | Apply Inverse Document Frequency |\n```\n\n----------------------------------------\n\nTITLE: Defining DenseVector Message in Protocol Buffers\nDESCRIPTION: Defines a message for representing a dense vector as a repeated list of float values.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_48\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DenseVector {\n  repeated float data = 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MultiVectorComparator Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for multi-vector comparison methods. Currently only supports MaxSim (Maximum Similarity) comparison.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_27\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-MultiVectorComparator\"></a>\n\n### MultiVectorComparator\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| MaxSim | 0 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining DivExpression Message in Protocol Buffers\nDESCRIPTION: Defines an expression for division, including left and right operands and an optional default value for division by zero.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_54\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DivExpression {\n  Expression left = 1;\n  Expression right = 2;\n  float by_zero_default = 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReshardingDirection Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for resharding direction in Qdrant. Specifies whether resharding is scaling up (adding shards) or scaling down (removing shards).\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_31\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-ReshardingDirection\"></a>\n\n### ReshardingDirection\nResharding direction, scale up or down in number of shards\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| Up | 0 | Scale up, add a new shard |\n| Down | 1 | Scale down, remove a shard |\n```\n\n----------------------------------------\n\nTITLE: Defining Document Message in Protocol Buffers\nDESCRIPTION: Defines a document message with text content, model name, and options as key-value pairs.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_55\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage Document {\n  string text = 1;\n  string model = 2;\n  map<string, Value> options = 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Running Basic gRPC Integration Tests for Qdrant\nDESCRIPTION: Shell command to execute basic gRPC integration tests after implementing service trait for new gRPC methods. This validates that the gRPC API works as expected.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n./tests/basic_grpc_test.sh\n```\n\n----------------------------------------\n\nTITLE: Defining Image Message in Protocol Buffers\nDESCRIPTION: Defines the Image message structure for storing image data, model name, and options in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_56\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage Image {\n  Value image = 1;\n  string model = 2;\n  map<string, Value> options = 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Running OpenAPI Integration Tests for Qdrant\nDESCRIPTION: Command to execute the OpenAPI integration tests using pytest. This validates that API changes work as expected and conform to the OpenAPI specification.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\npytest tests/openapi\n```\n\n----------------------------------------\n\nTITLE: Defining InferenceObject Message in Protocol Buffers\nDESCRIPTION: Defines the InferenceObject message structure for storing object data, model name, and options for inference in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_57\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage InferenceObject {\n  Value object = 1;\n  string model = 2;\n  map<string, Value> options = 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Generating OpenAPI Models for Qdrant REST API Documentation\nDESCRIPTION: Shell command for generating OpenAPI models after making changes to the API specification. This is a critical step in the REST API change workflow to ensure documentation stays in sync with implementation.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n./tools/generate_openapi_models.sh\n```\n\n----------------------------------------\n\nTITLE: Defining LookupLocation Message in Protocol Buffers\nDESCRIPTION: Defines the LookupLocation message structure for specifying collection, vector, and shard key information in Qdrant.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_59\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage LookupLocation {\n  string collection_name = 1;\n  optional string vector_name = 2;\n  optional ShardKeySelector shard_key_selector = 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Starting an HTTP Server for Qdrant API Documentation Preview\nDESCRIPTION: Command to start a simple HTTP server for previewing the Redoc-based API documentation. This allows developers to validate visual appearance and correctness of the API documentation.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\npython -m http.server\n```\n\n----------------------------------------\n\nTITLE: Defining Match Message in Protocol Buffers\nDESCRIPTION: Defines the Match message structure for various matching conditions in Qdrant filters.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_60\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage Match {\n  oneof match_value {\n    string keyword = 1;\n    int64 integer = 2;\n    bool boolean = 3;\n    string text = 4;\n    RepeatedStrings keywords = 5;\n    RepeatedIntegers integers = 6;\n    RepeatedIntegers except_integers = 7;\n    RepeatedStrings except_keywords = 8;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Qdrant Benchmarks\nDESCRIPTION: Command to run specific benchmarks in Qdrant sub-crates to measure performance of components or changes.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncargo bench --bench name_of_benchmark\n```\n\n----------------------------------------\n\nTITLE: Defining DatetimeRange Message in Protocol Buffers\nDESCRIPTION: Defines a message for representing a datetime range with optional fields for less than, greater than, and equal to comparisons.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_42\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DatetimeRange {\n  google.protobuf.Timestamp lt = 1;\n  google.protobuf.Timestamp gt = 2;\n  google.protobuf.Timestamp gte = 3;\n  google.protobuf.Timestamp lte = 4;\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tango.rs Benchmarks in Solo Mode\nDESCRIPTION: Command to run Tango.rs-based benchmarks in solo mode, which establishes a baseline for performance comparison.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_14\n\nLANGUAGE: console\nCODE:\n```\n$ cargo bench -p common --bench bitpacking_tango -- solo\n    Finished `bench` profile [optimized + debuginfo] target(s) in 0.22s\n     Running benches/bitpacking_tango.rs (target/release/deps/bitpacking_tango-9713980dd08cde85)\nbitpacking/read                                     [  30.8 ns ...  43.9 ns ... 125.3 ns ]  stddev:   6.7 ns\nbitpacking/write                                    [  32.4 ns ...  50.1 ns ...  91.1 ns ]  stddev:   7.3 ns\nbitpacking_links/read                               [ 343.3 ns ... 378.3 ns ... 419.4 ns ]  stddev:  16.5 ns\n```\n\n----------------------------------------\n\nTITLE: Defining DecayParamsExpression Message in Protocol Buffers\nDESCRIPTION: Defines parameters for a decay function expression, including the variable to decay, target value, scale factor, and midpoint.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_43\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage DecayParamsExpression {\n  Expression x = 1;\n  Expression target = 2;\n  float scale = 3;\n  float midpoint = 4;\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tango.rs Benchmarks in Compare Mode\nDESCRIPTION: Command to run Tango.rs benchmarks in compare mode, which measures performance differences against a baseline binary.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_16\n\nLANGUAGE: console\nCODE:\n```\n$ cargo bench -p common --bench bitpacking_tango -- compare ./baseline\n    Finished `bench` profile [optimized + debuginfo] target(s) in 0.14s\n     Running benches/bitpacking_tango.rs (target/release/deps/bitpacking_tango-9713980dd08cde85)\nbitpacking/read                                    [  41.8 ns ...  41.9 ns ]      +0.08%\nbitpacking/write                                   [  45.7 ns ...  45.5 ns ]      -0.46%\nbitpacking_links/read                              [ 369.4 ns ... 368.4 ns ]      -0.27%\n```\n\n----------------------------------------\n\nTITLE: Defining CountResponse Message in Protocol Buffers\nDESCRIPTION: Defines a CountResponse message containing a CountResult, processing time, and optional hardware usage information.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_39\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage CountResponse {\n  CountResult result = 1;\n  double time = 2;\n  HardwareUsage usage = 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Call Graph Visualization from Profiles\nDESCRIPTION: Command to generate SVG call graph visualizations from benchmark profiling data using Google's pprof tool.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n~/go/bin/pprof -output=profile.svg -svg ${qdrant_root}/target/criterion/${benchmark_name}/${function_name}/profile/profile.pb\n```\n\n----------------------------------------\n\nTITLE: Defining CountResult Message in Protocol Buffers\nDESCRIPTION: Defines a CountResult message containing a uint64 count field.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_40\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage CountResult {\n  uint64 count = 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CompressionRatio Enum in Protocol Buffers for Qdrant\nDESCRIPTION: Protocol Buffer enumeration for vector compression ratio options in Qdrant. Provides compression levels from x4 to x64.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_22\n\nLANGUAGE: protobuf\nCODE:\n```\n<a name=\"qdrant-CompressionRatio\"></a>\n\n### CompressionRatio\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| x4 | 0 |  |\n| x8 | 1 |  |\n| x16 | 2 |  |\n| x32 | 3 |  |\n| x64 | 4 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining StrictModeConfig Message in Protocol Buffers\nDESCRIPTION: Defines the StrictModeConfig message for configuring various strict mode settings in Qdrant, including query limits, timeouts, and rate limits.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_7\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage StrictModeConfig {\n  optional bool enabled = 1;\n  optional uint32 max_query_limit = 2;\n  optional uint32 max_timeout = 3;\n  optional bool unindexed_filtering_retrieve = 4;\n  optional bool unindexed_filtering_update = 5;\n  optional uint32 search_max_hnsw_ef = 6;\n  optional bool search_allow_exact = 7;\n  optional float search_max_oversampling = 8;\n  optional uint64 upsert_max_batchsize = 9;\n  optional uint64 max_collection_vector_size_bytes = 10;\n  optional uint32 read_rate_limit = 11;\n  optional uint32 write_rate_limit = 12;\n  optional uint64 max_collection_payload_size_bytes = 13;\n  optional uint64 filter_max_conditions = 14;\n  optional uint64 condition_max_size = 15;\n  optional StrictModeMultivectorConfig multivector_config = 16;\n  optional StrictModeSparseConfig sparse_config = 17;\n  optional uint64 max_points_count = 18;\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Points to Qdrant Collection\nDESCRIPTION: curl command to add vectors with payload to a Qdrant collection. Includes the expected JSON response confirming the operation.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/QUICK_START.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L -X PUT 'http://localhost:6333/collections/test_collection/points?wait=true' \\\n    -H 'Content-Type: application/json' \\\n    --data-raw '{\n        \"points\": [\n          {\"id\": 1, \"vector\": [0.05, 0.61, 0.76, 0.74], \"payload\": {\"city\": \"Berlin\"}},\n          {\"id\": 2, \"vector\": [0.19, 0.81, 0.75, 0.11], \"payload\": {\"city\": [\"Berlin\", \"London\"] }},\n          {\"id\": 3, \"vector\": [0.36, 0.55, 0.47, 0.94], \"payload\": {\"city\": [\"Berlin\", \"Moscow\"] }},\n          {\"id\": 4, \"vector\": [0.18, 0.01, 0.85, 0.80], \"payload\": {\"city\": [\"London\", \"Moscow\"] }},\n          {\"id\": 5, \"vector\": [0.24, 0.18, 0.22, 0.44], \"payload\": {\"count\": [0] }},\n          {\"id\": 6, \"vector\": [0.35, 0.08, 0.11, 0.44]}\n        ]\n    }'\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"result\": {\n    \"operation_id\": 0,\n    \"status\": \"completed\"\n  },\n  \"status\": \"ok\",\n  \"time\": 0.000206061\n}\n```\n\n----------------------------------------\n\nTITLE: Running Qdrant Docker Container with Custom Configuration\nDESCRIPTION: Command to run Qdrant with custom data paths and configuration file. This allows persisting data and snapshots in specific locations and configuring Qdrant behavior.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 6333:6333 \\\n    -v $(pwd)/path/to/data:/qdrant/storage \\\n    -v $(pwd)/path/to/snapshots:/qdrant/snapshots \\\n    -v $(pwd)/path/to/custom_config.yaml:/qdrant/config/production.yaml \\\n    qdrant/qdrant\n```\n\n----------------------------------------\n\nTITLE: Copying Benchmark Binary for Comparison\nDESCRIPTION: Command to copy a compiled benchmark binary to use as a baseline for performance comparison in Tango.rs.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/DEVELOPMENT.md#2025-04-21_snippet_15\n\nLANGUAGE: console\nCODE:\n```\n$ cp target/release/deps/bitpacking_tango-9713980dd08cde85 ./baseline\n```\n\n----------------------------------------\n\nTITLE: Running Storage Compatibility Data Generation Script in Bash\nDESCRIPTION: Command to execute the shell script that generates reference storage data and snapshots for compatibility testing between Qdrant versions.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/tests/storage-compat/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./tests/storage-compat/gen_storage_compat_data.sh\n```\n\n----------------------------------------\n\nTITLE: Markdown Header with Anchor\nDESCRIPTION: Simple markdown header structure with an anchor tag for navigation.\nSOURCE: https://github.com/qdrant/qdrant/blob/master/docs/grpc/docs.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Protocol Documentation\n<a name=\"top\"></a>\n```"
  }
]
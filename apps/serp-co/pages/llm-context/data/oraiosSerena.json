[
  {
    "owner": "oraios",
    "repo": "serena",
    "content": "TITLE: Installing Serena with Optional Requirements\nDESCRIPTION: This shell command installs Serena with optional requirements using UV. It allows selection of specific extras like 'agno,google' or 'agno,anthropic', or installs all extras.\nSOURCE: https://github.com/oraios/serena/blob/main/README.md#2025-04-18_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nuv pip install --all-extras -r pyproject.toml -e .\n```\n\n----------------------------------------\n\nTITLE: Running Serena MCP Server with Goose CLI\nDESCRIPTION: This shell command demonstrates how to configure Serena as a command-line extension in Goose. It specifies the path to the UV executable, the Serena directory, and an optional project file.\nSOURCE: https://github.com/oraios/serena/blob/main/README.md#2025-04-18_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n/abs/path/to/uv run --directory /abs/path/to/serena serena-mcp-server /optional/abs/path/to/project.yml\n```\n\n----------------------------------------\n\nTITLE: Starting Agno Agent with Serena\nDESCRIPTION: This shell command starts the Agno agent application with Serena integration. It uses UV to run a Python script that initializes the Agno agent with Serena's capabilities.\nSOURCE: https://github.com/oraios/serena/blob/main/README.md#2025-04-18_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nuv run python scripts/agno_agent.py\n```\n\n----------------------------------------\n\nTITLE: Configuring Serena MCP Server in JSON Configuration\nDESCRIPTION: JSON configuration snippet for adding the Serena MCP server to an existing configuration. This includes specifying the path to the uv executable, the Serena project directory, and the path to the project configuration file.\nSOURCE: https://github.com/oraios/serena/blob/main/llms-install.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"mcpServers\": {\n         ...\n        \"serena\": {\n            \"command\": \"/abs/path/to/uv\",\n            \"args\": [\"run\", \"--directory\", \"/abs/path/to/serena\", \"serena-mcp-server\", \"/path/to/your/project/.serena/project.yml\"]\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Docker Environment for Serena\nDESCRIPTION: Commands to build and run a Docker container for the Serena development environment. This creates an isolated environment with all dependencies and mounts the current directory as a workspace.\nSOURCE: https://github.com/oraios/serena/blob/main/CONTRIBUTING.md#2025-04-18_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndocker build -t serena .\n\ndocker run -it --rm -v \"$(pwd)\":/workspace serena\n```\n\n----------------------------------------\n\nTITLE: Configuring Serena MCP Server in Claude Desktop JSON\nDESCRIPTION: This JSON snippet shows how to configure the Serena MCP server in Claude Desktop's configuration file. It specifies the command and arguments needed to run Serena, including the path to the project file.\nSOURCE: https://github.com/oraios/serena/blob/main/README.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"mcpServers\": {\n        \"serena\": {\n            \"command\": \"/abs/path/to/uv\",\n            \"args\": [\"run\", \"--directory\", \"/abs/path/to/serena\", \"serena-mcp-server\", \"--project-file\", \"/abs/path/to/myproject.yml\"]\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing uv Package Manager via Shell Scripts\nDESCRIPTION: Command options for installing the uv package manager on different operating systems. For macOS/Linux, a curl command is used to download and execute the install script, while Windows uses PowerShell.\nSOURCE: https://github.com/oraios/serena/blob/main/llms-install.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n```\n\nLANGUAGE: powershell\nCODE:\n```\npowershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n```\n\n----------------------------------------\n\nTITLE: Starting Agno UI for Serena Integration\nDESCRIPTION: These shell commands navigate to the agent-ui directory and start the development server for the Agno UI, which can be used to interact with the Serena-integrated Agno agent.\nSOURCE: https://github.com/oraios/serena/blob/main/README.md#2025-04-18_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncd agent-ui \npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Line Endings for Windows\nDESCRIPTION: Sets Git's core.autocrlf configuration to true on Windows systems to avoid line ending issues when Serena edits files. This command ensures that Serena's file modifications won't result in huge diffs due to line ending differences.\nSOURCE: https://github.com/oraios/serena/blob/main/README.md#2025-04-18_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ngit config --global core.autocrlf true\n```\n\n----------------------------------------\n\nTITLE: Executing Docker Build and Run Script\nDESCRIPTION: Command to execute a shell script that automates the Docker build and run process for the Serena development environment.\nSOURCE: https://github.com/oraios/serena/blob/main/CONTRIBUTING.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbash docker_build_and_run.sh\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents with markdown-toc\nDESCRIPTION: Command to generate and insert a table of contents into the README.md file using the markdown-toc tool.\nSOURCE: https://github.com/oraios/serena/blob/main/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmarkdown-toc -i README.md\n```\n\n----------------------------------------\n\nTITLE: Installing Serena Dependencies with npm\nDESCRIPTION: Command to install the markdown-toc package globally using npm, which is used to generate the table of contents for the README.\nSOURCE: https://github.com/oraios/serena/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g markdown-toc\n```"
  }
]
[
  {
    "owner": "emberjs",
    "repo": "ember-qunit",
    "content": "TITLE: Acceptance Test Migration from moduleForAcceptance to setupApplicationTest\nDESCRIPTION: Example showing how to migrate from the legacy moduleForAcceptance helper to the newer setupApplicationTest pattern for acceptance tests.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/migration.md#2025-04-12_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { test } from 'qunit';\nimport moduleForAcceptance from 'app/tests/helpers/module-for-acceptance';\n\nmoduleForAcceptance('basic acceptance test');\n\ntest('can visit /', function() {\n  visit('/');\n\n  andThen(() => {\n    assert.equal(currentURL(), '/');\n  });\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupApplicationTest } from 'ember-qunit';\nimport { visit, currentURL } from '@ember/test-helpers';\n\nmodule('basic acceptance test', function(hooks) {\n  setupApplicationTest(hooks);\n\n  test('can visit /', async function(assert) {\n    await visit('/');\n    assert.equal(currentURL(), '/');\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Component Test Migration from moduleForComponent to setupRenderingTest\nDESCRIPTION: Example showing how to migrate from the legacy moduleForComponent API to the newer setupRenderingTest pattern for component tests.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/migration.md#2025-04-12_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport { test, moduleForComponent } from 'ember-qunit';\nimport { hbs } from 'ember-cli-htmlbars';\n\nmoduleForComponent('GravatarImageComponent', {\n  integration: true\n});\n\ntest('it renders', function(assert) {\n  this.render(hbs`{{gravatar-image}}`);\n  assert.equal(this.$('img').length, 1);\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport { hbs } from 'ember-cli-htmlbars';\n\nmodule('GravatarImageComponent', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('renders', async function(assert) {\n    await render(hbs`{{gravatar-image}}`);\n    assert.ok(this.element.querySelector('img'));\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Unit Test Migration from Legacy moduleFor to Modern API\nDESCRIPTION: Example showing how to migrate from the legacy moduleFor API to the newer setupTest pattern in ember-qunit for unit tests.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/migration.md#2025-04-12_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport { test, moduleFor } from 'ember-qunit';\n\nmoduleFor('controller:sidebar', 'SidebarController', {\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n});\n\n// Replace this with your real tests.\ntest('exists', function(assert) {\n  let controller = this.subject();\n  assert.ok(controller);\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\n\nmodule('SidebarController', function(hooks) {\n  setupTest(hooks);\n\n  // Replace this with your real tests.\n  test('exists', function(assert) {\n    let controller = this.owner.lookup('controller:sidebar');\n    assert.ok(controller);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Application Test Setup Example\nDESCRIPTION: Example of setting up an application test using setupApplicationTest helper for acceptance testing.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/README.md#2025-04-12_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupApplicationTest } from 'ember-qunit';\nimport { visit, currentURL } from '@ember/test-helpers';\n\nmodule('basic acceptance test', function(hooks) {\n  setupApplicationTest(hooks);\n\n  test('can visit /', async function(assert) {\n    await visit('/');\n    assert.equal(currentURL(), '/');\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Application Test Setup Example\nDESCRIPTION: Example of setting up an application test using setupApplicationTest() helper for acceptance testing.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/README.md#2025-04-12_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupApplicationTest } from 'ember-qunit';\nimport { visit, currentURL } from '@ember/test-helpers';\n\nmodule('basic acceptance test', function(hooks) {\n  setupApplicationTest(hooks);\n\n  test('can visit /', async function(assert) {\n    await visit('/');\n    assert.equal(currentURL(), '/');\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Component Rendering Test Setup\nDESCRIPTION: Example of setting up a rendering test for a component using setupRenderingTest() helper with DOM interaction.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/README.md#2025-04-12_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, find } from '@ember/test-helpers';\nimport { hbs } from 'ember-cli-htmlbars';\n\nmodule('GravatarImageComponent', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('renders', async function() {\n    await render(hbs`{{gravatar-image}}`);\n    assert.ok(find('img'));\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Isolation Validation in Ember-QUnit\nDESCRIPTION: Configuration setup in test-helper.js to enable test isolation validation. This includes importing required dependencies, setting up the application, and starting the test run with isolation validation enabled.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/TEST_ISOLATION_VALIDATION.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// tests/test-helper.js\n\nimport Application from '../app';\nimport config from '../config/environment';\nimport { setApplication } from '@ember/test-helpers';\nimport { start } from 'ember-qunit';\n\nsetApplication(Application.create(config.APP));\n\nstart({\n  setupTestIsolationValidation: true\n});\n```\n\n----------------------------------------\n\nTITLE: Component Rendering Test Example\nDESCRIPTION: Example of setting up a rendering test for a component using setupRenderingTest helper.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/README.md#2025-04-12_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, find } from '@ember/test-helpers';\nimport { hbs } from 'ember-cli-htmlbars';\n\nmodule('GravatarImageComponent', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('renders', async function() {\n    await render(hbs`{{gravatar-image}}`);\n    assert.ok(find('img'));\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Component Integration Testing with ember-qunit\nDESCRIPTION: Demonstrates how to set up and perform integration tests for Ember components using moduleForComponent with integration: true. Shows rendering a component template, setting context values, and testing component output and actions.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/legacy.md#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { hbs } from 'ember-cli-htmlbars';\nimport { test, moduleForComponent } from 'ember-qunit';\n\nmoduleForComponent('x-foo', {\n  integration: true\n});\n\ntest('it renders', function(assert) {\n  assert.expect(2);\n\n  // setup the outer context\n  this.set('value', 'cat');\n  this.on('action', function(result) {\n    assert.equal(result, 'bar', 'The correct result was returned');\n  });\n\n  // render the component\n  this.render(hbs`\n    {{ x-foo value=value action=\"result\" }}\n  `);\n\n  assert.equal(this.$('div>.value').text(), 'cat', 'The component shows the correct value');\n\n  this.$('button').click();\n});\n```\n\n----------------------------------------\n\nTITLE: Controller Testing with ember-qunit\nDESCRIPTION: Demonstrates how to test Ember controllers using the moduleFor helper. This example tests a controller's computed property based on changes to its values without rendering.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/legacy.md#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { test, moduleFor } from 'ember-qunit';\n\nmoduleFor('controller:home');\n\ntest('It can calculate the result', function(assert) {\n  assert.expect(1);\n\n  var subject = this.subject();\n\n  subject.set('value', 'foo');\n  assert.equal(subject.get('result'), 'bar');\n});\n```\n\n----------------------------------------\n\nTITLE: Model Testing with ember-qunit\nDESCRIPTION: Shows how to test Ember Data models using moduleForModel. This example demonstrates testing a model's computed property after setting up relationships with its dependencies explicitly declared in the needs array.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/legacy.md#2025-04-12_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { test, moduleForModel } from 'ember-qunit';\n\nmoduleForModel('user', {\n  needs: ['model:child']\n});\n\ntest('It can set its child', function(assert) {\n  assert.expect(1);\n  var subject = this.subject();\n\n  var child = subject.store.createRecord('child');\n  subject.get('children').pushObject(child);\n\n  assert.equal(subject.get('some-computed-value'), true);\n});\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Testing with ember-qunit\nDESCRIPTION: Shows how to handle asynchronous tests in ember-qunit by returning promises. Includes examples of testing both fulfilled and rejected promises, demonstrating ember-qunit's automatic management of QUnit's start/stop helpers.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/legacy.md#2025-04-12_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// If you return a promise from a test callback it becomes an asyncTest. This\n// is a key difference between ember-qunit and standard QUnit.\ntest('async is awesome', function(assert) {\n  assert.expect(1);\n  var myThing = MyThing.create();\n  // myThing.exampleMethod() returns a promise\n  return myThing.exampleMethod().then(function() {\n    assert.ok(myThing.get('finished'));\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Unit Test Setup Example\nDESCRIPTION: Example of setting up a unit test for a controller using setupTest helper.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/README.md#2025-04-12_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\n\nmodule('SidebarController', function(hooks) {\n  setupTest(hooks);\n\n  // Replace this with your real tests.\n  test('exists', function() {\n    let controller = this.owner.lookup('controller:sidebar');\n    assert.ok(controller);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Unit Test Setup Example\nDESCRIPTION: Example of setting up a unit test for a controller using setupTest() helper.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/README.md#2025-04-12_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\n\nmodule('SidebarController', function(hooks) {\n  setupTest(hooks);\n\n  // Replace this with your real tests.\n  test('exists', function() {\n    let controller = this.owner.lookup('controller:sidebar');\n    assert.ok(controller);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Fixing TypeScript Tests with Explicit Context Typing in ember-qunit\nDESCRIPTION: This code demonstrates how to properly annotate the test function with a type parameter to resolve TypeScript errors when accessing context properties in ember-qunit v6.1.0.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/migration.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { hbs } from 'ember-cli-htmlbars';\nimport type { RenderingTestContext } from '@ember/test-helpers';\n\nmodule('<Greeting />', function (hooks) {\n  setupRenderingTest(hooks);\n\n  test('greets', async function (this: RenderingTestContext, assert) {\n    await render(hbs`<Greeting />`);\n    assert.equal(this.element.textContent?.trim(), 'Hello!');\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: TypeScript Test Using qunit-dom Without Explicit Context Type\nDESCRIPTION: This example shows how using qunit-dom can help avoid the need for explicit test context typing in ember-qunit, as it doesn't rely on this.element.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/migration.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { hbs } from 'ember-cli-htmlbars';\n\nmodule('<Greeting />', function (hooks) {\n  setupRenderingTest(hooks);\n\n  test('greets', async function (assert) {\n    await render(hbs`<Greeting />`);\n    assert.dom().hasText('Hello!');\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Setting up QUnit DOM in test-helper.js for ember-qunit v5\nDESCRIPTION: Code to set up QUnit DOM in the test-helper.js file to prevent 'assert.dom is not a function' errors when using ember-qunit v5.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/migration.md#2025-04-12_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// tests/test-helper.js\nimport * as QUnit from 'qunit';\nimport { setup } from 'qunit-dom';\n\n//...\n\nsetup(QUnit.assert);\n\nsetApplication(Application.create(config.APP));\n\nstart();\n\n//...\n```\n\n----------------------------------------\n\nTITLE: Setting the Resolver for ember-qunit Tests\nDESCRIPTION: Demonstrates how to configure the resolver for ember-qunit tests, showing examples for both default and custom resolvers. This is required for test setup to correctly locate application components.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/legacy.md#2025-04-12_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// if you don't have a custom resolver, do it like this:\nsetResolver(Ember.DefaultResolver.create({ namespace: App }));\n\n// otherwise something like:\nimport Resolver from './path/to/resolver';\nimport { setResolver } from 'ember-qunit';\nsetResolver(Resolver.create());\n```\n\n----------------------------------------\n\nTITLE: Ember QUnit Configuration Setup\nDESCRIPTION: Configuration options for ember-qunit using @embroider/macros in ember-cli-build.js.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/README.md#2025-04-12_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n'use strict';\n\nconst EmberApp = require('ember-cli/lib/broccoli/ember-app');\n\nmodule.exports = function (defaults) {\n  const app = new EmberApp(defaults, {\n    '@embroider/macros': {\n      setConfig: {\n        'ember-qunit': {\n          disableContainerStyles: true,\n          theme: 'qunit-default',\n        },\n      },\n    },\n    /* ... */ \n  });\n\n  /* ... */\n};\n```\n\n----------------------------------------\n\nTITLE: Ember-QUnit Configuration Setup\nDESCRIPTION: Configuration example for ember-qunit in ember-cli-build.js using @embroider/macros.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/README.md#2025-04-12_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n'use strict';\n\nconst EmberApp = require('ember-cli/lib/broccoli/ember-app');\n\nmodule.exports = function (defaults) {\n  const app = new EmberApp(defaults, {\n    '@embroider/macros': {\n      setConfig: {\n        'ember-qunit': {\n          /**\n           * default: false\n           *\n           * removes the CSS for the test-container (where the app and components are rendered to)\n           */\n          disableContainerStyles: true,\n          /**\n           * default: 'qunit-default'\n           * options: 'qunit-default' | 'ember'\n           * \n           * Sets the theme for the Web UI of the test runner. Use a different value to disable loading any theme, allowing you to provide your own external one.\n           */\n          theme: 'qunit-default',\n        },\n      },\n    },\n    /* ... */ \n  });\n\n  /* ... */\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Up Test Helper Configuration\nDESCRIPTION: Basic setup for test helper file to initialize application testing environment with QUnit.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/README.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport Application from '../app';\nimport config from '../config/environment';\nimport { setApplication } from '@ember/test-helpers';\nimport { start } from 'ember-qunit';\n\nsetApplication(Application.create(config.APP));\n\nstart();\n```\n\n----------------------------------------\n\nTITLE: Setting Up Test Helper in Ember Application\nDESCRIPTION: Configuration code for test-helper.js to setup the application for testing with @ember/test-helpers.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/README.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport Application from '../app';\nimport config from '../config/environment';\nimport { setApplication } from '@ember/test-helpers';\nimport { start } from 'ember-qunit';\n\nsetApplication(Application.create(config.APP));\n\nstart();\n```\n\n----------------------------------------\n\nTITLE: Required DOM Fixtures for tests/index.html in ember-qunit v5\nDESCRIPTION: HTML snippet that must be added to tests/index.html in ember-qunit v5 to provide the necessary DOM structure for tests.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/migration.md#2025-04-12_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"qunit\"></div>\n<div id=\"qunit-fixture\">\n  <div id=\"ember-testing-container\">\n    <div id=\"ember-testing\"></div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Testing Rejected Promises with ember-qunit\nDESCRIPTION: Demonstrates how to test that a promise should be rejected using the catch method. This pattern allows asserting on expected promise rejections and their error messages.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/legacy.md#2025-04-12_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ntest('sometimes async gets rejected', function(assert) {\n  assert.expect(1);\n  var myThing = MyThing.create()\n\n  return myThing.exampleMethod().then(function() {\n    assert.ok(false, \"promise should not be fulfilled\");\n  })['catch'](function(err) {\n    assert.equal(err.message, \"User not Authorized\");\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Loading Tests with AMD Loader\nDESCRIPTION: Setup for loading tests in AMD environments before starting the test runner.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/README.md#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport Application from '../app';\nimport config from '../config/environment';\nimport { setApplication } from '@ember/test-helpers';\nimport { start } from 'ember-qunit';\nimport { loadTests } from 'ember-qunit/test-loader';\n\nsetApplication(Application.create(config.APP));\n\nloadTests()\nstart();\n```\n\n----------------------------------------\n\nTITLE: Loading Tests with AMD Loader\nDESCRIPTION: Setup code for loading tests when using AMD loader, showing how to use loadTests() before starting the test framework.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/README.md#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport Application from '../app';\nimport config from '../config/environment';\nimport { setApplication } from '@ember/test-helpers';\nimport { start } from 'ember-qunit';\nimport { loadTests } from 'ember-qunit/test-loader';\n\nsetApplication(Application.create(config.APP));\n\nloadTests()\nstart();\n```\n\n----------------------------------------\n\nTITLE: Markdown Version Entry v4.5.0\nDESCRIPTION: Changelog entry for version 4.5.0 documenting enhancements, bug fixes and internal changes\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/CHANGELOG.md#2025-04-12_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## v4.5.0 (2019-07-30)\n\n#### :rocket: Enhancement\n* [#507](https://github.com/emberjs/ember-qunit/pull/507) Upgrade @ember/test-helpers to 1.6.0. ([@rwjblue](https://github.com/rwjblue))\n* [#483](https://github.com/emberjs/ember-qunit/pull/483) Deprecate legacy test APIs ([@chadhietala](https://github.com/chadhietala))\n```\n\n----------------------------------------\n\nTITLE: Markdown Bug Fix Entry v4.5.0\nDESCRIPTION: Bug fix section for version 4.5.0 documenting fixes for test isolation validation and pauseTest timeout\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/CHANGELOG.md#2025-04-12_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n#### :bug: Bug Fix\n* [#526](https://github.com/emberjs/ember-qunit/pull/526) Fix error message for test isolation validation ([@scalvert](https://github.com/scalvert))\n* [#497](https://github.com/emberjs/ember-qunit/pull/497) Work around issue with pauseTest() timing out. ([@rwjblue](https://github.com/rwjblue))\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies for ember-qunit v5\nDESCRIPTION: Command to install required peer dependencies (qunit and @ember/test-helpers) when upgrading to ember-qunit v5.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/migration.md#2025-04-12_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n# npm users\nnpm install --save-dev qunit \"@ember/test-helpers\"\n\n# yarn users\nyarn add --dev qunit \"@ember/test-helpers\"\n```\n\n----------------------------------------\n\nTITLE: Installing Ember-QUnit Package\nDESCRIPTION: Command to install ember-qunit package version 4.2.0 or higher using the Ember CLI.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/TEST_ISOLATION_VALIDATION.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nember install ember-qunit\n```\n\n----------------------------------------\n\nTITLE: Installing Ember-QUnit Package\nDESCRIPTION: Command to install ember-qunit using Ember CLI package manager.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/README.md#2025-04-12_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ ember install ember-qunit\n```\n\n----------------------------------------\n\nTITLE: Installing ember-qunit Package\nDESCRIPTION: Command to install ember-qunit addon using Ember CLI package manager.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/README.md#2025-04-12_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ ember install ember-qunit\n```\n\n----------------------------------------\n\nTITLE: Installing Ember QUnit Development Environment\nDESCRIPTION: Commands for cloning the repository and installing dependencies using pnpm package manager\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/CONTRIBUTING.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone <repository-url>\ncd ember-qunit\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Ember-QUnit Development Environment\nDESCRIPTION: Commands for cloning the repository and installing dependencies using pnpm package manager.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/CONTRIBUTING.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone <repository-url>\\ncd ember-qunit\\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing the Ember-QUnit Test App\nDESCRIPTION: Commands for cloning the repository and installing dependencies for the ember-qunit test application using Git and pnpm.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-app/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone <repository-url>\ncd test-app\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing the Test App with Git and Package Manager\nDESCRIPTION: Commands for cloning the repository and installing dependencies using pnpm.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-buildtime-options-app/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone <repository-url>\ncd test-app\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Ember Tests\nDESCRIPTION: Commands for running the test suite in different modes including single run, watch mode, and cross-version testing\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/CONTRIBUTING.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nember test\nember test --server\nember try:each\n```\n\n----------------------------------------\n\nTITLE: Executing Ember Tests\nDESCRIPTION: Commands for running the test suite in different modes and against multiple Ember versions.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/CONTRIBUTING.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nember test\\nember test --server\\nember try:each\n```\n\n----------------------------------------\n\nTITLE: Running Ember-QUnit Tests\nDESCRIPTION: Commands for running tests in Ember, both as a one-time execution and in server mode for continuous testing during development.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-app/README.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nember test\nember test --server\n```\n\n----------------------------------------\n\nTITLE: Running Ember Tests\nDESCRIPTION: Commands for running tests with Ember CLI, either as a one-time operation or in continuous server mode.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-buildtime-options-app/README.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nember test\nember test --server\n```\n\n----------------------------------------\n\nTITLE: Running Linting Commands\nDESCRIPTION: Commands for running linting checks and auto-fixing linting issues\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/CONTRIBUTING.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint\npnpm lint:fix\n```\n\n----------------------------------------\n\nTITLE: Running Linting Commands\nDESCRIPTION: Commands for running linting checks and auto-fixing linting issues using pnpm scripts.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/CONTRIBUTING.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint\\npnpm lint:fix\n```\n\n----------------------------------------\n\nTITLE: Running the Ember-QUnit Test App Server\nDESCRIPTION: Command to start the Ember development server for local testing and development.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-app/README.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nember serve\n```\n\n----------------------------------------\n\nTITLE: Running the Ember Development Server\nDESCRIPTION: Command to start the Ember development server for local testing and development.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-buildtime-options-app/README.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nember serve\n```\n\n----------------------------------------\n\nTITLE: Starting Ember Development Server\nDESCRIPTION: Command for starting the development server to run the dummy application\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/CONTRIBUTING.md#2025-04-12_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nember serve\n```\n\n----------------------------------------\n\nTITLE: Starting Ember Development Server\nDESCRIPTION: Commands for running the development server and accessing the dummy application.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/CONTRIBUTING.md#2025-04-12_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nember serve\n```\n\n----------------------------------------\n\nTITLE: Building the Ember-QUnit Test App\nDESCRIPTION: Commands for building the application in both development and production environments.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-app/README.md#2025-04-12_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nember build\nember build --environment production\n```\n\n----------------------------------------\n\nTITLE: Building the Ember Application\nDESCRIPTION: Commands for building the Ember application for both development and production environments.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-buildtime-options-app/README.md#2025-04-12_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nember build\nember build --environment production\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot Access Controls for Web Crawlers\nDESCRIPTION: A standard robots.txt configuration that specifies crawling permissions for search engines and web crawlers. This configuration allows all user agents (crawlers) to access the entire site with no restrictions.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-app/public/robots.txt#2025-04-12_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# http://www.robotstxt.org\nUser-agent: *\nDisallow:\n```\n\n----------------------------------------\n\nTITLE: Linting the Ember-QUnit Test App\nDESCRIPTION: Commands for checking and fixing code quality using the project's linting configuration with pnpm.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-app/README.md#2025-04-12_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint\npnpm lint:fix\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access in robots.txt\nDESCRIPTION: This snippet defines the default crawling behavior for web robots. It specifies that all user agents (*) are allowed to access all content on the site, as there are no paths listed after the 'Disallow:' directive.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-buildtime-options-app/public/robots.txt#2025-04-12_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\n```\n\n----------------------------------------\n\nTITLE: Linting the Ember Application\nDESCRIPTION: Commands for running linting checks on the codebase and fixing linting issues using pnpm.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/test-buildtime-options-app/README.md#2025-04-12_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint\npnpm lint:fix\n```\n\n----------------------------------------\n\nTITLE: Component Unit Testing with ember-qunit\nDESCRIPTION: Shows how to create unit tests for Ember components by specifying unit: true or including needs:[]. This approach provides direct access to the component instance via this.subject() and requires explicit declaration of dependencies.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/legacy.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { test, moduleForComponent } from 'ember-qunit';\n\nmoduleForComponent('x-foo', {\n  unit: true,\n  needs: ['helper:pluralize-string']\n});\n\n// run a test\ntest('it renders', function(assert) {\n  assert.expect(1);\n\n  // creates the component instance\n  var subject = this.subject();\n\n  // render the component on the page\n  this.render();\n  assert.equal(this.$('.foo').text(), 'bar');\n});\n```\n\n----------------------------------------\n\nTITLE: Listing PR Labels for Release Process in Markdown\nDESCRIPTION: This snippet lists the labels used for categorizing pull requests during the release process. It includes labels for breaking changes, enhancements, bug fixes, documentation updates, and internal changes.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/addon/RELEASE.md#2025-04-12_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- breaking - Used when the PR is considered a breaking change.\n- enhancement - Used when the PR adds a new feature or enhancement.\n- bug - Used when the PR fixes a bug included in a previous release.\n- documentation - Used when the PR adds or updates documentation.\n- internal - Internal changes or things that don't fit in any other category.\n```\n\n----------------------------------------\n\nTITLE: Type Error Example with TypeScript in ember-qunit v6.1.0\nDESCRIPTION: This example shows a test that would produce type errors in ember-qunit v6.1.0 due to the use of this.element without proper typing information.\nSOURCE: https://github.com/emberjs/ember-qunit/blob/main/docs/migration.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { hbs } from 'ember-cli-htmlbars';\n\nmodule('<Greeting />', function (hooks) {\n  setupRenderingTest(hooks);\n\n  test('greets', async function (assert) {\n    await render(hbs`<Greeting />`);\n    assert.equal(this.element.textContent?.trim(), 'Hello!');\n  });\n});\n```"
  }
]
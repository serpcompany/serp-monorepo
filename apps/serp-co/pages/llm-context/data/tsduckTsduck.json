[
  {
    "owner": "tsduck",
    "repo": "tsduck",
    "content": "TITLE: PAT and PMT Processing Pipeline\nDESCRIPTION: Series of TSP plugin commands to handle PAT and PMT processing, including PID filtering and table injection with specific bitrates.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/packager/README.txt#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n-P filter --pid 0 --pid $PMT_PID --negate --stuffing\n-P inject \"$TMPFILE.pat.bin\" --pid 0 --bitrate $PAT_BITRATE --stuffing\n-P inject \"$TMPFILE.pmt.bin\" --pid $PMT_PID --bitrate $PMT_BITRATE --stuffing\n```\n\n----------------------------------------\n\nTITLE: Installing TSDuck Extension on UNIX Systems\nDESCRIPTION: A bash command to source the install.sh script, which builds TSDuck and the 'foo' extension, installing them in a temporary location in the project's 'bin' area.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsource install.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring TSDuck Docker Container with Alpine Linux\nDESCRIPTION: This Dockerfile builds a TSDuck container image based on Alpine Linux. It installs TSDuck in default system locations, making all usual commands and plugins available. Support for external devices is removed due to container limitations.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/pkg/docker/README.md#2025-04-22_snippet_0\n\nLANGUAGE: dockerfile\nCODE:\n```\n# Sample Docker packaging\n\nThis `Dockerfile` builds a container image named `tsduck`. This image is based on\nAlpine Linux, a lightweigth Linux distribution which is commonly used in containers.\n\nIn the `tsduck` container, TSDuck is installed in the default system locations.\nAll usual TSDuck commands and plugins are available.\n\nBecause containers are usually not able to access host devices, support for\nexternal devices is removed: smartcards (PCSC), Dektec, Vatek, and HiDes devices.\n\nOther forms of TSDuck containers can be built based on this example.\nPlease note the following:\n\n- To listen on incoming UDP or TCP ports, do not forget to add the corresponding\n  `EXPOSE` directives in `Dockerfile`.\n- If you find a way to use Dektec devices in the container, use another base\n  container image, for instance `ubuntu`. Alpine Linux is not able to support\n  Dektec devices because of the musl libc which is used instead of glibc.\n```\n\n----------------------------------------\n\nTITLE: Setting up TSDuck Environment on Linux/macOS\nDESCRIPTION: Bash commands to set up the environment and run a sample Python application on Linux/macOS systems.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-python/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsource ../../scripts/setenv.sh\n./sample-tsp.py\n```\n\n----------------------------------------\n\nTITLE: Compiling and Running Java Sample (Bash)\nDESCRIPTION: This snippet shows how to compile and run the SampleTSP Java program using Bash on Linux or macOS. It sets up the environment, compiles the Java file, and executes it.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-java/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsource ../../scripts/setenv.sh\njavac SampleTSP.java\njava SampleTSP\n```\n\n----------------------------------------\n\nTITLE: Setting up TSDuck Environment on Windows\nDESCRIPTION: PowerShell commands to set up the environment and run a sample Python application on Windows systems.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-python/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n..\\..\\scripts\\setenv.ps1\n.\\sample-tsp.py\n```\n\n----------------------------------------\n\nTITLE: Compiling and Running Java Sample (PowerShell)\nDESCRIPTION: This snippet demonstrates how to compile and run the SampleTSP Java program using PowerShell on Windows. It sets up the environment, compiles the Java file, and executes it.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-java/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n..\\..\\scripts\\setenv.ps1\njavac SampleTSP.java\njava SampleTSP\n```\n\n----------------------------------------\n\nTITLE: Setting Up org.json and Running SampleAnalyzeTS (PowerShell)\nDESCRIPTION: This snippet demonstrates how to set up the org.json dependency, compile, and run the SampleAnalyzeTS Java program using PowerShell on Windows. It includes downloading org.json, setting the classpath, and executing the program with a TS file input.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-java/README.txt#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n..\\..\\scripts\\setenv.ps1\n.\\get-org-json.ps1 -NoPause\n$env:CLASSPATH=\"org.json.jar;$env:CLASSPATH\"\njavac SampleAnalyzeTS.java\njava SampleAnalyzeTS some-ts-file-to-analyze.ts\n```\n\n----------------------------------------\n\nTITLE: Building TSDuck Debian Packages with Make Command\nDESCRIPTION: Command examples for building tsduck and tsduck-dev packages on Debian-based Linux distributions. The commands can be run either from the current directory or from the TSDuck root directory.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/pkg/deb/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nmake\n```\n\nLANGUAGE: markdown\nCODE:\n```\nmake installer\n```\n\n----------------------------------------\n\nTITLE: Configuring DVB-S and DVB-S2 Satellite Transponders\nDESCRIPTION: This code snippet contains a list of command-line arguments for configuring satellite transponders. Each line represents a unique transponder configuration with parameters such as frequency, polarity, symbol rate, FEC, delivery system, and modulation type. These settings are crucial for tuning satellite receivers to specific transponders.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/lyngsat/LyngSat-Astra-19.2E.txt#2025-04-22_snippet_1\n\nLANGUAGE: plain text\nCODE:\n```\n--frequency 12552000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 12574000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12604000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 12633000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 12663000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 12692000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 12728000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18507000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18511000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18515000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18519000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18523000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18527000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18531000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18534000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18539000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18543000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18557000000 --polarity H --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18559000000 --polarity H --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18573000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18577000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18581000000 --polarity V --symbol-rate 3330000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18585000000 --polarity V --symbol-rate 3630000 --fec 1/2 --delivery DVB-S2 --modulation QPSK\n--frequency 18592000000 --polarity V --symbol-rate 3330000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18607000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation QPSK\n--frequency 18611000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation QPSK\n--frequency 18615000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18619000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18623000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation QPSK\n--frequency 18627000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation QPSK\n--frequency 18631000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18635000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation QPSK\n--frequency 18643000000 --polarity V --symbol-rate 3630000 --fec 2/3 --delivery DVB-S2 --modulation QPSK\n--frequency 18710000000 --polarity V --symbol-rate 3330000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 18755000000 --polarity H --symbol-rate 5500000 --fec 4/5 --delivery DVB-S2 --modulation QPSK\n--frequency 18762000000 --polarity H --symbol-rate 5500000 --fec 4/5 --delivery DVB-S2 --modulation QPSK\n--frequency 18767000000 --polarity H --symbol-rate 3110000 --fec 1/2 --delivery DVB-S2 --modulation QPSK\n--frequency 18774000000 --polarity H --symbol-rate 5500000 --fec 4/5 --delivery DVB-S2 --modulation QPSK\n```\n\n----------------------------------------\n\nTITLE: Configuring Satellite Transponder Parameters\nDESCRIPTION: This snippet provides configuration parameters for a satellite transponder. It specifies the frequency, polarity, symbol rate, FEC, delivery system, and modulation type. These parameters are essential for tuning to the correct satellite signal.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/lyngsat/LyngSat-HotBird-13E.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n--frequency 10719000000 --polarity V --symbol-rate 27500000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n```\n\n----------------------------------------\n\nTITLE: TSP Command for Initial Stuffing and ECM Insertion\nDESCRIPTION: TSP commands to add initial stuffing packets before the input file and insert regular null packets for ECM insertion. The initial stuffing creates a transition period, while the 1/20 ratio ensures space for ECM packets.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/packager/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--add-start-stuffing $INIT_PACKETS --add-input-stuffing 1/20\n```\n\n----------------------------------------\n\nTITLE: Building TSDuck Documentation on Unix Systems\nDESCRIPTION: Command for building user and developer guides on Unix systems using make.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake\n```\n\n----------------------------------------\n\nTITLE: Analyzing Foo ECM Packet Structure in TSDuck\nDESCRIPTION: Breakdown of a Foo ECM (even) packet with TID 0x80 and PID 0x0103. It shows the section structure including the Foo id and data content.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/demo/demo.tstables1.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n* Foo ECM (even), TID 0x80 (128), PID 0x0103 (259)\n  Short section, total size: 10 bytes\n  - Section 0:\n    Foo id: 0x0123\n    Data (5 bytes): 09 87 65 43 21\n```\n\n----------------------------------------\n\nTITLE: Building TSDuck Programming Reference on Windows\nDESCRIPTION: PowerShell command for generating the programming reference documentation using Doxygen on Windows.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/README.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n.\\doxy\\build-doxygen.ps1\n```\n\n----------------------------------------\n\nTITLE: Program Association Table (PAT) Analysis\nDESCRIPTION: Shows PAT table with transport stream ID 1 mapping programs 700 and 701 to their respective PIDs 5000 and 5002\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-tables.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n* PAT, TID 0 (0x00), PID 0 (0x0000)\n  Version: 0, sections: 1, total size: 20 bytes\n  - Section 0:\n    TS id:       1 (0x0001)\n    Program:   700 (0x02BC)  PID: 5000 (0x1388)\n    Program:   701 (0x02BD)  PID: 5002 (0x138A)\n```\n\n----------------------------------------\n\nTITLE: Sample Output - Transport Stream Analysis\nDESCRIPTION: Console output demonstrating the application's analysis of DVB and ATSC transport streams, showing service detection and component information through the handleService() method calls.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-sig-demux/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ ./myexec tnt-uhf30-546MHz-2019-01-22.ts 473.ts\n==== Analyzing tnt-uhf30-546MHz-2019-01-22.ts\n-- Got PAT, 5 services\n-- Got service 0x0401 (1025), no PMT\n-- Got service 0x0402 (1026), no PMT\n-- Got service 0x0407 (1031), no PMT\n-- Got service 0x0415 (1045), no PMT\n-- Got service 0x0416 (1046), no PMT\n-- Got PMT, service id 1026, 8 components\n-- Got service 0x0402 (1026), 8 components\n-- Got PMT, service id 1045, 6 components\n-- Got service 0x0415 (1045), 6 components\n-- Got PMT, service id 1025, 8 components\n-- Got service 0x0401 (1025), 8 components\n-- Got PMT, service id 1031, 10 components\n-- Got service 0x0407 (1031), 10 components\n-- Got PMT, service id 1046, 8 components\n-- Got service 0x0416 (1046), 8 components\n-- Got SDT Actual, TS id 4, 5 services\n-- Got service \"M6\", 0x0401 (1025), 8 components\n-- Got service \"W9\", 0x0402 (1026), 8 components\n-- Got service \"Arte\", 0x0407 (1031), 10 components\n-- Got service \"France 5\", 0x0415 (1045), 6 components\n-- Got service \"6ter\", 0x0416 (1046), 8 components\n-- Got NIT Actual, network id 8442, 7 TS\n-- Got service \"M6\", 0x0401 (1025), #6, 8 components\n-- Got service \"W9\", 0x0402 (1026), #9, 8 components\n-- Got service \"Arte\", 0x0407 (1031), #7, 10 components\n-- Got service \"France 5\", 0x0415 (1045), #5, 6 components\n-- Got service \"6ter\", 0x0416 (1046), #22, 8 components\n==== Analyzing 473.ts\n-- Got TVCT (ATSC), 4 channels\n-- Got service \"KULX   \", 10.1, 0x0003 (3), no PMT\n-- Got service \"TelXito\", 10.2, 0x0004 (4), no PMT\n-- Got service \"LightTV\", 10.3, 0x0005 (5), no PMT\n-- Got service \"Quest  \", 10.4, 0x0006 (6), no PMT\n-- Got PAT, 4 services\n-- Got service \"KULX   \", 10.1, 0x0003 (3), no PMT\n-- Got service \"TelXito\", 10.2, 0x0004 (4), no PMT\n-- Got service \"LightTV\", 10.3, 0x0005 (5), no PMT\n-- Got service \"Quest  \", 10.4, 0x0006 (6), no PMT\n-- Got PMT, service id 4, 2 components\n-- Got service \"TelXito\", 10.2, 0x0004 (4), 2 components\n-- Got PMT, service id 3, 2 components\n-- Got service \"KULX   \", 10.1, 0x0003 (3), 2 components\n-- Got PMT, service id 6, 2 components\n-- Got service \"Quest  \", 10.4, 0x0006 (6), 2 components\n-- Got PMT, service id 5, 2 components\n-- Got service \"LightTV\", 10.3, 0x0005 (5), 2 components\n```\n\n----------------------------------------\n\nTITLE: Program Map Table (PMT) for Service 700\nDESCRIPTION: PMT for program 700 showing elementary stream configuration for IP/MAC Notification service\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-tables.txt#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n* PMT, TID 2 (0x02), PID 5000 (0x1388)\n  Version: 0, sections: 1, total size: 25 bytes\n  - Section 0:\n    Program: 700 (0x02BC), PCR PID: none\n    Elementary stream: type 0x05 (MPEG-2 Private sections), PID: 5001 (0x1389)\n    - Descriptor 0: Data Broadcast Id (0x66, 102), 2 bytes\n      Data broadcast id: 0x000B (11, IP/MAC Notification service)\n```\n\n----------------------------------------\n\nTITLE: IP/MAC Notification Table (INT) Analysis\nDESCRIPTION: INT table containing platform information and IP/MAC stream location details for multicast address 230.2.3.4\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-tables.txt#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n* INT (IP/MAC Notification), TID 76 (0x4C), PID 5001 (0x1389)\n  Version: 0, sections: 1, total size: 60 bytes\n  - Section 0:\n    Platform id: 0x123456 (unknown)\n    Action type: 0x01, processing order: 0x00, id hash: 0x70 (valid)\n    Platform descriptors:\n      - Descriptor 0: INT IP/MAC Platform Name (0x0C, 12), 7 bytes\n        Language: eng\n        Platform name: Demo\n      - Descriptor 1: INT IP/MAC Platform Provider Name (0x0D, 13), 9 bytes\n        Language: eng\n        Platform name: TSDuck\n    Device #0\n      Target descriptors:\n        - Descriptor 0: INT Target IP Slash (0x0F, 15), 5 bytes\n          Address/mask: 230.2.3.4/32\n      Operational descriptors:\n        - Descriptor 0: INT IP/MAC Stream Location (0x13, 19), 9 bytes\n          Network id: 0x0001 (1)\n          Original network id: 0x0001 (1)\n          Transport stream id: 0x0001 (1)\n          Service id: 0x02BD (701)\n          Component tag: 0x01 (1)\n```\n\n----------------------------------------\n\nTITLE: Configuring DVB-S2 Satellite Transponders\nDESCRIPTION: This snippet provides configuration parameters for multiple DVB-S2 satellite transponders. Each line represents a unique transponder with its frequency, polarity, symbol rate, FEC, delivery system, and modulation settings.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/lyngsat/LyngSat-AtlanticBird-5W-A.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n--frequency 11031000000 --polarity H --symbol-rate 3600000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11043000000 --polarity H --symbol-rate 6975000 --fec 5/6 --delivery DVB-S2 --modulation QPSK\n--frequency 11061000000 --polarity H --symbol-rate 6975000 --fec 5/6 --delivery DVB-S2 --modulation QPSK\n--frequency 11070000000 --polarity H --symbol-rate 6975000 --fec 5/6 --delivery DVB-S2 --modulation QPSK\n--frequency 11536000000 --polarity H --symbol-rate 4800000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11542000000 --polarity H --symbol-rate 4800000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11548000000 --polarity H --symbol-rate 4800000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11554000000 --polarity H --symbol-rate 4800000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11560000000 --polarity H --symbol-rate 4800000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11569000000 --polarity H --symbol-rate 2222000 --fec 3/4 --delivery DVB-S2 --modulation QPSK\n--frequency 11644000000 --polarity H --symbol-rate 3600000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n```\n\n----------------------------------------\n\nTITLE: Configuring DVB-S/S2 Transponder Parameters\nDESCRIPTION: Command-line parameters for configuring satellite transponder settings. Includes frequency (Hz), polarity (H/V), symbol rate (symbols/sec), forward error correction (FEC) ratio, delivery system (DVB-S/S2), and modulation scheme (QPSK/8-PSK).\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/lyngsat/LyngSat-AtlanticBird-5W-B.txt#2025-04-22_snippet_0\n\nLANGUAGE: config\nCODE:\n```\n--frequency 10972000000 --polarity V --symbol-rate 29950000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n```\n\n----------------------------------------\n\nTITLE: Configuring DVB-S and DVB-S2 Satellite Transponders\nDESCRIPTION: This code snippet provides a comprehensive list of satellite transponder configurations. Each line represents a unique transponder setting, specifying parameters such as frequency, polarity, symbol rate, FEC (Forward Error Correction), delivery system (DVB-S or DVB-S2), and modulation scheme.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/lyngsat/LyngSat-Astra-19.2E.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n--frequency 10714000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10729000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10744000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 10758000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 10773000000 --polarity H --symbol-rate 22000000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10788000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 10803000000 --polarity H --symbol-rate 22000000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10818000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10832000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10847000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 10862000000 --polarity H --symbol-rate 23500000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10876000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 10891000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10906000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10921000000 --polarity H --symbol-rate 22000000 --fec 7/8 --delivery DVB-S --modulation QPSK\n--frequency 10936000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10964000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 10979000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 10994000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11023000000 --polarity H --symbol-rate 23500000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11038000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11053000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11068000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11082000000 --polarity H --symbol-rate 22000000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11097000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11112000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11127000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11156000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11171000000 --polarity H --symbol-rate 22000000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11214000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11229000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11244000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11259000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11273000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11288000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11303000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11318000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11347000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11362000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11377000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11391000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11421000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11436000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11464000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11494000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11509000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11523000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11538000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11553000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11582000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11597000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11612000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11627000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11656000000 --polarity V --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11671000000 --polarity H --symbol-rate 22000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11686000000 --polarity V --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 11720000000 --polarity H --symbol-rate 27500000 --fec 9/10 --delivery DVB-S2 --modulation QPSK\n--frequency 11758000000 --polarity H --symbol-rate 27500000 --fec 9/10 --delivery DVB-S2 --modulation QPSK\n--frequency 11778000000 --polarity V --symbol-rate 29500000 --fec 9/10 --delivery DVB-S2 --modulation QPSK\n--frequency 11798000000 --polarity H --symbol-rate 27500000 --fec 9/10 --delivery DVB-S2 --modulation QPSK\n--frequency 11817000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11836000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 11856000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11876000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11895000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11914000000 --polarity H --symbol-rate 27500000 --fec 9/10 --delivery DVB-S2 --modulation QPSK\n--frequency 11934000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 11954000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 11973000000 --polarity V --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 11992000000 --polarity H --symbol-rate 27500000 --fec 9/10 --delivery DVB-S2 --modulation QPSK\n--frequency 12012000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12032000000 --polarity H --symbol-rate 27500000 --fec 9/10 --delivery DVB-S2 --modulation QPSK\n--frequency 12051000000 --polarity V --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 12070000000 --polarity H --symbol-rate 27500000 --fec 9/10 --delivery DVB-S2 --modulation QPSK\n--frequency 12090000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12110000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 12148000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 12168000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12188000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 12207000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12226000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 12246000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12266000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 12285000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12304000000 --polarity H --symbol-rate 27500000 --fec 9/10 --delivery DVB-S2 --modulation QPSK\n--frequency 12324000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12344000000 --polarity H --symbol-rate 30000000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12382000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12402000000 --polarity V --symbol-rate 29700000 --fec 2/3 --delivery DVB-S2 --modulation 8-PSK\n--frequency 12422000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 12460000000 --polarity H --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 12480000000 --polarity V --symbol-rate 27500000 --fec 3/4 --delivery DVB-S --modulation QPSK\n--frequency 12515000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n--frequency 12545000000 --polarity H --symbol-rate 22000000 --fec 5/6 --delivery DVB-S --modulation QPSK\n```\n\n----------------------------------------\n\nTITLE: Service Description Table (SDT) Analysis\nDESCRIPTION: Details SDT Actual containing service information for two data broadcast services with IDs 700 and 701\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-tables.txt#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n* SDT Actual, TID 66 (0x42), PID 17 (0x0011)\n  Version: 0, sections: 1, total size: 69 bytes\n  - Section 0:\n    Transport Stream Id: 1 (0x0001)\n    Original Network Id: 1 (0x0001)\n    Service Id: 700 (0x02BC), EITs: no, EITp/f: no, CA mode: free\n    Running status: running\n    - Descriptor 0: Service (0x48, 72), 23 bytes\n      Service type: 0x0C (Data broadcast service)\n      Service: \"MPE Demo (INT)\", Provider: \"TSDuck\"\n    Service Id: 701 (0x02BD), EITs: no, EITp/f: no, CA mode: free\n    Running status: running\n    - Descriptor 0: Service (0x48, 72), 17 bytes\n      Service type: 0x0C (Data broadcast service)\n      Service: \"MPE Demo\", Provider: \"TSDuck\"\n```\n\n----------------------------------------\n\nTITLE: Tables and Sections Analysis Report\nDESCRIPTION: Detailed analysis of various PIDs including PAT, SDT/BAT, PMT and DSM-CC sections showing repetition rates, section counts, version numbers and service information.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-analysis.txt#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n|  TABLES & SECTIONS ANALYSIS REPORT                                          |\n|=============================================================================|\n|  PID: 0x0000 (0)                                                       PAT  |\n|-----------------------------------------------------------------------------|\n|  0x00 (0, PAT), TID ext: 0x0001 (1)                                         |\n|      Repetition: ...... 11  ms  Section cnt: .... 2,700                     |\n|      Min repet.: ....... 0  ms  Table cnt: ...... 2,700                     |\n|      Max repet.: ..... 100  ms  Version: ............ 0                     |\n|=============================================================================|\n|  PID: 0x0011 (17)                                                  SDT/BAT  |\n|-----------------------------------------------------------------------------|\n|  0x42 (66, SDT Actual), TID ext: 0x0001 (1)                                 |\n|      Repetition: ...... 37  ms  Section cnt: ...... 793                     |\n|      Min repet.: ....... 0  ms  Table cnt: ........ 793                     |\n|      Max repet.: ..... 100  ms  Version: ............ 0                     |\n|=============================================================================|\n|  PID: 0x1388 (5000)                                                    PMT  |\n|  Service: 0x02BC (700) MPE Demo (INT)                                       |\n|-----------------------------------------------------------------------------|\n|  0x02 (2, PMT), TID ext: 0x02BC (700)                                       |\n|      Repetition: ...... 13  ms  Section cnt: .... 2,174                     |\n|      Min repet.: ....... 0  ms  Table cnt: ...... 2,174                     |\n|      Max repet.: ..... 100  ms  Version: ............ 0                     |\n|=============================================================================|\n|  PID: 0x1389 (5001)                          MPEG-2 Private sections (INT)  |\n|  Service: 0x02BC (700) MPE Demo (INT)                                       |\n|-----------------------------------------------------------------------------|\n|  0x4C (76, INT (IP/MAC Notification)), TID ext: 0x0170 (368)                |\n|      Repetition: ...... 33  ms  Section cnt: ...... 900                     |\n|      Min repet.: ....... 0  ms  Table cnt: ........ 900                     |\n|      Max repet.: ..... 100  ms  Version: ............ 0                     |\n|=============================================================================|\n|  PID: 0x138A (5002)                                                    PMT  |\n|  Service: 0x02BD (701) MPE Demo                                             |\n|-----------------------------------------------------------------------------|\n|  0x02 (2, PMT), TID ext: 0x02BD (701)                                       |\n|      Repetition: ...... 15  ms  Section cnt: .... 1,950                     |\n|      Min repet.: ....... 0  ms  Table cnt: ...... 1,950                     |\n|      Max repet.: ..... 100  ms  Version: ............ 0                     |\n|=============================================================================|\n|  PID: 0x138B (5003)                                  DSM-CC Sections (MPE)  |\n|  Service: 0x02BD (701) MPE Demo                                             |\n|-----------------------------------------------------------------------------|\n|  0x3E (62, DSM-CC PD), TID ext: 0x0403 (1027)                               |\n|      Repetition: ....... 1  ms  Section cnt: ... 16,469                     |\n|      Min repet.: ....... 0  ms  Table cnt: ..... 16,469                     |\n|      Max repet.: ..... 412  ms  Version: ............ 0                     |\n```\n\n----------------------------------------\n\nTITLE: Disabling Dektec Support in Make Command\nDESCRIPTION: Demonstrates the make command to disable Dektec support and remove DTAPI dependency in TSDuck build process.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\nmake NODEKTEC=1\n```\n\n----------------------------------------\n\nTITLE: Setting Up org.json and Running SampleAnalyzeTS (Bash)\nDESCRIPTION: This snippet shows how to set up the org.json dependency, compile, and run the SampleAnalyzeTS Java program using Bash on Linux or macOS. It includes downloading org.json, setting the classpath, and executing the program with a TS file input.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-java/README.txt#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsource ../../scripts/setenv.sh\n./get-org-json.sh\nexport CLASSPATH=\"org.json.jar:$CLASSPATH\"\njavac SampleAnalyzeTS.java\njava SampleAnalyzeTS some-ts-file-to-analyze.ts\n```\n\n----------------------------------------\n\nTITLE: Parsing FOOT Packet Structure in TSDuck\nDESCRIPTION: Detailed analysis of a FOOT packet with TID 0xF0 and PID 0x0104. It includes version information, section count, and multiple descriptors including Private Data Specifier, Foo, and Extension Descriptor.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/demo/demo.tstables1.txt#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n* FOOT, TID 0xF0 (240), PID 0x0104 (260)\n  Version: 0, sections: 1, total size: 72 bytes\n  - Section 0:\n    Foo id: 0x0123 (291), name: \"foolish-table\"\n    - Descriptor 0: Private Data Specifier (0x5F, 95), 4 bytes\n      Specifier: 0x464F4F20 (Foo Demo)\n    - Descriptor 1: Foo (0xE8, 232), 18 bytes\n      Name: \"foolish-descriptor\"\n    - Descriptor 2: Extension Descriptor (0x7F, 127), 16 bytes\n      Extended descriptor: Message (0x08, 8)\n      Message id: 32, language: eng\n      Message: \"The message\"\n```\n\n----------------------------------------\n\nTITLE: Examining Foo EMM-6 Packet Structure in TSDuck\nDESCRIPTION: Analysis of a Foo EMM-6 packet with TID 0x88 and PID 0x0200. It shows the short section structure including the Foo id and data content.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/demo/demo.tstables1.txt#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n* Foo EMM-6, TID 0x88 (136), PID 0x0200 (512)\n  Short section, total size: 9 bytes\n  - Section 0:\n    Foo id: 0x0123\n    Data (4 bytes): 74 12 58 96\n```\n\n----------------------------------------\n\nTITLE: Testing and Debugging Large TS Files in TSDuck\nDESCRIPTION: Script files that implement a dichotomic approach to isolate segments of large transport stream files that cause segmentation faults in tsduck plugin chains. The system progressively narrows down the problematic section to produce the smallest possible file that reproduces the crash.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/segfault/README.txt#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Parsing FOOT Section with Descriptors\nDESCRIPTION: FOOT section with TID 0xF0 on PID 260, containing three descriptors including private data specifier, Foo descriptor, and extension descriptor with a message.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/demo/demo.tstables2.txt#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n* FOOT, TID 0xF0 (240), PID 0x0104 (260)\n  Version: 0, sections: 1, total size: 72 bytes\n  - Section 0:\n    Foo id: 0x0123 (291), name: \"foolish-table\"\n    - Descriptor 0: Private Data Specifier (0x5F, 95), 4 bytes\n      Specifier: 0x464F4F20 (Foo Demo)\n    - Descriptor 1: Foo (0xE8, 232), 18 bytes\n      Name: \"foolish-descriptor\"\n    - Descriptor 2: Extension Descriptor (0x7F, 127), 16 bytes\n      Extended descriptor: Message (0x08, 8)\n      Message id: 32, language: eng\n      Message: \"The message\"\n```\n\n----------------------------------------\n\nTITLE: Linux Build Command\nDESCRIPTION: Make command to build the TSDuck memory plugin applications and run tests across all supported languages.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-memory-plugins/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: makefile\nCODE:\n```\nmake\nmake test\n```\n\n----------------------------------------\n\nTITLE: Parsing Foo EMM-6 Section Data\nDESCRIPTION: EMM-6 section with TID 0x88 on PID 512, containing a 4-byte data payload after the Foo identifier.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/demo/demo.tstables2.txt#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n* Foo EMM-6, TID 0x88 (136), PID 0x0200 (512)\n  Short section, total size: 9 bytes\n  - Section 0:\n    Foo id: 0x0123\n    Data (4 bytes): 74 12 58 96\n```\n\n----------------------------------------\n\nTITLE: PIDs Analysis Report\nDESCRIPTION: Detailed analysis of individual PIDs including transport metrics, discontinuities, and clock values. Contains information for PAT, CAT, SDT/BAT, PMT, video, and audio PIDs.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/demo/demo.analysis.txt#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n|  PID: 0x0101 (257)                                               AVC video  |\n|  PES stream id: 0x01 (Slice 1)                                              |\n|  Bitrate: . 1,062,600 b/s  Packets: ......... 4,830  Expected: ......... 0  |\n```\n\n----------------------------------------\n\nTITLE: XML Structure for anc_data_block Implementation in AVS2/AVS3 Descriptors\nDESCRIPTION: XML template showing how to include anc_data_block in relevant XML files. It defines the structure for object_extension_metadata_block and loudness_metadata_block elements, including their attributes and child elements. Each attribute includes its data type and whether it's required or optional.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dtv/descriptors/avs/notes.txt#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<!-- optional 0..15 allowed  -->\n<anc_data_block>\n  <!-- one object_extension_meta_block or loudness_metadata_block element per anc_data_block -->\n  <object_extension_metadata_block\n    maxObjChannelNum=\"uint8, required\"\n    objChannelLock_maxDist=\"uint4, optional\"\n    objDiffuse=\"uint7, required\"\n    objGain=\"uint8, required\"\n    objDivergence=\"uint4, required\"\n    objDivergencePosRange=\"uint4, optional (required if objDivergence > 0)\"/>\n\n  <loudness_metadata_block\n    samplePeakLevel=\"uint12, optional\"\n    truePeakLevel=\"uint12, required\"\n    loudnessMeasure=\"uint4, required\">\n\n    <!-- up to 15 loudness values -->\n    <loudnessValue\n      loudnessValDef=\"uint4, reqiured\"\n      loudnessVal=\"uint8, required\"/>\n  </loudness_metadata_block>\n</anc_data_block>\n```\n\n----------------------------------------\n\nTITLE: System Detection Variables in Make\nDESCRIPTION: Variables for detecting and configuring the build environment, including OS type, architecture, and system-specific paths.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/CONFIG.txt#2025-04-22_snippet_0\n\nLANGUAGE: makefile\nCODE:\n```\nLOCAL_OS       # Local operating system (\"uname -s\" in lowercase).\nLOCAL_ARCH     # Local CPU architecture (\"uname -m\").\nMAIN_ARCH      # CPU architecture family.\nHOSTNAME       # Build system hostname (without domain name).\nCPU_COUNT      # Number of logical CPU.\nCORE_COUNT     # Number of physical cores.\nLINUX          # Not empty on Linux system.\nMACOS          # Not empty on macOS system.\nFREEBSD        # Not empty on FreeBSD system.\nNETBSD         # Not empty on NetBSD system.\nOPENBSD        # Not empty on OpenBSD system.\nDRAGONFLYBSD   # Not empty on DragonflyBSD system.\nBSD            # Not empty on any BSD system.\nSO_SUFFIX      # Shared object files suffix (.dylib, .so).\nLANGUAGE       # Forced to English for predictible output.\nLC_ALL         # Forced to English for predictible output.\nLANG           # Forced to English for predictible output.\nALTDEVROOT     # Alternative root for development tools and library\nBASHCOMP_DIR   # Directory for bash completion scripts.\nBASHCOMP_AUTO  # If non-empty, automatic bash completions based on command name\nETCDIR         # System configuration directory\nUDEVDIR        # Directory for system-defined udev rules.\nUSELIB64       # Non-empty on x86_64 distro using /usr/lib64\nUSRLIBDIR      # Library directory\n```\n\n----------------------------------------\n\nTITLE: Common Shell Commands Configuration\nDESCRIPTION: Definitions for common shell commands that may need alternatives, including GNU versions of standard utilities.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/CONFIG.txt#2025-04-22_snippet_1\n\nLANGUAGE: makefile\nCODE:\n```\nSED                 # sed (or GNU sed if different).\nGREP                # grep (or GNU grep if different).\nFGREP               # fgrep (or GNU fgrep if different).\nCHMOD               # chmod (or GNU chmod if different).\nDATE                # date (or GNU date if different).\nREALPATH            # realpath (or GNU realpath if different).\nTAR                 # tar (or GNU tar if different).\nBASE64              # base64 with options specifying continuous stream and input file.\nXDGOPEN             # open (or xdg-open if not set as alternative)\nSUDO                # sudo or empty if already running as root.\nPYTHON              # Python command, at least Python 3.\nPYTHON_VERSION      # Full Python version.\nPYTHON_MAJOR        # Python major version.\n```\n\n----------------------------------------\n\nTITLE: Defining TSDuck Java Bindings Package Manifest\nDESCRIPTION: This manifest file specifies the details of the TSDuck Java Bindings package. It includes the package name, sealing status, specification information (title, version, vendor), and implementation information (title, version, vendor). The version is represented by a placeholder {{VERSION}} to be replaced during the build process.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/java/Manifest.txt#2025-04-22_snippet_0\n\nLANGUAGE: Properties\nCODE:\n```\nName: io/tsduck/\nSealed: true\nSpecification-Title: TSDuck Java Bindings\nSpecification-Version: {{VERSION}}\nSpecification-Vendor: Thierry Lelegard\nImplementation-Title: io.tsduck\nImplementation-Version: {{VERSION}}\nImplementation-Vendor: Thierry Lelegard\n```\n\n----------------------------------------\n\nTITLE: Defining DVB API Version in C++\nDESCRIPTION: A synthetic value TS_DVB_API_VERSION is defined to represent the DVB API version. This macro is used to ensure compatibility with different versions of the LinuxTV API.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dtv/broadcast/linux/README.md#2025-04-22_snippet_0\n\nLANGUAGE: C++\nCODE:\n```\nTS_DVB_API_VERSION\n```\n\n----------------------------------------\n\nTITLE: Building TSDuck Programming Reference on Unix\nDESCRIPTION: Command for generating the programming reference documentation using Doxygen on Unix systems.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake doxygen\n```\n\n----------------------------------------\n\nTITLE: PowerShell Build Module\nDESCRIPTION: Common code module containing shared functionality for PowerShell build scripts on Windows.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/scripts/README.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\ntsbuild.psm1\n```\n\n----------------------------------------\n\nTITLE: Python Build Module\nDESCRIPTION: Common code module containing shared functionality for Python build scripts.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/scripts/README.md#2025-04-22_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ntsbuild.py\n```\n\n----------------------------------------\n\nTITLE: Filter Plugin Configuration for Null Packet Removal\nDESCRIPTION: TSP filter plugin command to remove unused null packets after the initial transition period, targeting PID 0x1FFF with negation.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/packager/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n-P filter --after-packets $INIT_PACKETS --pid 0x1FFF --negate\n```\n\n----------------------------------------\n\nTITLE: Debian Package Control Files\nDESCRIPTION: Control file templates for creating Debian packages (.deb) for TSDuck on Ubuntu, Debian, and Raspbian distributions.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/scripts/README.md#2025-04-22_snippet_2\n\nLANGUAGE: control\nCODE:\n```\ntsduck.control\ntsduck-dev.control\n```\n\n----------------------------------------\n\nTITLE: TSDuck Project Directory Structure\nDESCRIPTION: Variables defining the project directory structure, including source locations, binary outputs, and library paths.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/CONFIG.txt#2025-04-22_snippet_2\n\nLANGUAGE: makefile\nCODE:\n```\nROOTDIR             # Root directory of the project.\nSCRIPTSDIR          # Directory containing build scripts.\nSRCROOT             # Root of all source files.\nLIBTSCOREDIR        # Source directory for the TSCore library.\nLIBTSDUCKDIR        # Source directory for the TSDuck library.\nTSTOOLSDIR          # Source directory for all command line tools.\nTSPLUGINSDIR        # Source directory for all external plugins.\nLOCAL_OSDIR         # Name of subdirectory which contains system specific code\nOTHER_OS            # List of subdirectory for other operating systems\nBINROOT             # Root of all generated files.\nBINDIR              # Directory for all binary files\nBINDIR_SUFFIX       # Fixed suffix to add to BINDIR\nOBJDIR              # Subdirectory of BINDIR where object files are stored\nTOPLEVEL_CURDIR     # Value of CURDIR at the top-level invocation of make.\nTOPLEVEL_BINDIR     # Value of BINDIR at the top-level invocation of make\nSTATIC_LIBTSCORE    # Generated static library for TSCore library.\nSHARED_LIBTSCORE    # Generated shared library for TSCore library.\nSTATIC_LIBTSDUCK    # Generated static library for TSDuck library.\nSHARED_LIBTSDUCK    # Generated shared library for TSDuck library.\nINSTALLERDIR        # Output directory for binary packages and installers.\n```\n\n----------------------------------------\n\nTITLE: Parsing Foo ECM Section Data\nDESCRIPTION: ECM (Even) section with TID 0x80 on PID 259, containing a 5-byte data payload after the Foo identifier.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/demo/demo.tstables2.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n* Foo ECM (even), TID 0x80 (128), PID 0x0103 (259)\n  Short section, total size: 10 bytes\n  - Section 0:\n    Foo id: 0x0123\n    Data (5 bytes): 09 87 65 43 21\n```\n\n----------------------------------------\n\nTITLE: Make Control Variables\nDESCRIPTION: Control variables for the make process, including flags, options, and dependency tracking.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/CONFIG.txt#2025-04-22_snippet_3\n\nLANGUAGE: makefile\nCODE:\n```\nLOG                 # Command prefix, e.g. \"$(call LOG,[CXX] $<) $(CXX) ...\".\nMAKEFLAGS           # Make options, as generated by make\nMAKEOVERRIDES       # List of overridden make variables.\nMAKEFLAGS_SMP       # Explicit make parallel options\nJAVA_DONE           # Java options already set\nPRECONFIG_DONE      # Parsing of tsPreConfiguration.h already done\nCURL_DONE           # Libcurl options already set\nSRT_DONE            # SRT options already set\nRIST_DONE           # RIST options already set\nDTAPI_DONE          # Dektec DTAPI options already set\nPCSC_DONE           # PCSC options already set\n```\n\n----------------------------------------\n\nTITLE: Building TSDuck Documentation on Windows\nDESCRIPTION: PowerShell command for building user and developer guides on Windows systems.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/README.md#2025-04-22_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n.\\build-doc.ps1\n```\n\n----------------------------------------\n\nTITLE: Describing TSDuck Documentation File Types in Markdown\nDESCRIPTION: A Markdown list explaining the various documentation file types used in TSDuck for shared command-line options and option groups, including their naming conventions and purposes.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/user/opt/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `group-*.adoc`: files containing a complete group of options, including a\n  section title with role `[.usage]'.\n- `opt-*.adoc`: files containing one single option, without section title.\n- `optdoc-*.adoc`: files containing one single `optdoc` paragraph.\n- `table-*.adoc`: files containing a table.\n```\n\n----------------------------------------\n\nTITLE: Program Map Table (PMT) for Service 701\nDESCRIPTION: PMT for program 701 showing elementary stream configuration for Multi Protocol Encapsulation service\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-tables.txt#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n* PMT, TID 2 (0x02), PID 5002 (0x138A)\n  Version: 0, sections: 1, total size: 28 bytes\n  - Section 0:\n    Program: 701 (0x02BD), PCR PID: 5004 (0x138C)\n    Elementary stream: type 0x0D (DSM-CC Sections), PID: 5003 (0x138B)\n    - Descriptor 0: Stream Identifier (0x52, 82), 1 bytes\n      Component tag: 1 (0x01)\n    - Descriptor 1: Data Broadcast Id (0x66, 102), 2 bytes\n      Data broadcast id: 0x0005 (5, Multi protocol encapsulation)\n```\n\n----------------------------------------\n\nTITLE: Asciidoctor Document Attributes Configuration\nDESCRIPTION: Common attributes file that must be included in the header of each TSDuck document.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/adoc/README.md#2025-04-22_snippet_0\n\nLANGUAGE: asciidoc\nCODE:\n```\nattributes.adoc\n```\n\n----------------------------------------\n\nTITLE: Importing TSDuck Properties in Visual Studio Project\nDESCRIPTION: This XML snippet shows the import line that must be added to a Visual Studio project file to properly reference the TSDuck library. It imports the tsduck.props file which contains all required options for using the TSDuck library.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-app-custom/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Import Project=\"$(TSDUCK)\\tsduck.props\" />\n```\n\n----------------------------------------\n\nTITLE: Windows Visual Studio Project Configuration\nDESCRIPTION: XML configuration line required in Visual Studio project file to import TSDuck properties and build settings.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-memory-plugins/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<Import Project=\"$(TSDUCK)\\tsduck.props\" />\n```\n\n----------------------------------------\n\nTITLE: Integrating TSDuck Properties in Visual Studio Project\nDESCRIPTION: This line imports the TSDuck properties file into a Visual Studio project, which sets all required options for using the TSDuck library in a Windows development environment.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-app/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Import Project=\"$(TSDUCK)\\tsduck.props\" />\n```\n\n----------------------------------------\n\nTITLE: PDF Theme Configuration\nDESCRIPTION: YAML configuration file defining the theme for PDF documentation output.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/adoc/README.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntsduck-theme.yml\n```\n\n----------------------------------------\n\nTITLE: Windows TSDuck Project Configuration - Visual Studio Props Import\nDESCRIPTION: Visual Studio project configuration line that imports TSDuck property settings required for building the application. Must be placed just before the final line in the project file.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-sig-demux/README.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Import Project=\"$(TSDUCK)\\tsduck.props\" />\n```\n\n----------------------------------------\n\nTITLE: Ruby Macros for Asciidoctor\nDESCRIPTION: Basic Asciidoctor macros implementation in Ruby for extended functionality.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/adoc/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nmacros.rb\n```\n\n----------------------------------------\n\nTITLE: Linux/macOS Environment Setup Script\nDESCRIPTION: Shell script for setting up the binary directory path and updating PATH environment variable on Unix systems.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/scripts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsetenv.sh\n```\n\n----------------------------------------\n\nTITLE: Docinfo Footer Template\nDESCRIPTION: Input template for the docinfo footer, prepared for tocbot script integration.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/adoc/README.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\ndocinfo-footer.in.html\n```\n\n----------------------------------------\n\nTITLE: Installing PyGitHub with pip\nDESCRIPTION: Command to install the PyGitHub module using pip. This module is required for interacting with the GitHub API in the maintenance scripts.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/pkg/github/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install PyGithub\n```\n\n----------------------------------------\n\nTITLE: RPM Package Specification\nDESCRIPTION: RPM specification file for creating TSDuck packages on RPM-based Linux distributions like Fedora, RedHat, CentOS, and AlmaLinux.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/scripts/README.md#2025-04-22_snippet_1\n\nLANGUAGE: spec\nCODE:\n```\ntsduck.spec\n```\n\n----------------------------------------\n\nTITLE: Installing pipx on macOS with Homebrew\nDESCRIPTION: Command to install pipx on macOS using Homebrew. This is necessary for managing Python packages on macOS with Homebrew.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/pkg/github/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install pipx\n```\n\n----------------------------------------\n\nTITLE: Services Analysis Report\nDESCRIPTION: Details of individual services including service IDs, names, PIDs, and associated bitrates\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-analysis.txt#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nService: 0x02BC (700)\nService name: MPE Demo (INT)\nPMT PID: 0x1388\nBitrate: 30,115 b/s\n\nService: 0x02BD (701)\nService name: MPE Demo\nPMT PID: 0x138A\nBitrate: 6,638,107 b/s\n```\n\n----------------------------------------\n\nTITLE: Services Analysis Report\nDESCRIPTION: Detailed breakdown of service components including global PIDs and service-specific information. Shows service ID 0x0001 with PMT PID 0x0100 and various component PIDs.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/demo/demo.analysis.txt#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n|  Service: 0x0001 (1), TS: 0x0001 (1), Original Netw: 0x1000 (4096)          |\n|  Service name: Foo Demo, provider: TSDuck                                   |\n|  Service type: 0x01 (Digital television service)                            |\n```\n\n----------------------------------------\n\nTITLE: Transport Stream Summary Statistics\nDESCRIPTION: Shows overall transport stream metrics including stream ID, total bytes, packet counts, services, and bitrates\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-analysis.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTransport Stream Id: 1 (0x0001)\nBytes: 112,355,004\nTS packets: 597,633\nServices: 2\nPID's Total: 8\nBitrate (188 bytes/pkt): 29,996,462 b/s\n```\n\n----------------------------------------\n\nTITLE: PIDs Analysis Report\nDESCRIPTION: Detailed analysis of individual PIDs including transport metrics, discontinuities, and section information\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-analysis.txt#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nPID: 0x0000 (PAT)\nBitrate: 15,057 b/s\nPackets: 300\n\nPID: 0x138B (MPE)\nBitrate: 6,615,571 b/s\nPackets: 131,805\n```\n\n----------------------------------------\n\nTITLE: Transport Stream Summary Report\nDESCRIPTION: Summary statistics of transport stream including packet counts, bitrates, and service information. Shows transport stream ID 0x0001 with 10,000 packets and bitrate of 2,200,000 b/s.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/sample-extension/demo/demo.analysis.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n|  Transport Stream Id: .......... 0x0001 (1)  |  Services: .............. 1  |\n|  Bytes: ......................... 1,880,000  |  PID's: Total: .......... 9  |\n|  TS packets: ....................... 10,000  |         Clear: .......... 9  |\n```\n\n----------------------------------------\n\nTITLE: Referencing MUSL libc in Markdown\nDESCRIPTION: Illustrates the markdown syntax for referencing the MUSL libc in TSDuck documentation.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n`musl`\n```\n\n----------------------------------------\n\nTITLE: Referencing TSDuck Shared Library on Linux\nDESCRIPTION: Shows the filename of the TSDuck shared library on Linux systems in markdown format.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n`libtsduck.so`\n```\n\n----------------------------------------\n\nTITLE: Transport Stream Rate and Stuffing PID Analysis\nDESCRIPTION: Analysis of transport stream rate (29.9 Mb/s) and details of the stuffing PID 0x1FFF including bitrate, packet counts and discontinuity information.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/sample/mpe/output-analysis.txt#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n|                            TSrate: . 29,934,196 b/s                         |\n|=============================================================================|\n|  PID: 0x1FFF (8191)                                               Stuffing  |\n|-----------------------------------------------------------------------------|\n|  Global PID                Transport:                Discontinuities:       |\n|  Bitrate:  23,298,123 b/s  Packets: ....... 464,179  Expected: ......... 0  |\n|  Access: .......... Clear  Adapt.F.: ............ 0  Unexpect: ......... 0  |\n|                            Duplicated: .......... 0  Sections:              |\n|                            PCR: ................. 0  Unit start: ....... 0  |\n```\n\n----------------------------------------\n\nTITLE: Referencing TSDuck Shared Library on macOS\nDESCRIPTION: Illustrates the filename of the TSDuck shared library on macOS systems using markdown syntax.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n`libtsduck.dylib`\n```\n\n----------------------------------------\n\nTITLE: Referencing TSDuck Shared Library on Windows\nDESCRIPTION: Demonstrates the filename of the TSDuck shared library on Windows systems in markdown format.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n`tsduck.dll`\n```\n\n----------------------------------------\n\nTITLE: Referencing Generic TSDuck Plugin Filename\nDESCRIPTION: Shows the generic filename format for TSDuck plugins using markdown syntax, where 'foo' represents the plugin name.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n`tsplugin_foo.so`\n```\n\n----------------------------------------\n\nTITLE: Installing PyGitHub with pipx on macOS\nDESCRIPTION: Command to install PyGitHub using pipx on macOS. This is the recommended method for installing Python packages on macOS with Homebrew.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/pkg/github/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npipx install PyGithub\n```\n\n----------------------------------------\n\nTITLE: Installing PyGitHub on Ubuntu\nDESCRIPTION: Command to install the PyGitHub module on Ubuntu using apt. This is an alternative method for Ubuntu users to install the required GitHub API module.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/pkg/github/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install python3-github\n```\n\n----------------------------------------\n\nTITLE: Activating PyGitHub virtual environment on macOS\nDESCRIPTION: Command to activate the PyGitHub virtual environment on macOS. This step is necessary before executing any Python scripts in the directory.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/pkg/github/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsource $HOME/.local/pipx/venvs/pygithub/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Installing requests module with pip\nDESCRIPTION: Command to install the requests module using pip. This module is a dependency for PyGitHub and is used for making HTTP requests in the scripts.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/pkg/github/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install requests\n```\n\n----------------------------------------\n\nTITLE: Defining TSDuck Project Information and License\nDESCRIPTION: This text block defines the project name, copyright information, and license details for the TSDuck MPEG Transport Stream Toolkit. It specifies the project's name, copyright years, author, and the BSD-2-Clause license used.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/HEADER.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n----------------------------------------------------------------------------\n\n  TSDuck - The MPEG Transport Stream Toolkit\n  Copyright (c) 2005-2025, Thierry Lelegard\n  BSD-2-Clause license, see LICENSE.txt file or https://tsduck.io/license\n\n----------------------------------------------------------------------------\n```\n\n----------------------------------------\n\nTITLE: Converting TSDuck Logo Files Using Shell Script\nDESCRIPTION: Shell script referenced in the documentation for converting logo files between formats. The script uses ImageMagick to generate various sizes of PNG files and ICO files from a base 512x512 PNG version.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/images/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nconvert-logo.sh\n```\n\n----------------------------------------\n\nTITLE: Referencing Remote Build Script for TSDuck Installers\nDESCRIPTION: Mentions a shell script named 'build-remote.sh' that is used to build TSDuck installers on remote systems or local virtual machines. This script allows for flexible build environments.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/pkg/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nThe script `build-remote.sh` builds the TSDuck installers on a remote system,\neither a running physical system or a local VM to start.\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for HTML Documentation\nDESCRIPTION: CSS style sheet defining the visual appearance of HTML documentation output.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/adoc/README.md#2025-04-22_snippet_1\n\nLANGUAGE: css\nCODE:\n```\ntsduck.css\n```\n\n----------------------------------------\n\nTITLE: HTML Docinfo Style Definitions\nDESCRIPTION: Main docinfo file containing style definitions used in the documentation footer.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/doc/adoc/README.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\ndocinfo.html\n```\n\n----------------------------------------\n\nTITLE: Referencing Dektec Output Plugin in Markdown\nDESCRIPTION: Shows the markdown syntax for referencing the Dektec output plugin in TSDuck documentation.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`dektec`\n```\n\n----------------------------------------\n\nTITLE: Referencing Dektec Input Plugin in Markdown\nDESCRIPTION: Demonstrates how to reference the Dektec input plugin in TSDuck documentation using markdown syntax.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`dektec`\n```\n\n----------------------------------------\n\nTITLE: Referencing TSDektec Command in Markdown\nDESCRIPTION: Illustrates how to reference the TSDektec command in TSDuck documentation using markdown formatting.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`tsdektec`\n```\n\n----------------------------------------\n\nTITLE: Referencing TSSwitch Command in Markdown\nDESCRIPTION: Shows how to reference the TSSwitch command in TSDuck documentation using markdown formatting.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n`tsswitch`\n```\n\n----------------------------------------\n\nTITLE: Referencing TSP Command in Markdown\nDESCRIPTION: Demonstrates the markdown syntax for referencing the TSP command in TSDuck documentation.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n`tsp`\n```\n\n----------------------------------------\n\nTITLE: Referencing GLIBC in Markdown\nDESCRIPTION: Demonstrates how to reference GLIBC in TSDuck documentation using markdown formatting.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n`glibc`\n```\n\n----------------------------------------\n\nTITLE: Referencing DTAPI Configuration Script in Markdown\nDESCRIPTION: Illustrates the markdown syntax for referencing the DTAPI configuration script in TSDuck documentation.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n`dtapi-config.sh`\n```\n\n----------------------------------------\n\nTITLE: Referencing Prerequisites Installation Script in Markdown\nDESCRIPTION: Shows how to reference the TSDuck prerequisites installation PowerShell script in documentation using markdown.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n`scripts/install-prerequisites.ps1`\n```\n\n----------------------------------------\n\nTITLE: Referencing Dektec Installation Script in Markdown\nDESCRIPTION: Demonstrates the markdown syntax for referencing the Dektec installation PowerShell script in TSDuck documentation.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n`install-dektec.ps1`\n```\n\n----------------------------------------\n\nTITLE: Referencing DektecControl Class in Markdown\nDESCRIPTION: Illustrates how to reference the DektecControl C++ class in TSDuck documentation using markdown formatting.\nSOURCE: https://github.com/tsduck/tsduck/blob/master/src/libtsduck/dektec/README.md#2025-04-22_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n`ts::DektecControl`\n```"
  }
]
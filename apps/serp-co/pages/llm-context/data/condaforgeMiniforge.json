[
  {
    "owner": "conda-forge",
    "repo": "miniforge",
    "content": "TITLE: Running Miniforge Interactive Installation on Unix-like platforms\nDESCRIPTION: This command runs the Miniforge3 installation script with an interactive prompt that allows users to customize the installation. It uses uname to automatically detect the system type and architecture.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nbash Miniforge3-$(uname)-$(uname -m).sh\n```\n\n----------------------------------------\n\nTITLE: Running Miniforge Non-Interactive Installation on Unix-like platforms\nDESCRIPTION: This command runs the Miniforge3 installation script in batch mode (-b) for non-interactive installations, such as in CI environments. Additional options can be displayed with -h. Note that conda initialization commands will not run by default.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nbash Miniforge3-$(uname)-$(uname -m).sh -b\n```\n\n----------------------------------------\n\nTITLE: Downloading Miniforge Installer using curl on Unix-like platforms\nDESCRIPTION: This command downloads the latest Miniforge3 installer appropriate for the user's operating system and architecture using curl. It uses uname to automatically detect the system type and architecture.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ncurl -L -O \"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Conda Shell Integration\nDESCRIPTION: Command to initialize conda for the current shell, enabling conda commands in any terminal session.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nconda init\n```\n\n----------------------------------------\n\nTITLE: Creating and Activating Conda Environment\nDESCRIPTION: Commands to create a new conda environment with specific packages and activate it for use.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nconda create --name my_project jupyterlab numpy pandas\nconda activate my_project\n# Now you can start jupyter lab\njupyter lab\n```\n\n----------------------------------------\n\nTITLE: Setting Up Conda and Mamba Environment in CI\nDESCRIPTION: These commands source the necessary profile scripts to make conda and mamba commands available in the shell environment after a batch installation. This is required for CI pipelines to use conda commands.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\nsource \"${HOME}/conda/etc/profile.d/conda.sh\"\n# For mamba support also run the following command\nsource \"${HOME}/conda/etc/profile.d/mamba.sh\"\n```\n\n----------------------------------------\n\nTITLE: Downloading Miniforge Installer using wget on Unix-like platforms\nDESCRIPTION: This command downloads the latest Miniforge3 installer appropriate for the user's operating system and architecture using wget. It uses uname to automatically detect the system type and architecture.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nwget \"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh\"\n```\n\n----------------------------------------\n\nTITLE: Installing Miniforge in Batch Mode with Custom Prefix\nDESCRIPTION: This command runs the Miniforge installer in batch mode (-b) with a specified installation prefix (-p) set to a directory in the user's home folder. This is useful for automated installations in CI environments.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\nbash Miniforge3.sh -b -p \"${HOME}/conda\"\n```\n\n----------------------------------------\n\nTITLE: Downloading Miniforge Installer for Linux in CI pipelines\nDESCRIPTION: This command downloads the appropriate Miniforge3 installer for the current Linux architecture and renames it to a generic filename for use in automated CI pipelines. It uses wget and uname to detect the system architecture.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nwget -O Miniforge3.sh \"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh\"\n```\n\n----------------------------------------\n\nTITLE: Downloading Miniforge Installer for macOS in CI pipelines\nDESCRIPTION: This command downloads the appropriate Miniforge3 installer for the current macOS architecture and renames it to a generic filename for use in automated CI pipelines. It uses curl and uname to detect the system architecture.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\ncurl -fsSLo Miniforge3.sh \"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-$(uname -m).sh\"\n```\n\n----------------------------------------\n\nTITLE: Activating Conda Base Environment\nDESCRIPTION: This command activates the base conda environment after installing Miniforge and sourcing the conda profile script. This is typically used after setting up the environment in a CI pipeline.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\nconda activate\n```\n\n----------------------------------------\n\nTITLE: Unix Full Path Conda Initialization\nDESCRIPTION: Command to initialize conda using full path for non-interactive installations on Unix systems.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n~/miniforge3/bin/conda init\n```\n\n----------------------------------------\n\nTITLE: Disabling Automatic Base Environment Activation\nDESCRIPTION: Configuration command to prevent automatic activation of the base environment when opening a new terminal.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nconda config --set auto_activate_base false\n```\n\n----------------------------------------\n\nTITLE: Windows Non-Interactive Installation\nDESCRIPTION: Batch command for non-interactive installation of Miniforge on Windows systems.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nstart /wait \"\" Miniforge3-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\\Miniforge3\n```\n\n----------------------------------------\n\nTITLE: Building a Miniforge Installer without Docker on Linux\nDESCRIPTION: These commands set the target platform and execute the build and test scripts to create a Miniforge installer directly on Linux without using Docker. This is useful for local development and testing.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_18\n\nLANGUAGE: sh\nCODE:\n```\n# Configuration\nexport TARGET_PLATFORM=linux-64\n\nbash scripts/build.sh\nbash scripts/test.sh\n```\n\n----------------------------------------\n\nTITLE: Building a Miniforge Installer with Docker\nDESCRIPTION: These commands set up the architecture and Docker image configuration before building a Miniforge installer using Docker. This allows for cross-platform building of installers.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_17\n\nLANGUAGE: sh\nCODE:\n```\n# Configuration\nexport ARCH=aarch64\nexport DOCKERIMAGE=condaforge/linux-anvil-aarch64\n\nbash build_miniforge.sh\n```\n\n----------------------------------------\n\nTITLE: Building a Miniforge Installer on Windows using MINGW64\nDESCRIPTION: These commands set the target platform for Windows and execute the build and test scripts to create a Miniforge installer. This requires Git Bash or another MINGW64 shell to be installed on Windows.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_19\n\nLANGUAGE: sh\nCODE:\n```\nexport TARGET_PLATFORM=win-64\n\nbash scripts/build.sh\nbash scripts/test.sh\n```\n\n----------------------------------------\n\nTITLE: Reversing Conda Shell Modifications during Uninstallation\nDESCRIPTION: These commands first show what shell RC files would be modified in a dry run, then actually reverse the changes made by conda initialization during installation. This is part of the Miniforge uninstallation process.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_14\n\nLANGUAGE: sh\nCODE:\n```\n# Use this first command to see what rc files will be updated\nconda init --reverse --dry-run\n# Use this next command to take action on the rc files listed above\nconda init --reverse\n# Temporarily IGNORE the shell message\n#       'For changes to take effect, close and re-open your current shell.',\n# and CLOSE THE SHELL ONLY AFTER the 3rd step below is completed.\n```\n\n----------------------------------------\n\nTITLE: Removing Miniforge Installation Directory during Uninstallation\nDESCRIPTION: These commands determine the base environment location of the conda installation and then delete it. This is part of the Miniforge uninstallation process and removes all installed files and environments.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_15\n\nLANGUAGE: sh\nCODE:\n```\nCONDA_BASE_ENVIRONMENT=$(conda info --base)\necho The next command will delete all files in ${CONDA_BASE_ENVIRONMENT}\n# Warning, the rm command below is irreversible!\n# check the output of the echo command above\n# To make sure you are deleting the correct directory\nrm -rf ${CONDA_BASE_ENVIRONMENT}\n```\n\n----------------------------------------\n\nTITLE: Removing Conda Configuration Files during Uninstallation\nDESCRIPTION: These commands remove any global conda configuration files that might be left behind after uninstallation. This includes the .condarc file and .conda directory in the user's home folder.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/README.md#2025-04-19_snippet_16\n\nLANGUAGE: sh\nCODE:\n```\necho ${HOME}/.condarc will be removed if it exists\nrm -f \"${HOME}/.condarc\"\necho ${HOME}/.conda and underlying files will be removed if they exist.\nrm -fr ${HOME}/.conda\n```\n\n----------------------------------------\n\nTITLE: Package Dependencies for conda-forge/miniforge\nDESCRIPTION: Lists required Python packages: requests_cache for caching HTTP requests and jinja2 for templating.\nSOURCE: https://github.com/conda-forge/miniforge/blob/main/docs/requirements.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nrequests_cache\njinja2\n```"
  }
]
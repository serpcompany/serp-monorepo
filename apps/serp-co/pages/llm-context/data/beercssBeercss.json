[
  {
    "owner": "beercss",
    "repo": "beercss",
    "content": "TITLE: Structuring Basic Main Layout with Beer CSS\nDESCRIPTION: This snippet demonstrates the basic structure of a main layout using Beer CSS. It includes navigation, header, main content, and footer elements with responsive and fixed positioning options.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MAIN_LAYOUT.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"top|bottom|left|right\">...</nav>\n<header class=\"responsive|fixed\">...</header>\n<main class=\"responsive\">...</main>\n<footer class=\"responsive|fixed\">...</footer>\n```\n\n----------------------------------------\n\nTITLE: Sample HTML Template with BeerCSS\nDESCRIPTION: This snippet provides a complete HTML template using BeerCSS, including a responsive layout with navigation and main content.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INDEX.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta name=\"google\" content=\"notranslate\">\n    <title>Hello world</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.css\" rel=\"stylesheet\">\n    <script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.js\"></script>\n    <script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/material-dynamic-colors@1.1.2/dist/cdn/material-dynamic-colors.min.js\"></script>\n  </head>\n  <body class=\"dark\">\n    <nav class=\"left drawer l\">\n      <header>\n        <nav>\n          <img src=\"https://www.beercss.com/favicon.png\" class=\"circle\">\n          <h6>Cheers</h6>\n        </nav>\n      </header>\n      <a>\n        <i>home</i>\n        <div>Home</div>\n      </a>\n      <a>\n        <i>search</i>\n        <div>Search</div>\n      </a>\n      <a>\n        <i>share</i>\n        <div>Share</div>\n      </a>\n      <a>\n        <i>more_vert</i>\n        <div>More</div>\n      </a>\n      <div class=\"divider\"></div>\n      <label>Label</label>\n      <a>\n        <i>widgets</i>\n        <div>Widgets</div>\n      </a>\n      <a>\n        <i>chat</i>\n        <div>Chat</div>\n      </a>\n      <a>\n        <i>help</i>\n        <div>Help</div>\n      </a>  \n    </nav>\n\n    <nav class=\"left m\">\n      <header>\n        <img src=\"https://www.beercss.com/favicon.png\" class=\"circle\">\n      </header>\n      <a>\n        <i>home</i>\n        <div>Home</div>\n      </a>\n      <a>\n        <i>search</i>\n        <div>Search</div>\n      </a>\n      <a>\n        <i>share</i>\n        <div>Share</div>\n      </a>\n      <a>\n        <i>more_vert</i>\n        <div>More</div>\n      </a>\n    </nav>\n\n    <nav class=\"bottom s\">\n      <a>\n        <i>home</i>\n      </a>\n      <a>\n        <i>search</i>\n      </a>\n      <a>\n        <i>share</i>\n      </a>\n      <a>\n        <i>more_vert</i>\n      </a>\n    </nav>\n\n    <main class=\"responsive\">\n      <img src=\"https://www.beercss.com/beer-and-woman.svg\" class=\"responsive round\">\n      <h3>Welcome</h3>\n      <h5>The beer is ready!</h5>\n    </main>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Installing Beer CSS - Default Version via NPM\nDESCRIPTION: NPM installation command for Beer CSS and Material Dynamic Colors, followed by import statements for use in JavaScript modules.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nnpm i beercss\nnpm i material-dynamic-colors\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"beercss\";\nimport \"material-dynamic-colors\";\n```\n\n----------------------------------------\n\nTITLE: Beer CSS Best Practices - DO Examples\nDESCRIPTION: Examples of recommended usage patterns for Beer CSS, including proper setting application, element-helper combinations, and proper navigation element placement.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n// 1 setting to 1 document\n<body class=\"dark|light\">...</body>\n\n// 1 element to N helpers\n<element class=\"helper helper\">...</element>\n<div class=\"element helper helper\">...</div>\n\n// nav elements before all others\n<body>\n  <nav class=\"left|right|top|bottom\">...</nav>\n  ...\n</body>\n\n<div id=\"app\">\n  <nav class=\"left|right|top|bottom\">...</nav>\n  ...\n</div>\n\n// write css like this\n.element.helper {...}\n.element > .element {...}\n.element > .helper {...}\n```\n\n----------------------------------------\n\nTITLE: Importing BeerCSS in JavaScript\nDESCRIPTION: This snippet shows how to import BeerCSS and Material Dynamic Colors in a JavaScript file.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INDEX.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"beercss\";\nimport \"material-dynamic-colors\";\n```\n\n----------------------------------------\n\nTITLE: Beer CSS Sample Page with Responsive Layout\nDESCRIPTION: Complete HTML example demonstrating Beer CSS in action with a responsive layout, including drawer navigation, a bottom navigation bar, and a main content area.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta name=\"google\" content=\"notranslate\">\n    <title>Hello world</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.css\" rel=\"stylesheet\">\n    <script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.js\"></script>\n    <script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/material-dynamic-colors@1.1.2/dist/cdn/material-dynamic-colors.min.js\"></script>\n  </head>\n  <body class=\"dark\">\n    <nav class=\"left drawer l\">\n      <header>\n        <nav>\n          <img src=\"https://www.beercss.com/favicon.png\" class=\"circle\">\n          <h6>Cheers</h6>\n        </nav>\n      </header>\n      <a>\n        <i>home</i>\n        <div>Home</div>\n      </a>\n      <a>\n        <i>search</i>\n        <div>Search</div>\n      </a>\n      <a>\n        <i>share</i>\n        <div>Share</div>\n      </a>\n      <a>\n        <i>more_vert</i>\n        <div>More</div>\n      </a>\n      <div class=\"divider\"></div>\n      <label>Label</label>\n      <a>\n        <i>widgets</i>\n        <div>Widgets</div>\n      </a>\n      <a>\n        <i>chat</i>\n        <div>Chat</div>\n      </a>\n      <a>\n        <i>help</i>\n        <div>Help</div>\n      </a>  \n    </nav>\n\n    <nav class=\"left m\">\n      <header>\n        <img src=\"https://www.beercss.com/favicon.png\" class=\"circle\">\n      </header>\n      <a>\n        <i>home</i>\n        <div>Home</div>\n      </a>\n      <a>\n        <i>search</i>\n        <div>Search</div>\n      </a>\n      <a>\n        <i>share</i>\n        <div>Share</div>\n      </a>\n      <a>\n        <i>more_vert</i>\n        <div>More</div>\n      </a>\n    </nav>\n\n    <nav class=\"bottom s\">\n      <a>\n        <i>home</i>\n      </a>\n      <a>\n        <i>search</i>\n      </a>\n      <a>\n        <i>share</i>\n      </a>\n      <a>\n        <i>more_vert</i>\n      </a>\n    </nav>\n\n    <main class=\"responsive\">\n      <img src=\"https://www.beercss.com/beer-and-woman.svg\" class=\"responsive round\">\n      <h3>Welcome</h3>\n      <h5>The beer is ready!</h5>\n    </main>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating Expanded Layout with Left Drawer Navigation in Beer CSS\nDESCRIPTION: This example illustrates an expanded layout with a left drawer navigation using Beer CSS. It includes a responsive main content area and a left-aligned drawer navigation with icons and labels.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MAIN_LAYOUT.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"left drawer\">\n  <a>\n    <i>home</i>\n    <div>Home</div>\n  </a>\n  <a>\n    <i>search</i>\n    <div>Search</div>\n  </a>\n  <a>\n    <i>share</i>\n    <div>share</div>\n  </a>\n</nav>\n<main class=\"responsive\">\n  <h3>Expanded</h3>\n</main>\n```\n\n----------------------------------------\n\nTITLE: Including BeerCSS Default Version via CDN\nDESCRIPTION: This snippet shows how to include the default version of BeerCSS and Material Dynamic Colors using CDN links in an HTML file.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INDEX.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.css\" rel=\"stylesheet\" />\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.js\"></script>\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/material-dynamic-colors@1.1.2/dist/cdn/material-dynamic-colors.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Responsive Grid Layout Example in BeerCSS\nDESCRIPTION: Shows a practical implementation of a responsive grid with three columns that adapt to different screen sizes. Uses s12 for full width on small screens, m6 for half width on medium screens, and l3 for quarter width on large screens.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/GRID.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"grid\">\n  <div class=\"s12 m6 l3\">\n    <h5>First</h5>\n  </div>\n  <div class=\"s12 m6 l3\">\n    <h5>Second</h5>\n  </div>\n  <div class=\"s12 m6 l3\">\n    <h5>Third</h5>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Fixed Header and Footer Implementation in Beer CSS\nDESCRIPTION: Shows how to create a scrollable container with fixed header and footer elements. The header and footer use the 'fixed' class to make them sticky while the content scrolls.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LAYOUT.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<article class=\"small-width small-height scroll\">\n  <header class=\"fixed bold\">Fixed header</header>\n  <p>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  </p>\n  <p>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  </p>\n  <footer class=\"fixed bold\">Fixed footer</footer>\n</article>\n```\n\n----------------------------------------\n\nTITLE: Creating Compact Layout with Bottom Navigation in Beer CSS\nDESCRIPTION: This example shows a compact layout with bottom navigation using Beer CSS. It includes a responsive main content area and a bottom navigation bar with icons and labels.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MAIN_LAYOUT.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"bottom\">\n  <a>\n    <i>home</i>\n    <div>Home</div>\n  </a>\n  <a>\n    <i>search</i>\n    <div>Search</div>\n  </a>\n  <a>\n    <i>share</i>\n    <div>share</div>\n  </a>\n</nav>\n<main class=\"responsive\">\n  <h3>Compact</h3>\n</main>\n```\n\n----------------------------------------\n\nTITLE: Importing BeerCSS Custom Element Version in JavaScript\nDESCRIPTION: This snippet shows how to import the custom element version of BeerCSS in a JavaScript file.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INDEX.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"beercss/custom-element\";\nimport \"material-dynamic-colors\";\n```\n\n----------------------------------------\n\nTITLE: Managing Dynamic Theme with Beer CSS JavaScript\nDESCRIPTION: Methods for retrieving and changing the UI mode and theme. This allows switching between light/dark modes and different theme types.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/JAVASCRIPT.md#2025-04-21_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n// get mode\nui(\"mode\")\n\n// set mode\nui(\"mode\", \"light|dark|auto\");\n\n// get theme\nawait ui(\"theme\")\n\n// set theme\nawait ui(\"theme\", \"color|blob|file|url\");\n```\n\n----------------------------------------\n\nTITLE: Managing Dynamic Themes with JavaScript\nDESCRIPTION: Demonstrates how to dynamically change themes at runtime using the ui() function. This allows setting themes from colors, paths, URLs, files, blobs, or existing themes.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SETTINGS.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// From color\nlet theme = await ui(\"theme\", \"#ffd700\");\n\n// From path\nlet theme = await ui(\"theme\", \"/image.png\");\n\n// From url (caution with cors error)\nlet theme = await ui(\"theme\", \"http://domain.com/image.png\");\n\n// From file\nlet file = document.query(\"input[type='file']\").files[0];\nlet theme = await ui(\"theme\", file);\n\n// From blob\nlet blob = new Blob();\nlet theme = await ui(\"theme\", blob);\n\n// From theme\nlet theme = await ui(\"theme\", theme);\n\n// Get current theme\nlet theme = await ui(\"theme\");\n\n// The returned theme is\n{\n  dark: \"--primary:#cfbcff;--on-primary:#381e72;--primary-container:#4f378a;--on-primary-container:#e9ddff;--secondary:#cbc2db;--on-secondary:#332d41;--secondary-container:#4a4458;--on-secondary-container:#e8def8;--tertiary:#efb8c8;--on-tertiary:#4a2532;--tertiary-container:#633b48;--on-tertiary-container:#ffd9e3;--error:#ffb4ab;--on-error:#690005;--error-container:#93000a;--on-error-container:#ffb4ab;--background:#1c1b1e;--on-background:#e6e1e6;--surface:#141316;--on-surface:#e6e1e6;--surface-variant:#49454e;--on-surface-variant:#cac4cf;--outline:#948f99;--outline-variant:#49454e;--shadow:#000000;--scrim:#000000;--inverse-surface:#e6e1e6;--inverse-on-surface:#313033;--inverse-primary:#6750a4;--surface-dim:#141316;--surface-bright:#3a383c;--surface-container-lowest:#0f0e11;--surface-container-low:#1c1b1e;--surface-container:#201f22;--surface-container-high:#2b292d;--surface-container-highest:#363438;\",\n  light: \"--primary:#6750a4;--on-primary:#ffffff;--primary-container:#e9ddff;--on-primary-container:#22005d;--secondary:#625b71;--on-secondary:#ffffff;--secondary-container:#e8def8;--on-secondary-container:#1e192b;--tertiary:#7e5260;--on-tertiary:#ffffff;--tertiary-container:#ffd9e3;--on-tertiary-container:#31101d;--error:#ba1a1a;--on-error:#ffffff;--error-container:#ffdad6;--on-error-container:#410002;--background:#fffbff;--on-background:#1c1b1e;--surface:#fdf8fd;--on-surface:#1c1b1e;--surface-variant:#e7e0eb;--on-surface-variant:#49454e;--outline:#7a757f;--outline-variant:#cac4cf;--shadow:#000000;--scrim:#000000;--inverse-surface:#313033;--inverse-on-surface:#f4eff4;--inverse-primary:#cfbcff;--surface-dim:#ddd8dd;--surface-bright:#fdf8fd;--surface-container-lowest:#ffffff;--surface-container-low:#f7f2f7;--surface-container:#f2ecf1;--surface-container-high:#ece7eb;--surface-container-highest:#e6e1e6;\"\n}\n```\n\n----------------------------------------\n\nTITLE: Triggering UI Elements with Beer CSS JavaScript Function\nDESCRIPTION: The ui() function toggles the 'active' helper class on elements to show/hide or open/close them. Works with dialogs, menus, overlays, pages, and snackbars.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/JAVASCRIPT.md#2025-04-21_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nui(\"dialog|menu|overlay|page|snackbar\");\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Fonts in BeerCSS\nDESCRIPTION: Shows how to import and configure custom fonts for content and icons using CSS variables. Includes examples for using Google Material Symbols icon fonts.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SETTINGS.md#2025-04-21_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n /* To import your custom font */\n@import \"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap\";\n\n:root {\n  /* To use your custom font */\n  --font: \"Roboto Flex\";\n\n  /* To remove default icons */\n  --font-icon: none;\n\n  /* To use default outlined icons */\n  --font-icon: \"Material Symbols Outlined\";\n\n  /* To use default rounded icons */\n  --font-icon: \"Material Symbols Rounded\";\n\n  /* To use default sharp icons */\n  --font-icon: \"Material Symbols Sharp\";\n\n  /* To only use minimal subset of icons required in checkbox, radio and switch */\n  --font-icon: \"Material Symbols Subset\";\n}\n```\n\n----------------------------------------\n\nTITLE: Navigation Drawer\nDESCRIPTION: Example of a navigation drawer component with icons and labels.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/NAVIGATION.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"drawer\">\n  <a>\n    <i>home</i>\n    <div>Home</div>\n  </a>\n  <a>\n    <i>search</i>\n    <div>Search</div>\n  </a>\n  <a>\n    <i>more_vert</i>\n    <div>More</div>\n  </a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Basic Button Element Definition in BeerCSS\nDESCRIPTION: Shows the basic HTML elements that can be used to create a button in BeerCSS. Buttons can be created using either the button element or an anchor tag with the 'button' class.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/BUTTON.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button>...</button>\n<a class=\"button\">...</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Medium Layout with Left Navigation in Beer CSS\nDESCRIPTION: This snippet demonstrates a medium layout with left navigation using Beer CSS. It features a responsive main content area and a left-aligned navigation bar with icons and labels.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MAIN_LAYOUT.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"left\">\n  <a>\n    <i>home</i>\n    <div>Home</div>\n  </a>\n  <a>\n    <i>search</i>\n    <div>Search</div>\n  </a>\n  <a>\n    <i>share</i>\n    <div>share</div>\n  </a>\n</nav>\n<main class=\"responsive\">\n  <h3>Medium</h3>\n</main>\n```\n\n----------------------------------------\n\nTITLE: Customizing Default Theme with CSS Variables\nDESCRIPTION: Demonstrates how to customize the default light and dark themes by overriding CSS variables in the root and body selectors.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SETTINGS.md#2025-04-21_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n:root,\nbody.light {\n  --primary: #6750a4;\n  --on-primary: #ffffff;\n  --primary-container: #e9ddff;\n  --on-primary-container: #22005d;\n  --secondary: #625b71;\n  --on-secondary: #ffffff;\n  --secondary-container: #e8def8;\n  --on-secondary-container: #1e192b;\n  --tertiary: #7e5260;\n  --on-tertiary: #ffffff;\n  --tertiary-container: #ffd9e3;\n  --on-tertiary-container: #31101d;\n  --error: #ba1a1a;\n  --on-error: #ffffff;\n  --error-container: #ffdad6;\n  --on-error-container: #410002;\n  --background: #fffbff;\n  --on-background: #1c1b1e;\n  --surface: #fdf8fd;\n  --on-surface: #1c1b1e;\n  --surface-variant: #e7e0eb;\n  --on-surface-variant: #49454e;\n  --outline: #7a757f;\n  --outline-variant: #cac4cf;\n  --shadow: #000000;\n  --scrim: #000000;\n  --inverse-surface: #313033;\n  --inverse-on-surface: #f4eff4;\n  --inverse-primary: #cfbcff;\n  --surface-dim: #ddd8dd;\n  --surface-bright: #fdf8fd;\n  --surface-container-lowest: #ffffff;\n  --surface-container-low: #f7f2f7;\n  --surface-container: #f2ecf1;\n  --surface-container-high: #ece7eb;\n  --surface-container-highest: #e6e1e6;\n}\n\nbody.dark {\n  --primary: #cfbcff;\n  --on-primary: #381e72;\n  --primary-container: #4f378a;\n  --on-primary-container: #e9ddff;\n  --secondary: #cbc2db;\n  --on-secondary: #332d41;\n  --secondary-container: #4a4458;\n  --on-secondary-container: #e8def8;\n  --tertiary: #efb8c8;\n  --on-tertiary: #4a2532;\n  --tertiary-container: #633b48;\n  --on-tertiary-container: #ffd9e3;\n  --error: #ffb4ab;\n  --on-error: #690005;\n  --error-container: #93000a;\n  --on-error-container: #ffb4ab;\n  --background: #1c1b1e;\n  --on-background: #e6e1e6;\n  --surface: #141316;\n  --on-surface: #e6e1e6;\n  --surface-variant: #49454e;\n  --on-surface-variant: #cac4cf;\n  --outline: #948f99;\n  --outline-variant: #49454e;\n  --shadow: #000000;\n  --scrim: #000000;\n  --inverse-surface: #e6e1e6;\n  --inverse-on-surface: #313033;\n  --inverse-primary: #6750a4;\n  --surface-dim: #141316;\n  --surface-bright: #3a383c;\n  --surface-container-lowest: #0f0e11;\n  --surface-container-low: #1c1b1e;\n  --surface-container: #201f22;\n  --surface-container-high: #2b292d;\n  --surface-container-highest: #363438;\n}\n```\n\n----------------------------------------\n\nTITLE: Top App Bar Implementation in Beer CSS\nDESCRIPTION: Demonstrates how to create a top application bar with navigation controls. The layout includes a back button, title, and action buttons using Beer CSS components.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LAYOUT.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<header>\n  <nav>\n    <button class=\"circle transparent\">\n      <i>arrow_back</i>\n    </button>\n    <h5 class=\"max\">Title</h5>\n    <button class=\"circle transparent\">\n      <i>attach_file</i>\n    </button>\n    <button class=\"circle transparent\">\n      <i>today</i>\n    </button>\n    <button class=\"circle transparent\">\n      <i>more_vert</i>\n    </button>\n  </nav>\n</header>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Card with Title, Description, and Buttons in HTML using Beer CSS\nDESCRIPTION: This example demonstrates how to create a card with a title, description, and action buttons using Beer CSS. It includes the basic structure and common elements found in a card component.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CARD.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<article>\n  <h5>Title</h5>\n  <div>Description</div>\n  <nav>\n    <button>Button 1</button>\n    <button>Button 2</button>\n  </nav>\n</article>\n```\n\n----------------------------------------\n\nTITLE: Basic Button Implementation in BeerCSS\nDESCRIPTION: Demonstrates simple button implementations in BeerCSS, showing both a text-only button and a button with an icon and text.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/BUTTON.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button>Button</button>\n\n<button>\n  <i>home</i>\n  <span>Button</span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Example of a Responsive Container in HTML\nDESCRIPTION: A simple example showing how to implement a responsive container with no content. This creates an adaptable main content area that will adjust to different viewport sizes.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CONTAINER.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<main class=\"responsive\"></main>\n```\n\n----------------------------------------\n\nTITLE: Basic Tab Implementation with Content Pages\nDESCRIPTION: Complete example showing tabs structure with corresponding content pages. Demonstrates basic tab navigation setup with content areas.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TABS.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"tabs\">\n  <a>Tab 1</a>\n  <a>Tab 2</a>\n  <a>Tab 3</a>\n</div>\n\n<div class=\"page\">\n  <h5>Tab 1</h5>\n</div>\n<div class=\"page\">\n  <h5>Tab 2</h5>\n</div>\n<div class=\"page\">\n  <h5>Tab 3</h5>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Grid Structure in BeerCSS\nDESCRIPTION: Demonstrates the basic structure for creating a grid layout using BeerCSS framework. Shows the minimal required markup for a grid container and its child elements.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/GRID.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"grid\">\n  <div>...</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: UI Function Dialog Control\nDESCRIPTION: Dialog implementation using the ui() function with JavaScript.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/DIALOG.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<dialog id=\"dialog\">\n  <h5>Title</h5>\n  <p>Content of dialog</p>\n  <nav>\n    <button>Cancel</button>\n    <button>Confirm</button>\n  </nav>\n</dialog>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nui('#dialog');\n```\n\n----------------------------------------\n\nTITLE: Fixed Positioning Example in Beer CSS\nDESCRIPTION: Demonstrates fixed positioning that stays relative to the document viewport. The element stays fixed at the bottom of the page spanning from left to right regardless of scrolling.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LAYOUT.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"fixed left bottom right\">\n  <h5>Bottom of document</h5>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Typography Elements in HTML\nDESCRIPTION: This snippet demonstrates the basic HTML elements used for typography in BeerCSS. It includes headings, paragraphs, and inline text elements.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TYPOGRAPHY.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<h1>...</h1>\n<h2>...</h2>\n<h3>...</h3>\n<h4>...</h4>\n<h5>...</h5>\n<h6>...</h6>\n<b>...</b>\n<p>...</p>\n<span>...</span>\n<div>...</div>\n<...>...</...>\n```\n\n----------------------------------------\n\nTITLE: Using data-ui Attribute for Element Triggering in HTML\nDESCRIPTION: HTML implementation of UI element triggering using the data-ui attribute, which functions like the ui() JavaScript function but through HTML markup. Elements are triggered on click by default.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/JAVASCRIPT.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<button data-ui=\"#dialog\">...</button>\n<dialog id=\"dialog\">...</dialog>\n\n<button data-ui=\"#menu\">...</button>\n<menu id=\"menu\">...</menu>\n\n<button data-ui=\"#overlay\">...</button>\n<div class=\"overlay\" id=\"overlay\">...</div>\n\n<button data-ui=\"#snackbar\">...</button>\n<div class=\"snackbar\" id=\"snackbar\">...</div>\n\n<div class=\"tabs\">\n  <a data-ui=\"#page1\">...</a>\n  <a data-ui=\"#page2\">...</a>\n</div>\n<div class=\"page\" id=\"page1\">...</div>\n<div class=\"page\" id=\"page2\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Beer CSS - Default Version via CDN\nDESCRIPTION: HTML code for including the default version of Beer CSS via CDN, which applies styles globally to the entire document.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.css\" rel=\"stylesheet\" />\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.js\"></script>\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/material-dynamic-colors@1.1.2/dist/cdn/material-dynamic-colors.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Designing Multi-Pane Layout with Left Navigation in Beer CSS\nDESCRIPTION: This snippet shows a multi-pane layout with left navigation using Beer CSS. It features a responsive main content area divided into two panes using a grid system, alongside a left-aligned navigation bar.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MAIN_LAYOUT.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"left\">\n  <a>\n    <i>home</i>\n    <div>Home</div>\n  </a>\n  <a>\n    <i>search</i>\n    <div>Search</div>\n  </a>\n  <a>\n    <i>share</i>\n    <div>share</div>\n  </a>\n</nav>\n<main class=\"responsive\">\n  <div class=\"grid\">\n    <div class=\"s6\">\n      <h3>Pane 1</h3>\n    </div>\n    <div class=\"s6\">\n      <h3>Pane 2</h3>\n    </div>\n  </div>\n</main>\n```\n\n----------------------------------------\n\nTITLE: Basic Navigation Element Structure\nDESCRIPTION: Shows the basic HTML structure for navigation elements with positioning options like left, right, top, and bottom.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/NAVIGATION.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"row\">...</div>\n<nav>...</nav>\n<nav class=\"left\">...</nav>\n<nav class=\"right\">...</nav>\n<nav class=\"top\">...</nav>\n<nav class=\"bottom\">...</nav>\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Icons from a Single SVG Definition\nDESCRIPTION: Shows how to define multiple icons in a single SVG element with IDs and then reference them throughout the document using the use tag, which is more efficient for multiple icon usage.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/ICON.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<svg viewBox=\"0 0 24 24\" style=\"display: none\">\n  <g id=\"home\">\n    <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\"></path>\n  </g>\n  <g id=\"star\">\n    <path d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\"></path>\n  </g>\n  <g id=\"account_circle\">\n    <path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7.07,18.28C7.5,17.38 10.12,16.5 12,16.5C13.88,16.5 16.5,17.38 16.93,18.28C15.57,19.36 13.86,20 12,20C10.14,20 8.43,19.36 7.07,18.28M18.36,16.83C16.93,15.09 13.46,14.5 12,14.5C10.54,14.5 7.07,15.09 5.64,16.83C4.62,15.5 4,13.82 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,13.82 19.38,15.5 18.36,16.83M12,6C10.06,6 8.5,7.56 8.5,9.5C8.5,11.44 10.06,13 12,13C13.94,13 15.5,11.44 15.5,9.5C15.5,7.56 13.94,6 12,6M12,11A1.5,1.5 0 0,1 10.5,9.5A1.5,1.5 0 0,1 12,8A1.5,1.5 0 0,1 13.5,9.5A1.5,1.5 0 0,1 12,11Z\"></path>\n  </g>\n</svg>\n\n<i>\n  <svg viewBox=\"0 0 24 24\">\n    <use href=\"#home\"></use>\n  </svg>\n</i>\n\n<i>\n  <svg viewBox=\"0 0 24 24\">\n    <use href=\"#star\"></use>\n  </svg>\n</i>\n\n<i>\n  <svg viewBox=\"0 0 24 24\">\n    <use href=\"#account_circle\"></use>\n  </svg>\n</i>\n```\n\n----------------------------------------\n\nTITLE: Bottom App Bar Implementation in Beer CSS\nDESCRIPTION: Shows how to create a bottom application bar with action buttons and a prominent floating action button. Uses navigation layout with transparent circular buttons and a primary action button.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LAYOUT.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<footer>\n  <nav>\n    <button class=\"circle transparent\">\n      <i>check_box</i>\n    </button>\n    <button class=\"circle transparent\">\n      <i>brush</i>\n    </button>\n    <button class=\"circle transparent\">\n      <i>mic</i>\n    </button>\n    <button class=\"circle transparent\">\n      <i>image</i>\n    </button>\n    <div class=\"max\"></div>\n    <button class=\"square round extra primary\">\n      <i>add</i>\n    </button>\n  </nav>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Element Alignment Example in Beer CSS\nDESCRIPTION: Shows how to center-align content both horizontally and vertically using alignment helper classes. This creates a centered element within its container.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LAYOUT.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<article class=\"small center-align middle-align\">\n  <span>Aligned</span>\n</article>\n```\n\n----------------------------------------\n\nTITLE: Defining Card Structure in HTML with Beer CSS\nDESCRIPTION: This snippet shows the basic HTML element used to create a card in Beer CSS. The <article> tag is used as the container for card content.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CARD.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<article>...</article>\n```\n\n----------------------------------------\n\nTITLE: Basic List Structure in BeerCSS\nDESCRIPTION: Shows the fundamental HTML structure for creating lists using the BeerCSS framework. Supports both unordered (ul) and ordered (ol) lists with the 'list' class.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LIST.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"list\">\n  <li>...</li>\n</ul>\n\n<ol class=\"list\">\n  <li>...</li>\n</ol>\n```\n\n----------------------------------------\n\nTITLE: Setting Theme Mode with JavaScript\nDESCRIPTION: Shows how to change between light, dark, or auto modes using the ui() function, and how to retrieve the current mode.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SETTINGS.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// To light\nlet mode = ui(\"mode\", \"light\");\n\n// To dark\nlet mode = ui(\"mode\", \"dark\");\n\n// To set from device color scheme\nlet mode = ui(\"mode\", \"auto\");\n\n// Get current mode\nlet mode = ui(\"mode\");\n\n// The returned mode is\n\"light\" or \"dark\"\n```\n\n----------------------------------------\n\nTITLE: Installing BeerCSS via npm\nDESCRIPTION: This snippet demonstrates how to install BeerCSS and Material Dynamic Colors using npm.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INDEX.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnpm i beercss\nnpm i material-dynamic-colors\n```\n\n----------------------------------------\n\nTITLE: Setting Default Theme with HTML Classes\nDESCRIPTION: Shows how to set the default theme using body classes. The theme can be set according to device color scheme, or explicitly to light or dark mode.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SETTINGS.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n// It will be set according to device color scheme\n<body>...</body>\n\n// To light\n<body class=\"light\">...</body>\n\n// To dark\n<body class=\"dark\">...</body>\n```\n\n----------------------------------------\n\nTITLE: Floating Action Button (FAB) Implementation in BeerCSS\nDESCRIPTION: Demonstrates how to create a Floating Action Button (FAB) which represents the primary action of a screen using the 'circle' and 'extra' classes.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/BUTTON.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"circle extra\">\n  <i>home</i>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Multi-Pane Layout with Responsive Grid in Beer CSS\nDESCRIPTION: This example demonstrates a custom multi-pane layout with left navigation using Beer CSS. It showcases a responsive main content area divided into four panes using a grid system with responsive classes, alongside a left-aligned navigation bar.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MAIN_LAYOUT.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"left\">\n  <a>\n    <i>home</i>\n    <div>Home</div>\n  </a>\n  <a>\n    <i>search</i>\n    <div>Search</div>\n  </a>\n  <a>\n    <i>share</i>\n    <div>share</div>\n  </a>\n</nav>\n<main class=\"responsive\">\n  <div class=\"grid\">\n    <div class=\"s12 m12 l6\">\n      <h3>Pane 1</h3>\n    </div>\n    <div class=\"s12 m12 l6\">\n      <h3>Pane 2</h3>\n    </div>\n    <div class=\"s12 m12 l6\">\n      <h3>Pane 3</h3>\n    </div>\n    <div class=\"s12 m12 l6\">\n      <h3>Pane 4</h3>\n    </div>\n  </div>\n</main>\n```\n\n----------------------------------------\n\nTITLE: Importing BeerCSS Scoped Version in JavaScript\nDESCRIPTION: This snippet shows how to import the scoped version of BeerCSS in a JavaScript file.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INDEX.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"beercss/scoped\";\nimport \"material-dynamic-colors\";\n```\n\n----------------------------------------\n\nTITLE: Segmented Button Implementation in BeerCSS\nDESCRIPTION: Shows how to create segmented buttons with 2-5 segments, where each segment is clearly divided and can contain text, an icon, or both. Two examples demonstrate standard and maximum width implementations.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/BUTTON.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"no-space\">\n  <button class=\"border left-round\">Left</button>\n  <button class=\"border no-round\">Center</button>\n  <button class=\"border right-round\">Right</button>\n</nav>\n\n<nav class=\"no-space\">\n  <button class=\"border left-round max\">Left</button>\n  <button class=\"border no-round max\">Center</button>\n  <button class=\"border right-round max\">Right</button>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Container Element in HTML\nDESCRIPTION: The container is implemented as a main element with a 'responsive' class, which is used to create the main content area of a page. This responsive container adapts to different screen sizes.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CONTAINER.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<main class=\"responsive\">...</main>\n```\n\n----------------------------------------\n\nTITLE: Nested List Structure in BeerCSS\nDESCRIPTION: Demonstrates how to create nested lists by embedding another list within a list item. Useful for hierarchical data or multi-level navigation menus.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LIST.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"list\">\n  <li>Item</li>\n  <li>Item</li>\n  <li>\n    <ul class=\"list\">\n      <li>Item</li>\n      <li>Item</li>\n    </ul>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Navigation Rail Layout\nDESCRIPTION: Example of a vertical navigation rail with icons and labels positioned on the left side.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/NAVIGATION.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"left\">\n  <a>\n    <i>home</i>\n    <div>Home</div>\n  </a>\n  <a>\n    <i>search</i>\n    <div>Search</div>\n  </a>\n  <a>\n    <i>more_vert</i>\n    <div>More</div>\n  </a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Creating a Scrollable Table with Fixed Header and Footer in beercss\nDESCRIPTION: This example shows how to create a scrollable table with fixed header and footer using beercss classes. The table is wrapped in a scrollable div, and the header and footer are set to 'fixed' to remain visible while scrolling through the content.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TABLE.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"scroll small-height\">\n  <table>\n    <thead class=\"fixed\">\n      <tr>\n        <th>Header</th>\n        <th>Header</th>\n        <th>Header</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Cell</td>\n        <td>Cell</td>\n        <td>Cell</td>\n      </tr>\n      <tr>\n        <td>Cell</td>\n        <td>Cell</td>\n        <td>Cell</td>\n      </tr>\n      <tr>\n        <td>Cell</td>\n        <td>Cell</td>\n        <td>Cell</td>\n      </tr>\n      <tr>\n        <td>Cell</td>\n        <td>Cell</td>\n        <td>Cell</td>\n      </tr>\n      <tr>\n        <td>Cell</td>\n        <td>Cell</td>\n        <td>Cell</td>\n      </tr>\n      <tr>\n        <td>Cell</td>\n        <td>Cell</td>\n        <td>Cell</td>\n      </tr>\n    </tbody>\n    <tfoot class=\"fixed\">\n      <tr>\n        <th>Footer</th>\n        <th>Footer</th>\n        <th>Footer</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Popover API Dialog Implementation\nDESCRIPTION: Dialog implementation using the Popover API with both HTML and JavaScript control methods.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/DIALOG.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<button popovertarget=\"dialog\">Button</button>\n\n<dialog id=\"dialog\" popover>\n  <h5>Title</h5>\n  <p>Content of dialog</p>\n  <nav>\n    <button>Cancel</button>\n    <button>Confirm</button>\n  </nav>\n</dialog>\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.querySelector('#dialog').hidePopover(); // hide\ndocument.querySelector('#dialog').showPopover(); //show\ndocument.querySelector('#dialog').togglePopover(); // toggle\n```\n\n----------------------------------------\n\nTITLE: Navigation with List Structure\nDESCRIPTION: Demonstrates navigation using an unordered list structure with various interactive elements.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/NAVIGATION.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <ul>\n    <li>\n      <button>Button</button>\n    </li>\n    <li>\n      <a class=\"chip\">Chip</button>\n    </li>\n    <li>\n      <a>\n        <img class=\"circle\" src=\"/image.png\" />\n      </a>\n    </li>\n    <li>\n      <label class=\"checkbox\">\n        <input type=\"checkbox\">\n      </label>\n    </li>\n  </ul>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Basic Dialog Element Structure\nDESCRIPTION: Basic HTML structure for implementing a dialog component with title, content and action buttons.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/DIALOG.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<dialog>\n  <h5>Title</h5>\n  <p>Content of dialog</p>\n  <nav>\n    <button>Cancel</button>\n    <button>Confirm</button>\n  </nav>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Tabbed Navigation\nDESCRIPTION: Implementation of a tabbed navigation interface with icons and labels.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/NAVIGATION.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"tabbed\">\n  <a>\n    <i>home</i>\n    <div>Home</div>\n  </a>\n  <a>\n    <i>search</i>\n    <div>Search</div>\n  </a>\n  <a>\n    <i>more_vert</i>\n    <div>More</div>\n  </a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Basic Menu Element Structure in HTML\nDESCRIPTION: The basic HTML structure for creating a menu component in Beer CSS. Menus are wrapped in a parent element and contain a list of items.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MENU.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<...>\n  <menu>\n    <li>...</li>\n  </menu>\n</...>\n```\n\n----------------------------------------\n\nTITLE: Basic Tab Structure in HTML with BeerCSS\nDESCRIPTION: Basic HTML structure for creating a tabs container element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TABS.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"tabs\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Icon Button Implementation in BeerCSS\nDESCRIPTION: Demonstrates transparent icon buttons for navigation, where the button shape is revealed on interaction. Examples show implementations with both icon and image content.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/BUTTON.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"transparent circle\">\n  <i>home</i>\n</button>\n\n<button class=\"transparent circle\">\n  <img class=\"responsive\" src=\"/image.png\">\n</button>\n```\n\n----------------------------------------\n\nTITLE: List with Leading Media or Avatar in BeerCSS\nDESCRIPTION: Shows how to incorporate images or avatars in list items. Uses a round image alongside headline and supporting text, commonly used for user profiles or media content lists.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LIST.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"list\">\n  <li>\n    <img class=\"round\" src=\"/beer-and-woman.svg\">\n    <div class=\"max\">\n      <h6 class=\"small\">Headline</h6>\n      <div>Supporting text</div>\n    </div>\n    <label>+15 min</label>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Creating Blockquotes, Pre-formatted Text, and Code Snippets in HTML\nDESCRIPTION: This snippet demonstrates how to use HTML elements for blockquotes, pre-formatted text, and code snippets in BeerCSS, including inline code within paragraphs.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TYPOGRAPHY.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<blockquote>...</blockquote>\n<pre>...</pre>\n<pre>\n  <code>...</code>\n</pre>\n<p>\n  ... <code>...</code> ...\n</p>\n```\n\n----------------------------------------\n\nTITLE: JavaScript Page Control\nDESCRIPTION: Shows how to control page visibility using JavaScript ui() function.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/PAGE.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page\" id=\"page1\">\n  <h5>Page 1</h5>\n</div>\n\n<div class=\"page\" id=\"page2\">\n  <h5>Page 2</h5>\n</div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nui('#page1');\n```\n\n----------------------------------------\n\nTITLE: Responsive Button Implementation in BeerCSS\nDESCRIPTION: Shows how to create responsive buttons that automatically adjust to the width of their container using the 'responsive' class.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/BUTTON.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"responsive\">Button</button>\n\n<button class=\"responsive\">\n  <i>home</i>\n  <span>Button</span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Basic Snackbar Structure in HTML\nDESCRIPTION: Basic HTML structure for creating a snackbar element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SNACKBAR.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"snackbar\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Snackbar with Icon Example\nDESCRIPTION: Example of a snackbar implementation with an icon and text content.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SNACKBAR.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"snackbar\">\n  <i>warning</i>\n  <span>I'm a snackbar</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Striped Table in beercss\nDESCRIPTION: This example shows how to create a striped table using the 'stripes' class from beercss. The structure is similar to the basic table, but with alternating row colors for better readability.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TABLE.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<table class=\"stripes\">\n  <thead>\n    <tr>\n      <th>Header</th>\n      <th>Header</th>\n      <th>Header</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Cell</td>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <td>Cell</td>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <td>Cell</td>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n  </tbody>\n  <tfoot>\n    <tr>\n      <th>Footer</th>\n      <th>Footer</th>\n      <th>Footer</th>\n    </tr>\n  </tfoot>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Controlling an Overlay with JavaScript\nDESCRIPTION: Shows how to use the ui() JavaScript function to display an overlay by referencing its selector.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/OVERLAY.md#2025-04-21_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nui('#overlay');\n```\n\n----------------------------------------\n\nTITLE: List with Icons in BeerCSS\nDESCRIPTION: Demonstrates adding material icons to list items alongside headline and supporting text. Uses the 'i' element to represent icons in the BeerCSS framework.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LIST.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"list\">\n  <li>\n    <i>home</i>\n    <div class=\"max\">\n      <h6 class=\"small\">Headline</h6>\n      <div>Supporting text</div>\n    </div>\n    <label>+15 min</label>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Basic Expansion Component Structure in HTML\nDESCRIPTION: Shows the basic HTML structure for creating an expansion/collapsible component using the <details> and <summary> elements. This is the fundamental pattern for all expansion components in Beer CSS.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/EXPANSION.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<details>\n  <summary>...</summary>\n  <...>...</...>\n</details>\n```\n\n----------------------------------------\n\nTITLE: List with Linked Items in BeerCSS\nDESCRIPTION: Shows how to create a list where each item is a clickable link. This pattern is commonly used for navigation menus or action lists.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LIST.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"list\">\n  <li>\n    <a href=\"#\">Item</a>\n  </li>\n  <li>\n    <a href=\"#\">Item</a>\n  </li>\n  <li>\n    <a href=\"#\">Item</a>\n  </li>\n  <li>\n    <a href=\"#\">Item</a>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Basic Navigation with Mixed Elements\nDESCRIPTION: Shows how to combine different elements like buttons, chips, images, and checkboxes in a navigation component.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/NAVIGATION.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <button>Button</button>\n  <a class=\"chip\">Chip</button>\n  <a>\n    <img class=\"circle\" src=\"/image.png\" />\n  </a>\n  <label class=\"checkbox\">\n    <input type=\"checkbox\">\n  </label>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Responsive Media Implementation\nDESCRIPTION: Examples of responsive media elements that automatically adjust to the container size. Applies the 'responsive' class to image, video, and SVG elements.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MEDIA.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/image.png\" class=\"responsive\">\n\n<video class=\"responsive\">\n  <source src=\"/video.mp4\" type=\"video/mp4\">\n</video>\n\n<svg class=\"responsive\" viewBox=\"0 0 24 24\">\n  <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\"></path>\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Expansion List in BeerCSS\nDESCRIPTION: Creates a collapsible list section using the details/summary elements. This pattern allows users to expand and collapse sections of content within the list.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LIST.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"list\">\n  <li>Item</li>\n  <li>Item</li>\n  <li>\n    <details>\n      <summary>Header Item</summary>\n      <ul class=\"list\">\n        <li>Item</li>\n        <li>Item</li>\n      </ul>\n    </details>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Controlling Overlay with Data Attributes in HTML\nDESCRIPTION: Demonstrates how to show/hide an overlay using the data-ui attribute on a button that targets the overlay by its ID.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/OVERLAY.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<button data-ui=\"#overlay\">Show overlay</button>\n\n<div class=\"overlay center-align middle-align\" id=\"overlay\">\n  <progress class=\"circle\"></progress>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Table Structure in HTML\nDESCRIPTION: This snippet demonstrates the basic structure of an HTML table with header, body, and footer sections. It includes three columns and three rows of data.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TABLE.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<table>\n  <thead>\n    <tr>\n      <th>Header</th>\n      <th>Header</th>\n      <th>Header</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Cell</td>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <td>Cell</td>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <td>Cell</td>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n  </tbody>\n  <tfoot>\n    <tr>\n      <th>Footer</th>\n      <th>Footer</th>\n      <th>Footer</th>\n    </tr>\n  </tfoot>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Empty State Layout in Beer CSS\nDESCRIPTION: Demonstrates how to create an empty state view with centered content. The layout includes an icon, heading, description text, and a call-to-action button positioned in the center of the container.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LAYOUT.md#2025-04-21_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"fill medium-height middle-align center-align\">\n  <div class=\"center-align\">\n    <i class=\"extra\">mail</i>\n    <h5>You have no new messages</h5>\n    <p>Click the button to start a conversation</p>\n    <div class=\"space\"></div>\n    <nav class=\"center-align\">\n      <button class=\"round\">Send a message</button>\n    </nav>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating an Overlay for JavaScript Control in HTML\nDESCRIPTION: Sets up an overlay with an ID that can be targeted and controlled through JavaScript.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/OVERLAY.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overlay center-align middle-align\" id=\"overlay\">\n  <progress class=\"circle\"></progress>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Bottom Navigation Bar\nDESCRIPTION: Implementation of a bottom navigation bar with icons and labels.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/NAVIGATION.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"bottom\">\n  <a>\n    <i>home</i>\n    <div>Home</div>\n  </a>\n  <a>\n    <i>search</i>\n    <div>Search</div>\n  </a>\n  <a>\n    <i>more_vert</i>\n    <div>More</div>\n  </a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Integrating Pictogrammers (Material Design Icons)\nDESCRIPTION: Shows how to integrate Material Design Icons from Pictogrammers within the Beer CSS framework using the appropriate classes. Requires manual loading of the MDI library.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/ICON.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<i class=\"mdi mdi-clock-outline\"></i>\n```\n\n----------------------------------------\n\nTITLE: Custom Progress Bar Examples in HTML\nDESCRIPTION: Shows how to create custom progress bars with additional elements like titles, using the 'max' class for full-width display.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/PROGRESS.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<article>\n  <progress class=\"max\" value=\"25\" max=\"100\"></progress>\n  <h5>Title</h5>\n</article>\n\n<article>\n  <h5>Title</h5>\n  <progress class=\"max\" value=\"25\" max=\"100\"></progress>\n</article>\n```\n\n----------------------------------------\n\nTITLE: Extended Floating Action Button Implementation in BeerCSS\nDESCRIPTION: Shows how to create an extended Floating Action Button, which is wider and includes a text label alongside an icon.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/BUTTON.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"extend circle\">\n  <i>home</i>\n  <span>Button</span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Data Attribute Dialog Control\nDESCRIPTION: Dialog implementation using data-ui attributes for controlling dialog visibility.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/DIALOG.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<button data-ui=\"#dialog\">Open dialog</button>\n\n<dialog id=\"dialog\">\n  <h5>Title</h5>\n  <p>Content of dialog</p>\n  <nav>\n    <button data-ui=\"#dialog\">Cancel</button>\n    <button data-ui=\"#dialog\">Confirm</button>\n  </nav>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Active Class Dialog Implementation\nDESCRIPTION: Dialog implementation using the active class to control visibility.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/DIALOG.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<dialog class=\"active\">\n  <h5>Title</h5>\n  <p>Content of dialog</p>\n  <nav>\n    <button>Cancel</button>\n    <button>Confirm</button>\n  </nav>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Tab Activation Using Active Class\nDESCRIPTION: Implementation showing how to activate tabs using the 'active' class method. This approach uses CSS classes to control tab and content visibility.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TABS.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"tabs\">\n  <a class=\"active\">Tab 1</a>\n  <a>Tab 2</a>\n  <a>Tab 3</a>\n</div>\n\n<div class=\"page active\">\n  <h5>Tab 1</h5>\n</div>\n<div class=\"page\">\n  <h5>Tab 2</h5>\n</div>\n<div class=\"page\">\n  <h5>Tab 3</h5>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Nested Multi-level Expansion Components in HTML\nDESCRIPTION: Demonstrates how to create nested expansion components with multiple levels of hierarchy. Each level can be expanded/collapsed independently, allowing for complex information architecture.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/EXPANSION.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<details>\n  <summary>...</summary>\n  <details>\n    <summary>...</summary>\n    <details>\n      <summary>...</summary>\n      <...>...</...>\n    </details>\n  </details>\n</details>\n```\n\n----------------------------------------\n\nTITLE: Tab Activation Using Data Attributes\nDESCRIPTION: Alternative implementation using data-ui attributes for tab activation. This method uses page selectors to control content visibility.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TABS.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"tabs\">\n  <a data-ui=\"#page1\">Tab 1</a>\n  <a data-ui=\"#page2\">Tab 2</a>\n  <a data-ui=\"#page3\">Tab 3</a>\n</div>\n\n<div class=\"page\" id=\"page1\">\n  <h5>Tab 1</h5>\n</div>\n<div class=\"page\" id=\"page2\">\n  <h5>Tab 2</h5>\n</div>\n<div class=\"page\" id=\"page3\">\n  <h5>Tab 3</h5>\n</div>\n```\n\n----------------------------------------\n\nTITLE: JavaScript Triggered Snackbar\nDESCRIPTION: Example of controlling snackbar visibility using JavaScript ui() function.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SNACKBAR.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"snackbar\" id=\"snackbar\">\n  <i>warning</i>\n  <span>I'm a snackbar</span>\n</div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nui(\"#snackbar\");\n```\n\n----------------------------------------\n\nTITLE: Complete Select Example with Label and Border in Beer CSS\nDESCRIPTION: Demonstrates a complete select element with label and border styling, showing the proper nesting of elements within the field container.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SELECT.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field label border\">\n  <select>\n    <option>Item</option>\n    <option>Item</option>\n    <option>Item</option>\n  </select>\n  <label>Label</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Chip Element Implementation in HTML\nDESCRIPTION: Shows the HTML structure for creating basic chip elements using buttons or anchor tags with the 'chip' class.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CHIP.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"chip\">...</button>\n<a class=\"chip\">...</a>\n```\n\n----------------------------------------\n\nTITLE: Basic Menu Button Example in HTML\nDESCRIPTION: An example of a menu within a button element. The menu contains simple list items that will be displayed when triggered.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MENU.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button>\n  <span>Button</span>\n  <menu>\n    <li>Item</li>\n    <li>Item</li>\n    <li>Item</li>\n  </menu>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Circular Progress Bar Example in HTML\nDESCRIPTION: Demonstrates how to create a circular progress bar using the 'circle' class in BeerCSS.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/PROGRESS.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"circle\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Implementing Various Checkbox Styles in HTML with Beer CSS\nDESCRIPTION: This example demonstrates different ways to style checkboxes using Beer CSS, including adding text, icons, and grouping checkboxes in a navigation element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CHECKBOX.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"checkbox\">\n  <input type=\"checkbox\">\n  <span></span>\n</label>\n\n<label class=\"checkbox\">\n  <input type=\"checkbox\">\n  <span>Click here</span>\n</label>\n\n<label class=\"checkbox icon\">\n  <input type=\"checkbox\">\n  <span>\n    <i>close</i>\n    <i>done</i>\n  </span>\n</label>\n\n<nav>\n  <label class=\"checkbox\">\n    <input type=\"checkbox\">\n    <span>Item 1</span>\n  </label>\n  <label class=\"checkbox\">\n    <input type=\"checkbox\">\n    <span>Item 2</span>\n  </label>\n  <label class=\"checkbox\">\n    <input type=\"checkbox\">\n    <span>Item 3</span>\n  </label>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Radio Button Examples with Various Configurations\nDESCRIPTION: A collection of radio button examples showing different variants including a basic radio button, a labeled radio button, an icon-based radio button, and a navigation group containing multiple radio options.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/RADIO.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"radio\">\n  <input type=\"radio\">\n  <span></span>\n</label>\n\n<label class=\"radio\">\n  <input type=\"radio\">\n  <span>Click here</span>\n</label>\n\n<label class=\"radio icon\">\n  <input type=\"radio\">\n  <span>\n    <i>close</i>\n    <i>done</i>\n  </span>\n</label>\n\n<nav>\n  <label class=\"radio\">\n    <input type=\"radio\">\n    <span>Item 1</span>\n  </label>\n  <label class=\"radio\">\n    <input type=\"radio\">\n    <span>Item 2</span>\n  </label>\n  <label class=\"radio\">\n    <input type=\"radio\">\n    <span>Item 3</span>\n  </label>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Creating a Bordered Table in beercss\nDESCRIPTION: This snippet demonstrates how to create a bordered table using the 'border' class from beercss. The table structure remains the same, but with visible borders around cells for clear separation.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TABLE.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<table class=\"border\">\n  <thead>\n    <tr>\n      <th>Header</th>\n      <th>Header</th>\n      <th>Header</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Cell</td>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <td>Cell</td>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <td>Cell</td>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n  </tbody>\n  <tfoot>\n    <tr>\n      <th>Footer</th>\n      <th>Footer</th>\n      <th>Footer</th>\n    </tr>\n  </tfoot>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Applying Text Formatting Classes in HTML with BeerCSS\nDESCRIPTION: This snippet demonstrates various text formatting classes available in BeerCSS, including link styles, text transformations, and size adjustments.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TYPOGRAPHY.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"link\">link</a>\n<a class=\"inverse-link\">inverse-link</a>\n<p class=\"italic\">italic</p>\n<p class=\"bold\">bold</p>\n<p class=\"underline\">underline</p>\n<p class=\"overline\">overline</p>\n<p class=\"upper\">upper</p>\n<p class=\"lower\">lower</p>\n<p class=\"capitalize\">capitalize</p>\n<p class=\"small-text\">small-text</p>\n<p class=\"medium-text\">medium-text</p>\n<p class=\"large-text\">large-text</p>\n```\n\n----------------------------------------\n\nTITLE: Switch Implementation with Icons in HTML\nDESCRIPTION: Demonstrates how to add icon elements to switch components using the 'icon' class, including a single icon example and a dual-icon example for different states.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SWITCH.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"switch icon\">\n  <input type=\"checkbox\">\n  <span>\n    <i>wifi</i>\n  </span>\n</label>\n\n<label class=\"switch icon\">\n  <input type=\"checkbox\">\n  <span>\n    <i>close</i>\n    <i>done</i>\n  </span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Basic Input Field Implementation - BeerCSS HTML\nDESCRIPTION: Shows the basic structure of an input field using BeerCSS's field class.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INPUT.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field\">\n  <input type=\"text\">\n</div>\n```\n\n----------------------------------------\n\nTITLE: Tooltip Implementation Example in HTML\nDESCRIPTION: A complete example showing how to implement a tooltip within a button element. When users hover over, focus on, or tap the button, the tooltip with the text 'I'm a tooltip' will be displayed.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TOOLTIP.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button>\n  <span>Button</span>\n  <div class=\"tooltip\">I'm a tooltip</div>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Adjusting Line Spacing with BeerCSS Classes in HTML\nDESCRIPTION: This snippet shows how to use BeerCSS classes to adjust line spacing in HTML elements, ranging from no line spacing to extra-large spacing.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TYPOGRAPHY.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"no-line\">...</div>\n<div class=\"tiny-line\">...</div>\n<div class=\"small-line\">...</div>\n<div class=\"medium-line\">...</div>\n<div class=\"large-line\">...</div>\n<div class=\"extra-line\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Slider with Icons Implementation\nDESCRIPTION: Example of a slider control with accompanying icons, wrapped in a navigation element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SLIDER.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <i>sunny</i>\n  <label class=\"slider\">\n    <input type=\"range\">\n    <span></span>\n  </label>\n  <i>rainy</i>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Slider with Tooltip Implementation\nDESCRIPTION: Implementation of a slider with an additional tooltip element for value display.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SLIDER.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"slider\">\n  <input type=\"range\">\n  <span></span>\n  <div class=\"tooltip\"></div>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Basic Select Element Structure in Beer CSS\nDESCRIPTION: Defines the basic HTML structure for creating a select dropdown in Beer CSS, using the field class container.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SELECT.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field\">\n  <select>...</select>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Labeled Input Field with Border - BeerCSS HTML\nDESCRIPTION: Demonstrates how to create an input field with a label and border styling.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INPUT.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field label border\">\n  <input type=\"text\">\n  <label>Label</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Method 2: Using Placeholder for Label Animation in Textarea with Beer CSS\nDESCRIPTION: Second method to trigger label animation by using a placeholder attribute with a space. This provides a pure CSS solution without requiring JavaScript.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TEXTAREA.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field label\">\n  <textarea placeholder=\" \"></textarea>\n  <label>Label</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Menu Trigger Method 1: Using Active Class in HTML\nDESCRIPTION: The first method to open/close a menu by adding the 'active' class directly to the menu element. This toggles the menu's visibility.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MENU.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<button>\n  <span>Button</span>\n  <menu class=\"active\">\n    <li>Item</li>\n    <li>Item</li>\n    <li>Item</li>\n  </menu>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Active Page Example\nDESCRIPTION: Shows how to make a page visible using the active class.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/PAGE.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page active\">\n  <h5>Title</h5>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Menu Trigger Method 3: JavaScript Implementation\nDESCRIPTION: The JavaScript implementation for the third method to toggle a menu. The ui() function targets the menu by its selector to open/close it.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MENU.md#2025-04-21_snippet_6\n\nLANGUAGE: js\nCODE:\n```\nui('#menu');\n```\n\n----------------------------------------\n\nTITLE: List with Headline and Supporting Text in BeerCSS\nDESCRIPTION: Shows how to create list items with a circular button, headline, supporting text, and a label. This complex structure is useful for content-rich lists with multiple information elements.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LIST.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"list\">\n  <li>\n    <button class=\"circle\">A</button>\n    <div class=\"max\">\n      <h6 class=\"small\">Headline</h6>\n      <div>Supporting text</div>\n    </div>\n    <label>+15 min</label>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Menu Trigger Method 2: Using Data Attributes in HTML\nDESCRIPTION: The second method to toggle a menu using data attributes. The data-ui attribute points to the menu's selector, creating an automatic trigger relationship.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MENU.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<button data-ui=\"#menu\">\n  <span>Button</span>\n  <menu id=\"menu\">\n    <li>Item</li>\n    <li>Item</li>\n    <li>Item</li>\n  </menu>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Switch Example with Navigation in HTML\nDESCRIPTION: An example showing both a standalone switch and a switch integrated within a navigation element with title and complementary text.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SWITCH.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"switch\">\n  <input type=\"checkbox\">\n  <span></span>\n</label>\n\n<nav>\n  <div class=\"max\">\n    <h6>Title</h6>\n    <div>Complementary text</div>\n  </div>\n  <label class=\"switch\">\n    <input type=\"checkbox\">\n    <span></span>\n  </label>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Method 1: Manually Activating Label in Textarea with Beer CSS\nDESCRIPTION: First method to trigger label animation by manually adding the 'active' class to the label or textarea element. This is handled automatically by Beer CSS JavaScript.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TEXTAREA.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field label\">\n  <textarea></textarea>\n  <label class=\"active\">Label</label>\n</div>\n\n<div class=\"field label border\">\n  <textarea class=\"active\"></textarea>\n  <label class=\"active\">Label</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML Dialog Element Control\nDESCRIPTION: Implementation using native HTML dialog element with JavaScript control methods.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/DIALOG.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<dialog id=\"dialog\">\n  <h5>Title</h5>\n  <p>Content of dialog</p>\n  <nav>\n    <button>Cancel</button>\n    <button>Confirm</button>\n  </nav>\n</dialog>\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.querySelector('#dialog').show(); // open\ndocument.querySelector('#dialog').showModal(); // open as modal\ndocument.querySelector('#dialog').close(); // close\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Icon Elements in HTML\nDESCRIPTION: Shows the basic structure for icon elements in Beer CSS, including options for text icons, SVG icons, and image icons.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/ICON.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<i>...</i>\n<i>\n  <svg>...</svg>\n</i>\n<i>\n  <img>\n</i>\n```\n\n----------------------------------------\n\nTITLE: Using Text-Based Material Icons\nDESCRIPTION: Shows how to implement a basic text-based Material Design icon using the home icon as an example.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/ICON.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<i>home</i>\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Overlay Element in HTML\nDESCRIPTION: Defines the basic HTML structure for creating an overlay component in Beer CSS.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/OVERLAY.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overlay\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Linear Progress Bar Examples in HTML\nDESCRIPTION: Shows different ways to create linear progress bars, including indeterminate, determinate with percentage, and determinate with value and max attributes.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/PROGRESS.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<progress></progress>\n<progress value=\"0.25\"></progress>\n<progress value=\"25\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Basic Divider Element in HTML\nDESCRIPTION: The basic HTML element for creating a divider in BeerCSS. Dividers are represented by the HTML hr tag and are used to create thin lines that group content in lists or other containers.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/DIVIDER.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<hr />\n```\n\n----------------------------------------\n\nTITLE: Chip Component Examples in HTML\nDESCRIPTION: Demonstrates basic chip implementations including a simple text chip and a chip with an icon and text content.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CHIP.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"chip\">Chip</button>\n\n<button class=\"chip\">\n  <i>home</i>\n  <span>Chip</span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Absolute Positioning Example in Beer CSS\nDESCRIPTION: Shows how to use absolute positioning with an element that sticks to the left, bottom, and right of its container. This creates a footer-like element that stays at the bottom of its container.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LAYOUT.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<article class=\"small\">\n  <div class=\"absolute left bottom right\">\n    <h5>Bottom of container</h5>\n  </div>\n</article>\n```\n\n----------------------------------------\n\nTITLE: Installing Beer CSS - Custom Element Version via NPM\nDESCRIPTION: NPM installation and import instructions for the custom element version of Beer CSS, which applies styles only to elements within the '<beer-css>' custom element.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nnpm i beercss\nnpm i material-dynamic-colors\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"beercss/custom-element\";\nimport \"material-dynamic-colors\";\n```\n\n----------------------------------------\n\nTITLE: Range-Limited Slider Examples\nDESCRIPTION: Examples of sliders including both default range (0-100) and custom range (4-8) implementations.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SLIDER.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"slider\">\n  <input type=\"range\">\n  <span></span>\n</label>\n\n<label class=\"slider\">\n  <input type=\"range\" min=\"4\" max=\"8\">\n  <span></span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Multiple Pages with Data Attributes\nDESCRIPTION: Demonstrates page switching using data-ui attributes to control visibility of multiple pages.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/PAGE.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a data-ui=\"#page1\">Open page 1</a>\n<a data-ui=\"#page2\">Open page 2</a>\n\n<div class=\"page\" id=\"page1\">\n  <h5>Page 1</h5>\n</div>\n\n<div class=\"page\" id=\"page2\">\n  <h5>Page 2</h5>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Beer CSS - Scoped Version via NPM\nDESCRIPTION: NPM installation and import instructions for the scoped version of Beer CSS, which applies styles only to elements within a container having the 'beer' class.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nnpm i beercss\nnpm i material-dynamic-colors\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"beercss/scoped\";\nimport \"material-dynamic-colors\";\n```\n\n----------------------------------------\n\nTITLE: Basic Layout Elements in HTML\nDESCRIPTION: Demonstrates the basic absolute and fixed position elements in Beer CSS. The absolute element is positioned relative to its container, while the fixed element is positioned relative to the document.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LAYOUT.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<...>\n  <div class=\"absolute\">...</div>\n</...>\n\n<div class=\"fixed\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Beer CSS - Custom Element Version via CDN\nDESCRIPTION: HTML code for including the custom element version of Beer CSS via CDN, which applies styles only to elements within the '<beer-css>' custom element.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.custom-element.min.js\"></script>\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/material-dynamic-colors@1.1.2/dist/cdn/material-dynamic-colors.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Row Layout Example\nDESCRIPTION: Demonstrates how to create a row layout with minimum and maximum width elements.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/NAVIGATION.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"row\">\n  <div>min</div>\n  <div>min</div>\n  <div class=\"max\">max</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Documentation Structure in Markdown\nDESCRIPTION: The main documentation structure written in Markdown format, listing and describing various UI components of the BeerCSS framework. Each section contains a link to detailed documentation and a brief description of the component's purpose.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/ELEMENTS.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ELEMENTS\n\n## [Badge](BADGE.md)\n\nBadges are generally used to emphasize some elements and they are placed in element corners.\n\n## [Button](BUTTON.md)\n\nButtons allow users to take actions, and make choices, with a single tap.\n\n[...additional content...]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Beer CSS Development\nDESCRIPTION: Command to install all necessary Node.js dependencies after cloning the Beer CSS repository. This is required before starting any development work.\nSOURCE: https://github.com/beercss/beercss/blob/main/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Including BeerCSS Scoped Version via CDN\nDESCRIPTION: This snippet demonstrates how to include the scoped version of BeerCSS using CDN links in an HTML file.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INDEX.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.scoped.min.css\" rel=\"stylesheet\" />\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.js\"></script>\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/material-dynamic-colors@1.1.2/dist/cdn/material-dynamic-colors.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Menu with Anchor Links in HTML\nDESCRIPTION: An example of a menu that contains anchor links within list items, allowing for navigation when a menu item is selected.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MENU.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<button>\n  <span>Button</span>\n  <menu>\n    <li>\n      <a href=\"#\">Item</a>\n    </li>\n    <li>\n      <a href=\"#\">Item</a>\n    </li>\n    <li>\n      <a href=\"#\">Item</a>\n    </li>\n  </menu>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Common NPM Scripts for Beer CSS Development\nDESCRIPTION: Essential NPM commands for Beer CSS development workflow, including starting the development server, building distribution files, and running the test suite.\nSOURCE: https://github.com/beercss/beercss/blob/main/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# watch and opens a browser\n$ npm run dev\n\n# build all dist files, including npm packages\n$ npm run build\n\n# run the full test suite, including linting/type checking\n$ npm run test\n```\n\n----------------------------------------\n\nTITLE: Basic Page Element Structure in HTML\nDESCRIPTION: Shows the basic structure of a page element using BeerCSS classes.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/PAGE.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Switch in Field Elements Example in HTML\nDESCRIPTION: Shows how to implement a switch component within a field container that uses middle alignment, integrating navigation elements with complementary text.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SWITCH.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field middle-align\">\n  <nav>\n    <div class=\"max\">\n      <h6>Title</h6>\n      <div>Complementary text</div>\n    </div>\n    <label class=\"switch\">\n      <input type=\"checkbox\">\n      <span></span>\n    </label>\n  </nav>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Badges to Buttons and Chips in HTML\nDESCRIPTION: This example shows how to apply badges to button and chip elements using beercss. It demonstrates the use of the 'badge' class along with other utility classes like 'circle' for styling.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/BADGE.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"circle\">\n  <i>home</i>\n  <div class=\"badge\">10</div>\n</button>\n\n<a class=\"chip circle\">\n  <i>home</i>\n  <div class=\"badge\">10</div>\n</a>\n```\n\n----------------------------------------\n\nTITLE: Popover API Snackbar Implementation\nDESCRIPTION: Implementation of snackbar using the Popover API with JavaScript control methods.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SNACKBAR.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<button popovertarget=\"snackbar\">Button</button>\n\n<div class=\"snackbar\" id=\"snackbar\" popover>\n  <i>warning</i>\n  <span>I'm a snackbar</span>\n</div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.querySelector('#snackbar').hidePopover(); // hide\ndocument.querySelector('#snackbar').showPopover(); //show\ndocument.querySelector('#snackbar').togglePopover(); // toggle\n```\n\n----------------------------------------\n\nTITLE: Radio Buttons Within Field Elements\nDESCRIPTION: An example showing how to implement radio buttons within a field container with middle alignment. This pattern is useful for form layouts that require grouped radio options with consistent alignment.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/RADIO.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field middle-align\">\n  <nav>\n    <label class=\"radio\">\n      <input type=\"radio\">\n      <span>Item 1</span>\n    </label>\n    <label class=\"radio\">\n      <input type=\"radio\">\n      <span>Item 2</span>\n    </label>\n    <label class=\"radio\">\n      <input type=\"radio\">\n      <span>Item 3</span>\n    </label>\n  </nav>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Checkboxes within a Field Element in HTML with Beer CSS\nDESCRIPTION: This example shows how to implement checkboxes within a field element for better alignment and grouping. It uses the 'field' and 'middle-align' classes for layout.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CHECKBOX.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field middle-align\">\n  <nav>\n    <label class=\"checkbox\">\n      <input type=\"checkbox\">\n      <span>Item 1</span>\n    </label>\n    <label class=\"checkbox\">\n      <input type=\"checkbox\">\n      <span>Item 2</span>\n    </label>\n    <label class=\"checkbox\">\n      <input type=\"checkbox\">\n      <span>Item 3</span>\n    </label>\n  </nav>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Display and Headline Typography in HTML\nDESCRIPTION: This snippet shows how to use heading elements to create display and headline text styles in BeerCSS.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TYPOGRAPHY.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<h1>Display</h1>\n<h2>Display</h2>\n<h3>Display</h3>\n<h4>Headline</h4>\n<h5>Headline</h5>\n<h6>Headline</h6>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Checkbox in HTML with Beer CSS\nDESCRIPTION: This snippet shows the basic HTML structure for creating a checkbox using Beer CSS. It includes a label element with a checkbox input and an empty span for styling.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CHECKBOX.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"checkbox\">\n  <input type=\"checkbox\">\n  <span></span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Custom Maximum Slider Implementation\nDESCRIPTION: Example of a custom slider with maximum styling modifier class.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SLIDER.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<article>\n  <label class=\"slider max\">\n    <input type=\"range\">\n    <span></span>\n  </label>\n<article>\n```\n\n----------------------------------------\n\nTITLE: Styled Media Elements with Helper Classes\nDESCRIPTION: Examples of applying helper classes to image, video, and SVG elements. Shows how to create circular media with the 'extra' size class.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MEDIA.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/image.png\" class=\"circle extra\">\n\n<video class=\"circle extra\">\n  <source src=\"/video.mp4\" type=\"video/mp4\">\n</video>\n\n<svg class=\"circle extra\" viewBox=\"0 0 24 24\">\n  <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\"></path>\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Default List Implementation in BeerCSS\nDESCRIPTION: Demonstrates a basic unordered list implementation with simple text items. This is the standard approach for creating a list of plain text items.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LIST.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"list\">\n  <li>Item</li>\n  <li>Item</li>\n  <li>Item</li>\n  <li>Item</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Displaying Stargazers Timeline Chart in Markdown\nDESCRIPTION: A markdown badge that embeds a time-series chart showing how the number of stars has grown over time for the Beer CSS repository.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n[![Stargazers over time](https://starchart.cc/beercss/beercss.svg?variant=adaptive)](https://starchart.cc/beercss/beercss)\n```\n\n----------------------------------------\n\nTITLE: Menu Trigger Method 3: HTML Structure with ID\nDESCRIPTION: The HTML structure for the third method of triggering a menu. The menu has an ID that can be targeted by JavaScript.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MENU.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<button>\n  <span>Button</span>\n  <menu id=\"menu\">\n    <li>Item</li>\n    <li>Item</li>\n    <li>Item</li>\n  </menu>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Select with Active Label in Beer CSS\nDESCRIPTION: Shows how to create a select field with an active label that stays in the up position, demonstrating the active class on the label element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SELECT.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field label\">\n  <select>\n    <option>Item</option>\n    <option>Item</option>\n    <option>Item</option>\n  </select>\n  <label class=\"active\">Label</label>\n</div>\n\n<div class=\"field label border\">\n  <select class=\"active\">\n    <option>Item</option>\n    <option>Item</option>\n    <option>Item</option>\n  </select>\n  <label class=\"active\">Label</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating an Active Overlay using Class Method in HTML\nDESCRIPTION: Shows how to create an immediately visible overlay by adding the 'active' class to the overlay element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/OVERLAY.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overlay center-align middle-align active\">\n  <progress class=\"circle\"></progress>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Data Attribute Triggered Snackbar\nDESCRIPTION: Implementation of a snackbar using data-ui attribute for trigger control.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SNACKBAR.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<button data-ui=\"#snackbar\">Open</button>\n\n<div class=\"snackbar\" id=\"snackbar\">\n  <i>warning</i>\n  <span>I'm a snackbar</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Centered Loading Overlay in HTML\nDESCRIPTION: Example showing how to create a centered overlay with a circular progress indicator, commonly used for loading states.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/OVERLAY.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overlay center-align middle-align\">\n  <progress class=\"circle\"></progress>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Integrating Font Awesome Icons\nDESCRIPTION: Demonstrates how to use Font Awesome icons within the Beer CSS framework by applying the appropriate Font Awesome classes. Requires manual loading of the Font Awesome library.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/ICON.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<i class=\"fa-regular fa-clock\"></i>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Badge Structure in HTML\nDESCRIPTION: This snippet demonstrates the basic HTML structure for creating a badge within an element using beercss. The badge is implemented as a div with the 'badge' class inside a parent element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/BADGE.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<...>\n  <div class=\"badge\">...</div>\n</...>\n```\n\n----------------------------------------\n\nTITLE: Basic Switch Element Implementation in HTML\nDESCRIPTION: The fundamental structure for creating a switch toggle component with Beer CSS, consisting of a label, checkbox input, and span element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SWITCH.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"switch\">\n  <input type=\"checkbox\">\n  <span></span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Field-Embedded Slider Implementation\nDESCRIPTION: Example of integrating a slider within a field container with middle alignment.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SLIDER.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field middle-align\">\n  <label class=\"slider\">\n    <input type=\"range\">\n    <span></span>\n  </label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Textarea with Label and Border in HTML with Beer CSS\nDESCRIPTION: Example of a textarea with a label and border styling. This implementation includes the label helper class and border styling.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TEXTAREA.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field textarea label border\">\n  <textarea></textarea>\n  <label>Label</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Active State Input Field - Method 1 - BeerCSS HTML\nDESCRIPTION: Shows how to implement an input field with an active state using active class method.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INPUT.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field label\">\n  <input type=\"text\" class=\"active\">\n  <label class=\"active\">Label</label>\n</div>\n\n<div class=\"field label border\">\n  <input type=\"text\" class=\"active\">\n  <label class=\"active\">Label</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Progress Element in HTML\nDESCRIPTION: Demonstrates the basic HTML structure for a progress element. This is the foundation for creating progress bars in BeerCSS.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/PROGRESS.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<progress>...</progress>\n```\n\n----------------------------------------\n\nTITLE: Basic Slider Implementation in HTML\nDESCRIPTION: Basic structure for implementing a slider control with BeerCSS. Contains a label wrapper, range input, and span element for styling.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SLIDER.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"slider\">\n  <input type=\"range\">\n  <span></span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Simple Page Example with Title\nDESCRIPTION: Demonstrates a basic page implementation with a heading element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/PAGE.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page\">\n  <h5>Title</h5>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Radio Button Implementation in HTML\nDESCRIPTION: The basic structure for a radio button in Beer CSS, consisting of a label element with class 'radio' containing an input of type 'radio' and an empty span element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/RADIO.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"radio\">\n  <input type=\"radio\">\n  <span></span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Including BeerCSS Custom Element Version via CDN\nDESCRIPTION: This snippet demonstrates how to include the custom element version of BeerCSS using CDN links in an HTML file.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INDEX.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.custom-element.min.js\"></script>\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/material-dynamic-colors@1.1.2/dist/cdn/material-dynamic-colors.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Basic Media Element Structure in HTML\nDESCRIPTION: Basic HTML structure for image and video elements in BeerCSS. These are the fundamental tags used for implementing media elements.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/MEDIA.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img>\n\n<video>...</video>\n```\n\n----------------------------------------\n\nTITLE: Implementing SVG Icons in Beer CSS\nDESCRIPTION: Demonstrates how to use SVG-based icons in Beer CSS by embedding an SVG with path data inside the icon element.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/ICON.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<i>\n  <svg viewBox=\"0 0 24 24\">\n    <path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7.07,18.28C7.5,17.38 10.12,16.5 12,16.5C13.88,16.5 16.5,17.38 16.93,18.28C15.57,19.36 13.86,20 12,20C10.14,20 8.43,19.36 7.07,18.28M18.36,16.83C16.93,15.09 13.46,14.5 12,14.5C10.54,14.5 7.07,15.09 5.64,16.83C4.62,15.5 4,13.82 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,13.82 19.38,15.5 18.36,16.83M12,6C10.06,6 8.5,7.56 8.5,9.5C8.5,11.44 10.06,13 12,13C13.94,13 15.5,11.44 15.5,9.5C15.5,7.56 13.94,6 12,6M12,11A1.5,1.5 0 0,1 10.5,9.5A1.5,1.5 0 0,1 12,8A1.5,1.5 0 0,1 13.5,9.5A1.5,1.5 0 0,1 12,11Z\"></path>\n  </svg>\n</i>\n```\n\n----------------------------------------\n\nTITLE: Basic Tooltip Structure in HTML\nDESCRIPTION: The fundamental HTML structure for creating a tooltip in Beer CSS. The tooltip element should be placed inside another element that will trigger the tooltip display.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TOOLTIP.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<...>\n  <div class=\"tooltip\">...</div>\n</...>\n```\n\n----------------------------------------\n\nTITLE: Divider Examples with Customization in BeerCSS\nDESCRIPTION: Examples of dividers with different customizations using BeerCSS helper classes. The example shows a standard divider, a small-sized divider, and a vertical divider. These modifiers help adjust the appearance and orientation of dividers.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/DIVIDER.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<hr />\n<hr class=\"small\" />\n<hr class=\"vertical\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Textarea Field in HTML with Beer CSS\nDESCRIPTION: Basic implementation of a textarea field using Beer CSS. This creates a simple textarea within a field container with the 'textarea' class.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TEXTAREA.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field textarea\">\n  <textarea></textarea>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Active Snackbar Implementation\nDESCRIPTION: Example of a snackbar with active class for visibility control.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/SNACKBAR.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"snackbar active\">\n  <i>warning</i>\n  <span>I'm a snackbar</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Indeterminate State for Checkbox in JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to set the indeterminate state of a checkbox. The indeterminate state cannot be set using HTML attributes and must be set programmatically.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/CHECKBOX.md#2025-04-21_snippet_3\n\nLANGUAGE: js\nCODE:\n```\ndocument.getElementById(elementId).indeterminate = true;\n```\n\n----------------------------------------\n\nTITLE: Method 2: Bordered Textarea with Placeholder Label Animation in Beer CSS\nDESCRIPTION: Another example of the placeholder method for label animation, this time with a bordered textarea field.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/TEXTAREA.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field label border\">\n  <textarea placeholder=\" \"></textarea>\n  <label>Label</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Active State Input Field - Method 2 - BeerCSS HTML\nDESCRIPTION: Demonstrates a pure CSS solution for input field styling using placeholder attribute.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/INPUT.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field label\">\n  <input type=\"text\" placeholder=\" \">\n  <label>Label</label>\n</div>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"field label border\">\n  <input type=\"text\" placeholder=\" \">\n  <label>Label</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Element Positioning Example in Beer CSS\nDESCRIPTION: Demonstrates how to position an element at the center of its container using absolute positioning with center and middle position classes.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/LAYOUT.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<article class=\"small\">\n  <span class=\"absolute center middle\">Positioned</span>\n</article>\n```\n\n----------------------------------------\n\nTITLE: Implementing Image-Based Icons\nDESCRIPTION: Shows how to use image files as icons by embedding an img element inside the icon container, useful for custom icons or logos.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/ICON.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<i>\n  <img src=\"/favicon.png\">\n</i>\n```\n\n----------------------------------------\n\nTITLE: Custom Summary Styling in Expansion Component\nDESCRIPTION: Shows how to customize the summary element of an expansion component by adding a CSS class. Using the 'none' class allows for complete customization of the summary section with arbitrary HTML content.\nSOURCE: https://github.com/beercss/beercss/blob/main/docs/EXPANSION.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<details>\n  <summary class=\"none\">\n    <...>...</...>\n  </summary>\n  <...>...</...>\n</details>\n```\n\n----------------------------------------\n\nTITLE: Displaying Stargazers Roster Badge in Markdown\nDESCRIPTION: A markdown badge that links to the repository's stargazers page while displaying a visual roster of users who have starred the project.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n[![Stargazers repo roster for @beercss/beercss](https://reporoster.com/stars/notext/beercss/beercss)](https://github.com/beercss/beercss/stargazers)\n```\n\n----------------------------------------\n\nTITLE: Beer CSS Anti-patterns - DON'T Examples\nDESCRIPTION: Examples of patterns to avoid when using Beer CSS, including multiple elements on a single tag, complex element dependencies, and improper navigation element placement.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n// N elements to 1 tag\n<div class=\"element element helper\">...</div>\n\n// element with dependencies\n<div class=\"element\">\n  <div class=\"element-header\">...</div>\n  <div class=\"element-content\">...</div>\n  <div class=\"element-footer\">...</div>\n</div>\n\n// nav elements after all others\n<body>\n  ...\n  <nav class=\"left|right|top|bottom\">...</nav>\n</body>\n\n<div id=\"app\">\n  ...\n  <nav class=\"left|right|top|bottom\">...</nav>\n</div>\n\n// write css like this\n.element.element {...}\n.element .element {...}\n.element .helper {...}\n```\n\n----------------------------------------\n\nTITLE: Explaining Beer CSS Principles with Structure Diagram\nDESCRIPTION: A text-based diagram explaining the architectural approach of Beer CSS, which follows the \"Germany Beer Purity Law\" with three core ingredients: settings, elements, and helpers.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n|\t\tSETTINGS\t |\t\t\t\t// The settings affects all document\n|---------------|----|\\n|\t\t\t\t\t|\t\t |\n|\t\tELEMENTS\t\t |\t\t |  // The elements are the components, widgets or tags\n|\t\t\t\t\t|\t\t |\n|---------------|\t\t |\n|\t\t\t\t\t|\t\t |\n|\t\t\t\t\t|\t\t |\n|\t\tHELPERS\t\t |----|\t\t// The common helpers makes the elements more scalable and customizable\n|\t\t\t\t\t|\n|\t\t\t\t\t|\n|---------------|\n\n```\n\n----------------------------------------\n\nTITLE: Installing Beer CSS - Scoped Version via CDN\nDESCRIPTION: HTML code for including the scoped version of Beer CSS via CDN, which applies styles only to elements within a container having the 'beer' class.\nSOURCE: https://github.com/beercss/beercss/blob/main/README.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.scoped.min.css\" rel=\"stylesheet\" />\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/beercss@3.10.7/dist/cdn/beer.min.js\"></script>\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/material-dynamic-colors@1.1.2/dist/cdn/material-dynamic-colors.min.js\"></script>\n```"
  }
]
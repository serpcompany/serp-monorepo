[
  {
    "owner": "android",
    "repo": "compose-samples.git",
    "content": "TITLE: Implementing Data Repository and ViewModel in Kotlin\nDESCRIPTION: Uses repository pattern with EmailRepository emitting email data flow, observed in ReplyHomeViewModel and exposed to UI via state flow.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Reply/README.md#2025-04-22_snippet_6\n\nLANGUAGE: Kotlin\nCODE:\n```\n// Code snippet not provided in the given text\n```\n\n----------------------------------------\n\nTITLE: Collecting StateFlow in Compose UI using collectAsStateWithLifecycle\nDESCRIPTION: This code snippet shows how to observe a ViewModel's state in a Compose UI component. It demonstrates using collectAsStateWithLifecycle to collect a StateFlow as Compose State while respecting the lifecycle of the composable.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Jetcaster/README.md#2025-04-22_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\nval viewModel: HomeViewModel = viewModel()\nval viewState by viewModel.state.collectAsStateWithLifecycle()\n```\n\n----------------------------------------\n\nTITLE: Implementing Material 3 Theming and Dynamic Colors in Kotlin\nDESCRIPTION: Applies Material 3 colors, typography, and theming, supporting both light and dark modes. Implements dynamic theming on Android 12+ using Material You.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Reply/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Kotlin\nCODE:\n```\n// Code snippet not provided in the given text\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Window Resizing in Kotlin\nDESCRIPTION: Uses WindowSizeClass to observe device size and configuration changes, enabling responsive layout adjustments.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Reply/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Kotlin\nCODE:\n```\n// Code snippet not provided in the given text\n```\n\n----------------------------------------\n\nTITLE: Detecting Foldable Device States in Kotlin\nDESCRIPTION: Utilizes WindowLayoutInfo to observe display features including folding postures, allowing real-time UI adjustments.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Reply/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Kotlin\nCODE:\n```\n// Code snippet not provided in the given text\n```\n\n----------------------------------------\n\nTITLE: Implementing Material 3 Navigation Components in Kotlin\nDESCRIPTION: Demonstrates usage of various navigation components based on screen size and states, including BottomNavigationBar, NavigationRail, and PermanentNavigationDrawer.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Reply/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Kotlin\nCODE:\n```\n// Code snippet not provided in the given text\n```\n\n----------------------------------------\n\nTITLE: Creating Adaptive Inbox Screen Layout in Kotlin\nDESCRIPTION: Implements adaptive content layout for the inbox screen, switching between list-only and list-with-detail views based on available screen size.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Reply/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Kotlin\nCODE:\n```\n// Code snippet not provided in the given text\n```\n\n----------------------------------------\n\nTITLE: Implementing Material 3 FAB Components in Kotlin\nDESCRIPTION: Uses different types of Floating Action Buttons (FAB) based on screen size and states, including LargeFloatingActionButton, FloatingActionButton, and ExtendedFloatingActionButton.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Reply/README.md#2025-04-22_snippet_5\n\nLANGUAGE: Kotlin\nCODE:\n```\n// Code snippet not provided in the given text\n```\n\n----------------------------------------\n\nTITLE: Dependencies Update Command\nDESCRIPTION: Shell command to update all dependencies to their latest stable versions\nSOURCE: https://github.com/android/compose-samples.git/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n./scripts/updateDeps.sh\n```\n\n----------------------------------------\n\nTITLE: Single Sample Format Apply Command\nDESCRIPTION: Gradle command to apply formatting to a single sample project using SpotlessApply\nSOURCE: https://github.com/android/compose-samples.git/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew --init-script buildscripts/init.gradle.kts spotlessApply\n```\n\n----------------------------------------\n\nTITLE: Single Sample Format Check Command\nDESCRIPTION: Gradle command to check formatting errors in a single sample project using SpotlessCheck\nSOURCE: https://github.com/android/compose-samples.git/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew --init-script buildscripts/init.gradle.kts spotlessCheck\n```\n\n----------------------------------------\n\nTITLE: Formatting Script Command\nDESCRIPTION: Shell command for automatic formatting of all samples in the repository\nSOURCE: https://github.com/android/compose-samples.git/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./scripts/format.sh\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Notice for JetLagged Sample App\nDESCRIPTION: Standard Apache License 2.0 copyright notice and license terms for the JetLagged sample application, indicating the app is licensed under Apache 2.0 by The Android Open Source Project.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/JetLagged/README.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright 2022 The Android Open Source Project\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: License Declaration for Jetchat Sample App\nDESCRIPTION: Standard Apache 2.0 license declaration for the Jetchat sample application code.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Jetchat/README.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright 2020 The Android Open Source Project\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Apache License Code Block\nDESCRIPTION: Standard Apache 2.0 license text block included in the project documentation.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/Jetsnack/README.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright 2020 The Android Open Source Project\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Apache License Text for Android Compose Samples\nDESCRIPTION: Standard Apache 2.0 license text applied to the Android Compose Samples project, specifying usage terms and conditions.\nSOURCE: https://github.com/android/compose-samples.git/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nCopyright 2024 The Android Open Source Project\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```"
  }
]
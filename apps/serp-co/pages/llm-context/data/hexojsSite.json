[
  {
    "owner": "hexojs",
    "repo": "site",
    "content": "TITLE: Generating Static Files in Hexo\nDESCRIPTION: Generates static files for the Hexo website. Includes options for deployment, watching file changes, error handling, force regeneration, and setting concurrency.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate\n```\n\n----------------------------------------\n\nTITLE: Initializing a Hexo Website\nDESCRIPTION: Initializes a new Hexo website in the specified folder or current directory. This command clones the hexo-starter repository and installs dependencies using Yarn, pnpm, or npm.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo init [folder]\n```\n\n----------------------------------------\n\nTITLE: Registering a Hexo Generator\nDESCRIPTION: Demonstrates how to register a custom generator in Hexo. The function receives a 'locals' argument containing site variables, which should be used to access website data instead of querying the database directly.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/generator.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(name, function (locals) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Writing Code Blocks in Markdown with Hexo\nDESCRIPTION: Examples of the three ways to create code blocks in Hexo: using the codeblock tag plugin, the code tag plugin, or the Markdown fenced code block syntax with Hexo extensions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n\n{% code [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcode %}\n\n```[language] [title] [url] [link text] [additional options]\ncode snippet\n```\n```\n\n----------------------------------------\n\nTITLE: Creating a New Hexo Article\nDESCRIPTION: Creates a new article with the specified layout and title. If no layout is provided, it uses the default_layout from _config.yml. The title must be enclosed in quotes if it contains spaces.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new [layout] <title>\n```\n\n----------------------------------------\n\nTITLE: Initializing a Hexo Website\nDESCRIPTION: Initializes a new Hexo website in the specified folder or current directory. This command clones the hexo-starter repository and installs dependencies using Yarn, pnpm, or npm.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo init [folder]\n```\n\n----------------------------------------\n\nTITLE: Initializing a Hexo project using command line\nDESCRIPTION: These commands initialize a new Hexo project in the specified folder, change to that directory, and install dependencies.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/setup.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Initializing a Hexo project using command line\nDESCRIPTION: These commands initialize a new Hexo project in the specified folder, change to that directory, and install dependencies.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/setup.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Executing Filters in Hexo\nDESCRIPTION: Shows how to execute filters in Hexo using both synchronous and asynchronous methods. Includes options for setting context and additional arguments.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\n----------------------------------------\n\nTITLE: Generating Static Files in Hexo\nDESCRIPTION: Generates static files for the Hexo website. Options include deploying after generation, watching for file changes, and setting concurrency for parallel file generation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate\n```\n\n----------------------------------------\n\nTITLE: Enabling Post Asset Folders in Hexo Configuration\nDESCRIPTION: Configuration setting to enable post asset folders, which creates a dedicated folder for assets with each new post.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/asset-folders.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npost_asset_folder: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Post Asset Folders in Hexo Configuration\nDESCRIPTION: This YAML snippet shows how to enable post-specific asset folders in Hexo's _config.yml file. When set to true, Hexo will create a separate asset directory for each new post.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/asset-folders.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npost_asset_folder: true\n```\n\n----------------------------------------\n\nTITLE: Loading Files in Hexo\nDESCRIPTION: Demonstrates how to load files from the source folder and theme data using the load() method. This processes all files and generates routes. The example also shows the watch() method which loads files and continues watching for changes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/index.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.load().then(function () {\n  // ...\n});\n\nhexo.watch().then(function () {\n  // You can call hexo.unwatch() later to stop watching.\n});\n```\n\n----------------------------------------\n\nTITLE: Registering a Filter in Hexo\nDESCRIPTION: Demonstrates how to register a filter in Hexo, including accessing user and theme configurations. The priority parameter determines execution order.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register(type, function() {\n  // User configuration\n  const { config } = this;\n  if (config.external_link.enable) // do something...\n\n  // Theme configuration\n  const { config: themeCfg } = this.theme;\n  if (themeCfg.fancybox) // do something...\n\n}, priority);\n```\n\n----------------------------------------\n\nTITLE: Listening for New Post Event in Hexo (JavaScript)\nDESCRIPTION: This snippet demonstrates how to listen for the 'new' event in Hexo, which is emitted after a new post has been created. The event handler receives a post object containing the full path and content of the new post file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/events.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.on(\"new\", function (post) {\n  //\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing a Hexo Instance in JavaScript\nDESCRIPTION: Creates a new Hexo instance with the current working directory as the base directory and initializes it. The initialization process loads the configuration and plugins. The code demonstrates how to create, initialize, and use a Hexo instance with optional configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/index.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar Hexo = require(\"hexo\");\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Registering a Filter in Hexo\nDESCRIPTION: Demonstrates how to register a filter in Hexo, including accessing user and theme configurations. The priority parameter determines execution order.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register(type, function() {\n  // User configuration\n  const { config } = this;\n  if (config.external_link.enable) // do something...\n\n  // Theme configuration\n  const { config: themeCfg } = this.theme;\n  if (themeCfg.fancybox) // do something...\n\n}, priority);\n```\n\n----------------------------------------\n\nTITLE: Creating New Post in Hexo\nDESCRIPTION: Command to create a new post or page using Hexo CLI. The layout parameter is optional with 'post' being the default value.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/writing.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new [layout] <title>\n```\n\n----------------------------------------\n\nTITLE: Generating Hexo Website\nDESCRIPTION: Command to generate the static files for the Hexo website. This transforms the source files into HTML, CSS, and JavaScript that can be served to users.\nSOURCE: https://github.com/hexojs/site/blob/master/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhexo generate\n```\n\n----------------------------------------\n\nTITLE: Basic Hexo Deployment Command in Bash\nDESCRIPTION: The basic command to deploy a Hexo site. This single command triggers the deployment process based on the configuration in _config.yml.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo deploy\n```\n\n----------------------------------------\n\nTITLE: Creating New Post in Hexo\nDESCRIPTION: Command to create a new post or page using Hexo CLI. The layout parameter is optional with 'post' being the default value.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/writing.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new [layout] <title>\n```\n\n----------------------------------------\n\nTITLE: Initializing a Hexo Instance in JavaScript\nDESCRIPTION: Creates a new Hexo instance with the current working directory as the base directory and initializes it. The initialization process loads the configuration and plugins. The code demonstrates how to create, initialize, and use a Hexo instance with optional configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/index.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar Hexo = require(\"hexo\");\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Starting the Hexo development server\nDESCRIPTION: Basic command to start the Hexo server. When running, the server will watch for file changes and automatically update. The site will be available at http://localhost:4000 by default.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/server.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server\n```\n\n----------------------------------------\n\nTITLE: Graceful Termination of Hexo Process\nDESCRIPTION: Demonstrates the proper way to exit Hexo after executing commands. The exit method allows Hexo to complete important tasks like saving the database before terminating.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/index.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo\n  .call(\"generate\")\n  .then(function () {\n    return hexo.exit();\n  })\n  .catch(function (err) {\n    return hexo.exit(err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Publishing Drafts in Hexo\nDESCRIPTION: Command to move draft posts from source/_drafts to source/_posts folder. Works similarly to the 'new' command.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/writing.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo publish [layout] <title>\n```\n\n----------------------------------------\n\nTITLE: Generating and Deploying Hexo Site (Option 1)\nDESCRIPTION: This command combines the generation of static files with immediate deployment. It's one of two equivalent ways to generate and deploy a Hexo site in a single step.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/generating.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate --deploy\n```\n\n----------------------------------------\n\nTITLE: Creating new content in Hexo using command line\nDESCRIPTION: Command to create a new post or page in Hexo where [layout] is optional (defaults to post) and <title> is required. This creates a new file based on the specified layout template.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/writing.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new [layout] <title>\n```\n\n----------------------------------------\n\nTITLE: Starting a Hexo Local Server\nDESCRIPTION: Starts a local server for the Hexo website, typically at http://localhost:4000/. Includes options for port override, static file serving, and logging.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server\n```\n\n----------------------------------------\n\nTITLE: Installing hexo-server package with npm\nDESCRIPTION: Command to install the hexo-server package as a dependency for your Hexo project. This is required before you can use the server functionality in Hexo 3+.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/server.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-server --save\n```\n\n----------------------------------------\n\nTITLE: Getting a Path in Hexo Router\nDESCRIPTION: Demonstrates how to get a path from Hexo's router and pipe it to a destination. The get method returns a Stream object that can be piped to other streams.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/router.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar data = hexo.route.get(\"index.html\");\nvar dest = fs.createWriteStream(\"somewhere\");\n\ndata.pipe(dest);\n```\n\n----------------------------------------\n\nTITLE: Creating a Paginated Archive Page in Hexo\nDESCRIPTION: Shows how to create a paginated archive page using the hexo-pagination plugin. It generates multiple pages for the /archives route with 10 posts per page.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/generator.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar pagination = require(\"hexo-pagination\");\n\nhexo.extend.generator.register(\"archive\", function (locals) {\n  // hexo-pagination makes an index.html for the /archives route\n  return pagination(\"archives\", locals.posts, {\n    perPage: 10,\n    layout: [\"archive\", \"index\"],\n    data: {},\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a New Hexo Post\nDESCRIPTION: Creates a new article with the specified layout and title. If no layout is provided, it uses the default_layout from _config.yml. The --path option allows customizing the post's file path.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new [layout] <title>\n```\n\nLANGUAGE: bash\nCODE:\n```\nhexo new page --path about/me \"About me\"\n```\n\n----------------------------------------\n\nTITLE: Generating Static Files with Hexo CLI\nDESCRIPTION: This command uses the Hexo CLI to generate static files for a Hexo project. It's the basic command for creating the static output of a Hexo site.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/generating.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate\n```\n\n----------------------------------------\n\nTITLE: Publishing drafts to posts in Hexo\nDESCRIPTION: Command to move a draft from the source/_drafts directory to source/_posts, making it visible on the site. Similar to the new command, it takes an optional layout parameter and a required title.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/writing.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo publish [layout] <title>\n```\n\n----------------------------------------\n\nTITLE: Installing hexo-server package with npm\nDESCRIPTION: Command to install the hexo-server package as a dependency for your Hexo project. This is required before you can use the server functionality in Hexo 3+.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/server.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-server --save\n```\n\n----------------------------------------\n\nTITLE: Registering Basic Hexo Renderer\nDESCRIPTION: Basic syntax for registering a new renderer in Hexo. Shows the core registration function with parameters for name, output extension, rendering function, and sync mode flag.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/renderer.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.renderer.register(\n  name,\n  output,\n  function (data, options) {\n    // ...\n  },\n  sync,\n);\n```\n\n----------------------------------------\n\nTITLE: Starting a Local Hexo Server\nDESCRIPTION: Starts a local server for the Hexo website. Default location is http://localhost:4000/. Options include specifying a port and enabling logging.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server\n```\n\n----------------------------------------\n\nTITLE: Configuring GitLab CI for Hexo Deployment\nDESCRIPTION: This YAML configuration sets up a GitLab CI pipeline for building and deploying a Hexo site. It uses a Node.js Alpine image, caches node_modules, installs dependencies, and runs the build script. The generated files are then deployed as artifacts.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/gitlab-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nimage: node:16-alpine\ncache:\n  paths:\n    - node_modules/\n\nbefore_script:\n  - npm install hexo-cli -g\n  - npm install\n\npages:\n  script:\n    - npm run build\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Hexo Injector Example\nDESCRIPTION: Example showing how to inject CSS and JavaScript files into different parts of HTML pages. Demonstrates binding helper functions, using function callbacks for values, and targeting specific layouts.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/injector.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\nconst js = hexo.extend.helper.get(\"js\").bind(hexo);\n\nhexo.extend.injector.register(\n  \"head_end\",\n  () => {\n    return css(\n      \"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css\",\n    );\n  },\n  \"music\",\n);\n\nhexo.extend.injector.register(\n  \"body_end\",\n  '<script src=\"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js\">',\n  \"music\",\n);\n\nhexo.extend.injector.register(\"body_end\", () => {\n  return js(\"/js/jquery.js\");\n});\n```\n\n----------------------------------------\n\nTITLE: Registering Basic Hexo Console Command\nDESCRIPTION: Basic syntax for registering a new console command in Hexo with name, description, options, and handler function.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/console.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.console.register(name, desc, options, function (args) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Using a Hexo Helper in Templates\nDESCRIPTION: Example of how to use a registered helper in a Hexo template. This shows the helper being called with a parameter and the resulting HTML output.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/helper.md#2025-04-10_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n<%- js('script.js') %>\n// <script src=\"script.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Registering Hexo Deployer Extension\nDESCRIPTION: Shows how to register a custom deployer function in Hexo. The deployer receives an args parameter containing configuration from _config.yml and user terminal input.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/deployer.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.deployer.register(name, function (args) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Running Hexo Development Server\nDESCRIPTION: Command to start the local development server for the Hexo website. This allows developers to preview changes in a web browser before deploying them.\nSOURCE: https://github.com/hexojs/site/blob/master/README.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhexo server\n```\n\n----------------------------------------\n\nTITLE: Updating Hexo Version in package.json\nDESCRIPTION: Shows how to update the Hexo version in package.json to upgrade to version 5.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-07-29-hexo-5-released.md#2025-04-10_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n``` diff package.json\n-  \"hexo\": \"^4.2.1\",\n+  \"hexo\": \"^5.0.0\",\n```\n```\n\n----------------------------------------\n\nTITLE: Registering Basic Hexo Console Command\nDESCRIPTION: Basic syntax for registering a new console command in Hexo with name, description, options, and handler function.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/console.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.console.register(name, desc, options, function (args) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Node Modules Path in Linux\nDESCRIPTION: Command to add local node_modules bin directory to PATH in Linux for direct Hexo command execution.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/index.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\necho 'PATH=\"$PATH:./node_modules/.bin\"' >> ~/.profile\n```\n\n----------------------------------------\n\nTITLE: Registering an Injector in Hexo\nDESCRIPTION: This snippet shows the basic syntax for registering an injector in Hexo. It takes three parameters: entry (where to inject), value (what to inject), and to (which pages to inject to).\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/injector.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.injector.register(entry, value, to);\n```\n\n----------------------------------------\n\nTITLE: Creating a Post in Hexo\nDESCRIPTION: This function creates a new post in Hexo. It takes data parameters for post attributes and a replace flag to overwrite existing files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/posts.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.create(data, replace);\n```\n\n----------------------------------------\n\nTITLE: Starting the Hexo Server\nDESCRIPTION: Command to start the Hexo server. Once running, the site will be accessible at http://localhost:4000 by default, and Hexo will watch for file changes and automatically update the page.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/server.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server\n```\n\n----------------------------------------\n\nTITLE: File Include/Exclude Configuration in YAML\nDESCRIPTION: Comprehensive example showing how to include or exclude specific files and folders using glob patterns in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/configuration.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Include/Exclude Files/Folders\ninclude:\n  - \".nojekyll\"\n  # Include 'source/css/_typing.css'.\n  - \"css/_typing.css\"\n  # Include any file in 'source/_css/'.\n  - \"_css/*\"\n  # Include any file and subfolder in 'source/_css/'.\n  - \"_css/**/*\"\n\nexclude:\n  # Exclude 'source/js/test.js'.\n  - \"js/test.js\"\n  # Exclude any file in 'source/js/'.\n  - \"js/*\"\n  # Exclude any file and subfolder in 'source/js/'.\n  - \"js/**/*\"\n  # Exclude any file with filename that starts with 'test' in 'source/js/'.\n  - \"js/test*\"\n  # Exclude any file with filename that starts with 'test' in 'source/js/' and its subfolders.\n  - \"js/**/test*\"\n\nignore:\n  # Ignore any folder named 'foo'.\n  - \"**/foo\"\n  # Ignore 'foo' folder in 'themes/' only.\n  - \"**/themes/*/foo\"\n  # Same as above, but applies to every subfolders of 'themes/'.\n  - \"**/themes/**/foo\"\n```\n\n----------------------------------------\n\nTITLE: Starting Hexo Server\nDESCRIPTION: Launches the Hexo server, making the website accessible at http://localhost:4000 by default. The server watches for file changes and updates automatically.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/server.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server\n```\n\n----------------------------------------\n\nTITLE: Hexo deployment configuration in YAML\nDESCRIPTION: This YAML snippet configures the deployment settings for Hexo in the _config.yml file. It specifies the deployment type as git, the repository URL, and the branch to deploy to.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/github-pages.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: git\n  repo: https://github.com/<username>/<project>\n  # example, https://github.com/hexojs/hexojs.github.io\n  branch: gh-pages\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo project dependencies in package.json\nDESCRIPTION: This JSON snippet shows the default package.json file for a Hexo project, listing the core Hexo dependency and various plugins for generating and rendering content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/setup.md#2025-04-10_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^7.0.0\",\n    \"hexo-generator-archive\": \"^2.0.0\",\n    \"hexo-generator-category\": \"^2.0.0\",\n    \"hexo-generator-index\": \"^3.0.0\",\n    \"hexo-generator-tag\": \"^2.0.0\",\n    \"hexo-renderer-ejs\": \"^2.0.0\",\n    \"hexo-renderer-stylus\": \"^3.0.0\",\n    \"hexo-renderer-marked\": \"^6.0.0\",\n    \"hexo-server\": \"^3.0.0\",\n    \"hexo-theme-landscape\": \"^1.0.0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo project dependencies in package.json\nDESCRIPTION: This JSON snippet shows the default package.json file for a Hexo project, listing the core Hexo dependency and various plugins for generating and rendering content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/setup.md#2025-04-10_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^7.0.0\",\n    \"hexo-generator-archive\": \"^2.0.0\",\n    \"hexo-generator-category\": \"^2.0.0\",\n    \"hexo-generator-index\": \"^3.0.0\",\n    \"hexo-generator-tag\": \"^2.0.0\",\n    \"hexo-renderer-ejs\": \"^2.0.0\",\n    \"hexo-renderer-stylus\": \"^3.0.0\",\n    \"hexo-renderer-marked\": \"^6.0.0\",\n    \"hexo-server\": \"^3.0.0\",\n    \"hexo-theme-landscape\": \"^1.0.0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering a Renderer in Hexo (JavaScript)\nDESCRIPTION: This snippet shows the basic structure for registering a new renderer in Hexo. It includes parameters for the input and output file extensions, the rendering function, and a sync mode flag.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/renderer.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.renderer.register(\n  name,\n  output,\n  function (data, options) {\n    // ...\n  },\n  sync\n);\n```\n\n----------------------------------------\n\nTITLE: Publishing a Draft with Hexo API in JavaScript\nDESCRIPTION: This function publishes a draft post in Hexo. It takes data for the post and a replace flag as arguments. The data object must include a slug (file name) and can optionally include a layout.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/posts.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.publish(data, replace);\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo Core Package\nDESCRIPTION: Command to install the main Hexo package as a project dependency\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2015-03-05-hexo-3-0-released.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo --save\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Layout Post in Hexo\nDESCRIPTION: Example of creating a new post with a custom 'photo' layout. Hexo will look for photo.md in the scaffolds folder for the template.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/writing.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new photo \"My Gallery\"\n```\n\n----------------------------------------\n\nTITLE: User Configuration Access - Factory Function\nDESCRIPTION: Shows how to access user configuration using a factory function pattern.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/injector.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\")(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = (hexo) => () => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst injectFn = (hexo) => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n\nmodule.exports = (hexo) => injectFn(hexo);\n```\n\n----------------------------------------\n\nTITLE: Git Deployer Configuration in YAML\nDESCRIPTION: YAML configuration for the Git deployment method, showing the essential and optional parameters including repository URL, branch name, and commit message formatting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: git\n  repo: <repository url> # https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io\n  branch: [branch]\n  message: [message]\n```\n\n----------------------------------------\n\nTITLE: Git Deployment Configuration\nDESCRIPTION: Detailed YAML configuration for Git deployment including repository URL, branch, and commit message.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: git\n  repo: <repository url> # https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io\n  branch: [branch]\n  message: [message]\n```\n\n----------------------------------------\n\nTITLE: User Configuration Access - Factory Function\nDESCRIPTION: Shows how to access user configuration using a factory function pattern.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/injector.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\")(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = (hexo) => () => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst injectFn = (hexo) => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n\nmodule.exports = (hexo) => injectFn(hexo);\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up Hexo Development Environment\nDESCRIPTION: Commands for cloning the Hexo repository, installing dependencies, and initializing git submodules to prepare for development.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/contributing.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/<username>/hexo.git\n$ cd hexo\n$ npm install\n$ git submodule update --init\n```\n\n----------------------------------------\n\nTITLE: Tag with Configuration Access\nDESCRIPTION: Example showing how to access user configuration, theme configuration, and front-matter data within a tag plugin.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/tag.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register('foo', function (args) {\n  const [firstArg] = args;\n\n  // User config\n  const { config } = hexo;\n  const editor = config.author + firstArg;\n\n  // Theme config\n  const { config: themeCfg } = hexo.theme;\n  if (themeCfg.fancybox) // do something...\n\n  // Front-matter\n  const { title } = this; // article's (post/page) title\n\n  // Article's content\n  const { _content } = this; // original content\n  const { content } = this; // HTML-rendered content\n\n  return 'foo';\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo CLI Globally\nDESCRIPTION: Command to install the Hexo command-line interface globally using npm\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2015-03-05-hexo-3-0-released.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-cli -g\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Language Detection in YAML\nDESCRIPTION: Shows how to set up automatic language detection based on URL structure in the Hexo _config.yml file. This allows for language-specific URLs without explicitly setting the language in each page's front-matter.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/internationalization.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ni18n_dir: :lang\n```\n\n----------------------------------------\n\nTITLE: Rsync Deployer Configuration in YAML\nDESCRIPTION: YAML configuration for Rsync deployment, showing host, user, root directory and various optional parameters for controlling the synchronization process.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\n----------------------------------------\n\nTITLE: Generating and Deploying Hexo Site (Option 2)\nDESCRIPTION: An alternative command that combines the generation of static files with immediate deployment. This option is functionally identical to 'hexo generate --deploy'.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/generating.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo deploy --generate\n```\n\n----------------------------------------\n\nTITLE: Theme Configuration Examples in YAML\nDESCRIPTION: Examples demonstrating different ways to configure Hexo themes using theme_config and dedicated configuration files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/configuration.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\ntheme: \"my-theme\"\ntheme_config:\n  bio: \"My awesome bio\"\n  foo:\n    bar: \"a\"\n```\n\n----------------------------------------\n\nTITLE: Injector Usage Example with CSS and JS\nDESCRIPTION: Demonstrates how to inject CSS and JavaScript files into HTML pages using the injector, including conditional injection based on page layout.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/injector.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\nconst js = hexo.extend.helper.get(\"js\").bind(hexo);\n\nhexo.extend.injector.register(\n  \"head_end\",\n  () => {\n    return css(\n      \"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css\",\n    );\n  },\n  \"music\",\n);\n\nhexo.extend.injector.register(\n  \"body_end\",\n  '<script src=\"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js\">',\n  \"music\",\n);\n\nhexo.extend.injector.register(\"body_end\", () => {\n  return js(\"/js/jquery.js\");\n});\n```\n\n----------------------------------------\n\nTITLE: Adding File Processors in Box\nDESCRIPTION: Example of registering a new processor with the Box container using the addProcessor method. Shows how to process files matching a specific path pattern.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/box.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nbox.addProcessor(\"posts/:id\", function (file) {\n  //\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Various Lifecycle Filters in Hexo\nDESCRIPTION: Demonstrates how to implement various lifecycle filters in Hexo, including before_exit, before_generate, after_generate, and after_init.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register(\"before_exit\", function () {\n  // ...\n});\n\nhexo.extend.filter.register(\"before_generate\", function () {\n  // ...\n});\n\nhexo.extend.filter.register(\"after_generate\", function () {\n  // ...\n});\n\nhexo.extend.filter.register(\"after_init\", function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Creating content with custom scaffolds in Hexo\nDESCRIPTION: Example of creating a new post using a custom scaffold template named 'photo'. This command will generate a new post titled 'My Gallery' using the photo.md template from the scaffolds directory.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/writing.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new photo \"My Gallery\"\n```\n\n----------------------------------------\n\nTITLE: SFTP Deployer Configuration in YAML\nDESCRIPTION: YAML configuration for SFTP deployment, showing host, authentication options (password or key-based), and path settings for secure file transfers.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: sftp\n  host: <host>\n  user: <user>\n  pass: <password>\n  remotePath: [remote path]\n  port: [port]\n  privateKey: [path/to/privateKey]\n  passphrase: [passphrase]\n  agent: [path/to/agent/socket]\n```\n\n----------------------------------------\n\nTITLE: Installing Git Deployment Plugin for Hexo\nDESCRIPTION: Command to install the hexo-deployer-git plugin, which is necessary for Git-based deployments in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-git --save\n```\n\n----------------------------------------\n\nTITLE: Accessing User Configuration - Factory Pattern\nDESCRIPTION: Shows an alternative approach using a factory pattern where hexo is passed as a parameter to the module. The index.js file handles the registration and passes the hexo instance.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/injector.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\")(hexo));\n```\n\n----------------------------------------\n\nTITLE: Retrieving Local Variables in Hexo.js\nDESCRIPTION: Demonstrates how to retrieve a specific local variable from Hexo.js template system. This example shows getting the 'posts' variable.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/locals.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.get(\"posts\");\n```\n\n----------------------------------------\n\nTITLE: Registering a Custom Migrator in Hexo\nDESCRIPTION: This snippet shows how to register a custom migrator in Hexo. The function takes a 'name' parameter to identify the migrator and a callback function that receives user input arguments. Developers can implement migration logic within this callback.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/migrator.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.migrator.register(name, function (args) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Pushing to GitHub Main Branch\nDESCRIPTION: Command to push the main branch of a Hexo site to GitHub repository, which is necessary when setting up GitHub Pages deployment.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/github-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Using list_posts Helper in Hexo Templates\nDESCRIPTION: The list_posts helper function generates a list of posts in a Hexo template. It supports options for ordering, styling, limiting the number of posts displayed, and customizing the display format.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_posts([options]) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring RSS3 Deployment in Hexo\nDESCRIPTION: YAML configuration for the RSS3 deployer in Hexo. Sets up endpoint, private key, and IPFS deployment options including gateway and API authentication details.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy: # The root configuration block for all deployers\n  - type: rss3\n    endpoint: https://hub.rss3.io\n    privateKey: 47e18d6c386898b424025cd9db446f779ef24ad33a26c499c87bb3d9372540ba\n    ipfs:\n      deploy: true\n      gateway: pinata\n      api:\n        key: d693df715d3631e489d6\n        secret: ee8b74626f12b61c1a4bde3b8c331ad390567c86ba779c9b18561ee92c1cbff0\n```\n\n----------------------------------------\n\nTITLE: Setting default permalink variable values in Hexo\nDESCRIPTION: This snippet shows how to define default values for permalink variables in the Hexo configuration file. This allows you to set default values that will be used when a specific variable isn't available for a post.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/permalinks.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npermalink_defaults:\n  lang: en\n```\n\n----------------------------------------\n\nTITLE: Configuring Pretty URLs in Hexo YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure pretty URLs in Hexo by removing the trailing 'index.html' from permalinks. It sets the 'trailing_index' option to false under the 'pretty_urls' configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/configuration.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# e.g. page.permalink is http://example.com/foo/bar/index.html\npretty_urls:\n  trailing_index: false\n# becomes http://example.com/foo/bar/\n```\n\n----------------------------------------\n\nTITLE: Initializing Edgio Connector for Hexo\nDESCRIPTION: Command to initialize the Edgio connector for Hexo projects. This sets up the necessary configuration for deploying Hexo sites to Edgio.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nedgio init --connector=@edgio/hexo\n```\n\n----------------------------------------\n\nTITLE: Structuring a Hexo Plugin Folder\nDESCRIPTION: Demonstrates the required folder structure for a Hexo plugin, including the main JavaScript file and package.json.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/plugins.md#2025-04-10_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n.\n├── index.js\n└── package.json\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo CLI Globally\nDESCRIPTION: Command to install the Hexo command line interface globally using npm package manager.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/index.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install -g hexo-cli\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom Console Command in Hexo\nDESCRIPTION: Provides a complete example of registering a new 'config' command that displays the Hexo configuration when invoked. This showcases how to put all the concepts together.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/console.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.console.register(\n  \"config\",\n  \"Display configuration\",\n  function (args) {\n    console.log(hexo.config);\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow for Hexo Pages Deployment\nDESCRIPTION: A GitHub Actions workflow configuration that automates building and deploying a Hexo site to GitHub Pages. It includes steps for checking out code, setting up Node.js, caching dependencies, building the site, and deploying to GitHub Pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/github-pages.md#2025-04-10_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\nname: Pages\n\non:\n  push:\n    branches:\n      - main # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 20\n        uses: actions/setup-node@v4\n        with:\n          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n          # Ref: https://github.com/actions/setup-node#supported-version-syntax\n          node-version: \"20\"\n      - name: Cache NPM dependencies\n        uses: actions/cache@v4\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n----------------------------------------\n\nTITLE: Using tagcloud Helper in Hexo Templates\nDESCRIPTION: The tagcloud helper function creates a tag cloud visualization in a Hexo template. It supports customization of font sizes, colors, ordering, and can limit the number of tags displayed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n<%- tagcloud([tags], [options]) %>\n```\n\n----------------------------------------\n\nTITLE: OpenShift Deployer Configuration in YAML\nDESCRIPTION: YAML configuration for deploying to OpenShift, with repository URL and optional custom commit message parameters.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\n----------------------------------------\n\nTITLE: User Configuration Access - Direct Method\nDESCRIPTION: Shows how to access user configuration directly within the injector callback function.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/injector.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\n\nhexo.extend.injector.register(\"head_end\", () => {\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring package.json for a Hexo Plugin\nDESCRIPTION: Shows the minimum required fields in the package.json file for a Hexo plugin, including name, version, and main entry point.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/plugins.md#2025-04-10_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hexo Version\nDESCRIPTION: Displays the version information of the Hexo installation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo version\n```\n\n----------------------------------------\n\nTITLE: Running Hexo server in static mode\nDESCRIPTION: Command to start the Hexo server in static mode using the -s flag. In this mode, only files in the public folder are served and file watching is disabled, requiring manual generation before server start.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/server.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -s\n```\n\n----------------------------------------\n\nTITLE: Specifying Console Command Arguments in Hexo\nDESCRIPTION: Illustrates how to define and describe the arguments for a console command using the 'arguments' option. This provides clarity on what each argument represents.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/console.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  arguments: [\n    { name: \"layout\", desc: \"Post layout\" },\n    { name: \"title\", desc: \"Post title\" },\n  ];\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Category Map in YAML\nDESCRIPTION: Example showing how to override category slugs using category_map in Hexo configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/configuration.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncategory_map:\n  \"yesterday's thoughts\": yesterdays-thoughts\n  \"C++\": c-plus-plus\n```\n\n----------------------------------------\n\nTITLE: Enabling Highlight.js in Hexo (v7.0.0+)\nDESCRIPTION: Configuration to enable highlight.js in Hexo version 7.0.0 and above, using the new syntax_highlighter option with the same customization options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"  \"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\n```\n\n----------------------------------------\n\nTITLE: Running Hexo server in static mode\nDESCRIPTION: Command to start the Hexo server in static mode using the -s flag. In this mode, only files in the public folder are served and file watching is disabled, requiring manual generation before server start.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/server.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -s\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions workflow for Hexo deployment (YAML)\nDESCRIPTION: A GitHub Actions workflow configuration for building and deploying a Hexo site to GitHub Pages. It includes steps for checking out the repository, setting up Node.js, caching dependencies, building the site, and deploying to GitHub Pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/github-pages.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: Pages\n\non:\n  push:\n    branches:\n      - main # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 20\n        uses: actions/setup-node@v4\n        with:\n          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n          # Ref: https://github.com/actions/setup-node#supported-version-syntax\n          node-version: \"20\"\n      - name: Cache NPM dependencies\n        uses: actions/cache@v4\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination Directory in YAML\nDESCRIPTION: Examples demonstrating how to customize pagination URL format using pagination_dir setting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/configuration.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npagination_dir: 'page'\n# http://example.com/page/2\n\npagination_dir: 'awesome-page'\n# http://example.com/awesome-page/2\n```\n\n----------------------------------------\n\nTITLE: User Configuration Access - Separate Module\nDESCRIPTION: Demonstrates how to access user configuration using a separate module with bind context.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/injector.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\").bind(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function () {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nfunction injectFn() {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n}\n\nmodule.exports = injectFn;\n```\n\n----------------------------------------\n\nTITLE: Using Alternate Config Files in Bash\nDESCRIPTION: Commands showing how to use custom configuration files with the Hexo CLI.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/configuration.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# use 'custom.yml' in place of '_config.yml'\n$ hexo server --config custom.yml\n\n# use 'custom.yml' & 'custom2.json', prioritizing 'custom2.json'\n$ hexo server --config custom.yml,custom2.json\n```\n\n----------------------------------------\n\nTITLE: Registering a Helper in Hexo\nDESCRIPTION: Basic syntax for registering a new helper function in Hexo. The helper is registered with a name and a function that contains the helper's implementation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/helper.md#2025-04-10_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.helper.register(name, function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Hexo Syntax Highlighting Configuration (v7.0.0+)\nDESCRIPTION: Updated YAML configuration for syntax highlighting in Hexo version 7.0.0 and above.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/syntax-highlight.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Basic YAML Front-matter Example\nDESCRIPTION: Shows the basic structure of a YAML front-matter block with title and date settings. The block is delimited by three dashes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/front-matter.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n----------------------------------------\n\nTITLE: Injecting CSS and JavaScript into Hexo Pages\nDESCRIPTION: Shows how to inject CSS and JavaScript files into specific parts of Hexo-generated HTML pages. It uses helper functions to generate the appropriate HTML tags and demonstrates conditional injection based on page layout.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/injector.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\nconst js = hexo.extend.helper.get(\"js\").bind(hexo);\n\nhexo.extend.injector.register(\n  \"head_end\",\n  () => {\n    return css(\n      \"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css\",\n    );\n  },\n  \"music\",\n);\n\nhexo.extend.injector.register(\n  \"body_end\",\n  '<script src=\"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js\">',\n  \"music\",\n);\n\nhexo.extend.injector.register(\"body_end\", () => {\n  return js(\"/js/jquery.js\");\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring GitLab CI Pipeline for Hexo Deployment\nDESCRIPTION: GitLab CI configuration file that sets up automated deployment of a Hexo site to GitLab Pages. Uses Node.js 16 Alpine image, caches node_modules, and deploys the built site to public directory.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/gitlab-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nimage: node:16-alpine\ncache:\n  paths:\n    - node_modules/\n\nbefore_script:\n  - npm install hexo-cli -g\n  - npm install\n\npages:\n  script:\n    - npm run build\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo server to use a custom port\nDESCRIPTION: Command to start the Hexo server on a custom port using the -p flag. This is useful when the default port (4000) is already in use or when you need to run multiple instances.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/server.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -p 5000\n```\n\n----------------------------------------\n\nTITLE: Basic JSON Front-matter Example\nDESCRIPTION: Demonstrates the structure of a JSON front-matter block with title and date settings. The block is terminated by three semicolons.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/front-matter.md#2025-04-10_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n----------------------------------------\n\nTITLE: Generating All Posts in Hexo\nDESCRIPTION: Demonstrates how to generate routes for all posts in a Hexo site. It iterates over locals.posts and creates a route for each post with its corresponding data and layout.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/generator.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"post\", function (locals) {\n  return locals.posts.map(function (post) {\n    return {\n      path: post.path,\n      data: post,\n      layout: \"post\",\n    };\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Injector Registration API\nDESCRIPTION: Shows the basic syntax for registering an injector in Hexo to add code snippets to HTML files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/injector.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.injector.register(entry, value, to);\n```\n\n----------------------------------------\n\nTITLE: Deploying a Hexo Website\nDESCRIPTION: Deploys the Hexo website. Can optionally generate static files before deployment.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo deploy\n```\n\n----------------------------------------\n\nTITLE: Generating All Posts in Hexo\nDESCRIPTION: Demonstrates how to generate routes for all posts in a Hexo site. It iterates over locals.posts and creates a route for each post with its corresponding data and layout.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/generator.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"post\", function (locals) {\n  return locals.posts.map(function (post) {\n    return {\n      path: post.path,\n      data: post,\n      layout: \"post\",\n    };\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo server to use a custom port\nDESCRIPTION: Command to start the Hexo server on a custom port using the -p flag. This is useful when the default port (4000) is already in use or when you need to run multiple instances.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/server.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -p 5000\n```\n\n----------------------------------------\n\nTITLE: Accessing Data Files in Hexo Templates with EJS\nDESCRIPTION: EJS template code that iterates through the menu items defined in the data file. This snippet shows how to access data from the menu.yml file using site.data.menu and generate HTML links.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/data-files.md#2025-04-10_snippet_1\n\nLANGUAGE: ejs\nCODE:\n```\n<% for (var link in site.data.menu) { %>\n  <a href=\"<%= site.data.menu[link] %>\"> <%= link %> </a>\n<% } %>\n```\n\n----------------------------------------\n\nTITLE: Using paginator Helper in Hexo Templates\nDESCRIPTION: The paginator helper function creates pagination controls in a Hexo template. It offers extensive customization options for URL format, navigation text, spacing, and CSS classes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n<%- paginator(options) %>\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow for Hexo Deployment\nDESCRIPTION: A GitHub Actions workflow configuration file that automates the build and deployment process of a Hexo site to GitHub Pages. This workflow checks out the repository, sets up Node.js, installs dependencies, builds the site, and deploys it.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/github-pages.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: Pages\n\non:\n  push:\n    branches:\n      - main # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 20\n        uses: actions/setup-node@v4\n        with:\n          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n          # Ref: https://github.com/actions/setup-node#supported-version-syntax\n          node-version: \"20\"\n      - name: Cache NPM dependencies\n        uses: actions/cache@v4\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Settings in Hexo YAML\nDESCRIPTION: Demonstrates how to set the default language and multiple languages in the Hexo _config.yml file. This configuration determines the site's language preferences.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/internationalization.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlanguage: zh-tw\n\nlanguage:\n- zh-tw\n- en\n```\n\n----------------------------------------\n\nTITLE: Creating Language Files in YAML\nDESCRIPTION: Shows an example of a language file (en.yml) with translations for various strings, including support for plural forms. These files are used to store translations for different languages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/internationalization.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n----------------------------------------\n\nTITLE: Basic Injector Syntax in Hexo\nDESCRIPTION: The core method for registering code snippets to be injected into HTML. Takes three parameters: entry (injection point), value (code to inject), and to (target page type).\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/injector.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.injector.register(entry, value, to);\n```\n\n----------------------------------------\n\nTITLE: Executing Console Commands in Hexo\nDESCRIPTION: Shows how to explicitly call Hexo console commands using the call() method. The first example calls the generate command with empty options, while the second example demonstrates calling the list command with specific parameters.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/index.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.call(\"generate\", {}).then(function () {\n  // ...\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.call(\"list\", { _: [\"post\"] }).then(function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Unregistering Filters in Hexo\nDESCRIPTION: Shows how to unregister filters in Hexo, including examples for unregistering named functions and CommonJS modules.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.unregister(type, filter);\n```\n\nLANGUAGE: javascript\nCODE:\n```\n// Unregister a filter which is registered with named function\n\nconst filterFn = (data) => {\n  data = \"something\";\n  return data;\n};\nhexo.extend.filter.register(\"example\", filterFn);\n\nhexo.extend.filter.unregister(\"example\", filterFn);\n```\n\nLANGUAGE: javascript\nCODE:\n```\n// Unregister a filter which is registered with commonjs module\n\nhexo.extend.filter.register(\"example\", require(\"path/to/filter\"));\n\nhexo.extend.filter.unregister(\"example\", require(\"path/to/filter\"));\n```\n\n----------------------------------------\n\nTITLE: Changing Hexo Server Port\nDESCRIPTION: Starts the Hexo server on a custom port (5000 in this example) using the -p option, useful for avoiding EADDRINUSE errors or when the default port is unavailable.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/server.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -p 5000\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Settings in Hexo YAML\nDESCRIPTION: Demonstrates how to set the default language and multiple languages in the Hexo _config.yml file. This configuration determines the site's language preferences.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/internationalization.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlanguage: zh-tw\n\nlanguage:\n- zh-tw\n- en\n```\n\n----------------------------------------\n\nTITLE: Inserting Mail Links with mail_to Helper in Hexo (JavaScript)\nDESCRIPTION: The mail_to helper inserts a mail link with customizable text and options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n<%- mail_to('a@abc.com') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- mail_to('a@abc.com', 'Email') %>\n```\n\n----------------------------------------\n\nTITLE: Watching File Changes during Hexo Generation\nDESCRIPTION: This command generates static files and continues to watch for file changes, regenerating immediately when changes are detected. It uses SHA1 checksums to determine if files have changed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/generating.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate --watch\n```\n\n----------------------------------------\n\nTITLE: Executing Hexo Deployment Command\nDESCRIPTION: The basic command to deploy a Hexo site. This command should be run after installing the necessary deployment plugins.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo deploy\n```\n\n----------------------------------------\n\nTITLE: Accessing a Helper from Another Extension\nDESCRIPTION: Example showing how to retrieve and use a helper function in another Hexo extension such as a Filter or Injector. The helper needs to be bound to the hexo context.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/helper.md#2025-04-10_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nconst url_for = hexo.extend.helper.get(\"url_for\").bind(hexo);\n```\n\n----------------------------------------\n\nTITLE: Executing Hexo Generate Command Programmatically\nDESCRIPTION: Demonstrates how to explicitly call the 'generate' console command using the Hexo API. The call method takes the command name and an options object as arguments.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/index.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.call(\"generate\", {}).then(function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Deploying a Hexo Website\nDESCRIPTION: Deploys the Hexo website to the configured deployment destination. Includes an option to generate files before deployment.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo deploy\n```\n\n----------------------------------------\n\nTITLE: Multiple Deployers Configuration\nDESCRIPTION: YAML configuration for using multiple deployment methods simultaneously in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  - type: git\n    repo:\n  - type: heroku\n    repo:\n```\n\n----------------------------------------\n\nTITLE: Configuring SFTP Deployment in Hexo\nDESCRIPTION: Detailed configuration for SFTP deployment in Hexo's _config.yml file. Includes options for host, user, password, SSH key, and various SFTP settings.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: sftp\n  host: <host>\n  user: <user>\n  pass: <password>\n  remotePath: [remote path]\n  port: [port]\n  privateKey: [path/to/privateKey]\n  passphrase: [passphrase]\n  agent: [path/to/agent/socket]\n```\n\n----------------------------------------\n\nTITLE: Enabling PrismJS in Hexo (v7.0.0+)\nDESCRIPTION: Configuration to enable PrismJS in Hexo version 7.0.0 and above, using the new syntax_highlighter option with various PrismJS customization options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: prismjs\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Injecting CSS and JavaScript Files in Hexo\nDESCRIPTION: This example demonstrates how to inject CSS and JavaScript files into specific parts of HTML pages using the Hexo injector. It includes injecting APlayer CSS and JS files to music layout pages, and jQuery to all pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/injector.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\nconst js = hexo.extend.helper.get(\"js\").bind(hexo);\n\nhexo.extend.injector.register(\n  \"head_end\",\n  () => {\n    return css(\n      \"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css\",\n    );\n  },\n  \"music\",\n);\n\nhexo.extend.injector.register(\n  \"body_end\",\n  '<script src=\"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js\">',\n  \"music\",\n);\n\nhexo.extend.injector.register(\"body_end\", () => {\n  return js(\"/js/jquery.js\");\n});\n```\n\n----------------------------------------\n\nTITLE: Front-matter example for nested Hexo post\nDESCRIPTION: This snippet shows the front-matter for a post located in a nested directory structure. The placement affects how certain permalink variables like `:title` and `:name` behave.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/permalinks.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n  - foo\n  - bar\n```\n\n----------------------------------------\n\nTITLE: Creating Helper with URL Formation\nDESCRIPTION: Example of creating a helper that uses another helper (url_for) within its implementation. Shows how to access the helper context.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/helper.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.helper.register(\"lorem\", function (path) {\n  return '<script src=\"' + this.url_for(path) + '\"></script>';\n});\n```\n\n----------------------------------------\n\nTITLE: Template Engine File Extensions Example\nDESCRIPTION: Demonstrates how Hexo determines the template engine based on file extensions, showing examples for EJS and Nunjucks templates.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/themes.md#2025-04-10_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\nlayout.ejs   - uses EJS\nlayout.njk   - uses Nunjucks\n```\n\n----------------------------------------\n\nTITLE: Enabling Highlight.js in Hexo (v7.0.0+)\nDESCRIPTION: Configuration to enable highlight.js in Hexo versions 7.0.0 and above, with various highlight.js options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"  \"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\n```\n\n----------------------------------------\n\nTITLE: Using Custom Config File in Hexo\nDESCRIPTION: Specifies a custom configuration file or multiple files to use instead of the default _config.yml.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --config custom.yml\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --config custom.yml,custom2.json\n```\n\n----------------------------------------\n\nTITLE: Using markdown Helper in Hexo Templates\nDESCRIPTION: String manipulation helper that renders a string using Markdown.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n<%- markdown(str) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n----------------------------------------\n\nTITLE: Block Quote Implementation in Hexo\nDESCRIPTION: Syntax for adding formatted block quotes to posts with optional author, source and title information.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/tag-plugins.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n----------------------------------------\n\nTITLE: Theme Configuration YAML Example\nDESCRIPTION: Sample YAML configuration for registering a new theme, including description, links, preview URL, and category tags.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/themes.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: A brand new default theme for Hexo.\nlink: https://github.com/hexojs/hexo-theme-landscape\npreview: http://hexo.io/hexo-theme-landscape\ntags:\n  - official\n  - responsive\n  - widget\n  - two_column\n  - one_column\n```\n\n----------------------------------------\n\nTITLE: Registering a Hexo Migrator Extension in JavaScript\nDESCRIPTION: This snippet shows how to register a migrator extension in Hexo. The function takes a name parameter and a callback function. The callback receives an 'args' argument containing user input from the terminal.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/migrator.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.migrator.register(name, function (args) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring highlight.js in Hexo (v7.0.0+)\nDESCRIPTION: YAML configuration for using highlight.js as the syntax highlighter in Hexo versions 7.0.0 and above.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"  \"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\n```\n\n----------------------------------------\n\nTITLE: Running Hexo in Silent Mode\nDESCRIPTION: Silences output to the terminal when running Hexo commands.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --silent\n```\n\n----------------------------------------\n\nTITLE: Configuring Syntax Highlighting in Hexo (v7.0.0+)\nDESCRIPTION: Default configuration settings for highlight.js and prismjs in Hexo version 7.0.0 and above, with the new syntax_highlighter option to select the preferred library.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Syntax Highlighting in Hexo (v7.0.0+)\nDESCRIPTION: YAML configuration for syntax highlighting in Hexo version 7.0.0 and later, showing options for highlight.js and prismjs.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Hexo project folder structure\nDESCRIPTION: This snippet shows the basic folder structure of a newly initialized Hexo project, including configuration files and content directories.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/setup.md#2025-04-10_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (below v7.0.0)\nDESCRIPTION: Configuration to disable both built-in syntax highlighters in Hexo versions prior to 7.0.0, allowing third-party or browser-side highlighting instead.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Using Translation Helpers in JavaScript Templates\nDESCRIPTION: Demonstrates how to use the __ and _p helpers in JavaScript templates to retrieve translated strings from language files. These helpers support both simple translations and plural forms.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/internationalization.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n----------------------------------------\n\nTITLE: Generating Relative URLs with relative_url Helper in Hexo (JavaScript)\nDESCRIPTION: The relative_url helper returns the relative URL from one path to another.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<%- relative_url('foo/bar/', 'css/style.css') %>\n```\n\n----------------------------------------\n\nTITLE: Configuring Vercel Build Script for Hexo\nDESCRIPTION: Adding a build script to package.json for deploying a Hexo site to Vercel. This script generates the static files for the site.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build\": \"hexo generate\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hexo project folder structure\nDESCRIPTION: This snippet shows the basic folder structure of a newly initialized Hexo project, including configuration files and content directories.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/setup.md#2025-04-10_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n----------------------------------------\n\nTITLE: Using css Helper in Hexo Templates\nDESCRIPTION: Helper function for loading CSS files. It accepts strings, arrays, objects, or arrays of objects to specify the files and attributes. Automatically adds root path and .css extension if needed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n<%- css(path, ...) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\">\n\n<%- css({ href: 'style.css', integrity: 'foo' }) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" integrity=\"foo\">\n\n<%- css([{ href: 'style.css', integrity: 'foo' }, { href: 'screen.css', integrity: 'bar' }]) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" integrity=\"foo\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" integrity=\"bar\">\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (v7.0.0+)\nDESCRIPTION: Configuration to disable built-in syntax highlighting in Hexo version 7.0.0 and above by leaving the syntax_highlighter setting empty.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: # empty\n```\n\n----------------------------------------\n\nTITLE: Cleaning Hexo Cache to Update Data\nDESCRIPTION: Command to clean the Hexo cache when data isn't updating properly or generated files remain identical.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo clean\n```\n\n----------------------------------------\n\nTITLE: Running Hexo in Safe Mode\nDESCRIPTION: Disables loading of plugins and scripts in Hexo. Useful for troubleshooting after installing new plugins.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --safe\n```\n\n----------------------------------------\n\nTITLE: Generating Full URLs with full_url_for Helper in Hexo (JavaScript)\nDESCRIPTION: The full_url_for helper returns a URL with the config.url prefixed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%- full_url_for('/a/path') %>\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo Without Optional DTrace Dependencies\nDESCRIPTION: Command to install Hexo without the optional dependencies that may cause DTrace-related errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_14\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install hexo --no-optional\n```\n\n----------------------------------------\n\nTITLE: Default Highlight Configuration in Hexo (v7.0.0+)\nDESCRIPTION: The default YAML configuration for syntax highlighting in Hexo versions 7.0.0 and above, with a new syntax_highlighter parameter.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Paginated Archive in Hexo\nDESCRIPTION: Shows how to create a paginated archive page using the hexo-pagination plugin. It generates multiple pages for the /archives route with 10 posts per page.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/generator.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar pagination = require(\"hexo-pagination\");\n\nhexo.extend.generator.register(\"archive\", function (locals) {\n  // hexo-pagination makes an index.html for the /archives route\n  return pagination(\"archives\", locals.posts, {\n    perPage: 10,\n    layout: [\"archive\", \"index\"],\n    data: {},\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Installing RSS Migrator Plugin for Hexo\nDESCRIPTION: This command installs the hexo-migrator-rss plugin, which is required for migrating RSS feeds to Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/migration.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-migrator-rss --save\n```\n\n----------------------------------------\n\nTITLE: Configuring Post Asset Features in hexo-renderer-marked\nDESCRIPTION: Configuration for enabling post asset features in hexo-renderer-marked which allows direct referencing of images without using asset_img tag plugin. Requires post_asset_folder to be enabled.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n----------------------------------------\n\nTITLE: String Manipulation Helpers in Hexo (JavaScript)\nDESCRIPTION: Various helper functions for string manipulation in Hexo templates, including trimming, stripping HTML, titlecase conversion, Markdown rendering, and text truncation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n<%- trim(string) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- strip_html(string) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- titlecase(string) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- markdown(str) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- render(str, engine, [options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- word_wrap(str, [length]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- truncate(text, [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Migrating RSS Feed to Hexo\nDESCRIPTION: This command migrates all posts from an RSS feed to Hexo. The <source> parameter can be either a file path or URL to the RSS feed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/migration.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo migrate rss <source>\n```\n\n----------------------------------------\n\nTITLE: Default package.json for Hexo Projects\nDESCRIPTION: The default package.json file for a Hexo site, showing dependencies including the core Hexo package and various plugins for site generation and rendering. Contains metadata about the site and its required packages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/setup.md#2025-04-10_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^7.0.0\",\n    \"hexo-generator-archive\": \"^2.0.0\",\n    \"hexo-generator-category\": \"^2.0.0\",\n    \"hexo-generator-index\": \"^3.0.0\",\n    \"hexo-generator-tag\": \"^2.0.0\",\n    \"hexo-renderer-ejs\": \"^2.0.0\",\n    \"hexo-renderer-stylus\": \"^3.0.0\",\n    \"hexo-renderer-marked\": \"^6.0.0\",\n    \"hexo-server\": \"^3.0.0\",\n    \"hexo-theme-landscape\": \"^1.0.0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Dates in JavaScript\nDESCRIPTION: The date function inserts formatted dates. It accepts various date formats and allows custom formatting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\n----------------------------------------\n\nTITLE: Using url_for Helper in Hexo Templates\nDESCRIPTION: Helper function that returns a URL with the root path prefixed. The output is automatically encoded. Supports relative linking based on configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<%- url_for(path) %>\n```\n\nLANGUAGE: yaml\nCODE:\n```\n_config.yml\nroot: /blog/ # example\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- url_for('/a/path') %>\n// /blog/a/path\n```\n\nLANGUAGE: yaml\nCODE:\n```\n_config.yml\nrelative_link: true\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- url_for('/css/style.css') %>\n// ../../css/style.css\n\n/* Override option\n * you could also disable it to output a non-relative link,\n * even when `relative_link` is enabled and vice versa.\n */\n<%- url_for('/css/style.css', {relative: false}) %>\n// /css/style.css\n```\n\n----------------------------------------\n\nTITLE: Deploying Hexo to Edgio\nDESCRIPTION: Command to deploy a Hexo site to Edgio after setting up the connector. This uploads and configures the site on the Edgio platform.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nedgio deploy\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom IP for Hexo Server\nDESCRIPTION: Starts the Hexo server with a custom IP address (192.168.1.1 in this example) using the -i option, allowing the server to be accessed from a specific network interface.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/server.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -i 192.168.1.1\n```\n\n----------------------------------------\n\nTITLE: Fragment Caching Implementation\nDESCRIPTION: Examples of implementing fragment caching for performance optimization using both direct method and partial approach.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/templates.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- partial('header', {}, {cache: true});\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents in Hexo (JavaScript)\nDESCRIPTION: Generates a table of contents by parsing heading tags (h1-h6) in the content. Offers options for customizing class names, list numbering, depth, and maximum items.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/helpers.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n<%- toc(str, [options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- toc(page.content) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Settings in Hexo\nDESCRIPTION: This YAML snippet demonstrates how to set the default language and specify multiple languages in the Hexo _config.yml file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/internationalization.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlanguage: zh-tw\n\nlanguage:\n- zh-tw\n- en\n```\n\n----------------------------------------\n\nTITLE: Basic Hexo Deployment Command\nDESCRIPTION: Simple command to deploy a Hexo site using configured deployment settings.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo deploy\n```\n\n----------------------------------------\n\nTITLE: Generating XML Formatted Dates in JavaScript\nDESCRIPTION: The date_xml function inserts dates in XML format. It accepts various date inputs and returns the date in ISO format.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date_xml(date) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n----------------------------------------\n\nTITLE: Using js Helper in Hexo Templates\nDESCRIPTION: Helper function for loading JavaScript files. It accepts strings, arrays, objects, or arrays of objects to specify the files and attributes. Automatically adds root path and .js extension if needed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n<%- js(path, ...) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- js('script.js') %>\n// <script src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script src=\"/script.js\"></script>\n// <script src=\"/gallery.js\"></script>\n\n<%- js({ src: 'script.js', integrity: 'foo', async: true }) %>\n// <script src=\"/script.js\" integrity=\"foo\" async></script>\n\n<%- js([{ src: 'script.js', integrity: 'foo' }, { src: 'gallery.js', integrity: 'bar' }]) %>\n// <script src=\"/script.js\" integrity=\"foo\"></script>\n// <script src=\"/gallery.js\" integrity=\"bar\"></script>\n```\n\n----------------------------------------\n\nTITLE: Path Matching Patterns in Hexo Box\nDESCRIPTION: Examples of Express-style pattern strings for path matching in Box containers. Shows how to match specific post IDs and wildcard paths.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/box.md#2025-04-10_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Port for Hexo Server\nDESCRIPTION: Command to start the Hexo development server on a custom port to avoid conflicts with other running services.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -p 5000\n```\n\n----------------------------------------\n\nTITLE: Setting Up Hexo Documentation for Development\nDESCRIPTION: Commands for setting up the Hexo documentation repository locally, including installing the Hexo CLI and dependencies.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/contributing.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-cli -g # If you don't have hexo-cli installed\n$ git clone https://github.com/<username>/site.git\n$ cd site\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Language Detection in Hexo\nDESCRIPTION: This YAML snippet shows how to set the i18n_dir option in _config.yml to enable automatic language detection based on URL segments.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/internationalization.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ni18n_dir: :lang\n```\n\n----------------------------------------\n\nTITLE: Listing Tags in JavaScript\nDESCRIPTION: The list_tags function inserts a list of all tags. It offers various options for customization, including ordering, styling, and limiting the number of tags displayed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_tags([options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_tags(site.tags, {class: 'classtest', style: false, separator: ' | '}) %>\n<%- list_tags(site.tags, {class: 'classtest', style: 'list'}) %>\n<%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: false, separator: ' | '}) %>\n<%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: 'list'}) %>\n```\n\n----------------------------------------\n\nTITLE: Inserting Category List in Hexo\nDESCRIPTION: This function inserts a list of categories. It accepts optional parameters for customizing the output, including ordering, styling, and depth of categories to display.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_categories([categories], [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Inserting Generator Meta Tag in Hexo (JavaScript)\nDESCRIPTION: This helper function inserts a generator meta tag. It's used to indicate that the page was generated by Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_35\n\nLANGUAGE: js\nCODE:\n```\n<%- meta_generator() %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- meta_generator() %>\n// <meta name=\"generator\" content=\"Hexo 4.0.0\">\n```\n\n----------------------------------------\n\nTITLE: Using link_to Helper in Hexo Templates\nDESCRIPTION: Helper function for inserting links. It accepts a path, optional text, and options for controlling link behavior and attributes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n<%- link_to(path, [text], [options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"noopener\">Google</a>\n```\n\n----------------------------------------\n\nTITLE: Removing a Theme View in Hexo\nDESCRIPTION: Deletes a view (template) from the Hexo theme. This method allows developers to remove a template file by its path.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/themes.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.theme.removeView(path);\n```\n\n----------------------------------------\n\nTITLE: Code Block Implementation in Hexo\nDESCRIPTION: Syntax for adding code snippets with optional title, language specification, and URL references.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/tag-plugins.md#2025-04-10_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n```\n\n----------------------------------------\n\nTITLE: Configuring multi-language support in Hexo\nDESCRIPTION: This snippet demonstrates how to configure Hexo for multi-language support by modifying the new_post_name and permalink settings. This setup organizes posts by language in the file structure and URLs.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/permalinks.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Deployment in Hexo\nDESCRIPTION: Detailed configuration for Git deployment in Hexo's _config.yml file. Includes options for repository URL, branch, and commit message.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: git\n  repo: <repository url> # https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io\n  branch: [branch]\n  message: [message]\n```\n\n----------------------------------------\n\nTITLE: Publishing a Hexo Draft\nDESCRIPTION: Publishes a draft post in Hexo, moving it from the drafts folder to the posts folder.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo publish [layout] <filename>\n```\n\n----------------------------------------\n\nTITLE: Writing Code Blocks in Markdown for Hexo\nDESCRIPTION: Three syntax options for writing code blocks in Hexo: using codeblock tag plugin, code tag plugin, or Markdown's fenced code blocks with Hexo extensions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n\n{% code [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcode %}\n\n```[language] [title] [url] [link text] [additional options]\ncode snippet\n```\n```\n\n----------------------------------------\n\nTITLE: Inserting Open Graph Data in Hexo (JavaScript)\nDESCRIPTION: This helper function inserts Open Graph data. It accepts various options to customize the Open Graph tags for social media sharing.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_36\n\nLANGUAGE: js\nCODE:\n```\n<%- open_graph([options]) %>\n```\n\n----------------------------------------\n\nTITLE: Generating Gravatar URLs with gravatar Helper in Hexo (JavaScript)\nDESCRIPTION: The gravatar helper returns the gravatar image URL for a given email address. It supports various options for customization.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n<%- gravatar('a@abc.com') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- gravatar('a@abc.com', 40) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- gravatar('a@abc.com' {s: 40, d: 'https://via.placeholder.com/150'}) %>\n```\n\n----------------------------------------\n\nTITLE: Conditional Checks in Hexo Templates (JavaScript)\nDESCRIPTION: Various helper functions for conditional checks in Hexo templates, such as checking current page, home page, post page, etc.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_current(path, [strict]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_home() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_home_first_page() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_post() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_page() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_archive() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_year() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_month() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_category() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_category('hobby') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_tag() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_tag('hobby') %>\n```\n\n----------------------------------------\n\nTITLE: Image Embedding with asset_img Tag in Hexo\nDESCRIPTION: Examples of using the asset_img template tag to embed images with various options including custom classes, dimensions, and title/alt attributes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/tag-plugins.md#2025-04-10_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" class=\"post-image\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" width=\"500\" height=\"400\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" title=\"lorem ipsum\" alt=\"dolor\" />\n```\n\n----------------------------------------\n\nTITLE: Bip Deployment Commands\nDESCRIPTION: Commands for initializing and deploying a Hexo site with Bip hosting service.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ bip init\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate —deploy && bip deploy\n```\n\n----------------------------------------\n\nTITLE: Basic YAML Front-matter Example\nDESCRIPTION: Shows the basic structure of YAML front-matter with title and date configuration. Front-matter in YAML format is terminated by three dashes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/front-matter.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n----------------------------------------\n\nTITLE: Inserting Links with link_to Helper in Hexo (JavaScript)\nDESCRIPTION: The link_to helper inserts a link with customizable text and options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n<%- link_to('http://www.google.com') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- link_to('http://www.google.com', 'Google') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n```\n\n----------------------------------------\n\nTITLE: Running Hexo Server in Static Mode\nDESCRIPTION: Launches the Hexo server in static mode using the -s flag, where only files in the public directory are served and file watching is disabled. Typically used in production environments.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/server.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -s\n```\n\n----------------------------------------\n\nTITLE: Reinstalling Hexo CLI Dependencies\nDESCRIPTION: Command to fix 'hexo not found' error by removing node_modules and reinstalling packages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-02-cli-4_wordpress-2-1_sitemap-2-1.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ rm -rf node_modules && npm install --force\n```\n\n----------------------------------------\n\nTITLE: Escaping HTML Entities in JavaScript\nDESCRIPTION: The escape_html function escapes HTML entities in a string. It converts special characters to their HTML entity equivalents.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n<%- escape_html(str) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- escape_html('<p>Hello \"world\".</p>') %>\n// &lt;p&gt;Hello &quot;world&quot;.&lt;&#x2F;p&gt;\n```\n\n----------------------------------------\n\nTITLE: Formatting Numbers in Hexo Templates (JavaScript)\nDESCRIPTION: Formats a number with options for precision, thousand delimiter, and decimal separator. Useful for displaying formatted numbers in Hexo templates.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/helpers.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<%- number_format(number, [options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n----------------------------------------\n\nTITLE: Embedding Images with asset_img Tag in Hexo\nDESCRIPTION: Demonstrates how to use the asset_img tag to embed images in Hexo posts with various options including custom classes, display sizes, and title/alt attributes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/tag-plugins.md#2025-04-10_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" class=\"post-image\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" width=\"500\" height=\"400\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" title=\"lorem ipsum\" alt=\"dolor\" />\n```\n\n----------------------------------------\n\nTITLE: Setting a Local Variable in Hexo.js\nDESCRIPTION: This code shows how to set a local variable in Hexo.js. It uses the 'set' method of the 'locals' object to define a function that returns the value for the 'posts' variable.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/locals.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Heroku Deployment Plugin for Hexo\nDESCRIPTION: Command to install the hexo-deployer-heroku plugin, which is necessary for Heroku-based deployments in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-heroku --save\n```\n\n----------------------------------------\n\nTITLE: Async Renderer Registration with Promise (JavaScript)\nDESCRIPTION: This example shows how to register an async renderer using a Promise. It demonstrates the structure for a Promise-based renderer without actual rendering logic.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/renderer.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Promise\nhexo.extend.renderer.register(\"styl\", \"css\", function (data, options) {\n  return new Promise(function (resolve, reject) {\n    resolve(\"test\");\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Rendering a String with Hexo\nDESCRIPTION: Demonstrates how to render a string using Hexo's asynchronous render method. The engine parameter specifies which rendering engine to use.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/rendering.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ text: \"example\", engine: \"swig\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Tab Replacement with Wrapping Disabled\nDESCRIPTION: Configuration for tab replacement in code blocks when wrapping is disabled in Hexo's syntax highlighting. This allows customizing tab characters in code blocks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nhighlight:\n  tab_replace: '  '\n  wrap: false\n```\n\n----------------------------------------\n\nTITLE: Escaping HTML Entities in Hexo (JavaScript)\nDESCRIPTION: Shows how to use the escape_html helper function in Hexo. This function escapes HTML entities in a string to prevent XSS attacks and ensure proper HTML rendering.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/helpers.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<%- escape_html(str) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- escape_html('<p>Hello \"world\".</p>') %>\n// &lt;p&gt;Hello &quot;world&quot;.&lt;&#x2F;p&gt;\n```\n\n----------------------------------------\n\nTITLE: Generating Open Graph Data in Hexo Templates (JavaScript)\nDESCRIPTION: Inserts Open Graph metadata for improved social media sharing. Customizable options include title, type, URL, image, and various other Open Graph properties.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/helpers.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n<%- open_graph([options]) %>\n```\n\n----------------------------------------\n\nTITLE: Rendering a String with Hexo\nDESCRIPTION: Demonstrates how to render a string using Hexo's asynchronous render method. The engine parameter specifies which rendering engine to use.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/rendering.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ text: \"example\", engine: \"swig\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing before_post_render Filter in Hexo\nDESCRIPTION: Demonstrates how to use the before_post_render filter to modify post data before rendering, in this case, converting the title to lowercase.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register(\"before_post_render\", function (data) {\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n----------------------------------------\n\nTITLE: Deploying Hexo Site to Bip\nDESCRIPTION: Command to generate Hexo static files and deploy them to Bip. This combines the Hexo generate and deploy commands with Bip's deployment process.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/one-command-deployment.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate —deploy && bip deploy\n```\n\n----------------------------------------\n\nTITLE: Sync Renderer Registration for EJS (JavaScript)\nDESCRIPTION: This example demonstrates registering a synchronous renderer for EJS templates. It uses the 'ejs' library to render .ejs files to HTML, with the sync flag set to true.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/renderer.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar ejs = require(\"ejs\");\n\nhexo.extend.renderer.register(\n  \"ejs\",\n  \"html\",\n  function (data, options) {\n    options.filename = data.path;\n    return ejs.render(data.text, options);\n  },\n  true,\n);\n```\n\n----------------------------------------\n\nTITLE: Registering a Hexo Deployer Plugin\nDESCRIPTION: Shows how to register a custom deployer plugin for Hexo. The function receives an args parameter that contains deployment configuration from _config.yml and terminal input from users.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/deployer.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.deployer.register(name, function (args) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Update hexo-front-matter Import Statement\nDESCRIPTION: Shows the breaking change in how hexo-front-matter module should be imported, requiring specific function declaration instead of object declaration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-09-04-alias-1_cli-4-2_front-matter-2_feed-3.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n- const yfm = require('hexo-front-matter');\n+ const { parse: yfm } = require('hexo-front-matter');\n```\n\n----------------------------------------\n\nTITLE: Using css Helper in Hexo\nDESCRIPTION: The css helper loads CSS files. The path parameter can be a string, array, object, or array of objects. The root directory value is automatically prepended and the .css extension is added if not present.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_4\n\nLANGUAGE: js\nCODE:\n```\n<%- css(path, ...) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\">\n\n<%- css({ href: 'style.css', integrity: 'foo' }) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" integrity=\"foo\">\n\n<%- css([{ href: 'style.css', integrity: 'foo' }, { href: 'screen.css', integrity: 'bar' }]) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" integrity=\"foo\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" integrity=\"bar\">\n```\n\n----------------------------------------\n\nTITLE: Using mail_to Helper in Hexo\nDESCRIPTION: The mail_to helper creates an email link with optional parameters like subject, cc, bcc, and email body. It can also include CSS class and id attributes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_7\n\nLANGUAGE: js\nCODE:\n```\n<%- mail_to(path, [text], [options]) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing a before_post_render Filter in Hexo\nDESCRIPTION: Example showing how to modify post data before rendering by transforming the title to lowercase. This filter runs before the post is processed for rendering.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_7\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"before_post_render\", function (data) {\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n----------------------------------------\n\nTITLE: Escaping Content in Hexo Templates\nDESCRIPTION: Examples of how to escape content in Hexo templates to prevent parsing issues with Nunjucks syntax.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_10\n\nLANGUAGE: plain\nCODE:\n```\n{% raw %}\nHello {{ world }}\n{% endraw %}\n```\n\nLANGUAGE: plain\nCODE:\n```\n```\nHello {{ world }}\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Heroku Deployment in Hexo\nDESCRIPTION: Configuration settings for Heroku deployment in Hexo's _config.yml file. Includes options for repository URL and commit message.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\n----------------------------------------\n\nTITLE: Configuring Syntax Highlighting in Hexo (pre-v7.0.0)\nDESCRIPTION: YAML configuration for syntax highlighting in Hexo versions before 7.0.0, including options for highlight.js and PrismJS.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Less.js Configuration Options\nDESCRIPTION: Example of configuring Less.js options in Hexo configuration file\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-09-17-hexo-5-2_wordpress-2-1-2_marked-3-2_stylus-2_less-2.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nless:\n  options:\n    globalVars:\n      var1: 'some value'\n```\n\n----------------------------------------\n\nTITLE: Using mail_to Helper in Hexo Templates\nDESCRIPTION: Helper function for inserting email links. It accepts an email address, optional display text, and options for configuring email properties.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n<%- mail_to(path, [text], [options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n----------------------------------------\n\nTITLE: Inserting Feed Links with feed_tag Helper in Hexo (JavaScript)\nDESCRIPTION: The feed_tag helper inserts a feed link with customizable options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n<%- feed_tag('atom.xml') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- feed_tag('rss.xml', { title: 'RSS Feed', type: 'rss' }) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- feed_tag() %>\n```\n\n----------------------------------------\n\nTITLE: Setting File Limits in Systemd Configuration\nDESCRIPTION: Configuration line for systemd-based distributions to increase the maximum number of open files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_7\n\nLANGUAGE: plain\nCODE:\n```\nDefaultLimitNOFILE=10000\n```\n\n----------------------------------------\n\nTITLE: Listing All Routes in Hexo Router\nDESCRIPTION: Shows how to get a list of all registered routes using the `list` method. This returns all paths stored in the router.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/router.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.list();\n```\n\n----------------------------------------\n\nTITLE: Installing Edgio CLI for Hexo Deployment\nDESCRIPTION: Command to install the Edgio CLI globally. This is the first step for deploying a Hexo site to the Edgio (formerly Layer0) platform.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/one-command-deployment.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g @edgio/cli\n```\n\n----------------------------------------\n\nTITLE: Objective-C Code Example\nDESCRIPTION: Example showing Objective-C code block usage in Hexo\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/tag-plugins.md#2025-04-10_snippet_2\n\nLANGUAGE: objc\nCODE:\n```\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n```\n\n----------------------------------------\n\nTITLE: JavaScript Array Example\nDESCRIPTION: Example demonstrating JavaScript array method documentation\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/tag-plugins.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\narray.map(callback[, thisArg])\n```\n\n----------------------------------------\n\nTITLE: Updating Hexo Version in package.json\nDESCRIPTION: Shows how to upgrade from Hexo 5.4.1 to Hexo 6.0.0 by modifying the package.json dependency version.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2021-12-26-hexo-6-0-0-released.md#2025-04-10_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n-  \"hexo\": \"^5.4.1\",\n+  \"hexo\": \"^6.0.0\",\n```\n\n----------------------------------------\n\nTITLE: Using is_month Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the current page is a monthly archive page.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_month() %>\n```\n\n----------------------------------------\n\nTITLE: Listing Categories in JavaScript\nDESCRIPTION: The list_categories function inserts a list of all categories. It offers various options for customization, including ordering, styling, and transforming category names.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_categories([options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_categories(post.categories, {\n  class: 'post-category',\n  transform(str) {\n    return titlecase(str);\n  }\n}) %>\n\n<%- list_categories(post.categories, {\n  class: 'post-category',\n  transform(str) {\n    return str.toUpperCase();\n  }\n}) %>\n```\n\n----------------------------------------\n\nTITLE: Setting a Path with Promise Function in Hexo Router\nDESCRIPTION: Demonstrates how to set a path in Hexo's router using a function that returns a Promise.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/router.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Function (Promise)\nhexo.route.set(\"index.html\", function () {\n  return new Promise(function (resolve, reject) {\n    resolve(\"index\");\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing a server_middleware Filter in Hexo\nDESCRIPTION: Example showing how to add custom middleware to the Hexo server. This adds an X-Powered-By header to all responses using Connect middleware.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_17\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"server_middleware\", function (app) {\n  app.use(function (req, res, next) {\n    res.setHeader(\"X-Powered-By\", \"Hexo\");\n    next();\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Bip Deployment for Hexo\nDESCRIPTION: Command to initialize a Bip project in your Hexo directory. This sets up the necessary configuration for deploying to Bip hosting service.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/one-command-deployment.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ bip init\n```\n\n----------------------------------------\n\nTITLE: Configuring FTPSync Deployment in Hexo\nDESCRIPTION: Detailed configuration for FTP deployment using FTPSync in Hexo's _config.yml file. Includes options for host, user, password, and various FTP settings.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  clear: [true|false]\n  verbose: [true|false]\n```\n\n----------------------------------------\n\nTITLE: Pushing a Feature Branch to GitHub\nDESCRIPTION: Command for pushing the local feature branch to the remote repository on GitHub.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/contributing.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ git push origin new_feature\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Git Deployment in Hexo\nDESCRIPTION: Example of a simple Git deployment configuration in Hexo's _config.yml file. This sets up a single Git-based deployment target.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: git\n```\n\n----------------------------------------\n\nTITLE: Using is_tag Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the current page is a tag page. Optionally checks for a specific tag if a string parameter is provided.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_tag() %>\n```\n\n----------------------------------------\n\nTITLE: Categories and Tags Example in YAML\nDESCRIPTION: Shows how to define simple categories and tags in YAML front-matter. Categories are hierarchical while tags are flat.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/front-matter.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncategories:\n  - Sports\n  - Baseball\ntags:\n  - Injury\n  - Fight\n  - Shocking\n```\n\n----------------------------------------\n\nTITLE: Categories and Tags Example in YAML\nDESCRIPTION: Shows how to define simple categories and tags in YAML front-matter. Categories are hierarchical while tags are flat.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/front-matter.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncategories:\n  - Sports\n  - Baseball\ntags:\n  - Injury\n  - Fight\n  - Shocking\n```\n\n----------------------------------------\n\nTITLE: Creating a Post with Hexo API in JavaScript\nDESCRIPTION: This function creates a new post in Hexo. It takes data for the post and a replace flag as arguments. The data object can include attributes like title, slug, layout, path, and date.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/posts.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.create(data, replace);\n```\n\n----------------------------------------\n\nTITLE: Hexo Code Block Tag Plugin Syntax\nDESCRIPTION: Shows the three supported ways to write code blocks in Hexo using markdown and tag plugins.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/syntax-highlight.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n\n{% code [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcode %}\n\n```[language] [title] [url] [link text] [additional options]\ncode snippet\n```\n```\n\n----------------------------------------\n\nTITLE: Inserting Generator Meta Tag in Hexo (JavaScript)\nDESCRIPTION: Inserts a generator meta tag with the Hexo version information. Used to identify the site as generated by Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/helpers.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%- meta_generator() %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- meta_generator() %>\n// <meta name=\"generator\" content=\"Hexo 4.0.0\">\n```\n\n----------------------------------------\n\nTITLE: Getting Scaffold Content in Hexo\nDESCRIPTION: Retrieves the content of a named scaffold template from Hexo. The name parameter identifies which scaffold to fetch.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/scaffolds.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.scaffold.get(name);\n```\n\n----------------------------------------\n\nTITLE: Defining Translations in Language Files\nDESCRIPTION: This YAML snippet shows an example of a language file (en.yml) with translations for various keys, including plural forms.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/internationalization.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Deployments in Hexo\nDESCRIPTION: Example of configuring multiple deployment targets in Hexo's _config.yml file. This setup includes both Git and Heroku deployments.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  - type: git\n    repo:\n  - type: heroku\n    repo:\n```\n\n----------------------------------------\n\nTITLE: Using strip_html Helper in Hexo Templates\nDESCRIPTION: String manipulation helper that removes HTML tags from a string.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n<%- strip_html(string) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- strip_html('It\\'s not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n----------------------------------------\n\nTITLE: Formatting Full Date and Time in JavaScript\nDESCRIPTION: The full_date function inserts formatted date and time. It accepts various date inputs and allows custom formatting for both date and time.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n<%- full_date(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n----------------------------------------\n\nTITLE: Pushing main branch to GitHub (Shell)\nDESCRIPTION: Command to push the main branch of a Git repository to GitHub, setting the upstream for future pushes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/github-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ git push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Hexo Syntax Highlighting Configuration (v7.0.0+)\nDESCRIPTION: Updated configuration format for syntax highlighting in Hexo version 7.0.0 and above.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/syntax-highlight.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Installing SFTP Deployment Plugin for Hexo\nDESCRIPTION: Command to install the hexo-deployer-sftp plugin, which is necessary for SFTP-based deployments in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-sftp --save\n```\n\n----------------------------------------\n\nTITLE: Using is_category Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the current page is a category page. Optionally checks for a specific category if a string parameter is provided.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_category() %>\n```\n\n----------------------------------------\n\nTITLE: FTPSync Deployer Configuration in YAML\nDESCRIPTION: YAML configuration for FTP deployment with synchronization, including host, user credentials, and various options to control the upload process.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  clear: [true|false]\n  verbose: [true|false]\n```\n\n----------------------------------------\n\nTITLE: Installing Rsync Deployment Plugin for Hexo\nDESCRIPTION: Command to install the hexo-deployer-rsync plugin, which is necessary for Rsync-based deployments in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-rsync --save\n```\n\n----------------------------------------\n\nTITLE: Formatting Time in Hexo\nDESCRIPTION: This function inserts a formatted time. The 'date' parameter can be a UNIX timestamp, ISO string, Date object, or Moment.js object. The 'format' parameter is optional and defaults to the 'time_format' setting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n----------------------------------------\n\nTITLE: Defining Console Command Arguments\nDESCRIPTION: Example demonstrating how to define and describe command arguments using the arguments array in options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/console.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  arguments: [\n    { name: \"layout\", desc: \"Post layout\" },\n    { name: \"title\", desc: \"Post title\" },\n  ];\n}\n```\n\n----------------------------------------\n\nTITLE: Using url_for Helper in Hexo\nDESCRIPTION: The url_for helper returns a URL with the root path included. The output is automatically encoded. It takes a path parameter and an optional configuration object to specify whether the URL should be relative.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n<%- url_for(path, [option]) %>\n```\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nroot: /blog/ # example\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- url_for('/a/path') %>\n// /blog/a/path\n```\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nrelative_link: true\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- url_for('/css/style.css') %>\n// ../../css/style.css\n\n/* Modifica la opción por defecto\n * puedes deshabilitar que la salida sea el enlace completo,\n * incluso cuando esté activada la opción `relative_link` y viceversa.\n */\n<%- url_for('/css/style.css', {relative: false}) %>\n// /css/style.css\n```\n\n----------------------------------------\n\nTITLE: Embedding Basic Image with asset_img Tag in Hexo\nDESCRIPTION: Demonstrates how to use the asset_img tag plugin to embed an image in a Hexo post. This generates a simple HTML img tag pointing to the image path relative to the post.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" />\n```\n\n----------------------------------------\n\nTITLE: Using trim Helper in Hexo Templates\nDESCRIPTION: String manipulation helper that removes leading and trailing whitespace from a string.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n<%- trim(string) %>\n```\n\n----------------------------------------\n\nTITLE: Rendering Post Content with Hexo API in JavaScript\nDESCRIPTION: This function renders post content in Hexo. It takes an optional source file path and a data object as arguments. The data must contain a 'content' attribute. The function applies various rendering steps including Markdown processing and Nunjucks templating.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/posts.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.render(source, data);\n```\n\n----------------------------------------\n\nTITLE: Inserting Images with image_tag Helper in Hexo (JavaScript)\nDESCRIPTION: The image_tag helper inserts an image with customizable options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n<%- image_tag(path, [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring highlight.js in Hexo (v7.0.0+)\nDESCRIPTION: YAML configuration for using highlight.js as the syntax highlighter in Hexo version 7.0.0 and later.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"  \"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Rsync Deployment in Hexo\nDESCRIPTION: Detailed configuration for Rsync deployment in Hexo's _config.yml file. Includes options for host, user, root directory, and various deployment settings.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\n----------------------------------------\n\nTITLE: Formatting Full Date and Time in Hexo\nDESCRIPTION: This function inserts a formatted date and time. The 'date' parameter can be a UNIX timestamp, ISO string, Date object, or Moment.js object. The 'format' parameter is optional and defaults to the 'date_format + time_format' setting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n<%- full_date(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n----------------------------------------\n\nTITLE: Inserting Images with image_tag Helper in Hexo (JavaScript)\nDESCRIPTION: The image_tag helper inserts an image with customizable options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n<%- image_tag(path, [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Migrating WordPress Content to Hexo\nDESCRIPTION: This command migrates WordPress content to Hexo. The <source> parameter is the file path or URL to the WordPress export file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/migration.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo migrate wordpress <source>\n```\n\n----------------------------------------\n\nTITLE: Increasing Node.js Heap Memory Size\nDESCRIPTION: Modification to the hexo-cli script to increase the available memory, resolving out-of-memory errors during generation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_9\n\nLANGUAGE: plain\nCODE:\n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n----------------------------------------\n\nTITLE: Registering a Basic Tag Plugin in Hexo\nDESCRIPTION: Shows the basic structure for registering a tag plugin in Hexo. The function receives arguments and content, allowing for customized tag behavior.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/tag.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\n  name,\n  function (args, content) {\n    // ...\n  },\n  options\n);\n```\n\n----------------------------------------\n\nTITLE: Creating an Asynchronous File Include Tag Plugin in Hexo\nDESCRIPTION: Implements an asynchronous tag plugin for including file contents. It uses the 'async' option and returns a promise to handle file reading.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/tag.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar fs = require(\"hexo-fs\");\nvar pathFn = require(\"path\");\n\nhexo.extend.tag.register(\n  \"include_code\",\n  function (args) {\n    var filename = args[0];\n    var path = pathFn.join(hexo.source_dir, filename);\n\n    return fs.readFile(path).then(function (content) {\n      return \"<pre><code>\" + content + \"</code></pre>\";\n    });\n  },\n  { async: true }\n);\n```\n\n----------------------------------------\n\nTITLE: Using Tag Plugins for Asset Referencing in Hexo\nDESCRIPTION: Syntax examples for Hexo tag plugins that enable proper referencing of assets, ensuring they display correctly on all pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/asset-folders.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n----------------------------------------\n\nTITLE: HTML Output of Disabled Syntax Highlighting\nDESCRIPTION: Example of HTML output for a YAML code block when syntax highlighting is disabled, showing how the language is added as a class to the code element.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<pre>\n  <code class=\"yaml\">hello: hexo</code>\n</pre>\n```\n\n----------------------------------------\n\nTITLE: Basic Git Deployment Configuration\nDESCRIPTION: Simple YAML configuration for Git-based deployment in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: git\n```\n\n----------------------------------------\n\nTITLE: Inserting Relative Date in Hexo\nDESCRIPTION: This function inserts a relative time from now. The 'date' parameter can be a UNIX timestamp, ISO string, Date object, or Moment.js object.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n<%- relative_date(date) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- relative_date(new Date()) %>\n// a few seconds ago\n\n<%- relative_date(new Date(1000000000000)) %>\n// 22 years ago\n```\n\n----------------------------------------\n\nTITLE: Using is_home_first_page Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the current page is the first of the home page (added in Hexo 6.3.0).\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_home_first_page() %>\n```\n\n----------------------------------------\n\nTITLE: Using Tag Plugins for Asset Referencing in Hexo\nDESCRIPTION: Syntax examples for Hexo tag plugins that enable proper referencing of assets, ensuring they display correctly on all pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/asset-folders.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n----------------------------------------\n\nTITLE: Resolving EMFILE Error in Hexo\nDESCRIPTION: Command to increase the number of allowed synchronous I/O operations when encountering an EMFILE error due to too many open files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ ulimit -n 10000\n```\n\n----------------------------------------\n\nTITLE: Creating an Asynchronous File Include Tag Plugin\nDESCRIPTION: Demonstrates an asynchronous tag plugin for including file contents. It uses the 'async' option and reads a file from the source directory.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/tag.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar fs = require(\"hexo-fs\");\nvar pathFn = require(\"path\");\n\nhexo.extend.tag.register(\n  \"include_code\",\n  function (args) {\n    var filename = args[0];\n    var path = pathFn.join(hexo.source_dir, filename);\n\n    return fs.readFile(path).then(function (content) {\n      return \"<pre><code>\" + content + \"</code></pre>\";\n    });\n  },\n  { async: true }\n);\n```\n\n----------------------------------------\n\nTITLE: Setting a Path with Modified Flag in Hexo Router\nDESCRIPTION: Demonstrates setting a path with a modified flag to indicate whether the content has changed. This can optimize performance by skipping generation of unmodified files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/router.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.set(\"index.html\", {\n  data: \"index\",\n  modified: false,\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n----------------------------------------\n\nTITLE: Embedding Image with Size Specifications using asset_img Tag in Hexo\nDESCRIPTION: Demonstrates embedding an image with specified width and height using the asset_img tag plugin in Hexo. The additional numeric parameters define the width and height attributes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" width=\"500\" height=\"400\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring RSS3 Deployment in Hexo\nDESCRIPTION: YAML configuration for deploying a Hexo site to RSS3. This includes endpoint configuration, private key settings, and IPFS deployment options. Note that this deployer has been deprecated as of 2023.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/one-command-deployment.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy: # The root configuration block for all deployers\n  - type: rss3\n    endpoint: https://hub.rss3.io\n    privateKey: 47e18d6c386898b424025cd9db446f779ef24ad33a26c499c87bb3d9372540ba\n    ipfs:\n      deploy: true\n      gateway: pinata\n      api:\n        key: d693df715d3631e489d6\n        secret: ee8b74626f12b61c1a4bde3b8c331ad390567c86ba779c9b18561ee92c1cbff0\n```\n\n----------------------------------------\n\nTITLE: Rendering a File with Hexo\nDESCRIPTION: Shows how to render a file using Hexo's asynchronous render method. The engine is automatically detected based on the file extension.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/rendering.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ path: \"path/to/file.swig\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Hexo Scaffold in JavaScript\nDESCRIPTION: This function retrieves a scaffold by its name using the Hexo scaffold API. It's used to get the content of an existing scaffold template.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/scaffolds.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.scaffold.get(name);\n```\n\n----------------------------------------\n\nTITLE: Installing SFTP Deployer Plugin\nDESCRIPTION: Command to install the hexo-deployer-sftp plugin which enables secure deployment over SFTP with support for passwordless authentication via SSH agent.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-sftp --save\n```\n\n----------------------------------------\n\nTITLE: Using full_url_for Helper in Hexo to Generate Absolute URLs\nDESCRIPTION: Example of using the full_url_for helper to generate an absolute URL with the site URL prefixed. The output includes the full domain and path as configured in _config.yml.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://example.com/blog/a/path\">index</a>\n```\n\n----------------------------------------\n\nTITLE: Updating Routes in Hexo Generator\nDESCRIPTION: Shows how to update routes in a Hexo generator. The function can return either a single object or an array of objects, each defining a path and its corresponding data.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/generator.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"test\", function (locals) {\n  // Object\n  return {\n    path: \"foo\",\n    data: \"foo\",\n  };\n\n  // Array\n  return [\n    { path: \"foo\", data: \"foo\" },\n    { path: \"bar\", data: \"bar\" },\n  ];\n});\n```\n\n----------------------------------------\n\nTITLE: Rsync Deployment Configuration\nDESCRIPTION: YAML configuration for Rsync deployment including host, user, and various options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\n----------------------------------------\n\nTITLE: Displaying Drafts in Hexo\nDESCRIPTION: Shows draft posts stored in the source/_drafts directory when generating or deploying the Hexo site.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --draft\n```\n\n----------------------------------------\n\nTITLE: Configuring Vercel Build Script for Hexo in package.json\nDESCRIPTION: Add a build script to your package.json file to tell Vercel how to build your Hexo site. This command generates the static files that will be served by Vercel.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/one-command-deployment.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build\": \"hexo generate\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering File in Hexo\nDESCRIPTION: Shows how to render a file using Hexo's render method, which automatically detects the appropriate renderer based on the file extension.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/rendering.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ path: \"path/to/file.swig\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Loading Partial Templates in JavaScript\nDESCRIPTION: The partial function loads other template files. It allows defining local variables and offers options for caching and strict variable usage.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n<%- partial(layout, [locals], [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Loading Partial Templates in JavaScript\nDESCRIPTION: The partial function loads other template files. It allows defining local variables and offers options for caching and strict variable usage.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n<%- partial(layout, [locals], [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Getting Routes in Hexo Router\nDESCRIPTION: Demonstrates how to use the `get` method to retrieve route data as a Stream and pipe it to a destination. This is useful for retrieving path data for a specific destination.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/router.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar data = hexo.route.get(\"index.html\");\nvar dest = fs.createWriteStream(\"somewhere\");\n\ndata.pipe(dest);\n```\n\n----------------------------------------\n\nTITLE: Fixing YAML Parsing Error in Hexo Configuration\nDESCRIPTION: Demonstrates how to properly format YAML with colons in strings and correct indentation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlast_updated: \"Last updated: %s\"\n\nlast_updated: \"Last updated: %s\"\n```\n\n----------------------------------------\n\nTITLE: Vercel Build Script Configuration\nDESCRIPTION: JSON configuration for package.json to enable Vercel builds.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build\": \"hexo generate\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing an after_post_render Filter in Hexo\nDESCRIPTION: Example showing how to modify post content after rendering by replacing Twitter usernames with links. This filter runs after the post has been fully rendered.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_8\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"after_post_render\", function (data) {\n  data.content = data.content.replace(\n    /@(\\d+)/,\n    '<a href=\"http://twitter.com/$1\">#$1</a>',\n  );\n  return data;\n});\n```\n\n----------------------------------------\n\nTITLE: Rsync Deployer Installation\nDESCRIPTION: NPM command to install the Rsync deployment plugin for Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-rsync --save\n```\n\n----------------------------------------\n\nTITLE: Implementing Code Block Tag Plugin in Hexo\nDESCRIPTION: Demonstrates how to add code snippets with syntax highlighting, line numbers and other formatting options\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/tag-plugins.md#2025-04-10_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n```\n\n----------------------------------------\n\nTITLE: Setting Renderer Options in Hexo\nDESCRIPTION: Illustrates how to pass options to the renderer as a second argument when calling the render method.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/rendering.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ text: \"\" }, { foo: \"foo\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Using Translation Helpers in Hexo Templates\nDESCRIPTION: This JavaScript snippet demonstrates how to use the __() and _p() helpers in Hexo templates to retrieve translations, including pluralization.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/internationalization.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n----------------------------------------\n\nTITLE: Loading CSS Files with css Helper in Hexo (JavaScript)\nDESCRIPTION: The css helper loads CSS files and generates the appropriate HTML tags. It supports various input formats and custom attributes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n<%- css('style.css') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- css(['style.css', 'screen.css']) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- css({ href: 'style.css', integrity: 'foo' }) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- css([{ href: 'style.css', integrity: 'foo' }, { href: 'screen.css', integrity: 'bar' }]) %>\n```\n\n----------------------------------------\n\nTITLE: Using url_for Helper with Forced Non-Relative Links in Hexo\nDESCRIPTION: Example of using the url_for helper with a false parameter to force non-relative URLs even when relative_link is enabled in the configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/index.html\">blog</a>\n```\n\n----------------------------------------\n\nTITLE: Passing Multiple Arguments to Hexo Filters\nDESCRIPTION: Example showing how data flows through multiple filters and how to pass additional arguments to filters. The first filter modifies the data which is then passed to the second filter.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"test\", function (data, arg1, arg2) {\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return \"something\";\n});\n\nhexo.extend.filter.register(\"test\", function (data, arg1, arg2) {\n  // data === 'something'\n});\n\nhexo.extend.filter.exec(\"test\", \"some data\", {\n  args: [\"foo\", \"bar\"],\n});\n```\n\n----------------------------------------\n\nTITLE: RSS3 Deployment Configuration\nDESCRIPTION: YAML configuration for RSS3 deployment including endpoint, private key, and IPFS settings.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/one-command-deployment.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy: # The root configuration block for all deployers\n  - type: rss3\n    endpoint: https://hub.rss3.io\n    privateKey: 47e18d6c386898b424025cd9db446f779ef24ad33a26c499c87bb3d9372540ba\n    ipfs:\n      deploy: true\n      gateway: pinata\n      api:\n        key: d693df715d3631e489d6\n        secret: ee8b74626f12b61c1a4bde3b8c331ad390567c86ba779c9b18561ee92c1cbff0\n```\n\n----------------------------------------\n\nTITLE: Increasing File Watch Limit on Linux\nDESCRIPTION: Command to increase the file watch limit on Linux systems when encountering ENOSPC errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n\n----------------------------------------\n\nTITLE: Enabling PrismJS in Hexo (below v7.0.0)\nDESCRIPTION: Configuration to enable PrismJS in Hexo versions prior to 7.0.0, showing how to disable highlight.js and configure various PrismJS options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: true\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Implementing After_Render Filter for JavaScript Minification in Hexo\nDESCRIPTION: Demonstrates how to create an after_render filter to minify JavaScript code using UglifyJS.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/rendering.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar UglifyJS = require(\"uglify-js\");\n\nhexo.extend.filter.register(\"after_render:js\", function (str, data) {\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n----------------------------------------\n\nTITLE: OpenShift Deployer Installation\nDESCRIPTION: NPM command to install the OpenShift deployment plugin for Hexo (deprecated).\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-openshift --save\n```\n\n----------------------------------------\n\nTITLE: Using js Helper in Hexo\nDESCRIPTION: The js helper loads JavaScript files. The path parameter can be a string, array, object, or array of objects. The root directory value is automatically prepended and the .js extension is added if not present.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_5\n\nLANGUAGE: js\nCODE:\n```\n<%- js(path, ...) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- js('script.js') %>\n// <script src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script src=\"/script.js\"></script>\n// <script src=\"/gallery.js\"></script>\n\n<%- js({ src: 'script.js', integrity: 'foo', async: true }) %>\n// <script src=\"/script.js\" integrity=\"foo\" async></script>\n\n<%- js([{ src: 'script.js', integrity: 'foo' }, { src: 'gallery.js', integrity: 'bar' }]) %>\n// <script src=\"/script.js\" integrity=\"foo\"></script>\n// <script src=\"/gallery.js\" integrity=\"bar\"></script>\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up Hexo Repository for Development\nDESCRIPTION: Commands for forking, cloning the Hexo repository, installing dependencies, and initializing git submodules to prepare for development work.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/contributing.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/<username>/hexo.git\n$ cd hexo\n$ npm install\n$ git submodule update --init\n```\n\n----------------------------------------\n\nTITLE: HTML Output for Code Block with Line Numbers\nDESCRIPTION: Example of HTML output for a code block with line numbers when using highlight.js in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"highlight yaml\">\n  <table>\n    <tbody>\n      <tr>\n        <td class=\"gutter\">\n          <pre><span class=\"line\">1</span><br></pre>\n        </td>\n        <td class=\"code\">\n          <pre><span class=\"line\"><span class=\"attr\">hello:</span><span class=\"string\">hexo</span></span><br></pre>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Code Block Syntax in Markdown\nDESCRIPTION: Shows three different ways to write code blocks in Hexo: using codeblock tag plugin, code tag plugin, and fenced code blocks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n\n{% code [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcode %}\n\n```[language] [title] [url] [link text] [additional options]\ncode snippet\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Syntax Highlighting in Hexo (pre-v7.0.0)\nDESCRIPTION: YAML configuration for syntax highlighting in Hexo versions prior to 7.0.0, including options for highlight.js and prismjs.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Nunjucks Tags in Hexo Markdown Renderer\nDESCRIPTION: Shows how to disable Nunjucks tag processing in the Markdown renderer, allowing use of {{ }} or {% %} without content escaping.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/rendering.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderer = hexo.render.renderer.get(\"md\");\nif (renderer) {\n  renderer.disableNunjucks = true;\n  hexo.extend.renderer.register(\"md\", \"html\", renderer);\n}\n```\n\n----------------------------------------\n\nTITLE: Async Renderer Registration with Callback (JavaScript)\nDESCRIPTION: This example demonstrates registering an async renderer for Stylus files using a callback function. It uses the 'stylus' library to render .styl files to CSS.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/renderer.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar stylus = require(\"stylus\");\n\n// Callback\nhexo.extend.renderer.register(\n  \"styl\",\n  \"css\",\n  function (data, options, callback) {\n    stylus(data.text).set(\"filename\", data.path).render(callback);\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Using relative_url Helper in Hexo\nDESCRIPTION: The relative_url helper returns a relative URL from 'from' path to 'to' path. This is useful for creating links between different pages or resources.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n<%- relative_url(from, to) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- relative_url('foo/bar/', 'css/style.css') %>\n// ../../css/style.css\n```\n\n----------------------------------------\n\nTITLE: Configuring Syntax Highlighter in Hexo 7.0.0\nDESCRIPTION: YAML configuration for setting the syntax highlighter in Hexo 7.0.0. Options include highlight.js, prismjs, or leaving it empty.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2023-11-03-hexo-7-0-0-released.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsyntax_highlighter: highlight.js # highlight.js | prismjs | <empty>\n```\n\n----------------------------------------\n\nTITLE: Displaying YouTube Video in Hexo Markdown\nDESCRIPTION: This snippet demonstrates how to embed a YouTube video in a Hexo markdown file using a custom tag.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/variables.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% youtube T9oAax-IRw0 %}\n```\n\n----------------------------------------\n\nTITLE: Configuring Syntax Highlighting in Hexo (v7.0.0+)\nDESCRIPTION: YAML configuration for syntax highlighting in Hexo versions 7.0.0 and above, with a new syntax_highlighter option.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo Without Optional Dependencies\nDESCRIPTION: Shows the command to install Hexo without optional dependencies to avoid DTrace-related errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo --no-optional\n```\n\n----------------------------------------\n\nTITLE: Starting Hexo Documentation Server\nDESCRIPTION: Command for starting a local development server to preview changes to the Hexo documentation in real time.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/contributing.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (v7.0.0+)\nDESCRIPTION: YAML configuration to disable syntax highlighting in Hexo version 7.0.0 and later by setting syntax_highlighter to empty.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: # empty\n```\n\n----------------------------------------\n\nTITLE: Rendering a File with Hexo\nDESCRIPTION: Shows how to render a file using Hexo's render method. The engine is automatically detected based on the file extension, but can be explicitly defined if needed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/rendering.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ path: \"path/to/file.swig\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Deploying Hexo Site to Edgio\nDESCRIPTION: Command to deploy a Hexo site to Edgio. This uploads your static files to Edgio's platform and makes them available through their global CDN.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/one-command-deployment.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nedgio deploy\n```\n\n----------------------------------------\n\nTITLE: Inserting Google Search Form in Hexo (JavaScript)\nDESCRIPTION: This helper function inserts a Google search form. It accepts options for customizing the form's class, search hint text, and button display.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_33\n\nLANGUAGE: js\nCODE:\n```\n<%- search_form(options) %>\n```\n\n----------------------------------------\n\nTITLE: Updating package.json for migration from hexo-renderer-jade to hexo-renderer-pug\nDESCRIPTION: Diff showing how to update the package.json file to replace hexo-renderer-jade with hexo-renderer-pug. Users need to remove the jade dependency and add the pug dependency with the specified versions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-10-19-hexo-renderer-jade-0-5_hexo-renderer-pug-1.md#2025-04-10_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n-  \"hexo-renderer-jade\": \"^0.4.1\",\n+  \"hexo-renderer-pug\": \"^1.0.0\",\n```\n\n----------------------------------------\n\nTITLE: Configuring PrismJS in Hexo (pre-v7.0.0)\nDESCRIPTION: YAML configuration for using PrismJS as the syntax highlighter in Hexo versions before 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: true\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Post Excerpt Example in Hexo\nDESCRIPTION: Example of using the more tag to create post excerpts in Hexo markdown content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/tag-plugins.md#2025-04-10_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n<!-- more -->\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Code Block Syntax in Markdown for Hexo\nDESCRIPTION: Shows the three ways to create code blocks in Hexo: using the codeblock tag plugin, code tag plugin, or Markdown's fenced code block syntax with Hexo extensions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n\n{% code [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcode %}\n\n```[language] [title] [url] [link text] [additional options]\ncode snippet\n```\n```\n\n----------------------------------------\n\nTITLE: Error Message for YAMLException in Hexo 6.1.0\nDESCRIPTION: This snippet shows the error message that users may encounter when running 'hexo generate' after upgrading to Hexo 6.1.0. The error indicates an issue with YAML types specification.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/troubleshooting.md#2025-04-10_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nYAMLException: Specified list of YAML types (or a single Type object) contains a non-Type object.\n    at ...\n```\n\n----------------------------------------\n\nTITLE: Configuring PrismJS in Hexo (pre-v7.0.0)\nDESCRIPTION: YAML configuration for using PrismJS as the syntax highlighter in Hexo versions prior to 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: true\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Checking File Renderability in Hexo\nDESCRIPTION: Shows how to use the isRenderable method to check if a file is renderable based on registered renderers.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/rendering.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.isRenderable(\"layout.swig\"); // true\nhexo.render.isRenderable(\"image.png\"); // false\n```\n\n----------------------------------------\n\nTITLE: Heroku Deployment Configuration\nDESCRIPTION: YAML configuration for Heroku deployment including repository URL and commit message.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\n----------------------------------------\n\nTITLE: Setting Path Data in Hexo Router\nDESCRIPTION: Shows different ways to set path data using strings, buffers, and functions (both Promise and callback patterns). Demonstrates the flexibility of the set method.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/router.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// String\nhexo.route.set(\"index.html\", \"index\");\n\n// Buffer\nhexo.route.set(\"index.html\", new Buffer(\"index\"));\n\n// Function (Promise)\nhexo.route.set(\"index.html\", function () {\n  return new Promise(function (resolve, reject) {\n    resolve(\"index\");\n  });\n});\n\n// Function (Callback)\nhexo.route.set(\"index.html\", function (callback) {\n  callback(null, \"index\");\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring PrismJS in Hexo (v7.0.0+)\nDESCRIPTION: YAML configuration for using PrismJS as the syntax highlighter in Hexo versions 7.0.0 and above.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: prismjs\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Warning Note in Hexo Markdown\nDESCRIPTION: This snippet shows how to create a warning note in a Hexo markdown file using a custom tag. It informs users about the removal of Lodash from global variables in Hexo 5.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/variables.md#2025-04-10_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{% note warn %}\nLodash has been removed from global variables since Hexo 5.0.0. [You-Dont-Need-Lodash-Underscore](https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore) might be helpful for your migration.\n{% endnote %}\n```\n\n----------------------------------------\n\nTITLE: HTML Output with hljs Option Enabled\nDESCRIPTION: Example of HTML output for a YAML code block when using highlight.js with the hljs option enabled, showing class names with hljs- prefix.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"yaml hljs\">\n<span class=\"hljs-comment\"># _config.yml</span>\n<span class=\"hljs-attr\">hexo:</span> <span class=\"hljs-string\">hexo</span>\n</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo Server Module\nDESCRIPTION: Command to install the hexo-server module as a project dependency using npm.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/server.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-server --save\n```\n\n----------------------------------------\n\nTITLE: Enabling Highlight.js in Hexo (below v7.0.0)\nDESCRIPTION: Configuration to enable highlight.js and disable prismjs in Hexo versions below 7.0.0, with various highlight.js options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"  \"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Passando Opções para Renderização em JavaScript usando Hexo\nDESCRIPTION: Este snippet demonstra como passar opções adicionais para o método de renderização hexo.render.render como um segundo argumento.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/rendering.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ text: \"\" }, { foo: \"foo\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: FTPSync Deployer Installation\nDESCRIPTION: NPM command to install the FTP synchronization deployment plugin for Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-ftpsync --save\n```\n\n----------------------------------------\n\nTITLE: Setting Modified Flag for Path in Hexo Router\nDESCRIPTION: Demonstrates how to set a path with a modified flag to optimize file generation by skipping unmodified files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/router.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.set(\"index.html\", {\n  data: \"index\",\n  modified: false,\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow for Hexo Deployment\nDESCRIPTION: GitHub Actions workflow configuration for automatically building and deploying a Hexo site to GitHub Pages. Includes Node.js setup, dependency caching, and deployment steps.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/github-pages.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: Pages\n\non:\n  push:\n    branches:\n      - main # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 20\n        uses: actions/setup-node@v4\n        with:\n          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n          # Ref: https://github.com/actions/setup-node#supported-version-syntax\n          node-version: \"20\"\n      - name: Cache NPM dependencies\n        uses: actions/cache@v4\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow for Hexo Deployment\nDESCRIPTION: GitHub Actions workflow configuration for automatically building and deploying a Hexo site to GitHub Pages. Includes Node.js setup, dependency caching, and deployment steps.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/github-pages.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: Pages\n\non:\n  push:\n    branches:\n      - main # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 20\n        uses: actions/setup-node@v4\n        with:\n          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n          # Ref: https://github.com/actions/setup-node#supported-version-syntax\n          node-version: \"20\"\n      - name: Cache NPM dependencies\n        uses: actions/cache@v4\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n----------------------------------------\n\nTITLE: Using url_for Helper in Hexo to Generate URLs\nDESCRIPTION: Example of using the url_for helper to generate a URL with the root path prefixed. The output is automatically encoded and follows the root configuration in _config.yml.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/blog/index.html\">blog</a>\n```\n\n----------------------------------------\n\nTITLE: Using is_post Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the current page is a post.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_post() %>\n```\n\n----------------------------------------\n\nTITLE: Enabling PrismJS in Hexo (v7.0.0+)\nDESCRIPTION: Configuration to enable prismjs in Hexo versions 7.0.0 and above, with various prismjs options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: prismjs\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Theme View in Hexo\nDESCRIPTION: Retrieves a view (template) from the Hexo theme. This method allows developers to access a specific template file by its path.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/themes.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.theme.getView(path);\n```\n\n----------------------------------------\n\nTITLE: Running Hexo Server in Static Mode\nDESCRIPTION: Command to run the Hexo server in static mode with the -s flag. In this mode, only files from the public directory are served and no file watching occurs. Requires running 'hexo generate' first.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/server.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -s\n```\n\n----------------------------------------\n\nTITLE: Setting Routes with Modified Status in Hexo Router\nDESCRIPTION: Shows how to set routes with a modified status flag to indicate whether the content has changed. This helps optimize the build process by skipping unchanged files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/router.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.set(\"index.html\", {\n  data: \"index\",\n  modified: false,\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n----------------------------------------\n\nTITLE: Registering an Injector in Hexo\nDESCRIPTION: Demonstrates the basic syntax for registering an injector in Hexo. The function takes three parameters: entry (where to inject), value (what to inject), and to (which pages to inject to).\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/injector.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.injector.register(entry, value, to);\n```\n\n----------------------------------------\n\nTITLE: Rendering a Post in Hexo with JavaScript\nDESCRIPTION: This function renders a post with the specified source file path and data. The data must contain the content attribute, or Hexo will attempt to read from the source file. The rendering process includes executing filters, rendering with Markdown, and processing with Nunjucks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/posts.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.render(source, data);\n```\n\n----------------------------------------\n\nTITLE: Configuring Relative Links in Hexo _config.yml\nDESCRIPTION: Example configuration in _config.yml that enables relative links in Hexo. This affects how url_for generates URLs when relative_link is set to true.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_6\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nrelative_link: true\n```\n\n----------------------------------------\n\nTITLE: Using is_year Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the current page is a yearly archive page.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_year() %>\n```\n\n----------------------------------------\n\nTITLE: Highlight.js Configuration (v7.0.0+)\nDESCRIPTION: YAML configuration example for Hexo's highlight.js syntax highlighting in versions 7.0.0 and above, showing the newer configuration format.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Theme View in Hexo (JavaScript)\nDESCRIPTION: Retrieves a view from the Hexo theme object using the specified path.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ja/api/themes.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.theme.getView(path);\n```\n\n----------------------------------------\n\nTITLE: Creating Paginated Archive Pages in Hexo\nDESCRIPTION: Uses the hexo-pagination plugin to create paginated archive pages. This generator creates pages with 10 posts per page and applies the archive or index layout.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/generator.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar pagination = require(\"hexo-pagination\");\n\nhexo.extend.generator.register(\"archive\", function (locals) {\n  // hexo-pagination makes an index.html for the /archives route\n  return pagination(\"archives\", locals.posts, {\n    perPage: 10,\n    layout: [\"archive\", \"index\"],\n    data: {},\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Removing Routes in Hexo Router\nDESCRIPTION: Demonstrates how to remove a route using the `remove` method. This deletes the specified path from the router.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/router.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.remove(\"index.html\");\n```\n\n----------------------------------------\n\nTITLE: Graceful Exit in Hexo Applications\nDESCRIPTION: Demonstrates the proper way to exit a Hexo application using the exit() method. This ensures graceful termination and proper saving of the database, handling both successful completion and error scenarios.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/index.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo\n  .call(\"generate\")\n  .then(function () {\n    return hexo.exit();\n  })\n  .catch(function (err) {\n    return hexo.exit(err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Initializing a Hexo Project using Command Line\nDESCRIPTION: Commands to initialize a new Hexo project in a specified directory, navigate into it, and install dependencies.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/setup.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Creating a Feature Branch in Git\nDESCRIPTION: Command for creating a new git branch to work on a feature for Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/contributing.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git checkout -b new_feature\n```\n\n----------------------------------------\n\nTITLE: Hexo Project Directory Structure\nDESCRIPTION: The standard directory structure of an initialized Hexo project, showing the main configuration files and content directories.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/setup.md#2025-04-10_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n----------------------------------------\n\nTITLE: Using titlecase Helper in Hexo Templates\nDESCRIPTION: String manipulation helper that converts a string to proper title case.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n<%- titlecase(string) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting (v7.0.0+)\nDESCRIPTION: YAML configuration to disable syntax highlighting in Hexo versions 7.0.0 and above by leaving the syntax_highlighter field empty.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: # empty\n```\n\n----------------------------------------\n\nTITLE: Setting a Theme View in Hexo (JavaScript)\nDESCRIPTION: Sets view data at the specified path in the Hexo theme object.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ja/api/themes.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.theme.setView(path, data);\n```\n\n----------------------------------------\n\nTITLE: Using truncate Helper in Hexo Templates\nDESCRIPTION: String manipulation helper that truncates text after a certain length. Default length is 30 characters. Supports custom separators and omission text.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n<%- truncate(text, length) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- truncate('Once upon a time in a world far far away', 16) %>\n// Once upon a time\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n----------------------------------------\n\nTITLE: Rendering a Theme View in Hexo (JavaScript)\nDESCRIPTION: Demonstrates how to render a view with context data in Hexo. The method processes the template using the appropriate renderer and loads helpers, then returns the result either directly or after applying layouts.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ja/api/themes.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar view = hexo.theme.getView(\"layout.swig\");\n\nview.render({ foo: 1, bar: 2 }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing a template_locals Filter in Hexo\nDESCRIPTION: Example showing how to modify template local variables by adding the current time. This allows adding or modifying data available to templates during rendering.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_12\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"template_locals\", function (locals) {\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n----------------------------------------\n\nTITLE: Registering a Hexo Helper\nDESCRIPTION: The basic syntax for registering a helper function in Hexo. This pattern allows you to extend Hexo's template functionality with custom code snippets.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/helper.md#2025-04-10_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.helper.register(name, function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Starting Hexo Server\nDESCRIPTION: Basic command to start the Hexo server which will run at http://localhost:4000 by default and watch for file changes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/server.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server\n```\n\n----------------------------------------\n\nTITLE: Using render Helper in Hexo Templates\nDESCRIPTION: String manipulation helper that renders a string using the specified template engine.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n<%- render(str, engine, [options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- render('p(class=\"example\") Test', 'pug'); %>\n// <p class=\"example\">Test</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Output with Line Numbers for Highlight.js\nDESCRIPTION: HTML markup generated by Hexo when using highlight.js with line numbers enabled, showing how code is wrapped in figure and table elements.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"highlight yaml\">\n  <table>\n    <tbody>\n      <tr>\n        <td class=\"gutter\">\n          <pre><span class=\"line\">1</span><br></pre>\n        </td>\n        <td class=\"code\">\n          <pre><span class=\"line\"><span class=\"attr\">hello:</span><span class=\"string\">hexo</span></span><br></pre>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Updating Routes in Hexo Generator\nDESCRIPTION: Shows how to update routes in a Hexo generator. The function can return either a single object or an array of objects, each defining a path and its corresponding data.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/generator.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"test\", function (locals) {\n  // Object\n  return {\n    path: \"foo\",\n    data: \"foo\",\n  };\n\n  // Array\n  return [\n    { path: \"foo\", data: \"foo\" },\n    { path: \"bar\", data: \"bar\" },\n  ];\n});\n```\n\n----------------------------------------\n\nTITLE: Removing Hexo Scaffold\nDESCRIPTION: Deletes an existing scaffold template from Hexo. Takes the name of the scaffold to remove as a parameter.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/scaffolds.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.scaffold.remove(name);\n```\n\n----------------------------------------\n\nTITLE: Rendering Files in Hexo\nDESCRIPTION: Renders specified files using Hexo's rendering engine. Includes an option to specify the output destination.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo render <file1> [file2] ...\n```\n\n----------------------------------------\n\nTITLE: Defining Console Command Options in Hexo\nDESCRIPTION: Demonstrates how to specify additional options for a console command using the 'options' property. This allows for more complex command configurations.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/console.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  options: [{ name: \"-r, --replace\", desc: \"Replace existing files\" }];\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Port\nDESCRIPTION: Command to start Hexo server on a custom port using the -p flag, useful when default port is already in use.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/server.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -p 5000\n```\n\n----------------------------------------\n\nTITLE: Increasing Allowed Synchronous I/O Operations\nDESCRIPTION: Command to increase the maximum number of open files allowed by the system, which helps resolve EMFILE errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ ulimit -n 10000\n```\n\n----------------------------------------\n\nTITLE: Copying Files in Hexo Generator\nDESCRIPTION: Shows how to copy files using a Hexo generator. Instead of returning data directly, it sets the data property to a function that creates a read stream when needed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/generator.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar fs = require(\"hexo-fs\");\n\nhexo.extend.generator.register(\"asset\", function (locals) {\n  return {\n    path: \"file.txt\",\n    data: function () {\n      return fs.createReadStream(\"path/to/file.txt\");\n    },\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Using partial Helper in Hexo Templates\nDESCRIPTION: Template helper that loads other template files. Supports local variables and caching options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n<%- partial(layout, [locals], [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Installing Theme Development Dependencies\nDESCRIPTION: Commands for cloning the Hexo site repository and installing necessary dependencies for theme development.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/themes.md#2025-04-10_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ git clone https://github.com/<username>/site.git\n$ cd site\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Copying Files in Hexo Generator\nDESCRIPTION: Shows how to copy files using a Hexo generator. Instead of returning data directly, it sets the data property to a function that creates a read stream when needed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/generator.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar fs = require(\"hexo-fs\");\n\nhexo.extend.generator.register(\"asset\", function (locals) {\n  return {\n    path: \"file.txt\",\n    data: function () {\n      return fs.createReadStream(\"path/to/file.txt\");\n    },\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Truncating Text in Hexo (JavaScript)\nDESCRIPTION: Demonstrates the usage of the truncate helper function in Hexo. This function truncates text after a certain length, with options for custom separators and omission text.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/helpers.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<%- truncate(text, [options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- truncate('Once upon a time in a world far far away', {length: 17}) %>\n// Once upon a ti...\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n----------------------------------------\n\nTITLE: Publishing a Hexo Draft\nDESCRIPTION: Publishes a draft post in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo publish [layout] <filename>\n```\n\n----------------------------------------\n\nTITLE: Loading Files with Box Container in JavaScript\nDESCRIPTION: Demonstrates how to load and watch files using the Box container's process() and watch() methods. The process method loads all files once, while watch continues monitoring for changes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/box.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nbox.process().then(function () {\n  // ...\n});\n\nbox.watch().then(function () {\n  // You can call box.unwatch() later to stop watching.\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Heroku Deployer Plugin\nDESCRIPTION: Command to install the hexo-deployer-heroku plugin which is required for deploying a Hexo site to Heroku.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-heroku --save\n```\n\n----------------------------------------\n\nTITLE: Setting Custom IP for Hexo Server\nDESCRIPTION: Command to specify a custom IP address for the Hexo server using the -i option. By default, Hexo runs the server on 0.0.0.0, but this can be changed to any specific IP address.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/server.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -i 192.168.1.1\n```\n\n----------------------------------------\n\nTITLE: Caching Fragment Content in Hexo\nDESCRIPTION: This function caches the contents of a fragment in Hexo. It saves the contents within a fragment and serves the cache when the next request comes in.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n<%- fragment_cache(id, fn);\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n----------------------------------------\n\nTITLE: Getting a View in Hexo\nDESCRIPTION: Retrieves a view template from the Hexo theme system using the specified path.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/themes.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.theme.getView(path);\n```\n\n----------------------------------------\n\nTITLE: Registering a Basic Hexo Generator\nDESCRIPTION: Shows the basic syntax for registering a generator in Hexo. The generator function receives the locals argument containing site variables, allowing access to website data without directly querying the database.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/generator.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(name, function (locals) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Using escape_html Helper in Hexo Templates\nDESCRIPTION: String manipulation helper that escapes HTML entities in a string.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n<%- escape_html(str) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- escape_html('<p>Hello \"world\".</p>') %>\n// &lt;p&gt;Hello &quot;world&quot;.&lt;&#x2F;p&gt;\n```\n\n----------------------------------------\n\nTITLE: Displaying Hexo Draft Posts\nDESCRIPTION: Displays draft posts stored in the source/_drafts folder when running Hexo commands.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --draft\n```\n\n----------------------------------------\n\nTITLE: Registering a Hexo Tag Plugin\nDESCRIPTION: Demonstrates how to register a new tag plugin in Hexo. The function takes two arguments: 'args' for tag arguments and 'content' for wrapped content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/tag.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\n  name,\n  function (args, content) {\n    // ...\n  },\n  options\n);\n```\n\n----------------------------------------\n\nTITLE: Listing Hexo Routes\nDESCRIPTION: Lists all routes in the Hexo website.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo list <type>\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Hexo Data Models in Templates\nDESCRIPTION: Code snippet showing how to convert Warehouse data models into arrays for iteration in Jade or Swig templates.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_15\n\nLANGUAGE: plain\nCODE:\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Managing Hexo Configuration\nDESCRIPTION: Lists or modifies the Hexo configuration (_config.yml). Can show or change specific key-value pairs.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo config [key] [value]\n```\n\n----------------------------------------\n\nTITLE: Inserting Tag List in Hexo\nDESCRIPTION: This function inserts a list of all tags. It accepts optional parameters for customizing the output, including ordering, styling, and the number of tags to display.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_tags([tags], [options]) %>\n```\n\nLANGUAGE: ejs\nCODE:\n```\n<%- list_tags(site.tags, {class: 'classtest', style: false, separator: ' | '}) %>\n<%- list_tags(site.tags, {class: 'classtest', style: 'list'}) %>\n<%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: false, separator: ' | '}) %>\n<%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: 'list'}) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo Theme Page in YAML\nDESCRIPTION: This YAML front matter configures a Hexo theme page. It sets the layout to 'plugins', title to 'Themes', data source to 'themes', specifies a partial template named 'theme', and disables comments.\nSOURCE: https://github.com/hexojs/site/blob/master/source/themes/index.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: plugins\ntitle: Themes\ndata: themes\npartial: theme\ncomments: false\n---\n```\n\n----------------------------------------\n\nTITLE: Copying Files with Hexo Generator\nDESCRIPTION: Demonstrates how to use a function as the data value to create a file stream. This approach is useful for copying files directly without processing them.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/generator.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar fs = require(\"hexo-fs\");\n\nhexo.extend.generator.register(\"asset\", function (locals) {\n  return {\n    path: \"file.txt\",\n    data: function () {\n      return fs.createReadStream(\"path/to/file.txt\");\n    },\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Removing Local Variables in Hexo.js\nDESCRIPTION: Demonstrates how to remove a specific local variable from the Hexo.js template system.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/locals.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.remove(\"posts\");\n```\n\n----------------------------------------\n\nTITLE: Registering Basic Tag in Hexo\nDESCRIPTION: Basic syntax for registering a new tag plugin in Hexo. The function receives args and content parameters, with optional configuration options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/tag.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\n  name,\n  function (args, content) {\n    // ...\n  },\n  options,\n);\n```\n\n----------------------------------------\n\nTITLE: Publishing a Draft in Hexo\nDESCRIPTION: This function publishes a draft post in Hexo. It requires data parameters including the slug, and a replace flag to overwrite existing files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/posts.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.publish(data, replace);\n```\n\n----------------------------------------\n\nTITLE: Disabling Nunjucks Tags in Custom Renderer (JavaScript)\nDESCRIPTION: This snippet shows how to disable Nunjucks tag processing in a custom renderer. It sets the 'disableNunjucks' property on the renderer function to true before registration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/renderer.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nfunction lessFn(data, options) {\n  // do something\n}\n\nlessFn.disableNunjucks = true;\n\nhexo.extend.renderer.register(\"less\", \"css\", lessFn);\n```\n\n----------------------------------------\n\nTITLE: Using Custom Configuration in Hexo\nDESCRIPTION: Specifies a custom configuration file or a comma-separated list of JSON/YAML files to be used instead of _config.yml.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --config custom.yml\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --config custom.yml,custom2.json\n```\n\n----------------------------------------\n\nTITLE: Using gravatar Helper in Hexo Templates\nDESCRIPTION: Helper function that returns the Gravatar image URL from an email. It accepts an email and optional size or options object for customizing the Gravatar image.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n<%- gravatar(email, [size]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- gravatar('a@abc.com') %>\n// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'https://via.placeholder.com/150'}) %>\n// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=https%3A%2F%2Fvia.placeholder.com%2F150\n```\n\n----------------------------------------\n\nTITLE: Header Partial with Local Variables\nDESCRIPTION: Example of a partial template that uses locally passed variables.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/templates.md#2025-04-10_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<h1 id=\"logo\"><%= title %></h1>\n```\n\n----------------------------------------\n\nTITLE: Copying Files in Hexo Generator\nDESCRIPTION: Shows how to copy files using a Hexo generator. Instead of returning data directly, it sets the 'data' property to a function that creates a read stream when needed, optimizing performance.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/generator.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar fs = require(\"hexo-fs\");\n\nhexo.extend.generator.register(\"asset\", function (locals) {\n  return {\n    path: \"file.txt\",\n    data: function () {\n      return fs.createReadStream(\"path/to/file.txt\");\n    },\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Category in Hexo\nDESCRIPTION: YAML configuration snippet showing how to set the default category in Hexo's _config.yml file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-02-cli-4_wordpress-2-1_sitemap-2-1.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndefault_category: uncategorized\n```\n\n----------------------------------------\n\nTITLE: Unregistering and Replacing Tags in Hexo\nDESCRIPTION: Example showing how to unregister an existing tag plugin and replace it with a custom implementation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/tag.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst tagFn = (args, content) => {\n  content = \"something\";\n  return content;\n};\n\n// https://hexo.io/docs/tag-plugins#YouTube\nhexo.extend.tag.unregister(\"youtube\");\n\nhexo.extend.tag.register(\"youtube\", tagFn);\n```\n\n----------------------------------------\n\nTITLE: Implementing after_clean Filter in Hexo\nDESCRIPTION: Shows how to use the after_clean filter to perform additional cleanup operations after the hexo clean command.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register(\"after_clean\", function () {\n  // remove some other temporary files\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Working Directory in Hexo\nDESCRIPTION: Sets a custom path for the current working directory when running Hexo commands.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --cwd /path/to/cwd\n```\n\n----------------------------------------\n\nTITLE: Escaping Template Tags with Raw Tag\nDESCRIPTION: Method to escape content containing curly braces that would otherwise be parsed by Nunjucks template engine.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_18\n\nLANGUAGE: plain\nCODE:\n```\n{% raw %}\nHello {{ world }}\n{% endraw %}\n```\n\n----------------------------------------\n\nTITLE: Using image_tag Helper in Hexo Templates\nDESCRIPTION: Helper function for inserting images. It accepts a path and options for configuring image attributes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n<%- image_tag(path, [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Setting a Path with String Data in Hexo Router\nDESCRIPTION: Shows how to set a path in Hexo's router using a string value.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/router.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// String\nhexo.route.set(\"index.html\", \"index\");\n```\n\n----------------------------------------\n\nTITLE: Removing a Path in Hexo Router\nDESCRIPTION: Shows how to remove a path from Hexo's router.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/router.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.remove(\"index.html\");\n```\n\n----------------------------------------\n\nTITLE: Categories Configuration Example\nDESCRIPTION: Shows how to define simple categories in YAML front-matter, creating a hierarchical structure with tags on the same level.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/front-matter.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncategories:\n  - Sports\n  - Baseball\ntags:\n  - Injury\n  - Fight\n  - Shocking\n```\n\n----------------------------------------\n\nTITLE: Unregistering Existing Tag Plugins in Hexo\nDESCRIPTION: Demonstrates how to unregister an existing tag plugin and replace it with a custom function. This example replaces the 'youtube' tag plugin.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/tag.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst tagFn = (args, content) => {\n  content = \"something\";\n  return content;\n};\n\n// https://hexo.io/docs/tag-plugins#YouTube\nhexo.extend.tag.unregister(\"youtube\");\n\nhexo.extend.tag.register(\"youtube\", tagFn);\n```\n\n----------------------------------------\n\nTITLE: Running Hexo Server in Static Mode on WSL\nDESCRIPTION: Commands to generate files and run Hexo server in static mode on Windows Subsystem for Linux (WSL) to work around file watcher limitations.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate\n$ hexo server -s\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Renderer for Stylus in Hexo (JavaScript)\nDESCRIPTION: This example demonstrates how to register an asynchronous renderer for Stylus files in Hexo. It includes both a callback-based approach and a Promise-based approach.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/renderer.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar stylus = require(\"stylus\");\n\n// Callback\nhexo.extend.renderer.register(\n  \"styl\",\n  \"css\",\n  function (data, options, callback) {\n    stylus(data.text).set(\"filename\", data.path).render(callback);\n  }\n);\n\n// Promise\nhexo.extend.renderer.register(\"styl\", \"css\", function (data, options) {\n  return new Promise(function (resolve, reject) {\n    resolve(\"test\");\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Increasing File Descriptor Limit on Unix Systems\nDESCRIPTION: Command to increase the maximum number of open file descriptors on Unix-like systems to avoid EMFILE errors when generating many files with Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ ulimit -n 10000\n```\n\n----------------------------------------\n\nTITLE: Asynchronous File Include Tag\nDESCRIPTION: Example of an asynchronous tag that reads and includes file content, using the async option.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/tag.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar fs = require(\"hexo-fs\");\nvar pathFn = require(\"path\");\n\nhexo.extend.tag.register(\n  \"include_code\",\n  function (args) {\n    var filename = args[0];\n    var path = pathFn.join(hexo.source_dir, filename);\n\n    return fs.readFile(path).then(function (content) {\n      return \"<pre><code>\" + content + \"</code></pre>\";\n    });\n  },\n  { async: true },\n);\n```\n\n----------------------------------------\n\nTITLE: Using feed_tag Helper in Hexo Templates\nDESCRIPTION: Helper function for inserting feed links. It accepts a path and options for configuring feed attributes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n<%- feed_tag(path, [options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- feed_tag('atom.xml') %>\n// <link rel=\"alternate\" href=\"/atom.xml\" title=\"Hexo\" type=\"application/atom+xml\">\n\n<%- feed_tag('rss.xml', { title: 'RSS Feed', type: 'rss' }) %>\n// <link rel=\"alternate\" href=\"/atom.xml\" title=\"RSS Feed\" type=\"application/rss+xml\">\n\n/* Defaults to hexo-generator-feed's config if no argument */\n<%- feed_tag() %>\n// <link rel=\"alternate\" href=\"/atom.xml\" title=\"Hexo\" type=\"application/atom+xml\">\n```\n\n----------------------------------------\n\nTITLE: Setting a Path with Callback Function in Hexo Router\nDESCRIPTION: Shows how to set a path in Hexo's router using a function with a callback.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/router.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Function (Callback)\nhexo.route.set(\"index.html\", function (callback) {\n  callback(null, \"index\");\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Scaffold Content in Hexo\nDESCRIPTION: Creates or updates a scaffold template with the specified content. Takes a name parameter to identify the scaffold and content parameter containing the template content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/scaffolds.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.scaffold.set(name, content);\n```\n\n----------------------------------------\n\nTITLE: Running Hexo in Debug Mode\nDESCRIPTION: Logs detailed messages to the terminal and debug.log file. Helpful for troubleshooting Hexo issues.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --debug\n```\n\n----------------------------------------\n\nTITLE: Asynchronous File Include Tag\nDESCRIPTION: Example of an asynchronous tag that reads and includes file content, using the async option.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/tag.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar fs = require(\"hexo-fs\");\nvar pathFn = require(\"path\");\n\nhexo.extend.tag.register(\n  \"include_code\",\n  function (args) {\n    var filename = args[0];\n    var path = pathFn.join(hexo.source_dir, filename);\n\n    return fs.readFile(path).then(function (content) {\n      return \"<pre><code>\" + content + \"</code></pre>\";\n    });\n  },\n  { async: true },\n);\n```\n\n----------------------------------------\n\nTITLE: Alternative Methods for Executing Hexo Filters\nDESCRIPTION: Shows shorthand methods available on the main Hexo object for executing filters with both asynchronous and synchronous variants.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n----------------------------------------\n\nTITLE: Cleaning Hexo Cache\nDESCRIPTION: Command to clean Hexo's cache, which can help resolve issues with data not updating or files not regenerating.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo clean\n```\n\n----------------------------------------\n\nTITLE: File Permission Error in Windows Subsystem for Linux\nDESCRIPTION: Error that occurs when running Hexo server in WSL due to lack of filesystem watcher support.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_22\n\nLANGUAGE: plain\nCODE:\n```\nError: watch /path/to/hexo/theme/ EMPERM\n```\n\n----------------------------------------\n\nTITLE: Adding Hexo Version to package.json\nDESCRIPTION: JSON snippet showing how to properly include the Hexo version in package.json to ensure all commands are recognized.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hexo\": {\n    \"version\": \"3.2.2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Heroku Deployer Installation\nDESCRIPTION: NPM command to install the Heroku deployment plugin for Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-heroku --save\n```\n\n----------------------------------------\n\nTITLE: Passing Render Options in Hexo\nDESCRIPTION: Illustrates how to pass additional options to the render method as a second argument.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/rendering.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ text: \"\" }, { foo: \"foo\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Removing Scaffold from Hexo\nDESCRIPTION: Deletes an existing scaffold template from Hexo. The name parameter specifies which scaffold to remove.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/scaffolds.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.scaffold.remove(name);\n```\n\n----------------------------------------\n\nTITLE: Migrating Content to Hexo\nDESCRIPTION: Migrates content from other blog systems to Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo migrate <type>\n```\n\n----------------------------------------\n\nTITLE: Configuring Source File Inclusion/Exclusion in Hexo\nDESCRIPTION: Configuration example showing how to specify which files to include or exclude from Hexo's source processing\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2016-02-28-hexo-3-2-released.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ninclude:\n  - .htaccess\n\nexclude:\n  - tmp/**/*\n```\n\n----------------------------------------\n\nTITLE: Starting Hexo Server on an Alternative Port\nDESCRIPTION: Command to start the Hexo development server on a different port to avoid EADDRINUSE errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -p 5000\n```\n\n----------------------------------------\n\nTITLE: Starting Hexo Server on an Alternative Port\nDESCRIPTION: Command to start the Hexo development server on a different port to avoid EADDRINUSE errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -p 5000\n```\n\n----------------------------------------\n\nTITLE: Getting Output Extension in Hexo\nDESCRIPTION: Demonstrates the use of the getOutput method to retrieve the extension of the rendered output for a given file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/rendering.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.getOutput(\"layout.swig\"); // html\nhexo.render.getOutput(\"image.png\"); // '''\n```\n\n----------------------------------------\n\nTITLE: Resolving YAML Parsing Error in Hexo\nDESCRIPTION: Example of a YAML parsing error due to improper formatting of strings containing colons. The solution is to wrap such strings in quotation marks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\n----------------------------------------\n\nTITLE: OpenShift Deployment Configuration\nDESCRIPTION: YAML configuration for OpenShift deployment including repository URL and commit message.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\n----------------------------------------\n\nTITLE: Checking File Renderability in Hexo\nDESCRIPTION: Shows how to use the isRenderable method to check if a file is renderable based on its extension.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/rendering.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.isRenderable(\"layout.swig\"); // true\nhexo.render.isRenderable(\"image.png\"); // false\n```\n\n----------------------------------------\n\nTITLE: Implementing Async Stylus Renderer\nDESCRIPTION: Examples of implementing asynchronous renderers using both callback and Promise patterns. Shows how to register a Stylus to CSS renderer with proper file handling.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/renderer.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar stylus = require(\"stylus\");\n\n// Callback\nhexo.extend.renderer.register(\n  \"styl\",\n  \"css\",\n  function (data, options, callback) {\n    stylus(data.text).set(\"filename\", data.path).render(callback);\n  },\n);\n\n// Promise\nhexo.extend.renderer.register(\"styl\", \"css\", function (data, options) {\n  return new Promise(function (resolve, reject) {\n    resolve(\"test\");\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a JavaScript Script Tag Helper\nDESCRIPTION: Example of registering a helper named 'js' that generates HTML script tags. The helper takes a path parameter and returns the appropriate HTML markup.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/helper.md#2025-04-10_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.helper.register(\"js\", function (path) {\n  return '<script src=\"' + path + '\"></script>';\n});\n```\n\n----------------------------------------\n\nTITLE: Checking Renderable File Types in Hexo\nDESCRIPTION: Shows how to use the isRenderable method to check if a renderer is registered for a specific file type.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/rendering.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.isRenderable(\"layout.swig\"); // true\nhexo.render.isRenderable(\"image.png\"); // false\n```\n\n----------------------------------------\n\nTITLE: Unregistering a Named Function Filter in Hexo\nDESCRIPTION: Example showing how to unregister a filter that was registered with a named function. The same function reference must be used for both registration and unregistration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_5\n\nLANGUAGE: js\nCODE:\n```\n// Unregister a filter which is registered with named function\n\nconst filterFn = (data) => {\n  data = \"something\";\n  return data;\n};\nhexo.extend.filter.register(\"example\", filterFn);\n\nhexo.extend.filter.unregister(\"example\", filterFn);\n```\n\n----------------------------------------\n\nTITLE: Cleaning Hexo Cache\nDESCRIPTION: Command to clean Hexo's cache when encountering issues with data not being updated or generated files being identical to previous versions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo clean\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo Post Naming Convention\nDESCRIPTION: This YAML configuration sets the naming convention for new posts in Hexo, typically used when migrating from Jekyll or Octopress.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/migration.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nnew_post_name: :year-:month-:day-:title.md\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom IP Address\nDESCRIPTION: Command to start Hexo server with a custom IP address instead of the default 0.0.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/server.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -i 192.168.1.1\n```\n\n----------------------------------------\n\nTITLE: Disabling Nunjucks Tags in Hexo Markdown Renderer\nDESCRIPTION: Shows how to disable processing of Nunjucks tags in the Markdown renderer for Hexo, allowing use of {{ }} or {% %} without escaping.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/rendering.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderer = hexo.render.renderer.get(\"md\");\nif (renderer) {\n  renderer.disableNunjucks = true;\n  hexo.extend.renderer.register(\"md\", \"html\", renderer);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating JavaScript Script Tag Helper\nDESCRIPTION: Example of creating a helper that generates HTML script tags. The helper takes a path parameter and returns a formatted script tag string.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/helper.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.helper.register(\"js\", function (path) {\n  return '<script src=\"' + path + '\"></script>';\n});\n```\n\n----------------------------------------\n\nTITLE: Generating All Posts in Hexo\nDESCRIPTION: Demonstrates how to generate routes for all posts in a Hexo site. It iterates over locals.posts and creates a route for each post with its corresponding data and layout.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/generator.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"post\", function (locals) {\n  return locals.posts.map(function (post) {\n    return {\n      path: post.path,\n      data: post,\n      layout: \"post\",\n    };\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Loading Files with Box in JavaScript\nDESCRIPTION: Demonstrates how to use the 'process' and 'watch' methods of the Box container to load and monitor files in a folder.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/box.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nbox.process().then(function () {\n  // ...\n});\n\nbox.watch().then(function () {\n  // You can call box.unwatch() later to stop watching.\n});\n```\n\n----------------------------------------\n\nTITLE: Listing All Routes in Hexo Router\nDESCRIPTION: Demonstrates how to get a list of all routes currently registered in Hexo's router.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/router.md#2025-04-10_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.list();\n```\n\n----------------------------------------\n\nTITLE: Disabling Nunjucks Tags in Hexo Markdown Renderer\nDESCRIPTION: Illustrates how to disable Nunjucks tag processing in the Markdown renderer, allowing the use of {{ }} or {% %} without content escaping.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/rendering.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderer = hexo.render.renderer.get(\"md\");\nif (renderer) {\n  renderer.disableNunjucks = true;\n  hexo.extend.renderer.register(\"md\", \"html\", renderer);\n}\n```\n\n----------------------------------------\n\nTITLE: Running Hexo as a Static Server in WSL\nDESCRIPTION: Commands to generate files first and then run Hexo as a static server, which works around the lack of file watcher support in WSL.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_23\n\nLANGUAGE: sh\nCODE:\n```\n$ hexo generate\n$ hexo server -s\n```\n\n----------------------------------------\n\nTITLE: Managing Hexo Configuration\nDESCRIPTION: Lists or modifies the Hexo configuration (_config.yml). Can display or change specific configuration values.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo config [key] [value]\n```\n\n----------------------------------------\n\nTITLE: Passing Render Options in Hexo\nDESCRIPTION: Illustrates how to pass additional options to the render method as a second argument.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/rendering.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ text: \"\" }, { foo: \"foo\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing a before_generate Filter in Hexo\nDESCRIPTION: Example showing how to register a filter that runs before the site generation process begins. This allows for setup operations before content processing.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_10\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"before_generate\", function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing a Hexo Website\nDESCRIPTION: Initializes a new Hexo website in the specified folder or current directory. It clones the hexo-starter repository and installs dependencies using Yarn, pnpm, or npm.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo init [folder]\n```\n\n----------------------------------------\n\nTITLE: Path Matching Examples in Hexo Box Module\nDESCRIPTION: Illustrates path matching patterns used in the Box module. These patterns can be regular expressions, functions, or Express-style string templates for finding folders to process.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/box.md#2025-04-10_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\n----------------------------------------\n\nTITLE: Updating js-yaml Dependency using Yarn\nDESCRIPTION: This command updates the js-yaml dependency to the latest version using Yarn. It's an alternative solution for users who prefer Yarn over npm.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/troubleshooting.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn add js-yaml@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Joomla Migrator Plugin for Hexo\nDESCRIPTION: This command installs the hexo-migrator-joomla plugin, which is required for migrating Joomla content to Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/migration.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-migrator-joomla --save\n```\n\n----------------------------------------\n\nTITLE: Getting All Local Variables in Hexo.js\nDESCRIPTION: Shows how to retrieve all local variables as an object from the Hexo.js template system.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/locals.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.toObject();\n```\n\n----------------------------------------\n\nTITLE: Cleaning Hexo Cache and Generated Files\nDESCRIPTION: Cleans the Hexo cache file (db.json) and generated files (public folder).\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo clean\n```\n\n----------------------------------------\n\nTITLE: Implementing After_render Filters in Hexo\nDESCRIPTION: Demonstrates how to use after_render filters in Hexo, using a JavaScript minifier as an example.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/rendering.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar UglifyJS = require(\"uglify-js\");\n\nhexo.extend.filter.register(\"after_render:js\", function (str, data) {\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Local Variables in Hexo.js\nDESCRIPTION: Shows how to set a new local variable using a function that returns the desired value. This pattern is used for dynamic variable generation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/locals.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n----------------------------------------\n\nTITLE: HTML Output for Code Block without Wrapping\nDESCRIPTION: Example of HTML output for a code block when both line_number and wrap options are disabled in highlight.js configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"yaml\">\n<span class=\"comment\"># _config.yml</span>\n<span class=\"attr\">hexo:</span> <span class=\"string\">hexo</span>\n</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Using word_wrap Helper in Hexo Templates\nDESCRIPTION: String manipulation helper that wraps text at a specified length. Default length is 80 characters.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n<%- word_wrap(str, [length]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n----------------------------------------\n\nTITLE: Rendering a Theme View in Hexo\nDESCRIPTION: Demonstrates how to render a view (template) with data. This example gets a Swig template and renders it asynchronously with context data, returning a Promise with the result.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/themes.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar view = hexo.theme.getView(\"layout.swig\");\n\nview.render({ foo: 1, bar: 2 }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Determining Output Extension in Hexo\nDESCRIPTION: Demonstrates the use of the getOutput method to determine the output extension for a given file type.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/rendering.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.getOutput(\"layout.swig\"); // html\nhexo.render.getOutput(\"image.png\"); // '''\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Local Variable in Hexo.js\nDESCRIPTION: This snippet demonstrates how to get a local variable in Hexo.js. It uses the 'get' method of the 'locals' object to retrieve the 'posts' variable.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/locals.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.get(\"posts\");\n```\n\n----------------------------------------\n\nTITLE: HTML Output of Simple Custom Paginator\nDESCRIPTION: The rendered HTML output of the paginator with simple navigation symbols, showing links to different pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_30\n\nLANGUAGE: html\nCODE:\n```\n<!-- Rendered as -->\n<a href=\"/1/\">&lt;</a>\n<a href=\"/1/\">1</a>\n2\n<a href=\"/3/\">3</a>\n<a href=\"/3/\">&gt;</a>\n```\n\n----------------------------------------\n\nTITLE: Referencing Images with Tag Plugins in Hexo\nDESCRIPTION: Examples of how to use the asset_img tag plugin to reference images in Hexo posts. This method ensures images appear correctly in both individual posts and index pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/asset-folders.md#2025-04-10_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\n\n----------------------------------------\n\nTITLE: Invalidating the Cache for Local Variables in Hexo.js\nDESCRIPTION: This snippet shows how to invalidate the cache for local variables in Hexo.js. It uses the 'invalidate' method of the 'locals' object to clear the cache and force a refresh of the variables.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/locals.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.invalidate();\n```\n\n----------------------------------------\n\nTITLE: Formatting Routes in Hexo Router\nDESCRIPTION: Demonstrates using the `format` method to convert a string into a valid route path. This ensures paths follow Hexo's routing conventions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/router.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.format(\"archives/\");\n// archives/index.html\n```\n\n----------------------------------------\n\nTITLE: Basic Index Template Example in Hexo.js\nDESCRIPTION: Simple example of a basic index template file for Hexo.js.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/templates.md#2025-04-10_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nindex\n```\n\n----------------------------------------\n\nTITLE: Getting Hexo Scaffold Content\nDESCRIPTION: Retrieves the content of a named scaffold template using the Hexo scaffold API. The name parameter specifies which scaffold to retrieve.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/scaffolds.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.scaffold.get(name);\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Local Variables in Hexo.js\nDESCRIPTION: This code demonstrates how to get all local variables in Hexo.js. It uses the 'toObject' method of the 'locals' object to return an object containing all local variables.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/locals.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.toObject();\n```\n\n----------------------------------------\n\nTITLE: Migrating Joomla Content to Hexo\nDESCRIPTION: This command migrates Joomla content to Hexo. The <source> parameter is the file path or URL to the Joomla export file generated by the J2XML component.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/migration.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo migrate joomla <source>\n```\n\n----------------------------------------\n\nTITLE: Loading JavaScript Files with js Helper in Hexo (JavaScript)\nDESCRIPTION: The js helper loads JavaScript files and generates the appropriate HTML tags. It supports various input formats and custom attributes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n<%- js('script.js') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- js(['script.js', 'gallery.js']) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- js({ src: 'script.js', integrity: 'foo', async: true }) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- js([{ src: 'script.js', integrity: 'foo' }, { src: 'gallery.js', integrity: 'bar' }]) %>\n```\n\n----------------------------------------\n\nTITLE: Embedding Image with Custom Class using asset_img Tag in Hexo\nDESCRIPTION: Shows how to embed an image with a custom CSS class using the asset_img tag plugin in Hexo. The first parameter specifies the class name to add to the image.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" class=\"post-image\" />\n```\n\n----------------------------------------\n\nTITLE: Creating a YouTube Embed Tag Plugin\nDESCRIPTION: Demonstrates a tag plugin for inserting YouTube videos. It creates an iframe with the video ID provided as an argument.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/tag.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\"youtube\", function (args) {\n  var id = args[0];\n  return (\n    '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' +\n    id +\n    '\" frameborder=\"0\" allowfullscreen></iframe></div>'\n  );\n});\n```\n\n----------------------------------------\n\nTITLE: Formatting Dates in Hexo (JavaScript)\nDESCRIPTION: Shows various date formatting helper functions in Hexo, including date, date_xml, time, full_date, relative_date, and time_tag. These functions handle different date formats and allow customization of output.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/helpers.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date_xml(date) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- full_date(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- relative_date(date) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- relative_date(new Date()) %>\n// a few seconds ago\n\n<%- relative_date(new Date(1000000000000)) %>\n// 22 years ago\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time_tag(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time_tag(new Date()) %>\n// <time datetime=\"2024-01-22T06:35:31.108Z\">2024-01-22</time>\n\n<%- time_tag(new Date(), 'MMM-D-YYYY') %>\n// <time datetime=\"2024-01-22T06:35:31.108Z\">Jan-22-2024</time>\n```\n\n----------------------------------------\n\nTITLE: Header Partial Template in Hexo.js\nDESCRIPTION: Example of a partial template for a header component using site configuration variables.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/templates.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n----------------------------------------\n\nTITLE: Setting Hexo Scaffold Content\nDESCRIPTION: Creates or updates a scaffold template with the specified name and content. Takes two parameters: the scaffold name and the content to set.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/scaffolds.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.scaffold.set(name, content);\n```\n\n----------------------------------------\n\nTITLE: Formatting Paths in Hexo Router\nDESCRIPTION: Shows how to format a path string to ensure it's valid for use in the router system.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/router.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.format(\"archives/\");\n// archives/index.html\n```\n\n----------------------------------------\n\nTITLE: Registering Helper Function in Hexo.js\nDESCRIPTION: Basic syntax for registering a new helper function in Hexo.js. The helper registration requires a name and a function implementation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/helper.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.helper.register(name, function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Bip for Hexo Deployment\nDESCRIPTION: Command to initialize a Bip project directory for Hexo deployment. This starts the interactive setup process where you select which domain to deploy to.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ bip init\n```\n\n----------------------------------------\n\nTITLE: Pull Quote Tag with End Tags\nDESCRIPTION: Implementation of a pull quote tag that uses end tags to wrap content in a blockquote element with optional classes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/tag.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\n  \"pullquote\",\n  function (args, content) {\n    var className = args.join(\" \");\n    return (\n      '<blockquote class=\"pullquote' +\n      className +\n      '\">' +\n      content +\n      \"</blockquote>\"\n    );\n  },\n  { ends: true },\n);\n```\n\n----------------------------------------\n\nTITLE: Modular Tag Plugin Structure\nDESCRIPTION: Demonstrates a modular approach to creating tag plugins by separating the main registration and the plugin function into different files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/tag.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\"foo\", require(\"./lib/foo\")(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = hexo => {\n  return function fooFn(args) {\n    const [firstArg] = args;\n\n    const { config } = hexo;\n    const editor = config.author + firstArg;\n\n    const { config: themeCfg } = hexo.theme;\n    if (themeCfg.fancybox) // do something...\n\n    const { title, _content, content } = this;\n\n    return 'foo';\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Using Asset Image Tag Plugin with Examples\nDESCRIPTION: Examples showing how to use the asset_img tag plugin to reference images, including handling spaces in filenames and titles.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/asset-folders.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\n\n----------------------------------------\n\nTITLE: Using Asset Image Tag Plugin with Examples\nDESCRIPTION: Examples showing how to use the asset_img tag plugin to reference images, including handling spaces in filenames and titles.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/asset-folders.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\n\n----------------------------------------\n\nTITLE: Index Template with Local Variable Passing\nDESCRIPTION: Shows how to pass local variables to a partial template when including it.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/templates.md#2025-04-10_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\n----------------------------------------\n\nTITLE: Getting Output Extension for Rendered Files in Hexo\nDESCRIPTION: Demonstrates how to use the getOutput method to retrieve the extension of the rendered output for a given file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/rendering.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.getOutput(\"layout.swig\"); // html\nhexo.render.getOutput(\"image.png\"); // '''\n```\n\n----------------------------------------\n\nTITLE: Registering a Hexo Generator\nDESCRIPTION: Demonstrates how to register a custom generator in Hexo. The generator function receives a 'locals' argument containing site variables, allowing access to website data without directly querying the database.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/generator.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(name, function (locals) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Migrating Content to Hexo\nDESCRIPTION: Migrates content from other blog systems to Hexo. The type of migration must be specified.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo migrate <type>\n```\n\n----------------------------------------\n\nTITLE: Registering Hexo Processor in JavaScript\nDESCRIPTION: Shows how to register a new processor in Hexo using the extend.processor.register method. The processor takes a rule and a handler function that processes files matching that rule.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/processor.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.processor.register(rule, function (file) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Deploying Hexo Website to Bip\nDESCRIPTION: Command to generate Hexo static files and deploy them to Bip. This combines the Hexo generation command with Bip's deployment command.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate —deploy && bip deploy\n```\n\n----------------------------------------\n\nTITLE: Creating a Pull Quote Tag Plugin with End Tags\nDESCRIPTION: Shows how to create a tag plugin with end tags for pull quotes. It uses the 'ends' option and wraps content in a blockquote with custom classes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/tag.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\n  \"pullquote\",\n  function (args, content) {\n    var className = args.join(\" \");\n    return (\n      '<blockquote class=\"pullquote' +\n      className +\n      '\">' +\n      content +\n      \"</blockquote>\"\n    );\n  },\n  { ends: true }\n);\n```\n\n----------------------------------------\n\nTITLE: Creating a YouTube Video Embed Tag Plugin in Hexo\nDESCRIPTION: Implements a tag plugin for embedding YouTube videos. It takes the video ID as an argument and returns an iframe embed code.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/tag.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\"youtube\", function (args) {\n  var id = args[0];\n  return (\n    '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' +\n    id +\n    '\" frameborder=\"0\" allowfullscreen></iframe></div>'\n  );\n});\n```\n\n----------------------------------------\n\nTITLE: Caching Fragment Content in JavaScript\nDESCRIPTION: The fragment_cache function caches the contents in a fragment. It saves the contents and serves the cache on subsequent requests.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n<%- fragment_cache(id, fn);\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n----------------------------------------\n\nTITLE: Using favicon_tag Helper in Hexo\nDESCRIPTION: The favicon_tag helper inserts a favicon link tag for the specified path.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_9\n\nLANGUAGE: js\nCODE:\n```\n<%- favicon_tag(path) %>\n```\n\n----------------------------------------\n\nTITLE: Accessing User Configuration - Factory Pattern\nDESCRIPTION: Example showing how to access user configuration using a factory pattern approach.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/injector.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\")(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = (hexo) => () => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst injectFn = (hexo) => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n\nmodule.exports = (hexo) => injectFn(hexo);\n```\n\n----------------------------------------\n\nTITLE: Rendering a View with Data in Hexo\nDESCRIPTION: Demonstrates how to get a view and render it with context data. The rendering process returns a Promise that resolves with the rendered content and supports layout processing.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/themes.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar view = hexo.theme.getView(\"layout.swig\");\n\nview.render({ foo: 1, bar: 2 }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Registering Hexo Processor Handler\nDESCRIPTION: Shows the basic syntax for registering a custom processor in Hexo. The processor takes a rule pattern and a handler function that processes matching source files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/processor.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.processor.register(rule, function (file) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo server with a custom IP address\nDESCRIPTION: Command to bind the Hexo server to a specific IP address using the -i flag. By default, Hexo runs the server at 0.0.0.0, but this can be overridden with a custom IP.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/server.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -i 192.168.1.1\n```\n\n----------------------------------------\n\nTITLE: Accessing Hexo Configuration in Tag Plugins\nDESCRIPTION: Shows how to access user configuration, theme configuration, and front-matter data within a tag plugin function.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/tag.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register('foo', function (args) {\n  const [firstArg] = args;\n\n  // User config\n  const { config } = hexo;\n  const editor = config.author + firstArg;\n\n  // Theme config\n  const { config: themeCfg } = hexo.theme;\n  if (themeCfg.fancybox) // do something...\n\n  // Front-matter\n  const { title } = this; // article's (post/page) title\n\n  // Article's content\n  const { _content } = this; // original content\n  const { content } = this; // HTML-rendered content\n\n  return 'foo';\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Server Middleware in Hexo 2.7 JavaScript\nDESCRIPTION: Shows how to register a server middleware as a filter in Hexo. This example adds an X-Powered-By header to the response before passing the request to the next middleware.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-06-14-hexo-2-7-released.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Setting File Limits in /etc/security/limits.conf\nDESCRIPTION: Configuration line to add to the system limits.conf file to increase the maximum number of open files for all users.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_5\n\nLANGUAGE: plain\nCODE:\n```\n* - nofile 10000\n\n# '*' applies to all users and '-' set both soft and hard limits\n```\n\n----------------------------------------\n\nTITLE: Creating Language Files in YAML\nDESCRIPTION: Shows an example of a language file (en.yml) with nested keys and plural forms. This file would be placed in the languages directory of the theme.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/internationalization.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n----------------------------------------\n\nTITLE: Rendering String with Specified Engine in Hexo\nDESCRIPTION: Demonstrates how to render a string using a specified engine (swig in this case) with Hexo's asynchronous render method.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/rendering.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ text: \"example\", engine: \"swig\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Listing Routes in Hexo Router\nDESCRIPTION: Demonstrates how to get a list of all routes in the router.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/router.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.list();\n```\n\n----------------------------------------\n\nTITLE: Listing Hexo Routes\nDESCRIPTION: Lists all routes in the Hexo website. The type of routes to list must be specified.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo list <type>\n```\n\n----------------------------------------\n\nTITLE: HTML Output with Line Numbers in Highlight.js\nDESCRIPTION: Example of HTML markup generated by Hexo when using highlight.js with line numbers enabled, showing the table-based structure for displaying line numbers alongside code.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"highlight yaml\">\n  <table>\n    <tbody>\n      <tr>\n        <td class=\"gutter\">\n          <pre><span class=\"line\">1</span><br></pre>\n        </td>\n        <td class=\"code\">\n          <pre><span class=\"line\"><span class=\"attr\">hello:</span><span class=\"string\">hexo</span></span><br></pre>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Underscore.js Compact Method Example\nDESCRIPTION: Example showing Underscore.js compact method usage\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/tag-plugins.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n```\n\n----------------------------------------\n\nTITLE: Draft Publishing API Usage\nDESCRIPTION: JavaScript API example for programmatically publishing drafts with specified slug and layout.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-07-13-hexo-2-8-released.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.publish({slug: 'hello-world', layout: 'post'}, function(err, target){\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Modular Tag Implementation\nDESCRIPTION: Example of a modular approach to tag implementation using separate files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/tag.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\"foo\", require(\"./lib/foo\")(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = hexo => {\n  return function fooFn(args) {\n    const [firstArg] = args;\n\n    const { config } = hexo;\n    const editor = config.author + firstArg;\n\n    const { config: themeCfg } = hexo.theme;\n    if (themeCfg.fancybox) // do something...\n\n    const { title, _content, content } = this;\n\n    return 'foo';\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Using list_archives Helper in Hexo Templates\nDESCRIPTION: The list_archives helper function inserts a list of archives in a Hexo template. It accepts various options to customize the display format, including type (yearly/monthly), sorting order, count display, date format, and styling.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_archives([options]) %>\n```\n\n----------------------------------------\n\nTITLE: Verificando se um Arquivo é Renderizável no Hexo usando JavaScript\nDESCRIPTION: Este snippet demonstra o uso do método isRenderable para verificar se um arquivo pode ser renderizado pelo Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/rendering.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.isRenderable(\"layout.swig\"); // true\nhexo.render.isRenderable(\"image.png\"); // false\n```\n\n----------------------------------------\n\nTITLE: Using Separate Files for Hexo Injector Logic\nDESCRIPTION: Shows how to organize injector logic in separate files. This approach allows for better code organization and reusability. The example demonstrates how to bind the Hexo context to the injector function.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/injector.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\").bind(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function () {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nfunction injectFn() {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n}\n\nmodule.exports = injectFn;\n```\n\n----------------------------------------\n\nTITLE: Implementing an after_generate Filter in Hexo\nDESCRIPTION: Example showing how to register a filter that runs after the site generation process completes. This allows for cleanup or post-processing operations.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_11\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"after_generate\", function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Skip Render in Hexo YAML\nDESCRIPTION: This YAML snippet shows how to use the 'skip_render' option in Hexo to exclude certain files or directories from being processed. It includes examples for skipping an entire directory and a specific post file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/configuration.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nskip_render: \"mypage/**/*\"\n# will output `source/mypage/index.html` and `source/mypage/code.js` without altering them.\n\n## This also can be used to exclude posts,\nskip_render: \"_posts/test-post.md\"\n# will ignore the `source/_posts/test-post.md`.\n```\n\n----------------------------------------\n\nTITLE: Plugin Installation Error\nDESCRIPTION: Error message that appears when installing plugins written in non-JavaScript languages without the proper compiler.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_12\n\nLANGUAGE: plain\nCODE:\n```\nnpm ERR! node-waf configure build\n```\n\n----------------------------------------\n\nTITLE: Configuring Skip Render in Hexo YAML\nDESCRIPTION: This YAML snippet shows how to use the 'skip_render' option in Hexo to exclude certain files or directories from being processed. It includes examples for skipping an entire directory and a specific post file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/configuration.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nskip_render: \"mypage/**/*\"\n# will output `source/mypage/index.html` and `source/mypage/code.js` without altering them.\n\n## This also can be used to exclude posts,\nskip_render: \"_posts/test-post.md\"\n# will ignore the `source/_posts/test-post.md`.\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-language Posts\nDESCRIPTION: Command line examples for creating posts in different languages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-07-13-hexo-2-8-released.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new \"Hello World\" --lang en\n# => This post will be saved to source/_posts/en/Hello-World.md\n# => URL: http://localhost:4000/en/Hello-World/\n\n$ hexo new \"你好世界\" --lang tw\n# => This post will be saved to source/_posts/tw/你好世界.md\n# => URL: http://localhost:4000/tw/你好世界/\n```\n\n----------------------------------------\n\nTITLE: KaTeX Math Syntax in hexo-math 4.0\nDESCRIPTION: Example of the new syntax for KaTeX mathematical expressions in hexo-math 4.0. This shows how to use the tag plugin syntax to render mathematical formulas using KaTeX.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{% katex %}\nc = \\pm\\sqrt{a^2 + b^2}\n{% endkatex %}\n```\n\n----------------------------------------\n\nTITLE: Inserting Post Lists with list_posts Helper in Hexo\nDESCRIPTION: The list_posts helper inserts a list of posts. It accepts options for sorting, order, display style, and the number of posts to display.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_posts([options]) %>\n```\n\n----------------------------------------\n\nTITLE: Desabilitando Tags Nunjucks para Arquivos Markdown no Hexo usando JavaScript\nDESCRIPTION: Este snippet demonstra como desabilitar o processamento de tags Nunjucks para arquivos Markdown, permitindo o uso de {{ }} e {% %} sem escape.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/rendering.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderer = hexo.render.renderer.get(\"md\");\nif (renderer) {\n  renderer.disableNunjucks = true;\n  hexo.extend.renderer.register(\"md\", \"html\", renderer);\n}\n```\n\n----------------------------------------\n\nTITLE: Handling New Post Event in Hexo\nDESCRIPTION: Example showing how to listen for the 'new' event that is emitted when a new post is created in Hexo. The event handler receives a post object containing the post's file path and content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/events.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.on(\"new\", function (post) {\n  //\n});\n```\n\n----------------------------------------\n\nTITLE: Multiple Category Hierarchies in YAML\nDESCRIPTION: Demonstrates how to define multiple independent category hierarchies using nested arrays in YAML front-matter.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/front-matter.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncategories:\n  - [Sports, Baseball]\n  - [MLB, American League, Boston Red Sox]\n  - [MLB, American League, New York Yankees]\n  - Rivalries\n```\n\n----------------------------------------\n\nTITLE: Processing Files with Box Module in JavaScript\nDESCRIPTION: Demonstrates how to use the 'process' and 'watch' methods of the Box module to handle files. The 'process' method processes all files in a folder, while 'watch' processes files when they change.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/box.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nbox.process().then(function () {\n  // ...\n});\n\nbox.watch().then(function () {\n  // Можно вызвать команду box.unwatch() после, чтобы остановить отслеживание файлов.\n});\n```\n\n----------------------------------------\n\nTITLE: Updating js-yaml Dependency with npm\nDESCRIPTION: Command to manually update the js-yaml dependency to resolve YAML-related errors after Hexo upgrade.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_28\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install js-yaml@latest\n```\n\n----------------------------------------\n\nTITLE: Defining Theme Configuration in YAML\nDESCRIPTION: This snippet shows how to define theme configuration options in a YAML file named '_config.yml' within a theme directory. It includes basic settings like bio and logo, as well as nested configuration options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/configuration.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbio: \"Some generic bio\"\nlogo: \"a-cool-image.png\"\n  foo:\n    baz: 'b'\n```\n\n----------------------------------------\n\nTITLE: Default Language Configuration\nDESCRIPTION: YAML configuration for setting the default language in permalink defaults.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-07-13-hexo-2-8-released.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npermalink_defaults:\n  lang: en\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for Code Block Captions in Hexo\nDESCRIPTION: CSS style examples for customizing code block captions in Hexo. This CSS can be used to style the caption element that appears above code blocks when using the caption feature.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_3\n\nLANGUAGE: css\nCODE:\n```\npre div.caption {\n  font-size: 0.9em;\n  color: #888;\n}\n\npre div.caption a {\n  float: right;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Tag Clouds with tagcloud Helper in Hexo\nDESCRIPTION: The tagcloud helper generates a tag cloud. It accepts options to control font size, color, ordering, and various display properties of the tag cloud.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n<%- tagcloud([tags], [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Disabling Nunjucks Tags in Hexo Renderer (JavaScript)\nDESCRIPTION: This snippet demonstrates how to disable Nunjucks tag processing in a custom renderer. It sets a 'disableNunjucks' property on the renderer function to true.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/renderer.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nfunction lessFn(data, options) {\n  // do something\n}\n\nlessFn.disableNunjucks = true;\n\nhexo.extend.renderer.register(\"less\", \"css\", lessFn);\n```\n\n----------------------------------------\n\nTITLE: Invalidating Local Variables Cache in Hexo.js\nDESCRIPTION: Demonstrates how to invalidate the cache for local variables in Hexo.js, forcing a refresh of all template variables.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/locals.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.invalidate();\n```\n\n----------------------------------------\n\nTITLE: Publishing a Draft in Hexo with JavaScript\nDESCRIPTION: This function publishes a draft post in Hexo with the specified data. The data parameter must include the slug (filename) and can optionally specify the layout. The replace parameter determines whether existing files should be overwritten.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/posts.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.publish(data, replace);\n```\n\n----------------------------------------\n\nTITLE: Adding Required PAM Module for Limits\nDESCRIPTION: Line that must be present in PAM configuration files to ensure the limits.conf settings are applied during login.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_6\n\nLANGUAGE: plain\nCODE:\n```\nsession required pam_limits.so\n```\n\n----------------------------------------\n\nTITLE: Using YAML Format in Hexo Front-matter\nDESCRIPTION: Example of how to write Front-matter in YAML format, which should be placed at the beginning of the file and enclosed with three dashes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/front-matter.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Pretty URLs in Hexo Config\nDESCRIPTION: YAML configuration to remove the trailing index.html from URLs. This configuration enhances URL readability by eliminating the index.html suffix from permalink variables.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-10-14-hexo-4-released.md#2025-04-10_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\npretty_urls:\n  trailing_index: false\n```\n\n----------------------------------------\n\nTITLE: Updating js-yaml Dependency for Hexo 6.1.0+\nDESCRIPTION: Demonstrates how to update the js-yaml dependency to resolve YAMLException errors in newer Hexo versions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install js-yaml@latest\n\n$ yarn add js-yaml@latest\n```\n\n----------------------------------------\n\nTITLE: Time Tag Helper Examples in Hexo\nDESCRIPTION: Examples of using the time_tag helper with different formats in Hexo templates. The first example uses the default format while the second specifies a custom date format.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time_tag(new Date()) %>\n// <time datetime=\"2024-01-22T06:35:31.108Z\">2024-01-22</time>\n\n<%- time_tag(new Date(), 'MMM-D-YYYY') %>\n// <time datetime=\"2024-01-22T06:35:31.108Z\">Jan-22-2024</time>\n```\n\n----------------------------------------\n\nTITLE: Implementing Sync EJS Renderer\nDESCRIPTION: Example of implementing a synchronous renderer for EJS templates. Shows how to register an EJS to HTML renderer with proper file path handling.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/renderer.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar ejs = require(\"ejs\");\n\nhexo.extend.renderer.register(\n  \"ejs\",\n  \"html\",\n  function (data, options) {\n    options.filename = data.path;\n    return ejs.render(data.text, options);\n  },\n  true,\n);\n```\n\n----------------------------------------\n\nTITLE: Removing a View in Hexo\nDESCRIPTION: Removes a view template from the Hexo theme system at the specified path.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/themes.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.theme.removeView(path);\n```\n\n----------------------------------------\n\nTITLE: URL Configuration in Hexo\nDESCRIPTION: Configuration example for URL handling in Hexo's _config.yml file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/tag-plugins.md#2025-04-10_snippet_6\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nroot: /blog/ # example\n```\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nrelative_link: true\n```\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nurl: https://example.com/blog # example\n```\n\n----------------------------------------\n\nTITLE: Executing Hexo Filters\nDESCRIPTION: Demonstrates how to execute registered filters with both asynchronous and synchronous methods. Shows the API for passing data and additional arguments to filters.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\n----------------------------------------\n\nTITLE: Configuring Categories in Hexo Front-matter\nDESCRIPTION: Example of how to define categories in hierarchical order, where the order matters and creates parent-child relationships.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/front-matter.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncategories:\n  - Sports\n  - Baseball\ntags:\n  - Injury\n  - Fight\n  - Shocking\n```\n\n----------------------------------------\n\nTITLE: Disabling Meta Generator in Hexo Config\nDESCRIPTION: Configuration to disable automatic meta generator tag insertion for improved performance.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-09-hexo-4-1-released.md#2025-04-10_snippet_2\n\nLANGUAGE: yml\nCODE:\n```\nmeta_generator: false\n```\n\n----------------------------------------\n\nTITLE: Hexo Deployment Configuration\nDESCRIPTION: Configuration settings for Hexo's _config.yml file to enable Git-based deployment to GitHub Pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/github-pages.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: git\n  repo: https://github.com/<username>/<project>\n  # example, https://github.com/hexojs/hexojs.github.io\n  branch: gh-pages\n```\n\n----------------------------------------\n\nTITLE: List Categories Helper Examples in Hexo\nDESCRIPTION: Examples of using the list_categories helper with custom class names and transform functions to modify the display of category names, such as title casing or converting to uppercase.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_categories(post.categories, {\n  class: 'post-category',\n  transform(str) {\n    return titlecase(str);\n  }\n}) %>\n\n<%- list_categories(post.categories, {\n  class: 'post-category',\n  transform(str) {\n    return str.toUpperCase();\n  }\n}) %>\n```\n\n----------------------------------------\n\nTITLE: Basic Injector API Syntax in Hexo\nDESCRIPTION: The basic syntax for registering code injections in Hexo HTML files. Takes parameters for where to inject (entry), what to inject (value), and which pages to target (to).\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/injector.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.injector.register(entry, value, to);\n```\n\n----------------------------------------\n\nTITLE: Using Other Helpers Within a Custom Helper\nDESCRIPTION: Example of how to access and use another registered helper within your custom helper. This shows how to use the url_for helper inside a custom script tag generator.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/helper.md#2025-04-10_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.helper.register(\"lorem\", function (path) {\n  return '<script src=\"' + this.url_for(path) + '\"></script>';\n});\n```\n\n----------------------------------------\n\nTITLE: Layout Template Structure in Hexo.js\nDESCRIPTION: Example of a basic layout template that includes the body variable for content injection.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/templates.md#2025-04-10_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <body>\n    <%- body %>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing a post_permalink Filter in Hexo\nDESCRIPTION: Example framework for creating a filter that determines permalinks for posts. This allows customizing the URL structure for posts.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_15\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"post_permalink\", function (data) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Multiple Category Hierarchies Example\nDESCRIPTION: Demonstrates how to define multiple independent category hierarchies using nested arrays in YAML front-matter.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/front-matter.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncategories:\n  - [Sports, Baseball]\n  - [MLB, American League, Boston Red Sox]\n  - [MLB, American League, New York Yankees]\n  - Rivalries\n```\n\n----------------------------------------\n\nTITLE: Using Custom Attributes in Hexo JS and CSS Helpers\nDESCRIPTION: Examples of using the js() and css() helpers with custom attributes like integrity and async.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-09-hexo-4-1-released.md#2025-04-10_snippet_3\n\nLANGUAGE: js\nCODE:\n```\n<%- js({ src: 'script.js', integrity: 'foo', async: true }) %>\n// <script src=\"/script.js\" integrity=\"foo\" async></script>\n\n<%- css({ href: 'style.css', integrity: 'foo' }) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" integrity=\"foo\">\n```\n\n----------------------------------------\n\nTITLE: JavaScript Alert Example\nDESCRIPTION: Simple JavaScript code block showing an alert\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/tag-plugins.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nalert('Hello World!');\n```\n\n----------------------------------------\n\nTITLE: Using is_page Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the current page is a regular page (not a post or index).\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n<%- strip_html('It\\'s not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n----------------------------------------\n\nTITLE: Advanced Hexo Injector Pattern with Closure\nDESCRIPTION: Demonstrates an advanced pattern for creating Hexo injectors using closures. This approach allows for better encapsulation and provides a way to pass the Hexo context to the injector function.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/injector.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\")(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = (hexo) => () => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst injectFn = (hexo) => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n\nmodule.exports = (hexo) => injectFn(hexo);\n```\n\n----------------------------------------\n\nTITLE: Defining Title Template in YAML Front Matter\nDESCRIPTION: This YAML front matter defines a template for the page title using Hexo's templating system. The {{ title }} placeholder will be replaced with the actual title value when the page is generated.\nSOURCE: https://github.com/hexojs/site/blob/master/scaffolds/post.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: {{ title }}\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring External Links in Hexo 5.0.0\nDESCRIPTION: Demonstrates the new configuration format for external links and date options in Hexo 5.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-07-29-hexo-5-released.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n``` yml _config.yml\n# Deprecated\nexternal_link: true|false\n\n# New option\nexternal_link:\n  enable: true|false\n\n# Deprecated\nuse_date_for_updated: true\n\n# New option\n# https://hexo.io/docs/configuration#Date-Time-format\nupdated_option: date\n```\n```\n\n----------------------------------------\n\nTITLE: Accessing Helper in Extensions\nDESCRIPTION: Example showing how to access and use a helper function within other Hexo extensions like filters or injectors. Demonstrates proper context binding.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/helper.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst url_for = hexo.extend.helper.get(\"url_for\").bind(hexo);\n```\n\n----------------------------------------\n\nTITLE: Pushing main branch to GitHub\nDESCRIPTION: Command to push the main branch of a Hexo project to GitHub repository. This is part of the initial setup process for GitHub Pages deployment.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/github-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Configuring Pretty URLs in Hexo YAML\nDESCRIPTION: YAML configuration to remove the trailing '.html' from permalinks in Hexo. This setting is part of the 'pretty_urls' option in the _config.yml file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-12-hexo-4-1-1_hexo-util-1-7_eslint-config-hexo-4.md#2025-04-10_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n_config.yml\npretty_urls:\n  trailing_html: false\n```\n\n----------------------------------------\n\nTITLE: Valid Excerpt Tag Variants in Hexo\nDESCRIPTION: Shows the valid variations of the excerpt tag in Hexo after a stricter regex implementation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-07-29-hexo-5-released.md#2025-04-10_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<!--more-->\n<!-- more-->\n<!--more -->\n<!-- more -->\n```\n\n----------------------------------------\n\nTITLE: Basic Injector API Usage in Hexo\nDESCRIPTION: Basic syntax for registering an injector in Hexo. Shows the main method signature used to inject code into HTML files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/injector.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.injector.register(entry, value, to);\n```\n\n----------------------------------------\n\nTITLE: Creating a Helper that Uses Another Helper\nDESCRIPTION: Example showing how to use another registered helper within a custom helper. In this case, it's using 'url_for' helper inside a custom 'lorem' helper.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/helper.md#2025-04-10_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.helper.register(\"lorem\", function (path) {\n  return '<script src=\"' + this.url_for(path) + '\"></script>';\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring i18n Directory in Hexo YAML\nDESCRIPTION: Shows how to set the i18n_dir configuration in _config.yml to enable automatic language detection based on URL paths.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/internationalization.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ni18n_dir: :lang\n```\n\n----------------------------------------\n\nTITLE: Configuring external_link Options in hexo-renderer-marked\nDESCRIPTION: Configuration for managing external links behavior including enabling/disabling, excluding domains, and setting nofollow attributes for SEO purposes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-06-27-hexo-marked-3_migrator-wordpress-2_migrator-rss-1.md#2025-04-10_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\nexternal_link:\n  enable: false\n  exclude: []\n  nofollow: false\n```\n\n----------------------------------------\n\nTITLE: External Injector Module - Implementation 1\nDESCRIPTION: Implementation of external module for injector with module.exports. Accesses configuration and helpers through the bound 'this' context.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/injector.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function () {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\n----------------------------------------\n\nTITLE: Creating a YAML Data File for Navigation Menu in Hexo\nDESCRIPTION: This snippet shows how to create a YAML file named menu.yml in the source/_data directory to define navigation menu items and their corresponding URLs.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/data-files.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\n----------------------------------------\n\nTITLE: Enabling markdown-it-cjk-breaks Plugin in YAML Configuration\nDESCRIPTION: This snippet demonstrates how to specifically enable the markdown-it-cjk-breaks plugin, which is now included in hexo-renderer-markdown-it 4.0.0. This plugin handles line breaks in CJK (Chinese, Japanese, Korean) text.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-15-hexo-renderer-markdown-it-4.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown:\n  plugins:\n    - markdown-it-cjk-breaks\n```\n\n----------------------------------------\n\nTITLE: Inserting Tag Lists with list_tags Helper in Hexo\nDESCRIPTION: The list_tags helper inserts a list of tags. It accepts options for sorting, order, display style, and other formatting features similar to list_categories.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_tags([options]) %>\n```\n\n----------------------------------------\n\nTITLE: Accessing User Configuration - Dependency Injection Pattern\nDESCRIPTION: Method 3 for accessing user configuration using dependency injection. Passes the hexo object to the external module rather than binding.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/injector.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\")(hexo));\n```\n\n----------------------------------------\n\nTITLE: Using the JavaScript Helper in Templates\nDESCRIPTION: Example of how to use the 'js' helper in a template. Shows the template syntax and the resulting HTML output.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/helper.md#2025-04-10_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n<%- js('script.js') %>\n// <script src=\"script.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Node Modules Reinstallation Commands\nDESCRIPTION: Commands to remove node_modules directory and reinstall dependencies after updating package.json\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-04-30-hexo-util-2_hexo-fs-3.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n```\n$ rm -rf node_modules/\n$ npm install\n```\n```\n\n----------------------------------------\n\nTITLE: Generating URLs with url_for Helper in Hexo (JavaScript)\nDESCRIPTION: The url_for helper generates URLs with the root path prefixed. It can handle relative and absolute links based on configuration options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<%- url_for('/a/path') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- url_for('/css/style.css', {relative: false}) %>\n```\n\n----------------------------------------\n\nTITLE: External Injector Module with Dependency Injection - Named Function\nDESCRIPTION: Alternative implementation using named function and dependency injection. Shows how to separate the injector function from the exported module function.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/injector.md#2025-04-10_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst injectFn = (hexo) => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n\nmodule.exports = (hexo) => injectFn(hexo);\n```\n\n----------------------------------------\n\nTITLE: Rendering Feature List Layout in HTML\nDESCRIPTION: HTML structure for displaying Hexo's main features in a grid layout with icons and descriptions. Uses FontAwesome icons to illustrate each feature and includes sections for speed, Markdown support, deployment, and plugin system.\nSOURCE: https://github.com/hexojs/site/blob/master/source/index.md#2025-04-10_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<ul id=\"intro-feature-list\">\n  <li class=\"intro-feature-wrap\">\n    <div class=\"intro-feature\">\n      <div class=\"intro-feature-icon\">\n        <i class=\"fa fa-bolt\"></i>\n      </div>\n      <h3 class=\"intro-feature-title\">Blazing Fast</h3>\n      <p class=\"intro-feature-desc\">Incredible generating speed powered by Node.js. Hundreds of files take only seconds to build.</p>\n    </div>\n  </li>\n  <li class=\"intro-feature-wrap\">\n    <div class=\"intro-feature\">\n      <div class=\"intro-feature-icon\">\n        <i class=\"fa fa-pencil\"></i>\n      </div>\n      <h3 class=\"intro-feature-title\">Markdown Support</h3>\n      <p class=\"intro-feature-desc\">All features of GitHub Flavored Markdown are supported, including most Octopress plugins.</p>\n    </div></li><li class=\"intro-feature-wrap\">\n    <div class=\"intro-feature\">\n      <div class=\"intro-feature-icon\">\n        <i class=\"fa fa-cloud-upload\"></i>\n      </div>\n      <h3 class=\"intro-feature-title\">One-Command Deployment</h3>\n        <p class=\"intro-feature-desc\">You only need one command to deploy your site to GitHub Pages, Heroku or other platforms.</p>\n      </div></li><li class=\"intro-feature-wrap\">\n    <div class=\"intro-feature\">\n      <div class=\"intro-feature-icon\">\n        <i class=\"fa fa-cog\"></i>\n      </div>\n      <h3 class=\"intro-feature-title\">Plugins</h3>\n      <p class=\"intro-feature-desc\">Features powerful APIs for limitless extensibility. Various plugins are available to support most template engines (EJS, Pug, Nunjucks, and many others). Easily integrate with existing NPM packages (Babel, PostCSS, Less/Sass, etc).</p>\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Theme Configuration Merging Example\nDESCRIPTION: YAML configuration examples showing how theme configs are merged between main config and theme's config.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-22-hexo-4.2_hexo-util-1-8_eslint-config-hexo-released.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n_config.yml\ntheme_config:\n  a:\n    b: 'foo'\n```\n\n----------------------------------------\n\nTITLE: Configuring PrismJS in Hexo (v7.0.0+)\nDESCRIPTION: YAML configuration for using PrismJS as the syntax highlighter in Hexo version 7.0.0 and later.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: prismjs\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo Deployer Git for One-Command Deployment\nDESCRIPTION: YAML configuration for the hexo-deployer-git plugin that enables one-command deployment to GitHub Pages. This configuration specifies the git repository and branch for deployment.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/github-pages.md#2025-04-10_snippet_2\n\nLANGUAGE: yml\nCODE:\n```\ndeploy:\n  type: git\n  repo: https://github.com/<username>/<project>\n  # example, https://github.com/hexojs/hexojs.github.io\n  branch: gh-pages\n```\n\n----------------------------------------\n\nTITLE: Inject Module Implementation - Named Function Export\nDESCRIPTION: Alternative implementation of the inject module using a named function that is then exported. Functions similarly to the previous example but with more explicit naming.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/injector.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nfunction injectFn() {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n}\n\nmodule.exports = injectFn;\n```\n\n----------------------------------------\n\nTITLE: Generating URLs with url_for Helper in Hexo (JavaScript)\nDESCRIPTION: The url_for helper generates URLs with the root path prefixed. It can handle relative and absolute links based on configuration options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<%- url_for('/a/path') %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- url_for('/css/style.css', {relative: false}) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo Deployer Git for One-Command Deployment\nDESCRIPTION: YAML configuration for the hexo-deployer-git plugin that enables one-command deployment to GitHub Pages. This configuration specifies the git repository and branch for deployment.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/github-pages.md#2025-04-10_snippet_2\n\nLANGUAGE: yml\nCODE:\n```\ndeploy:\n  type: git\n  repo: https://github.com/<username>/<project>\n  # example, https://github.com/hexojs/hexojs.github.io\n  branch: gh-pages\n```\n\n----------------------------------------\n\nTITLE: Installing Cheerio Dependency\nDESCRIPTION: Shell command to install cheerio as a dependency for continued use after it was removed from core dependencies.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-22-hexo-4.2_hexo-util-1-8_eslint-config-hexo-released.md#2025-04-10_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save cheerio\n```\n\n----------------------------------------\n\nTITLE: Removing Path in Hexo Router\nDESCRIPTION: Shows how to remove a path from the router using the remove method.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/router.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.remove(\"index.html\");\n```\n\n----------------------------------------\n\nTITLE: Path Matching Patterns in Hexo Box\nDESCRIPTION: Shows examples of Express-style pattern matching used in Box for matching file paths. Demonstrates how to match specific post IDs and wildcard paths.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/box.md#2025-04-10_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\n----------------------------------------\n\nTITLE: Async Arrow Function Spacing Examples\nDESCRIPTION: JavaScript examples showing correct and incorrect spacing between async and arrow functions according to eslint rules.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-22-hexo-4.2_hexo-util-1-8_eslint-config-hexo-released.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst foo = async(a) => await a\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst foo = async (a) => await a\n```\n\n----------------------------------------\n\nTITLE: Using link_to Helper in Hexo\nDESCRIPTION: The link_to helper inserts a link HTML tag. It accepts a path, optional text, and options including external flag, class name, and id attribute.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_6\n\nLANGUAGE: js\nCODE:\n```\n<%- link_to(path, [text], [options]) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"noopener\">Google</a>\n```\n\n----------------------------------------\n\nTITLE: Inject Module Using Arrow Functions and Factory Pattern\nDESCRIPTION: Implementation of the inject module with arrow functions, exporting a factory function that returns another function. This approach provides closure over the hexo instance.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/injector.md#2025-04-10_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = (hexo) => () => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\n----------------------------------------\n\nTITLE: Inserting Google Search Form in Hexo (JavaScript)\nDESCRIPTION: Inserts a Google search form with customizable options for class name, placeholder text, and button display.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/helpers.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<%- search_form(options) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring Highlight Options in Hexo YAML\nDESCRIPTION: YAML configuration to disable wrapping and enable hljs in the code highlighting options. This setting is used in the _config.yml file to control code block formatting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-12-hexo-4-1-1_hexo-util-1-7_eslint-config-hexo-4.md#2025-04-10_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n_config.yml\nhighlight:\n  wrap: false\n  hljs: true\n```\n\n----------------------------------------\n\nTITLE: Configuring GitLab CI/CD for Hexo Deployment\nDESCRIPTION: This YAML configuration file for GitLab CI/CD automates the deployment of a Hexo site to GitLab Pages. It uses a Node.js Alpine image, caches node_modules for faster builds, installs dependencies, and deploys the built site to Pages when changes are pushed to the default branch.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/gitlab-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nimage: node:16-alpine\ncache:\n  paths:\n    - node_modules/\n\nbefore_script:\n  - npm install hexo-cli -g\n  - npm install\n\npages:\n  script:\n    - npm run build\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n```\n\n----------------------------------------\n\nTITLE: Adding Meta Generator Tag in Hexo Theme\nDESCRIPTION: Implementation of meta_generator helper to insert metadata element tag in theme layout. This helps identify pages generated by Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-09-hexo-4-1-released.md#2025-04-10_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n<%- meta_generator() %>\n```\n\n----------------------------------------\n\nTITLE: YouTube Video Embed Tag Implementation\nDESCRIPTION: Example of a tag plugin that embeds YouTube videos without using end tags.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/tag.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\"youtube\", function (args) {\n  var id = args[0];\n  return (\n    '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' +\n    id +\n    '\" frameborder=\"0\" allowfullscreen></iframe></div>'\n  );\n});\n```\n\n----------------------------------------\n\nTITLE: Unregistering a CommonJS Module Filter in Hexo\nDESCRIPTION: Example showing how to unregister a filter that was registered with a CommonJS module. The same module reference must be used for both registration and unregistration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_6\n\nLANGUAGE: js\nCODE:\n```\n// Unregister a filter which is registered with commonjs module\n\nhexo.extend.filter.register(\"example\", require(\"path/to/filter\"));\n\nhexo.extend.filter.unregister(\"example\", require(\"path/to/filter\"));\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in package.json for Node 14 Compatibility\nDESCRIPTION: Shows how to modify package.json to force upgrade hexo-util and hexo-fs versions for Node 14 compatibility\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-04-30-hexo-util-2_hexo-fs-3.md#2025-04-10_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n``` diff package.json\n{\n  ...\n  \"dependencies\": {\n    \"hexo\": \"^4.0.0\",\n    \"hexo-generator-archive\": \"^1.0.0\",\n    \"hexo-generator-category\": \"^1.0.0\",\n    \"hexo-generator-index\": \"^1.0.0\",\n    \"hexo-generator-tag\": \"^1.0.0\",\n    \"hexo-renderer-ejs\": \"^1.0.0\",\n    \"hexo-renderer-stylus\": \"^1.1.0\",\n    \"hexo-renderer-marked\": \"^2.0.0\",\n    \"hexo-server\": \"^1.0.0\",\n+    \"hexo-util\": \"^2.1.0\",\n+    \"hexo-fs\": \"^3.0.1\"\n  }\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Inserting Archive Lists with list_archives Helper in Hexo\nDESCRIPTION: The list_archives helper inserts a list of archives. It accepts options to control the type of archive (yearly or monthly), order, display style, and other formatting features.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_archives([options]) %>\n```\n\n----------------------------------------\n\nTITLE: Using Mark and Language Features in Codeblocks\nDESCRIPTION: Example of using codeblock tag with language and line marking options in Hexo. This shows how to highlight specific lines in a code block using the mark attribute.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n{% codeblock lang:js mark:2,5 %}\nconst input = [\n  { name: 'lorem', item: 'ipsum' },\n  { name: 'per', item: 'doming' },\n  { name: 'dolor', item: 'lorem' },\n  { name: 'usu', item: 'pericula' }\n]\n{% endcodeblock %}\n```\n\n----------------------------------------\n\nTITLE: Inserting Favicons with favicon_tag Helper in Hexo (JavaScript)\nDESCRIPTION: The favicon_tag helper inserts a favicon link.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n<%- favicon_tag(path) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring GitLab CI/CD for Hexo Deployment\nDESCRIPTION: This YAML configuration file for GitLab CI/CD automates the deployment of a Hexo site to GitLab Pages. It uses a Node.js Alpine image, caches node_modules for faster builds, installs dependencies, and deploys the built site to Pages when changes are pushed to the default branch.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/gitlab-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nimage: node:16-alpine\ncache:\n  paths:\n    - node_modules/\n\nbefore_script:\n  - npm install hexo-cli -g\n  - npm install\n\npages:\n  script:\n    - npm run build\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n```\n\n----------------------------------------\n\nTITLE: Configuring File Ignore Pattern in Hexo\nDESCRIPTION: Example of configuring Hexo to ignore specific files or folders like node_modules in themes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-09-hexo-4-1-released.md#2025-04-10_snippet_6\n\nLANGUAGE: yml\nCODE:\n```\nignore: '**/themes/*/node_modules/**'\n```\n\n----------------------------------------\n\nTITLE: Using gravatar Helper in Hexo\nDESCRIPTION: The gravatar helper returns a Gravatar image URL from an email address. It accepts various options to customize the Gravatar image, such as size, default image, and rating.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_3\n\nLANGUAGE: js\nCODE:\n```\n<%- gravatar(email, [options]) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- gravatar('a@abc.com') %>\n// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'https://via.placeholder.com/150'}) %>\n// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=https%3A%2F%2Fvia.placeholder.com%2F150\n```\n\n----------------------------------------\n\nTITLE: Implementing a before_exit Filter in Hexo\nDESCRIPTION: Example showing how to register a filter that runs before Hexo exits. This executes after the hexo.exit method is called but before the process terminates.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_9\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"before_exit\", function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo for Direct Markdown Image Embedding\nDESCRIPTION: Configuration settings to enable embedding images in markdown without using tag plugins, using hexo-renderer-marked 3.1.0+.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/asset-folders.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n----------------------------------------\n\nTITLE: Accessing User Configuration - Inline Approach\nDESCRIPTION: Method 1 for accessing user plugin configuration in injector functions. Uses an inline function to access the hexo.config object directly.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/injector.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\n\nhexo.extend.injector.register(\"head_end\", () => {\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n});\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Hexo Data Models in Templates\nDESCRIPTION: Demonstrates how to properly iterate over Hexo's data models in template engines like Jade or Swig.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Using favicon_tag Helper in Hexo Templates\nDESCRIPTION: Helper function for inserting favicon links.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n<%- favicon_tag(path) %>\n```\n\n----------------------------------------\n\nTITLE: Upgrading Dependencies in package.json for Hexo 4.0.0\nDESCRIPTION: Shows the required change to the package.json file to upgrade from Hexo 3.9.0 to Hexo 4.0.0. This is the first step in the upgrade process.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-10-14-hexo-4-released.md#2025-04-10_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n-  \"hexo\": \"^3.9.0\",\n+  \"hexo\": \"^4.0.0\",\n```\n\n----------------------------------------\n\nTITLE: Basic Deployment Configuration in YAML\nDESCRIPTION: Simple YAML configuration for Hexo deployment that specifies the deployment type. This would be placed in the _config.yml file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: git\n```\n\n----------------------------------------\n\nTITLE: Heroku Deployer Configuration in YAML\nDESCRIPTION: YAML configuration for deploying to Heroku, specifying the repository URL and optional custom commit message.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\n----------------------------------------\n\nTITLE: Configuring Syntax Highlighting in Hexo (below v7.0.0)\nDESCRIPTION: Default configuration settings for highlight.js and prismjs in Hexo versions prior to 7.0.0, including options for line numbers, auto-detection, and tab replacement.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: External Injector Module - Alternative Implementation\nDESCRIPTION: Alternative implementation of external module using a named function. Shows same functionality with a different code organization pattern.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/injector.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nfunction injectFn() {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n}\n\nmodule.exports = injectFn;\n```\n\n----------------------------------------\n\nTITLE: Configuring Syntax Highlighting in Hexo (below v7.0.0)\nDESCRIPTION: Default configuration settings for highlight.js and prismjs in Hexo versions prior to 7.0.0, including options for line numbers, auto-detection, and tab replacement.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Using JavaScript Helper in Template\nDESCRIPTION: Example showing how to use the js helper in a template file. Demonstrates helper usage and its output.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/helper.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%- js('script.js') %>\n// <script src=\"script.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Iterating Data Model in Jade or Swig Templates\nDESCRIPTION: Example of how to iterate over Hexo's data model in Jade or Swig templates by converting objects to arrays.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_7\n\nLANGUAGE: plain\nCODE:\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Using is_current Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the path matches the current page URL. The strict option enables strict matching.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_current(path, [strict]) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring GitLab CI Pipeline for Hexo Deployment\nDESCRIPTION: GitLab CI configuration file that sets up automated deployment of a Hexo site to GitLab Pages. Uses Node.js 16 Alpine image, implements caching for node_modules, and defines the deployment process including build and artifact collection.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/gitlab-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nimage: node:16-alpine\ncache:\n  paths:\n    - node_modules/\n\nbefore_script:\n  - npm install hexo-cli -g\n  - npm install\n\npages:\n  script:\n    - npm run build\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n```\n\n----------------------------------------\n\nTITLE: Configuring Highlight.js Auto-Detection in Hexo\nDESCRIPTION: Configuration snippet to disable automatic language detection in highlight.js for improved performance\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2016-02-28-hexo-3-2-released.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nhighlight:\n  auto_detect: false\n```\n\n----------------------------------------\n\nTITLE: HTML Output for Code Block with hljs Option Enabled\nDESCRIPTION: Example of HTML output for a code block when the hljs option is set to true in highlight.js configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"yaml hljs\">\n<span class=\"hljs-comment\"># _config.yml</span>\n<span class=\"hljs-attr\">hexo:</span> <span class=\"hljs-string\">hexo</span>\n</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Accessing User Configuration - Direct Method\nDESCRIPTION: Shows how to access plugin configuration directly within the injector callback function. This approach uses the hexo.config object to retrieve plugin settings.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/injector.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\n\nhexo.extend.injector.register(\"head_end\", () => {\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n});\n```\n\n----------------------------------------\n\nTITLE: Hexo Syntax Highlighting Configuration (pre-v7.0.0)\nDESCRIPTION: Default configuration for syntax highlighting in Hexo versions before 7.0.0, showing highlight.js and PrismJS options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/syntax-highlight.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Removing a Local Variable in Hexo.js\nDESCRIPTION: This snippet illustrates how to remove a local variable in Hexo.js. It uses the 'remove' method of the 'locals' object to delete the 'posts' variable.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/locals.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.locals.remove(\"posts\");\n```\n\n----------------------------------------\n\nTITLE: Using Caption in Markdown Code Blocks with Prism.js\nDESCRIPTION: Example of using captions in markdown code blocks with Prism.js in Hexo. This shows how to specify a caption for syntax-highlighted code blocks using the triple backtick syntax.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n``` js caption\nconsole.log('foo')\n```\n```\n\n----------------------------------------\n\nTITLE: Using is_home Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the current page is the home page.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_home() %>\n```\n\n----------------------------------------\n\nTITLE: Permalink Configuration Example\nDESCRIPTION: YAML configuration showing permalink and new post name pattern settings.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-07-13-hexo-2-8-released.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npermalink: :type/:title/\nnew_post_name: :type/:title.md\n```\n\n----------------------------------------\n\nTITLE: Installing FTPSync Deployer Plugin\nDESCRIPTION: Command to install the hexo-deployer-ftpsync plugin which enables deployment via FTP with synchronization capabilities.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-ftpsync --save\n```\n\n----------------------------------------\n\nTITLE: Pushing main branch to GitHub in Bash\nDESCRIPTION: This command pushes the main branch of a local Git repository to GitHub, setting up tracking for the remote branch.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/github-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git push -u origin main\n```\n\n----------------------------------------\n\nTITLE: HTML Output for Code Block Without Syntax Highlighting\nDESCRIPTION: Example of HTML output for a code block when syntax highlighting is disabled in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<pre>\n  <code class=\"yaml\">hello: hexo</code>\n</pre>\n```\n\n----------------------------------------\n\nTITLE: Inject Module with Named Function and Factory Pattern\nDESCRIPTION: Alternative implementation using a named function with the factory pattern. The named function is called immediately inside the module export to create a cleaner separation of concerns.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/injector.md#2025-04-10_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst injectFn = (hexo) => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n\nmodule.exports = (hexo) => injectFn(hexo);\n```\n\n----------------------------------------\n\nTITLE: Hexo Syntax Highlighting Configuration (Pre v7.0.0)\nDESCRIPTION: YAML configuration for syntax highlighting in Hexo versions before 7.0.0, showing highlight.js and PrismJS options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/syntax-highlight.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Loading Partial Templates in Hexo (JavaScript)\nDESCRIPTION: Explains the usage of the partial helper function in Hexo. This function loads other template files and allows setting local variables. It includes options for caching and strict local variable usage.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/helpers.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%- partial(layout, [locals], [options]) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring Code Block Wrapping in Hexo\nDESCRIPTION: Configuration options for controlling code block wrapping behavior in highlight settings.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-09-hexo-4-1-released.md#2025-04-10_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\nhighlight:\n  line_number: false # must be disabled to disable wrap:\n  wrap: false\n```\n\n----------------------------------------\n\nTITLE: Using is_archive Helper in Hexo Templates\nDESCRIPTION: Conditional helper that checks if the current page is an archive page.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n<%- is_archive() %>\n```\n\n----------------------------------------\n\nTITLE: Creating a YAML Data File for Navigation Menu in Hexo\nDESCRIPTION: Example of a menu.yml file placed in source/_data folder defining navigation menu items with their respective URLs. This data file maps menu labels to their corresponding paths.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/data-files.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\n----------------------------------------\n\nTITLE: Git Push Command for Main Branch\nDESCRIPTION: Command to push the main branch to GitHub repository for initial setup.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/github-pages.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Running Hexo Server in Static Mode on Windows Subsystem for Linux\nDESCRIPTION: Commands to generate static files and run Hexo server in static mode on Windows Subsystem for Linux, working around file watching limitations.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate\n$ hexo server -s\n```\n\n----------------------------------------\n\nTITLE: Modular Injector Function in Hexo\nDESCRIPTION: This example shows how to create a modular injector function in a separate file and register it in the main Hexo configuration. It demonstrates different ways to structure and export the injector function.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/injector.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\").bind(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function () {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nfunction injectFn() {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n}\n\nmodule.exports = injectFn;\n```\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\")(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = (hexo) => () => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst injectFn = (hexo) => {\n  const css = hexo.extend.helper.get(\"css\").bind(hexo);\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n};\n\nmodule.exports = (hexo) => injectFn(hexo);\n```\n\n----------------------------------------\n\nTITLE: Default Highlight Configuration in Hexo (below v7.0.0)\nDESCRIPTION: The default YAML configuration for syntax highlighting in Hexo versions below 7.0.0, showing options for both highlight.js and prismjs.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Multiple Deployers Configuration in YAML\nDESCRIPTION: YAML configuration example for deploying to multiple destinations. Hexo will execute each deployer in sequence as defined in the configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  - type: git\n    repo:\n  - type: heroku\n    repo:\n```\n\n----------------------------------------\n\nTITLE: HTML Output for Code Blocks with No Highlighting\nDESCRIPTION: Example of how code blocks are rendered in HTML when no syntax highlighting is enabled, showing the default behavior of the Markdown renderer.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<pre>\n  <code class=\"yaml\">hello: hexo</code>\n</pre>\n```\n\n----------------------------------------\n\nTITLE: Inserting Archive List in Hexo\nDESCRIPTION: This function inserts a list of archives. It accepts optional parameters for customizing the output, including type (yearly or monthly), ordering, and styling of the archive list.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_archives([options]) %>\n```\n\n----------------------------------------\n\nTITLE: Starting Hexo Documentation Server\nDESCRIPTION: Command for starting the Hexo server to preview documentation changes locally in real-time.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/contributing.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server\n```\n\n----------------------------------------\n\nTITLE: Deploying to Bip\nDESCRIPTION: Command to generate Hexo static files and deploy them to Bip hosting service.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/one-command-deployment.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate —deploy && bip deploy\n```\n\n----------------------------------------\n\nTITLE: Using url_for Helper with Relative Links in Hexo\nDESCRIPTION: Example of using the url_for helper to generate a relative URL. When relative_link is enabled, the URL is generated relative to the current page path.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"../../index.html\">blog</a>\n```\n\n----------------------------------------\n\nTITLE: Fixing YAML Indentation Error\nDESCRIPTION: This error occurs when YAML has improper indentation or is missing spaces after colons in key-value pairs.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\n----------------------------------------\n\nTITLE: HTML Output with Line Numbers in Highlight.js\nDESCRIPTION: Example of HTML output for a YAML code block when using highlight.js with line numbers enabled, showing how Hexo wraps the output with table structure.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"highlight yaml\">\n  <table>\n    <tbody>\n      <tr>\n        <td class=\"gutter\">\n          <pre><span class=\"line\">1</span><br></pre>\n        </td>\n        <td class=\"code\">\n          <pre><span class=\"line\"><span class=\"attr\">hello:</span><span class=\"string\">hexo</span></span><br></pre>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Running Hexo Server on Alternative Port\nDESCRIPTION: Command to start Hexo server on a different port when the default port is already in use.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo server -p 5000\n```\n\n----------------------------------------\n\nTITLE: HTML Output for Disabled Syntax Highlighting\nDESCRIPTION: Example of HTML output for a code block when syntax highlighting is disabled in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<pre>\n  <code class=\"yaml\">hello: hexo</code>\n</pre>\n```\n\n----------------------------------------\n\nTITLE: Formatting Time in JavaScript\nDESCRIPTION: The time function inserts formatted time. It accepts various date inputs and allows custom time formatting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n----------------------------------------\n\nTITLE: Accessing Data File Content in Hexo Templates using EJS\nDESCRIPTION: This EJS template snippet demonstrates how to iterate over the menu items defined in the YAML data file and generate HTML links for navigation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/data-files.md#2025-04-10_snippet_1\n\nLANGUAGE: ejs\nCODE:\n```\n<% for (var link in site.data.menu) { %>\n  <a href=\"<%= site.data.menu[link] %>\"> <%= link %> </a>\n<% } %>\n```\n\n----------------------------------------\n\nTITLE: Renderizando um Arquivo em JavaScript usando Hexo\nDESCRIPTION: Este snippet mostra como renderizar um arquivo usando o método hexo.render.render, onde a engine é automaticamente detectada baseada na extensão do arquivo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/rendering.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ path: \"path/to/file.swig\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo Plugins Page in YAML\nDESCRIPTION: This YAML front matter configures the plugins page for a Hexo site. It sets the layout to 'plugins', specifies the page title as 'Plugins', uses 'plugins' as the data source, sets 'plugin' as the partial template, and disables comments.\nSOURCE: https://github.com/hexojs/site/blob/master/source/plugins/index.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: plugins\ntitle: Plugins\ndata: plugins\npartial: plugin\ncomments: false\n---\n```\n\n----------------------------------------\n\nTITLE: Handling EMFILE Error Due to Too Many Open Files\nDESCRIPTION: This error appears when Node.js reaches the system limit for synchronous I/O operations during file generation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\nError: EMFILE, too many open files\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting (below v7.0.0)\nDESCRIPTION: YAML configuration to disable both highlight.js and PrismJS syntax highlighting in Hexo versions prior to 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Configuring System-wide File Limits for Hexo\nDESCRIPTION: Steps to override system-wide file limit configurations when unable to modify limits using ulimit. This involves editing system configuration files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_3\n\nLANGUAGE: plain\nCODE:\n```\n* - nofile 10000\n\n# '*' applies to all users and '-' set both soft and hard limits\n```\n\nLANGUAGE: plain\nCODE:\n```\nsession required pam_limits.so\n```\n\nLANGUAGE: plain\nCODE:\n```\nDefaultLimitNOFILE=10000\n```\n\n----------------------------------------\n\nTITLE: Hexo Code Block HTML Output Example\nDESCRIPTION: Shows how Hexo generates HTML output for code blocks with line numbers enabled.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/syntax-highlight.md#2025-04-10_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"highlight yaml\">\n  <table>\n    <tbody>\n      <tr>\n        <td class=\"gutter\">\n          <pre><span class=\"line\">1</span><br></pre>\n        </td>\n        <td class=\"code\">\n          <pre><span class=\"line\"><span class=\"attr\">hello:</span><span class=\"string\">hexo</span></span><br></pre>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Creating Time Tags in JavaScript\nDESCRIPTION: The time_tag function inserts a time tag with datetime attribute. It accepts various date inputs and allows custom formatting for the displayed date.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time_tag(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time_tag(new Date()) %>\n// <time datetime=\"2024-01-22T06:35:31.108Z\">2024-01-22</time>\n\n<%- time_tag(new Date(), 'MMM-D-YYYY') %>\n// <time datetime=\"2024-01-22T06:35:31.108Z\">Jan-22-2024</time>\n```\n\n----------------------------------------\n\nTITLE: Enabling Highlight.js (v7.0.0+)\nDESCRIPTION: YAML configuration to enable highlight.js with detailed options in Hexo versions 7.0.0 and above.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: highlight.js\nhighlight:\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"  \"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\n```\n\n----------------------------------------\n\nTITLE: Rendering Files in Hexo\nDESCRIPTION: Renders specified files in Hexo. Can set an output destination for the rendered files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo render <file1> [file2] ...\n```\n\n----------------------------------------\n\nTITLE: Error Message When Modifying System File Limits\nDESCRIPTION: This error occurs when trying to increase the ulimit beyond system-wide configurations.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ ulimit -n 10000\nulimit: open files: cannot modify limit: Operation not permitted\n```\n\n----------------------------------------\n\nTITLE: Enabling Highlight.js (below v7.0.0)\nDESCRIPTION: YAML configuration to enable highlight.js with detailed options in Hexo versions prior to 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"  \"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Inserting Time Tag in Hexo\nDESCRIPTION: This function inserts a time tag with relative time from now. The 'date' parameter can be a UNIX timestamp, ISO string, Date object, or Moment.js object. The 'format' parameter is optional and defaults to the 'date_format' setting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time_tag(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time_tag(new Date()) %>\n// <time datetime=\"2024-01-22T06:35:31.108Z\">2024-01-22</time>\n\n<%- time_tag(new Date(), 'MMM-D-YYYY') %>\n// <time datetime=\"2024-01-22T06:35:31.108Z\">Jan-22-2024</time>\n```\n\n----------------------------------------\n\nTITLE: Examples of tagcloud Helper with Different Options\nDESCRIPTION: Examples showing how to use the tagcloud helper with default options and how to limit the number of tags displayed to 30.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n// Default options\n<%- tagcloud() %>\n\n// Limit number of tags to 30\n<%- tagcloud({amount: 30}) %>\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output from Data File Template in Hexo\nDESCRIPTION: This snippet shows the final HTML output generated from the EJS template using the data from the YAML file, creating a series of navigation links.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/data-files.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/\"> Home </a>\n<a href=\"/gallery/\"> Gallery </a>\n<a href=\"/archives/\"> Archives </a>\n```\n\n----------------------------------------\n\nTITLE: Cleaning Hexo Cache and Generated Files\nDESCRIPTION: Cleans the cache file (db.json) and generated files (public folder) in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo clean\n```\n\n----------------------------------------\n\nTITLE: Out of Memory Error During Site Generation\nDESCRIPTION: Fatal error message that appears when Node.js runs out of memory during the site generation process.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_8\n\nLANGUAGE: plain\nCODE:\n```\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory\n```\n\n----------------------------------------\n\nTITLE: URL Tag Usage Examples in Hexo\nDESCRIPTION: Examples of using url_for and full_url_for tags to generate URLs with different configurations.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/tag-plugins.md#2025-04-10_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/blog/index.html\">blog</a>\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"../../index.html\">blog</a>\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/index.html\">blog</a>\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://example.com/blog/a/path\">index</a>\n```\n\n----------------------------------------\n\nTITLE: Running Hexo in Debug Mode\nDESCRIPTION: Logs verbose messages to the terminal and debug.log file. Helpful for troubleshooting Hexo issues.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --debug\n```\n\n----------------------------------------\n\nTITLE: Running Hexo in Debug Mode\nDESCRIPTION: Logs verbose messages to the terminal and debug.log file. Helpful for troubleshooting Hexo issues.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --debug\n```\n\n----------------------------------------\n\nTITLE: Escaping Nunjucks Syntax in Hexo Content\nDESCRIPTION: Examples of how to escape Nunjucks template syntax in Hexo content to prevent unintended parsing.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_9\n\nLANGUAGE: plain\nCODE:\n```\n{% raw %}\nHello {{ world }}\n{% endraw %}\n```\n\nLANGUAGE: plain\nCODE:\n```\n```\nHello {{ world }}\n```\n```\n\n----------------------------------------\n\nTITLE: HTML Output of Font Awesome Paginator\nDESCRIPTION: The rendered HTML output of the paginator with Font Awesome icons, showing how HTML tags are preserved when escape is set to false.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_32\n\nLANGUAGE: html\nCODE:\n```\n<!-- Rendered as -->\n<a href=\"/1/\"><i class=\"fa fa-angle-left\"></i></a>\n<a href=\"/1/\">1</a>\n2\n<a href=\"/3/\">3</a>\n<a href=\"/3/\"><i class=\"fa fa-angle-right\"></i></a>\n```\n\n----------------------------------------\n\nTITLE: Enabling PrismJS (below v7.0.0)\nDESCRIPTION: YAML configuration to enable PrismJS with detailed options in Hexo versions prior to 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: true\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Increasing Node.js Heap Size for Hexo\nDESCRIPTION: Modifying the hexo-cli command to increase Node.js heap size when encountering out-of-memory errors during generation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_4\n\nLANGUAGE: plain\nCODE:\n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n----------------------------------------\n\nTITLE: DTrace Module Error on macOS\nDESCRIPTION: Error messages related to DTrace provider modules that may occur during installation on macOS.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_13\n\nLANGUAGE: plain\nCODE:\n```\n{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n```\n\n----------------------------------------\n\nTITLE: Configuring Site URL in Hexo _config.yml\nDESCRIPTION: Example configuration in _config.yml that sets the site URL for the Hexo site. This affects how full_url_for generates absolute URLs.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_9\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nurl: https://example.com/blog # example\n```\n\n----------------------------------------\n\nTITLE: Creating a Pullquote Tag Plugin with End Tag in Hexo\nDESCRIPTION: Implements a tag plugin for creating pullquotes. It uses the 'ends' option to process content between opening and closing tags.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/tag.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.tag.register(\n  \"pullquote\",\n  function (args, content) {\n    var className = args.join(\" \");\n    return (\n      '<blockquote class=\"pullquote' +\n      className +\n      '\">' +\n      content +\n      \"</blockquote>\"\n    );\n  },\n  { ends: true }\n);\n```\n\n----------------------------------------\n\nTITLE: YAMLException After Hexo Upgrade\nDESCRIPTION: Error message that occurs after upgrading to Hexo 6.1.0+ due to dependency issues with js-yaml.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_27\n\nLANGUAGE: plain\nCODE:\n```\nYAMLException: Specified list of YAML types (or a single Type object) contains a non-Type object.\n    at ...\n```\n\n----------------------------------------\n\nTITLE: Sample Objective-C Code Block\nDESCRIPTION: Example showing Objective-C code with syntax highlighting\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/tag-plugins.md#2025-04-10_snippet_2\n\nLANGUAGE: objc\nCODE:\n```\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n```\n\n----------------------------------------\n\nTITLE: Installing WordPress Migrator Plugin for Hexo\nDESCRIPTION: This command installs the hexo-migrator-wordpress plugin, which is required for migrating WordPress content to Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/migration.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-migrator-wordpress --save\n```\n\n----------------------------------------\n\nTITLE: HTML Output with hljs Classes in highlight.js\nDESCRIPTION: Example of HTML output for a code block when hljs option is enabled in highlight.js configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"yaml hljs\">\n<span class=\"hljs-comment\"># _config.yml</span>\n<span class=\"hljs-attr\">hexo:</span> <span class=\"hljs-string\">hexo</span>\n</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Package.json Configuration for Hexo\nDESCRIPTION: Required hexo entry in package.json that might be missing when commands other than help, init, and version don't work.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hexo\": {\n    \"version\": \"3.2.2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Index Template with Partial Include\nDESCRIPTION: Demonstrates how to include a partial template within the main index template.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/templates.md#2025-04-10_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\n----------------------------------------\n\nTITLE: Increasing File Watch Limit on Linux\nDESCRIPTION: Provides a command to increase the file watch limit on Linux systems to resolve ENOSPC errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n\n----------------------------------------\n\nTITLE: Configuring a Hexo Plugin in YAML\nDESCRIPTION: Example YAML configuration for a Hexo plugin, including description, link, and tags for categorization.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/plugins.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Server module for Hexo.\nlink: https://github.com/hexojs/hexo-server\ntags:\n  - official\n  - server\n  - console\n```\n\n----------------------------------------\n\nTITLE: HTML Output without Wrapping in highlight.js\nDESCRIPTION: Example of HTML output for a code block when wrapping is disabled in highlight.js configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"yaml\">\n<span class=\"comment\"># _config.yml</span>\n<span class=\"attr\">hexo:</span> <span class=\"string\">hexo</span>\n</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Enabling PrismJS (v7.0.0+)\nDESCRIPTION: YAML configuration to enable PrismJS with detailed options in Hexo versions 7.0.0 and above.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: prismjs\nprismjs:\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: HTML Output with Line Numbers in highlight.js\nDESCRIPTION: Example of HTML output for a code block with line numbers when using highlight.js in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"highlight yaml\">\n  <table>\n    <tbody>\n      <tr>\n        <td class=\"gutter\">\n          <pre><span class=\"line\">1</span><br></pre>\n        </td>\n        <td class=\"code\">\n          <pre><span class=\"line\"><span class=\"attr\">hello:</span><span class=\"string\">hexo</span></span><br></pre>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Incorrect Tag Plugin Usage Example\nDESCRIPTION: Examples of incorrect tag plugin usage that can cause template rendering errors, showing missing closing tags.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_25\n\nLANGUAGE: plain\nCODE:\n```\n# Incorrect\n{% codeblock %}\nfn()\n{% codeblock %}\n\n# Incorrect\n{% codeblock %}\nfn()\n\n# Correct\n{% codeblock %}\nfn()\n{% endcodeblock %}\n```\n\n----------------------------------------\n\nTITLE: Addressing YAML Parsing Error with Incomplete Mapping\nDESCRIPTION: This snippet shows a YAML parsing error that occurs when strings containing colons are not properly wrapped in quotation marks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\n----------------------------------------\n\nTITLE: Loading Files with Box in JavaScript\nDESCRIPTION: Demonstrates how to load and watch files using the Box container's process() and watch() methods. The process method loads all files once, while watch continues monitoring for changes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/box.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nbox.process().then(function () {\n  // ...\n});\n\nbox.watch().then(function () {\n  // You can call box.unwatch() later to stop watching.\n});\n```\n\n----------------------------------------\n\nTITLE: Embedding Image with Title and Alt Text using asset_img Tag in Hexo\nDESCRIPTION: Shows how to add title and alt attributes to an embedded image using the asset_img tag plugin in Hexo. The quoted string parameter is split to provide title and alt values.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/2020/01/02/hello/foo.jpg\" title=\"lorem ipsum\" alt=\"dolor\" />\n```\n\n----------------------------------------\n\nTITLE: HTML Output with Disabled Wrap in Highlight.js\nDESCRIPTION: Example of HTML output for a YAML code block when using highlight.js with both line_number and wrap disabled, showing the simpler output structure.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"yaml\">\n<span class=\"comment\"># _config.yml</span>\n<span class=\"attr\">hexo:</span> <span class=\"string\">hexo</span>\n</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Examples of paginator Helper with Custom Navigation\nDESCRIPTION: Example showing how to customize the paginator with simpler previous/next navigation symbols.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n<%- paginator({\n  prev_text: '<',\n  next_text: '>'\n}) %>\n```\n\n----------------------------------------\n\nTITLE: Updating Routes in Hexo Generator\nDESCRIPTION: Demonstrates how to update routes by returning either a single object or an array of objects. Each object defines a path, data, and optional layout for the route.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/generator.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"test\", function (locals) {\n  // Object\n  return {\n    path: \"foo\",\n    data: \"foo\",\n  };\n\n  // Array\n  return [\n    { path: \"foo\", data: \"foo\" },\n    { path: \"bar\", data: \"bar\" },\n  ];\n});\n```\n\n----------------------------------------\n\nTITLE: Updating js-yaml Dependency with yarn\nDESCRIPTION: Alternative command using yarn to update the js-yaml dependency for resolving YAML exceptions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_29\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn add js-yaml@latest\n```\n\n----------------------------------------\n\nTITLE: Escaping Template Tags with Backticks\nDESCRIPTION: Alternative method to escape Nunjucks template syntax using triple backticks in Markdown.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_19\n\nLANGUAGE: plain\nCODE:\n```\n```\nHello {{ world }}\n```\n```\n\n----------------------------------------\n\nTITLE: Setting a Theme View in Hexo\nDESCRIPTION: Creates or updates a view (template) in the Hexo theme. This method allows developers to programmatically define or modify template content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/themes.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.theme.setView(path, data);\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Category Hierarchies in Hexo Front-matter\nDESCRIPTION: Example showing how to apply multiple independent category hierarchies to a single post by using nested arrays.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/front-matter.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncategories:\n  - [Sports, Baseball]\n  - [MLB, American League, Boston Red Sox]\n  - [MLB, American League, New York Yankees]\n  - Rivalries\n```\n\n----------------------------------------\n\nTITLE: HTML Output with HLJS Class Prefix\nDESCRIPTION: HTML markup generated when the hljs option is enabled, showing how class names are prefixed with hljs- for compatibility with highlight.js themes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"yaml hljs\">\n<span class=\"hljs-comment\"># _config.yml</span>\n<span class=\"hljs-attr\">hexo:</span> <span class=\"hljs-string\">hexo</span>\n</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Using relative_url Helper in Hexo Templates\nDESCRIPTION: Helper function that returns a relative path from 'from' to 'to'.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<%- relative_url(from, to) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- relative_url('foo/bar/', 'css/style.css') %>\n// ../../css/style.css\n```\n\n----------------------------------------\n\nTITLE: Creating an Archive Page in Hexo\nDESCRIPTION: Generates an archive page at 'archives/index.html' that displays all posts. It sets multiple layouts as fallbacks if the primary layout doesn't exist.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/generator.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"archive\", function (locals) {\n  return {\n    path: \"archives/index.html\",\n    data: locals,\n    layout: [\"archive\", \"index\"],\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Fixing YAML Parsing Errors in Hexo Configuration\nDESCRIPTION: Examples of how to properly format YAML in Hexo configuration files to avoid parsing errors. Demonstrates correct quoting and indentation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlast_updated: \"Last updated: %s\"\n```\n\nLANGUAGE: yaml\nCODE:\n```\nlast_updated: Last updated: %s\n```\n\n----------------------------------------\n\nTITLE: Increasing File Watch Limit on Linux\nDESCRIPTION: Command to increase the system-wide limit for the number of files that can be watched, resolving ENOSPC errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_21\n\nLANGUAGE: plain\nCODE:\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n\n----------------------------------------\n\nTITLE: Git RPC Failure During Deployment\nDESCRIPTION: Error message that appears when Git remote operations fail, often due to improper Git configuration or permissions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_10\n\nLANGUAGE: plain\nCODE:\n```\nerror: RPC failed; result=22, HTTP code = 403\n\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\n----------------------------------------\n\nTITLE: Rendering a Post in Hexo\nDESCRIPTION: This function renders a post in Hexo. It takes an optional source file path and data parameters. The function processes the content through various rendering steps and filters.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/posts.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.render(source, data);\n```\n\n----------------------------------------\n\nTITLE: HTML Output Example for Line Numbers\nDESCRIPTION: Shows how Hexo generates HTML output with line numbers for highlighted code blocks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/syntax-highlight.md#2025-04-10_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"highlight yaml\">\n  <table>\n    <tbody>\n      <tr>\n        <td class=\"gutter\">\n          <pre><span class=\"line\">1</span><br></pre>\n        </td>\n        <td class=\"code\">\n          <pre><span class=\"line\"><span class=\"attr\">hello:</span><span class=\"string\">hexo</span></span><br></pre>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Advanced paginator Example with Font Awesome Icons\nDESCRIPTION: Example showing how to use Font Awesome icons in paginator navigation by setting escape to false.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n<%- paginator({\n  prev_text: '<i class=\"fa fa-angle-left\"></i>',\n  next_text: '<i class=\"fa fa-angle-right\"></i>',\n  escape: false\n}) %>\n```\n\n----------------------------------------\n\nTITLE: Migrating WordPress Content with Original Images Only\nDESCRIPTION: Command to migrate WordPress content to Hexo with option to import original-size images only.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-02-cli-4_wordpress-2-1_sitemap-2-1.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo migrate wordpress /path/export.xml --import-image original\n```\n\n----------------------------------------\n\nTITLE: Configuring System-Wide File Descriptor Limits\nDESCRIPTION: Instructions for permanently increasing file descriptor limits by modifying system configuration files on Linux.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\n* - nofile 10000\n\n# '*' applies to all users and '-' set both soft and hard limits\n```\n\nLANGUAGE: plain\nCODE:\n```\nsession required pam_limits.so\n```\n\nLANGUAGE: plain\nCODE:\n```\nDefaultLimitNOFILE=10000\n```\n\n----------------------------------------\n\nTITLE: Problematic Nunjucks-like Syntax in Tag Plugins\nDESCRIPTION: Example of tag plugin content that contains syntax resembling Nunjucks directives, which can cause rendering errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_26\n\nLANGUAGE: plain\nCODE:\n```\n{% codeblock lang:bash %}\nSize of array is ${#ARRAY}\n{% endcodeblock %}\n```\n\n----------------------------------------\n\nTITLE: Using full_url_for Helper in Hexo\nDESCRIPTION: The full_url_for helper returns a complete URL including the config.url value. The output is automatically encoded, making it useful for absolute URL generation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n<%- full_url_for(path) %>\n```\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nurl: https://example.com/blog # example\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- full_url_for('/a/path') %>\n// https://example.com/blog/a/path\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo Server Module\nDESCRIPTION: Installs the hexo-server module using npm, which is required for running the Hexo server after version 3.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/server.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-server --save\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (pre-v7.0.0)\nDESCRIPTION: YAML configuration to disable both highlight.js and prismjs in Hexo versions prior to 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Using full_url_for Helper in Hexo Templates\nDESCRIPTION: Helper function that returns a URL with the config.url prefixed. The output is automatically encoded.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%- full_url_for(path) %>\n```\n\nLANGUAGE: yaml\nCODE:\n```\n_config.yml\nurl: https://example.com/blog # example\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- full_url_for('/a/path') %>\n// https://example.com/blog/a/path\n```\n\n----------------------------------------\n\nTITLE: HTML Structure of Captioned Code Blocks in Prism.js\nDESCRIPTION: Shows the HTML structure generated for captioned code blocks when using Prism.js in Hexo. This represents how the caption and code are wrapped in HTML elements in the rendered output.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<pre><div class=\"caption\"><span>caption</span></div><code>console...</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Increasing Node.js Heap Memory for Hexo CLI\nDESCRIPTION: Shows how to modify the Hexo CLI script to increase the Node.js heap memory size.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n----------------------------------------\n\nTITLE: Increasing File Watch Limit on Linux\nDESCRIPTION: Command to increase the maximum number of file watchers on Linux systems, which can resolve ENOSPC errors when running Hexo server.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n\n----------------------------------------\n\nTITLE: Setting a View in Hexo\nDESCRIPTION: Sets a view template in the Hexo theme system with the specified path and data content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/themes.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.theme.setView(path, data);\n```\n\n----------------------------------------\n\nTITLE: Initializing Bip Deployment\nDESCRIPTION: Command to initialize a Bip project for Hexo deployment using the Bip CLI.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/one-command-deployment.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ bip init\n```\n\n----------------------------------------\n\nTITLE: Implementing Fragment Caching in Hexo 2.7 JavaScript\nDESCRIPTION: Demonstrates how to use the fragment_cache helper function to cache content within a fragment. This feature can significantly reduce generation time for large Hexo sites.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-06-14-hexo-2-7-released.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}); %>\n```\n\n----------------------------------------\n\nTITLE: Formatting Numbers in Hexo (JavaScript)\nDESCRIPTION: This helper function formats a number with options for precision, delimiter, and separator. It can be used to format numbers for display in various formats.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_34\n\nLANGUAGE: js\nCODE:\n```\n<%- number_format(number, [options]) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n----------------------------------------\n\nTITLE: Adding Server Middleware with server_middleware Filter in Hexo\nDESCRIPTION: Demonstrates how to use the server_middleware filter to add custom middleware to the Hexo server, in this case adding a custom header.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register(\"server_middleware\", function (app) {\n  app.use(function (req, res, next) {\n    res.setHeader(\"X-Powered-By\", \"Hexo\");\n    next();\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Hexo Version to package.json\nDESCRIPTION: Demonstrates how to add the Hexo version to package.json to resolve command execution issues.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hexo\": {\n    \"version\": \"3.2.2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Hexo Server in Windows Subsystem for Linux\nDESCRIPTION: Shows how to run Hexo server in WSL environment without filesystem watchers.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo generate\n$ hexo server -s\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents in Hexo (JavaScript)\nDESCRIPTION: This helper function parses heading tags (h1~h6) in the content and generates a table of contents. It accepts options for customizing the output, including class names and list numbering.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_37\n\nLANGUAGE: js\nCODE:\n```\n<%- toc(str, [options]) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- toc(page.content) %>\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents in Hexo (JavaScript)\nDESCRIPTION: This helper function parses heading tags (h1~h6) in the content and generates a table of contents. It accepts options for customizing the output, including class names and list numbering.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/helpers.md#2025-04-10_snippet_37\n\nLANGUAGE: js\nCODE:\n```\n<%- toc(str, [options]) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- toc(page.content) %>\n```\n\n----------------------------------------\n\nTITLE: Running Hexo Tests\nDESCRIPTION: Command for running tests to ensure code changes meet quality standards before submitting a pull request to the Hexo project.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/contributing.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm test\n```\n\n----------------------------------------\n\nTITLE: Updating Templates for Relative Link Support in Hexo 2.7 JavaScript\nDESCRIPTION: Demonstrates how to modify templates to support Relative Link feature by replacing config.root and path concatenation with the url_for helper function.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-06-14-hexo-2-7-released.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%- config.root %><%- path %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- url_for(path) %>\n```\n\n----------------------------------------\n\nTITLE: Formatting Dates in Hexo\nDESCRIPTION: This function inserts a formatted date. The 'date' parameter can be a UNIX timestamp, ISO string, Date object, or Moment.js object. The 'format' parameter is optional and defaults to the 'date_format' setting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date(date, [format]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'MMM D YYYY') %>\n// Jan 1 2013\n```\n\n----------------------------------------\n\nTITLE: Alternative Methods for Executing Filters in Hexo\nDESCRIPTION: Demonstrates alternative methods for executing filters in Hexo, including both synchronous and asynchronous versions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n----------------------------------------\n\nTITLE: Updating js-yaml Dependency using npm\nDESCRIPTION: This command updates the js-yaml dependency to the latest version using npm. It's suggested as a solution to resolve the YAMLException error.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/troubleshooting.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install js-yaml@latest\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenShift Deployment in Hexo\nDESCRIPTION: Configuration settings for OpenShift deployment in Hexo's _config.yml file. Includes options for repository URL and commit message.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\n----------------------------------------\n\nTITLE: Customizing Hexo Working Directory\nDESCRIPTION: Specifies a custom path for the current working directory when running Hexo commands.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/commands.md#2025-04-10_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --cwd /path/to/cwd\n```\n\n----------------------------------------\n\nTITLE: Running Hexo Tests\nDESCRIPTION: Command for running the test suite to ensure code changes meet requirements before submission.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/contributing.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm test\n```\n\n----------------------------------------\n\nTITLE: Creating Typed Posts\nDESCRIPTION: Command line example for creating a new post with a specific type.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-07-13-hexo-2-8-released.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new \"Hello World\" --type test\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo Package\nDESCRIPTION: Command to install the main Hexo package locally for advanced usage.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/index.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo\n```\n\n----------------------------------------\n\nTITLE: Implementing Post-related Filters in Hexo\nDESCRIPTION: Demonstrates how to implement filters related to post creation and permalink generation in Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register(\"new_post_path\", function (data, replace) {\n  // ...\n});\n\nhexo.extend.filter.register(\"post_permalink\", function (data) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Generating All Posts in Hexo\nDESCRIPTION: Maps through all posts in locals.posts and generates a route for each post. Each route uses the post's path and applies the 'post' layout.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/generator.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"post\", function (locals) {\n  return locals.posts.map(function (post) {\n    return {\n      path: post.path,\n      data: post,\n      layout: \"post\",\n    };\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Edgio CLI for Hexo Deployment\nDESCRIPTION: Command to install the Edgio CLI globally using npm. This is the first step for deploying a Hexo site to Edgio (formerly Layer0).\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g @edgio/cli\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Permalink in Hexo\nDESCRIPTION: Demonstrates how to override the site's permalink using an article's front-matter in Hexo 5.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-07-29-hexo-5-released.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n``` yml _config.yml\npermalink: :year/:month/:day/:title/\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n``` yml source/foo-bar.md\n---\ntitle: foo bar\npermalink: breaking-news/\n---\n```\n```\n\nLANGUAGE: yaml\nCODE:\n```\n``` yml\npermalink: :year/:month/:day/:title/ # default\n# or\npermalink: :year/:month/:day/:title.html\n```\n```\n\n----------------------------------------\n\nTITLE: Using Hexo Util Spawn with String Arguments\nDESCRIPTION: Example of using the spawn utility from hexo-util with string arguments. This shows how to execute a command with a single string argument and handle the returned content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_15\n\nLANGUAGE: js\nCODE:\n```\nspawn('cat', 'test.txt').then((content) => {\n  console.log(content);\n});\n```\n\n----------------------------------------\n\nTITLE: Using TOC Helper with Min Depth\nDESCRIPTION: JavaScript example showing how to use the table of contents helper with minimum depth parameter to control heading levels.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-22-hexo-4.2_hexo-util-1-8_eslint-config-hexo-released.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<%- toc(page.content, { min_depth: 2 }) %>\n// table of content would only include <h2>, <h3> and above\n```\n\n----------------------------------------\n\nTITLE: Inserting Category Lists with list_categories Helper in Hexo\nDESCRIPTION: The list_categories helper inserts a list of categories. It accepts options that control sorting, order, display style, and other formatting features.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_categories([options]) %>\n```\n\n----------------------------------------\n\nTITLE: Creating an Archive Page in Hexo\nDESCRIPTION: Demonstrates how to create an archive page at 'archives/index.html'. It passes all posts as data to the templates and specifies multiple layout options for rendering.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/generator.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"archive\", function (locals) {\n  return {\n    path: \"archives/index.html\",\n    data: locals,\n    layout: [\"archive\", \"index\"],\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Registering a Renderer in Hexo (JavaScript)\nDESCRIPTION: This snippet shows the basic syntax for registering a custom renderer in Hexo. It includes parameters for the input and output file extensions, the rendering function, and a sync mode flag.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/renderer.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.renderer.register(\n  name,\n  output,\n  function (data, options) {\n    // ...\n  },\n  sync,\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Rsync Deployer Plugin\nDESCRIPTION: Command to install the hexo-deployer-rsync plugin which enables deployment using the Rsync protocol for file synchronization.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/one-command-deployment.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-rsync --save\n```\n\n----------------------------------------\n\nTITLE: HTML Output with No Wrapping in Highlight.js\nDESCRIPTION: Example of HTML markup generated by Hexo when using highlight.js with line_number and wrap disabled, showing the basic pre/code structure.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/syntax-highlight.md#2025-04-10_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"yaml\">\n<span class=\"comment\"># _config.yml</span>\n<span class=\"attr\">hexo:</span> <span class=\"string\">hexo</span>\n</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Using Cache Size and Dump Methods\nDESCRIPTION: Example of using the size and dump methods of the cache utility in hexo-util. This shows how to get the number of key-value pairs and dump all content from the cache.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_17\n\nLANGUAGE: js\nCODE:\n```\n// Output number of key-value pairs\ncache.size();\n// 3\n\n// Outputs everything in cache\ncache.dump();\n/*\n{\n  foo: 'bar',\n  baz: 123,\n  qux: 456\n}\n*/\n```\n\n----------------------------------------\n\nTITLE: Configuring prependRoot Option in hexo-renderer-marked\nDESCRIPTION: Configuration example for the prependRoot option which automatically prepends root path to image URLs. This helps reduce manual URL path management when using custom root values.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-06-27-hexo-marked-3_migrator-wordpress-2_migrator-rss-1.md#2025-04-10_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nroot: /blog/\nmarked:\n  prependRoot: true # disabled by default\n```\n\n----------------------------------------\n\nTITLE: Front-matter example for Hexo post\nDESCRIPTION: This snippet demonstrates the front-matter structure for a Hexo blog post, including title, date and nested categories. The front-matter is used to define post metadata that can be referenced in permalinks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/permalinks.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n  - foo\n  - bar\n```\n\n----------------------------------------\n\nTITLE: Disabling Nunjucks Tags in Renderer\nDESCRIPTION: Example showing how to disable Nunjucks tag processing in a custom renderer by setting the disableNunjucks flag.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/renderer.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nfunction lessFn(data, options) {\n  // do something\n}\n\nlessFn.disableNunjucks = true;\n\nhexo.extend.renderer.register(\"less\", \"css\", lessFn);\n```\n\n----------------------------------------\n\nTITLE: Initializing Edgio Hexo Connector\nDESCRIPTION: Command to initialize Edgio with the Hexo connector for deployment setup.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/one-command-deployment.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nedgio init --connector=@edgio/hexo\n```\n\n----------------------------------------\n\nTITLE: HTML Output without Wrapping for Highlight.js\nDESCRIPTION: HTML markup generated by Hexo when using highlight.js with both line_number and wrap disabled, showing the simpler output format.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"yaml\">\n<span class=\"comment\"># _config.yml</span>\n<span class=\"attr\">hexo:</span> <span class=\"string\">hexo</span>\n</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (below v7.0.0)\nDESCRIPTION: Configuration to disable both highlight.js and prismjs in Hexo versions below 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (below v7.0.0)\nDESCRIPTION: Configuration to disable both highlight.js and prismjs in Hexo versions below 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (below v7.0.0)\nDESCRIPTION: Configuration to disable both highlight.js and prismjs in Hexo versions below 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Checking External Link Configuration in JavaScript\nDESCRIPTION: Shows how to check the external link configuration in JavaScript, including a backward-compatible method.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-07-29-hexo-5-released.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n``` js\n<% if (config.external_link) { %>\n```\n```\n\nLANGUAGE: javascript\nCODE:\n```\n``` js\n<% if ((typeof config.external_link === 'boolean' && config.external_link === true) || (typeof config.external_link === 'object' && config.external_link.enable === true)) { %>\n```\n```\n\n----------------------------------------\n\nTITLE: Tag Cloud Helper Examples in Hexo\nDESCRIPTION: Examples of using the tagcloud helper with default options and with a limit on the number of tags to display.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// Default options\n<%- tagcloud() %>\n\n// Limit number of tags to 30\n<%- tagcloud({amount: 30}) %>\n```\n\n----------------------------------------\n\nTITLE: Setting a Path with Buffer Data in Hexo Router\nDESCRIPTION: Shows how to set a path in Hexo's router using a Buffer object.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/router.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Buffer\nhexo.route.set(\"index.html\", new Buffer(\"index\"));\n```\n\n----------------------------------------\n\nTITLE: Displaying Hexo Version\nDESCRIPTION: Shows the version information of Hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo version\n```\n\n----------------------------------------\n\nTITLE: FTPSync Deployment Configuration\nDESCRIPTION: YAML configuration for FTP synchronization deployment including host, credentials, and options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  clear: [true|false]\n  verbose: [true|false]\n```\n\n----------------------------------------\n\nTITLE: Code Block Syntax Options in Markdown\nDESCRIPTION: Shows the three different ways to write code blocks in Hexo: using codeblock tag plugin, code tag plugin, or markdown fenced code blocks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/syntax-highlight.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n\n{% code [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcode %}\n\n```[language] [title] [url] [link text] [additional options]\ncode snippet\n```\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter block defining the page title and layout configuration for the About page.\nSOURCE: https://github.com/hexojs/site/blob/master/source/about/index.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: About\nlayout: about\n---\n```\n\n----------------------------------------\n\nTITLE: Example Post with Excerpt Markup\nDESCRIPTION: Example of a Hexo post showing how excerpt markup is preserved during migration from WordPress or RSS.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-02-cli-4_wordpress-2-1_sitemap-2-1.md#2025-04-10_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\ntitle: foo bar\ndate: 2020-01-01 00:00:00\n---\n\nLorem ipsum [dolor](http://example.com/) sit amet, **nam** ex putant _intellegat_ reprehendunt.\n\n<!-- more -->\n\nCu nulla aeterno nec, tibique deterruisset an eam, ea pro dolorem vituperata.\n```\n\n----------------------------------------\n\nTITLE: Creating a new post with language parameter in Hexo\nDESCRIPTION: This bash command creates a new post with a specified language using Hexo's CLI. The language parameter impacts where the file is saved based on the new_post_name configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/permalinks.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\n----------------------------------------\n\nTITLE: Formatting a Path in Hexo Router\nDESCRIPTION: Shows how to format a string as a valid path using Hexo's router format method. This transforms paths into their canonical form.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/router.md#2025-04-10_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.route.format(\"archives/\");\n// archives/index.html\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions workflow for deploying Hexo site\nDESCRIPTION: This YAML configuration sets up a GitHub Actions workflow to build and deploy a Hexo site to GitHub Pages. It includes steps for checking out the repository, setting up Node.js, caching dependencies, building the site, and deploying to GitHub Pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/github-pages.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: Pages\n\non:\n  push:\n    branches:\n      - main # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 20\n        uses: actions/setup-node@v4\n        with:\n          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n          # Ref: https://github.com/actions/setup-node#supported-version-syntax\n          node-version: \"20\"\n      - name: Cache NPM dependencies\n        uses: actions/cache@v4\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n----------------------------------------\n\nTITLE: Stylus Content Configuration\nDESCRIPTION: Example of using content property in Stylus with disabled Nunjucks processing\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-09-17-hexo-5-2_wordpress-2-1-2_marked-3-2_stylus-2_less-2.md#2025-04-10_snippet_1\n\nLANGUAGE: css\nCODE:\n```\ndiv::before\n  content: \"{{}}\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Filter Execution and Data Modification\nDESCRIPTION: Illustrates how filters can modify data and how multiple filters are executed in sequence. Shows usage of additional arguments in filters.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/filter.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register(\"test\", function (data, arg1, arg2) {\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return \"something\";\n});\n\nhexo.extend.filter.register(\"test\", function (data, arg1, arg2) {\n  // data === 'something'\n});\n\nhexo.extend.filter.exec(\"test\", \"some data\", {\n  args: [\"foo\", \"bar\"],\n});\n```\n\n----------------------------------------\n\nTITLE: Enabling Lazy Loading for Images in hexo-renderer-marked\nDESCRIPTION: Configuration to enable lazy loading of images in hexo-renderer-marked. When enabled, adds loading=\"lazy\" attribute to all image tags, which defers loading of images until they enter the viewport in supported browsers.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmarked:\n  lazyload: true\n```\n\n----------------------------------------\n\nTITLE: Implementing Blockquote Tag Plugin in Hexo\nDESCRIPTION: Shows how to add blockquotes with optional author, source and link information\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/tag-plugins.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n----------------------------------------\n\nTITLE: Running Hexo in Safe Mode\nDESCRIPTION: Disables loading of plugins and scripts in Hexo. Useful for troubleshooting after installing new plugins.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --safe\n```\n\n----------------------------------------\n\nTITLE: Adding a Processor to Box in JavaScript\nDESCRIPTION: Illustrates how to register a new processor with the Box container using the 'addProcessor' method and path matching.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/box.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nbox.addProcessor(\"posts/:id\", function (file) {\n  //\n});\n```\n\n----------------------------------------\n\nTITLE: Adding a Processor to Box Module in JavaScript\nDESCRIPTION: Shows how to add a new processor to the Box module using the 'addProcessor' method. Processors are used to transform files and can be limited to specific file paths using matching patterns.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/api/box.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nbox.addProcessor(\"posts/:id\", function (file) {\n  //\n});\n```\n\n----------------------------------------\n\nTITLE: MathJax Syntax in hexo-math 4.0\nDESCRIPTION: Example of the new syntax for MathJax mathematical expressions in hexo-math 4.0. This shows how to use the tag plugin syntax to render mathematical formulas using MathJax.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n{% mathjax %}\n\\frac{1}{x^2-1}\n{% endmathjax %}\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up the Hexo Site Repository\nDESCRIPTION: Shell commands for cloning the Hexo site repository, navigating to the project directory, and installing dependencies.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/plugins.md#2025-04-10_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ git clone https://github.com/<username>/site.git\n$ cd site\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Running Hexo in Silent Mode\nDESCRIPTION: Silences output to the terminal when running Hexo commands.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/commands.md#2025-04-10_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo --silent\n```\n\n----------------------------------------\n\nTITLE: Using url_for Helper in Hexo\nDESCRIPTION: Shows how to use the url_for helper tag introduced in Hexo 7.0.0 to generate URLs with root path prefixed. Includes examples with relative and non-relative links.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/tag-plugins.md#2025-04-10_snippet_6\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nroot: /blog/ # example\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/blog/index.html\">blog</a>\n```\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nrelative_link: true\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"../../index.html\">blog</a>\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/index.html\">blog</a>\n```\n\n----------------------------------------\n\nTITLE: Implementando um Filtro after_render para Minificação de JavaScript no Hexo\nDESCRIPTION: Este snippet mostra como registrar um filtro after_render para minificar código JavaScript usando UglifyJS após a renderização.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/rendering.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar UglifyJS = require(\"uglify-js\");\n\nhexo.extend.filter.register(\"after_render:js\", function (str, data) {\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n----------------------------------------\n\nTITLE: Disabling Code Block Wrapping in Hexo Highlighting\nDESCRIPTION: Configuration to disable wrapping of code blocks in Hexo's syntax highlighting. When wrap is disabled, code blocks will be rendered without the additional wrapper elements.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nhighlight:\n  wrap: false # defaults to true\n```\n\n----------------------------------------\n\nTITLE: Including External Code Files in Hexo\nDESCRIPTION: Shows how to include code from external files with optional line number ranges\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/tag-plugins.md#2025-04-10_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{% include_code [title] [lang:language] [from:line] [to:line] path/to/file %}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hexo Theme Directory Structure\nDESCRIPTION: Shows the basic required folder structure for a Hexo theme, including configuration, languages, layout, scripts, and source directories.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/themes.md#2025-04-10_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n----------------------------------------\n\nTITLE: Defining Front Matter with Title Variable in Hexo\nDESCRIPTION: This snippet shows the front matter section of a Hexo template page that uses a variable placeholder for the title property. When processed by Hexo, the '{{ title }}' expression will be replaced with the actual title value.\nSOURCE: https://github.com/hexojs/site/blob/master/scaffolds/page.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: {{ title }}\n---\n```\n\n----------------------------------------\n\nTITLE: Previous HTML Structure for Caption with Wrapping Disabled\nDESCRIPTION: Shows the previous HTML structure for code blocks with captions when wrapping was disabled. The caption was rendered as a figcaption element inside the pre element.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<pre>\n<figcaption>caption</figcaption>\n<code></code>\n</pre>\n```\n\n----------------------------------------\n\nTITLE: ENOSPC Error on Linux\nDESCRIPTION: Error message that occurs when the system reaches the limit for the number of files that can be watched.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_20\n\nLANGUAGE: plain\nCODE:\n```\nError: watch ENOSPC ...\n```\n\n----------------------------------------\n\nTITLE: Using Hexo Util Spawn with Array Arguments\nDESCRIPTION: Example of using the spawn utility from hexo-util with array arguments. This shows how to execute a command with arguments passed as an array and handle the returned content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_14\n\nLANGUAGE: js\nCODE:\n```\nspawn('cat', ['test.txt']).then((content) => {\n  console.log(content);\n});\n```\n\n----------------------------------------\n\nTITLE: Using full_url_for Helper in Hexo\nDESCRIPTION: Demonstrates the full_url_for helper tag (available since Hexo 7.0.0) that returns a URL with the config.url prefixed. The output is automatically encoded.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/tag-plugins.md#2025-04-10_snippet_7\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nurl: https://example.com/blog # example\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://example.com/blog/a/path\">index</a>\n```\n\n----------------------------------------\n\nTITLE: Installing hexo-tag-embed Package for Hexo 7.0.0\nDESCRIPTION: Command to install the hexo-tag-embed package, which provides support for gist, youtube, jsfiddle, and vimeo tags that were removed in Hexo 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2023-11-03-hexo-7-0-0-released.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ npm i hexo-tag-embed\n```\n\n----------------------------------------\n\nTITLE: Less Path Globbing Configuration\nDESCRIPTION: Example of configuring Less path globbing patterns in Hexo configuration\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-09-17-hexo-5-2_wordpress-2-1-2_marked-3-2_stylus-2_less-2.md#2025-04-10_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nless:\n  paths:\n    - '**/css/variables/*'\n```\n\n----------------------------------------\n\nTITLE: Template Render Error\nDESCRIPTION: Generic error that occurs during site generation when there are problems with template rendering.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/troubleshooting.md#2025-04-10_snippet_24\n\nLANGUAGE: plain\nCODE:\n```\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nTemplate render error: (unknown path)\n```\n\n----------------------------------------\n\nTITLE: Installing OpenShift Deployment Plugin for Hexo\nDESCRIPTION: Command to install the hexo-deployer-openshift plugin, which is necessary for OpenShift-based deployments in Hexo. Note that this plugin has been deprecated as of 2022.\nSOURCE: https://github.com/hexojs/site/blob/master/source/docs/one-command-deployment.md#2025-04-10_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-deployer-openshift --save\n```\n\n----------------------------------------\n\nTITLE: Hexo Git Deployer Configuration\nDESCRIPTION: YAML configuration for the hexo-deployer-git plugin that enables one-command deployment to GitHub Pages. This configuration specifies the repository URL and target branch for deployment.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/github-pages.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: git\n  repo: https://github.com/<username>/<project>\n  # example, https://github.com/hexojs/hexojs.github.io\n  branch: gh-pages\n```\n\n----------------------------------------\n\nTITLE: Configuring Vercel Build Script for Hexo\nDESCRIPTION: Package.json configuration for Vercel deployment, adding the required build script to generate Hexo static files.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/one-command-deployment.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build\": \"hexo generate\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo Without Optional Dependencies\nDESCRIPTION: npm command to install Hexo without optional dependencies, which can help resolve issues with DTrace on macOS.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo --no-optional\n```\n\n----------------------------------------\n\nTITLE: Using Translation Helpers in JavaScript Templates\nDESCRIPTION: Demonstrates how to use the __ and _p helpers in templates to translate strings. The __ helper is for regular translations, while _p is for plural forms.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/internationalization.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Hexo Data Models in Templates\nDESCRIPTION: Example of how to properly iterate over Hexo data models in Jade or Swig templates by converting them to arrays.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/troubleshooting.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Accessing Helpers from Other Hexo Extensions\nDESCRIPTION: Code showing how to properly retrieve and use a helper function from another extension such as filters or injectors. This binds the hexo context to the helper function so it works correctly.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/helper.md#2025-04-10_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nconst url_for = hexo.extend.helper.get(\"url_for\").bind(hexo);\n```\n\n----------------------------------------\n\nTITLE: Increasing File Descriptor Limit on Unix Systems\nDESCRIPTION: Shows the command to increase the maximum number of open files to resolve EMFILE errors.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ ulimit -n 10000\n```\n\n----------------------------------------\n\nTITLE: Enabling PrismJS in Hexo (below v7.0.0)\nDESCRIPTION: Configuration to enable prismjs and disable highlight.js in Hexo versions below 7.0.0, with various prismjs options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: true\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring System-wide File Descriptor Limits\nDESCRIPTION: Provides steps to permanently increase file descriptor limits on systemd-based Linux distributions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n* - nofile 10000\n\nsession required pam_limits.so\n\nDefaultLimitNOFILE=10000\n```\n\n----------------------------------------\n\nTITLE: Escaping Content in Hexo Templates\nDESCRIPTION: Shows how to escape content containing Nunjucks syntax in Hexo templates.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{% raw %}\nHello {{ world }}\n{% endraw %}\n```\n\n----------------------------------------\n\nTITLE: Clearing Hexo Cache\nDESCRIPTION: Shows the command to clear Hexo's cache when data is not updating properly.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/troubleshooting.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo clean\n```\n\n----------------------------------------\n\nTITLE: Injecting CSS and JavaScript Resources\nDESCRIPTION: Example showing how to inject CSS and JavaScript resources into specific page layouts using the injector API.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/injector.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\nconst js = hexo.extend.helper.get(\"js\").bind(hexo);\n\nhexo.extend.injector.register(\n  \"head_end\",\n  () => {\n    return css(\n      \"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css\",\n    );\n  },\n  \"music\",\n);\n\nhexo.extend.injector.register(\n  \"body_end\",\n  '<script src=\"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js\">',\n  \"music\",\n);\n\nhexo.extend.injector.register(\"body_end\", () => {\n  return js(\"/js/jquery.js\");\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo Without Optional Dependencies\nDESCRIPTION: Command to install Hexo without optional dependencies to avoid DTrace-related errors on macOS.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo --no-optional\n```\n\n----------------------------------------\n\nTITLE: Accessing User Configuration - Direct Method\nDESCRIPTION: Example showing how to access user configuration directly within the injector callback.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/injector.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\n\nhexo.extend.injector.register(\"head_end\", () => {\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Hexo Version to package.json\nDESCRIPTION: Example of adding the Hexo version to package.json to resolve issues where Hexo commands are not executed.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/troubleshooting.md#2025-04-10_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hexo\": {\n    \"version\": \"3.2.2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing User Configuration - Module Pattern\nDESCRIPTION: Example showing how to access user configuration using a separate module file.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/injector.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n/* global hexo */\n\nhexo.extend.injector.register(\"head_end\", require(\"./lib/inject\").bind(hexo));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = function () {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n};\n```\n\nLANGUAGE: javascript\nCODE:\n```\nfunction injectFn() {\n  const css = this.extend.helper.get(\"css\");\n  const { cssPath } = this.config.fooPlugin;\n  return css(cssPath);\n}\n\nmodule.exports = injectFn;\n```\n\n----------------------------------------\n\nTITLE: Creating Post Excerpts in Hexo\nDESCRIPTION: Shows how to create post excerpts by placing content before the <!-- more --> tag. This approach is useful for showing summaries on index pages.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/tag-plugins.md#2025-04-10_snippet_8\n\nLANGUAGE: html\nCODE:\n```\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n<!-- more -->\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n```\n\n----------------------------------------\n\nTITLE: Unregistering a Hexo Filter\nDESCRIPTION: Shows how to unregister a previously registered filter. Provides the API for removing a filter based on its type and function reference.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.unregister(type, filter);\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (pre-v7.0.0)\nDESCRIPTION: YAML configuration to disable both highlight.js and PrismJS in Hexo versions before 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Implementing an after_init Filter in Hexo\nDESCRIPTION: Example showing how to register a filter that runs after Hexo initialization completes. This executes after hexo.init finishes but before other operations.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_13\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"after_init\", function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (v7.0.0+)\nDESCRIPTION: YAML configuration to disable syntax highlighting in Hexo versions 7.0.0 and above by leaving the syntax_highlighter option empty.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: # empty\n```\n\n----------------------------------------\n\nTITLE: Getting Path Data with Stream in Hexo Router\nDESCRIPTION: Demonstrates how to retrieve path data using the get method which returns a Stream. Shows piping the data to a destination file stream.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/router.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar data = hexo.route.get(\"index.html\");\nvar dest = fs.createWriteStream(\"somewhere\");\n\ndata.pipe(dest);\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting in Hexo (v7.0.0+)\nDESCRIPTION: Configuration to disable syntax highlighting in Hexo versions 7.0.0 and above by setting syntax_highlighter to empty.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/syntax-highlight.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nsyntax_highlighter: # empty\n```\n\n----------------------------------------\n\nTITLE: Creating an Archive Page in Hexo\nDESCRIPTION: Demonstrates how to create an archive page at 'archives/index.html'. It passes all posts as data to the templates and specifies multiple layout options for rendering.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/generator.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.generator.register(\"archive\", function (locals) {\n  return {\n    path: \"archives/index.html\",\n    data: locals,\n    layout: [\"archive\", \"index\"],\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Highlight.js Configuration (below v7.0.0)\nDESCRIPTION: YAML configuration example for Hexo's highlight.js syntax highlighting in versions prior to 7.0.0, showing default settings for highlighting code blocks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n  preprocess: true\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Console Command Usage in Hexo\nDESCRIPTION: Shows how to specify the usage pattern for a console command using the 'usage' option. This helps users understand how to correctly invoke the command.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/console.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  usage: \"[layout] <title>\";\n}\n// hexo new [layout] <title>\n```\n\n----------------------------------------\n\nTITLE: Example of Markdown Code Block and HTML Output\nDESCRIPTION: Shows how a YAML code block written in Markdown gets rendered to HTML when no built-in syntax highlighting is enabled.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/syntax-highlight.md#2025-04-10_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n```yaml\nhello: hexo\n```\n```\n\nLANGUAGE: html\nCODE:\n```\n<pre>\n  <code class=\"yaml\">hello: hexo</code>\n</pre>\n```\n\n----------------------------------------\n\nTITLE: Executing Hexo List Command with Arguments\nDESCRIPTION: Shows how to call the 'list' command with specific arguments. The underscore property in the options object contains an array of command arguments.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/index.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.call(\"list\", { _: [\"post\"] }).then(function () {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Using JSON Format in Hexo Front-matter\nDESCRIPTION: Example of how to write Front-matter in JSON format, which should be placed at the beginning of the file and ended with three semicolons.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/front-matter.md#2025-04-10_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n----------------------------------------\n\nTITLE: Using Conditional Helpers in Hexo\nDESCRIPTION: Conditional helpers like is_current, is_home, is_post, etc. check the current page state to conditionally render content in templates.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_11\n\nLANGUAGE: js\nCODE:\n```\n<%- is_current(path, [strict]) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- is_home() %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- is_home_first_page() %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- is_post() %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- is_page() %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- is_archive() %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- is_year() %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- is_month() %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- is_category() %>\n<%- is_category('hobby') %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- is_tag() %>\n<%- is_tag('hobby') %>\n```\n\n----------------------------------------\n\nTITLE: Inserting Time Tags with time_tag Helper in Hexo\nDESCRIPTION: The time_tag helper inserts HTML time tags. It accepts a date parameter which can be a UNIX timestamp, ISO string, Date object, or Moment.js object. The format parameter is optional and defaults to the date_format configuration.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<%- time_tag(date, [format]) %>\n```\n\n----------------------------------------\n\nTITLE: Using String Manipulation Helpers in Hexo\nDESCRIPTION: String manipulation helpers like trim, strip_html, titlecase, and markdown provide utilities for text processing in templates.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_12\n\nLANGUAGE: js\nCODE:\n```\n<%- trim(string) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- strip_html(string) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- strip_html('It\\'s not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- titlecase(string) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- markdown(str) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n----------------------------------------\n\nTITLE: List Tags Helper Examples in Hexo\nDESCRIPTION: Examples of using the list_tags helper with various configurations, including custom class names and styles for displaying tag lists in different formats.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-cn/docs/helpers.md#2025-04-10_snippet_5\n\nLANGUAGE: ejs\nCODE:\n```\n<%- list_tags(site.tags, {class: 'classtest', style: false, separator: ' | '}) %>\n<%- list_tags(site.tags, {class: 'classtest', style: 'list'}) %>\n<%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: false, separator: ' | '}) %>\n<%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: 'list'}) %>\n```\n\n----------------------------------------\n\nTITLE: Configuring highlight.js in Hexo (pre-v7.0.0)\nDESCRIPTION: YAML configuration for using highlight.js as the syntax highlighter in Hexo versions prior to 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/syntax-highlight.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"  \"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: Inserting XML Formatted Date in Hexo\nDESCRIPTION: This function inserts an XML formatted date. The 'date' parameter can be a UNIX timestamp, ISO string, Date object, or Moment.js object.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/helpers.md#2025-04-10_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date_xml(date) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n----------------------------------------\n\nTITLE: Configuring highlight.js in Hexo (pre-v7.0.0)\nDESCRIPTION: YAML configuration for using highlight.js as the syntax highlighter in Hexo versions before 7.0.0.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ru/docs/syntax-highlight.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nhighlight:\n  enable: true\n  auto_detect: false\n  line_number: true\n  line_threshold: 0\n  tab_replace: \"  \"\n  exclude_languages:\n    - example\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n```\n\n----------------------------------------\n\nTITLE: SFTP Deployment Configuration\nDESCRIPTION: YAML configuration for SFTP deployment including host, credentials, and SSH options.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/docs/one-command-deployment.md#2025-04-10_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy:\n  type: sftp\n  host: <host>\n  user: <user>\n  pass: <password>\n  remotePath: [remote path]\n  port: [port]\n  privateKey: [path/to/privateKey]\n  passphrase: [passphrase]\n  agent: [path/to/agent/socket]\n```\n\n----------------------------------------\n\nTITLE: Path Matching Examples in Plaintext\nDESCRIPTION: Shows examples of Express-style pattern strings used for path matching in Box.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/box.md#2025-04-10_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\n----------------------------------------\n\nTITLE: Caching Content Fragments in Hexo (JavaScript)\nDESCRIPTION: Demonstrates the fragment_cache helper function in Hexo. This function caches the contents in a fragment, improving response times for related requests by storing content in a cache.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/helpers.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n<%- fragment_cache(id, fn);\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Post in Hexo with JavaScript\nDESCRIPTION: This function creates a new post in Hexo with the specified data. The data parameter can include attributes like title, slug, layout, path, and date. The replace parameter determines whether existing files should be overwritten.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/posts.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.post.create(data, replace);\n```\n\n----------------------------------------\n\nTITLE: Listing Categories in Hexo (JavaScript)\nDESCRIPTION: Explains the list_categories helper function in Hexo. This function inserts a list of all categories with various options for ordering, styling, and customization of the output.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/helpers.md#2025-04-10_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_categories([options]) %>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<%- list_categories(post.categories, {\n  class: 'post-category',\n  transform(str) {\n    return titlecase(str);\n  }\n}) %>\n\n<%- list_categories(post.categories, {\n  class: 'post-category',\n  transform(str) {\n    return str.toUpperCase();\n  }\n}) %>\n```\n\n----------------------------------------\n\nTITLE: Synchronous Renderer for EJS in Hexo (JavaScript)\nDESCRIPTION: This example shows how to register a synchronous renderer for EJS files in Hexo. It uses the EJS library to render the content and returns the result directly.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/api/renderer.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar ejs = require(\"ejs\");\n\nhexo.extend.renderer.register(\n  \"ejs\",\n  \"html\",\n  function (data, options) {\n    options.filename = data.path;\n    return ejs.render(data.text, options);\n  },\n  true\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Edgio CLI\nDESCRIPTION: Command to install the Edgio (formerly Layer0) CLI globally using npm.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/one-command-deployment.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g @edgio/cli\n```\n\n----------------------------------------\n\nTITLE: Creating a Feature Branch for Hexo Development\nDESCRIPTION: Command for creating a new git branch to develop a new feature in Hexo, following the branching workflow process.\nSOURCE: https://github.com/hexojs/site/blob/master/source/th/docs/contributing.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git checkout -b new_feature\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot Exclusion Rules for Hexo Themes\nDESCRIPTION: This robots.txt configuration prevents web crawlers from accessing specific Hexo theme directories. It applies to all user agents and disallows access to the landscape, light, and phase themes.\nSOURCE: https://github.com/hexojs/site/blob/master/source/robots.txt#2025-04-10_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow: /hexo-theme-landscape/\nDisallow: /hexo-theme-light/\nDisallow: /hexo-theme-phase/\n```\n\n----------------------------------------\n\nTITLE: Removing a Theme View in Hexo (JavaScript)\nDESCRIPTION: Removes a view from the Hexo theme object at the specified path.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ja/api/themes.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.theme.removeView(path);\n```\n\n----------------------------------------\n\nTITLE: Using feed_tag Helper in Hexo\nDESCRIPTION: The feed_tag helper inserts a feed link with options for title and type. It defaults to hexo-generator-feed's configuration if no arguments are provided.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/docs/helpers.md#2025-04-10_snippet_10\n\nLANGUAGE: js\nCODE:\n```\n<%- feed_tag(path, [options]) %>\n```\n\nLANGUAGE: js\nCODE:\n```\n<%- feed_tag('atom.xml') %>\n// <link rel=\"alternate\" href=\"/atom.xml\" title=\"Hexo\" type=\"application/atom+xml\">\n\n<%- feed_tag('rss.xml', { title: 'RSS Feed', type: 'rss' }) %>\n// <link rel=\"alternate\" href=\"/atom.xml\" title=\"RSS Feed\" type=\"application/atom+xml\">\n\n/* Defaults to hexo-generator-feed's config if no argument */\n<%- feed_tag() %>\n// <link rel=\"alternate\" href=\"/atom.xml\" title=\"Hexo\" type=\"application/atom+xml\">\n```\n\n----------------------------------------\n\nTITLE: Renderizando uma String com Engine Específica em JavaScript\nDESCRIPTION: Este snippet demonstra como renderizar uma string usando o método assíncrono hexo.render.render, especificando a engine 'swig'.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/api/rendering.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.render.render({ text: \"example\", engine: \"swig\" }).then(function (result) {\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing an after_clean Filter in Hexo\nDESCRIPTION: Example showing how to register a filter that runs after the clean command completes. This allows removing additional temporary files after Hexo cleans generated files and cache.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/filter.md#2025-04-10_snippet_16\n\nLANGUAGE: js\nCODE:\n```\nhexo.extend.filter.register(\"after_clean\", function () {\n  // remove some other temporary files\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing JavaScript Minifier with after_render Filter in Hexo\nDESCRIPTION: Demonstrates how to use the after_render filter to implement a JavaScript minifier using UglifyJS.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/rendering.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar UglifyJS = require(\"uglify-js\");\n\nhexo.extend.filter.register(\"after_render:js\", function (str, data) {\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n----------------------------------------\n\nTITLE: Using Fragment Caching with Partial Helper in Hexo 2.7 JavaScript\nDESCRIPTION: Shows how to enable Fragment Caching when using the partial helper by adding the {cache: true} option. This allows for caching of partial content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-06-14-hexo-2-7-released.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<%- partial('header', {}, {cache: true}) %>\n```\n\n----------------------------------------\n\nTITLE: Adding Processors to Box Container in JavaScript\nDESCRIPTION: Shows how to register a new processor with path matching using the addProcessor method. Processors are used to handle file content matching specific patterns.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/box.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nbox.addProcessor(\"posts/:id\", function (file) {\n  //\n});\n```\n\n----------------------------------------\n\nTITLE: Publishing Drafts in Hexo CLI\nDESCRIPTION: Command line syntax for publishing drafts with optional layout parameter in Hexo 2.8.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-07-13-hexo-2-8-released.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo publish [layout] <filename>\n```\n\n----------------------------------------\n\nTITLE: Stylus Renderer Filter Configuration\nDESCRIPTION: Example of using Hexo's filter API to interact with Stylus API for defining variables and functions\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-09-17-hexo-5-2_wordpress-2-1-2_marked-3-2_stylus-2_less-2.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.filter.register('stylus:renderer', function(style) {\n  style\n    // we may define a global variable by passing a `Node`\n    .define('has-canvas', require('stylus').nodes.false);\n    // stylus also casts JavaScript values to their Stylus equivalents when possible\n    .define('families', ['Helvetica Neue', 'Helvetica', 'sans-serif'])\n    // also allows you to provide a JavaScript-defined function to Stylus\n    .define('get-list', function() {\n      return ['foo', 'bar', 'baz'];\n    });\n})\n```\n\n----------------------------------------\n\nTITLE: Multi-language Permalink Configuration\nDESCRIPTION: YAML configuration for setting up multi-language support in permalinks.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2014-07-13-hexo-2-8-released.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\npermalink: :lang/:title/\nnew_post_name: :lang/:title.md\n```\n\n----------------------------------------\n\nTITLE: Less CSS Content Configuration\nDESCRIPTION: Example of using content property in Less CSS with disabled Nunjucks processing\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-09-17-hexo-5-2_wordpress-2-1-2_marked-3-2_stylus-2_less-2.md#2025-04-10_snippet_3\n\nLANGUAGE: css\nCODE:\n```\ndiv::before {\n  content: \"{{}}\";\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Package.json for Hexo 3.0\nDESCRIPTION: JSON configuration required in package.json for Hexo 3.0 upgrade\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2015-03-05-hexo-3-0-released.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hexo\": {\n    \"version\": \"\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Prism.js Highlighting in Hexo\nDESCRIPTION: YAML configuration for enabling Prism.js syntax highlighting in Hexo while disabling the default highlighter. This configuration is used in _config.yml to switch from the built-in highlighter to Prism.js.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nhighlight:\n  enable: false\nprismjs:\n  enable: true\n```\n\n----------------------------------------\n\nTITLE: Installing Hexo Plugin Dependencies\nDESCRIPTION: Series of commands to install various Hexo plugins including generators, deployers, and servers\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2015-03-05-hexo-3-0-released.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install hexo-server --save\n$ npm install hexo-generator-index --save\n$ npm install hexo-generator-archive --save\n$ npm install hexo-generator-category --save\n$ npm install hexo-generator-tag --save\n$ npm install hexo-deployer-git --save\n$ npm install hexo-deployer-heroku --save\n$ npm install hexo-deployer-rsync --save\n$ npm install hexo-deployer-openshift --save\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Caption with Wrapping Disabled\nDESCRIPTION: Shows the HTML structure for code blocks with captions when wrapping is disabled in Hexo's syntax highlighting. The caption is rendered as a div with class 'caption' inside the pre element.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<pre>\n<div class=\"caption\">caption</div>\n<code></code>\n</pre>\n```\n\n----------------------------------------\n\nTITLE: Implementing EJS Template Precompilation in Hexo\nDESCRIPTION: Example implementation of template precompilation for the EJS renderer, showing how to add compilation support for improved performance\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2016-02-28-hexo-3-2-released.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar ejs = require('ejs');\nvar assign = require('object-assign');\n\nfunction ejsRenderer(data, locals) {\n  return ejs.render(data.text, assign({filename: data.path}, locals));\n}\n\nejsRenderer.compile = function(data) {\n  return ejs.compile(data.text, {\n    filename: data.path\n  });\n};\n\nmodule.exports = ejsRenderer;\n```\n\n----------------------------------------\n\nTITLE: Escaping Swig Tag Inside Post in Hexo\nDESCRIPTION: Demonstrates how swig tags inside single backticks are now interpreted as code embeds in Hexo posts.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-07-29-hexo-5-released.md#2025-04-10_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<pre><code>`{% foo %}{{ bar }}{% endfoo %}`</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Using isExternalLink Function in Hexo-util\nDESCRIPTION: Example of using the updated isExternalLink function which now requires passing site config or URL as a parameter instead of binding to hexo.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-11-28-hexo-util1-6_hexo-generator-feed-2-2_hexo-uglify-1-1.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nisExternalLink('https://example.com', hexo.config.url);\n```\n\n----------------------------------------\n\nTITLE: Configuring New Default Settings for hexo-renderer-markdown-it in YAML\nDESCRIPTION: This snippet shows the new default configuration for hexo-renderer-markdown-it 4.0.0. It includes settings for HTML rendering, typographic features, and anchor link generation.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-15-hexo-renderer-markdown-it-4.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '\"\"'''\n  plugins:\n  anchors:\n    level: 2\n    collisionSuffix: ''\n    permalink: false\n    permalinkClass: 'header-anchor'\n    permalinkSymbol: '¶'\n    case: 0\n    separator: '-'\n```\n\n----------------------------------------\n\nTITLE: Custom Feed Template Configuration\nDESCRIPTION: YAML configuration for setting up a custom template path in hexo-generator-feed plugin.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-11-28-hexo-util1-6_hexo-generator-feed-2-2_hexo-uglify-1-1.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nfeed:\n  template: './path/to/template'\n```\n\n----------------------------------------\n\nTITLE: HTML Tag Usage Example with Disabled Escape in hexo-util\nDESCRIPTION: Example of using the htmlTag function from hexo-util with the escape option disabled. This demonstrates the new default behavior in hexo-util 1.3.0 where HTML is escaped by default, but can be disabled by passing false as the fourth argument.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-09-27-warehouse-3_hexo-util-1-3-1.md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhtmlTag('a', {href: 'http://foo.com/'}, '<b>bold</b>', false)\n```\n\n----------------------------------------\n\nTITLE: Configuring Post Permalink Format in Hexo\nDESCRIPTION: Example of configuring the permalink structure in _config.yml to include hour and minute in post URLs. This enables more granular URL timestamps.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-09-hexo-4-1-released.md#2025-04-10_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\npermalink: :year/:month/:day/:hour/:minute/:title/\n```\n\n----------------------------------------\n\nTITLE: Unregistering a Hexo Tag Plugin\nDESCRIPTION: Shows how to unregister an existing tag plugin and replace it with a custom function. This example unregisters and re-registers the 'youtube' tag.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/tag.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst tagFn = (args, content) => {\n  content = \"something\";\n  return content;\n};\n\n// https://hexo.io/docs/tag-plugins#YouTube\nhexo.extend.tag.unregister(\"youtube\");\n\nhexo.extend.tag.register(\"youtube\", tagFn);\n```\n\n----------------------------------------\n\nTITLE: Using Code Block Tag Plugin with Wrap Option\nDESCRIPTION: Example of using the codeblock tag plugin with wrap option disabled for custom code formatting.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-09-hexo-4-1-released.md#2025-04-10_snippet_5\n\nLANGUAGE: js\nCODE:\n```\n{% codeblock lang:js wrap:false %}\nconst foo = (bar) => {\n  return bar;\n};\n{% endcodeblock %}\n```\n\n----------------------------------------\n\nTITLE: Accessing User Configuration in Hexo Injector\nDESCRIPTION: Demonstrates how to access user configuration within an injector function. This example shows how to retrieve a CSS path from the plugin configuration and use it in the injector.\nSOURCE: https://github.com/hexojs/site/blob/master/source/zh-tw/api/injector.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst css = hexo.extend.helper.get(\"css\").bind(hexo);\n\nhexo.extend.injector.register(\"head_end\", () => {\n  const { cssPath } = hexo.config.fooPlugin;\n  return css(cssPath);\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Previous Default Settings for hexo-renderer-markdown-it in YAML\nDESCRIPTION: This snippet displays the previous default configuration for hexo-renderer-markdown-it, specifically focusing on the anchor settings that have been changed in the new version.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-15-hexo-renderer-markdown-it-4.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown:\n  anchors:\n    permalink: true\n    level: 1\n    collisionSuffix: 'v'\n    case: 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Root Path in Hexo _config.yml\nDESCRIPTION: Example configuration in _config.yml that sets the root path for the Hexo site. This affects how url_for generates URLs.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/docs/tag-plugins.md#2025-04-10_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\n_config.yml\nroot: /blog/ # example\n```\n\n----------------------------------------\n\nTITLE: Enabling Official markdown-it Plugins in YAML Configuration\nDESCRIPTION: This snippet shows how to enable the official markdown-it plugins that are now included in hexo-renderer-markdown-it 4.0.0. These plugins provide additional Markdown features but are disabled by default.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-15-hexo-renderer-markdown-it-4.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown:\n  plugins:\n    - markdown-it-abbr\n    - markdown-it-cjk-breaks\n    - markdown-it-container\n    - markdown-it-deflist\n    - markdown-it-emoji\n    - markdown-it-footnote\n    - markdown-it-ins\n    - markdown-it-mark\n    - markdown-it-sub\n    - markdown-it-sup\n```\n\n----------------------------------------\n\nTITLE: Setting Routes in Hexo Router with Functions\nDESCRIPTION: Demonstrates setting routes using functions that return data via Promise or callback. This approach allows for dynamic content generation or asynchronous operations when setting route content.\nSOURCE: https://github.com/hexojs/site/blob/master/source/ko/api/router.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Function (Promise)\nhexo.route.set(\"index.html\", function () {\n  return new Promise(function (resolve, reject) {\n    resolve(\"index\");\n  });\n});\n\n// Function (Callback)\nhexo.route.set(\"index.html\", function (callback) {\n  callback(null, \"index\");\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring New Anchor Options in YAML for hexo-renderer-markdown-it\nDESCRIPTION: This snippet shows the new options available for configuring anchors in hexo-renderer-markdown-it 4.0.0. It allows for case transformation of anchors and customization of the separator character.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-15-hexo-renderer-markdown-it-4.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown:\n  anchors:\n    case: 0 # Set to 1 to transform anchors to lowercase, 2 for uppercase\n    separator: '-' # Replace the space with a dash, can be any character\n```\n\n----------------------------------------\n\nTITLE: Setting a Hexo Scaffold in JavaScript\nDESCRIPTION: This function sets the content of a scaffold with the given name. If the scaffold doesn't exist, it will be created. It's used to create or update scaffold templates.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/scaffolds.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.scaffold.set(name, content);\n```\n\n----------------------------------------\n\nTITLE: Configuring Server Cache in Hexo\nDESCRIPTION: YAML configuration to enable caching in hexo-server for production environments.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2019-12-22-hexo-4.2_hexo-util-1-8_eslint-config-hexo-released.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n_config.yml\nserver:\n  cache: true\n```\n\n----------------------------------------\n\nTITLE: Removing a Hexo Scaffold in JavaScript\nDESCRIPTION: This function removes a scaffold by its name. It's used to delete existing scaffold templates from the Hexo project.\nSOURCE: https://github.com/hexojs/site/blob/master/source/es/api/scaffolds.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.scaffold.remove(name);\n```\n\n----------------------------------------\n\nTITLE: Configuring permalink side in hexo-renderer-markdown-it\nDESCRIPTION: This YAML configuration snippet demonstrates how to set the 'permalinkSide' option to 'right' in the markdown renderer settings. This appends the permalink symbol to the end of each heading instead of prepending it.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-03-08-hexo-renderer-markdown-it-4-1-0-hexo-util-1-9-0-released.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown:\n  anchors:\n    permalink: true\n    permalinkSide: 'right'\n```\n\n----------------------------------------\n\nTITLE: Defining Console Command Usage Pattern\nDESCRIPTION: Example showing how to define the usage pattern for a console command using the options object.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/console.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  usage: \"[layout] <title>\";\n}\n// hexo new [layout] <title>\n```\n\n----------------------------------------\n\nTITLE: Migrating WordPress Content with Image Import\nDESCRIPTION: Command to migrate WordPress content to Hexo with option to import all image attachments including resized versions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-02-cli-4_wordpress-2-1_sitemap-2-1.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ hexo migrate wordpress /path/export.xml --import-image\n```\n\n----------------------------------------\n\nTITLE: Defining Console Command Options\nDESCRIPTION: Example showing how to define command options with flags and descriptions.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/console.md#2025-04-10_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  options: [{ name: \"-r, --replace\", desc: \"Replace existing files\" }];\n}\n```\n\n----------------------------------------\n\nTITLE: Deprecated Plugins Configuration in Hexo\nDESCRIPTION: Example of the deprecated plugins configuration in Hexo's _config.yml file. This configuration method has been completely dropped and plugins should now be saved in the scripts/ folder or installed via npm.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# _config.yml\nplugins:\n```\n\n----------------------------------------\n\nTITLE: Complete Console Command Example\nDESCRIPTION: Full example of registering a console command that displays configuration information.\nSOURCE: https://github.com/hexojs/site/blob/master/source/api/console.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nhexo.extend.console.register(\n  \"config\",\n  \"Display configuration\",\n  function (args) {\n    console.log(hexo.config);\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Using Captions in Code Blocks with Wrapping Disabled\nDESCRIPTION: Example of how to use captions in code blocks when wrapping is disabled in Hexo's syntax highlighting. This shows the markdown syntax for adding a caption to a JavaScript code block.\nSOURCE: https://github.com/hexojs/site/blob/master/source/_posts/2020-08-22-hexo-5-1_marked-3-1_math-4_util-2-4.md#2025-04-10_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n```js caption\nconst hi = 'bob'\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Hexo for Markdown Image Embedding\nDESCRIPTION: This YAML configuration enables automatic resolution of image paths in markdown, allowing direct embedding of images without using tag plugins. It requires hexo-renderer-marked 3.1.0 or later.\nSOURCE: https://github.com/hexojs/site/blob/master/source/pt-br/docs/asset-folders.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```"
  }
]
[
  {
    "owner": "primer",
    "repo": "brand",
    "content": "TITLE: Installing Primer Brand React Package\nDESCRIPTION: Command to install the @primer/react-brand package using npm package manager. This is required to use Primer Brand React components in your project.\nSOURCE: https://github.com/primer/brand/blob/main/README.md#2025-04-12_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @primer/react-brand\n```\n\n----------------------------------------\n\nTITLE: Rendering Buttons with Icons in JSX\nDESCRIPTION: Shows how to add icons to the Button component using the 'leadingVisual' and 'trailingVisual' props. It's recommended to use Octicons for the icons.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"vertical\" alignItems=\"flex-start\">\n  <Button leadingVisual={<SearchIcon />}>Search</Button>\n  <Button trailingVisual={<ChevronDownIcon />}>Select</Button>\n  <Button leadingVisual={<FilterIcon />} trailingVisual={<ChevronDownIcon />}>\n    Filter\n  </Button>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Configuring ThemeProvider in React\nDESCRIPTION: This snippet demonstrates how to wrap a React application with the ThemeProvider component from Primer Brand to enable theming functionality.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/theming.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {ThemeProvider} from '@primer/react-brand'\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <div>...</div>\n    </ThemeProvider>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Hero Component with Images in React\nDESCRIPTION: Shows how to include images in the Hero component and demonstrates different image positioning options.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Hero/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Hero>\n    <Hero.Label>Actions</Hero.Label>\n    <Hero.Heading>Automate your workflow from idea to production</Hero.Heading>\n    <Hero.PrimaryAction href=\"#\">Get started with Actions</Hero.PrimaryAction>\n    <Hero.Image\n      src=\"/brand/assets/placeholder.png\"\n      alt=\"placeholder, blank area with a gray background color\"\n    />\n  </Hero>\n  <br />\n  <Hero align=\"center\">\n    <Hero.Label>Actions</Hero.Label>\n    <Hero.Heading size=\"2\">\n      Automate your workflow from idea to production\n    </Hero.Heading>\n    <Hero.PrimaryAction href=\"#\">Get started with Actions</Hero.PrimaryAction>\n    <Hero.Image\n      position=\"inline-end\"\n      src=\"/brand/assets/placeholder.png\"\n      alt=\"placeholder, blank area with a gray background color\"\n      style={{height: '100%'}}\n    />\n  </Hero>\n</>\n```\n\n----------------------------------------\n\nTITLE: Interactive Stack Alignment Example in React\nDESCRIPTION: A complex example showing how to use Stack with adjustable alignment props. It includes form controls to dynamically change alignItems and justifyContent values.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Stack/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const [alignItemsValue, setAlignItemsValue] = React.useState('center')\n  const [justifyContentValue, setJustifyContentValue] =\n    React.useState('space-between')\n\n  const handleMainAxisChange = (event) =>\n    setJustifyContentValue(event.target.value)\n  const handleCrossAxisChange = (event) =>\n    setAlignItemsValue(event.target.value)\n\n  return (\n    <Container>\n      <Stack\n        direction=\"horizontal\"\n        alignItems={alignItemsValue}\n        justifyContent={justifyContentValue}\n        style={{height: 400}}\n      >\n        <img\n          src=\"/brand/assets/placeholder.png\"\n          alt=\"placeholder with gray background and no foreground text\"\n          style={{width: 150, height: 75}}\n        />\n        <img\n          src=\"/brand/assets/placeholder.png\"\n          alt=\"placeholder with gray background and no foreground text\"\n          style={{width: 150, height: 75}}\n        />\n        <img\n          src=\"/brand/assets/placeholder.png\"\n          alt=\"placeholder with gray background and no foreground text\"\n          style={{width: 150, height: 75}}\n        />\n      </Stack>\n\n      <Stack direction=\"horizontal\" gap=\"spacious\" justifyContent=\"center\">\n        <FormControl>\n          <FormControl.Label>Main axis</FormControl.Label>\n          <Select\n            defaultValue={justifyContentValue}\n            onChange={handleMainAxisChange}\n          >\n            <Select.Option value=\"center\">center</Select.Option>\n            <Select.Option value=\"flex-start\">flex-start</Select.Option>\n            <Select.Option value=\"flex-end\">flex-end</Select.Option>\n            <Select.Option value=\"space-between\">space-between</Select.Option>\n            <Select.Option value=\"space-around\">space-around</Select.Option>\n            <Select.Option value=\"space-evenly\">space-evenly</Select.Option>\n          </Select>\n        </FormControl>\n\n        <FormControl>\n          <FormControl.Label>Cross axis</FormControl.Label>\n          <Select\n            defaultValue={alignItemsValue}\n            onChange={handleCrossAxisChange}\n          >\n            <Select.Option value=\"center\">center</Select.Option>\n            <Select.Option value=\"flex-start\">flex-start</Select.Option>\n            <Select.Option value=\"flex-end\">flex-end</Select.Option>\n          </Select>\n        </FormControl>\n      </Stack>\n    </Container>\n  )\n}\n\nrender(App)\n```\n\n----------------------------------------\n\nTITLE: Installing Primer Brand Package\nDESCRIPTION: Install the Primer Brand package using npm package manager\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/introduction.mdx#2025-04-12_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @primer/react-brand\n```\n\n----------------------------------------\n\nTITLE: Configuring ThemeProvider in React\nDESCRIPTION: Basic setup of ThemeProvider component wrapping a React application root to enable theming functionality.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/theming.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {ThemeProvider} from '@primer/react-brand'\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <div>...</div>\n    </ThemeProvider>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: FormControl with Validation\nDESCRIPTION: A controlled form example demonstrating validation with FormControl. Shows how to implement validation logic that provides feedback to users, handles form submission, and focuses invalid inputs to guide users to errors.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const inputRef = React.useRef(null)\n  const [value, setValue] = React.useState('mona lisa')\n  const [isValid, setIsValid] = React.useState(false)\n\n  const onChange = (e) => setValue(e.target.value)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    const valid = !value.includes(' ')\n    setIsValid(valid)\n\n    if (!valid) {\n      inputRef.current.focus()\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Stack gap=\"normal\">\n        <FormControl validationStatus={isValid ? 'success' : 'error'} fullWidth>\n          <FormControl.Label>GitHub handle</FormControl.Label>\n          <TextInput\n            ref={inputRef}\n            fullWidth\n            value={value}\n            onChange={onChange}\n          />\n          {isValid && (\n            <FormControl.Validation>Valid name</FormControl.Validation>\n          )}\n          {!isValid && (\n            <FormControl.Validation>\n              GitHub handles cannot contain spaces.{' '}\n              {value && `Did you mean \"${value.replaceAll(' ', '')}\"`}\n            </FormControl.Validation>\n          )}\n        </FormControl>\n        <Button type=\"submit\">Submit</Button>\n      </Stack>\n    </form>\n  )\n}\n\nrender(App)\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up Primer Brand Repository in Git\nDESCRIPTION: Instructions for cloning the Primer Brand repository, creating a feature branch, and installing dependencies. This snippet outlines the initial steps for contributing to the project.\nSOURCE: https://github.com/primer/brand/blob/main/CONTRIBUTING.md#2025-04-12_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Clone [this repository](https://github.com/primer/brand).\n1. Create a new feature branch: `git checkout -b my-handle/my-branch-name`.\n1. Configure and install the dependencies: `npm install`\n1. Make your changes and commit them.\n1. Create a changeset for your changes if your contribution affects distributed code: `npx changeset`\n   - See [changesets/changesets](https://github.com/changesets/changesets) for more information.\n1. Push your branch and open a pull request. **Please use the supplied pull request template**.\n1. Wait for CI tests to complete.\n   - If the tests pass, you should see a status check advising you that a canary build of `@primer/react-brand` has been published, and ready to test in-app.\n   - If the tests fail, review the logs and address any issues.\n   - If the builds fail for any other reason (as they occasionally do), they may need to be manually restarted.\n1. Pat yourself on the back and wait for your pull request to be reviewed.\n```\n\n----------------------------------------\n\nTITLE: Using Animate Component with AnimationProvider in React\nDESCRIPTION: This example demonstrates how to use the Animate component wrapped in an AnimationProvider to apply a fade-in animation to a Text component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/animation.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<AnimationProvider>\n  <Animate animate=\"fade-in\">\n    <Text>This text will fade-in</Text>\n  </Animate>\n</AnimationProvider>\n```\n\n----------------------------------------\n\nTITLE: Implementing ThemeProvider\nDESCRIPTION: Setup the ThemeProvider component at the root of the React application for proper theming\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/introduction.mdx#2025-04-12_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {ThemeProvider} from '@primer/react-brand'\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <div>...</div>\n    </ThemeProvider>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Complex Form Layout Using FormControl\nDESCRIPTION: An extensive example of a form layout composed using FormControl components, demonstrating how to build a complete form with various inputs, hint text, and validation requirements.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<form>\n  <Container\n    sx={{\n      alignItems: 'center',\n      display: 'grid',\n      gap: 16,\n      margin: '0 auto ',\n      maxWidth: 600,\n      paddingBottom: 3,\n    }}\n  >\n    <Text as=\"p\" variant=\"muted\" size=\"100\">\n      All fields marked with an asterisk (*) are required\n    </Text>\n    <Container\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '0.5fr 1fr 1fr',\n        gap: 16,\n      }}\n    >\n      <FormControl fullWidth>\n        <FormControl.Label>Title</FormControl.Label>\n        <Select defaultValue=\"\">\n          <Select.Option value=\"\" disabled>\n            Title\n          </Select.Option>\n          <Select.Option value=\"miss\">Miss</Select.Option>\n          <Select.Option value=\"mr\">Mr</Select.Option>\n          <Select.Option value=\"mrs\">Mrs</Select.Option>\n          <Select.Option value=\"mx\">Mx</Select.Option>\n        </Select>\n      </FormControl>\n      <FormControl fullWidth required>\n        <FormControl.Label>First name</FormControl.Label>\n        <TextInput required autoComplete=\"given-name\" />\n      </FormControl>\n      <FormControl fullWidth required>\n        <FormControl.Label>Last name</FormControl.Label>\n        <TextInput required autoComplete=\"family-name\" />\n      </FormControl>\n    </Container>\n\n    <FormControl fullWidth required>\n      <FormControl.Label>Enterprise name</FormControl.Label>\n      <TextInput required />\n    </FormControl>\n\n    <FormControl fullWidth required>\n      <FormControl.Label>Enterprise URL</FormControl.Label>\n      <TextInput leadingText=\"github.com/\" required />\n    </FormControl>\n\n    <FormControl fullWidth required>\n      <FormControl.Label>Country</FormControl.Label>\n      <Select defaultValue=\"\">\n        <Select.Option value=\"\" disabled>\n          Country\n        </Select.Option>\n        <Select.Option value=\"us\">United States of America</Select.Option>\n        <Select.Option value=\"uk\">United Kingdom</Select.Option>\n      </Select>\n    </FormControl>\n    <FormControl hasBorder required>\n      <FormControl.Label>\n        Contact me about GitHub Enterprise Server\n      </FormControl.Label>\n      <Checkbox />\n      <FormControl.Hint>\n        <Text size=\"200\" variant=\"muted\">\n          I&apos;m interested in learning more about{' '}\n          <InlineLink\n            size=\"200\"\n            href=\"https://github.com/enterprise\"\n            target=\"_blank\"\n          >\n            GitHub Enterprise Server\n          </InlineLink>{' '}\n          and would like to be contacted by GitHub's sales team.\n        </Text>\n      </FormControl.Hint>\n    </FormControl>\n    <Container\n      sx={{\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: 'var(--brand-control-color-border-default)',\n        backgroundColor: 'var(--brand-color-canvas-inset)',\n        height: 150,\n        width: '100%',\n        borderRadius: 6,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Text size=\"200\" variant=\"muted\">\n        Captcha\n      </Text>\n    </Container>\n    <FormControl required>\n      <FormControl.Label>\n        <Text size=\"200\" variant=\"muted\">\n          I hereby accept the{' '}\n          <InlineLink\n            size=\"200\"\n            href=\"https://github.com/customer-terms\"\n            target=\"_blank\"\n          >\n            GitHub Customer Agreement\n          </InlineLink>{' '}\n          on behalf of my organization and confirm that I have the authority to\n          do so. For more information about GitHub&apos;s privacy practices, see\n          the{' '}\n          <InlineLink\n            size=\"200\"\n            href=\"https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement\"\n            target=\"_blank\"\n          >\n            GitHub Privacy Statement.\n          </InlineLink>{' '}\n        </Text>\n      </FormControl.Label>\n\n      <Checkbox />\n    </FormControl>\n    <Container\n      sx={{\n        justifyContent: 'end',\n        display: 'inline-grid',\n        gap: 16,\n      }}\n    >\n      <Button variant=\"primary\" type=\"submit\">\n        Start trial\n      </Button>\n    </Container>\n  </Container>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Using Hero Component Example\nDESCRIPTION: Example implementation of the Hero component with various sub-components and content\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/introduction.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Hero>\n  <Hero.Label>Label</Hero.Label>\n  <Hero.Heading>This is my super sweet hero heading</Hero.Heading>\n  <Hero.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit ullamcorper id. Aliquam luctus sed turpis\n    felis nam pulvinar risus elementum.\n  </Hero.Description>\n  <Hero.PrimaryAction href=\"#\">Primary action</Hero.PrimaryAction>\n  <Hero.SecondaryAction href=\"#\">Secondary action</Hero.SecondaryAction>\n</Hero>\n```\n\n----------------------------------------\n\nTITLE: Installing Primer Brand with npm\nDESCRIPTION: Command to install the Primer Brand package using npm.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @primer/react-brand\n```\n\n----------------------------------------\n\nTITLE: Interactive Color Mode Example\nDESCRIPTION: Complete example showing dynamic color mode switching with state management and UI components.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/theming.mdx#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst Example = () => {\n  const [colorMode, setColorMode] = React.useState()\n\n  const handleChange = (event) => {\n    event.preventDefault()\n    setColorMode('dark')\n  }\n\n  return (\n    <ThemeProvider\n      colorMode={colorMode}\n      style={{backgroundColor: 'var(--brand-color-canvas-default)'}}\n    >\n      <River>\n        <River.Visual>\n          <img\n            src=\"/brand/assets/placeholder.png\"\n            alt=\"placeholder, blank area with a gray background color\"\n          />\n        </River.Visual>\n        <River.Content>\n          <Heading>Heading</Heading>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien\n            sit ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar\n            risus elementum.\n          </Text>\n          <Link href=\"#\" onClick={handleChange}>\n            {colorMode === 'dark'\n              ? \"I'm in dark mode now\"\n              : 'Switch to dark mode'}\n          </Link>\n        </River.Content>\n      </River>\n    </ThemeProvider>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Primer Brand CSS Stylesheet\nDESCRIPTION: This code shows how to import the main CSS stylesheet from Primer Brand, which contains design tokens, component styles, and a CSS reset.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/theming.mdx#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport '@primer/react-brand/lib/css/main.css'\n```\n\n----------------------------------------\n\nTITLE: Rendering Default Hero Component in React\nDESCRIPTION: Demonstrates the basic usage of the Hero component with its subcomponents including label, heading, description, and action buttons.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Hero/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Hero>\n  <Hero.Label>Label</Hero.Label>\n  <Hero.Heading>This is my super sweet hero heading</Hero.Heading>\n  <Hero.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </Hero.Description>\n  <Hero.PrimaryAction href=\"#\">Primary action</Hero.PrimaryAction>\n  <Hero.SecondaryAction href=\"#\">Secondary action</Hero.SecondaryAction>\n</Hero>\n```\n\n----------------------------------------\n\nTITLE: Rendering Icons with Different Sizes in JSX\nDESCRIPTION: Shows how to render icons in different sizes using the size prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Icon.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"vertical\">\n  <Icon icon={CopilotIcon} size=\"small\" />\n  <Icon icon={CopilotIcon} size=\"medium\" />\n  <Icon icon={CopilotIcon} size=\"large\" />\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Implementing PricingOptions with Feature List Sets in React\nDESCRIPTION: Example showing how to create a pricing comparison with grouped feature lists using PricingOptions component. Demonstrates implementation of two pricing tiers with base features and security sections.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/PricingOptions.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<PricingOptions>\n  <PricingOptions.Item>\n    <PricingOptions.Heading>Copilot Individual</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Code completions, Chat, and more for indie developers and freelancers.\n    </PricingOptions.Description>\n    <PricingOptions.Price\n      currencySymbol=\"$\"\n      trailingText=\"per month / $100 per year\"\n    >\n      10\n    </PricingOptions.Price>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListHeading>\n        Base features\n      </PricingOptions.FeatureListHeading>\n      <PricingOptions.FeatureListItem>\n        Code completions\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Chat in IDE and Mobile\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        CLI assistance\n      </PricingOptions.FeatureListItem>\n\n      <PricingOptions.FeatureListHeading>\n        Security\n      </PricingOptions.FeatureListHeading>\n      <PricingOptions.FeatureListItem>\n        Security vulnerability filter\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n\n    <PricingOptions.Footnote>\n      Free for verified students, teachers, and maintainers of popular open\n      source projects.\n    </PricingOptions.Footnote>\n\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Start a free trial\n    </PricingOptions.PrimaryAction>\n  </PricingOptions.Item>\n\n  <PricingOptions.Item>\n    <PricingOptions.Label>Recommended</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot Business</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot personalized to your organization.\n    </PricingOptions.Description>\n    <PricingOptions.Price currencySymbol=\"$\" trailingText=\"per user / month\">\n      19\n    </PricingOptions.Price>\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Buy now\n    </PricingOptions.PrimaryAction>\n    <PricingOptions.SecondaryAction href=\"/contact\">\n      Contact sales\n    </PricingOptions.SecondaryAction>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListHeading>\n        Base features\n      </PricingOptions.FeatureListHeading>\n      <PricingOptions.FeatureListItem>\n        Everything in Copilot Individual\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Code referencing\n      </PricingOptions.FeatureListItem>\n\n      <PricingOptions.FeatureListHeading>\n        Security\n      </PricingOptions.FeatureListHeading>\n      <PricingOptions.FeatureListItem>\n        Security vulnerability filter\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Public code filter\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        IP indemnity\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Enterprise-grade security, safety, and privacy\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n  </PricingOptions.Item>\n</PricingOptions>\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Primer Brand Components in React\nDESCRIPTION: Example of importing and using a Primer Brand component (Hero) in a React application.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/index.mdx#2025-04-12_snippet_6\n\nLANGUAGE: js\nCODE:\n```\nimport {Hero} from '@primer/react-brand'\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<Hero {...props} />\n```\n\n----------------------------------------\n\nTITLE: Responsive Stack Configuration in React\nDESCRIPTION: Shows how to use the Stack component with responsive props. Different values are set for direction, gap, padding, alignItems, and justifyContent at various breakpoints.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Stack/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack\n  style={{height: 400}}\n  direction={{\n    narrow: 'vertical',\n    regular: 'vertical',\n    wide: 'horizontal',\n  }}\n  gap={{\n    narrow: 'condensed',\n    regular: 'normal',\n    wide: 'spacious',\n  }}\n  padding={{\n    narrow: 'condensed',\n    regular: 'normal',\n    wide: 'spacious',\n  }}\n  alignItems={{\n    narrow: 'flex-start',\n    regular: 'center',\n    wide: 'center',\n  }}\n  justifyContent={{\n    narrow: 'center',\n    regular: 'center',\n    wide: 'space-between',\n  }}\n>\n  <img\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder with gray background and no foreground text\"\n    style={{width: 150, height: 75}}\n  />\n  <img\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder with gray background and no foreground text\"\n    style={{width: 150, height: 75}}\n  />\n  <img\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder with gray background and no foreground text\"\n    style={{width: 150, height: 75}}\n  />\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Rendering CheckboxGroup with Validation in React\nDESCRIPTION: This example demonstrates how to add validation states (success and error) to the CheckboxGroup.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CheckboxGroup/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"vertical\" gap=\"spacious\">\n  <CheckboxGroup>\n    <CheckboxGroup.Label>Valid selection</CheckboxGroup.Label>\n    <FormControl>\n      <FormControl.Label>Option one</FormControl.Label>\n      <Checkbox value=\"one\" />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Option two</FormControl.Label>\n      <Checkbox value=\"two\" />\n    </FormControl>\n    <CheckboxGroup.Validation variant=\"success\">\n      Great choice!\n    </CheckboxGroup.Validation>\n  </CheckboxGroup>\n\n  <CheckboxGroup>\n    <CheckboxGroup.Label>Invalid selection</CheckboxGroup.Label>\n    <FormControl>\n      <FormControl.Label>Option one</FormControl.Label>\n      <Checkbox value=\"one\" />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Option two</FormControl.Label>\n      <Checkbox value=\"two\" />\n    </FormControl>\n    <CheckboxGroup.Validation variant=\"error\">\n      Please select at least one option\n    </CheckboxGroup.Validation>\n  </CheckboxGroup>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Using ThemeProvider in React Application\nDESCRIPTION: Example of wrapping the root of a React application with the ThemeProvider component for proper theming.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/index.mdx#2025-04-12_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nimport {ThemeProvider} from '@primer/react-brand'\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <div>...</div>\n    </ThemeProvider>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Color Mode Switching with ThemeProvider\nDESCRIPTION: This example demonstrates how to use ThemeProvider to implement color mode switching between light and dark modes using React state.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/theming.mdx#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst Example = () => {\n  const [colorMode, setColorMode] = React.useState()\n\n  const handleChange = event => {\n    event.preventDefault()\n    setColorMode('dark')\n  }\n\n  return (\n    <ThemeProvider colorMode={colorMode} style={{backgroundColor: 'var(--brand-color-canvas-default)'}}>\n      <River>\n        <River.Visual>\n          <img src=\"/images/placeholder.png\" alt=\"placeholder, blank area with a gray background color\" />\n        </River.Visual>\n        <River.Content>\n          <Heading>Heading</Heading>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit ullamcorper id. Aliquam luctus sed\n            turpis felis nam pulvinar risus elementum.\n          </Text>\n          <Link href=\"#\" onClick={handleChange}>\n            {colorMode === 'dark' ? \"I'm in dark mode now\" : 'Switch to dark mode'}\n          </Link>\n        </River.Content>\n      </River>\n    </ThemeProvider>\n  )\n}\n\nrender(Example)\n```\n\n----------------------------------------\n\nTITLE: CTA Form with Event Handlers\nDESCRIPTION: Example demonstrating how to implement event handlers with the CTA Form component, including onChange for input changes and onSubmit for form submission.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTAForm/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<CTAForm onSubmit={() => alert('onSubmit event triggered')}>\n  <CTAForm.Input onChange={() => console.log('onChange event triggered')}>\n    <FormControl required>\n      <FormControl.Label>Your work email address</FormControl.Label>\n      <TextInput placeholder=\"email\" autoComplete=\"email\" />\n    </FormControl>\n  </CTAForm.Input>\n  <CTAForm.Action>Subscribe</CTAForm.Action>\n</CTAForm>\n```\n\n----------------------------------------\n\nTITLE: Combining Icon and Label in Card Component in JSX\nDESCRIPTION: Demonstrates how to combine both Icon and Label in a Card component for added context and metadata.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Card href=\"https://github.com\">\n  <Card.Icon icon={CopilotIcon} color=\"green\" hasBackground />\n  <Card.Label color=\"blue-purple\">Beta</Card.Label>\n  <Card.Heading>Code search & code view</Card.Heading>\n  <Card.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Card.Description>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Uncontrolled FormControl with Ref Usage in React\nDESCRIPTION: Shows how to implement an uncontrolled form using FormControl with ref forwarding. Includes form submission handling and value access through refs.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const inputRef = React.useRef(null)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (inputRef.current) {\n      alert(`Name: ${inputRef.current.value}`)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Container\n        sx={{\n          display: 'grid',\n          gap: 'var(--base-size-16)',\n          maxWidth: 400,\n          marginX: 'auto',\n        }}\n      >\n        <FormControl fullWidth>\n          <FormControl.Label>Name</FormControl.Label>\n          <TextInput\n            ref={inputRef}\n            defaultValue=\"Mona Lisa\"\n            autoComplete=\"name\"\n          />\n        </FormControl>\n        <Button type=\"submit\" variant=\"primary\">\n          Submit\n        </Button>\n      </Container>\n    </form>\n  )\n```\n\n----------------------------------------\n\nTITLE: Default RadioGroup Implementation\nDESCRIPTION: Example of a basic RadioGroup implementation with multiple radio options. All radio inputs share the same 'name' prop to function as a group.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/RadioGroup/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<RadioGroup>\n  <RadioGroup.Label>Choose your primary workspace</RadioGroup.Label>\n  <FormControl>\n    <FormControl.Label>Codespaces</FormControl.Label>\n    <Radio name=\"workspace\" value=\"codespaces\" />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Local environment</FormControl.Label>\n    <Radio name=\"workspace\" value=\"local\" />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Pen and paper</FormControl.Label>\n    <Radio name=\"workspace\" value=\"remote\" />\n  </FormControl>\n</RadioGroup>\n```\n\n----------------------------------------\n\nTITLE: Default Pagination Implementation\nDESCRIPTION: Example showing a default implementation of the Pagination component with state management and page change handling. Demonstrates handling next, previous, and direct page navigation.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pagination.mdx#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const [currentPage, setCurrentPage] = React.useState(5)\n  const totalPages = 10\n\n  const handlePageChange = (e, pageNumber) => {\n    if (pageNumber === currentPage + 1 && currentPage < totalPages) {\n      // Next page handler\n      setCurrentPage(currentPage + 1)\n    } else if (pageNumber === currentPage - 1 && currentPage > 1) {\n      // Previous page handler\n      setCurrentPage(currentPage - 1)\n    } else if (pageNumber >= 1 && pageNumber <= totalPages) {\n      setCurrentPage(pageNumber)\n    }\n  }\n\n  return (\n    <Pagination\n      pageCount={10}\n      currentPage={currentPage}\n      onPageChange={handlePageChange}\n    />\n  )\n}\n\nrender(<App />)\n```\n\n----------------------------------------\n\nTITLE: Rendering Default PricingOptions Component in React\nDESCRIPTION: This snippet demonstrates the default usage of the PricingOptions component with two pricing plans. It includes labels, headings, descriptions, prices, feature lists, and action buttons for each plan.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/PricingOptions.mdx#2025-04-12_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<PricingOptions>\n  <PricingOptions.Item>\n    <PricingOptions.Label>Recommended</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot in the coding environment.\n    </PricingOptions.Description>\n    <PricingOptions.Price\n      currencySymbol=\"$\"\n      originalPrice=\"20\"\n      trailingText=\"per month / $100 per year\"\n    >\n      10\n    </PricingOptions.Price>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListItem>\n        Everything in Copilot Business plus:\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Chat in IDE and Mobile\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        CLI assistance\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Code completions\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Buy now\n    </PricingOptions.PrimaryAction>\n    <PricingOptions.SecondaryAction href=\"/contact\">\n      Contact sales\n    </PricingOptions.SecondaryAction>\n  </PricingOptions.Item>\n\n  <PricingOptions.Item>\n    <PricingOptions.Label>Recommended</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot Business</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot personalized to your organization throughout the software\n      development lifecycle. Requires GitHub Enterprise Cloud.\n    </PricingOptions.Description>\n    <PricingOptions.Price\n      currencySymbol=\"$\"\n      trailingText=\"per user / month\"\n      originalPrice=\"49\"\n    >\n      39\n    </PricingOptions.Price>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListItem>\n        Everything in Copilot Business plus:\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Chat in IDE and Mobile\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        CLI assistance\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Code completions\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Join waitlist\n    </PricingOptions.PrimaryAction>\n  </PricingOptions.Item>\n</PricingOptions>\n```\n\n----------------------------------------\n\nTITLE: Responsive Bento Implementation with Breakpoint Objects\nDESCRIPTION: Shows how to implement responsive Bento layouts using breakpoint-specific objects for properties like columnSpan, rowSpan, and rowStart. This creates a layout that adapts to different screen sizes.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Bento.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Box\n  style={{backgroundColor: 'var(--base-color-scale-gray-2)'}}\n  padding=\"normal\"\n>\n  <Bento>\n    <Bento.Item\n      columnSpan={{\n        xsmall: 12,\n        small: 6,\n        large: 3,\n      }}\n      rowSpan={{\n        xsmall: 4,\n        large: 4,\n      }}\n    />\n    <Bento.Item\n      columnSpan={{\n        xsmall: 12,\n        small: 6,\n        large: 3,\n      }}\n      rowSpan={{\n        xsmall: 4,\n        large: 2,\n      }}\n    />\n    <Bento.Item\n      columnSpan={{\n        xsmall: 12,\n        small: 6,\n        large: 6,\n      }}\n      rowSpan={{\n        xsmall: 4,\n        large: 4,\n      }}\n    />\n    <Bento.Item\n      columnSpan={{\n        xsmall: 12,\n        small: 6,\n        large: 3,\n      }}\n      rowSpan={{\n        xsmall: 4,\n        large: 3,\n      }}\n      rowStart={{\n        large: 5,\n      }}\n    />\n    <Bento.Item\n      columnSpan={{\n        xsmall: 12,\n        small: 6,\n        large: 3,\n      }}\n      rowSpan={{\n        xsmall: 4,\n        large: 5,\n      }}\n    />\n    <Bento.Item\n      columnSpan={{\n        xsmall: 12,\n        small: 6,\n        large: 6,\n      }}\n      rowSpan={{\n        xsmall: 4,\n        large: 3,\n      }}\n    />\n  </Bento>\n</Box>\n```\n\n----------------------------------------\n\nTITLE: CTABanner with Custom Background Color\nDESCRIPTION: Demonstrates setting a subtle background color on the CTABanner and disabling the shadow.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<CTABanner backgroundColor=\"subtle\" hasShadow={false}>\n  <CTABanner.Heading>\n    Where the most ambitious teams build great things\n  </CTABanner.Heading>\n  <CTABanner.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </CTABanner.Description>\n  <CTABanner.ButtonGroup>\n    <Button>Primary Action</Button>\n  </CTABanner.ButtonGroup>\n</CTABanner>\n```\n\n----------------------------------------\n\nTITLE: Interactive Animation Demo Implementation\nDESCRIPTION: A complete example showing how to implement interactive animations with state management and user controls.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/animation.mdx#2025-04-12_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const [animationVariant, setAnimationVariant] = React.useState('fade-in')\n\n  const handleAnimationChange = (event) =>\n    setAnimationVariant(event.target.value)\n\n  return (\n    <AnimationProvider key={animationVariant}>\n      <Stack\n        direction=\"horizontal\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{height: 200}}\n      >\n        <Image\n          animate={{\n            variant: animationVariant,\n          }}\n          src=\"/brand/assets/placeholder.png\"\n          alt=\"placeholder with gray background and no foreground text\"\n          style={{width: 150, height: 75}}\n        />\n        <Image\n          animate={{\n            variant: animationVariant,\n          }}\n          src=\"/brand/assets/placeholder.png\"\n          alt=\"placeholder with gray background and no foreground text\"\n          style={{width: 150, height: 75}}\n        />\n        <Image\n          animate={{\n            variant: animationVariant,\n          }}\n          src=\"/brand/assets/placeholder.png\"\n          alt=\"placeholder with gray background and no foreground text\"\n          style={{width: 150, height: 75}}\n        />\n      </Stack>\n\n      <Stack direction=\"horizontal\" gap=\"spacious\" justifyContent=\"center\">\n        <FormControl>\n          <FormControl.Label>Animation</FormControl.Label>\n          <Select\n            defaultValue={animationVariant}\n            onChange={handleAnimationChange}\n          >\n            {AnimationVariants.map((option) => (\n              <Select.Option key={option} value={option}>\n                {option}\n              </Select.Option>\n            ))}\n          </Select>\n        </FormControl>\n      </Stack>\n    </AnimationProvider>\n  )\n```\n\n----------------------------------------\n\nTITLE: TextInput Variants Grid Implementation\nDESCRIPTION: Demonstrates various input types including text, number, email, password, month, telephone, time, date, datetime-local, and URL within a grid layout using FormControl.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/TextInput.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Container\n  sx={{\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridTemplateRows: 'repeat(2,minmax(40px,auto))',\n    gridGap: 4,\n  }}\n>\n  <FormControl fullWidth>\n    <FormControl.Label>Text (default)</FormControl.Label>\n    <TextInput type=\"text\" placeholder=\"alphanumeric\" />\n  </FormControl>\n  <FormControl fullWidth>\n    <FormControl.Label>Number</FormControl.Label>\n    <TextInput type=\"number\" placeholder=\"123\" />\n  </FormControl>\n  <FormControl fullWidth>\n    <FormControl.Label>Email</FormControl.Label>\n    <TextInput\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder=\"mona@github.com\"\n    />\n  </FormControl>\n  <FormControl fullWidth>\n    <FormControl.Label>Password</FormControl.Label>\n    <TextInput\n      type=\"password\"\n      autoComplete=\"current-password\"\n      value=\"monalisa\"\n    />\n  </FormControl>\n  <FormControl fullWidth>\n    <FormControl.Label>Month</FormControl.Label>\n    <TextInput type=\"month\" />\n  </FormControl>\n  <FormControl fullWidth>\n    <FormControl.Label>Telephone</FormControl.Label>\n    <TextInput type=\"tel\" autoComplete=\"tel\" />\n  </FormControl>\n  <FormControl fullWidth>\n    <FormControl.Label>Time</FormControl.Label>\n    <TextInput type=\"time\" />\n  </FormControl>\n  <FormControl fullWidth>\n    <FormControl.Label>Date</FormControl.Label>\n    <TextInput type=\"date\" />\n  </FormControl>\n  <FormControl fullWidth>\n    <FormControl.Label>Date (local)</FormControl.Label>\n    <TextInput type=\"datetime-local\" />\n  </FormControl>\n  <FormControl fullWidth>\n    <FormControl.Label>URL</FormControl.Label>\n    <TextInput type=\"url\" autoComplete=\"url\" value=\"https://github.com\" />\n  </FormControl>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Stack Component in React\nDESCRIPTION: Demonstrates the default usage of the Stack component with Heading and Text children. The Stack is used to arrange content vertically.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Stack/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack>\n  <Heading size=\"subhead-large\">Code search & code view</Heading>\n  <Text as=\"p\">\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Text>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Responsive Grid Layout\nDESCRIPTION: Implements responsive grid behavior using breakpoint-specific span values.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Grid/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Grid enableOverlay>\n  <Grid.Column\n    span={{xsmall: 12, small: 12, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 6, small: 6, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 6, small: 6, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 12, small: 12, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 6, small: 6, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 6, small: 6, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 12, small: 12, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 6, small: 6, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 6, small: 6, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 12, small: 12, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 6, small: 6, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n  <Grid.Column\n    span={{xsmall: 6, small: 6, medium: 6, large: 4, xlarge: 3, xxlarge: 2}}\n  />\n</Grid>\n```\n\n----------------------------------------\n\nTITLE: Responsive Stack Configuration in React\nDESCRIPTION: Illustrates how to use the Stack component with responsive properties for direction, gap, padding, alignItems, and justifyContent across different breakpoints.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Stack/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack\n  style={{height: 400}}\n  direction={{\n    narrow: 'vertical',\n    regular: 'vertical',\n    wide: 'horizontal',\n  }}\n  gap={{\n    narrow: 'condensed',\n    regular: 'normal',\n    wide: 'spacious',\n  }}\n  padding={{\n    narrow: 'condensed',\n    regular: 'normal',\n    wide: 'spacious',\n  }}\n  alignItems={{\n    narrow: 'flex-start',\n    regular: 'center',\n    wide: 'center',\n  }}\n  justifyContent={{\n    narrow: 'center',\n    regular: 'center',\n    wide: 'space-between',\n  }}\n>\n  <img\n    src=\"/images/placeholder.png\"\n    alt=\"placeholder with gray background and no foreground text\"\n    style={{width: 150, height: 75}}\n  />\n  <img\n    src=\"/images/placeholder.png\"\n    alt=\"placeholder with gray background and no foreground text\"\n    style={{width: 150, height: 75}}\n  />\n  <img\n    src=\"/images/placeholder.png\"\n    alt=\"placeholder with gray background and no foreground text\"\n    style={{width: 150, height: 75}}\n  />\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Importing Primer Brand Global Stylesheet in JavaScript\nDESCRIPTION: Import statement for loading the main Primer Brand stylesheet when using an application bundler like Webpack.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nimport '@primer/react-brand/lib/css/main.css'\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom FAQ Toggle Colors with ThemeProvider\nDESCRIPTION: Example demonstrating how to customize FAQ.Question toggle colors using the toggleColor prop and custom CSS styles in a dark theme context. Shows implementation of a FAQ component with custom green-blue gradient colors for toggles.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FAQ/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const customStyles = `\n  .custom-heading {\n    background: linear-gradient(271.72deg, var(--brand-Accordion-toggle-color-green-blue-start) 7.09%, var(--brand-Accordion-toggle-color-green-blue-end) 96.61%);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`\n\n  return (\n    <ThemeProvider colorMode=\"dark\" className=\"custom-colors\">\n      <Box padding=\"spacious\" backgroundColor=\"default\">\n        <style>{customStyles}</style>\n        <FAQ>\n          <FAQ.Heading className=\"custom-heading\">\n            Frequently asked questions\n          </FAQ.Heading>\n          <FAQ.Subheading>Subscriptions & Payments</FAQ.Subheading>\n          <FAQ.Item>\n            <FAQ.Question toggleColor=\"green-blue\">\n              What are the differences between GitHub Free, GitHub Pro, GitHub\n              Team and GitHub Enterprise plans?\n            </FAQ.Question>\n            <FAQ.Answer>\n              <p>\n                GitHub Free is our basic plan created for individuals and small\n                teams to collaborate on private and public repositories.\n              </p>\n            </FAQ.Answer>\n          </FAQ.Item>\n          <FAQ.Item>\n            <FAQ.Question toggleColor=\"green-blue\">\n              How do I view and manage my subscription?\n            </FAQ.Question>\n            <FAQ.Answer>\n              <p>\n                You can view your account's subscription, your other paid\n                features and products, and your next billing date in your\n                account's billing settings.\n              </p>\n            </FAQ.Answer>\n          </FAQ.Item>\n          <FAQ.Item>\n            <FAQ.Question toggleColor=\"green-blue\">\n              How can I change my GitHub subscription?\n            </FAQ.Question>\n            <FAQ.Answer>\n              <p>\n                You can upgrade or downgrade your subscription, add and remove\n                seats, or change the billing cadence on\n                https://github.com/settings/billing.\n              </p>\n            </FAQ.Answer>\n          </FAQ.Item>\n        </FAQ>\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nrender(<App />)\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Button Group in JSX\nDESCRIPTION: Example of the default variant for the ButtonGroup component with a primary and secondary button.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ButtonGroup/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<ButtonGroup>\n  <Button>This is one button</Button>\n  <Button>This is another button</Button>\n</ButtonGroup>\n```\n\n----------------------------------------\n\nTITLE: Implementing Full LogoSuite with Heading, Description, and Logos in React\nDESCRIPTION: This example demonstrates a complete LogoSuite implementation with a heading, description, and logo bar containing SVG company logos (GitHub, Microsoft, LinkedIn). The component creates a branded section that showcases company logos with accompanying text.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<LogoSuite>\n  <LogoSuite.Heading>\n    The ultimate developer experience is here.\n  </LogoSuite.Heading>\n  <LogoSuite.Description>\n    Trusted by the world's leading organizations\n  </LogoSuite.Description>\n  <LogoSuite.Logobar>\n    <svg\n      role=\"img\"\n      focusable=\"false\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 45 16\"\n      width=\"45\"\n      height=\"16\"\n    >\n      <title>GitHub</title>\n      <path d=\"M8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17Zm35.85 2.33c0 3.43-1.11 4.41-3.05 4.41-1.64 0-2.52-.83-2.52-.83s-.04.46-.09.52c-.03.06-.08.08-.14.08h-1.48c-.1 0-.19-.08-.19-.17l.02-11.11c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v3.77s.82-.53 2.02-.53l-.01-.02c1.2 0 2.97.45 2.97 3.88ZM27.68 2.43c.09 0 .17.08.17.17v11.11c0 .09-.08.17-.17.17h-2.13c-.09 0-.17-.08-.17-.17l.02-4.75h-3.31v4.75c0 .09-.08.17-.17.17h-2.13c-.08 0-.17-.08-.17-.17V2.6c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v4.09h3.31V2.6c0-.09.08-.17.17-.17Zm8.26 3.64c.11 0 .19.08.19.17l-.02 7.47c0 .09-.06.17-.17.17H34.6c-.07 0-.14-.04-.16-.09-.03-.06-.08-.45-.08-.45s-1.13.77-2.52.77c-1.69 0-2.92-.55-2.92-2.75V6.25c0-.09.08-.17.17-.17h2.14c.09 0 .17.08.17.17V11c0 .75.22 1.09.97 1.09s1.3-.39 1.3-.39V6.26c0-.11.06-.19.17-.19Zm-17.406 5.971h.005a.177.177 0 0 1 .141.179v1.5c0 .07-.03.14-.09.16-.1.05-.74.22-1.27.22-1.16 0-2.86-.25-2.86-2.69V8.13h-1.11c-.09 0-.17-.08-.17-.19V6.58c0-.08.05-.15.13-.17.07-.01 1.16-.28 1.16-.28V3.96c0-.08.05-.13.14-.13h2.16c.09 0 .14.05.14.13v2.11h1.59c.08 0 .16.08.16.17v1.7c0 .11-.07.19-.16.19h-1.59v3.131c0 .47.27.83 1.05.83.247 0 .481-.049.574-.05ZM12.24 6.06c.09 0 .17.08.17.17v7.37c0 .18-.05.27-.25.27h-1.92c-.17 0-.3-.07-.3-.27V6.26c0-.11.08-.2.17-.2Zm29.99 3.78c0-1.81-.73-2.05-1.5-1.97-.6.04-1.08.34-1.08.34v3.52s.49.34 1.22.36c1.03.03 1.36-.34 1.36-2.25ZM11.19 2.68c.75 0 1.36.61 1.36 1.38 0 .77-.61 1.38-1.36 1.38-.77 0-1.38-.61-1.38-1.38 0-.77.61-1.38 1.38-1.38Zm7.34 9.35v.001l.01.01h-.001l-.005-.001v.001c-.009-.001-.015-.011-.024-.011Z\"></path>\n    </svg>\n    <svg\n      role=\"img\"\n      focusable=\"false\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 337.6 72\"\n    >\n      <title>Microsoft</title>\n      <path\n        fill=\"#737373\"\n        d=\"M140.4 14.4v43.2h-7.5V23.7h-.1l-13.4 33.9h-5l-13.7-33.9h-.1v33.9h-6.9V14.4h10.8l12.4 32h.2l13.1-32h10.2zm6.2 3.3c0-1.2.4-2.2 1.3-3 .9-.8 1.9-1.2 3.1-1.2 1.3 0 2.4.4 3.2 1.2s1.3 1.8 1.3 3-.4 2.2-1.3 3c-.9.8-1.9 1.2-3.2 1.2s-2.3-.4-3.1-1.2c-.8-.9-1.3-1.9-1.3-3zm8.1 8.9v31h-7.3v-31h7.3zm22.1 25.7c1.1 0 2.3-.2 3.6-.8 1.3-.5 2.5-1.2 3.6-2v6.8c-1.2.7-2.5 1.2-4 1.5-1.5.3-3.1.5-4.9.5-4.6 0-8.3-1.4-11.1-4.3-2.9-2.9-4.3-6.6-4.3-11 0-5 1.5-9.1 4.4-12.3 2.9-3.2 7-4.8 12.4-4.8 1.4 0 2.8.2 4.1.5 1.4.3 2.5.8 3.3 1.2v7c-1.1-.8-2.3-1.5-3.4-1.9-1.2-.4-2.4-.7-3.6-.7-2.9 0-5.2.9-7 2.8s-2.6 4.4-2.6 7.6c0 3.1.9 5.6 2.6 7.3 1.7 1.7 4 2.6 6.9 2.6zm27.9-26.2c.6 0 1.1 0 1.6.1s.9.2 1.2.3v7.4c-.4-.3-.9-.6-1.7-.8s-1.6-.4-2.7-.4c-1.8 0-3.3.8-4.5 2.3s-1.9 3.8-1.9 7v15.6h-7.3v-31h7.3v4.9h.1c.7-1.7 1.7-3 3-4 1.4-.9 3-1.4 4.9-1.4zm3.2 16.5c0-5.1 1.5-9.2 4.3-12.2 2.9-3 6.9-4.5 12-4.5 4.8 0 8.6 1.4 11.3 4.3s4.1 6.8 4.1 11.7c0 5-1.5 9-4.3 12-2.9 3-6.8 4.5-11.8 4.5-4.8 0-8.6-1.4-11.4-4.2-2.8-2.9-4.2-6.8-4.2-11.6zm7.6-.3c0 3.2.7 5.7 2.2 7.4s3.6 2.6 6.3 2.6c2.6 0 4.7-.8 6.1-2.6 1.4-1.7 2.1-4.2 2.1-7.6 0-3.3-.7-5.8-2.1-7.6-1.4-1.7-3.5-2.6-6-2.6-2.7 0-4.7.9-6.2 2.7-1.7 1.9-2.4 4.4-2.4 7.7zm35-7.5c0 1 .3 1.9 1 2.5.7.6 2.1 1.3 4.4 2.2 2.9 1.2 5 2.5 6.1 3.9 1.2 1.5 1.8 3.2 1.8 5.3 0 2.9-1.1 5.2-3.4 7-2.2 1.8-5.3 2.6-9.1 2.6-1.3 0-2.7-.2-4.3-.5-1.6-.3-2.9-.7-4-1.2v-7.2c1.3.9 2.8 1.7 4.3 2.2 1.5.5 2.9.8 4.2.8 1.6 0 2.9-.2 3.6-.7.8-.5 1.2-1.2 1.2-2.3 0-1-.4-1.8-1.2-2.6-.8-.7-2.4-1.5-4.6-2.4-2.7-1.1-4.6-2.4-5.7-3.8s-1.7-3.2-1.7-5.4c0-2.8 1.1-5.1 3.3-6.9 2.2-1.8 5.1-2.7 8.6-2.7 1.1 0 2.3.1 3.6.4s2.5.6 3.4.9V34c-1-.6-2.1-1.2-3.4-1.7-1.3-.5-2.6-.7-3.8-.7-1.4 0-2.5.3-3.2.8-.7.7-1.1 1.4-1.1 2.4zm16.4 7.8c0-5.1 1.5-9.2 4.3-12.2 2.9-3 6.9-4.5 12-4.5 4.8 0 8.6 1.4 11.3 4.3s4.1 6.8 4.1 11.7c0 5-1.5 9-4.3 12-2.9 3-6.8 4.5-11.8 4.5-4.8 0-8.6-1.4-11.4-4.2-2.7-2.9-4.2-6.8-4.2-11.6zm7.6-.3c0 3.2.7 5.7 2.2 7.4s3.6 2.6 6.3 2.6c2.6 0 4.7-.8 6.1-2.6 1.4-1.7 2.1-4.2 2.1-7.6 0-3.3-.7-5.8-2.1-7.6-1.4-1.7-3.5-2.6-6-2.6-2.7 0-4.7.9-6.2 2.7-1.6 1.9-2.4 4.4-2.4 7.7zm48.4-9.7H312v25h-7.4v-25h-5.2v-6h5.2v-4.3c0-3.2 1.1-5.9 3.2-8s4.8-3.1 8.1-3.1c.9 0 1.7.1 2.4.1s1.3.2 1.8.4V18c-.2-.1-.7-.3-1.3-.5-.6-.2-1.3-.3-2.1-.3-1.5 0-2.7.5-3.5 1.4-.8.9-1.2 2.4-1.2 4.2v3.7h10.9v-7l7.3-2.2v9.2h7.4v6h-7.4V47c0 1.9.4 3.2 1 4 .7.8 1.8 1.2 3.3 1.2.4 0 .9-.1 1.5-.3.6-.2 1.1-.4 1.5-.7v6c-.5.3-1.2.5-2.3.7-1.1.2-2.1.3-3.2.3-3.1 0-5.4-.8-6.9-2.4-1.5-1.6-2.3-4.1-2.3-7.4l.1-15.8z\"\n      />\n      <path fill=\"#F25022\" d=\"M0 0h34.2v34.2H0z\" />\n      <path fill=\"#7FBA00\" d=\"M37.8 0H72v34.2H37.8z\" />\n      <path fill=\"#00A4EF\" d=\"M0 37.8h34.2V72H0z\" />\n      <path fill=\"#FFB900\" d=\"M37.8 37.8H72V72H37.8z\" />\n    </svg>\n    <svg\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 291 79.46\"\n      width=\"291\"\n      height=\"79.46\"\n    >\n      <title>LinkedIn</title>\n      <path\n        d=\"M239.33 95.036c0 2.96 2.46 5.361 5.495 5.361h63.376c3.035 0 5.496-2.401 5.496-5.361V30.919c0-2.961-2.46-5.361-5.496-5.361h-63.376c-3.035 0-5.495 2.4-5.495 5.361v64.117z\"\n        style={{\n          fill: 'inherit',\n          fillOpacity: 1,\n          fillRule: 'nonzero',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n      <path\n        d=\"M31.152 37.709h31.035v10.189H42.383v38.874H31.152V37.709zM77.9 37.709v33.793H66.668V37.709H77.9zm-5.616 38.407c3.917 0 6.355 2.595 6.355 5.84-.073 3.315-2.438 5.837-6.28 5.837-3.843 0-6.355-2.522-6.355-5.837 0-3.245 2.437-5.84 6.207-5.84h.073zM83.115 37.709h11.233v18.872c0 1.01.073 2.019.37 2.741.811 2.017 2.66 4.107 5.763 4.107 4.065 0 5.69-3.1 5.69-7.64v-18.08h11.232v19.377c0 10.38-5.542 15.21-12.932 15.21-6.06 0-8.72-3.387-10.198-5.694h.075v4.9H83.116c.147-3.171 0-33.793 0-33.793zM133.249 86.772h-11.233V37.709h11.233v10.956l2.807 3.534 8.794-14.49h13.818l-14.779 20.977 12.932 14.272h-13.522s-9.237-12.769-10.05-14.283v28.097z\"\n        style={{\n          fill: 'inherit',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n      <path\n        d=\"M188.706 51.805c.148.868.37 2.533.37 4.415 0 8.736-4.435 17.604-16.11 17.604-12.488 0-18.252-9.877-18.252-18.835 0-11.08 7.02-18 19.287-18 4.877 0 9.384.72 13.08 2.234l-1.48 7.418c-3.029-1.005-6.132-1.507-9.974-1.507-5.247 0-9.828 2.153-10.198 6.743l23.277-.07zm-23.35 7.599c.295 2.884 2.216 7.138 7.02 7.138 5.097 0 6.28-4.543 6.28-7.138h-13.3zM216.801 86.772V69.788h-.147c-1.627 2.377-5.026 3.963-9.533 3.963-8.646 0-16.257-6.92-16.184-18.741 0-10.958 6.873-18.094 15.444-18.094 4.656 0 9.09 2.019 11.306 5.912h.222l.444-5.119h9.976c-.148 2.379-.297 6.488-.297 10.524v38.539h-11.231zm0-33.421c0-.864-.074-1.73-.222-2.45-.664-3.1-3.325-5.262-6.576-5.262-4.656 0-7.685 3.748-7.685 9.659 0 5.55 2.586 10.019 7.758 10.019 3.473 0 5.912-2.378 6.578-5.333.147-.65.147-1.371.147-2.019v-4.614z\"\n        style={{\n          fill: 'inherit',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n      <path\n        d=\"M261.873 37.749v33.794H250.64V37.749h11.233zm-5.617 38.408c3.917 0 6.355 2.595 6.355 5.838-.073 3.316-2.438 5.839-6.28 5.839-3.843 0-6.355-2.523-6.355-5.839 0-3.243 2.438-5.838 6.207-5.838h.073zM268.088 37.749h11.232v18.872c0 1.01.073 2.019.37 2.741.812 2.018 2.66 4.108 5.763 4.108 4.065 0 5.69-3.099 5.69-7.642V37.749h11.232v19.377c0 10.38-5.541 15.21-12.931 15.21-6.06 0-8.72-3.387-10.198-5.694h.075v4.901h-11.233c.148-3.171 0-33.794 0-33.794z\"\n        style={{\n          fill: 'var(--brand-color-canvas-default)',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n    </svg>\n  </LogoSuite.Logobar>\n</LogoSuite>\n```\n\n----------------------------------------\n\nTITLE: Basic Checkbox Usage with FormControl\nDESCRIPTION: Demonstrates different states of checkboxes including default, checked, unchecked, and disabled states using FormControl for proper accessibility.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Checkbox/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<form>\n  <FormControl>\n    <FormControl.Label>Default checkbox</FormControl.Label>\n    <Checkbox />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Always checked</FormControl.Label>\n    <Checkbox checked />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Always unchecked</FormControl.Label>\n    <Checkbox checked={false} />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Inactive</FormControl.Label>\n    <Checkbox checked disabled />\n  </FormControl>\n</form>\n```\n\n----------------------------------------\n\nTITLE: SubNav with Dropdown Submenu\nDESCRIPTION: Implementation showing how to add a dropdown submenu to a SubNav link, which displays additional navigation options when the parent link is interacted with.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SubNav.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{position: 'relative', height: 300}}>\n  <SubNav hasShadow>\n    <SubNav.Heading href=\"#\">Features</SubNav.Heading>\n    <SubNav.Link href=\"#\" aria-current=\"page\">\n      Actions\n      <SubNav.SubMenu>\n        <SubNav.Link href=\"#\">Actions feature one</SubNav.Link>\n        <SubNav.Link href=\"#\">Actions feature two</SubNav.Link>\n        <SubNav.Link href=\"#\">Actions feature three</SubNav.Link>\n        <SubNav.Link href=\"#\">Actions feature four</SubNav.Link>\n      </SubNav.SubMenu>\n    </SubNav.Link>\n    <SubNav.Link href=\"#\">Packages</SubNav.Link>\n    <SubNav.Link href=\"#\">Copilot</SubNav.Link>\n    <SubNav.Link href=\"#\">Code review</SubNav.Link>\n  </SubNav>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Grouped FAQ Implementation\nDESCRIPTION: Example demonstrating how to group multiple FAQ sections using FAQGroup component with custom tab attributes for analytics\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FAQ/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<FAQGroup\n  tabAttributes={(children, i) => ({\n    'data-analytics': `faq-tab-${i}`,\n  })}\n>\n  <FAQGroup.Heading>\n    Frequently asked <br /> questions\n  </FAQGroup.Heading>\n  <FAQ>\n    <FAQ.Heading>Using GitHub Enterprise</FAQ.Heading>\n    [...]\n  </FAQ>\n  <FAQ>\n    <FAQ.Heading>About GitHub Enterprise</FAQ.Heading>\n    [...]\n  </FAQ>\n</FAQGroup>\n```\n\n----------------------------------------\n\nTITLE: Default Grid Layout\nDESCRIPTION: Demonstrates the basic 12-column grid layout system with various column spans.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Grid/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Grid enableOverlay>\n  <Grid.Column span={1}></Grid.Column>\n  <Grid.Column span={11}></Grid.Column>\n  <Grid.Column span={2}></Grid.Column>\n  <Grid.Column span={10}></Grid.Column>\n  <Grid.Column span={3}></Grid.Column>\n  <Grid.Column span={9}></Grid.Column>\n  <Grid.Column span={4}></Grid.Column>\n  <Grid.Column span={8}></Grid.Column>\n  <Grid.Column span={5}></Grid.Column>\n  <Grid.Column span={7}></Grid.Column>\n  <Grid.Column span={6}></Grid.Column>\n  <Grid.Column span={6}></Grid.Column>\n  <Grid.Column span={7}></Grid.Column>\n  <Grid.Column span={5}></Grid.Column>\n  <Grid.Column span={8}></Grid.Column>\n  <Grid.Column span={4}></Grid.Column>\n  <Grid.Column span={9}></Grid.Column>\n  <Grid.Column span={3}></Grid.Column>\n  <Grid.Column span={10}></Grid.Column>\n  <Grid.Column span={2}></Grid.Column>\n</Grid>\n```\n\n----------------------------------------\n\nTITLE: CTABanner with Background Image\nDESCRIPTION: Shows how to add a background image to the CTABanner component with responsive image sources for different viewport widths.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<ThemeProvider colorMode=\"dark\">\n  <CTABanner\n    backgroundImageSrc={{\n      narrow:\n        'https://github.com/user-attachments/assets/a28110fd-d019-41a4-8f80-b49ae8895708',\n      regular:\n        'https://github.com/user-attachments/assets/a28110fd-d019-41a4-8f80-b49ae8895708',\n      wide: 'https://github.com/user-attachments/assets/a28110fd-d019-41a4-8f80-b49ae8895708',\n    }}\n    align=\"center\"\n    hasShadow={false}\n  >\n    <CTABanner.Heading>\n      Where the most ambitious teams build great things\n    </CTABanner.Heading>\n    <CTABanner.Description variant=\"default\">\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n      ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n      elementum.\n    </CTABanner.Description>\n    <CTABanner.ButtonGroup>\n      <Button>Primary Action</Button>\n    </CTABanner.ButtonGroup>\n  </CTABanner>\n</ThemeProvider>\n```\n\n----------------------------------------\n\nTITLE: River Component with Duotone Style\nDESCRIPTION: Example of River component with duotone styling and simplified content structure\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<River>\n  <River.Visual>\n    <img\n      src=\"/brand/assets/placeholder.png\"\n      alt=\"placeholder, blank area with a gray background color\"\n    />\n  </River.Visual>\n  <River.Content>\n    <Text size=\"300\">\n      <b>This first sentence is highlighted</b> and here is where the body copy\n      starts. Remember to keep this nice and succinct.\n    </Text>\n    <Link href=\"#\">Call to action</Link>\n  </River.Content>\n</River>\n```\n\n----------------------------------------\n\nTITLE: Uncontrolled TextInput with Ref Implementation\nDESCRIPTION: Example showing how to use TextInput in uncontrolled mode with refs for form submission handling.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/TextInput.mdx#2025-04-12_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const inputRef = React.useRef(null)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!inputRef.current.value) {\n      alert(`Enter a value and try again.`)\n      return\n    }\n\n    alert(`Name: ${inputRef.current.value}`)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Container\n        sx={{\n          display: 'grid',\n          gap: 'var(--base-size-16)',\n          maxWidth: 400,\n          marginX: 'auto',\n        }}\n      >\n        <FormControl fullWidth>\n          <FormControl.Label>Name</FormControl.Label>\n          <TextInput ref={inputRef} />\n        </FormControl>\n        <Button type=\"submit\" variant=\"primary\">\n          Submit\n        </Button>\n      </Container>\n    </form>\n  )\n}\n\nrender(App)\n```\n\n----------------------------------------\n\nTITLE: Animating Cards with Staggering in React\nDESCRIPTION: This example demonstrates how to use the Animate component to apply scale-in-up animations to Card components within a Grid, utilizing automatic staggering provided by AnimationProvider.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/animation.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Grid>\n  <Grid.Column\n    span={{\n      xsmall: 12,\n      large: 6,\n    }}\n  >\n    <Animate animate=\"scale-in-up\">\n      <Card href=\"https://github.com\">\n        <Card.Icon icon={CopilotIcon} color=\"indigo\" hasBackground />\n        <Card.Label>Limited</Card.Label>\n        <Card.Heading>Collaboration is the key to DevOps success</Card.Heading>\n        <Card.Description>Everything you need to know about getting started with GitHub Actions.</Card.Description>\n      </Card>\n    </Animate>\n  </Grid.Column>\n  <Grid.Column\n    span={{\n      xsmall: 12,\n      large: 6,\n    }}\n  >\n    <Animate animate=\"scale-in-up\">\n      <Card href=\"https://github.com\">\n        <Card.Icon icon={RocketIcon} hasBackground color=\"blue\" />\n        <Card.Label>Limited</Card.Label>\n        <Card.Heading>GitHub Actions cheat sheet and more</Card.Heading>\n        <Card.Description>In a recent study, 70% of organizations reported they had adopted DevOps.</Card.Description>\n      </Card>\n    </Animate>\n  </Grid.Column>\n</Grid>\n```\n\n----------------------------------------\n\nTITLE: Accessible Icon Tooltip Implementation\nDESCRIPTION: Implementation showing how to use the Tooltip component with an icon button, providing accessibility through the type prop set to label.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Tooltip.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Tooltip text=\"Go fullscreen\" type=\"label\">\n  <Button hasArrow={false}>\n    <ScreenFullIcon />\n  </Button>\n</Tooltip>\n```\n\n----------------------------------------\n\nTITLE: Default CTA Form Implementation with Confirmation Checkbox\nDESCRIPTION: Example showing the complete CTA Form with an email input field and a confirmation checkbox with privacy policy links. Includes all three subcomponents: Input, Confirm, and Action.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTAForm/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<CTAForm>\n  <CTAForm.Input>\n    <FormControl required>\n      <FormControl.Label>Your work email address</FormControl.Label>\n      <TextInput placeholder=\"email\" autoComplete=\"email\" />\n    </FormControl>\n  </CTAForm.Input>\n  <CTAForm.Confirm>\n    <FormControl required>\n      <FormControl.Label>\n        <Text size=\"300\" variant=\"muted\">\n          I agree to the{' '}\n          <InlineLink href=\"www.github.com\">Privacy Policy</InlineLink> and{' '}\n          <InlineLink href=\"www.github.com\">Terms of Service</InlineLink>\n        </Text>\n      </FormControl.Label>\n      <Checkbox name=\"confirm\" />\n    </FormControl>\n  </CTAForm.Confirm>\n  <CTAForm.Action>Subscribe</CTAForm.Action>\n</CTAForm>\n```\n\n----------------------------------------\n\nTITLE: Dynamic FAQ Rendering\nDESCRIPTION: Example showing how to render FAQ items dynamically using mapped data array with React components\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FAQ/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const fixtureData = [\n    {\n      question: 'How do I render a single paragraph?',\n      answer: (\n        <p>\n          Vestibulum at dolor justo.{' '}\n          <a href=\"https://www.github.com\" target=\"_blank\" rel=\"noreferrer\">\n            Curabitur\n          </a>{' '}\n          dictum feugiat elit, vitae vestibulum orci vestibulum sed. Donec\n          interdum ligula at nisi rhoncus malesuada et non eros.\n        </p>\n      ),\n    },\n    [...]\n  ]\n\n  return (\n    <FAQ>\n      <FAQ.Heading>Frequently asked questions</FAQ.Heading>\n      <>\n        {fixtureData.map(({question, answer}) => {\n          return (\n            <FAQ.Item key={question} open={false}>\n              <FAQ.Question>{question}</FAQ.Question>\n              <FAQ.Answer>{answer}</FAQ.Answer>\n            </FAQ.Item>\n          )\n        })}\n      </>\n    </FAQ>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Primer Brand Components\nDESCRIPTION: Import individual components from the Primer Brand package\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/introduction.mdx#2025-04-12_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Hero} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Indeterminate Checkbox Implementation\nDESCRIPTION: Shows how to implement an indeterminate checkbox state for scenarios where the input value is neither true nor false.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Checkbox/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<form>\n  <FormControl>\n    <FormControl.Label>Indeterminate checkbox</FormControl.Label>\n    <Checkbox onChange={() => {}} indeterminate={true} />\n  </FormControl>\n</form>\n```\n\n----------------------------------------\n\nTITLE: EyebrowBanner with Icon Visuals in React\nDESCRIPTION: Examples showing how to use EyebrowBanner.Visual with icons from @primer/octicons-react. The example demonstrates icons with and without background, different colors, and proper implementation with Octicons.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/EyebrowBanner.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack>\n  <EyebrowBanner href=\"/\">\n    <EyebrowBanner.Visual icon={<StarIcon />} color=\"blue\" hasBackground />\n    <EyebrowBanner.Heading>\n      GitHub Universe: Dive in to AI, security, and DevEx\n    </EyebrowBanner.Heading>\n    <EyebrowBanner.SubHeading>\n      Get your tickets now to join us on Nov. 8-9.\n    </EyebrowBanner.SubHeading>\n  </EyebrowBanner>\n  <EyebrowBanner href=\"/\">\n    <EyebrowBanner.Visual icon={<CopilotIcon />} color=\"blue\" />\n    <EyebrowBanner.Heading>\n      GitHub Copilot now available for Business\n    </EyebrowBanner.Heading>\n  </EyebrowBanner>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Responsive Flow in Bento Items\nDESCRIPTION: Demonstrates how to implement responsive flow within a Bento.Item, changing between row and column layouts at different breakpoints. This example includes content and visual elements.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Bento.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Box\n  style={{backgroundColor: 'var(--base-color-scale-gray-2)'}}\n  padding=\"normal\"\n>\n  <Bento>\n    <Bento.Item\n      flow={{\n        xsmall: 'row',\n        small: 'row',\n        medium: 'column',\n      }}\n    >\n      <Bento.Content padding=\"normal\">\n        <Bento.Heading as=\"h3\">Heading</Bento.Heading>\n        <Link href=\"#\">Call to action</Link>\n      </Bento.Content>\n      <Bento.Visual>\n        <img\n          alt=\"placeholder, blank area with an gray background color\"\n          src=\"/brand/assets/placeholder.png\"\n        />\n      </Bento.Visual>\n    </Bento.Item>\n  </Bento>\n</Box>\n```\n\n----------------------------------------\n\nTITLE: Rendering Default Card Component in JSX\nDESCRIPTION: Demonstrates the basic usage of the Card component with a heading and description. The link text defaults to 'Read more' but can be customized.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Card href=\"https://github.com\">\n  <Card.Heading>Collaboration is the key to DevOps success</Card.Heading>\n  <Card.Description>\n    Everything you need to know about getting started with GitHub Actions.\n  </Card.Description>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: RadioGroup with Validation States\nDESCRIPTION: Example demonstrating how to display success or error validation states using RadioGroup.Validation component with appropriate icons.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/RadioGroup/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"vertical\" gap=\"spacious\">\n  <RadioGroup>\n    <RadioGroup.Label>Valid selection</RadioGroup.Label>\n    <FormControl>\n      <FormControl.Label>Basic plan</FormControl.Label>\n      <Radio name=\"plan-valid\" value=\"basic\" />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Pro plan</FormControl.Label>\n      <Radio name=\"plan-valid\" value=\"pro\" defaultChecked />\n    </FormControl>\n    <RadioGroup.Validation variant=\"success\">\n      Great choice!\n    </RadioGroup.Validation>\n  </RadioGroup>\n\n  <RadioGroup>\n    <RadioGroup.Label>Invalid selection</RadioGroup.Label>\n    <FormControl>\n      <FormControl.Label>Basic plan</FormControl.Label>\n      <Radio name=\"plan-invalid\" value=\"basic\" />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Pro plan</FormControl.Label>\n      <Radio name=\"plan-invalid\" value=\"pro\" />\n    </FormControl>\n    <RadioGroup.Validation variant=\"error\">\n      Please select a plan to continue\n    </RadioGroup.Validation>\n  </RadioGroup>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: BreakoutBanner with Leading Visual Icon\nDESCRIPTION: Example showing how to include a leading visual icon in the BreakoutBanner with an appropriate accessibility label.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<BreakoutBanner\n  leadingVisual={<LogoGithubIcon size=\"medium\" aria-label=\"GitHub logo\" />}\n>\n  <BreakoutBanner.Heading>\n    Where the most ambitious teams build great things\n  </BreakoutBanner.Heading>\n  <BreakoutBanner.LinkGroup>\n    <Link href=\"#\">Primary action</Link>\n  </BreakoutBanner.LinkGroup>\n</BreakoutBanner>\n```\n\n----------------------------------------\n\nTITLE: Alternative Form Inputs with FormControl\nDESCRIPTION: Examples of FormControl with various input types including Select, Checkbox, Radio, and Textarea components. Demonstrates how FormControl works with different form elements.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"vertical\" gap=\"spacious\">\n  {/* Select */}\n  <FormControl>\n    <FormControl.Label>Select</FormControl.Label>\n    <Select defaultValue=\"\">\n      <Select.Option value=\"\" disabled>\n        Select a handle\n      </Select.Option>\n      <Select.Option value=\"mona\">Monalisa</Select.Option>\n      <Select.Option value=\"hubot\">Hubot</Select.Option>\n    </Select>\n  </FormControl>\n  {/* Checkbox */}\n  <FormControl>\n    <FormControl.Label>Checkbox</FormControl.Label>\n    <Checkbox />\n    <FormControl.Hint>With an optional message</FormControl.Hint>\n  </FormControl>\n  {/* Radio */}\n  <FormControl>\n    <FormControl.Label>Radio</FormControl.Label>\n    <FormControl.Hint>With an optional message</FormControl.Hint>\n    <Radio />\n  </FormControl>\n  {/* Textarea */}\n  <FormControl fullWidth>\n    <FormControl.Label>Textarea</FormControl.Label>\n    <Textarea />\n  </FormControl>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Default CTABanner Implementation\nDESCRIPTION: Shows a basic implementation of the CTABanner component with heading, description, and button group.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<CTABanner>\n  <CTABanner.Heading>\n    Where the most ambitious teams build great things\n  </CTABanner.Heading>\n  <CTABanner.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </CTABanner.Description>\n  <CTABanner.ButtonGroup>\n    <Button>Primary Action</Button>\n    <Button>Secondary Action</Button>\n  </CTABanner.ButtonGroup>\n</CTABanner>\n```\n\n----------------------------------------\n\nTITLE: Grid Column Offset\nDESCRIPTION: Demonstrates column positioning using the start property for offset.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Grid/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Grid enableOverlay>\n  <Grid.Column span={3}></Grid.Column>\n  <Grid.Column span={5} start={8}></Grid.Column>\n</Grid>\n```\n\n----------------------------------------\n\nTITLE: Bento with Dark Mode Items\nDESCRIPTION: Demonstrates how to set items in the Bento grid to use dark mode styling with the colorMode prop set to 'dark'.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Bento.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Bento>\n  <Bento.Item columnSpan={7} rowSpan={2} colorMode=\"dark\" />\n  <Bento.Item columnSpan={5} rowSpan={2} colorMode=\"dark\" />\n  <Bento.Item columnSpan={12} rowSpan={2} colorMode=\"dark\" />\n  <Bento.Item columnSpan={12} rowSpan={2} colorMode=\"dark\" />\n</Bento>\n```\n\n----------------------------------------\n\nTITLE: Implementing Uncontrolled Textarea in React\nDESCRIPTION: Shows how to use the Textarea component in uncontrolled mode with React refs and form submission handling.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Textarea.mdx#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst TextareaExample = () => {\n  const ref = React.useRef()\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if (!ref.current.value) {\n      alert(`Enter a value into the Textarea and press submit`)\n      return\n    }\n\n    alert(`Current Textarea value: ${ref.current.value}`)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Textarea\n        cols={40}\n        rows={8}\n        ref={ref}\n        defaultValue=\"Set the initial state in uncontrolled mode using the defaultValue prop\"\n      />\n      <br /> <br />\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </form>\n  )\n}\n\nrender(<TextareaExample />)\n```\n\n----------------------------------------\n\nTITLE: Basic SubdomainNavBar Usage Example in JSX\nDESCRIPTION: Demonstrates a basic implementation of the SubdomainNavBar component with various child elements including links, search, and action buttons.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SubdomainNavBar.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{position: 'relative', overflowX: 'scroll'}}>\n  <SubdomainNavBar title=\"Subdomain\" fixed={false}>\n    <SubdomainNavBar.Link href=\"#\">Collections</SubdomainNavBar.Link>\n    <SubdomainNavBar.Link href=\"#\">Topics</SubdomainNavBar.Link>\n    <SubdomainNavBar.Link href=\"#\">Articles</SubdomainNavBar.Link>\n    <SubdomainNavBar.Link href=\"#\">Events</SubdomainNavBar.Link>\n    <SubdomainNavBar.Link href=\"#\">Video</SubdomainNavBar.Link>\n    <SubdomainNavBar.Link href=\"#\">Social</SubdomainNavBar.Link>\n    <SubdomainNavBar.Search />\n    <SubdomainNavBar.PrimaryAction href=\"#\">\n      Primary CTA\n    </SubdomainNavBar.PrimaryAction>\n    <SubdomainNavBar.SecondaryAction href=\"#\">\n      Secondary CTA\n    </SubdomainNavBar.SecondaryAction>\n  </SubdomainNavBar>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Programmatically Controlled VideoPlayer in JavaScript\nDESCRIPTION: Demonstrates how to use the useVideo hook to programmatically control the VideoPlayer, including play/pause, seeking, and custom controls.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst CustomVideoPlayer = () => {\n  const {isPlaying, togglePlaying, seek} = useVideo()\n\n  return (\n    <Stack direction=\"vertical\">\n      <VideoPlayer\n        title=\"GitHub media player\"\n        showPlayPauseButton={false}\n        showSeekControl={false}\n        showCCButton={false}\n        showMuteButton={false}\n        showVolumeControl={false}\n        showFullScreenButton={false}\n      >\n        <VideoPlayer.Source\n          src=\"https://primer.github.io/brand/assets/example.mp4\"\n          type=\"video/mp4\"\n        />\n        <VideoPlayer.Track src=\"/brand/assets/example.vtt\" default />\n      </VideoPlayer>\n      <Stack direction=\"horizontal\">\n        <Button onClick={() => togglePlaying()}>\n          {isPlaying ? 'Pause' : 'Play'}\n        </Button>\n        <Button onClick={() => seek(0)}>Go to start</Button>\n        <Button onClick={() => seek((t) => t + 5)}>Skip 5 seconds</Button>\n      </Stack>\n    </Stack>\n  )\n}\n\nconst App = () => (\n  <VideoPlayer.Provider>\n    <CustomVideoPlayer />\n  </VideoPlayer.Provider>\n)\n\nrender(<App />)\n```\n\n----------------------------------------\n\nTITLE: Select with FormControl\nDESCRIPTION: Using Select inside FormControl to provide proper labeling.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<FormControl>\n  <FormControl.Label>Country</FormControl.Label>\n  <Select defaultValue=\"\">\n    <Select.Option value=\"\" disabled>\n      Select a country\n    </Select.Option>\n    <Select.Option value=\"cn\">China</Select.Option>\n    <Select.Option value=\"fr\">France</Select.Option>\n    <Select.Option value=\"it\">Italy</Select.Option>\n    <Select.Option value=\"mx\">Mexico</Select.Option>\n    <Select.Option value=\"es\">Spain</Select.Option>\n    <Select.Option value=\"uk\">United Kingdom</Select.Option>\n    <Select.Option value=\"us\">United States</Select.Option>\n  </Select>\n</FormControl>\n```\n\n----------------------------------------\n\nTITLE: Required FormControl Implementation in React\nDESCRIPTION: Demonstrates how to implement a required form field using FormControl with a label and text input. Shows basic usage of the required prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<FormControl required>\n  <FormControl.Label>Name</FormControl.Label>\n  <TextInput autoComplete=\"name\" />\n</FormControl>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic ComparisonTable in React\nDESCRIPTION: Demonstrates how to create a dynamic comparison table using data from an external source. The example compares GitHub vs Jenkins features using a data object to populate the table content.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ComparisonTable.mdx#2025-04-12_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const comparisonTableData = {\n    heading: 'GitHub vs Jenkins',\n    footnotes:\n      '*** This is a biased overview of capabilities by use case, based on publicly available information as of 2022-05-16.',\n    headingLabels: ['', 'GitHub', 'Jenkins'],\n    features: [\n      {\n        label: 'Automation & CI/CD',\n        values: [\n          {\n            name: 'GitHub',\n            value:\n              'Over 13,000 GitHub Actions are available in the GitHub Marketplace to automate your development workflow.',\n          },\n          {\n            name: 'Jenkins',\n            value:\n              '1,800+ community contributed Jenkins plugins in Jenkins Plugin Marketplace.',\n          },\n        ],\n      },\n      {\n        label: 'Deployment models',\n        values: [\n          {\n            name: 'GitHub',\n            value: 'Cloud or self-hosted',\n          },\n          {\n            name: 'Jenkins',\n            value: 'Self-hosted only. CloudBees is the cloud alternative',\n          },\n        ],\n      },\n    ],\n  }\n\n  return (\n    <ComparisonTable heading={comparisonTableData.heading}>\n      <ComparisonTable.Row>\n        {comparisonTableData.headingLabels.map((label) => (\n          <ComparisonTable.Cell key={label}>{label}</ComparisonTable.Cell>\n        ))}\n      </ComparisonTable.Row>\n      {comparisonTableData.features.map(({label, values}) => {\n        return (\n          <ComparisonTable.Row key={label}>\n            <ComparisonTable.Cell key={label}>{label}</ComparisonTable.Cell>\n            {values.map(({value, name}) => (\n              <ComparisonTable.Cell key={name}>{value}</ComparisonTable.Cell>\n            ))}\n          </ComparisonTable.Row>\n        )\n      })}\n      <ComparisonTable.Footnote>\n        {comparisonTableData.footnotes}\n      </ComparisonTable.Footnote>\n    </ComparisonTable>\n  )\n```\n\n----------------------------------------\n\nTITLE: River Component with Alternative Heading Levels\nDESCRIPTION: Shows how to use different heading levels in the River component using the 'as' prop\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<River imageTextRatio=\"60:40\">\n  <River.Visual>\n    <img\n      src=\"/brand/assets/placeholder.png\"\n      alt=\"placeholder with a gray background color\"\n    />\n  </River.Visual>\n  <River.Content>\n    <Heading as=\"h1\">Alternative heading levels</Heading>\n    <Text>\n      Use the 'as' prop to specify alternative heading levels. The default is\n      'h3'.\n    </Text>\n  </River.Content>\n</River>\n```\n\n----------------------------------------\n\nTITLE: Loading Primer Brand Custom Font Assets in HTML\nDESCRIPTION: HTML link tag for loading the Mona Sans typeface stylesheet.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/index.mdx#2025-04-12_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<link\n  href=\"https://unpkg.com/browse/@primer/react-brand@<version>/fonts/fonts.css\"\n  rel=\"stylesheet\"\n/>\n```\n\n----------------------------------------\n\nTITLE: RadioGroup with Caption\nDESCRIPTION: Example of RadioGroup with a caption that provides additional context for the group of options using RadioGroup.Caption component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/RadioGroup/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<RadioGroup>\n  <RadioGroup.Label>Repository visibility</RadioGroup.Label>\n  <RadioGroup.Caption>\n    Choose who can see and access your repository\n  </RadioGroup.Caption>\n  <FormControl>\n    <FormControl.Label>Public</FormControl.Label>\n    <Radio name=\"visibility\" value=\"public\" />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Private</FormControl.Label>\n    <Radio name=\"visibility\" value=\"private\" />\n  </FormControl>\n</RadioGroup>\n```\n\n----------------------------------------\n\nTITLE: BreakoutBanner with Background Image\nDESCRIPTION: Demonstrates how to add a responsive background image to the BreakoutBanner with different image sizes for different viewport widths.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<ThemeProvider colorMode=\"dark\">\n  <BreakoutBanner\n    backgroundImageSrc={{\n      narrow:\n        'https://github.com/user-attachments/assets/a28110fd-d019-41a4-8f80-b49ae8895708',\n      regular:\n        'https://github.com/user-attachments/assets/a28110fd-d019-41a4-8f80-b49ae8895708',\n      wide: 'https://github.com/user-attachments/assets/a28110fd-d019-41a4-8f80-b49ae8895708',\n    }}\n  >\n    <BreakoutBanner.Heading>\n      Where the most ambitious teams build great things\n    </BreakoutBanner.Heading>\n    <BreakoutBanner.LinkGroup>\n      <Link href=\"#\">Primary action</Link>\n    </BreakoutBanner.LinkGroup>\n  </BreakoutBanner>\n</ThemeProvider>\n```\n\n----------------------------------------\n\nTITLE: Nested Grid Layout\nDESCRIPTION: Shows how to implement nested grids within grid columns.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Grid/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Grid enableOverlay>\n  <Grid.Column>\n    <Grid enableOverlay>\n      <Grid.Column span={4}></Grid.Column>\n      <Grid.Column span={4}></Grid.Column>\n      <Grid.Column span={4}></Grid.Column>\n    </Grid>\n  </Grid.Column>\n</Grid>\n```\n\n----------------------------------------\n\nTITLE: FormControl with Visually Hidden Label\nDESCRIPTION: Example showing how to use FormControl with a visually hidden label for accessibility while maintaining a clean UI. This pattern is appropriate when context is clear, such as in search inputs.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<FormControl>\n  <FormControl.Label visuallyHidden>Search</FormControl.Label>\n  <TextInput type=\"search\" trailingVisual={<SearchIcon />} />\n</FormControl>\n```\n\n----------------------------------------\n\nTITLE: Testimonial Variants with Default and Subtle Styling\nDESCRIPTION: Demonstrates two testimonial variants ('default' and 'subtle') placed side by side using Stack component. Each testimonial includes a quote, name with position, and avatar.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" gap=\"spacious\" padding=\"none\">\n  <Testimonial variant=\"default\">\n    <Testimonial.Quote>\n      GitHub helps us ensure that we have our security controls baked into our\n      pipelines all the way from the first line of code we&apos;re writing.\n    </Testimonial.Quote>\n    <Testimonial.Name position=\"Staff Security Engineer\">\n      David Ross\n    </Testimonial.Name>\n    <Testimonial.Avatar\n      src=\"/brand/assets/avatar-mona.png\"\n      alt=\"Circular avatar from David Ross's GitHub profile\"\n    />\n  </Testimonial>\n  <Testimonial variant=\"subtle\">\n    <Testimonial.Quote>\n      GitHub helps us ensure that we have our security controls baked into our\n      pipelines all the way from the first line of code we&apos;re writing.\n    </Testimonial.Quote>\n    <Testimonial.Name position=\"Staff Security Engineer\">\n      David Ross\n    </Testimonial.Name>\n    <Testimonial.Avatar\n      src=\"/brand/assets/avatar-mona.png\"\n      alt=\"Circular avatar from David Ross's GitHub profile\"\n    />\n  </Testimonial>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Avatar Component with Different Sizes\nDESCRIPTION: Shows how to implement avatars with different fixed sizes (32px, 40px, 48px, 64px, and 80px) using the Stack component for layout arrangement.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Avatar/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack\n  direction=\"horizontal\"\n  alignItems=\"center\"\n  justifyContent=\"center\"\n  gap=\"spacious\"\n  style={{height: 200}}\n>\n  <Avatar\n    size={32}\n    src=\"/brand/assets/avatar-mona.png\"\n    alt=\"Mona avatar at 32px\"\n  />\n  <Avatar\n    size={40}\n    src=\"/brand/assets/avatar-mona.png\"\n    alt=\"Mona avatar at 40px\"\n  />\n  <Avatar\n    size={48}\n    src=\"/brand/assets/avatar-mona.png\"\n    alt=\"Mona avatar at 48px\"\n  />\n  <Avatar\n    size={64}\n    src=\"/brand/assets/avatar-mona.png\"\n    alt=\"Mona avatar at 64px\"\n  />\n  <Avatar\n    size={80}\n    src=\"/brand/assets/avatar-mona.png\"\n    alt=\"Mona avatar at 80px\"\n  />\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Example Bento Layout with Column and Row Spans\nDESCRIPTION: Shows how to create a more complex Bento layout by specifying column spans and row spans for each item. This example creates a responsive grid with items of varying sizes.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Bento.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Box\n  style={{backgroundColor: 'var(--base-color-scale-gray-2)'}}\n  padding=\"normal\"\n>\n  <Bento>\n    <Bento.Item columnSpan={12} rowSpan={2} />\n    <Bento.Item columnSpan={7} rowSpan={2} />\n    <Bento.Item columnSpan={5} rowSpan={2} />\n    <Bento.Item columnSpan={12} rowSpan={2} />\n  </Bento>\n</Box>\n```\n\n----------------------------------------\n\nTITLE: Combining Image and Label in Card Component in JSX\nDESCRIPTION: Shows how to combine both Image and Label in a Card component for enhanced visual context and metadata.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n<Card href=\"https://github.com\">\n  <Card.Image\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder, blank area with an gray background color\"\n  />\n  <Card.Heading>Code search & code view</Card.Heading>\n  <Card.Label color=\"blue\">Beta</Card.Label>\n  <Card.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Card.Description>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: River Component with Image-Text Ratio Examples\nDESCRIPTION: Shows different image-to-text ratio implementations (50/50 and 60/40) of the River component\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  {/* 50/50 (default) example */}\n  <River>\n    <River.Visual>\n      <img\n        src=\"/brand/assets/placeholder.png\"\n        alt=\"placeholder, blank area with a gray background color\"\n      />\n    </River.Visual>\n    <River.Content>\n      <Heading>50/50</Heading>\n      <Text>\n        <strong>By default</strong>, River applies a 50/50 image to text split.\n      </Text>\n    </River.Content>\n  </River>\n  {/* 60/40 example */}\n  <River imageTextRatio=\"60:40\">\n    <River.Visual>\n      <img\n        src=\"/brand/assets/placeholder.png\"\n        alt=\"placeholder, blank area with a gray background color\"\n      />\n    </River.Visual>\n    <River.Content>\n      <Heading>60/40</Heading>\n      <Text>This example applies an optional 60/40 image to text split.</Text>\n    </River.Content>\n  </River>\n</>\n```\n\n----------------------------------------\n\nTITLE: Applying Uniform Margin to Box Components\nDESCRIPTION: Shows how to use the margin prop with both named values (condensed, normal, spacious) and numeric values from the base scale (24-96).\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n    <Box className=\"bg-yellow-lines\">\n      <Box margin=\"condensed\" className=\"bg-red-lines\">\n        condensed\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin=\"normal\" className=\"bg-red-lines\">\n        normal\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin=\"spacious\" className=\"bg-red-lines\">\n        spacious\n      </Box>\n    </Box>\n  </Stack>\n  <Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={24} className=\"bg-red-lines\">\n        24\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={32} className=\"bg-red-lines\">\n        32\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={48} className=\"bg-red-lines\">\n        48\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={64} className=\"bg-red-lines\">\n        64\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={96} className=\"bg-red-lines\">\n        96\n      </Box>\n    </Box>\n  </Stack>\n</>\n```\n\n----------------------------------------\n\nTITLE: Implementing Marquee Effect in LogoSuite\nDESCRIPTION: Shows how to create marquee animations with different speeds (normal and slow) in LogoSuite. Includes visually hidden headings and multiple logo placeholders with scrolling effects.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <LogoSuite>\n    <LogoSuite.Heading visuallyHidden>Featured sponsors</LogoSuite.Heading>\n    <LogoSuite.Description>Speed: Normal</LogoSuite.Description>\n    <LogoSuite.Logobar marquee marqueeSpeed=\"normal\">\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n    </LogoSuite.Logobar>\n  </LogoSuite>\n  <br />\n  <LogoSuite>\n    <LogoSuite.Heading visuallyHidden>Featured sponsors</LogoSuite.Heading>\n    <LogoSuite.Description>Speed: Slow</LogoSuite.Description>\n    <LogoSuite.Logobar marquee marqueeSpeed=\"slow\">\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n    </LogoSuite.Logobar>\n  </LogoSuite>\n</>\n```\n\n----------------------------------------\n\nTITLE: Rendering Accent Button Variant in JSX\nDESCRIPTION: Demonstrates the usage of the 'accent' variant of the Button component, which is meant for use in Hero or CTABanner components.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Button variant=\"accent\">Accent</Button>\n```\n\n----------------------------------------\n\nTITLE: Section Component with Custom Block Paddings\nDESCRIPTION: This example shows how to customize the top and bottom padding of a Section component using the paddingBlockStart and paddingBlockEnd props.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Section/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Section paddingBlockStart=\"none\" paddingBlockEnd=\"spacious\">\n  <SectionIntro align=\"center\">\n    <SectionIntro.Heading size=\"3\">Custom paddings</SectionIntro.Heading>\n    <SectionIntro.Description>\n      This section has a custom padding at the top and bottom.\n    </SectionIntro.Description>\n  </SectionIntro>\n</Section>\n```\n\n----------------------------------------\n\nTITLE: Applying Animation to Box Components\nDESCRIPTION: Demonstrates how to use the animate prop with the 'slide-in-right' animation within an AnimationProvider to create animated Box components.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<AnimationProvider>\n  <Stack direction=\"horizontal\" flexWrap=\"wrap\">\n    <Box animate=\"slide-in-right\" padding={96} className=\"bg-red-lines\" />\n    <Box animate=\"slide-in-right\" padding={96} className=\"bg-red-lines\" />\n    <Box animate=\"slide-in-right\" padding={96} className=\"bg-red-lines\" />\n  </Stack>\n</AnimationProvider>\n```\n\n----------------------------------------\n\nTITLE: Single Selection ActionMenu Implementation\nDESCRIPTION: Implementation of ActionMenu with single selection mode, managing selected state with React useState hook.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ActionMenu.mdx#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const [selection, setSelection] = React.useState('Copilot')\n\n  return (\n    <ActionMenu\n      onSelect={(newValue) => setSelection(newValue)}\n      selectionVariant=\"single\"\n    >\n      <ActionMenu.Button aria-label=\"Select a GitHub feature\">\n        {selection}\n      </ActionMenu.Button>\n      <ActionMenu.Overlay>\n        <ActionMenu.Item value=\"Copilot\" selected={'Copilot' === selection}>\n          Copilot\n        </ActionMenu.Item>\n        <ActionMenu.Item\n          value=\"Codespaces\"\n          selected={'Codespaces' === selection}\n        >\n          Codespaces\n        </ActionMenu.Item>\n        <ActionMenu.Item value=\"CodeQL\" selected={'CodeQL' === selection}>\n          CodeQL\n        </ActionMenu.Item>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\nrender(<App />)\n```\n\n----------------------------------------\n\nTITLE: Rendering Different Button Sizes in JSX\nDESCRIPTION: Demonstrates how to render Button components in different sizes using the 'size' prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"vertical\" alignItems=\"flex-start\">\n  <Button size=\"small\">Register now</Button>\n  <Button size=\"medium\">Register now</Button>\n  <Button size=\"large\">Register now</Button>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Heading Width/Stretch Implementation\nDESCRIPTION: Examples of different heading stretch values and responsive stretch implementation.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Heading/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Heading as=\"h3\" stretch=\"condensed\">condensed</Heading>\n  <Heading as=\"h3\" stretch=\"normal\">normal</Heading>\n  <Heading as=\"h3\" stretch=\"expanded\">expanded</Heading>\n\n  <br />\n  <br />\n  <Heading\n    as=\"h4\"\n    stretch={{\n      narrow: 'condensed',\n      regular: 'normal',\n      wide: 'expanded',\n    }}\n  >\n    Responsive\n  </Heading>\n</>\n```\n\n----------------------------------------\n\nTITLE: Setting Alternative Alignments in LogoSuite\nDESCRIPTION: Demonstrates different alignment options (start and justify) for the LogoSuite component. Shows how to modify the default center alignment using the align prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <LogoSuite align=\"start\">\n    <LogoSuite.Description>Start</LogoSuite.Description>\n    <LogoSuite.Logobar>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n    </LogoSuite.Logobar>\n  </LogoSuite>\n  <br />\n  <LogoSuite align=\"justify\">\n    <LogoSuite.Description>Justified</LogoSuite.Description>\n    <LogoSuite.Logobar>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n      <svg role=\"img\" viewBox=\"0 0 300 100\">\n        <title>Placeholder logo</title>\n        <rect width=\"100%\" height=\"100%\" />\n      </svg>\n    </LogoSuite.Logobar>\n  </LogoSuite>\n</>\n```\n\n----------------------------------------\n\nTITLE: Default River Component Implementation\nDESCRIPTION: Demonstrates three different alignments (default, end, center) of the River component with images and content\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <River>\n    <River.Visual>\n      <img\n        src=\"/brand/assets/placeholder.png\"\n        alt=\"placeholder, blank area with a gray background color\"\n      />\n    </River.Visual>\n    <River.Content>\n      <Heading>Heading</Heading>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </River.Content>\n  </River>\n  <River align=\"end\">\n    <River.Visual>\n      <img\n        src=\"/brand/assets/placeholder.png\"\n        alt=\"placeholder, blank area with a gray background color\"\n      />\n    </River.Visual>\n    <River.Content>\n      <Heading>Heading</Heading>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </River.Content>\n  </River>\n  <River align=\"center\">\n    <River.Visual>\n      <img\n        src=\"/brand/assets/placeholder.png\"\n        alt=\"placeholder, blank area with a gray background color\"\n      />\n    </River.Visual>\n    <River.Content>\n      <Label>Label</Label>\n      <Heading>Heading</Heading>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </River.Content>\n  </River>\n</>\n```\n\n----------------------------------------\n\nTITLE: Creating Two-Option PricingOptions Layout in React\nDESCRIPTION: This example demonstrates a two-item layout for the PricingOptions component. It includes two pricing plans with labels, headings, descriptions, prices, feature lists, and action buttons.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/PricingOptions.mdx#2025-04-12_snippet_4\n\nLANGUAGE: JSX\nCODE:\n```\n<PricingOptions>\n  <PricingOptions.Item>\n    <PricingOptions.Label>Recommended</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot in the coding environment.\n    </PricingOptions.Description>\n    <PricingOptions.Price\n      currencySymbol=\"$\"\n      trailingText=\"per month / $100 per year\"\n    >\n      10\n    </PricingOptions.Price>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListItem>\n        Everything in Copilot Business plus:\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Chat in IDE and Mobile\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        CLI assistance\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Code completions\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Buy now\n    </PricingOptions.PrimaryAction>\n    <PricingOptions.SecondaryAction href=\"/contact\">\n      Contact sales\n    </PricingOptions.SecondaryAction>\n  </PricingOptions.Item>\n\n  <PricingOptions.Item>\n    <PricingOptions.Label>Recommended</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot Business</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot personalized to your organization throughout the software\n      development lifecycle. Requires GitHub Enterprise Cloud.\n    </PricingOptions.Description>\n    <PricingOptions.Price currencySymbol=\"$\" trailingText=\"per user / month\">\n      39\n    </PricingOptions.Price>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListItem>\n        Everything in Copilot Business plus:\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Chat in IDE and Mobile\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        CLI assistance\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Code completions\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Join waitlist\n    </PricingOptions.PrimaryAction>\n  </PricingOptions.Item>\n</PricingOptions>\n```\n\n----------------------------------------\n\nTITLE: Basic Radio Component Usage in JSX\nDESCRIPTION: Basic example of using the Radio component in a React application. Demonstrates creating simple radio buttons with different states including a disabled option.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Radio/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Radio value=\"one\" name=\"radio-group-name\" />\n  <Radio value=\"two\" name=\"radio-group-name\" />\n  <Radio disabled value=\"three\" name=\"radio-group-name\" />\n</>\n```\n\n----------------------------------------\n\nTITLE: Footnotes with Citations and Return Links in React\nDESCRIPTION: Demonstrates the use of Footnotes with citations and return links, integrated with other components like River and Heading.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Footnotes/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <River>\n    <River.Visual>\n      <img\n        src=\"/brand/assets/placeholder.png\"\n        alt=\"placeholder, blank area with a gray background color\"\n      />\n    </River.Visual>\n    <River.Content\n      trailingComponent={() => (\n        <Box marginBlockStart={24} paddingBlockStart={24}>\n          <Heading as=\"h4\" size=\"3\">\n            17,000+\n          </Heading>\n          <Text as=\"p\" size=\"300\" weight=\"light\" variant=\"muted\">\n            Third-party tools support your favorite languages and frameworks{' '}\n            <Text size=\"100\" weight=\"light\">\n              <sup>\n                <InlineLink href=\"#economic-impact\" id=\"economic-impact-ref\">\n                  1\n                </InlineLink>\n              </sup>\n            </Text>\n          </Text>\n        </Box>\n      )}\n    >\n      <Heading size=\"5\" as=\"h3\" weight=\"medium\">\n        Leverage the industry&apos;s most flexible secure development platform.\n      </Heading>\n    </River.Content>\n  </River>\n  <River>\n    <River.Visual>\n      <img\n        src=\"/brand/assets/placeholder.png\"\n        alt=\"placeholder, blank area with a gray background color\"\n      />\n    </River.Visual>\n    <River.Content>\n      <Heading size=\"5\" as=\"h3\" weight=\"medium\">\n        Unlocking innovation at scale with AI-driven software development.\n      </Heading>\n      <Text as=\"p\" size=\"200\" weight=\"light\" variant=\"muted\">\n        The world&apos;s most widely adopted AI developer tool.{' '}\n        <Text size=\"100\" weight=\"light\">\n          <sup>\n            <InlineLink href=\"#ai\" id=\"ai-ref\">\n              2\n            </InlineLink>\n          </sup>\n        </Text>\n      </Text>\n    </River.Content>\n  </River>\n\n  <Footnotes>\n    <Footnotes.Item id=\"economic-impact\" href=\"#economic-impact-ref\">\n      There are now 100 million developers around the world using GitHub.{' '}\n    </Footnotes.Item>\n    <Footnotes.Item id=\"ai\" href=\"#ai-ref\">\n      This factor is based on data from the industry&apos;s{' '}\n      <InlineLink href=\"#\">longest running analysis</InlineLink> by Acme Corp.\n    </Footnotes.Item>\n  </Footnotes>\n</>\n```\n\n----------------------------------------\n\nTITLE: Custom Label with Rich Text and Links\nDESCRIPTION: Shows how to implement a checkbox with complex label content including formatted text and links while maintaining proper accessibility.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Checkbox/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<FormControl required>\n  <FormControl.Label>\n    <Text size=\"200\" variant=\"muted\">\n      I hereby accept the{' '}\n      <InlineLink\n        size=\"200\"\n        href=\"https://github.com/customer-terms\"\n        target=\"_blank\"\n      >\n        GitHub Customer Agreement\n      </InlineLink>{' '}\n      on behalf of my organization and confirm that I have the authority to do\n      so. For more information about GitHub&apos;s privacy practices, see the{' '}\n      <InlineLink\n        size=\"200\"\n        href=\"https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement\"\n        target=\"_blank\"\n      >\n        GitHub Privacy Statement.\n      </InlineLink>{' '}\n    </Text>\n  </FormControl.Label>\n  <Checkbox />\n</FormControl>\n```\n\n----------------------------------------\n\nTITLE: Rendering Button without Arrow in JSX\nDESCRIPTION: Demonstrates how to remove the animated arrow indicator from the Button component using the 'hasArrow' prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Button hasArrow={false}>No arrow</Button>\n```\n\n----------------------------------------\n\nTITLE: Applying Directional Margin with CSS Logical Properties\nDESCRIPTION: Demonstrates how to apply margin to specific sides of a Box using CSS logical properties like marginBlockStart, marginInlineEnd, etc.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n  <Box className=\"bg-yellow-lines\">\n    <Box marginBlockStart={64} className=\"bg-red-lines\">\n      block start\n    </Box>\n  </Box>\n  <Box className=\"bg-yellow-lines\">\n    <Box marginInlineEnd={64} className=\"bg-red-lines\">\n      inline end\n    </Box>\n  </Box>\n  <Box className=\"bg-yellow-lines\">\n    <Box marginBlockEnd={64} className=\"bg-red-lines\">\n      block end\n    </Box>\n  </Box>\n  <Box className=\"bg-yellow-lines\">\n    <Box marginInlineStart={64} className=\"bg-red-lines\">\n      inline start\n    </Box>\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Adding Leading Visuals to Label Components in React\nDESCRIPTION: Example demonstrating how to add leading icon visuals to Label components using Octicons to enhance visual context.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Label/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"flex-start\" padding=\"none\">\n  <Label color=\"yellow\" leadingVisual={<StarIcon />}>\n    Starred\n  </Label>\n  <Label color=\"blue-purple\" leadingVisual={<CopilotIcon />}>\n    Copilot\n  </Label>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Grouping Radio Components Using FormControl in JSX\nDESCRIPTION: Example showing how to group Radio components within a form using the FormControl component. Includes a Stack component for layout control and demonstrates proper labeling of radio buttons.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Radio/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<form>\n  <Stack\n    direction={{narrow: 'vertical', regular: 'horizontal'}}\n    gap=\"condensed\"\n    padding=\"condensed\"\n  >\n    <FormControl>\n      <FormControl.Label>Mona</FormControl.Label>\n      <Radio name=\"radio-group\" value=\"mona\" />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Hubot</FormControl.Label>\n      <Radio name=\"radio-group\" value=\"hubot\" />\n    </FormControl>\n  </Stack>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Section Component with Background Image\nDESCRIPTION: This example demonstrates adding a background image to a Section component with size and position controls, wrapped in a dark ThemeProvider.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Section/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<ThemeProvider colorMode=\"dark\">\n  <Section\n    backgroundImageSrc=\"https://github.com/user-attachments/assets/068634a3-926d-49b8-b949-0b1e2a204651\"\n    backgroundImageSize=\"cover\"\n    backgroundImagePosition=\"top center\"\n  >\n    <SectionIntro align=\"center\">\n      <SectionIntro.Heading size=\"3\">Section</SectionIntro.Heading>\n      <SectionIntro.Description>\n        This section has a custom background image.\n      </SectionIntro.Description>\n    </SectionIntro>\n  </Section>\n</ThemeProvider>\n```\n\n----------------------------------------\n\nTITLE: Default TextInput Implementation\nDESCRIPTION: Simple implementation of the TextInput component with default settings.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/TextInput.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<TextInput />\n```\n\n----------------------------------------\n\nTITLE: Default EyebrowBanner Implementation in React\nDESCRIPTION: Example showing the default variant of the EyebrowBanner component with a visual, heading, and sub-heading. This demonstrates the basic structure and usage of the component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/EyebrowBanner.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<EyebrowBanner href=\"http://githubuniverse.com\">\n  <EyebrowBanner.Visual>\n    <img\n      src=\"https://github.githubassets.com/assets/eyebrow-23@2x-563f292d9e30.png\"\n      alt=\"Badge featuring a GitHub logo surrounded by Universe-themed shapes\"\n    />\n  </EyebrowBanner.Visual>\n  <EyebrowBanner.Heading>\n    GitHub Universe: Dive in to AI, security, and DevEx\n  </EyebrowBanner.Heading>\n  <EyebrowBanner.SubHeading>\n    Get your tickets now to join us on Nov. 8-9.\n  </EyebrowBanner.SubHeading>\n</EyebrowBanner>\n```\n\n----------------------------------------\n\nTITLE: Basic ComparisonTable Implementation Example\nDESCRIPTION: Demonstrates a basic implementation of the ComparisonTable component with rows comparing GitHub and Jenkins. Includes table cells for different use cases and a footnote.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ComparisonTable.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<ComparisonTable>\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Use case</ComparisonTable.Cell>\n    <ComparisonTable.Cell>GitHub</ComparisonTable.Cell>\n    <ComparisonTable.Cell>Jenkins</ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Automation & CI/CD</ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      <Text as=\"p\" size=\"300\">\n        Comparable native core capabilities\n      </Text>\n      <Text as=\"p\" size=\"300\">\n        <a href=\"#\">Over 13,000 GitHub Actions are available</a> in the GitHub\n        Marketplace to automate your development workflow.\n      </Text>\n    </ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      <Text as=\"p\" size=\"300\">\n        Comparable native capabilities\n      </Text>\n      <Text as=\"p\" size=\"300\">\n        1,800+ community contributed Jenkins plugins{' '}\n        <a href=\"#\">in Jenkins Plugin Marketplace.</a>\n      </Text>\n    </ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Deployment models</ComparisonTable.Cell>\n    <ComparisonTable.Cell>Cloud or self-hosted</ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      <Text as=\"p\" size=\"300\">\n        Self-hosted only\n      </Text>\n      <Text as=\"p\" size=\"300\">\n        CloudBees is the cloud alternative\n      </Text>\n    </ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Footnote>\n    *** This is a biased overview of capabilities by use case, based on publicly\n    available information as of 2022-05-16.\n  </ComparisonTable.Footnote>\n</ComparisonTable>\n```\n\n----------------------------------------\n\nTITLE: Rendering Default UnorderedList in JSX\nDESCRIPTION: This example demonstrates how to use the UnorderedList component with its default styling. It creates a list of security-related items.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/UnorderedList/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<UnorderedList>\n  <UnorderedList.Item>\n    Automatic security and version updates\n  </UnorderedList.Item>\n  <UnorderedList.Item>GitHub Security Advisories</UnorderedList.Item>\n  <UnorderedList.Item>Code and secret scanning</UnorderedList.Item>\n  <UnorderedList.Item>Dependency review</UnorderedList.Item>\n  <UnorderedList.Item>\n    Automated authentication and identity management\n  </UnorderedList.Item>\n</UnorderedList>\n```\n\n----------------------------------------\n\nTITLE: PricingOptions with Included/Excluded Features in React\nDESCRIPTION: Example demonstrating how to implement pricing options with explicitly included and excluded features using variant props. Shows comparison between Individual and Enterprise tiers with detailed feature breakdowns.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/PricingOptions.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<PricingOptions>\n  <PricingOptions.Item>\n    <PricingOptions.Heading>Copilot Individual</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Code completions, Chat, and more for indie developers and freelancers.\n    </PricingOptions.Description>\n    <PricingOptions.Price\n      currencySymbol=\"$\"\n      trailingText=\"per month / $100 per year\"\n    >\n      10\n    </PricingOptions.Price>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListHeading>\n        Chat\n      </PricingOptions.FeatureListHeading>\n      <PricingOptions.FeatureListItem>\n        Unlimited messages, interactions, and history\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Context-aware coding support and explanations\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem variant=\"excluded\">\n        Debugging and security remediation assistance\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem variant=\"excluded\">\n        Repository-based semantic search\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem variant=\"excluded\">\n        Access your knowledge base\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListHeading>\n        Code completion\n      </PricingOptions.FeatureListHeading>\n      <PricingOptions.FeatureListItem>\n        Code suggestions as you type\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Comments to code\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem variant=\"excluded\">\n        Fine-tuned models (coming soon)\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n\n    <PricingOptions.Footnote>\n      Free for verified students, teachers, and maintainers of popular open\n      source projects.\n    </PricingOptions.Footnote>\n\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Start a free trial\n    </PricingOptions.PrimaryAction>\n  </PricingOptions.Item>\n\n  <PricingOptions.Item>\n    <PricingOptions.Label>Available Feb 2024</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot Enterprise</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot personalized to your organization throughout the software\n      development lifecycle. Requires GitHub Enterprise Cloud.\n    </PricingOptions.Description>\n    <PricingOptions.Price currencySymbol=\"$\" trailingText=\"per user / month\">\n      39\n    </PricingOptions.Price>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListHeading>\n        Chat\n      </PricingOptions.FeatureListHeading>\n      <PricingOptions.FeatureListItem>\n        Unlimited messages, interactions, and history\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Context-aware coding support and explanations\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Debugging and security remediation assistance\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Repository-based semantic search\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Access your knowledge base\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListHeading>\n        Code completion\n      </PricingOptions.FeatureListHeading>\n      <PricingOptions.FeatureListItem>\n        Code suggestions as you type\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Comments to code\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Fine-tuned models (coming soon)\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n    <PricingOptions.PrimaryAction href=\"/waitlist\">\n      Join waitlist\n    </PricingOptions.PrimaryAction>\n  </PricingOptions.Item>\n</PricingOptions>\n```\n\n----------------------------------------\n\nTITLE: Full Width FormControl\nDESCRIPTION: Using the fullWidth prop with FormControl to make the component and its children expand to the full available width, providing context to all children rather than just the input.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<FormControl fullWidth>\n  <FormControl.Label>Name</FormControl.Label>\n  <TextInput autoComplete=\"name\" />\n</FormControl>\n```\n\n----------------------------------------\n\nTITLE: Text Component with Various Weights in JSX\nDESCRIPTION: Demonstrates the usage of different text weights and responsive weight settings using the weight prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Text/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Text as=\"p\" weight=\"heavy\">\n    heavy\n  </Text>\n  <Text as=\"p\" weight=\"extrabold\">\n    extrabold\n  </Text>\n  <Text as=\"p\" weight=\"bold\">\n    bold\n  </Text>\n  <Text as=\"p\" weight=\"semibold\">\n    semibold\n  </Text>\n  <Text as=\"p\" weight=\"medium\">\n    medium\n  </Text>\n  <Text as=\"p\" weight=\"regular\">\n    regular\n  </Text>\n  <Text as=\"p\" weight=\"light\">\n    light\n  </Text>\n\n  {/* Responsive */}\n  <br />\n  <br />\n  <Text\n    as=\"p\"\n    weight={{\n      narrow: 'heavy',\n      regular: 'semibold',\n      wide: 'light',\n    }}\n  >\n    Responsive\n  </Text>\n</>\n```\n\n----------------------------------------\n\nTITLE: Select with Validation States\nDESCRIPTION: Examples of Select components with error and success validation states.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{display: 'inline-grid', gap: 3}}>\n  <FormControl validationStatus=\"error\">\n    <FormControl.Label>Error</FormControl.Label>\n    <Select>\n      <Select.Option value=\"mona\">Monalisa</Select.Option>\n      <Select.Option value=\"hubot\">Hubot</Select.Option>\n    </Select>\n    <FormControl.Validation>This is an error message</FormControl.Validation>\n  </FormControl>\n  <FormControl validationStatus=\"success\">\n    <FormControl.Label>Success</FormControl.Label>\n    <Select>\n      <Select.Option value=\"mona\">Monalisa</Select.Option>\n      <Select.Option value=\"hubot\">Hubot</Select.Option>\n    </Select>\n    <FormControl.Validation>This is a success message</FormControl.Validation>\n  </FormControl>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default RiverAccordion in JSX\nDESCRIPTION: This example demonstrates the basic usage of the RiverAccordion component with multiple items, each containing a heading, content, and visual element.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/RiverAccordion.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<RiverAccordion>\n  <RiverAccordion.Item>\n    <RiverAccordion.Heading>Heading 1</RiverAccordion.Heading>\n    <RiverAccordion.Content>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </RiverAccordion.Content>\n    <RiverAccordion.Visual>\n      <img\n        src=\"/brand/assets/placeholder-1.png\"\n        alt=\"Visual content for item 1\"\n      />\n    </RiverAccordion.Visual>\n  </RiverAccordion.Item>\n\n  <RiverAccordion.Item>\n    <RiverAccordion.Heading>Heading 2</RiverAccordion.Heading>\n    <RiverAccordion.Content>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </RiverAccordion.Content>\n    <RiverAccordion.Visual>\n      <img\n        src=\"/brand/assets/placeholder-2.png\"\n        alt=\"Visual content for item 2\"\n      />\n    </RiverAccordion.Visual>\n  </RiverAccordion.Item>\n\n  <RiverAccordion.Item>\n    <RiverAccordion.Heading>Heading 3</RiverAccordion.Heading>\n    <RiverAccordion.Content>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </RiverAccordion.Content>\n    <RiverAccordion.Visual>\n      <img\n        src=\"/brand/assets/placeholder-3.png\"\n        alt=\"Visual content for item 3\"\n      />\n    </RiverAccordion.Visual>\n  </RiverAccordion.Item>\n</RiverAccordion>\n```\n\n----------------------------------------\n\nTITLE: Rendering CheckboxGroup with Caption in React\nDESCRIPTION: This example shows how to add a caption to the CheckboxGroup for providing additional context.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CheckboxGroup/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<CheckboxGroup>\n  <CheckboxGroup.Label>Notification preferences</CheckboxGroup.Label>\n  <CheckboxGroup.Caption>\n    Select how you'd like to be notified\n  </CheckboxGroup.Caption>\n  <FormControl>\n    <FormControl.Label>Email notifications</FormControl.Label>\n    <Checkbox value=\"email\" />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Browser notifications</FormControl.Label>\n    <Checkbox value=\"browser\" />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Mobile notifications</FormControl.Label>\n    <Checkbox value=\"mobile\" />\n  </FormControl>\n</CheckboxGroup>\n```\n\n----------------------------------------\n\nTITLE: Creating Responsive Box Spacing for Different Viewports\nDESCRIPTION: Shows how to configure responsive padding and margin that adapts to different viewport sizes using an object with narrow, regular, and wide breakpoints.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n  <Box className=\"bg-yellow-lines\">\n    <Box\n      margin={{\n        narrow: 48,\n        regular: 96,\n        wide: 128,\n      }}\n      className=\"bg-red-lines\"\n    >\n      margin\n    </Box>\n  </Box>\n  <Box\n    padding={{\n      narrow: 48,\n      regular: 96,\n      wide: 128,\n    }}\n    className=\"bg-red-lines\"\n  >\n    padding\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Rendering Checked Variant UnorderedList in JSX\nDESCRIPTION: This example shows how to use the UnorderedList component with the 'checked' variant, which adds checkmarks to list items.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/UnorderedList/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<UnorderedList variant=\"checked\">\n  <UnorderedList.Item>\n    Automatic security and version updates\n  </UnorderedList.Item>\n  <UnorderedList.Item>GitHub Security Advisories</UnorderedList.Item>\n  <UnorderedList.Item>Code and secret scanning</UnorderedList.Item>\n  <UnorderedList.Item>Dependency review</UnorderedList.Item>\n  <UnorderedList.Item>\n    Automated authentication and identity management\n  </UnorderedList.Item>\n</UnorderedList>\n```\n\n----------------------------------------\n\nTITLE: Rendering IDE Component with GitHub Copilot Chat in JSX\nDESCRIPTION: Shows how to simulate GitHub Copilot Chat using the IDE.Chat sub-component. The script prop allows for customization of the chat interaction.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/IDE.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<IDE height={700}>\n  <IDE.Chat\n    alternativeText=\"A user asks how to concatenate arrays in JavaScript, Copilot demonstrates using the concat method, and the user confirms it worked.\"\n    script={[\n      {\n        role: 'user',\n        handle: 'monalisa',\n        avatar: '/brand/assets/avatar-mona.png',\n        message: 'How do I concatenate two arrays in JavaScript?',\n      },\n      {\n        role: 'assistant',\n        handle: 'GitHub Copilot',\n        message:\n          \"To concatenate two arrays in JavaScript, you can use the `concat` method. Here's an example:\",\n        codeSnippet: `const array1 = [1, 2, 3];\\nconst array2 = [4, 5, 6];\\nconst resultArray = array1.concat(array2);\\nconsole.log(resultArray); // Output: [1, 2, 3, 4, 5, 6]`,\n      },\n      {\n        role: 'user',\n        handle: 'monalisa',\n        avatar: '/brand/assets/avatar-mona.png',\n        message: 'It worked!',\n      },\n    ]}\n  />\n</IDE>\n```\n\n----------------------------------------\n\nTITLE: Configuring Stack Alignment with Interactive Controls in React\nDESCRIPTION: Shows an interactive example of using Stack with configurable alignment properties, including justifyContent and alignItems.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Stack/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const [alignItemsValue, setAlignItemsValue] = React.useState('center')\n  const [justifyContentValue, setJustifyContentValue] = React.useState('space-between')\n\n  const handleMainAxisChange = event => setJustifyContentValue(event.target.value)\n  const handleCrossAxisChange = event => setAlignItemsValue(event.target.value)\n\n  return (\n    <Container>\n      <Stack\n        direction=\"horizontal\"\n        alignItems={alignItemsValue}\n        justifyContent={justifyContentValue}\n        style={{height: 400}}\n      >\n        <img\n          src=\"/images/placeholder.png\"\n          alt=\"placeholder with gray background and no foreground text\"\n          style={{width: 150, height: 75}}\n        />\n        <img\n          src=\"/images/placeholder.png\"\n          alt=\"placeholder with gray background and no foreground text\"\n          style={{width: 150, height: 75}}\n        />\n        <img\n          src=\"/images/placeholder.png\"\n          alt=\"placeholder with gray background and no foreground text\"\n          style={{width: 150, height: 75}}\n        />\n      </Stack>\n\n      <Stack direction=\"horizontal\" gap=\"spacious\" justifyContent=\"center\">\n        <FormControl>\n          <FormControl.Label>Main axis</FormControl.Label>\n          <Select defaultValue={justifyContentValue} onChange={handleMainAxisChange}>\n            <Select.Option value=\"center\">center</Select.Option>\n            <Select.Option value=\"flex-start\">flex-start</Select.Option>\n            <Select.Option value=\"flex-end\">flex-end</Select.Option>\n            <Select.Option value=\"space-between\">space-between</Select.Option>\n            <Select.Option value=\"space-around\">space-around</Select.Option>\n            <Select.Option value=\"space-evenly\">space-evenly</Select.Option>\n          </Select>\n        </FormControl>\n\n        <FormControl>\n          <FormControl.Label>Cross axis</FormControl.Label>\n          <Select defaultValue={alignItemsValue} onChange={handleCrossAxisChange}>\n            <Select.Option value=\"center\">center</Select.Option>\n            <Select.Option value=\"flex-start\">flex-start</Select.Option>\n            <Select.Option value=\"flex-end\">flex-end</Select.Option>\n          </Select>\n        </FormControl>\n      </Stack>\n    </Container>\n  )\n}\n\nrender(App)\n```\n\n----------------------------------------\n\nTITLE: Custom URL Pagination\nDESCRIPTION: Implementation of Pagination with custom URL generation using the hrefBuilder prop to create custom page links.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pagination.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Pagination\n  pageCount={3}\n  currentPage={1}\n  hrefBuilder={(n) => `https://primer.style/brand/page/${n}`}\n/>\n```\n\n----------------------------------------\n\nTITLE: Cards with Staggered Animation Example\nDESCRIPTION: Shows how to implement staggered animations with multiple Card components using AnimationProvider.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/animation.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<AnimationProvider staggerDelayIncrement={200}>\n  <Grid>\n    <Grid.Column\n      span={{\n        xsmall: 12,\n        large: 6,\n      }}\n    >\n      <Animate animate=\"scale-in-up\">\n        <Card href=\"https://github.com\">\n          <Card.Icon icon={CopilotIcon} color=\"indigo\" hasBackground />\n          <Card.Label>Limited</Card.Label>\n          <Card.Heading>\n            Collaboration is the key to DevOps success\n          </Card.Heading>\n          <Card.Description>\n            Everything you need to know about getting started with GitHub\n            Actions.\n          </Card.Description>\n        </Card>\n      </Animate>\n    </Grid.Column>\n    <Grid.Column\n      span={{\n        xsmall: 12,\n        large: 6,\n      }}\n    >\n      <Animate animate=\"scale-in-up\">\n        <Card href=\"https://github.com\">\n          <Card.Icon icon={RocketIcon} hasBackground color=\"blue\" />\n          <Card.Label>Limited</Card.Label>\n          <Card.Heading>GitHub Actions cheat sheet and more</Card.Heading>\n          <Card.Description>\n            In a recent study, 70% of organizations reported they had adopted\n            DevOps.\n          </Card.Description>\n        </Card>\n      </Animate>\n    </Grid.Column>\n  </Grid>\n</AnimationProvider>\n```\n\n----------------------------------------\n\nTITLE: Text Alignment in JSX using Stack and Text Components\nDESCRIPTION: Demonstrates how to align text using the align prop of the Text component within a Stack component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Text/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"vertical\">\n  <Text as=\"p\" align=\"start\">\n    Start\n  </Text>\n  <Text as=\"p\" align=\"center\">\n    Center\n  </Text>\n  <Text as=\"p\" align=\"end\">\n    End\n  </Text>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Rendering IDE Component with GitHub Copilot Suggestions in JSX\nDESCRIPTION: Demonstrates how to simulate GitHub Copilot suggestions in the IDE component using the suggestedLineStart property.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/IDE.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<IDE height={500}>\n  <IDE.Editor\n    files={[\n      {\n        name: 'index.js',\n        // Line number at which the suggestion will apply\n        suggestedLineStart: 6,\n        alternativeText:\n          'TypeScript sentiment analysis function with D3.js visualization. Copilot suggests completing the scatterplot with SVG creation and circle attributes.',\n\n        code: `import { fetch } from \"fetch-h2\";\n\nasync function isPositive(text: string): Promise<boolean> {\n  const response = await fetch(...)\n  const drawScatterplot = (data, height, width) => {\n    const svg = d3.select(\"#scatterplot\")\n      .data(data)\n      .attr(\"cx\", d => d.x)\n      .attr(\"cy\", d => d.y)\n      .attr(\"r\", 5)\n  }\n  const json = await response.json();\n  return json.label === \"pos\";\n}`\n          .split('\\n')\n          .map((line) => line || ' '),\n      },\n    ]}\n  />\n</IDE>\n```\n\n----------------------------------------\n\nTITLE: Default ActionMenu Implementation\nDESCRIPTION: Example showing basic usage of ActionMenu with button and overlay items. Demonstrates handling item selection with an alert.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ActionMenu.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<ActionMenu onSelect={(newValue) => alert(`Pressed ${newValue}`)}>\n  <ActionMenu.Button>Open menu</ActionMenu.Button>\n  <ActionMenu.Overlay aria-label=\"GitHub features\">\n    <ActionMenu.Item value=\"Copilot\" selected>\n      Copilot\n    </ActionMenu.Item>\n    <ActionMenu.Item value=\"Codespaces\">Codespaces</ActionMenu.Item>\n    <ActionMenu.Item value=\"CodeQL\">CodeQL</ActionMenu.Item>\n  </ActionMenu.Overlay>\n</ActionMenu>\n```\n\n----------------------------------------\n\nTITLE: Section Component with Predefined Background Color\nDESCRIPTION: This example demonstrates using a predefined background color ('subtle') for a Section component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Section/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Section backgroundColor=\"subtle\">\n  <SectionIntro align=\"center\">\n    <SectionIntro.Heading size=\"3\">Predefined background</SectionIntro.Heading>\n    <SectionIntro.Description>\n      This section has a predefined background color.\n    </SectionIntro.Description>\n  </SectionIntro>\n</Section>\n```\n\n----------------------------------------\n\nTITLE: Implementing Single-Option PricingOptions in React\nDESCRIPTION: This snippet shows how to create a PricingOptions component with a single pricing plan. It includes a heading, description, price, and action buttons for the plan.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/PricingOptions.mdx#2025-04-12_snippet_3\n\nLANGUAGE: JSX\nCODE:\n```\n<PricingOptions>\n  <PricingOptions.Item>\n    <PricingOptions.Heading>Copilot Individual</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Code completions, Chat, and more for indie developers and freelancers.\n    </PricingOptions.Description>\n    <PricingOptions.Price\n      currencySymbol=\"$\"\n      trailingText=\"per month / $100 per year\"\n    >\n      10\n    </PricingOptions.Price>\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Buy now\n    </PricingOptions.PrimaryAction>\n    <PricingOptions.SecondaryAction href=\"/contact\">\n      Contact sales\n    </PricingOptions.SecondaryAction>\n  </PricingOptions.Item>\n</PricingOptions>\n```\n\n----------------------------------------\n\nTITLE: Heading Letter Spacing Configuration\nDESCRIPTION: Examples of different letter spacing options and responsive letter spacing implementation.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Heading/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Heading as=\"h3\" letterSpacing=\"condensed\">condensed</Heading>\n  <Heading as=\"h3\" letterSpacing=\"normal\">normal</Heading>\n  <Heading as=\"h3\" letterSpacing=\"none\">none</Heading>\n\n  <br />\n  <br />\n  <Heading\n    as=\"h4\"\n    letterSpacing={{\n      narrow: 'condensed',\n      regular: 'normal',\n      wide: 'none',\n    }}\n  >\n    Responsive\n  </Heading>\n</>\n```\n\n----------------------------------------\n\nTITLE: Heading Weight Customization\nDESCRIPTION: Examples of different heading weights and responsive weight implementation using the weight prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Heading/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Heading as=\"h3\" weight=\"heavy\">heavy</Heading>\n  <Heading as=\"h3\" weight=\"extrabold\">extrabold</Heading>\n  <Heading as=\"h3\" weight=\"bold\">bold</Heading>\n  <Heading as=\"h3\" weight=\"semibold\">semibold</Heading>\n  <Heading as=\"h3\" weight=\"medium\">medium</Heading>\n  <Heading as=\"h3\" weight=\"normal\">normal</Heading>\n  <Heading as=\"h3\" weight=\"light\">light</Heading>\n\n  <br />\n  <br />\n  <Heading\n    as=\"h4\"\n    weight={{\n      narrow: 'heavy',\n      regular: 'semibold',\n      wide: 'light',\n    }}\n  >\n    Responsive\n  </Heading>\n</>\n```\n\n----------------------------------------\n\nTITLE: Implementing LogoSuite with Visually Hidden Heading in React\nDESCRIPTION: This example shows how to implement LogoSuite with a visually hidden heading for accessibility. The heading is important for navigation with assistive technology but is hidden visually using the visuallyHidden prop. This implementation includes placeholder SVG logos.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<LogoSuite>\n  <LogoSuite.Heading visuallyHidden>\n    The ultimate developer experience is here.\n  </LogoSuite.Heading>\n  <LogoSuite.Logobar>\n    <svg role=\"img\" viewBox=\"0 0 300 100\">\n      <title>Placeholder logo</title>\n      <rect width=\"100%\" height=\"100%\" />\n    </svg>\n    <svg role=\"img\" viewBox=\"0 0 300 100\">\n      <title>Placeholder logo</title>\n      <rect width=\"100%\" height=\"100%\" />\n    </svg>\n    <svg role=\"img\" viewBox=\"0 0 300 100\">\n      <title>Placeholder logo</title>\n      <rect width=\"100%\" height=\"100%\" />\n    </svg>\n    <svg role=\"img\" viewBox=\"0 0 300 100\">\n      <title>Placeholder logo</title>\n      <rect width=\"100%\" height=\"100%\" />\n    </svg>\n  </LogoSuite.Logobar>\n</LogoSuite>\n```\n\n----------------------------------------\n\nTITLE: EyebrowBanner with Light and Dark Color Modes in React\nDESCRIPTION: Implementation showing how to use ThemeProvider to adjust the EyebrowBanner appearance for light and dark themes. The example renders the same banner in both color modes for comparison.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/EyebrowBanner.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack gap=\"none\" padding=\"none\">\n  <ThemeProvider colorMode=\"light\">\n    <Box\n      backgroundColor=\"default\"\n      padding=\"normal\"\n      borderWidth=\"thin\"\n      borderStyle=\"solid\"\n      borderColor=\"default\"\n    >\n      <EyebrowBanner href=\"http://githubuniverse.com\">\n        <EyebrowBanner.Visual>\n          <img\n            src=\"https://github.githubassets.com/assets/eyebrow-23@2x-563f292d9e30.png\"\n            alt=\"Badge featuring a GitHub logo surrounded by Universe-themed shapes\"\n          />\n        </EyebrowBanner.Visual>\n        <EyebrowBanner.Heading>\n          GitHub Universe: Dive in to AI, security, and DevEx\n        </EyebrowBanner.Heading>\n        <EyebrowBanner.SubHeading>\n          Get your tickets now to join us on Nov. 8-9.\n        </EyebrowBanner.SubHeading>\n      </EyebrowBanner>\n    </Box>\n  </ThemeProvider>\n  <ThemeProvider colorMode=\"dark\">\n    <Box backgroundColor=\"default\" padding=\"normal\">\n      <EyebrowBanner href=\"http://githubuniverse.com\">\n        <EyebrowBanner.Visual>\n          <img\n            src=\"https://github.githubassets.com/assets/eyebrow-23@2x-563f292d9e30.png\"\n            alt=\"Badge featuring a GitHub logo surrounded by Universe-themed shapes\"\n          />\n        </EyebrowBanner.Visual>\n        <EyebrowBanner.Heading>\n          GitHub Universe: Dive in to AI, security, and DevEx\n        </EyebrowBanner.Heading>\n        <EyebrowBanner.SubHeading>\n          Get your tickets now to join us on Nov. 8-9.\n        </EyebrowBanner.SubHeading>\n      </EyebrowBanner>\n    </Box>\n  </ThemeProvider>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Inline RadioGroup with Stack Component\nDESCRIPTION: Example showing how to arrange radio inputs horizontally using the Stack component when space is limited, with a visually hidden label for accessibility.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/RadioGroup/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<RadioGroup>\n  <RadioGroup.Label visuallyHidden>Time period</RadioGroup.Label>\n  <CheckboxGroup.Caption>\n    Some inline radio inputs with a visually hidden label\n  </CheckboxGroup.Caption>\n  <Stack direction=\"horizontal\" gap=\"normal\" padding=\"none\" flexWrap=\"wrap\">\n    <FormControl>\n      <FormControl.Label>Last 7 days</FormControl.Label>\n      <Radio name=\"period\" value=\"week\" />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Last 30 days</FormControl.Label>\n      <Radio name=\"period\" value=\"month\" defaultChecked />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Last year</FormControl.Label>\n      <Radio name=\"period\" value=\"year\" />\n    </FormControl>\n  </Stack>\n</RadioGroup>\n```\n\n----------------------------------------\n\nTITLE: Rendering IDE Component with Animations in JSX\nDESCRIPTION: Shows how to enable line-by-line animations in the IDE component by formatting the code prop as an array of lines.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/IDE.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<IDE height={500}>\n  <IDE.Editor\n    files={[\n      {\n        name: 'index.js',\n        alternativeText:\n          'TypeScript sentiment analysis function with D3.js visualization.',\n\n        code: `import { fetch } from \"fetch-h2\";\n\nasync function isPositive(text: string): Promise<boolean> {\n  const response = await fetch(...)\n  const drawScatterplot = (data, height, width) => {\n    const svg = d3.select(\"#scatterplot\")\n      .data(data)\n      .attr(\"cx\", d => d.x)\n      .attr(\"cy\", d => d.y)\n      .attr(\"r\", 5)\n  }\n  const json = await response.json();\n  return json.label === \"pos\";\n}`\n          .split('\\n')\n          .map((line) => line || ' '),\n      },\n    ]}\n  />\n</IDE>\n```\n\n----------------------------------------\n\nTITLE: Basic AnchorNav Implementation Example\nDESCRIPTION: Demonstrates a basic implementation of the AnchorNav component with multiple section links and a primary action. The component is designed to navigate between different sections of a page.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/AnchorNav.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{position: 'relative', overflowX: 'scroll'}}>\n  <AnchorNav>\n    <AnchorNav.Link href=\"#basic-section1\">Section one</AnchorNav.Link>\n    <AnchorNav.Link href=\"#basic-section2\">Section two</AnchorNav.Link>\n    <AnchorNav.Link href=\"#basic-section3\">Section three</AnchorNav.Link>\n    <AnchorNav.Link href=\"#basic-section4\">Section four</AnchorNav.Link>\n    <AnchorNav.Link href=\"#basic-section5\">Section five</AnchorNav.Link>\n    <AnchorNav.Action href=\"#\">Sign up</AnchorNav.Action>\n  </AnchorNav>\n\n  <section\n    id=\"basic-section1\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-lemon-0)',\n    }}\n  >\n    Section 1\n  </section>\n  <section\n    id=\"basic-section2\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-yellow-0)',\n    }}\n  >\n    Section 2\n  </section>\n  <section\n    id=\"basic-section3\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-lime-0)',\n    }}\n  >\n    Section 3\n  </section>\n  <section\n    id=\"basic-section4\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-green-0)',\n    }}\n  >\n    Section 4\n  </section>\n  <section\n    id=\"basic-section5\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-teal-0)',\n    }}\n  >\n    Section 5\n  </section>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Creating Stacked Cards Layout in JSX\nDESCRIPTION: Demonstrates how to create a horizontal stack of cards using the Stack component, with center alignment and specific props for this arrangement.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_11\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack\n  direction=\"horizontal\"\n  alignItems=\"center\"\n  justifyContent=\"center\"\n  gap=\"normal\"\n>\n  <Card href=\"https://github.com\" hasBorder fullWidth align=\"center\">\n    <Card.Icon icon={CopilotIcon} color=\"indigo\" hasBackground />\n    <Card.Heading>Heading</Card.Heading>\n    <Card.Description>\n      Everything you need to know about getting started with GitHub Actions.\n    </Card.Description>\n  </Card>\n  <Card href=\"https://github.com\" hasBorder fullWidth align=\"center\">\n    <Card.Icon icon={RocketIcon} color=\"purple\" hasBackground />\n    <Card.Heading>Heading</Card.Heading>\n    <Card.Description>\n      Everything you need to know about getting started with GitHub Actions.\n    </Card.Description>\n  </Card>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Default VideoPlayer Usage in JSX\nDESCRIPTION: Demonstrates the basic usage of the VideoPlayer component with a video source and caption track.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<VideoPlayer title=\"GitHub media player\">\n  <VideoPlayer.Source src=\"https://primer.github.io/brand/assets/example.mp4\" />\n  <VideoPlayer.Track src=\"/brand/assets/example.vtt\" default />\n</VideoPlayer>\n```\n\n----------------------------------------\n\nTITLE: CTABanner with Custom Shadow Colors\nDESCRIPTION: Demonstrates how to customize shadow colors of the CTABanner through CSS variables, using purple and red hues in this example.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const designTokenOverrides = `\n  .custom-colors[data-color-mode='dark'] {\n\n    /*\n     * Modify the value of these tokens.\n     * Remember to apply light mode equivalents if you're enabling theme switching.\n     */\n    --brand-CTABanner-shadow-color-start: var(--base-color-scale-purple-5);\n    --brand-CTABanner-shadow-color-end: var(--base-color-scale-red-5);\n\n  }\n`\n  return (\n    <ThemeProvider colorMode=\"dark\" className=\"custom-colors\">\n      <style>{designTokenOverrides}</style>\n      <CTABanner>\n        <CTABanner.Heading>\n          Where the most ambitious teams build great things\n        </CTABanner.Heading>\n        <CTABanner.Description>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n          ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n          elementum.\n        </CTABanner.Description>\n        <CTABanner.ButtonGroup>\n          <Button>Primary Action</Button>\n          <Button>Secondary Action</Button>\n        </CTABanner.ButtonGroup>\n      </CTABanner>\n    </ThemeProvider>\n  )\n}\n\nrender(<App />)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Text Sizes in JSX\nDESCRIPTION: Shows how to use different sizes for the Text component using the size prop and mapping over TextSizes.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Text/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  {TextSizes.map((size) => (\n    <Text key={size} size={size} as=\"p\">\n      Text {size}\n    </Text>\n  ))}\n</>\n```\n\n----------------------------------------\n\nTITLE: Rendering Default IDE Component in JSX\nDESCRIPTION: Demonstrates rendering the IDE component with a code editor containing multiple files. It includes TypeScript and Python code examples.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/IDE.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<IDE height={500}>\n  <IDE.Editor\n    showReplayButton={false}\n    files={[\n      {\n        name: 'index.js',\n        alternativeText:\n          'TypeScript sentiment analysis function with D3.js visualization.',\n        code: `import { fetch } from \"fetch-h2\";\n\nasync function isPositive(text: string): Promise<boolean> {\n  const response = await fetch(...)\n  const drawScatterplot = (data, height, width) => {\n    const svg = d3.select(\"#scatterplot\")\n      .data(data)\n      .attr(\"cx\", d => d.x)\n      .attr(\"cy\", d => d.y)\n      .attr(\"r\", 5)\n  }\n  const json = await response.json();\n  return json.label === \"pos\";\n}`,\n      },\n      {\n        name: 'parse_expenses.py',\n        alternativeText:\n          'Python function that converts financial transaction strings into structured data, parsing dates, amounts, and currencies while skipping comments',\n        code: `import datetime\n\ndef parse_expenses(expenses_string):\nIgnore lines starting with #.\nParse the date using datetime.\nExample expenses_string:\n2016-01-02 -34.01 USD\n2016-01-03 2.59 DKK\n2016-01-03 -2.72 EUR\n\"\"\"\nexpenses = []\nfor line in expenses_string.splitlines():\nif line.startswith(\"#\"):\ncontinue\ndate, value, currency = line.split(\" \")\nexpenses.append((datetime.datetime.strptime(date, \"%Y-%m-%d\"),\n          float(value),\n          currency))\nreturn expenses`,\n      },\n    ]}\n  />\n</IDE>\n```\n\n----------------------------------------\n\nTITLE: Implementing Statistic with Different Sizes\nDESCRIPTION: Demonstrates the small, medium, and large size options available for the Statistic component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Statistic.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Statistic size=\"small\">\n    <Statistic.Heading>+25%</Statistic.Heading>\n    <Statistic.Description>increase in developer speed</Statistic.Description>\n  </Statistic>\n  <br />\n  <br />\n  <Statistic size=\"medium\">\n    <Statistic.Heading>+25%</Statistic.Heading>\n    <Statistic.Description>increase in developer speed</Statistic.Description>\n  </Statistic>\n  <br />\n  <br />\n  <Statistic size=\"large\">\n    <Statistic.Heading>+25%</Statistic.Heading>\n    <Statistic.Description>increase in developer speed</Statistic.Description>\n  </Statistic>\n</>\n```\n\n----------------------------------------\n\nTITLE: Creating Minimal Layout ComparisonTable in React\nDESCRIPTION: Shows implementation of a minimal variant ComparisonTable comparing containerization vs virtualization. This version uses static content and the minimal presentation mode for reduced visual complexity.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ComparisonTable.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<ComparisonTable heading=\"What is containerization?\" variant=\"minimal\">\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell></ComparisonTable.Cell>\n    <ComparisonTable.Cell>Containerization</ComparisonTable.Cell>\n    <ComparisonTable.Cell>Virtualization</ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Operating system (OS) </ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      Containers use the host OS, meaning all containers must be compatible with\n      that OS.\n    </ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      VMs are effectively separate computers that run their own OS. For example,\n      a VM can run Windows even if the host OS is Ubuntu.\n    </ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Computing resources </ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      Containers are lightweight, taking only the resources needed to run the\n      application and the container manager.{' '}\n    </ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      VMs emulate a full computer, meaning that they replicate much of the host\n      environment. That uses more memory, CPU cycles, and disk space.\n    </ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Shareability </ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      Container images are relatively small in size, making them easy to share.\n    </ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      VM images are often much larger as they include a full OS.\n    </ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Security</ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      Containers might be isolated only very lightly from each other. A process\n      in one container could access memory used by another container, for\n      example.\n    </ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      By running a separate OS, VMs running on the same hardware are more\n      isolated from one another than containers.\n    </ComparisonTable.Cell>\n  </ComparisonTable.Row>\n</ComparisonTable>\n```\n\n----------------------------------------\n\nTITLE: Using LogoSuite Component in React\nDESCRIPTION: This example demonstrates how to use the LogoSuite component to display a list of logos. It includes a hidden heading and a logobar with SVG logos for GitHub, Microsoft, and LinkedIn.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<LogoSuite>\n  <LogoSuite.Heading visuallyHidden>Featured sponsors</LogoSuite.Heading>\n  <LogoSuite.Logobar>\n    <svg\n      role=\"img\"\n      focusable=\"false\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 45 16\"\n      width=\"45\"\n      height=\"16\"\n    >\n      <title>GitHub</title>\n      <path d=\"M8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17Zm35.85 2.33c0 3.43-1.11 4.41-3.05 4.41-1.64 0-2.52-.83-2.52-.83s-.04.46-.09.52c-.03.06-.08.08-.14.08h-1.48c-.1 0-.19-.08-.19-.17l.02-11.11c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v3.77s.82-.53 2.02-.53l-.01-.02c1.2 0 2.97.45 2.97 3.88ZM27.68 2.43c.09 0 .17.08.17.17v11.11c0 .09-.08.17-.17.17h-2.13c-.09 0-.17-.08-.17-.17l.02-4.75h-3.31v4.75c0 .09-.08.17-.17.17h-2.13c-.08 0-.17-.08-.17-.17V2.6c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v4.09h3.31V2.6c0-.09.08-.17.17-.17Zm8.26 3.64c.11 0 .19.08.19.17l-.02 7.47c0 .09-.06.17-.17.17H34.6c-.07 0-.14-.04-.16-.09-.03-.06-.08-.45-.08-.45s-1.13.77-2.52.77c-1.69 0-2.92-.55-2.92-2.75V6.25c0-.09.08-.17.17-.17h2.14c.09 0 .17.08.17.17V11c0 .75.22 1.09.97 1.09s1.3-.39 1.3-.39V6.26c0-.11.06-.19.17-.19Zm-17.406 5.971h.005a.177.177 0 0 1 .141.179v1.5c0 .07-.03.14-.09.16-.1.05-.74.22-1.27.22-1.16 0-2.86-.25-2.86-2.69V8.13h-1.11c-.09 0-.17-.08-.17-.19V6.58c0-.08.05-.15.13-.17.07-.01 1.16-.28 1.16-.28V3.96c0-.08.05-.13.14-.13h2.16c.09 0 .14.05.14.13v2.11h1.59c.08 0 .16.08.16.17v1.7c0 .11-.07.19-.16.19h-1.59v3.131c0 .47.27.83 1.05.83.247 0 .481-.049.574-.05ZM12.24 6.06c.09 0 .17.08.17.17v7.37c0 .18-.05.27-.25.27h-1.92c-.17 0-.3-.07-.3-.27V6.26c0-.11.08-.2.17-.2Zm29.99 3.78c0-1.81-.73-2.05-1.5-1.97-.6.04-1.08.34-1.08.34v3.52s.49.34 1.22.36c1.03.03 1.36-.34 1.36-2.25ZM11.19 2.68c.75 0 1.36.61 1.36 1.38 0 .77-.61 1.38-1.36 1.38-.77 0-1.38-.61-1.38-1.38 0-.77.61-1.38 1.38-1.38Zm7.34 9.35v.001l.01.01h-.001l-.005-.001v.001c-.009-.001-.015-.011-.024-.011Z\"></path>\n    </svg>\n    <svg\n      role=\"img\"\n      focusable=\"false\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 337.6 72\"\n    >\n      <title>Microsoft</title>\n      <path\n        fill=\"#737373\"\n        d=\"M140.4 14.4v43.2h-7.5V23.7h-.1l-13.4 33.9h-5l-13.7-33.9h-.1v33.9h-6.9V14.4h10.8l12.4 32h.2l13.1-32h10.2zm6.2 3.3c0-1.2.4-2.2 1.3-3 .9-.8 1.9-1.2 3.1-1.2 1.3 0 2.4.4 3.2 1.2s1.3 1.8 1.3 3-.4 2.2-1.3 3c-.9.8-1.9 1.2-3.2 1.2s-2.3-.4-3.1-1.2c-.8-.9-1.3-1.9-1.3-3zm8.1 8.9v31h-7.3v-31h7.3zm22.1 25.7c1.1 0 2.3-.2 3.6-.8 1.3-.5 2.5-1.2 3.6-2v6.8c-1.2.7-2.5 1.2-4 1.5-1.5.3-3.1.5-4.9.5-4.6 0-8.3-1.4-11.1-4.3-2.9-2.9-4.3-6.6-4.3-11 0-5 1.5-9.1 4.4-12.3 2.9-3.2 7-4.8 12.4-4.8 1.4 0 2.8.2 4.1.5 1.4.3 2.5.8 3.3 1.2v7c-1.1-.8-2.3-1.5-3.4-1.9-1.2-.4-2.4-.7-3.6-.7-2.9 0-5.2.9-7 2.8s-2.6 4.4-2.6 7.6c0 3.1.9 5.6 2.6 7.3 1.7 1.7 4 2.6 6.9 2.6zm27.9-26.2c.6 0 1.1 0 1.6.1s.9.2 1.2.3v7.4c-.4-.3-.9-.6-1.7-.8s-1.6-.4-2.7-.4c-1.8 0-3.3.8-4.5 2.3s-1.9 3.8-1.9 7v15.6h-7.3v-31h7.3v4.9h.1c.7-1.7 1.7-3 3-4 1.4-.9 3-1.4 4.9-1.4zm3.2 16.5c0-5.1 1.5-9.2 4.3-12.2 2.9-3 6.9-4.5 12-4.5 4.8 0 8.6 1.4 11.3 4.3s4.1 6.8 4.1 11.7c0 5-1.5 9-4.3 12-2.9 3-6.8 4.5-11.8 4.5-4.8 0-8.6-1.4-11.4-4.2-2.8-2.9-4.2-6.8-4.2-11.6zm7.6-.3c0 3.2.7 5.7 2.2 7.4s3.6 2.6 6.3 2.6c2.6 0 4.7-.8 6.1-2.6 1.4-1.7 2.1-4.2 2.1-7.6 0-3.3-.7-5.8-2.1-7.6-1.4-1.7-3.5-2.6-6-2.6-2.7 0-4.7.9-6.2 2.7-1.7 1.9-2.4 4.4-2.4 7.7zm35-7.5c0 1 .3 1.9 1 2.5.7.6 2.1 1.3 4.4 2.2 2.9 1.2 5 2.5 6.1 3.9 1.2 1.5 1.8 3.2 1.8 5.3 0 2.9-1.1 5.2-3.4 7-2.2 1.8-5.3 2.6-9.1 2.6-1.3 0-2.7-.2-4.3-.5-1.6-.3-2.9-.7-4-1.2v-7.2c1.3.9 2.8 1.7 4.3 2.2 1.5.5 2.9.8 4.2.8 1.6 0 2.9-.2 3.6-.7.8-.5 1.2-1.2 1.2-2.3 0-1-.4-1.8-1.2-2.6-.8-.7-2.4-1.5-4.6-2.4-2.7-1.1-4.6-2.4-5.7-3.8s-1.7-3.2-1.7-5.4c0-2.8 1.1-5.1 3.3-6.9 2.2-1.8 5.1-2.7 8.6-2.7 1.1 0 2.3.1 3.6.4s2.5.6 3.4.9V34c-1-.6-2.1-1.2-3.4-1.7-1.3-.5-2.6-.7-3.8-.7-1.4 0-2.5.3-3.2.8-.7.7-1.1 1.4-1.1 2.4zm16.4 7.8c0-5.1 1.5-9.2 4.3-12.2 2.9-3 6.9-4.5 12-4.5 4.8 0 8.6 1.4 11.3 4.3s4.1 6.8 4.1 11.7c0 5-1.5 9-4.3 12-2.9 3-6.8 4.5-11.8 4.5-4.8 0-8.6-1.4-11.4-4.2-2.7-2.9-4.2-6.8-4.2-11.6zm7.6-.3c0 3.2.7 5.7 2.2 7.4s3.6 2.6 6.3 2.6c2.6 0 4.7-.8 6.1-2.6 1.4-1.7 2.1-4.2 2.1-7.6 0-3.3-.7-5.8-2.1-7.6-1.4-1.7-3.5-2.6-6-2.6-2.7 0-4.7.9-6.2 2.7-1.6 1.9-2.4 4.4-2.4 7.7zm48.4-9.7H312v25h-7.4v-25h-5.2v-6h5.2v-4.3c0-3.2 1.1-5.9 3.2-8s4.8-3.1 8.1-3.1c.9 0 1.7.1 2.4.1s1.3.2 1.8.4V18c-.2-.1-.7-.3-1.3-.5-.6-.2-1.3-.3-2.1-.3-1.5 0-2.7.5-3.5 1.4-.8.9-1.2 2.4-1.2 4.2v3.7h10.9v-7l7.3-2.2v9.2h7.4v6h-7.4V47c0 1.9.4 3.2 1 4 .7.8 1.8 1.2 3.3 1.2.4 0 .9-.1 1.5-.3.6-.2 1.1-.4 1.5-.7v6c-.5.3-1.2.5-2.3.7-1.1.2-2.1.3-3.2.3-3.1 0-5.4-.8-6.9-2.4-1.5-1.6-2.3-4.1-2.3-7.4l.1-15.8z\"\n      />\n      <path fill=\"#F25022\" d=\"M0 0h34.2v34.2H0z\" />\n      <path fill=\"#7FBA00\" d=\"M37.8 0H72v34.2H37.8z\" />\n      <path fill=\"#00A4EF\" d=\"M0 37.8h34.2V72H0z\" />\n      <path fill=\"#FFB900\" d=\"M37.8 37.8H72V72H37.8z\" />\n    </svg>\n    <svg\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 291 79.46\"\n      width=\"291\"\n      height=\"79.46\"\n    >\n      <title>LinkedIn</title>\n      <path\n        d=\"M239.33 95.036c0 2.96 2.46 5.361 5.495 5.361h63.376c3.035 0 5.496-2.401 5.496-5.361V30.919c0-2.961-2.46-5.361-5.496-5.361h-63.376c-3.035 0-5.495 2.4-5.495 5.361v64.117z\"\n        style={{\n          fill: 'inherit',\n          fillOpacity: 1,\n          fillRule: 'nonzero',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n      <path\n        d=\"M31.152 37.709h31.035v10.189H42.383v38.874H31.152V37.709zM77.9 37.709v33.793H66.668V37.709H77.9zm-5.616 38.407c3.917 0 6.355 2.595 6.355 5.84-.073 3.315-2.438 5.837-6.28 5.837-3.843 0-6.355-2.522-6.355-5.837 0-3.245 2.437-5.84 6.207-5.84h.073zM83.115 37.709h11.233v18.872c0 1.01.073 2.019.37 2.741.811 2.017 2.66 4.107 5.763 4.107 4.065 0 5.69-3.1 5.69-7.64v-18.08h11.232v19.377c0 10.38-5.542 15.21-12.932 15.21-6.06 0-8.72-3.387-10.198-5.694h.075v4.9H83.116c.147-3.171 0-33.793 0-33.793zM133.249 86.772h-11.233V37.709h11.233v10.956l2.807 3.534 8.794-14.49h13.818l-14.779 20.977 12.932 14.272h-13.522s-9.237-12.769-10.05-14.283v28.097z\"\n        style={{\n          fill: 'inherit',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n      <path\n        d=\"M188.706 51.805c.148.868.37 2.533.37 4.415 0 8.736-4.435 17.604-16.11 17.604-12.488 0-18.252-9.877-18.252-18.835 0-11.08 7.02-18 19.287-18 4.877 0 9.384.72 13.08 2.234l-1.48 7.418c-3.029-1.005-6.132-1.507-9.974-1.507-5.247 0-9.828 2.153-10.198 6.743l23.277-.07zm-23.35 7.599c.295 2.884 2.216 7.138 7.02 7.138 5.097 0 6.28-4.543 6.28-7.138h-13.3zM216.801 86.772V69.788h-.147c-1.627 2.377-5.026 3.963-9.533 3.963-8.646 0-16.257-6.92-16.184-18.741 0-10.958 6.873-18.094 15.444-18.094 4.656 0 9.09 2.019 11.306 5.912h.222l.444-5.119h9.976c-.148 2.379-.297 6.488-.297 10.524v38.539h-11.231zm0-33.421c0-.864-.074-1.73-.222-2.45-.664-3.1-3.325-5.262-6.576-5.262-4.656 0-7.685 3.748-7.685 9.659 0 5.55 2.586 10.019 7.758 10.019 3.473 0 5.912-2.378 6.578-5.333.147-.65.147-1.371.147-2.019v-4.614z\"\n        style={{\n          fill: 'inherit',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n      <path\n        d=\"M261.873 37.749v33.794H250.64V37.749h11.233zm-5.617 38.408c3.917 0 6.355 2.595 6.355 5.838-.073 3.316-2.438 5.839-6.28 5.839-3.843 0-6.355-2.523-6.355-5.839 0-3.243 2.438-5.838 6.207-5.838h.073zM268.088 37.749h11.232v18.872c0 1.01.073 2.019.37 2.741.812 2.018 2.66 4.108 5.763 4.108 4.065 0 5.69-3.099 5.69-7.642V37.749h11.232v19.377c0 10.38-5.541 15.21-12.931 15.21-6.06 0-8.72-3.387-10.198-5.694h.075v4.901h-11.233c.148-3.171 0-33.794 0-33.794z\"\n        style={{\n          fill: 'var(--brand-color-canvas-default)',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n    </svg>\n  </LogoSuite.Logobar>\n</LogoSuite>\n```\n\n----------------------------------------\n\nTITLE: Rendering Pillar Component with Icon in React\nDESCRIPTION: Shows how to add an icon to the Pillar component and customize its color.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pillar/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Pillar>\n  <Pillar.Icon icon={<CopilotIcon />} color=\"purple\" />\n  <Pillar.Heading>Code search & code view</Pillar.Heading>\n  <Pillar.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Pillar.Description>\n</Pillar>\n```\n\n----------------------------------------\n\nTITLE: Default Timeline Implementation - JSX\nDESCRIPTION: Demonstrates basic implementation of the Timeline component with multiple Timeline.Item children. Shows how to structure a simple vertical timeline with text content.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Timeline.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Timeline>\n  <Timeline.Item>\n    GitHub Codespaces offers a complete dev environment in seconds, so you can\n    code, build, test, and open pull requests from any repo anywhere.\n  </Timeline.Item>\n  <Timeline.Item>\n    GitHub Copilot is your AI pair programmer that empowers you to complete\n    tasks 55% faster by turning natural language prompts into coding\n    suggestions.\n  </Timeline.Item>\n  <Timeline.Item>\n    GitHub Actions automates your build, test, and deployment workflow with\n    simple and secure CI/CD.\n  </Timeline.Item>\n</Timeline>\n```\n\n----------------------------------------\n\nTITLE: Timeline with Emphasized Text - JSX\nDESCRIPTION: Shows how to implement the Timeline component with emphasized text using the <b> element to create a duotone style effect on specific portions of the content.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Timeline.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Timeline>\n  <Timeline.Item>\n    <b>GitHub Codespaces</b> offers a complete dev environment in seconds, so\n    you can code, build, test, and open pull requests from any repo anywhere.\n  </Timeline.Item>\n  <Timeline.Item>\n    <b>GitHub Copilot</b> is your AI pair programmer that empowers you to\n    complete tasks 55% faster by turning natural language prompts into coding\n    suggestions.\n  </Timeline.Item>\n  <Timeline.Item>\n    <b>GitHub Actions</b> automates your build, test, and deployment workflow\n    with simple and secure CI/CD.\n  </Timeline.Item>\n</Timeline>\n```\n\n----------------------------------------\n\nTITLE: Rendering Button as Anchor Element in JSX\nDESCRIPTION: Demonstrates how to use the Button component as an anchor ('a') HTML element using the 'as' prop for polymorphism.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<Button as=\"a\" href=\"https://github.com\">\n  Register now\n</Button>\n```\n\n----------------------------------------\n\nTITLE: Full Width Prose Component Implementation\nDESCRIPTION: Shows how to use the Prose component with enableFullWidth prop to remove default max-width constraint\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Prose.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Prose\n  enableFullWidth\n  html={`<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut tempor lectus ipsum, consectetur convallis diam pretium quis. Proin ut felis ut eros tristique tincidunt.</p><p>Nulla ac odio eu magna hendrerit porta. Donec nec eros quis tortor tincidunt vulputate. Aenean id pharetra diam, sit amet auctor leo. Aliquam erat volutpat.</p>`}\n/>\n```\n\n----------------------------------------\n\nTITLE: River Component with Video Integration\nDESCRIPTION: Example of River component implementation with video content and multiple source formats\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<River imageTextRatio=\"60:40\">\n  <River.Visual hasShadow={false}>\n    <video\n      loop\n      playsInline\n      autoPlay\n      muted\n      aria-hidden=\"true\"\n      poster=\"https://github.githubassets.com/images/modules/site/issues/issue-tasks-progress-placeholder.png\"\n    >\n      <source\n        type=\"video/mp4; codecs=hevc,mp4a.40.2\"\n        src=\"https://github.githubassets.com/images/modules/site/issues/issue-tasks-progress.hevc.mp4\"\n      />\n      <source\n        type=\"video/mp4; codecs=avc1.4D401E,mp4a.40.2\"\n        src=\"https://github.githubassets.com/images/modules/site/issues/issue-tasks-progress.h264.mp4\"\n      />\n    </video>\n  </River.Visual>\n  <River.Content>\n    <Heading>Break issues into actionable tasks</Heading>\n    <Text>\n      Tackle complex issues with task lists and track their status with new\n      progress indicators. Convert tasks into their own issues and navigate your\n      work hierarchy.\n    </Text>\n  </River.Content>\n</River>\n```\n\n----------------------------------------\n\nTITLE: Customizing Statistic Component Padding\nDESCRIPTION: Shows different padding options (condensed, normal, spacious) and how to use responsive padding settings with the Statistic component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Statistic.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Statistic padding=\"condensed\">\n    <Statistic.Heading>+25%</Statistic.Heading>\n    <Statistic.Description>increase in developer speed</Statistic.Description>\n  </Statistic>\n  <br />\n  <br />\n  <Statistic padding=\"normal\">\n    <Statistic.Heading>+25%</Statistic.Heading>\n    <Statistic.Description>increase in developer speed</Statistic.Description>\n  </Statistic>\n  <br />\n  <br />\n  <Statistic padding=\"spacious\">\n    <Statistic.Heading>+25%</Statistic.Heading>\n    <Statistic.Description>increase in developer speed</Statistic.Description>\n  </Statistic>\n  <br />\n  <br />\n  <Statistic\n    padding={{\n      narrow: 'condensed',\n      regular: 'normal',\n      wide: 'spacious',\n    }}\n  >\n    <Statistic.Heading>+25%</Statistic.Heading>\n    <Statistic.Description>increase in developer speed</Statistic.Description>\n  </Statistic>\n</>\n```\n\n----------------------------------------\n\nTITLE: Rendering Full-width Button in JSX\nDESCRIPTION: Shows how to create a full-width Button component using the 'block' prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Button block>Full-width button</Button>\n```\n\n----------------------------------------\n\nTITLE: Default Implementation of the OrderedList Component\nDESCRIPTION: Demonstrates the default usage of the OrderedList component with multiple list items. The example shows a numbered list containing various security features.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/OrderedList/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<OrderedList>\n  <OrderedList.Item>Automatic security and version updates</OrderedList.Item>\n  <OrderedList.Item>GitHub Security Advisories</OrderedList.Item>\n  <OrderedList.Item>Code and secret scanning</OrderedList.Item>\n  <OrderedList.Item>Dependency review</OrderedList.Item>\n  <OrderedList.Item>\n    Automated authentication and identity management\n  </OrderedList.Item>\n</OrderedList>\n```\n\n----------------------------------------\n\nTITLE: FormControl with Hint Text\nDESCRIPTION: Example showing how to use FormControl.Hint to provide additional guidance to users. The hint element must be a direct child of FormControl component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<FormControl>\n  <FormControl.Label>Select</FormControl.Label>\n  <Select>\n    <Select.Option value=\"\" disabled>\n      Select a handle\n    </Select.Option>\n    <Select.Option value=\"mona\">Monalisa</Select.Option>\n    <Select.Option value=\"hubot\">Hubot</Select.Option>\n  </Select>\n  <FormControl.Hint>With an optional message</FormControl.Hint>\n</FormControl>\n```\n\n----------------------------------------\n\nTITLE: Image Component with Multiple Sources in JSX\nDESCRIPTION: Demonstrates using the 'sources' prop to provide multiple source elements for different screen sizes.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Image\n  as=\"picture\"\n  src=\"/brand/assets/placeholder.png\"\n  alt=\"placeholder, blank area with a gray background color\"\n  sources={[\n    {\n      srcset: '/brand/assets/placeholder.png',\n      media: '(min-width: 600px)',\n    },\n    {\n      srcset: '/brand/assets/placeholder.png',\n      media: '(min-width: 900px)',\n    },\n  ]}\n/>\n```\n\n----------------------------------------\n\nTITLE: BreakoutBanner with Multiple Actions\nDESCRIPTION: Shows how to implement a BreakoutBanner with both primary and secondary action links.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<BreakoutBanner>\n  <BreakoutBanner.Heading>\n    Where the most ambitious teams build great things\n  </BreakoutBanner.Heading>\n  <BreakoutBanner.LinkGroup>\n    <Link href=\"#\">Primary action</Link>\n    <Link href=\"#\">Secondary action</Link>\n  </BreakoutBanner.LinkGroup>\n</BreakoutBanner>\n```\n\n----------------------------------------\n\nTITLE: ActionMenu Size Variants\nDESCRIPTION: Example showing different size variants (small and medium) of the ActionMenu component using Stack layout.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ActionMenu.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"center\" gap={112}>\n  <ActionMenu size=\"small\">\n    <ActionMenu.Button>Small</ActionMenu.Button>\n    <ActionMenu.Overlay aria-label=\"Menu items\">\n      <ActionMenu.Item value=\"Item 1\">Item 1</ActionMenu.Item>\n      <ActionMenu.Item value=\"Item 2\">Item 2</ActionMenu.Item>\n    </ActionMenu.Overlay>\n  </ActionMenu>\n  <ActionMenu size=\"medium\">\n    <ActionMenu.Button>Medium</ActionMenu.Button>\n    <ActionMenu.Overlay aria-label=\"Menu items\">\n      <ActionMenu.Item value=\"Item 1\">Item 1</ActionMenu.Item>\n      <ActionMenu.Item value=\"Item 2\">Item 2</ActionMenu.Item>\n    </ActionMenu.Overlay>\n  </ActionMenu>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Creating Center-Aligned PricingOptions in React\nDESCRIPTION: This example demonstrates how to create a center-aligned PricingOptions component using the 'cards' variant and 'center' alignment. It shows two pricing plans with simplified content.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/PricingOptions.mdx#2025-04-12_snippet_2\n\nLANGUAGE: JSX\nCODE:\n```\n<PricingOptions variant=\"cards\" align=\"center\">\n  <PricingOptions.Item>\n    <PricingOptions.Label>Recommended</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot in the coding environment.\n    </PricingOptions.Description>\n    <PricingOptions.Price\n      currencySymbol=\"$\"\n      trailingText=\"per month / $100 per year\"\n    >\n      10\n    </PricingOptions.Price>\n    <PricingOptions.PrimaryAction href=\"#\">\n      Buy now\n    </PricingOptions.PrimaryAction>\n  </PricingOptions.Item>\n\n  <PricingOptions.Item>\n    <PricingOptions.Label>Recommended</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot Business</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot personalized to your organization throughout the software\n      development lifecycle. Requires GitHub Enterprise Cloud.\n    </PricingOptions.Description>\n    <PricingOptions.Price currencySymbol=\"$\" trailingText=\"per user / month\">\n      39\n    </PricingOptions.Price>\n    <PricingOptions.PrimaryAction href=\"#\">\n      Join waitlist\n    </PricingOptions.PrimaryAction>\n    <PricingOptions.SecondaryAction href=\"#\">\n      Contact sales\n    </PricingOptions.SecondaryAction>\n  </PricingOptions.Item>\n</PricingOptions>\n```\n\n----------------------------------------\n\nTITLE: Full Width Select Component\nDESCRIPTION: Select component that takes the full width of its container.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Select fullWidth>\n  <Select.Option value=\"mona\">Monalisa</Select.Option>\n  <Select.Option value=\"hubot\">Hubot</Select.Option>\n</Select>\n```\n\n----------------------------------------\n\nTITLE: AnchorNav with Secondary Action Example\nDESCRIPTION: Shows how to implement an AnchorNav with both primary and secondary actions. When two actions are present, the first is displayed with the primary variant styling.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/AnchorNav.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{position: 'relative', overflowX: 'scroll'}}>\n  <AnchorNav>\n    <AnchorNav.Link href=\"#fewer-links-section1\">Section one</AnchorNav.Link>\n    <AnchorNav.Link href=\"#fewer-links-section2\">Section two</AnchorNav.Link>\n    <AnchorNav.Link href=\"#fewer-links-section3\">Section three</AnchorNav.Link>\n    <AnchorNav.Action href=\"#\">Sign up</AnchorNav.Action>\n    <AnchorNav.SecondaryAction href=\"#\">Learn more</AnchorNav.SecondaryAction>\n  </AnchorNav>\n\n  <section\n    id=\"fewer-links-section1\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-lemon-0)',\n    }}\n  >\n    Section 1\n  </section>\n  <section\n    id=\"fewer-links-section2\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-yellow-0)',\n    }}\n  >\n    Section 2\n  </section>\n  <section\n    id=\"fewer-links-section3\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-lime-0)',\n    }}\n  >\n    Section 3\n  </section>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: ComparisonTable with Custom Featured Column Colors\nDESCRIPTION: Demonstrates how to customize the featured column colors using CSS variables and includes a themed application example with a custom heading that matches the gradient colors.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ComparisonTable.mdx#2025-04-12_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const designTokenOverrides = `\n  .custom-colors[data-color-mode='dark'] {\n\n    /*\n     * Modify the value of these tokens.\n     * Remember to apply light mode equivalents if you're enabling theme switching.\n     */\n    --brand-ComparisonTable-featured-color-start: var(--base-color-scale-green-2);\n    --brand-ComparisonTable-featured-color-end: var(--base-color-scale-blue-3);\n\n    /*\n     * For example only\n     */\n    padding: 3rem;\n    background-color: var(--brand-color-canvas-default);\n  }\n\n  .custom-heading {\n    background: linear-gradient(271.72deg, var(--brand-ComparisonTable-featured-color-end) 7.09%, var(--brand-ComparisonTable-featured-color-start) 96.61%);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-align: center;\n    margin-bottom: var(--base-size-32);\n  }\n`\n\n  return (\n    <ThemeProvider colorMode=\"dark\" className=\"custom-colors\">\n      <style>{designTokenOverrides}</style>\n      <Heading as=\"h3\" className=\"custom-heading\">\n        GitHub vs Jenkins\n      </Heading>\n      <ComparisonTable>\n        <ComparisonTable.Row>\n          <ComparisonTable.Cell>Use case</ComparisonTable.Cell>\n          <ComparisonTable.Cell>GitHub</ComparisonTable.Cell>\n          <ComparisonTable.Cell>Jenkins</ComparisonTable.Cell>\n        </ComparisonTable.Row>\n        <ComparisonTable.Row>\n          <ComparisonTable.Cell>Automation & CI/CD</ComparisonTable.Cell>\n          <ComparisonTable.Cell>\n            <Text as=\"p\" size=\"300\">\n              Comparable native core capabilities\n            </Text>\n            <Text as=\"p\" size=\"300\">\n              Over 13,000 GitHub Actions are available in the GitHub Marketplace\n              to automate your development workflow.\n            </Text>\n          </ComparisonTable.Cell>\n          <ComparisonTable.Cell>\n            <Text as=\"p\" size=\"300\">\n              Comparable native capabilities\n            </Text>\n            <Text as=\"p\" size=\"300\">\n              1,800+ community contributed Jenkins plugins in Jenkins Plugin\n              Marketplace.\n            </Text>\n          </ComparisonTable.Cell>\n        </ComparisonTable.Row>\n        <ComparisonTable.Row>\n          <ComparisonTable.Cell>Deployment models</ComparisonTable.Cell>\n          <ComparisonTable.Cell>Cloud or self-hosted</ComparisonTable.Cell>\n          <ComparisonTable.Cell>\n            <Text as=\"p\" size=\"300\">\n              Self-hosted only\n            </Text>\n            <Text as=\"p\" size=\"300\">\n              CloudBees is the cloud alternative\n            </Text>\n          </ComparisonTable.Cell>\n        </ComparisonTable.Row>\n        <ComparisonTable.Footnote>\n          *** This is a biased overview of capabilities by use case, based on\n          publicly available information as of 2022-05-16.\n        </ComparisonTable.Footnote>\n      </ComparisonTable>\n    </ThemeProvider>\n  )\n}\n\nrender(<App />)\n```\n\n----------------------------------------\n\nTITLE: VideoPlayer with Visually Hidden Title in JSX\nDESCRIPTION: Demonstrates how to use the visuallyHiddenTitle prop to hide the title visually while keeping it accessible.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<VideoPlayer visuallyHiddenTitle title=\"GitHub media player\">\n  <VideoPlayer.Source src=\"https://primer.github.io/brand/assets/example.mp4\" />\n  <VideoPlayer.Track src=\"/brand/assets/example.vtt\" default />\n</VideoPlayer>\n```\n\n----------------------------------------\n\nTITLE: Section Component with Multiple Background Images\nDESCRIPTION: This example shows how to use multiple background images in a Section component with arrays for src, position, and size properties.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Section/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<ThemeProvider colorMode=\"dark\">\n  <Section\n    paddingBlockStart=\"spacious\"\n    paddingBlockEnd=\"spacious\"\n    backgroundColor=\"default\"\n    backgroundImageSrc={[\n      'https://github.com/user-attachments/assets/a7340dea-2076-42da-87a9-057f953beb83',\n      'https://github.com/user-attachments/assets/a28110fd-d019-41a4-8f80-b49ae8895708',\n    ]}\n    backgroundImagePosition={['bottom -1px center', 'center']}\n    backgroundImageSize={['auto', 'cover']}\n  >\n    <SectionIntro align=\"center\">\n      <SectionIntro.Heading size=\"3\">\n        Multiple background images\n      </SectionIntro.Heading>\n    </SectionIntro>\n  </Section>\n  <Section backgroundColor=\"default\">\n    <SectionIntro align=\"center\">\n      <SectionIntro.Heading size=\"4\">Another section</SectionIntro.Heading>\n    </SectionIntro>\n  </Section>\n</ThemeProvider>\n```\n\n----------------------------------------\n\nTITLE: Adding Icon to Card Component in JSX\nDESCRIPTION: Demonstrates how to add an icon to the Card component, including customization options like color and background.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Card href=\"https://github.com\">\n  <Card.Icon icon={CopilotIcon} color=\"purple\" hasBackground />\n  <Card.Heading>Code search & code view</Card.Heading>\n  <Card.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Card.Description>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Implementing LogoSuite Component with Emphasis Variant in React JSX\nDESCRIPTION: Demonstrates the implementation of a LogoSuite component with the emphasis variant for displaying logos. This variant is automatically selected when 5 or fewer logos are present, displaying them with higher contrast and larger size.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<LogoSuite>\n  <LogoSuite.Heading visuallyHidden>Emphasis example</LogoSuite.Heading>\n  <LogoSuite.Description>Emphasis</LogoSuite.Description>\n  <LogoSuite.Logobar variant=\"emphasis\">\n    <svg\n      role=\"img\"\n      focusable=\"false\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 45 16\"\n      width=\"45\"\n      height=\"16\"\n    >\n      <title>GitHub</title>\n      <path d=\"M8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17Zm35.85 2.33c0 3.43-1.11 4.41-3.05 4.41-1.64 0-2.52-.83-2.52-.83s-.04.46-.09.52c-.03.06-.08.08-.14.08h-1.48c-.1 0-.19-.08-.19-.17l.02-11.11c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v3.77s.82-.53 2.02-.53l-.01-.02c1.2 0 2.97.45 2.97 3.88ZM27.68 2.43c.09 0 .17.08.17.17v11.11c0 .09-.08.17-.17.17h-2.13c-.09 0-.17-.08-.17-.17l.02-4.75h-3.31v4.75c0 .09-.08.17-.17.17h-2.13c-.08 0-.17-.08-.17-.17V2.6c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v4.09h3.31V2.6c0-.09.08-.17.17-.17Zm8.26 3.64c.11 0 .19.08.19.17l-.02 7.47c0 .09-.06.17-.17.17H34.6c-.07 0-.14-.04-.16-.09-.03-.06-.08-.45-.08-.45s-1.13.77-2.52.77c-1.69 0-2.92-.55-2.92-2.75V6.25c0-.09.08-.17.17-.17h2.14c.09 0 .17.08.17.17V11c0 .75.22 1.09.97 1.09s1.3-.39 1.3-.39V6.26c0-.11.06-.19.17-.19Zm-17.406 5.971h.005a.177.177 0 0 1 .141.179v1.5c0 .07-.03.14-.09.16-.1.05-.74.22-1.27.22-1.16 0-2.86-.25-2.86-2.69V8.13h-1.11c-.09 0-.17-.08-.17-.19V6.58c0-.08.05-.15.13-.17.07-.01 1.16-.28 1.16-.28V3.96c0-.08.05-.13.14-.13h2.16c.09 0 .14.05.14.13v2.11h1.59c.08 0 .16.08.16.17v1.7c0 .11-.07.19-.16.19h-1.59v3.131c0 .47.27.83 1.05.83.247 0 .481-.049.574-.05ZM12.24 6.06c.09 0 .17.08.17.17v7.37c0 .18-.05.27-.25.27h-1.92c-.17 0-.3-.07-.3-.27V6.26c0-.11.08-.2.17-.2Zm29.99 3.78c0-1.81-.73-2.05-1.5-1.97-.6.04-1.08.34-1.08.34v3.52s.49.34 1.22.36c1.03.03 1.36-.34 1.36-2.25ZM11.19 2.68c.75 0 1.36.61 1.36 1.38 0 .77-.61 1.38-1.36 1.38-.77 0-1.38-.61-1.38-1.38 0-.77.61-1.38 1.38-1.38Zm7.34 9.35v.001l.01.01h-.001l-.005-.001v.001c-.009-.001-.015-.011-.024-.011Z\"></path>\n    </svg>\n    <svg\n      role=\"img\"\n      focusable=\"false\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 337.6 72\"\n    >\n      <title>Microsoft</title>\n      <path\n        fill=\"#737373\"\n        d=\"M140.4 14.4v43.2h-7.5V23.7h-.1l-13.4 33.9h-5l-13.7-33.9h-.1v33.9h-6.9V14.4h10.8l12.4 32h.2l13.1-32h10.2zm6.2 3.3c0-1.2.4-2.2 1.3-3 .9-.8 1.9-1.2 3.1-1.2 1.3 0 2.4.4 3.2 1.2s1.3 1.8 1.3 3-.4 2.2-1.3 3c-.9.8-1.9 1.2-3.2 1.2s-2.3-.4-3.1-1.2c-.8-.9-1.3-1.9-1.3-3zm8.1 8.9v31h-7.3v-31h7.3zm22.1 25.7c1.1 0 2.3-.2 3.6-.8 1.3-.5 2.5-1.2 3.6-2v6.8c-1.2.7-2.5 1.2-4 1.5-1.5.3-3.1.5-4.9.5-4.6 0-8.3-1.4-11.1-4.3-2.9-2.9-4.3-6.6-4.3-11 0-5 1.5-9.1 4.4-12.3 2.9-3.2 7-4.8 12.4-4.8 1.4 0 2.8.2 4.1.5 1.4.3 2.5.8 3.3 1.2v7c-1.1-.8-2.3-1.5-3.4-1.9-1.2-.4-2.4-.7-3.6-.7-2.9 0-5.2.9-7 2.8s-2.6 4.4-2.6 7.6c0 3.1.9 5.6 2.6 7.3 1.7 1.7 4 2.6 6.9 2.6zm27.9-26.2c.6 0 1.1 0 1.6.1s.9.2 1.2.3v7.4c-.4-.3-.9-.6-1.7-.8s-1.6-.4-2.7-.4c-1.8 0-3.3.8-4.5 2.3s-1.9 3.8-1.9 7v15.6h-7.3v-31h7.3v4.9h.1c.7-1.7 1.7-3 3-4 1.4-.9 3-1.4 4.9-1.4zm3.2 16.5c0-5.1 1.5-9.2 4.3-12.2 2.9-3 6.9-4.5 12-4.5 4.8 0 8.6 1.4 11.3 4.3s4.1 6.8 4.1 11.7c0 5-1.5 9-4.3 12-2.9 3-6.8 4.5-11.8 4.5-4.8 0-8.6-1.4-11.4-4.2-2.8-2.9-4.2-6.8-4.2-11.6zm7.6-.3c0 3.2.7 5.7 2.2 7.4s3.6 2.6 6.3 2.6c2.6 0 4.7-.8 6.1-2.6 1.4-1.7 2.1-4.2 2.1-7.6 0-3.3-.7-5.8-2.1-7.6-1.4-1.7-3.5-2.6-6-2.6-2.7 0-4.7.9-6.2 2.7-1.7 1.9-2.4 4.4-2.4 7.7zm35-7.5c0 1 .3 1.9 1 2.5.7.6 2.1 1.3 4.4 2.2 2.9 1.2 5 2.5 6.1 3.9 1.2 1.5 1.8 3.2 1.8 5.3 0 2.9-1.1 5.2-3.4 7-2.2 1.8-5.3 2.6-9.1 2.6-1.3 0-2.7-.2-4.3-.5-1.6-.3-2.9-.7-4-1.2v-7.2c1.3.9 2.8 1.7 4.3 2.2 1.5.5 2.9.8 4.2.8 1.6 0 2.9-.2 3.6-.7.8-.5 1.2-1.2 1.2-2.3 0-1-.4-1.8-1.2-2.6-.8-.7-2.4-1.5-4.6-2.4-2.7-1.1-4.6-2.4-5.7-3.8s-1.7-3.2-1.7-5.4c0-2.8 1.1-5.1 3.3-6.9 2.2-1.8 5.1-2.7 8.6-2.7 1.1 0 2.3.1 3.6.4s2.5.6 3.4.9V34c-1-.6-2.1-1.2-3.4-1.7-1.3-.5-2.6-.7-3.8-.7-1.4 0-2.5.3-3.2.8-.7.7-1.1 1.4-1.1 2.4zm16.4 7.8c0-5.1 1.5-9.2 4.3-12.2 2.9-3 6.9-4.5 12-4.5 4.8 0 8.6 1.4 11.3 4.3s4.1 6.8 4.1 11.7c0 5-1.5 9-4.3 12-2.9 3-6.8 4.5-11.8 4.5-4.8 0-8.6-1.4-11.4-4.2-2.7-2.9-4.2-6.8-4.2-11.6zm7.6-.3c0 3.2.7 5.7 2.2 7.4s3.6 2.6 6.3 2.6c2.6 0 4.7-.8 6.1-2.6 1.4-1.7 2.1-4.2 2.1-7.6 0-3.3-.7-5.8-2.1-7.6-1.4-1.7-3.5-2.6-6-2.6-2.7 0-4.7.9-6.2 2.7-1.6 1.9-2.4 4.4-2.4 7.7zm48.4-9.7H312v25h-7.4v-25h-5.2v-6h5.2v-4.3c0-3.2 1.1-5.9 3.2-8s4.8-3.1 8.1-3.1c.9 0 1.7.1 2.4.1s1.3.2 1.8.4V18c-.2-.1-.7-.3-1.3-.5-.6-.2-1.3-.3-2.1-.3-1.5 0-2.7.5-3.5 1.4-.8.9-1.2 2.4-1.2 4.2v3.7h10.9v-7l7.3-2.2v9.2h7.4v6h-7.4V47c0 1.9.4 3.2 1 4 .7.8 1.8 1.2 3.3 1.2.4 0 .9-.1 1.5-.3.6-.2 1.1-.4 1.5-.7v6c-.5.3-1.2.5-2.3.7-1.1.2-2.1.3-3.2.3-3.1 0-5.4-.8-6.9-2.4-1.5-1.6-2.3-4.1-2.3-7.4l.1-15.8z\"\n      />\n      <path fill=\"#F25022\" d=\"M0 0h34.2v34.2H0z\" />\n      <path fill=\"#7FBA00\" d=\"M37.8 0H72v34.2H37.8z\" />\n      <path fill=\"#00A4EF\" d=\"M0 37.8h34.2V72H0z\" />\n      <path fill=\"#FFB900\" d=\"M37.8 37.8H72V72H37.8z\" />\n    </svg>\n    <svg\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 291 79.46\"\n      width=\"291\"\n      height=\"79.46\"\n    >\n      <title>LinkedIn</title>\n      <path\n        d=\"M239.33 95.036c0 2.96 2.46 5.361 5.495 5.361h63.376c3.035 0 5.496-2.401 5.496-5.361V30.919c0-2.961-2.46-5.361-5.496-5.361h-63.376c-3.035 0-5.495 2.4-5.495 5.361v64.117z\"\n        style={{\n          fill: 'inherit',\n          fillOpacity: 1,\n          fillRule: 'nonzero',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n      <path\n        d=\"M31.152 37.709h31.035v10.189H42.383v38.874H31.152V37.709zM77.9 37.709v33.793H66.668V37.709H77.9zm-5.616 38.407c3.917 0 6.355 2.595 6.355 5.84-.073 3.315-2.438 5.837-6.28 5.837-3.843 0-6.355-2.522-6.355-5.837 0-3.245 2.437-5.84 6.207-5.84h.073zM83.115 37.709h11.233v18.872c0 1.01.073 2.019.37 2.741.811 2.017 2.66 4.107 5.763 4.107 4.065 0 5.69-3.1 5.69-7.64v-18.08h11.232v19.377c0 10.38-5.542 15.21-12.932 15.21-6.06 0-8.72-3.387-10.198-5.694h.075v4.9H83.116c.147-3.171 0-33.793 0-33.793zM133.249 86.772h-11.233V37.709h11.233v10.956l2.807 3.534 8.794-14.49h13.818l-14.779 20.977 12.932 14.272h-13.522s-9.237-12.769-10.05-14.283v28.097z\"\n        style={{\n          fill: 'inherit',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n      <path\n        d=\"M188.706 51.805c.148.868.37 2.533.37 4.415 0 8.736-4.435 17.604-16.11 17.604-12.488 0-18.252-9.877-18.252-18.835 0-11.08 7.02-18 19.287-18 4.877 0 9.384.72 13.08 2.234l-1.48 7.418c-3.029-1.005-6.132-1.507-9.974-1.507-5.247 0-9.828 2.153-10.198 6.743l23.277-.07zm-23.35 7.599c.295 2.884 2.216 7.138 7.02 7.138 5.097 0 6.28-4.543 6.28-7.138h-13.3zM216.801 86.772V69.788h-.147c-1.627 2.377-5.026 3.963-9.533 3.963-8.646 0-16.257-6.92-16.184-18.741 0-10.958 6.873-18.094 15.444-18.094 4.656 0 9.09 2.019 11.306 5.912h.222l.444-5.119h9.976c-.148 2.379-.297 6.488-.297 10.524v38.539h-11.231zm0-33.421c0-.864-.074-1.73-.222-2.45-.664-3.1-3.325-5.262-6.576-5.262-4.656 0-7.685 3.748-7.685 9.659 0 5.55 2.586 10.019 7.758 10.019 3.473 0 5.912-2.378 6.578-5.333.147-.65.147-1.371.147-2.019v-4.614z\"\n        style={{\n          fill: 'inherit',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n      <path\n        d=\"M261.873 37.749v33.794H250.64V37.749h11.233zm-5.617 38.408c3.917 0 6.355 2.595 6.355 5.838-.073 3.316-2.438 5.839-6.28 5.839-3.843 0-6.355-2.523-6.355-5.839 0-3.243 2.438-5.838 6.207-5.838h.073zM268.088 37.749h11.232v18.872c0 1.01.073 2.019.37 2.741.812 2.018 2.66 4.108 5.763 4.108 4.065 0 5.69-3.099 5.69-7.642V37.749h11.232v19.377c0 10.38-5.541 15.21-12.931 15.21-6.06 0-8.72-3.387-10.198-5.694h.075v4.901h-11.233c.148-3.171 0-33.794 0-33.794z\"\n        style={{\n          fill: 'var(--brand-color-canvas-default)',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: 'none',\n        }}\n        transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"\n      />\n    </svg>\n  </LogoSuite.Logobar>\n</LogoSuite>\n```\n\n----------------------------------------\n\nTITLE: Section Component with Custom Background Color\nDESCRIPTION: This example shows how to set a custom hex color as the background for a Section component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Section/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Section backgroundColor=\"#2AA198\">\n  <SectionIntro align=\"center\">\n    <SectionIntro.Heading size=\"3\">\n      Custom background color\n    </SectionIntro.Heading>\n  </SectionIntro>\n</Section>\n```\n\n----------------------------------------\n\nTITLE: Image Component with Width and Aspect Ratio in JSX\nDESCRIPTION: Shows how to set both width and aspect ratio for the Image component to create a responsive image.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Image\n  src=\"/brand/assets/placeholder.png\"\n  alt=\"placeholder, blank area with a gray background color\"\n  width={200}\n  aspectRatio=\"16:9\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Select with Option Groups\nDESCRIPTION: Using Select with option groups to categorize selections by region.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Select defaultValue=\"\">\n  <Select.Option value=\"\" disabled>\n    Select a country\n  </Select.Option>\n\n  <Select.OptGroup label=\"Asia\">\n    <Select.Option value=\"cn\">China</Select.Option>\n  </Select.OptGroup>\n  <Select.OptGroup label=\"Europe\">\n    <Select.Option value=\"fr\">France</Select.Option>\n    <Select.Option value=\"it\">Italy</Select.Option>\n    <Select.Option value=\"es\">Spain</Select.Option>\n    <Select.Option value=\"uk\">United Kingdom</Select.Option>\n  </Select.OptGroup>\n  <Select.OptGroup label=\"Americas\">\n    <Select.Option value=\"mx\">Mexico</Select.Option>\n    <Select.Option value=\"us\">United States</Select.Option>\n  </Select.OptGroup>\n</Select>\n```\n\n----------------------------------------\n\nTITLE: Rendering IDE Component with Glass Variant in JSX\nDESCRIPTION: Demonstrates the use of the 'glass' variant of the IDE component, which adds alpha transparency and background blurring for placement on background images.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/IDE.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Box\n  padding={48}\n  borderRadius=\"large\"\n  style={{\n    backgroundImage: `url(https://github.com/primer/brand/assets/13340707/7fe496dc-f6e0-417e-9453-32cec638ca68)`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  }}\n>\n  <IDE height={400} variant=\"glass\">\n    <IDE.Editor\n      showReplayButton={false}\n      files={[\n        {\n          name: 'index.js',\n          alternativeText:\n            'TypeScript sentiment analysis function with D3.js visualization.',\n          code: `import { fetch } from \"fetch-h2\";\n\nasync function isPositive(text: string): Promise<boolean> {\n  const response = await fetch(...)\n  const drawScatterplot = (data, height, width) => {\n    const svg = d3.select(\"#scatterplot\")\n      .data(data)\n      .attr(\"cx\", d => d.x)\n      .attr(\"cy\", d => d.y)\n      .attr(\"r\", 5)\n  }\n  const json = await response.json();\n  return json.label === \"pos\";\n}`,\n        },\n        {\n          name: 'parse_expenses.py',\n          alternativeText:\n            'Python function description and docstring showing how to parse financial transactions with example date, amount, and currency formats.',\n\n          code: `import datetime\n\ndef parse_expenses(expenses_string):\nIgnore lines starting with #.\nParse the date using datetime.\nExample expenses_string:\n2016-01-02 -34.01 USD\n2016-01-03 2.59 DKK\n2016-01-03 -2.72 EUR\n\"\"\"`,\n        },\n      ]}\n    />\n  </IDE>\n</Box>\n```\n\n----------------------------------------\n\nTITLE: Implementing Polymorphic Button Group in JSX\nDESCRIPTION: Example showing how to use polymorphism with the ButtonGroup by rendering buttons as HTML anchor elements instead of the default button elements.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ButtonGroup/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<ButtonGroup buttonsAs=\"a\">\n  <Button>This is one link</Button>\n  <Button>This is another link</Button>\n</ButtonGroup>\n```\n\n----------------------------------------\n\nTITLE: Applying Directional Padding with CSS Logical Properties\nDESCRIPTION: Demonstrates how to apply padding to specific sides of a Box using CSS logical properties like paddingBlockStart, paddingInlineEnd, etc.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n  <Box paddingBlockStart={64} className=\"bg-red-lines\">\n    block start\n  </Box>\n  <Box paddingInlineEnd={64} className=\"bg-red-lines\">\n    inline end\n  </Box>\n  <Box paddingBlockEnd={64} className=\"bg-red-lines\">\n    block end\n  </Box>\n  <Box paddingInlineStart={64} className=\"bg-red-lines\">\n    inline start\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Implementing RiverAccordion with End-Aligned Visuals in JSX\nDESCRIPTION: This example shows how to use the RiverAccordion component with the 'align' prop set to 'end', which inverts the default position of the visuals and content.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/RiverAccordion.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<RiverAccordion align=\"end\">\n  <RiverAccordion.Item>\n    <RiverAccordion.Heading>Heading 1</RiverAccordion.Heading>\n    <RiverAccordion.Content>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </RiverAccordion.Content>\n    <RiverAccordion.Visual>\n      <img\n        src=\"/brand/assets/placeholder-1.png\"\n        alt=\"Visual content for item 1\"\n      />\n    </RiverAccordion.Visual>\n  </RiverAccordion.Item>\n\n  <RiverAccordion.Item>\n    <RiverAccordion.Heading>Heading 2</RiverAccordion.Heading>\n    <RiverAccordion.Content>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </RiverAccordion.Content>\n    <RiverAccordion.Visual>\n      <img\n        src=\"/brand/assets/placeholder-2.png\"\n        alt=\"Visual content for item 2\"\n      />\n    </RiverAccordion.Visual>\n  </RiverAccordion.Item>\n\n  <RiverAccordion.Item>\n    <RiverAccordion.Heading>Heading 3</RiverAccordion.Heading>\n    <RiverAccordion.Content>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </RiverAccordion.Content>\n    <RiverAccordion.Visual>\n      <img\n        src=\"/brand/assets/placeholder-3.png\"\n        alt=\"Visual content for item 3\"\n      />\n    </RiverAccordion.Visual>\n  </RiverAccordion.Item>\n</RiverAccordion>\n```\n\n----------------------------------------\n\nTITLE: Rendering Default Image Component in JSX\nDESCRIPTION: Demonstrates the basic usage of the Image component with src and alt props.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Image\n  src=\"/brand/assets/placeholder.png\"\n  alt=\"placeholder, blank area with a gray background color\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Rendering Inline CheckboxGroup in React\nDESCRIPTION: This example demonstrates how to create an inline CheckboxGroup using the Stack component for horizontal arrangement.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CheckboxGroup/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<CheckboxGroup>\n  <CheckboxGroup.Label visuallyHidden>Filter options</CheckboxGroup.Label>\n  <CheckboxGroup.Caption>\n    Some inline checkboxes with a visually hidden label\n  </CheckboxGroup.Caption>\n  <Stack direction=\"horizontal\" gap=\"normal\" padding=\"none\" flexWrap=\"wrap\">\n    <FormControl>\n      <FormControl.Label>Choice one</FormControl.Label>\n      <Checkbox value=\"one\" />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Choice two</FormControl.Label>\n      <Checkbox value=\"two\" />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Choice three</FormControl.Label>\n      <Checkbox value=\"three\" />\n    </FormControl>\n  </Stack>\n</CheckboxGroup>\n```\n\n----------------------------------------\n\nTITLE: BreakoutBanner with Vertical Link Layout\nDESCRIPTION: Demonstrates how to configure the LinkGroup with a vertical direction for stacked action links.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<BreakoutBanner>\n  <BreakoutBanner.Heading>\n    Where the most ambitious teams build great things\n  </BreakoutBanner.Heading>\n  <BreakoutBanner.LinkGroup direction=\"vertical\">\n    <Link href=\"#\">Primary action</Link>\n    <Link href=\"#\">Secondary action</Link>\n  </BreakoutBanner.LinkGroup>\n</BreakoutBanner>\n```\n\n----------------------------------------\n\nTITLE: Multiple Testimonials Side-by-Side Using Stack\nDESCRIPTION: Example showing how to position multiple Testimonial components side by side using the Stack component with horizontal direction and spacious gap. Each testimonial includes a quote and name.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" gap=\"spacious\" padding=\"spacious\">\n  <Testimonial>\n    <Testimonial.Quote>\n      GitHub helps us ensure that we have our security controls baked into our\n      pipelines all the way from the first line of code we&apos;re writing.\n    </Testimonial.Quote>\n    <Testimonial.Name>David Ross</Testimonial.Name>\n  </Testimonial>\n  <Testimonial>\n    <Testimonial.Quote>\n      GitHub helps us ensure that we have our security controls baked into our\n      pipelines all the way from the first line of code we&apos;re writing.\n    </Testimonial.Quote>\n    <Testimonial.Name>David Ross</Testimonial.Name>\n  </Testimonial>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Adding Border to Card Component in JSX\nDESCRIPTION: Shows how to add a border to the Card component using the 'hasBorder' prop for better separation between foreground and background.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Card href=\"https://github.com\" hasBorder>\n  <Card.Heading>Code search & code view</Card.Heading>\n  <Card.Label>Limited</Card.Label>\n  <Card.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Card.Description>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Responsive Avatar Component with Breakpoint-Specific Sizes\nDESCRIPTION: Demonstrates how to use responsive sizing with the Avatar component by providing different sizes for narrow, regular, and wide breakpoints.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Avatar/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Avatar\n  size={{narrow: 32, regular: 40, wide: 80}}\n  src=\"/brand/assets/avatar-mona.png\"\n  alt=\"Mona avatar at 32px\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Required Select Component\nDESCRIPTION: Select component that must be filled before form submission.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Select required defaultValue=\"\">\n  <Select.Option value=\"\" disabled>\n    Select a handle\n  </Select.Option>\n  <Select.Option value=\"mona\">Monalisa</Select.Option>\n  <Select.Option value=\"hubot\">Hubot</Select.Option>\n</Select>\n```\n\n----------------------------------------\n\nTITLE: SubdomainNavBar with Search Functionality in JavaScript\nDESCRIPTION: Illustrates a more complex example of SubdomainNavBar with search functionality, including state management and mock search results.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SubdomainNavBar.mdx#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const inputRef = React.useRef(null)\n  const [searchResults, setSearchResults] = React.useState([])\n  const [searchTerm, setSearchTerm] = React.useState('')\n\n  const mockSearchData = [\n    {\n      title: 'How to transform your business in a digital world',\n      description:\n        'GitHub Enterprise empowers developers with tools they already know and love, accelerates high-quality software development and secure delivery, and enhances the speed and power of innovation.\\n',\n      url: 'https://resources.github.com/devops/github-enterprise-ebook',\n      date: '2022-08-29T00:00+02:00',\n    },\n    {\n      title: 'The fundamentals of continuous deployment in DevOps',\n      description:\n        'What is continuous deployment?\\nContinuous deployment (CD) is an automated software release practice where code changes are deployed to different stages as they pass predefined tests. The goal of CD is to facilitate faster releases by using automation to help remove the need for human intervention as much as possible during the deployment process.',\n      url: 'https://resources.github.com/devops/fundamentals/ci-cd/deployment',\n      date: '2022-05-23T12:00+00:00',\n    },\n  ]\n\n  const handleChange = () => {\n    if (!inputRef.current) return\n    if (inputRef.current.value.length === 0) {\n      setSearchResults(undefined)\n      return\n    }\n    if (inputRef.current.value.length > 2) {\n      setTimeout(() => setSearchResults(mockSearchData), 1000)\n      setSearchTerm(inputRef.current.value)\n      return\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!inputRef.current) return\n    if (!inputRef.current.value) {\n      alert(`Enter a value and try again.`)\n      return\n    }\n\n    alert(`Name: ${inputRef.current.value}`)\n  }\n\n  return (\n    <Container sx={{position: 'relative', overflowX: 'scroll'}}>\n      <SubdomainNavBar title=\"Subdomain\" fixed={false}>\n        <SubdomainNavBar.Link href=\"#collections\">\n          Collections\n        </SubdomainNavBar.Link>\n        <SubdomainNavBar.Link href=\"#topics\">Topics</SubdomainNavBar.Link>\n        <SubdomainNavBar.Search\n          ref={inputRef}\n          searchTerm={searchTerm}\n          onSubmit={handleSubmit}\n          onChange={handleChange}\n          searchResults={searchResults}\n        />\n      </SubdomainNavBar>\n    </Container>\n  )\n}\n\nrender(App)\n```\n\n----------------------------------------\n\nTITLE: Rendering Primary Button Variant in JSX\nDESCRIPTION: Shows how to render a Button component with the 'primary' variant, which indicates a high-priority action.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Button variant=\"primary\">Primary</Button>\n```\n\n----------------------------------------\n\nTITLE: Rendering Default Pillar Component in React\nDESCRIPTION: Demonstrates the basic usage of the Pillar component with a heading and description.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pillar/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Pillar>\n  <Pillar.Heading>Collaboration is the key to DevOps success</Pillar.Heading>\n  <Pillar.Description>\n    Everything you need to know about getting started with GitHub Actions.\n  </Pillar.Description>\n</Pillar>\n```\n\n----------------------------------------\n\nTITLE: Testimonial with Position Information\nDESCRIPTION: Example demonstrating the use of the 'position' prop on the Testimonial.Name component to display additional information about the testimonial provider. Shows a quote and name with position title.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Testimonial>\n  <Testimonial.Quote>\n    GitHub helps us ensure that we have our security controls baked into our\n    pipelines all the way from the first line of code we&apos;re writing.\n  </Testimonial.Quote>\n  <Testimonial.Name position=\"Staff Software Engineer\">\n    David Ross\n  </Testimonial.Name>\n</Testimonial>\n```\n\n----------------------------------------\n\nTITLE: Default SectionIntro Component Implementation\nDESCRIPTION: Example showing the default usage of the SectionIntro component with label, heading, description, and link elements wrapped in a section tag.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SectionIntro/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<section>\n  <SectionIntro>\n    <SectionIntro.Label>Label</SectionIntro.Label>\n    <SectionIntro.Heading>\n      Focus on solving bigger problems\n    </SectionIntro.Heading>\n    <SectionIntro.Description>\n      Spend less time creating boilerplate and repetitive code patterns, and\n      more time on what matters: building great software. Write a comment\n      describing the logic you want and GitHub Copilot will immediately suggest\n      code to implement the solution.\n    </SectionIntro.Description>\n    <SectionIntro.Link href=\"#\">Explore docs</SectionIntro.Link>\n  </SectionIntro>\n</section>\n```\n\n----------------------------------------\n\nTITLE: Rendering UnorderedList with Custom Colors in JSX\nDESCRIPTION: This example shows how to customize the color of the leading visual (checkmark) in a checked variant UnorderedList using CSS variables.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/UnorderedList/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<UnorderedList variant=\"checked\">\n  <UnorderedList.Item leadingVisualFill=\"var(--brand-color-success-fg)\">\n    Automatic security and version updates\n  </UnorderedList.Item>\n  <UnorderedList.Item leadingVisualFill=\"var(--brand-color-success-fg)\">\n    GitHub Security Advisories\n  </UnorderedList.Item>\n  <UnorderedList.Item leadingVisualFill=\"var(--brand-color-success-fg)\">\n    Code and secret scanning\n  </UnorderedList.Item>\n  <UnorderedList.Item leadingVisualFill=\"var(--brand-color-success-fg)\">\n    Dependency review\n  </UnorderedList.Item>\n  <UnorderedList.Item leadingVisualFill=\"var(--brand-color-success-fg)\">\n    Automated authentication and identity management\n  </UnorderedList.Item>\n</UnorderedList>\n```\n\n----------------------------------------\n\nTITLE: Image Component with Height and Aspect Ratio in JSX\nDESCRIPTION: Shows how to set both height and aspect ratio for the Image component to create a responsive image.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Image\n  src=\"/brand/assets/placeholder.png\"\n  alt=\"placeholder, blank area with a gray background color\"\n  height={200}\n  aspectRatio=\"16:9\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Applying Torchlight Effect to Card in Dark Mode\nDESCRIPTION: Demonstrates the unique 'torchlight' effect for Card components in dark mode, including color customization.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<ThemeProvider colorMode=\"dark\">\n  <Box backgroundColor=\"default\" padding=\"condensed\">\n    <Card\n      href=\"https://github.com\"\n      fullWidth\n      style={{\n        ['--brand-color-accent-primary']: 'var(--base-color-scale-lime-2)',\n      }}\n    >\n      <Card.Icon icon={ZapIcon} color=\"lime\" hasBackground />\n      <Card.Heading>Code search & code view</Card.Heading>\n      <Card.Description>\n        Enables you to rapidly search, navigate, and understand code, right from\n        GitHub.com.\n      </Card.Description>\n    </Card>\n  </Box>\n</ThemeProvider>\n```\n\n----------------------------------------\n\nTITLE: Select Component with Placeholder\nDESCRIPTION: Implementation of Select with a disabled placeholder option.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Select defaultValue=\"\">\n  <Select.Option value=\"\" disabled>\n    Select a handle\n  </Select.Option>\n  <Select.Option value=\"mona\">Monalisa</Select.Option>\n  <Select.Option value=\"hubot\">Hubot</Select.Option>\n</Select>\n```\n\n----------------------------------------\n\nTITLE: Using Picture Element with Image Component in JSX\nDESCRIPTION: Shows how to use the 'as' prop to render the Image component as a picture element.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Image\n  as=\"picture\"\n  src=\"/brand/assets/placeholder.png\"\n  alt=\"placeholder, blank area with a gray background color\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Box Component with Background Colors\nDESCRIPTION: Examples of different background color options available in the Box component\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" flexWrap=\"wrap\">\n  <Box backgroundColor=\"default\" borderWidth=\"thin\" borderColor=\"default\" borderStyle=\"solid\" padding=\"spacious\">\n    default\n  </Box>\n  <Box backgroundColor=\"subtle\" borderWidth=\"thin\" borderColor=\"default\" borderStyle=\"solid\" padding=\"spacious\">\n    subtle\n  </Box>\n  <Box backgroundColor=\"inset\" borderWidth=\"thin\" borderColor=\"default\" borderStyle=\"solid\" padding=\"spacious\">\n    inset\n  </Box>\n  <Box backgroundColor=\"overlay\" borderWidth=\"thin\" borderColor=\"default\" borderStyle=\"solid\" padding=\"spacious\">\n    overlay\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Default Footnotes Implementation in React\nDESCRIPTION: Demonstrates the default usage of the Footnotes component with multiple Footnotes.Item elements containing links and citations.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Footnotes/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Footnotes>\n  <Footnotes.Item>\n    \"Automating your workflow with GitHub Actions,\" GitHub Docs{' '}\n    <InlineLink href=\"https://docs.github.com/en/actions\">\n      https://docs.github.com/en/actions\n    </InlineLink>\n    .\n  </Footnotes.Item>\n  <Footnotes.Item>\n    \"About Issues,\" GitHub Docs{' '}\n    <InlineLink href=\"https://docs.github.com/en/issues\">\n      https://docs.github.com/en/issues\n    </InlineLink>\n    .\n  </Footnotes.Item>\n  <Footnotes.Item>\n    \"GitHub Copilot: Your AI pair programmer,\" GitHub{' '}\n    <InlineLink href=\"https://github.com/features/copilot/\">\n      https://github.com/features/copilot/\n    </InlineLink>\n    .\n  </Footnotes.Item>\n  <Footnotes.Item>\n    \"Explore the GitHub Marketplace,\" GitHub Docs{' '}\n    <InlineLink href=\"https://github.com/marketplace\">\n      https://github.com/marketplace\n    </InlineLink>\n    .\n  </Footnotes.Item>\n  <Footnotes.Item>\n    \"GitHub Pages basics,\" GitHub Docs{' '}\n    <InlineLink href=\"https://docs.github.com/en/pages\">\n      https://docs.github.com/en/pages\n    </InlineLink>\n    .\n  </Footnotes.Item>\n</Footnotes>\n```\n\n----------------------------------------\n\nTITLE: VideoPlayer with Custom Play Icon in JSX\nDESCRIPTION: Shows how to use a custom play icon in the VideoPlayer component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<VideoPlayer\n  title=\"GitHub media player\"\n  playIcon={() => <PlayIcon fill=\"white\" size={96} />}\n>\n  <VideoPlayer.Source\n    src=\"https://primer.github.io/brand/assets/example.mp4\"\n    type=\"video/mp4\"\n  />\n  <VideoPlayer.Track src=\"/brand/assets/example.vtt\" default />\n</VideoPlayer>\n```\n\n----------------------------------------\n\nTITLE: Using Button Group with Large Size in JSX\nDESCRIPTION: Demonstration of the ButtonGroup component with a 'large' size setting. Button sizes can be 'medium' (default) or 'large'.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ButtonGroup/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<ButtonGroup buttonSize=\"large\">\n  <Button>This is one large button</Button>\n  <Button>This is another large button</Button>\n</ButtonGroup>\n```\n\n----------------------------------------\n\nTITLE: EyebrowBanner with Text Labels in React\nDESCRIPTION: Examples showing how to use the EyebrowBanner.Label component to display contextual labels with different color options. The snippet demonstrates default, blue-purple, and red label colors.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/EyebrowBanner.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack>\n  <EyebrowBanner href=\"http://githubuniverse.com\">\n    <EyebrowBanner.Label>NEW</EyebrowBanner.Label>\n    <EyebrowBanner.Heading>\n      GitHub Copilot now available for Business\n    </EyebrowBanner.Heading>\n  </EyebrowBanner>\n  <EyebrowBanner href=\"http://githubuniverse.com\">\n    <EyebrowBanner.Label color=\"blue-purple\">NEW</EyebrowBanner.Label>\n    <EyebrowBanner.Heading>\n      GitHub Copilot now available for Business\n    </EyebrowBanner.Heading>\n  </EyebrowBanner>\n  <EyebrowBanner href=\"http://githubuniverse.com\">\n    <EyebrowBanner.Label color=\"red\">NEW</EyebrowBanner.Label>\n    <EyebrowBanner.Heading>\n      GitHub Copilot now available for Business\n    </EyebrowBanner.Heading>\n  </EyebrowBanner>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Large-Size Testimonial Example\nDESCRIPTION: Demonstrates using the 'size' prop set to 'large' to increase the text size of the Testimonial component. The example shows a quote and name with position but no avatar or logo.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Testimonial size=\"large\">\n  <Testimonial.Quote>\n    GitHub helps us ensure that we have our security controls baked into our\n    pipelines all the way from the first line of code we&apos;re writing.\n  </Testimonial.Quote>\n  <Testimonial.Name position=\"Staff Software Engineer\">\n    David Ross\n  </Testimonial.Name>\n</Testimonial>\n```\n\n----------------------------------------\n\nTITLE: VideoPlayer with Audio Description Link in JSX\nDESCRIPTION: Shows how to include a link to an audio-described version of the video for accessibility.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack gap=\"normal\" alignItems=\"center\">\n  <VideoPlayer title=\"GitHub media player\">\n    <VideoPlayer.Source src=\"/brand/assets/example.mp4\" />\n    <VideoPlayer.Track src=\"/brand/assets/example.vtt\" default />\n  </VideoPlayer>\n  <Stack direction=\"horizontal\" gap={12} padding=\"none\" alignItems=\"center\">\n    <Link href=\"#\" arrowDirection=\"none\">\n      Watch with audio description\n    </Link>\n    <LinkExternalIcon size={16} />\n  </Stack>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Footnotes with Paragraphs in React\nDESCRIPTION: Shows how to use the Footnotes component with longer paragraph content and the 'as' prop set to 'div'.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Footnotes/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Footnotes as=\"div\">\n  <Footnotes.Item>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean non\n    facilisis tortor. Pellentesque rhoncus blandit posuere. Sed eget mi finibus,\n    fermentum turpis vitae, eleifend dolor. Maecenas viverra neque at cursus\n    faucibus. Nam tempus enim quis augue pulvinar finibus. Integer accumsan\n    turpis eget mauris pretium, non dapibus orci cursus. Ut in sollicitudin dui,\n    eu tincidunt nunc. Donec ut placerat ex. In ullamcorper nibh eu sapien\n    convallis bibendum. Sed diam leo, rhoncus non viverra nec, ullamcorper quis\n    arcu.\n  </Footnotes.Item>\n  <Footnotes.Item>\n    Etiam scelerisque turpis at massa pellentesque, ut pretium lorem iaculis.\n    Pellentesque feugiat nisi quis viverra posuere. Integer eu pulvinar ligula,\n    lacinia sollicitudin libero. Etiam in cursus lacus, vitae vestibulum elit.\n    Fusce quis purus a urna placerat dignissim non id lectus. Suspendisse\n    malesuada nisi eget nibh tempus, et sollicitudin tortor posuere. Fusce id\n    consectetur purus, sit amet faucibus orci. Lorem ipsum dolor sit amet,\n    consectetur adipiscing elit. Phasellus sollicitudin nisl vel felis tempor,\n    quis porttitor diam elementum. Integer vel enim eget urna ullamcorper\n    euismod eget quis nisl. Pellentesque nec erat tincidunt, dignissim ligula\n    ut, consectetur lectus. Sed scelerisque urna maximus varius mollis. Ut\n    dictum sed nibh id fermentum. Ut hendrerit accumsan tortor, eu tincidunt\n    mauris blandit in. Suspendisse ut velit in felis molestie euismod. Nam vitae\n    dui a justo lacinia semper.\n  </Footnotes.Item>\n</Footnotes>\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Footer Links to MinimalFooter in React\nDESCRIPTION: Shows how to add custom navigation links to the MinimalFooter using the MinimalFooter.Link subcomponent. Each link includes an href and display text.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/MinimalFooter.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<MinimalFooter>\n  <MinimalFooter.Link href=\"https://github.com/organizations/enterprise_plan\">\n    Try GitHub for free\n  </MinimalFooter.Link>\n  <MinimalFooter.Link href=\"https://github.com/enterprise\">\n    Enterprise\n  </MinimalFooter.Link>\n  <MinimalFooter.Link href=\"https://github.com/enterprise/contact\">\n    Email us\n  </MinimalFooter.Link>\n</MinimalFooter>\n```\n\n----------------------------------------\n\nTITLE: Default Section Component Implementation\nDESCRIPTION: Example of the default Section component which wraps content in a semantic <section> element with default paddings.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Section/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Section>\n  <SectionIntro align=\"center\">\n    <SectionIntro.Heading size=\"3\">Default section</SectionIntro.Heading>\n    <SectionIntro.Description>\n      This content is wrapped in a Section component.\n    </SectionIntro.Description>\n  </SectionIntro>\n</Section>\n```\n\n----------------------------------------\n\nTITLE: BreakoutBanner with Description\nDESCRIPTION: Example showing a BreakoutBanner with an optional description section between the heading and the action links.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<BreakoutBanner>\n  <BreakoutBanner.Heading>\n    Where the most ambitious teams build great things\n  </BreakoutBanner.Heading>\n  <BreakoutBanner.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </BreakoutBanner.Description>\n  <BreakoutBanner.LinkGroup>\n    <Link href=\"#\">Primary action</Link>\n  </BreakoutBanner.LinkGroup>\n</BreakoutBanner>\n```\n\n----------------------------------------\n\nTITLE: Rendering Pillar Component with Image in React\nDESCRIPTION: Demonstrates how to add an image to the Pillar component for enhanced visual context.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pillar/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Pillar>\n  <Pillar.Image\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder, blank area with an gray background color\"\n  />\n  <Pillar.Heading>Code search & code view</Pillar.Heading>\n  <Pillar.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Pillar.Description>\n</Pillar>\n```\n\n----------------------------------------\n\nTITLE: Setting Background Colors on Box Components\nDESCRIPTION: Shows the various background color options available for Box components: default, subtle, inset, and overlay.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" flexWrap=\"wrap\">\n  <Box\n    backgroundColor=\"default\"\n    borderWidth=\"thin\"\n    borderColor=\"default\"\n    borderStyle=\"solid\"\n    padding=\"spacious\"\n  >\n    default\n  </Box>\n  <Box\n    backgroundColor=\"subtle\"\n    borderWidth=\"thin\"\n    borderColor=\"default\"\n    borderStyle=\"solid\"\n    padding=\"spacious\"\n  >\n    subtle\n  </Box>\n  <Box\n    backgroundColor=\"inset\"\n    borderWidth=\"thin\"\n    borderColor=\"default\"\n    borderStyle=\"solid\"\n    padding=\"spacious\"\n  >\n    inset\n  </Box>\n  <Box\n    backgroundColor=\"overlay\"\n    borderWidth=\"thin\"\n    borderColor=\"default\"\n    borderStyle=\"solid\"\n    padding=\"spacious\"\n  >\n    overlay\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Applying Borders to Box Components\nDESCRIPTION: Demonstrates how to use borderWidth, borderColor, and borderStyle props to create different border styles: thin, thick, and thicker.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" flexWrap=\"wrap\">\n  <Box\n    backgroundColor=\"subtle\"\n    borderWidth=\"thin\"\n    borderColor=\"default\"\n    borderStyle=\"solid\"\n    padding=\"spacious\"\n  >\n    thin\n  </Box>\n  <Box\n    backgroundColor=\"subtle\"\n    borderWidth=\"thick\"\n    borderColor=\"default\"\n    borderStyle=\"solid\"\n    padding=\"spacious\"\n  >\n    thick\n  </Box>\n  <Box\n    backgroundColor=\"subtle\"\n    borderWidth=\"thicker\"\n    borderColor=\"default\"\n    borderStyle=\"solid\"\n    padding=\"spacious\"\n  >\n    thicker\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Box Component Properties Table in Markdown\nDESCRIPTION: Markdown table defining all available properties for the Box component, including their types, default values, and descriptions. Properties cover padding, margin, background color, border radius, border width, border color, and border style configurations.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                     | Type                                                          |   Default   | Description                                                                 |\n| :----------------------- | :------------------------------------------------------------ | :---------: | :-------------------------------------------------------------------------- |\n| `padding`                | <BoxSpacingValueProp />                                       | `undefined` | Adds padding to all internal sides of the Box.                              |\n| `paddingBlockStart`      | <BoxSpacingValueProp />                                       | `undefined` | Adds padding to the internal block start (top) side of the Box.             |\n| `paddingRight`           | <BoxSpacingValueProp />                                       | `undefined` | Adds padding to the internal inline end (right) of the Box.                 |\n| `paddingBlockEnd`        | <BoxSpacingValueProp />                                       | `undefined` | Adds padding to the internal block end (bottom) side of the Box.            |\n| `paddingLeft`            | <BoxSpacingValueProp />                                       | `undefined` | Adds padding to the internal inline start (left) side of the Box.           |\n| `margin`                 | <BoxSpacingValueProp />                                       | `undefined` | Adds margin to all external sides of the Box.                               |\n| `marginBlockStart`       | <BoxSpacingValueProp />                                       | `undefined` | Adds margin to the external block start (top) side of the Box.              |\n| `marginInlineEnd`        | <BoxSpacingValueProp />                                       | `undefined` | Adds margin to the external inline end (right) side of the Box.             |\n| `marginBlockEnd`         | <BoxSpacingValueProp />                                       | `undefined` | Adds margin to the external block end (bottom) side of the Box.             |\n| `marginInlineStart`      | <BoxSpacingValueProp />                                       | `undefined` | Adds margin to the external inline start (left) side of the Box.            |\n| `backgroundColor`        | <BoxBackgroundColorProp  />                                   | `undefined` | Applies a system-level background color to the Box.                         |\n| `borderRadius`           | <BoxBorderRadiusProp  />                                      | `undefined` | Applies a system-level border radius value to the Box.                      |\n| `borderWidth`            | <BoxBorderWidthProp  />                                       | `undefined` | Applies a system-level border width value to the Box.                       |\n| `borderBlockStartWidth`  | <BoxBorderWidthProp  />                                       | `undefined` | Applies a system-level border width value to block-start side of the Box.   |\n| `borderInlineEndWidth`   | <BoxBorderWidthProp  />                                       | `undefined` | Applies a system-level border width value to inline-end side of the Box.    |\n| `borderBlockEndWidth`    | <BoxBorderWidthProp  />                                       | `undefined` | Applies a system-level border width value to block-end side of the Box.     |\n| `borderInlineStartWidth` | <BoxBorderWidthProp  />                                       | `undefined` | Applies a system-level border width value to inline-start side of the Box.  |\n| `borderColor`            | <BoxBorderColorProp  />                                       | `undefined` | Applies a system-level border color value to the Box.                       |\n| `borderStyle`            | <PropTableValues values={['solid', 'none']} commaSeparated /> | `undefined` | Applies border style. Values correspond to the CSS `border-style` property. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Alternative Heading Levels in LogoSuite\nDESCRIPTION: Demonstrates how to use the 'as' prop to change the heading level in LogoSuite component. Shows implementation of a LogoSuite with heading level h4 and placeholder logos.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<LogoSuite>\n  <LogoSuite.Heading as=\"h4\">\n    The ultimate developer experience is here.\n  </LogoSuite.Heading>\n  <LogoSuite.Description>\n    The heading above is rendered as a h4\n  </LogoSuite.Description>\n  <LogoSuite.Logobar>\n    <svg role=\"img\" viewBox=\"0 0 300 100\">\n      <title>Placeholder logo</title>\n      <rect width=\"100%\" height=\"100%\" />\n    </svg>\n    <svg role=\"img\" viewBox=\"0 0 300 100\">\n      <title>Placeholder logo</title>\n      <rect width=\"100%\" height=\"100%\" />\n    </svg>\n    <svg role=\"img\" viewBox=\"0 0 300 100\">\n      <title>Placeholder logo</title>\n      <rect width=\"100%\" height=\"100%\" />\n    </svg>\n    <svg role=\"img\" viewBox=\"0 0 300 100\">\n      <title>Placeholder logo</title>\n      <rect width=\"100%\" height=\"100%\" />\n    </svg>\n  </LogoSuite.Logobar>\n</LogoSuite>\n```\n\n----------------------------------------\n\nTITLE: Implementing LogoSuite Component with Muted Variant in React JSX\nDESCRIPTION: Demonstrates the implementation of a LogoSuite component with the muted variant for displaying logos. This variant is automatically selected when 6 or more logos are present, displaying them with lower contrast and smaller size.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<LogoSuite>\n  <LogoSuite.Heading visuallyHidden>Muted example</LogoSuite.Heading>\n  <LogoSuite.Description>Muted</LogoSuite.Description>\n  <LogoSuite.Logobar variant=\"muted\">\n    <svg\n      role=\"img\"\n      focusable=\"false\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 45 16\"\n      width=\"45\"\n      height=\"16\"\n    >\n      <title>GitHub</title>\n    </svg>\n  </LogoSuite.Logobar>\n</LogoSuite>\n```\n\n----------------------------------------\n\nTITLE: Testimonial with Logo Instead of Avatar\nDESCRIPTION: Example showing how to use a logo instead of an avatar in the Testimonial component. This implementation uses the Testimonial.Logo subcomponent to display a GitHub logo image.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Testimonial>\n  <Testimonial.Quote>\n    GitHub helps us ensure that we have our security controls baked into our\n    pipelines all the way from the first line of code we&apos;re writing.\n  </Testimonial.Quote>\n  <Testimonial.Name>David Ross</Testimonial.Name>\n  <Testimonial.Logo>\n    <img\n      alt=\"GitHub Logo\"\n      src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Logo.png\"\n      width={60}\n    />\n  </Testimonial.Logo>\n</Testimonial>\n```\n\n----------------------------------------\n\nTITLE: Default BreakoutBanner Implementation\nDESCRIPTION: Basic example of a BreakoutBanner with a heading and a primary action link.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<BreakoutBanner>\n  <BreakoutBanner.Heading>\n    Where the most ambitious teams build great things\n  </BreakoutBanner.Heading>\n  <BreakoutBanner.LinkGroup>\n    <Link href=\"#\">Primary action</Link>\n  </BreakoutBanner.LinkGroup>\n</BreakoutBanner>\n```\n\n----------------------------------------\n\nTITLE: Default Testimonial Implementation with Quote, Name and Avatar\nDESCRIPTION: Example of the default implementation of the Testimonial component with Quote, Name, and Avatar subcomponents. The quote contains text, the name includes a position, and an avatar image is provided.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Testimonial>\n  <Testimonial.Quote>\n    GitHub helps us ensure that we have our security controls baked into our\n    pipelines all the way from the first line of code we&apos;re writing.\n  </Testimonial.Quote>\n  <Testimonial.Name position=\"Staff Security Engineer\">\n    David Ross\n  </Testimonial.Name>\n  <Testimonial.Avatar\n    src=\"/brand/assets/avatar-mona.png\"\n    alt=\"Circular avatar from David Ross's GitHub profile\"\n  />\n</Testimonial>\n```\n\n----------------------------------------\n\nTITLE: Rendering Pillar Component with Border in React\nDESCRIPTION: Shows how to add a border to the Pillar component for visual separation.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pillar/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Pillar hasBorder>\n  <Pillar.Heading>Code search & code view</Pillar.Heading>\n  <Pillar.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Pillar.Description>\n</Pillar>\n```\n\n----------------------------------------\n\nTITLE: Image Component with Source Set in JSX\nDESCRIPTION: Shows how to use the 'srcSet' prop to provide multiple image sources for different resolutions.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Image\n  src=\"/brand/assets/placeholder.png\"\n  srcSet=\"/brand/assets/placeholder.png, /brand/assets/placeholder.png 1.5x\"\n  alt=\"placeholder, blank area with a gray background color\"\n/>\n```\n\n----------------------------------------\n\nTITLE: FormControl with Different Sizes\nDESCRIPTION: Demonstration of FormControl in different size dimensions using the size prop. Shows both medium and large sizes available in the component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{display: 'grid', gap: 3}}>\n  <FormControl size=\"medium\">\n    <FormControl.Label>Medium</FormControl.Label>\n    <TextInput />\n  </FormControl>\n\n  <FormControl size=\"large\">\n    <FormControl.Label>Large</FormControl.Label>\n    <TextInput />\n  </FormControl>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table: River.Content and RiverBreakout.Content Props\nDESCRIPTION: A markdown table listing the props for River.Content and RiverBreakout.Content components, including their types, defaults, and descriptions.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| Name        | Type                                                                                                                                                                  | Default | Description                                      |\n| :---------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :-----: | :----------------------------------------------- |\n| `children`  | [`Text`](https://primer.style/brand/components/Text),[`Heading`](https://primer.style/brand/components/Heading), [`Link`](https://primer.style/brand/components/Link) |         | Content that corrosponds to the adjacent visual. |\n| `className` | `string`                                                                                                                                                              |         | Sets a custom class on the root element          |\n| `id`        | `string`                                                                                                                                                              |         | Sets a custom id                                 |\n| `ref`       | `React.RefObject`                                                                                                                                                     |         | Forward a Ref to the underlying DOM node         |\n```\n\n----------------------------------------\n\nTITLE: Displaying Form Validation States with Textarea in JSX\nDESCRIPTION: Illustrates how to use the Textarea component within FormControl to display success and error validation states.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Textarea.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"vertical\">\n  <FormControl validationStatus=\"success\">\n    <FormControl.Label>Success state</FormControl.Label>\n    <Textarea />\n    <FormControl.Validation>This is a success message</FormControl.Validation>\n  </FormControl>\n</Stack>\n<Stack direction=\"vertical\">\n  <FormControl validationStatus=\"error\">\n    <FormControl.Label>Error state</FormControl.Label>\n    <Textarea />\n    <FormControl.Validation>This is an error message</FormControl.Validation>\n  </FormControl>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Default FAQ Implementation\nDESCRIPTION: Example showing basic FAQ implementation with questions and answers, including HTML formatting and links\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FAQ/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <FAQ>\n    <FAQ.Heading>Frequently asked questions</FAQ.Heading>\n    <FAQ.Item>\n      <FAQ.Question>\n        What&apos;s included in the GitHub for Startups offer?\n      </FAQ.Question>\n      <FAQ.Answer>\n        <p>\n          All GitHub for Startups companies receive up to 20 seats of GitHub\n          Enterprise for free for year one and 50% off year two. Learn more\n          about the features and capabilities of GitHub Enterprise{' '}\n          <a href=\"https://www.github.com\" target=\"_blank\" rel=\"noreferrer\">\n            here\n          </a>\n          .\n        </p>\n      </FAQ.Answer>\n    </FAQ.Item>\n    [...]\n  </FAQ>\n</>\n```\n\n----------------------------------------\n\nTITLE: Center-Aligned CTABanner Configuration\nDESCRIPTION: Demonstrates how to center-align the content within a CTABanner using the align prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<CTABanner align=\"center\">\n  <CTABanner.Heading>\n    Where the most ambitious teams build great things\n  </CTABanner.Heading>\n  <CTABanner.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </CTABanner.Description>\n  <CTABanner.ButtonGroup>\n    <Button>Primary Action</Button>\n    <Button>Secondary Action</Button>\n  </CTABanner.ButtonGroup>\n</CTABanner>\n```\n\n----------------------------------------\n\nTITLE: Rendering CheckboxGroup with Visually Hidden Label in React\nDESCRIPTION: This example shows how to create a CheckboxGroup with a visually hidden label that remains accessible to screen readers.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CheckboxGroup/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<CheckboxGroup>\n  <CheckboxGroup.Label visuallyHidden>Filter options</CheckboxGroup.Label>\n  <Stack direction=\"vertical\" gap=\"regular\">\n    <FormControl>\n      <FormControl.Label>Show all</FormControl.Label>\n      <Checkbox value=\"all\" />\n    </FormControl>\n    <FormControl>\n      <FormControl.Label>Show active only</FormControl.Label>\n      <Checkbox value=\"active\" />\n    </FormControl>\n  </Stack>\n</CheckboxGroup>\n```\n\n----------------------------------------\n\nTITLE: Applying Uniform Padding to Box Components\nDESCRIPTION: Shows how to use the padding prop with both named values (condensed, normal, spacious) and numeric values from the base scale (24-96).\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n    <Box padding=\"condensed\" className=\"bg-red-lines\">\n      condensed\n    </Box>\n    <Box padding=\"normal\" className=\"bg-red-lines\">\n      normal\n    </Box>\n    <Box padding=\"spacious\" className=\"bg-red-lines\">\n      spacious\n    </Box>\n  </Stack>\n  <Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n    <Box padding={24} className=\"bg-red-lines\">\n      24\n    </Box>\n    <Box padding={32} className=\"bg-red-lines\">\n      32\n    </Box>\n    <Box padding={48} className=\"bg-red-lines\">\n      48\n    </Box>\n    <Box padding={64} className=\"bg-red-lines\">\n      64\n    </Box>\n    <Box padding={96} className=\"bg-red-lines\">\n      96\n    </Box>\n  </Stack>\n</>\n```\n\n----------------------------------------\n\nTITLE: Setting Border Radius on Box Components\nDESCRIPTION: Shows the various border radius options available for Box components: small, medium, large, and full.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" flexWrap=\"wrap\">\n  <Box borderRadius=\"small\" padding=\"spacious\" className=\"bg-red-lines\">\n    small\n  </Box>\n  <Box borderRadius=\"medium\" padding=\"spacious\" className=\"bg-red-lines\">\n    medium\n  </Box>\n  <Box borderRadius=\"large\" padding=\"spacious\" className=\"bg-red-lines\">\n    large\n  </Box>\n  <Box borderRadius=\"full\" padding=\"spacious\" className=\"bg-red-lines\">\n    full\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Image Components with Various Border Radii in JSX\nDESCRIPTION: Demonstrates using the 'borderRadius' prop to apply different preset rounded corners to images.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\">\n  <Image\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder, blank area with a gray background color\"\n    height={100}\n    width={100}\n    borderRadius=\"small\"\n  />\n  <Image\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder, blank area with a gray background color\"\n    height={100}\n    width={100}\n    borderRadius=\"medium\"\n  />\n  <Image\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder, blank area with a gray background color\"\n    height={100}\n    width={100}\n    borderRadius=\"large\"\n  />\n  <Image\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder, blank area with a gray background color\"\n    height={100}\n    width={100}\n    borderRadius=\"xlarge\"\n  />\n  <Image\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder, blank area with a gray background color\"\n    height={100}\n    width={100}\n    borderRadius=\"full\"\n  />\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Importing Color Theme Components in React\nDESCRIPTION: Import statements for required components from Primer React and Primer React Brand libraries, including HeadingTags, Box container, and custom color components.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/primitives/color.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport {HeadingTags, defaultHeadingTag} from '@primer/react-brand'\nimport {Box as Container} from '@primer/react'\nimport {ColorThemePicker} from '../../src/components/content/ColorThemePicker'\nimport {ColorScales} from '../../src/components'\n```\n\n----------------------------------------\n\nTITLE: Basic FormControl Implementation\nDESCRIPTION: A simple example showing FormControl with a label and text input. FormControl handles layout and ensures proper ARIA attributes are passed to children.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<FormControl>\n  <FormControl.Label>Name</FormControl.Label>\n  <TextInput autoComplete=\"name\" />\n</FormControl>\n```\n\n----------------------------------------\n\nTITLE: Basic Select Component Implementation\nDESCRIPTION: A default implementation of the Select component with simple options.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Select>\n  <Select.Option value=\"mona\">Monalisa</Select.Option>\n  <Select.Option value=\"hubot\">Hubot</Select.Option>\n</Select>\n```\n\n----------------------------------------\n\nTITLE: Do/Don't Container Example - React/JSX\nDESCRIPTION: Example usage of DoDontContainer component to demonstrate button group best practices\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ButtonGroup/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DoDontContainer>\n  <Do>\n    <img src=\"https://github.com/primer/brand/assets/6951037/c69ae38e-819b-4e03-9b92-665a479f188a\" />\n    <Caption>Use a primary button with a secondary button.</Caption>\n  </Do>\n  <Dont>\n    <img src=\"https://github.com/primer/brand/assets/6951037/c4c5c0de-2a46-4dbb-802a-0a6739d31d3a\" />\n    <Caption>Don't place multiple primary buttons together.</Caption>\n  </Dont>\n</DoDontContainer>\n```\n\n----------------------------------------\n\nTITLE: Customizing Card CTA Text in JSX\nDESCRIPTION: Demonstrates how to customize the call-to-action text of the Card component using the 'ctaText' prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Card ctaText=\"Discover how\" href=\"https://github.com\">\n  <Card.Heading>Collaboration is the key to DevOps success</Card.Heading>\n  <Card.Description>\n    Everything you need to know about getting started with GitHub Actions.\n  </Card.Description>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Loading Primer Brand Stylesheet\nDESCRIPTION: Import statement for including the main CSS stylesheet that contains design tokens and component styles.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/theming.mdx#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport '@primer/react-brand/lib/css/main.css'\n```\n\n----------------------------------------\n\nTITLE: CTABanner with Border Option\nDESCRIPTION: Shows how to add a border to the CTABanner component using the hasBorder prop for additional separation between foreground and background.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<CTABanner hasBorder>\n  <CTABanner.Heading>\n    Where the most ambitious teams build great things\n  </CTABanner.Heading>\n  <CTABanner.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </CTABanner.Description>\n  <CTABanner.ButtonGroup>\n    <Button>Primary Action</Button>\n    <Button>Secondary Action</Button>\n  </CTABanner.ButtonGroup>\n</CTABanner>\n```\n\n----------------------------------------\n\nTITLE: Avatar Component with Different Shapes\nDESCRIPTION: Shows how to implement avatars with different shapes (circle and square) using the shape property, arranged in a horizontal Stack layout.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Avatar/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack\n  direction=\"horizontal\"\n  alignItems=\"center\"\n  justifyContent=\"center\"\n  gap=\"spacious\"\n  style={{height: 200}}\n>\n  <Avatar\n    size={64}\n    shape=\"circle\"\n    src=\"/brand/assets/avatar-mona.png\"\n    alt=\"A circular avatar picture\"\n  />\n  <Avatar\n    size={64}\n    shape=\"square\"\n    src=\"/brand/assets/avatar-mona.png\"\n    alt=\"A square avatar picture\"\n  />\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Implementing Prose Component in JSX\nDESCRIPTION: Example usage of the new Prose component for rendering HTML content with Primer Brand styling.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_14\n\nLANGUAGE: jsx\nCODE:\n```\n<Prose\n  html={`\n    <h2>Prose Component</h2>\n    <p>\n      The Prose component renders native HTML elements with Primer Brand styling. Prose doesn't sanitize the input data. We recommend sanitizing the data before passing it into Prose. <a href=\"https://primer.style/brand/components/Prose\">Learn more here.</a>\n    </p>\n`}\n/>\n```\n\n----------------------------------------\n\nTITLE: RiverBreakout Component Implementation\nDESCRIPTION: Demonstrates the RiverBreakout variant with custom timeline content and accessibility features\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<RiverBreakout>\n  <RiverBreakout.A11yHeading>Accelerate workflows</RiverBreakout.A11yHeading>\n  <RiverBreakout.Visual>\n    <img\n      src=\"/brand/assets/placeholder.png\"\n      alt=\"placeholder, blank area with a gray background color\"\n    />\n  </RiverBreakout.Visual>\n  <RiverBreakout.Content\n    trailingComponent={() => (\n      <Timeline>\n        <Timeline.Item>\n          <b>GitHub Codespaces</b> offers a complete dev environment in seconds.\n        </Timeline.Item>\n        <Timeline.Item>\n          <b>GitHub Copilot</b> is your AI pair programmer that empowers you to\n          complete tasks.\n        </Timeline.Item>\n      </Timeline>\n    )}\n  >\n    <Text>\n      <b>This first sentence is a river breakout headline.</b> And this is where\n      the body copy starts. Remember to keep these nice and succinct.\n    </Text>\n    <Link href=\"#\">Call to action</Link>\n  </RiverBreakout.Content>\n</RiverBreakout>\n```\n\n----------------------------------------\n\nTITLE: CTA Form Without Confirmation Block\nDESCRIPTION: Simplified CTA Form implementation without the confirmation checkbox section, only using the Input and Action subcomponents.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTAForm/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<CTAForm>\n  <CTAForm.Input>\n    <FormControl required>\n      <FormControl.Label>Your work email address</FormControl.Label>\n      <TextInput placeholder=\"email\" autoComplete=\"email\" />\n    </FormControl>\n  </CTAForm.Input>\n  <CTAForm.Action>Subscribe</CTAForm.Action>\n</CTAForm>\n```\n\n----------------------------------------\n\nTITLE: Polymorphic Usage of Text Component in JSX\nDESCRIPTION: Shows how to use the Text component as a paragraph element using the as prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Text/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Text as=\"p\">With GitHub Copilot, you're always in charge.</Text>\n```\n\n----------------------------------------\n\nTITLE: Default Heading Implementation\nDESCRIPTION: Basic implementation of the Heading component with default settings.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Heading/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Heading>This is my super sweet heading</Heading>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Statistic Component\nDESCRIPTION: Example of implementing the default Statistic component with a heading and description.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Statistic.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Statistic>\n  <Statistic.Heading>+25%</Statistic.Heading>\n  <Statistic.Description>increase in developer speed</Statistic.Description>\n</Statistic>\n```\n\n----------------------------------------\n\nTITLE: Loading Primer Brand Stylesheet Statically\nDESCRIPTION: Load the main CSS stylesheet using a static HTML link tag when bundler import is not available\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/introduction.mdx#2025-04-12_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://unpkg.com/browse/@primer/react-brand@<version>/lib/css/main.css\" rel=\"stylesheet\" />\n```\n\n----------------------------------------\n\nTITLE: CTABanner without Background\nDESCRIPTION: Demonstrates how to remove the background from a CTABanner using the hasBackground prop to blend with the parent element.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<CTABanner hasBackground={false} hasShadow={false}>\n  <CTABanner.Heading>\n    Where the most ambitious teams build great things\n  </CTABanner.Heading>\n  <CTABanner.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </CTABanner.Description>\n  <CTABanner.ButtonGroup>\n    <Button>Primary Action</Button>\n    <Button>Secondary Action</Button>\n  </CTABanner.ButtonGroup>\n</CTABanner>\n```\n\n----------------------------------------\n\nTITLE: Rendering Subtle Button Variant in JSX\nDESCRIPTION: Shows how to use the 'subtle' variant of the Button component, which indicates a low-priority action.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Button variant=\"subtle\">Primary</Button>\n```\n\n----------------------------------------\n\nTITLE: Component Usage Example in JSX\nDESCRIPTION: Example of using DoDontContainer component with image elements and captions to demonstrate proper usage patterns.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/OrderedList/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DoDontContainer>\n  <Do>\n    <img\n      src=\"https://github.com/primer/brand/assets/912236/40022d10-248f-45d5-acce-2917a72d7b12\"\n      alt=\"\"\n    />\n    <Caption>Use an ordered list to present a sequence of steps.</Caption>\n  </Do>\n  <Dont>\n    <img\n      src=\"https://github.com/primer/brand/assets/912236/e9dd1ee2-cfa7-40d4-a8b6-2416cf99cdae\"\n      alt=\"\"\n    />\n    <Caption>\n      Don't use an ordered list to present a list of items that don't require a\n      specific order. Use an unordered list instead.\n    </Caption>\n  </Dont>\n</DoDontContainer>\n```\n\n----------------------------------------\n\nTITLE: Box Component with Border Radius\nDESCRIPTION: Examples of different border radius values available in the Box component\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" flexWrap=\"wrap\">\n  <Box borderRadius=\"small\" padding=\"spacious\" className=\"bg-red-lines\">\n    small\n  </Box>\n  <Box borderRadius=\"medium\" padding=\"spacious\" className=\"bg-red-lines\">\n    medium\n  </Box>\n  <Box borderRadius=\"large\" padding=\"spacious\" className=\"bg-red-lines\">\n    large\n  </Box>\n  <Box borderRadius=\"full\" padding=\"spacious\" className=\"bg-red-lines\">\n    full\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Implementing PricingOptions with Cards Variant in React\nDESCRIPTION: This example shows how to use the PricingOptions component with the 'cards' variant. It displays two pricing plans in a card-like format with similar content structure to the default variant.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/PricingOptions.mdx#2025-04-12_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<PricingOptions variant=\"cards\">\n  <PricingOptions.Item>\n    <PricingOptions.Label>Recommended</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot in the coding environment.\n    </PricingOptions.Description>\n    <PricingOptions.Price\n      currencySymbol=\"$\"\n      trailingText=\"per month / $100 per year\"\n    >\n      10\n    </PricingOptions.Price>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListItem>\n        Everything in Copilot Business plus:\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Chat in IDE and Mobile\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        CLI assistance\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Code completions\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Buy now\n    </PricingOptions.PrimaryAction>\n    <PricingOptions.SecondaryAction href=\"/contact\">\n      Contact sales\n    </PricingOptions.SecondaryAction>\n  </PricingOptions.Item>\n\n  <PricingOptions.Item>\n    <PricingOptions.Label>Recommended</PricingOptions.Label>\n    <PricingOptions.Heading>Copilot Business</PricingOptions.Heading>\n    <PricingOptions.Description>\n      Copilot personalized to your organization throughout the software\n      development lifecycle. Requires GitHub Enterprise Cloud.\n    </PricingOptions.Description>\n    <PricingOptions.Price currencySymbol=\"$\" trailingText=\"per user / month\">\n      39\n    </PricingOptions.Price>\n    <PricingOptions.FeatureList>\n      <PricingOptions.FeatureListItem>\n        Everything in Copilot Business plus:\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Chat in IDE and Mobile\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        CLI assistance\n      </PricingOptions.FeatureListItem>\n      <PricingOptions.FeatureListItem>\n        Code completions\n      </PricingOptions.FeatureListItem>\n    </PricingOptions.FeatureList>\n    <PricingOptions.PrimaryAction href=\"/buy\">\n      Join waitlist\n    </PricingOptions.PrimaryAction>\n  </PricingOptions.Item>\n</PricingOptions>\n```\n\n----------------------------------------\n\nTITLE: River Component Animation Example\nDESCRIPTION: Demonstrates how to apply animations to River.Content component within a River layout.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/animation.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<AnimationProvider>\n  <River>\n    <River.Visual>\n      <img\n        src=\"/brand/assets/placeholder.png\"\n        alt=\"placeholder, blank area with a gray background color\"\n      />\n    </River.Visual>\n    <River.Content animate=\"slide-in-right\">\n      <Heading>Heading</Heading>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n        ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n        elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </River.Content>\n  </River>\n</AnimationProvider>\n```\n\n----------------------------------------\n\nTITLE: Defining Testimonial.Avatar Component Props in React\nDESCRIPTION: This snippet details the props for the Testimonial.Avatar subcomponent, which displays a visual representation of the user or organization.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| Name        | Type              | Default | Description                                                        |\n| :---------- | :---------------- | :-----: | :----------------------------------------------------------------- |\n| `children`  | `string`          |         | Label text                                                         |\n| `className` | `string`          |         | Applies a custom class                                             |\n| `id`        | `string`          |         | Sets a custom id                                                   |\n| `ref`       | `React.RefObject` |         | Forward a Ref to the underlying DOM node                           |\n| `src`       | `string`          |         | Required. A url to the user or organisations GitHub profile avatar |\n| `alt`       | `string`          |         | Required. Applied as alt text to the avatar.                       |\n```\n\n----------------------------------------\n\nTITLE: Rendering Default CheckboxGroup in React\nDESCRIPTION: This example demonstrates how to create a basic CheckboxGroup with multiple checkboxes for selecting favorite features.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CheckboxGroup/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<CheckboxGroup>\n  <CheckboxGroup.Label>Choose your favorite features</CheckboxGroup.Label>\n  <FormControl>\n    <FormControl.Label>Actions notifications</FormControl.Label>\n    <Checkbox value=\"actions\" />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Packages</FormControl.Label>\n    <Checkbox value=\"packages\" />\n  </FormControl>\n  <FormControl>\n    <FormControl.Label>Codespaces</FormControl.Label>\n    <Checkbox value=\"codespaces\" />\n  </FormControl>\n</CheckboxGroup>\n```\n\n----------------------------------------\n\nTITLE: Adding Image to Card Component in JSX\nDESCRIPTION: Shows how to add an image to the Card component using the Card.Image subcomponent.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Card href=\"https://github.com\">\n  <Card.Image\n    src=\"/brand/assets/placeholder.png\"\n    alt=\"placeholder, blank area with an gray background color\"\n  />\n  <Card.Heading>Code search & code view</Card.Heading>\n  <Card.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Card.Description>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Defining Bento.Visual Component Props in Markdown\nDESCRIPTION: This snippet outlines the props for the Bento.Visual component, including className, fillMedia, position, and padding. It also mentions that the component supports all standard HTML attribute props for HTMLDivElement.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Bento.mdx#2025-04-12_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| Name        | Type                                                         |   Default   | Required | Description                                                                                              |\n| :---------- | :----------------------------------------------------------- | :---------: | :------- | -------------------------------------------------------------------------------------------------------- |\n| `className` | `string`                                                     |             | `false`  | Sets a custom class on the root element                                                                  |\n| `fillMedia` | `boolean`                                                    |   `true`    | `false`  | Determines how the visual reacts within its container. Either filling the container or contained within. |\n| `position`  | `string`                                                     | \"50% 50%\" | `false`  | The positioning of the visual.                                                                           |\n| `padding`   | `\"condensed\"`, `\"normal\"`, `\"spacious\"`, `ResponsivePadding` |             | `false`  | Sets a custom class on the root element                                                                  |\n```\n\n----------------------------------------\n\nTITLE: Rendering Hero Layout with Primer Brand Components in React\nDESCRIPTION: This code snippet creates a hero layout using Primer React and Primer React Brand components. It includes buttons for installation instructions, Storybook, and contribution, as well as displaying the current version of the package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<PRCBox\n  sx={{\n    mt: 5,\n  }}\n>\n  <Text as=\"p\" size=\"300\">\n    Read the installation instructions to get started.\n  </Text>\n  <PRCBox\n    sx={{\n      mt: 4,\n      flexDirection: 'row',\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'stretch',\n      columnGap: '0.75rem',\n    }}\n  >\n    <p>\n      <Button as=\"a\" variant=\"primary\" href=\"/brand/getting-started\">\n        Installation instructions\n      </Button>\n    </p>\n    <p>\n      <Button\n        as=\"a\"\n        variant=\"secondary\"\n        href=\"/brand/storybook\"\n        target=\"_blank\"\n      >\n        Storybook\n      </Button>\n    </p>\n    <p>\n      <Button\n        as=\"a\"\n        variant=\"secondary\"\n        href=\"https://github.com/primer/brand\"\n        target=\"_blank\"\n      >\n        Contribute\n      </Button>\n    </p>\n  </PRCBox>\n  <PRCBox\n    sx={{\n      mt: 5,\n    }}\n  >\n    <Text as=\"p\">\n      <Text weight=\"semibold\">Latest release:</Text>{' '}\n      <PRCBox as=\"span\" sx={{mr: 3, display: 'inline-block'}}>\n        <InlineCode sx={{mr: 2}}>\n          <a href=\"https://github.com/primer/brand/releases\">v{version}</a>\n        </InlineCode>\n        .\n      </PRCBox>\n      <Text size=\"100\">\n        <a href=\"https://github.com/primer/brand/blob/main/packages/react/CHANGELOG.md\">\n          Read the change log <LinkExternalIcon />\n        </a>\n      </Text>\n    </Text>\n  </PRCBox>\n</PRCBox>\n```\n\n----------------------------------------\n\nTITLE: SubNav with Call-to-Action Button\nDESCRIPTION: Enhanced SubNav implementation that includes a call-to-action button using SubNav.Action, providing an additional interactive element in the navigation.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SubNav.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{position: 'relative', height: 100}}>\n  <SubNav hasShadow>\n    <SubNav.Heading href=\"#\">Features</SubNav.Heading>\n    <SubNav.Link href=\"#\">Actions</SubNav.Link>\n    <SubNav.Link href=\"#\">Packages</SubNav.Link>\n    <SubNav.Link href=\"#\" aria-current=\"page\">\n      Copilot\n    </SubNav.Link>\n    <SubNav.Link href=\"#\">Code review</SubNav.Link>\n    <SubNav.Action href=\"#\">CTA</SubNav.Action>\n  </SubNav>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Adding ActionMenu Component Tokens in CSS\nDESCRIPTION: New design tokens specific to the ActionMenu component for controlling colors and borders.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_20\n\nLANGUAGE: css\nCODE:\n```\n--brand-ActionMenu-color-border-rest\n--brand-ActionMenu-color-border-hover\n--brand-ActionMenu-color-border-active\n--brand-ActionMenu-color-item-hover\n--brand-ActionMenu-color-scrollbar-thumb-bg\n```\n\n----------------------------------------\n\nTITLE: Default SubNav Implementation\nDESCRIPTION: Basic implementation of the SubNav component with a heading and multiple navigation links, where one link is marked as the current page.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SubNav.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{position: 'relative', height: 100}}>\n  <SubNav>\n    <SubNav.Heading href=\"#\">Features</SubNav.Heading>\n    <SubNav.Link href=\"#\">Actions</SubNav.Link>\n    <SubNav.Link href=\"#\">Packages</SubNav.Link>\n    <SubNav.Link href=\"#\" aria-current=\"page\">\n      Copilot\n    </SubNav.Link>\n    <SubNav.Link href=\"#\">Code review</SubNav.Link>\n  </SubNav>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Using RiverBreakout Component in React\nDESCRIPTION: Demonstrates the usage of the new RiverBreakout component introduced in version 0.24.0. The component includes subcomponents for visual content, main content, and accessibility features.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n<RiverBreakout>\n  <RiverBreakout.A11yHeading>Accelerate workflows</RiverBreakout.A11yHeading>\n  <RiverBreakout.Visual>\n    <PlaceholderImage />\n  </RiverBreakout.Visual>\n  <RiverBreakout.Content\n    trailingComponent={() => {\n      ;<div>Trailing component</div>\n    }}\n  >\n    <Text>\n      Accelerate your workflows and scale your business fast with access to millions of open source projects on\n      GitHub, the largest source code host.\n    </Text>\n    <Link href=\"#\">Call to action</Link>\n  </RiverBreakout.Content>\n</RiverBreakout>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Label Size Variants in React\nDESCRIPTION: Example showing the different size variants (small, medium, large) of the Label component arranged horizontally in a Stack.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Label/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"flex-start\" padding=\"none\">\n  <Label size=\"small\">Small</Label>\n  <Label size=\"medium\">Medium</Label>\n  <Label size=\"large\">Large</Label>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Image Component with Aspect Ratio in JSX\nDESCRIPTION: Demonstrates setting a specific aspect ratio for the Image component using the 'aspectRatio' prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Image\n  src=\"/brand/assets/placeholder.png\"\n  alt=\"placeholder, blank area with a gray background color\"\n  aspectRatio=\"16:9\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Card.Heading Props Table Definition\nDESCRIPTION: Defines the available props for the Card.Heading component including as, className, and children. The component forwards all props from the Heading component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n| name        | type                         | default     | required | description                                           |\n| ----------- | ---------------------------- | ----------- | -------- | ----------------------------------------------------- |\n| `as`        | `h2`, `h3`, `h4`, `h5`, `h6` | `h3`        | `false`  |                                                       |\n| `className` | `string`                     |             | `false`  | Custom class name for the heading component           |\n| `children`  | `ReactNode`, `ReactNode[]`   | `undefined` | `true`   | Content to be displayed inside the heading component. |\n```\n\n----------------------------------------\n\nTITLE: Color Theme Component Implementation\nDESCRIPTION: Implementation of color theme picker and scales components with a warning note about proper usage of scale variables.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/primitives/color.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<ColorThemePicker />\n\n<Note variant=\"warning\">\n  Avoid referencing scale variables directly when building UI that needs to\n  adapt to different color themes. Instead, use the functional variables. In\n  rare cases, you may need to use scale variables to define custom functional\n  variables in your application.\n</Note>\n\n<ColorScales />\n```\n\n----------------------------------------\n\nTITLE: Default Prose Component Implementation\nDESCRIPTION: Demonstrates the default usage of Prose component with various HTML elements including headings, paragraphs, lists, blockquotes, and code elements\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Prose.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Prose\n  html={`\n    <h2>Heading level 2</h2>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut tempor lectus ipsum, consectetur convallis diam pretium quis. Proin ut felis ut eros tristique tincidunt.</p>\n    <figure>\n      <blockquote>\n        <p>Nulla ac odio eu magna hendrerit porta. Donec nec eros quis tortor tincidunt vulputate. Aenean id pharetra diam, sit amet auctor leo. Aliquam erat volutpat.</p>\n        <figcaption>Lisa Vanderschuit, Engineering Program Manager, Shopify</figcaption>\n      </blockquote>\n    </figure>\n    <p>Integer pellentesque pretium nulla viverra molestie. Praesent quis pretium sapien. Sed convallis eget lectus et pulvinar:</p>\n    <ul>\n      <li>\n        Vivamus eu risus nec lectus consequat rutrum at vel lacus.\n      </li>\n      <li>Donec at dolor ut metus imperdiet congue vel porta nunc.\n      </li>\n      <li>Quisque eu tortor suscipit, congue quam in, bibendum tellus.</li>\n    </ul>\n    <h3>Heading level 3</h3>\n    <p>Pellentesque non ornare ligula. Suspendisse nibh purus, pretium id tortor sit amet, tincidunt gravida augue. Ut malesuada, nisl vel dignissim mollis</p>\n    <img\n      src=\\\"/brand/assets/placeholder.png\\\"\n      alt=\\\"placeholder, blank area with a gray background color\\\"\n      />\n    <h4>Heading level  4</h4>\n    <p>\n      Secure code as you write it. Automatically review every change to your codebase and identify vulnerabilities\n      before they reach production. <a href=\\\"/#\\\">Learn more here.</a>\n    </p>\n    <h5>Heading level 5</h5>\n    <ol>\n      <li>\n        Vivamus eu risus nec lectus consequat rutrum at vel lacus.\n      </li>\n      <li>Donec at dolor ut metus imperdiet congue vel porta nunc.\n      </li>\n      <li>Quisque eu tortor suscipit, congue quam in, bibendum tellus.</li>\n    </ol>\n    <p><code>for-each-ref</code> is extremely useful for listing references, finding which references point at a given object (with <code>--points-at</code>), which references have been merged into a given branch (with <code>--merged</code>), or which references contain a given commit (with <code>--contains</code>).</p>\n    <h6>Heading level 6</h6>\n    <p>Pellentesque non ornare ligula. Suspendisse nibh purus, pretium id tortor sit amet, tincidunt gravida augue.</p>\n    <p>Nunc velit odio, posuere eu felis eget, consectetur fermentum nisi. Aenean tempor odio id ornare ultrices. Quisque blandit condimentum tellus, semper efficitur sapien dapibus nec. </p>\n    `}\n/>\n```\n\n----------------------------------------\n\nTITLE: Updating Animation Properties in CSS\nDESCRIPTION: Changes to animation duration and easing values, leveraging globally available variables for consistency across components.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_12\n\nLANGUAGE: css\nCODE:\n```\n- 0.3s cubic-bezier(0.16, 1, 0.3, 1)\n+ var(--brand-animation-duration-fast) var(--brand-animation-easing-default)\n```\n\n----------------------------------------\n\nTITLE: Basic Animation Implementation with Image Component\nDESCRIPTION: Demonstrates the basic usage of the animate prop with an Image component to apply animation presets.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/animation.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Image animate=\"fade-in\" />\n```\n\n----------------------------------------\n\nTITLE: Testimonial and FrostedGlassVFX Tokens (CSS)\nDESCRIPTION: CSS design tokens for Testimonial and FrostedGlassVFX components, defining borders, backgrounds, and visual effects.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --brand-Testimonial-borderMask-default\n  --brand-Testimonial-borderMask-subtle\n  --brand-FrostedGlassVFX-bgColor\n  --brand-FrostedGlassVFX-boxShadow\n  --brand-FrostedGlassVFX-borderMask\n  --brand-FrostedGlassVFX-blurIntensity-high\n  --brand-FrostedGlassVFX-blurIntensity-medium\n  --brand-FrostedGlassVFX-blurIntensity-low\n}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Label Color Variants in React\nDESCRIPTION: Example showing the different color options available for the Label component, including blue, red, green-blue, pink-blue, and orange.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Label/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"flex-start\" padding=\"none\">\n  <Label color=\"blue\">Blue</Label>\n  <Label color=\"red\">Red</Label>\n  <Label color=\"green-blue\">Green blue</Label>\n  <Label color=\"red\">Red</Label>\n  <Label color=\"pink-blue\">Pink blue</Label>\n  <Label color=\"orange\">Orange</Label>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Custom Attributes Pagination\nDESCRIPTION: Example showing how to add custom data attributes to pagination links using the pageAttributesBuilder prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pagination.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Pagination\n  pageCount={3}\n  currentPage={1}\n  pageAttributesBuilder={(n) => {\n    return {\n      'data-custom-attribute': `custom-attribute-${n}`,\n    }\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining Testimonial.Logo Component Props in React\nDESCRIPTION: This snippet specifies the props for the Testimonial.Logo subcomponent, which allows for the inclusion of a logo representing the user or organization.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n| Name        | Type                                                                          | Default | Description                                            |\n| :---------- | :---------------------------------------------------------------------------- | :-----: | :----------------------------------------------------- |\n| `children`  | <PropTableValues addLineBreaks values={['SVGElement', 'HTMLImageElement']} /> |         | Accepts `<img>` and `<svg>` HTML elements as children. |\n| `className` | `string`                                                                      |         | Applies a custom class                                 |\n| `id`        | `string`                                                                      |         | Sets a custom id                                       |\n| `ref`       | `React.RefObject`                                                             |         | Forward a Ref to the underlying DOM node               |\n```\n\n----------------------------------------\n\nTITLE: Section Component with Rounded Corners\nDESCRIPTION: This example demonstrates using the rounded prop to create a Section with rounded top corners that overlaps with the previous section.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Section/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <ThemeProvider colorMode=\"dark\">\n    <Section backgroundColor=\"default\"></Section>\n  </ThemeProvider>\n  <Section backgroundColor=\"default\" rounded>\n    <SectionIntro align=\"center\">\n      <SectionIntro.Heading size=\"3\">Rounded corners</SectionIntro.Heading>\n      <SectionIntro.Description>\n        This section has rounded top corners that overlap the previous section.\n      </SectionIntro.Description>\n    </SectionIntro>\n  </Section>\n</>\n```\n\n----------------------------------------\n\nTITLE: Default Box Component Usage\nDESCRIPTION: Basic example showing default Box component usage as a simple div wrapper\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Box>With GitHub Copilot, you're always in charge.</Box>\n```\n\n----------------------------------------\n\nTITLE: Adding Footnotes to MinimalFooter in React\nDESCRIPTION: Demonstrates how to add footnote text to the MinimalFooter using the MinimalFooter.Footnotes subcomponent, including legal disclaimer text with superscript references and an inline link.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/MinimalFooter.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<MinimalFooter>\n  <MinimalFooter.Footnotes>\n    <Text>\n      <sup>1</sup>By signing up, GitHub may use your information to personalize\n      and measure the effectiveness of enterprise business ads, including those\n      you see off of GitHub, promotional communications or marketing you receive\n      related to the Enterprise Marketing Pages. We will send you relevant\n      emails and promotional information based on your GitHub profile and any\n      additional information provided in the sign-up form. If you change your\n      mind, you can unsubscribe at any time (an unsubscribe link is provided in\n      every email). For more information on how GitHub uses your personal\n      information, please see the{' '}\n      <InlineLink\n        href=\"https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement\"\n        target=\"_blank\"\n      >\n        GitHub Privacy Statement\n      </InlineLink>\n      .\n    </Text>\n  </MinimalFooter.Footnotes>\n</MinimalFooter>\n```\n\n----------------------------------------\n\nTITLE: Using Animate Component with AnimationProvider\nDESCRIPTION: Example of wrapping content with Animate component and AnimationProvider to enable animations.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/animation.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<AnimationProvider>\n  <Animate animate=\"fade-in\">\n    <Text>This text will fade-in</Text>\n  </Animate>\n</AnimationProvider>\n```\n\n----------------------------------------\n\nTITLE: Rendering Minimal Card Variant in JSX\nDESCRIPTION: Shows how to use the 'minimal' variant of the Card component, which applies an alternative presentation.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Card href=\"https://github.com\" variant=\"minimal\">\n  <Card.Heading>Collaboration is the key to DevOps success</Card.Heading>\n  <Card.Description>\n    Everything you need to know about getting started with GitHub Actions.\n  </Card.Description>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Adding LogoSuite Design Tokens in CSS\nDESCRIPTION: New design tokens added for the LogoSuite component, including color and layout properties.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_11\n\nLANGUAGE: css\nCODE:\n```\n--brand-LogoSuite-color-logo-muted\n--brand-LogoSuite-color-logo-emphasis\n--brand-LogoSuite-logobar-marquee-gap\n--brand-LogoSuite-logobar-marquee-slow\n--brand-LogoSuite-logobar-marquee-default\n--brand-LogoSuite-logobar-rowGap\n--brand-LogoSuite-logobar-columnGap\n```\n\n----------------------------------------\n\nTITLE: Customizing Social Links in MinimalFooter in React\nDESCRIPTION: Shows how to customize social media links in the MinimalFooter, either by hiding all social links or by specifying which platforms to display.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/MinimalFooter.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nHide all social links:\n<MinimalFooter socialLinks={false} />\n<br />\nOnly show GitHub social link:\n<MinimalFooter socialLinks={['github']} />\n```\n\n----------------------------------------\n\nTITLE: Adding Label to Card Component in JSX\nDESCRIPTION: Shows how to add a label to the Card component for displaying metadata or status information.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Card href=\"https://github.com\">\n  <Card.Heading>Code search & code view</Card.Heading>\n  <Card.Label>Limited</Card.Label>\n  <Card.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Card.Description>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Displaying Images in a Do-Don't Container with JSX\nDESCRIPTION: Example JSX code showing how to implement the Do-Don't pattern for displaying images with captions in the River component documentation. This pattern is used throughout the documentation to illustrate best practices.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<DoDontContainer>\n  <Do>\n    <img\n      alt=\"\"\n      src=\"https://github.com/primer/brand/assets/912236/55e56aa1-2a04-4cc4-b708-08c480ba5943\"\n    />\n    <Caption>Write short and concise text content.</Caption>\n  </Do>\n  <Dont>\n    <img\n      alt=\"\"\n      src=\"https://github.com/primer/brand/assets/912236/bd3585bc-a79b-4ca2-bbc4-ff59bc8c75cf\"\n    />\n    <Caption>Don't overload the river with too much content.</Caption>\n  </Dont>\n</DoDontContainer>\n```\n\n----------------------------------------\n\nTITLE: Importing Animate Component\nDESCRIPTION: Shows how to import the Animate component from the Primer React Brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/animation.mdx#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Animate} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Text Component Variants in JSX\nDESCRIPTION: Illustrates the usage of different variants (default and muted) of the Text component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Text/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Text as=\"p\">With GitHub Copilot, you're always in charge.</Text>\n  <Text as=\"p\" variant=\"muted\">\n    With GitHub Copilot, you're always in charge.\n  </Text>\n</>\n```\n\n----------------------------------------\n\nTITLE: Importing Primer Brand Stylesheet with Bundler\nDESCRIPTION: Import the main CSS stylesheet using an application bundler like Webpack\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/introduction.mdx#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport '@primer/react-brand/lib/css/main.css'\n```\n\n----------------------------------------\n\nTITLE: Rendering Center-Aligned Hero Component in React\nDESCRIPTION: Demonstrates how to use the 'align' prop to center-align the Hero component's content.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Hero/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Hero align=\"center\">\n  <Hero.Label>Label</Hero.Label>\n  <Hero.Heading>\n    Blazing fast cloud\n    <br />\n    developer environments\n  </Hero.Heading>\n  <Hero.PrimaryAction href=\"#\">Primary action</Hero.PrimaryAction>\n</Hero>\n```\n\n----------------------------------------\n\nTITLE: Adding Box Component Primitives in CSS\nDESCRIPTION: New primitives added for the Box component to control spacing.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_13\n\nLANGUAGE: css\nCODE:\n```\n--brand-box-spacing-condensed\n--brand-box-spacing-normal\n--brand-box-spacing-spacious\n```\n\n----------------------------------------\n\nTITLE: Default Avatar Component Implementation\nDESCRIPTION: Demonstrates the basic usage of the Avatar component with the required src and alt properties.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Avatar/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Avatar src=\"/brand/assets/avatar-mona.png\" alt=\"Mona profile\" />\n```\n\n----------------------------------------\n\nTITLE: BreakoutBanner with Center Alignment\nDESCRIPTION: Shows how to use the align prop to center the content within the BreakoutBanner.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<BreakoutBanner align=\"center\">\n  <BreakoutBanner.Heading>\n    Where the most ambitious teams build great things\n  </BreakoutBanner.Heading>\n  <BreakoutBanner.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </BreakoutBanner.Description>\n  <BreakoutBanner.LinkGroup>\n    <Link href=\"#\">Primary action</Link>\n    <Link href=\"#\">Secondary action</Link>\n  </BreakoutBanner.LinkGroup>\n</BreakoutBanner>\n```\n\n----------------------------------------\n\nTITLE: Incorrect Image Sizing Example in HTML\nDESCRIPTION: Example showing what not to do with image sizing - using images of different sizes in the same section.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/index.mdx#2025-04-12_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<img\n  src=\"https://github.com/primer/brand/assets/912236/6efc49d3-f982-4f9f-9951-413a05f329cc\"\n  alt=\"\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Rendering Stacked Pillar Components in React\nDESCRIPTION: Demonstrates how to use the Stack component to arrange multiple Pillar components horizontally.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pillar/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack\n  direction=\"horizontal\"\n  alignItems=\"center\"\n  justifyContent=\"center\"\n  gap=\"normal\"\n>\n  <Pillar>\n    <Pillar.Icon icon={<CopilotIcon />} color=\"blue\" />\n    <Pillar.Heading>Heading</Pillar.Heading>\n    <Pillar.Description>\n      Everything you need to know about getting started with GitHub Actions.\n    </Pillar.Description>\n  </Pillar>\n  <Pillar>\n    <Pillar.Icon icon={RocketIcon} color=\"blue\" />\n    <Pillar.Heading>Heading</Pillar.Heading>\n    <Pillar.Description>\n      Everything you need to know about getting started with GitHub Actions.\n    </Pillar.Description>\n  </Pillar>\n  <Pillar>\n    <Pillar.Icon icon={GitBranchIcon} color=\"blue\" />\n    <Pillar.Heading>Heading</Pillar.Heading>\n    <Pillar.Description>\n      Everything you need to know about getting started with GitHub Actions.\n    </Pillar.Description>\n  </Pillar>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Basic Image Implementation in HTML\nDESCRIPTION: Example of implementing an image with src and alt attributes. This shows the proper way to display a photograph in combination with descriptive text.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img\n  src=\"https://github.com/primer/brand/assets/912236/3ffc80cb-4d7d-4ef4-b66f-10e902d8f17c\"\n  alt=\"\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Heading Levels Implementation\nDESCRIPTION: Examples of using different heading levels with the 'as' prop and overriding visual appearance with the 'size' prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Heading/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Heading as=\"h6\">This is my super sweet heading as a h6</Heading>\n\n<Heading as=\"h2\" size=\"4\">\n  This h2 will appear visually identical to a h4\n</Heading>\n```\n\n----------------------------------------\n\nTITLE: Importing Mona Sans Font with Bundler\nDESCRIPTION: Import the Mona Sans typeface CSS using an application bundler\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/introduction.mdx#2025-04-12_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport '@primer/react-brand/fonts/fonts.css'\n```\n\n----------------------------------------\n\nTITLE: Rendering Icons with Backgrounds in JSX\nDESCRIPTION: Demonstrates how to render icons with backgrounds using the hasBackground prop and various colors.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Icon.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" gap={16} flexWrap=\"wrap\" padding=\"none\">\n  <Icon icon={RocketIcon} hasBackground color=\"default\" />\n  <Icon icon={RocketIcon} hasBackground color=\"blue\" />\n  <Icon icon={RocketIcon} hasBackground color=\"coral\" />\n  <Icon icon={RocketIcon} hasBackground color=\"green\" />\n  <Icon icon={RocketIcon} hasBackground color=\"gray\" />\n  <Icon icon={RocketIcon} hasBackground color=\"indigo\" />\n  <Icon icon={RocketIcon} hasBackground color=\"lemon\" />\n  <Icon icon={RocketIcon} hasBackground color=\"lime\" />\n  <Icon icon={RocketIcon} hasBackground color=\"orange\" />\n  <Icon icon={RocketIcon} hasBackground color=\"pink\" />\n  <Icon icon={RocketIcon} hasBackground color=\"purple\" />\n  <Icon icon={RocketIcon} hasBackground color=\"red\" />\n  <Icon icon={RocketIcon} hasBackground color=\"teal\" />\n  <Icon icon={RocketIcon} hasBackground color=\"yellow\" />\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Importing Stack Component from Primer React Brand\nDESCRIPTION: Shows how to import the Stack component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Stack/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Stack} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Rendering Default Icon in JSX\nDESCRIPTION: Demonstrates the basic usage of the Icon component with a ZapIcon.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Icon.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Icon icon={ZapIcon} />\n```\n\n----------------------------------------\n\nTITLE: Default Bento Implementation\nDESCRIPTION: Demonstrates the basic usage of the Bento component with three empty items. This shows the minimal configuration needed to create a Bento grid.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Bento.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Box\n  style={{backgroundColor: 'var(--base-color-scale-gray-2)'}}\n  padding=\"normal\"\n>\n  <Bento>\n    <Bento.Item />\n    <Bento.Item />\n    <Bento.Item />\n  </Bento>\n</Box>\n```\n\n----------------------------------------\n\nTITLE: Adding Eyebrow Banner Component Tokens\nDESCRIPTION: Lists new CSS custom properties (tokens) added for the Eyebrow Banner component in version 0.29.0. These tokens define various background, foreground, and icon colors for different states and themes.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_8\n\nLANGUAGE: css\nCODE:\n```\n--brand-Eyebrowbanner-bgColor-rest\n--brand-Eyebrowbanner-borderColor-rest\n--brand-Eyebrowbanner-heading-fgColor\n--brand-Eyebrowbanner-subHeading-fgColor\n--brand-Eyebrowbanner-icon-background-default\n--brand-Eyebrowbanner-icon-background-blue\n--brand-Eyebrowbanner-icon-background-coral\n--brand-Eyebrowbanner-icon-background-green\n--brand-Eyebrowbanner-icon-background-gray\n--brand-Eyebrowbanner-icon-background-indigo\n--brand-Eyebrowbanner-icon-background-lemon\n--brand-Eyebrowbanner-icon-background-lime\n--brand-Eyebrowbanner-icon-background-orange\n--brand-Eyebrowbanner-icon-background-pink\n--brand-Eyebrowbanner-icon-background-purple\n--brand-Eyebrowbanner-icon-background-red\n--brand-Eyebrowbanner-icon-background-teal\n--brand-Eyebrowbanner-icon-background-yellow\n--brand-Eyebrowbanner-fgColor-default-start\n--brand-Eyebrowbanner-fgColor-default-middle\n--brand-Eyebrowbanner-fgColor-default-end\n--brand-Eyebrowbanner-fgColor-blue\n--brand-Eyebrowbanner-fgColor-blue-purple-start\n--brand-Eyebrowbanner-fgColor-blue-purple-end\n--brand-Eyebrowbanner-fgColor-coral\n--brand-Eyebrowbanner-fgColor-green\n--brand-Eyebrowbanner-fgColor-green-blue-start\n--brand-Eyebrowbanner-fgColor-green-blue-end\n--brand-Eyebrowbanner-fgColor-gray\n--brand-Eyebrowbanner-fgColor-indigo\n--brand-Eyebrowbanner-fgColor-lemon\n--brand-Eyebrowbanner-fgColor-lime\n--brand-Eyebrowbanner-fgColor-orange\n--brand-Eyebrowbanner-fgColor-pink\n--brand-Eyebrowbanner-fgColor-pink-blue-start\n--brand-Eyebrowbanner-fgColor-pink-blue-end\n--brand-Eyebrowbanner-fgColor-purple\n--brand-Eyebrowbanner-fgColor-purple-red-start\n--brand-Eyebrowbanner-fgColor-purple-red-end\n--brand-Eyebrowbanner-fgColor-red\n--brand-Eyebrowbanner-fgColor-red-orange-start\n--brand-Eyebrowbanner-fgColor-red-orange-end\n--brand-Eyebrowbanner-fgColor-teal\n--brand-Eyebrowbanner-fgColor-yellow\n```\n\n----------------------------------------\n\nTITLE: Loading Primer Brand Static Stylesheet in HTML\nDESCRIPTION: HTML link tag for loading the Primer Brand static stylesheet when unable to use a bundler.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/index.mdx#2025-04-12_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<link\n  href=\"https://unpkg.com/browse/@primer/react-brand@<version>/lib/css/main.css\"\n  rel=\"stylesheet\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Displaying Do and Don't Examples for River Component Links in JSX\nDESCRIPTION: This code snippet demonstrates how to use the DoDontContainer component to show correct and incorrect usage of links within the River component. It includes image placeholders and captions for visual guidance.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DoDontContainer>\n  <Do>\n    <img alt=\"\" src={doLink} />\n    <Caption>Use the provided link component.</Caption>\n  </Do>\n  <Dont>\n    <img alt=\"\" src={dontLink} />\n    <Caption>Avoid using buttons.</Caption>\n  </Dont>\n</DoDontContainer>\n```\n\n----------------------------------------\n\nTITLE: Defining IDE.Chat Component Properties in Markdown\nDESCRIPTION: This snippet defines the properties for the IDE.Chat component using a markdown table. It includes properties like script, alternativeText, and animationDelay.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/IDE.mdx#2025-04-12_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| name              | type                    | default | required | description                                                                    |\n| ----------------- | ----------------------- | ------- | -------- | ------------------------------------------------------------------------------ |\n| `script`          | [`IDEChatMessage[]`](#) |         | `true`   | Array of chat messages                                                         |\n| `alternativeText` | `string`                |         | `true`   | Alternative description of the chat script for users of assistive technologies |\n| `animationDelay`  | `number`                | `3000`  | `false`  | Delay for the chat animation                                                   |\n```\n\n----------------------------------------\n\nTITLE: Rendering Icons with Different Colors in JSX\nDESCRIPTION: Shows how to render multiple icons with various color options using a Stack component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Icon.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" gap={16} flexWrap=\"wrap\" padding=\"none\">\n  <Icon icon={RocketIcon} color=\"default\" />\n  <Icon icon={RocketIcon} color=\"blue\" />\n  <Icon icon={RocketIcon} color=\"coral\" />\n  <Icon icon={RocketIcon} color=\"green\" />\n  <Icon icon={RocketIcon} color=\"gray\" />\n  <Icon icon={RocketIcon} color=\"indigo\" />\n  <Icon icon={RocketIcon} color=\"lemon\" />\n  <Icon icon={RocketIcon} color=\"lime\" />\n  <Icon icon={RocketIcon} color=\"orange\" />\n  <Icon icon={RocketIcon} color=\"pink\" />\n  <Icon icon={RocketIcon} color=\"purple\" />\n  <Icon icon={RocketIcon} color=\"red\" />\n  <Icon icon={RocketIcon} color=\"teal\" />\n  <Icon icon={RocketIcon} color=\"yellow\" />\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Importing Statistic Component in React\nDESCRIPTION: Shows how to import the Statistic component from the Primer Brand React library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Statistic.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Statistic} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Rendering Default MinimalFooter in React\nDESCRIPTION: Demonstrates the most basic usage of the MinimalFooter component without any customization.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/MinimalFooter.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<MinimalFooter />\n```\n\n----------------------------------------\n\nTITLE: Rendering Default Button in JSX\nDESCRIPTION: Demonstrates how to render a default Button component using JSX. This corresponds to the 'secondary' variant appearance.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Button>Default</Button>\n```\n\n----------------------------------------\n\nTITLE: Importing Button Group Components in JavaScript\nDESCRIPTION: How to import the ButtonGroup and Button components from @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ButtonGroup/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {ButtonGroup, Button} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Implementing AnchorNav Component in JSX\nDESCRIPTION: Example usage of the new AnchorNav component which provides a sticky navigation bar for quick scrolling to document sections. The component supports both standard links and call-to-action elements.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_24\n\nLANGUAGE: jsx\nCODE:\n```\n<AnchorNav>\n  <AnchorNav.Link href=\"#section-1\">Section 1</AnchorNav.Link>\n  <AnchorNav.Link href=\"#section-2\">Section 2</AnchorNav.Link>\n  <AnchorNav.Link href=\"#section-3\">Section 3</AnchorNav.Link>\n  <AnchorNav.Action href=\"/\">Call to action</AnchorNav.Action>\n</AnchorNav>\n```\n\n----------------------------------------\n\nTITLE: Defining CTABanner.ButtonGroup Props in Markdown\nDESCRIPTION: This snippet defines the props for the CTABanner.ButtonGroup component, including children, buttonSize, and buttonsAs. It specifies the types, default values, and descriptions for each prop. The component is marked as required.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n### CTABanner.ButtonGroup <Label>Required</Label>\n\n| name         | type                     | default     | required | description                                  |\n| ------------ | ------------------------ | ----------- | -------- | -------------------------------------------- |\n| `children`   | `<Button>`, `<Button>[]` | `undefined` | `true`   | The buttons to be displayed within the group |\n| `buttonSize` | `'medium'`, `'large'`    | `large`     | `false`  | The size of the buttons in the group         |\n| `buttonsAs`  | `'a'`, `'button'`        | `'button'`  | `false`  | Sets underlying HTML element for each button |\n```\n\n----------------------------------------\n\nTITLE: Defining Testimonial Component Props in React\nDESCRIPTION: This snippet defines the props for the main Testimonial component, including children, styling options, and variant controls.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| Name             | Type                                                                                                                                                         |   Default   | Description                                            |\n| :--------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------- | :---------: | :----------------------------------------------------- |\n| `children`       | <PropTableValues addLineBreaks values={['Testimonial.Quote','Testimonial.Name','Testimonial.Logo','Testimonial.Avatar','React.ReactNode' ]} addLineBreaks /> |             | Valid child nodes                                      |\n| `className`      | `string`                                                                                                                                                     |             | Sets a custom class                                    |\n| `id`             | `string`                                                                                                                                                     |             | Sets a custom id                                       |\n| `ref`            | `React.RefObject`                                                                                                                                            |             | Forward a Ref to the underlying DOM node               |\n| `size`           | <PropTableValues addLineBreaks values={['small','large']}/>                                                                                                  |  `'small'`  | Set size of quote's text                               |\n| `quoteMarkColor` | <PropTableValues addLineBreaks values={TestimonialQuoteMarkColors}/>                                                                                         | `'default'` | Color or gradient fill of the the quote mark.          |\n| `variant`        | <PropTableValues addLineBreaks values={TestimonialVariants}/>                                                                                                | `'minimal'` | Alternative visual appearance                          |\n| `hasBorder`      | `boolean`                                                                                                                                                    |   `true`    | Applies an optional border where a variant supports it |\n```\n\n----------------------------------------\n\nTITLE: Defining IDE.Editor Component Properties in Markdown\nDESCRIPTION: This snippet defines the properties for the IDE.Editor component using a markdown table. It includes properties like activeTab, files, showLineNumbers, size, triggerAnimation, and showReplayButton.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/IDE.mdx#2025-04-12_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| name               | type                                                                      | default | required | description                     |\n| ------------------ | ------------------------------------------------------------------------- | ------- | -------- | ------------------------------- |\n| `activeTab`        | `number`                                                                  |         | `false`  | Active tab index                |\n| `files`            | [`IDEEditorFile[]`](#)                                                    |         | `true`   | Array of editor files           |\n| `showLineNumbers`  | `boolean`                                                                 |         | `false`  | Show line numbers in the editor |\n| `size`             | <PropTableValues values={['small' , 'medium' , 'large']} addLineBreaks /> |         | `false`  | Controls editor text size       |\n| `triggerAnimation` | `boolean`                                                                 |         | `false`  | Trigger animation externally    |\n| `showReplayButton` | `boolean`                                                                 |         | `false`  | Show replay button              |\n```\n\n----------------------------------------\n\nTITLE: Nested ThemeProvider Configuration\nDESCRIPTION: Example of using nested ThemeProvider components to create isolated color mode sections within a layout.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/theming.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <ThemeProvider\n    colorMode=\"dark\"\n    style={{\n      backgroundColor: 'var(--brand-color-canvas-default)',\n    }}\n  >\n    <River align=\"center\">\n      <River.Visual>\n        <img\n          src=\"/brand/assets/placeholder.png\"\n          alt=\"placeholder, blank area with a gray background color\"\n        />\n      </River.Visual>\n      <River.Content>\n        <Heading>Heading</Heading>\n        <Text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n          ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n          elementum.\n        </Text>\n        <Link href=\"#\">Call to action</Link>\n      </River.Content>\n    </River>\n  </ThemeProvider>\n  <ThemeProvider\n    colorMode=\"light\"\n    style={{\n      backgroundColor: 'var(--brand-color-canvas-default)',\n    }}\n  >\n    <Container>\n      <River align=\"right\">\n        <River.Visual>\n          <img\n            src=\"/brand/assets/placeholder.png\"\n            alt=\"placeholder, blank area with a gray background color\"\n          />\n        </River.Visual>\n        <River.Content>\n          <Heading>Heading</Heading>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien\n            sit ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar\n            risus elementum.\n          </Text>\n          <Link href=\"#\">Call to action</Link>\n        </River.Content>\n      </River>\n    </Container>\n  </ThemeProvider>\n</>\n```\n\n----------------------------------------\n\nTITLE: Importing Timeline Component - JavaScript\nDESCRIPTION: Shows how to import the Timeline component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Timeline.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Timeline} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Heading Scale Examples\nDESCRIPTION: Demonstration of different heading sizes from display to subhead-medium, showing various scale options available in the component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Heading/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Heading size=\"display\">Display: 96px</Heading>\n  <Heading size=\"1\">1: 72px</Heading>\n  <Heading size=\"2\">2: 64px</Heading>\n  <Heading size=\"3\">3: 48px</Heading>\n  <Heading size=\"4\">4: 40px</Heading>\n  <Heading size=\"5\">5: 32px</Heading>\n  <Heading size=\"6\">6: 24px</Heading>\n  <Heading size=\"subhead-large\">subhead-large: 20px</Heading>\n  <Heading size=\"subhead-medium\">subhead-medium: 16px</Heading>\n</>\n```\n\n----------------------------------------\n\nTITLE: ComparisonTable with Custom Heading\nDESCRIPTION: Shows how to add a heading to the ComparisonTable using the 'heading' prop, which renders at an appropriate size relative to the table.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ComparisonTable.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<ComparisonTable heading=\"GitHub vs Jenkins\">\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Use case</ComparisonTable.Cell>\n    <ComparisonTable.Cell>GitHub</ComparisonTable.Cell>\n    <ComparisonTable.Cell>Jenkins</ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Automation & CI/CD</ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      <Text as=\"p\" size=\"300\">\n        Comparable native core capabilities\n      </Text>\n      <Text as=\"p\" size=\"300\">\n        <a href=\"#\">Over 13,000 GitHub Actions are available</a> in the GitHub\n        Marketplace to automate your development workflow.\n      </Text>\n    </ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      <Text as=\"p\" size=\"300\">\n        Comparable native capabilities\n      </Text>\n      <Text as=\"p\" size=\"300\">\n        1,800+ community contributed Jenkins plugins{' '}\n        <a href=\"#\">in Jenkins Plugin Marketplace.</a>\n      </Text>\n    </ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Row>\n    <ComparisonTable.Cell>Deployment models</ComparisonTable.Cell>\n    <ComparisonTable.Cell>Cloud or self-hosted</ComparisonTable.Cell>\n    <ComparisonTable.Cell>\n      <Text as=\"p\" size=\"300\">\n        Self-hosted only\n      </Text>\n      <Text as=\"p\" size=\"300\">\n        CloudBees is the cloud alternative\n      </Text>\n    </ComparisonTable.Cell>\n  </ComparisonTable.Row>\n  <ComparisonTable.Footnote>\n    *** This is a biased overview of capabilities by use case, based on publicly\n    available information as of 2022-05-16.\n  </ComparisonTable.Footnote>\n</ComparisonTable>\n```\n\n----------------------------------------\n\nTITLE: Importing RiverAccordion Component in JavaScript\nDESCRIPTION: This snippet shows how to import the RiverAccordion component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/RiverAccordion.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {RiverAccordion} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: LogoSuite Component Props Documentation\nDESCRIPTION: Markdown documentation defining the available props and configuration options for the LogoSuite component\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_12\n\nLANGUAGE: Markdown\nCODE:\n```\n### LogoSuite\n\n| Name         | Type                                                                      | Default    | Description                                                 |\n| :----------- | :------------------------------------------------------------------------ | :--------- | :---------------------------------------------------------- |\n| `align`      | <PropTableValues values={['start', 'center', 'justify']} addLineBreaks /> | `'center'` | The horizontal alignment of the LogoSuite.                  |\n| `hasDivider` | `boolean`                                                                 | `true`     | Whether to render a divider immediately after the LogoSuite |\n```\n\n----------------------------------------\n\nTITLE: Defining Box Component Properties in Markdown\nDESCRIPTION: A markdown table defining the properties of a Box component. It includes various styling options such as padding, margin, background color, border properties, and animation. Each property is described with its name, type, default value, and a brief description of its purpose.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                     | Type                                                                     |   Default   | Description                                                                 |\n| :----------------------- | :----------------------------------------------------------------------- | :---------: | :-------------------------------------------------------------------------- |\n| `padding`                | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds padding to all internal sides of the Box.                              |\n| `paddingBlockStart`      | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds padding to the internal block start (top) side of the Box.             |\n| `paddingRight`           | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds padding to the internal inline end (right) of the Box.                 |\n| `paddingBlockEnd`        | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds padding to the internal block end (bottom) side of the Box.            |\n| `paddingLeft`            | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds padding to the internal inline start (left) side of the Box.           |\n| `margin`                 | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds margin to all external sides of the Box.                               |\n| `marginBlockStart`       | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds margin to the external block start (top) side of the Box.              |\n| `marginInlineEnd`        | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds margin to the external inline end (right) side of the Box.             |\n| `marginBlockEnd`         | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds margin to the external block end (bottom) side of the Box.             |\n| `marginInlineStart`      | <PropTableValues values={[...BoxSpacingValues]} commaSeparated  />       | `undefined` | Adds margin to the external inline start (left) side of the Box.            |\n| `backgroundColor`        | <PropTableValues values={[...BoxBackgroundColors]} commaSeparated  />    | `undefined` | Applies a system-level background color to the Box.                         |\n| `borderRadius`           | <PropTableValues values={[...BoxBorderRadiusOptions]} commaSeparated  /> | `undefined` | Applies a system-level border radius value to the Box.                      |\n| `borderWidth`            | <PropTableValues values={[...BoxBorderWidthOptions]} commaSeparated  />  | `undefined` | Applies a system-level border width value to the Box.                       |\n| `borderBlockStartWidth`  | <PropTableValues values={[...BoxBorderWidthOptions]} commaSeparated  />  | `undefined` | Applies a system-level border width value to block-start side of the Box.   |\n| `borderInlineEndWidth`   | <PropTableValues values={[...BoxBorderWidthOptions]} commaSeparated  />  | `undefined` | Applies a system-level border width value to inline-end side of the Box.    |\n| `borderBlockEndWidth`    | <PropTableValues values={[...BoxBorderWidthOptions]} commaSeparated  />  | `undefined` | Applies a system-level border width value to block-end side of the Box.     |\n| `borderInlineStartWidth` | <PropTableValues values={[...BoxBorderWidthOptions]} commaSeparated  />  | `undefined` | Applies a system-level border width value to inline-start side of the Box.  |\n| `borderColor`            | <PropTableValues values={[...BoxBorderColorOptions]} commaSeparated  />  | `undefined` | Applies a system-level border color value to the Box.                       |\n| `borderStyle`            | <PropTableValues values={['solid', 'none']} commaSeparated />            | `undefined` | Applies border style. Values correspond to the CSS `border-style` property. |\n| `animate`                | <PropTableValues values={[...AnimationVariants]} commaSeparated />       | `undefined` | Applies one-off animations to direct children of the Box.                   |\n```\n\n----------------------------------------\n\nTITLE: Accordion Component Token Updates\nDESCRIPTION: Updates to the Accordion component toggle color tokens, though the actual token names remain the same in this case.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_22\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Accordion-toggle-color-start\n+ --brand-Accordion-toggle-color-start\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Accordion-toggle-color-end\n+ --brand-Accordion-toggle-color-end\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Accordion-toggle-color-start\n+ --brand-Accordion-toggle-color-start\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Accordion-toggle-color-end\n+ --brand-Accordion-toggle-color-end\n```\n\n----------------------------------------\n\nTITLE: Correct Image Sizing Example in HTML\nDESCRIPTION: Example demonstrating the proper way to use images in a list or group with consistent size and aspect ratio.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/index.mdx#2025-04-12_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<img\n  src=\"https://github.com/primer/brand/assets/912236/7e9cf19c-1545-4b47-9ac8-0442050eb509\"\n  alt=\"\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Importing VideoPlayer Component in JavaScript\nDESCRIPTION: Shows how to import the VideoPlayer component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {VideoPlayer} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: CTABanner without Shadow\nDESCRIPTION: Shows how to remove the shadow from a CTABanner component using the hasShadow prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<CTABanner hasShadow={false}>\n  <CTABanner.Heading>\n    Where the most ambitious teams build great things\n  </CTABanner.Heading>\n  <CTABanner.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </CTABanner.Description>\n  <CTABanner.ButtonGroup>\n    <Button>Primary Action</Button>\n    <Button>Secondary Action</Button>\n  </CTABanner.ButtonGroup>\n</CTABanner>\n```\n\n----------------------------------------\n\nTITLE: Importing the Section Component from Primer Brand\nDESCRIPTION: This snippet shows how to import the Section component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Section/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Section} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Directional Tooltip Implementation\nDESCRIPTION: Example showing how to specify the tooltip direction using the direction prop, which can be set to n, e, s, or w.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Tooltip.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Tooltip text=\"Sample tooltip content\" direction=\"e\">\n  <Button>Action</Button>\n</Tooltip>\n```\n\n----------------------------------------\n\nTITLE: Defining CTABanner.Heading Props in Markdown\nDESCRIPTION: This snippet defines the props for the CTABanner.Heading component, including children, as, and size. It specifies the types, default values, and descriptions for each prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| name       | type                                           | default     | required | description                                                      |\n| ---------- | ---------------------------------------------- | ----------- | -------- | ---------------------------------------------------------------- |\n| `children` | `ReactNode`, `ReactNode[]`                     | `undefined` | `true`   | Content to be displayed inside the `CTABanner.Heading` component |\n| `as`       | `'h1'`, `'h2'`, `'h3'`, `'h4'`, `'h5'`, `'h6'` | `'h3'`      | `false`  | Heading level                                                    |\n| `size`     | `'1'`, `'2'`, `'3'`, `'4'`, `'5'`, `'6'`       | `'1'`       | `false`  | Visual heading size, irrespective of level                       |\n```\n\n----------------------------------------\n\nTITLE: Box Component with Borders\nDESCRIPTION: Examples showing different border width options with the Box component\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" flexWrap=\"wrap\">\n  <Box backgroundColor=\"subtle\" borderWidth=\"thin\" borderColor=\"default\" borderStyle=\"solid\" padding=\"spacious\">\n    thin\n  </Box>\n  <Box backgroundColor=\"subtle\" borderWidth=\"thick\" borderColor=\"default\" borderStyle=\"solid\" padding=\"spacious\">\n    thick\n  </Box>\n  <Box backgroundColor=\"subtle\" borderWidth=\"thicker\" borderColor=\"default\" borderStyle=\"solid\" padding=\"spacious\">\n    thicker\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Hidden Page Numbers Pagination\nDESCRIPTION: Example showing how to configure the Pagination component with hidden page numbers using the showPages prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pagination.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Pagination pageCount={15} currentPage={5} showPages={false} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Accent Variant of Breadcrumbs Component in JSX\nDESCRIPTION: Shows how to use the accent variant of the Breadcrumbs component, which provides an alternative appearance.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Breadcrumbs/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Breadcrumbs variant=\"accent\">\n  <Breadcrumbs.Item href=\"/\">Resources</Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"/copilot\">GitHub Copilot</Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"/copilot/chat\" selected>\n    Chat\n  </Breadcrumbs.Item>\n</Breadcrumbs>\n```\n\n----------------------------------------\n\nTITLE: Importing Tooltip Component\nDESCRIPTION: Basic import statement for the Tooltip component from @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Tooltip.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Tooltip} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: BreakoutBanner with Custom Background Color\nDESCRIPTION: Shows how to set a custom background color for the BreakoutBanner using CSS variables.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<BreakoutBanner backgroundColor=\"var(--base-color-scale-blue-0)\">\n  <BreakoutBanner.Heading>\n    Where the most ambitious teams build great things\n  </BreakoutBanner.Heading>\n  <BreakoutBanner.Description>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit\n    ullamcorper id. Aliquam luctus sed turpis felis nam pulvinar risus\n    elementum.\n  </BreakoutBanner.Description>\n  <BreakoutBanner.LinkGroup>\n    <Link href=\"#\">Primary action</Link>\n    <Link href=\"#\">Secondary action</Link>\n  </BreakoutBanner.LinkGroup>\n</BreakoutBanner>\n```\n\n----------------------------------------\n\nTITLE: Importing Grid Component\nDESCRIPTION: Basic import statement for the Grid component from @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Grid/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Grid} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Defining FAQGroup.Heading Component Props in Markdown\nDESCRIPTION: A markdown table defining the props for the FAQGroup.Heading subcomponent, including the 'as' prop. It also mentions that this component forwards all props from the Heading component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FAQ/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type                                                   | Default | Description                         |\n| :--- | :----------------------------------------------------- | :-----: | :---------------------------------- |\n| `as` | <PropTableValues values={HeadingTags} addLineBreaks /> |         | Applies the underlying HTML element |\n```\n\n----------------------------------------\n\nTITLE: Importing Avatar Component from Primer React Brand\nDESCRIPTION: Shows how to import the Avatar component along with Stack from @primer/react-brand package for use in your application.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Avatar/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Avatar, Stack} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Rendering Inactive Textarea in JSX\nDESCRIPTION: Shows how to create a disabled Textarea component with predefined text.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Textarea.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Textarea disabled>This text is inactive</Textarea>\n```\n\n----------------------------------------\n\nTITLE: Using Tooltip Component in React\nDESCRIPTION: Demonstrates how to use the new Tooltip component added in version 0.34.0. The Tooltip wraps a Button component and displays text on hover.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Tooltip text=\"Hello, Tooltip!\">\n  <Button>Hover me</Button>\n</Tooltip>\n```\n\n----------------------------------------\n\nTITLE: Importing the Testimonial Component in JavaScript\nDESCRIPTION: Basic import statement for the Testimonial component from the Primer Brand React package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Testimonial} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Using Default Box Component in React\nDESCRIPTION: Demonstrates the default usage of the Box component which renders as a div element with no predefined styles.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Box>With GitHub Copilot, you're always in charge.</Box>\n```\n\n----------------------------------------\n\nTITLE: Importing Pillar Component in React\nDESCRIPTION: Shows how to import the Pillar component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pillar/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Pillar} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Using Accent Description Variant in Statistic\nDESCRIPTION: Demonstrates how to use the accent variant for the description component to give it visual emphasis.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Statistic.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Statistic>\n  <Statistic.Heading>+25%</Statistic.Heading>\n  <Statistic.Description variant=\"accent\">\n    increase in developer speed\n  </Statistic.Description>\n</Statistic>\n```\n\n----------------------------------------\n\nTITLE: Adding Grid Component Tokens in CSS\nDESCRIPTION: New design tokens specific to the Grid component for controlling spacing and layout.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_18\n\nLANGUAGE: css\nCODE:\n```\n--grid-spacing-margin\n--grid-spacing-row\n--grid-spacing-column-gap\n```\n\n----------------------------------------\n\nTITLE: Importing LogoSuite Component in React\nDESCRIPTION: This snippet shows how to import the LogoSuite component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {LogoSuite} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing River Components\nDESCRIPTION: Basic import statement for River and RiverBreakout components from @primer/react-brand package\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {River, RiverBreakout} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Rendering Stack of Action Buttons using Primer React Brand Components\nDESCRIPTION: Implementation of a horizontal button stack using Primer React Brand components, featuring two buttons - one for Storybook access and another for access requests.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/github-staff/storybook.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<p>\n  <Stack padding=\"none\" direction=\"horizontal\">\n    <Button\n      as=\"a\"\n      variant=\"primary\"\n      href=\"https://gh.io/primer-brand-storybook\"\n    >\n      Go to Storybook\n    </Button>\n    <Button as=\"a\" href=\"https://github.slack.com/archives/C03FY9G00NS\">\n      Request access\n    </Button>\n  </Stack>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Importing RadioGroup from Primer React Brand\nDESCRIPTION: Basic import statement for the RadioGroup component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/RadioGroup/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {RadioGroup} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Bordered Checkbox with FormControl\nDESCRIPTION: Demonstrates how to add an optional border to a checkbox using FormControl's hasBorder prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Checkbox/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<FormControl hasBorder required>\n  <FormControl.Label>\n    Contact me about GitHub Enterprise Server\n  </FormControl.Label>\n  <Checkbox />\n</FormControl>\n```\n\n----------------------------------------\n\nTITLE: Importing SectionIntro from Primer React Brand\nDESCRIPTION: Basic import statement for the SectionIntro component from the Primer React Brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SectionIntro/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {SectionIntro} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Accordion Toggle Color Tokens (CSS)\nDESCRIPTION: CSS tokens defining various color options for accordion toggle elements.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n--brand-Accordion-toggle-color-default;\n--brand-Accordion-toggle-color-blue;\n--brand-Accordion-toggle-color-blue-purple-start;\n--brand-Accordion-toggle-color-blue-purple-end;\n--brand-Accordion-toggle-color-coral;\n--brand-Accordion-toggle-color-green;\n--brand-Accordion-toggle-color-green-blue-start;\n--brand-Accordion-toggle-color-green-blue-end;\n--brand-Accordion-toggle-color-gray;\n--brand-Accordion-toggle-color-indigo;\n--brand-Accordion-toggle-color-lemon;\n--brand-Accordion-toggle-color-lime;\n--brand-Accordion-toggle-color-orange;\n--brand-Accordion-toggle-color-pink;\n--brand-Accordion-toggle-color-pink-blue-start;\n--brand-Accordion-toggle-color-pink-blue-end;\n--brand-Accordion-toggle-color-purple;\n--brand-Accordion-toggle-color-purple-red-start;\n--brand-Accordion-toggle-color-purple-red-end;\n--brand-Accordion-toggle-color-red;\n--brand-Accordion-toggle-color-red-orange-start;\n--brand-Accordion-toggle-color-red-orange-end;\n--brand-Accordion-toggle-color-teal;\n--brand-Accordion-toggle-color-yellow;\n```\n\n----------------------------------------\n\nTITLE: Rendering Default Label Component in React\nDESCRIPTION: Example showing the default implementation of the Label component which uses the medium size and default color.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Label/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Label>Default</Label>\n```\n\n----------------------------------------\n\nTITLE: Importing Stack Component in React\nDESCRIPTION: Shows how to import the Stack component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Stack/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Stack} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Loading Mona Sans Font Statically\nDESCRIPTION: Load the Mona Sans typeface using a static HTML link tag\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/introduction.mdx#2025-04-12_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://unpkg.com/browse/@primer/react-brand@<version>/fonts/fonts.css\" rel=\"stylesheet\" />\n```\n\n----------------------------------------\n\nTITLE: Importing SubdomainNavBar Component in JavaScript\nDESCRIPTION: Shows how to import the SubdomainNavBar component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SubdomainNavBar.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SubdomainNavBar} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing FormControl from Primer React Brand\nDESCRIPTION: Basic import statement for the FormControl component from the Primer React Brand library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FormControl.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {FormControl} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing Pagination Component\nDESCRIPTION: Basic import statement for the Pagination component from @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pagination.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Pagination} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Box Component with Directional Margin\nDESCRIPTION: Examples of applying margin to specific sides using CSS logical properties\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n  <Box className=\"bg-yellow-lines\">\n    <Box marginBlockStart={64} className=\"bg-red-lines\">\n      block start\n    </Box>\n  </Box>\n  <Box className=\"bg-yellow-lines\">\n    <Box marginInlineEnd={64} className=\"bg-red-lines\">\n      inline end\n    </Box>\n  </Box>\n  <Box className=\"bg-yellow-lines\">\n    <Box marginBlockEnd={64} className=\"bg-red-lines\">\n      block end\n    </Box>\n  </Box>\n  <Box className=\"bg-yellow-lines\">\n    <Box marginInlineStart={64} className=\"bg-red-lines\">\n      inline start\n    </Box>\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: LinkedIn Logo SVG Implementation\nDESCRIPTION: SVG path definitions for the LinkedIn logo with styling and transform attributes\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_11\n\nLANGUAGE: SVG\nCODE:\n```\n<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 291 79.46\" width=\"291\" height=\"79.46\">\n  <title>LinkedIn</title>\n  <path d=\"M239.33 95.036c0 2.96 2.46 5.361 5.495 5.361h63.376c3.035 0 5.496-2.401 5.496-5.361V30.919c0-2.961-2.46-5.361-5.496-5.361h-63.376c-3.035 0-5.495 2.4-5.495 5.361v64.117z\" style={{fill: 'inherit', fillOpacity: 1, fillRule: 'nonzero', stroke: 'none'}} transform=\"matrix(1.01883 0 0 -1.01883 -29.952 104.07)\"/>\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Implementing Controlled Textarea in React\nDESCRIPTION: Demonstrates how to use the Textarea component in controlled mode with React state and event handling.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Textarea.mdx#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst TextareaExample = () => {\n  // Running in controlled mode (recommended)\n  const [value, setValue] = React.useState(\n    'This value was initially set through state.',\n  )\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return (\n    <Textarea\n      placeholder=\"Enter a description\"\n      onChange={handleChange}\n      value={value}\n    />\n  )\n}\n\nrender(<TextareaExample />)\n```\n\n----------------------------------------\n\nTITLE: Importing TextInput Component\nDESCRIPTION: Basic import statement for the TextInput component from @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/TextInput.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {TextInput} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing Button Component from Primer React Brand\nDESCRIPTION: Shows how to import the Button component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Button/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Button} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing Primer Brand Custom Font Assets in JavaScript\nDESCRIPTION: Import statement for loading the Mona Sans typeface alongside the main stylesheet.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/index.mdx#2025-04-12_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nimport '@primer/react-brand/fonts/fonts.css'\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Doctocat Template (Bash)\nDESCRIPTION: This command installs the project dependencies using npm with legacy peer dependencies flag. It's the first step in setting up the Doctocat Template project.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Importing CTABanner Component in JavaScript\nDESCRIPTION: Demonstrates how to import the CTABanner and Button components from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {CTABanner, Button} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing Box Component from Primer React\nDESCRIPTION: Import statement for the Box component renamed as Container from the Primer React library, along with a ComponentLayout import used for the page structure.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Label/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport {Box as Container} from '@primer/react'\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n```\n\n----------------------------------------\n\nTITLE: Importing BreakoutBanner Component from Primer React Brand\nDESCRIPTION: Shows how to import the BreakoutBanner component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {BreakoutBanner} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: PricingOptions Component Interface Definition\nDESCRIPTION: TypeScript interface definitions showing the props and configuration options for the PricingOptions component's various subcomponents. Includes detailed prop tables with types, defaults, and descriptions.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/PricingOptions.mdx#2025-04-12_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| Name       | Type        |   Default   | required | Description           |\n| :--------- | :---------- | :---------: | :------: | :-------------------- |\n| `children` | `ReactNode` | `undefined` |  `true`  | The label of the item |\n\n| Name       | Type        |   Default   | required | Description                 |\n| :--------- | :---------- | :---------: | :------: | :-------------------------- |\n| `children` | `ReactNode` | `undefined` |  `true`  | The description of the item |\n\n| Name             | Type        |   Default   | required | Description                                        |\n| :--------------- | :---------- | :---------: | :------: | :------------------------------------------------- |\n| `children`       | `ReactNode` | `undefined` |  `true`  | The price of the item                              |\n| `currencyCode`   | `string`    |    `USD`    | `false`  | The currency code                                  |\n| `currencySymbol` | `string`    |     `$`     | `false`  | The currency symbol                                |\n| `originalPrice`  | `string`    | `undefined` | `false`  | The initial price before any discounts are applied |\n| `trailingText`   | `string`    |             | `false`  | The trailing text                                  |\n```\n\n----------------------------------------\n\nTITLE: Importing OrderedList Component from Primer React Brand\nDESCRIPTION: Shows how to import the OrderedList component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/OrderedList/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {OrderedList} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Adding Label Component Tokens in CSS\nDESCRIPTION: New design tokens for the Label component, including various color options.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_19\n\nLANGUAGE: css\nCODE:\n```\n--brand-Label-color-default\n--brand-Label-color-blue\n--brand-Label-color-blue-purple-start\n--brand-Label-color-blue-purple-end\n--brand-Label-color-coral\n--brand-Label-color-green\n--brand-Label-color-green-blue-start\n--brand-Label-color-green-blue-end\n--brand-Label-color-gray\n--brand-Label-color-indigo\n--brand-Label-color-lemon\n--brand-Label-color-lime\n--brand-Label-color-orange\n--brand-Label-color-pink\n--brand-Label-color-pink-blue-start\n--brand-Label-color-pink-blue-end\n--brand-Label-color-purple\n--brand-Label-color-purple-red-start\n--brand-Label-color-purple-red-end\n--brand-Label-color-red\n--brand-Label-color-red-orange-start\n--brand-Label-color-red-orange-end\n--brand-Label-color-teal\n--brand-Label-color-yellow\n```\n\n----------------------------------------\n\nTITLE: Pricing Options Tokens (CSS)\nDESCRIPTION: CSS design tokens for handling the fourth pricing option item spacing and layout.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n--brand-PricingOptions-items4-container-padding-inline\n--brand-PricingOptions-items4-gap\n```\n\n----------------------------------------\n\nTITLE: Troubleshooting vips/vips8 Installation (Bash)\nDESCRIPTION: These commands provide a series of steps to resolve potential issues with vips/vips8 installation. They include reinstalling vips, installing Xcode command line tools, and gcc.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/README.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew reinstall vips\nxcode-select --install\nbrew install gcc\nbrew reinstall vips\nbrew info vips\nnpm i --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Importing Card Component in JavaScript\nDESCRIPTION: Shows how to import the Card component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Card} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Testimonial Component Export Definition\nDESCRIPTION: Basic export configuration for the testimonial component layout\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n```\n\n----------------------------------------\n\nTITLE: Box Component with Uniform Padding\nDESCRIPTION: Examples of Box component using different padding values including preset values (condensed, normal, spacious) and numeric values\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n    <Box padding=\"condensed\" className=\"bg-red-lines\">\n      condensed\n    </Box>\n    <Box padding=\"normal\" className=\"bg-red-lines\">\n      normal\n    </Box>\n    <Box padding=\"spacious\" className=\"bg-red-lines\">\n      spacious\n    </Box>\n  </Stack>\n  <Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n    <Box padding={24} className=\"bg-red-lines\">\n      24\n    </Box>\n    <Box padding={32} className=\"bg-red-lines\">\n      32\n    </Box>\n    <Box padding={48} className=\"bg-red-lines\">\n      48\n    </Box>\n    <Box padding={64} className=\"bg-red-lines\">\n      64\n    </Box>\n    <Box padding={96} className=\"bg-red-lines\">\n      96\n    </Box>\n  </Stack>\n</>\n```\n\n----------------------------------------\n\nTITLE: Importing Image Component from Primer React Brand\nDESCRIPTION: Shows how to import the Image component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Image} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Animating River Component in React\nDESCRIPTION: This example shows how to apply a slide-in-right animation to the River.Content component within an AnimationProvider.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/animation.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<AnimationProvider>\n  <River>\n    <River.Visual>\n      <img src=\"/images/placeholder.png\" alt=\"placeholder, blank area with a gray background color\" />\n    </River.Visual>\n    <River.Content animate=\"slide-in-right\">\n      <Heading>Heading</Heading>\n      <Text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit ullamcorper id. Aliquam luctus sed turpis\n        felis nam pulvinar risus elementum.\n      </Text>\n      <Link href=\"#\">Call to action</Link>\n    </River.Content>\n  </River>\n</AnimationProvider>\n```\n\n----------------------------------------\n\nTITLE: Importing Hero Component in React\nDESCRIPTION: Shows how to import the Hero component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Hero/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Hero} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing Heading Component in React\nDESCRIPTION: Basic import statement for the Heading component from the Primer Brand React library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Heading/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Heading} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Removing Unused ActionMenu Color Tokens\nDESCRIPTION: Shows the removal of unused color tokens for the ActionMenu component in version 0.30.0. These tokens were related to border colors for different states.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_7\n\nLANGUAGE: css\nCODE:\n```\n--brand-ActionMenu-color-border-rest\n--brand-ActionMenu-color-border-hover\n--brand-ActionMenu-color-border-active\n```\n\n----------------------------------------\n\nTITLE: Example of Incorrect Image Usage in HTML\nDESCRIPTION: Example showing what not to do when using images - specifically not to use an icon as an image or illustration.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Image/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img\n  src=\"https://github.com/primer/brand/assets/912236/6f29d849-9379-4327-a4aa-e1233e19861b\"\n  alt=\"\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Importing Box Component from Primer React Brand\nDESCRIPTION: Shows how to import the Box component from the @primer/react-brand package for use in React applications.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Box/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Box} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Rendering CustomVideoPlayer Component in JSX\nDESCRIPTION: This code snippet demonstrates how to use the CustomVideoPlayer component within a div, specifying its width and source video.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Heading/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<div>\n  <CustomVideoPlayer\n    width=\"100%\"\n    src=\"https://github.com/primer/brand/assets/912236/d0e7ef2b-d52f-413e-8580-579a9129696c\"\n  />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing AnchorNav Component from Primer React Brand\nDESCRIPTION: Basic import statement for the AnchorNav component from the Primer React Brand library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/AnchorNav.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {AnchorNav} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Default Usage of Text Component in JSX\nDESCRIPTION: Demonstrates the basic usage of the Text component with default props.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Text/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Text>With GitHub Copilot, you're always in charge.</Text>\n```\n\n----------------------------------------\n\nTITLE: Importing Icon Component from Primer React Brand\nDESCRIPTION: Shows how to import the Icon component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Icon.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Icon} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Button Variant Tokens (CSS)\nDESCRIPTION: CSS tokens for accent and subtle button variants, defining background and foreground colors for different states.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n--brand-button-accent-bgColor-rest\n--brand-button-accent-bgColor-hover\n--brand-button-accent-bgColor-active\n--brand-button-accent-bgColor-disabled\n--brand-button-accent-fgColor-rest\n--brand-button-accent-fgColor-disabled\n--brand-button-subtle-bgColor-rest\n--brand-button-subtle-bgColor-hover\n--brand-button-subtle-bgColor-active\n```\n\n----------------------------------------\n\nTITLE: Updating Grid Component Token Prefix in CSS\nDESCRIPTION: Adding 'brand' prefix to Grid component design tokens for consistency.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_17\n\nLANGUAGE: css\nCODE:\n```\n- --grid-spacing-margin\n+ --brand-Grid-spacing-margin\n```\n\n----------------------------------------\n\nTITLE: Importing Breadcrumbs Component in JavaScript\nDESCRIPTION: Shows how to import the Breadcrumbs component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Breadcrumbs/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Breadcrumbs} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: SubdomainNavBar Token Correction\nDESCRIPTION: Fixes an incorrect token reference in SubdomainNavBar by updating from 'fg-default' to 'text-default' for overflow styling.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_25\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-SubdomainNavBar-fg-overflow-default: var(--brand-color-fg-default);\n+ --brand-SubdomainNavBar-fg-overflow-default: var(--brand-color-text-default);\n```\n\n----------------------------------------\n\nTITLE: Center-Aligned SectionIntro Component\nDESCRIPTION: Example demonstrating the SectionIntro component with center alignment, configured using the align prop set to 'center'.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SectionIntro/react.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<section>\n  <SectionIntro align=\"center\">\n    <SectionIntro.Label>Label</SectionIntro.Label>\n    <SectionIntro.Heading>\n      Focus on solving bigger problems\n    </SectionIntro.Heading>\n    <SectionIntro.Description>\n      Spend less time creating boilerplate and repetitive code patterns, and\n      more time on what matters: building great software. Write a comment\n      describing the logic you want and GitHub Copilot will immediately suggest\n      code to implement the solution.\n    </SectionIntro.Description>\n    <SectionIntro.Link href=\"#\">Explore docs</SectionIntro.Link>\n  </SectionIntro>\n</section>\n```\n\n----------------------------------------\n\nTITLE: Importing Box Component from Primer React Brand\nDESCRIPTION: Basic import statement for the Box component from @primer/react-brand package\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Box} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing UnorderedList Component in JavaScript\nDESCRIPTION: This snippet shows how to import the UnorderedList component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/UnorderedList/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {UnorderedList} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing IDE Component in JavaScript\nDESCRIPTION: Shows how to import the IDE component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/IDE.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {IDE} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Updating Accent Color Token Names in Primer Brand\nDESCRIPTION: Changes to accent color token naming conventions, replacing 'fg' and 'emphasis' with more descriptive 'primary' and 'secondary' naming patterns.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_21\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-color-accent-fg\n+ --brand-color-accent-primary\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-color-accent-emphasis\n+ --brand-color-accent-secondary\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-color-accent-fg\n+ --brand-color-accent-primary\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-color-accent-emphasis\n+ --brand-color-accent-secondary\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-color-accent-subtle\n+ --brand-color-accent-secondary\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-color-accent-muted\n+ --brand-color-accent-primary\n```\n\n----------------------------------------\n\nTITLE: Markdown Table: RiverBreakout.A11yHeading Props\nDESCRIPTION: A markdown table listing the props for the RiverBreakout.A11yHeading component, including their types, defaults, and descriptions. This component is specifically for accessibility purposes.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| Name       | Type        | Default | Description                                                                         |\n| :--------- | :---------- | :-----: | :---------------------------------------------------------------------------------- |\n| `children` | `ReactNode` |         | The heading text that will be read aloud to screen readers, but is visually hidden. |\n```\n\n----------------------------------------\n\nTITLE: Importing Bento Component in React\nDESCRIPTION: Shows how to import the Bento component from the Primer React Brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Bento.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Bento} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing Breakout Banner Component Assets in JSX\nDESCRIPTION: This code snippet demonstrates how to import various images and components needed for the Breakout Banner documentation. It includes imports for anatomy diagrams, do's and don'ts examples, and layout components.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/BreakoutBanner/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n\nimport anatomy from './images/anatomy.png'\nimport doPosition from './images/do-position.png'\nimport dontPosition from './images/dont-position.png'\nimport doAlign from './images/do-align.png'\nimport dontAlign from './images/dont-align.png'\nimport doUseSparingly from './images/do-use-sparingly.png'\nimport dontStack from './images/dont-stack.png'\nimport doLength from './images/do-length.png'\nimport dontLength from './images/dont-length.png'\nimport doBG from './images/do-bg.png'\nimport dontBG from './images/dont-bg.png'\nimport doLeadingVisual from './images/do-leading-visual.png'\nimport dontLeadingVisual from './images/dont-leading-visual.png'\nimport doLeadingVisualColor from './images/do-leading-visual-color.png'\nimport dontLeadingVisualColor from './images/dont-leading-visual-color.png'\n```\n\n----------------------------------------\n\nTITLE: Importing Prose Component\nDESCRIPTION: Basic import statement for the Prose component from @primer/react-brand package\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Prose.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Prose} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Markdown ADR Template Structure\nDESCRIPTION: Basic structure for an Architectural Decision Record (ADR) template with sections for status, implementation tracking, decision details, context, and consequences.\nSOURCE: https://github.com/primer/brand/blob/main/contributor-docs/adrs/adr-template.md#2025-04-12_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Title\n\n## Status\n\n- Proposed {date}\n- Accepted {date}\n- Rejected {date}\n- Deprecated {date}\n- Superseded by {adr_id}\n\n## Implementation status\n\nHas the decision recorded in this ADR been implemented?\n\n- [ ] Yes {pr_url}\n- [ ] No\n\n## Decision\n\n## Context\n\n## Consequences\n```\n\n----------------------------------------\n\nTITLE: Importing Animate Component in React\nDESCRIPTION: This snippet shows how to import the Animate component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/animation.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Animate} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Import Component Layout in JSX\nDESCRIPTION: Basic import statement for the ComponentLayout module used in the page structure.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/OrderedList/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration defining the title and description of the component documentation page.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/UnorderedList/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Unordered list\ndescription: Use the unordered list component to present a collection of items without specific ordering.\n---\n```\n\n----------------------------------------\n\nTITLE: GitHub Logo SVG Implementation\nDESCRIPTION: SVG path definition for the GitHub logo with viewBox and role attributes\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_9\n\nLANGUAGE: SVG\nCODE:\n```\n<path d=\"M8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17Z\"/>\n```\n\n----------------------------------------\n\nTITLE: Microsoft Logo SVG Implementation\nDESCRIPTION: SVG definition for Microsoft logo including the 4-square brand symbol and text\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/react.mdx#2025-04-12_snippet_10\n\nLANGUAGE: SVG\nCODE:\n```\n<svg role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 337.6 72\">\n  <title>Microsoft</title>\n  <path fill=\"#737373\" d=\"M140.4 14.4v43.2h-7.5V23.7h-.1l-13.4 33.9h-5l-13.7-33.9h-.1v33.9h-6.9V14.4h10.8l12.4 32h.2l13.1-32h10.2z\"/>\n  <path fill=\"#F25022\" d=\"M0 0h34.2v34.2H0z\" />\n  <path fill=\"#7FBA00\" d=\"M37.8 0H72v34.2H37.8z\" />\n  <path fill=\"#00A4EF\" d=\"M0 37.8h34.2V72H0z\" />\n  <path fill=\"#FFB900\" d=\"M37.8 37.8H72V72H37.8z\" />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Rendering 'X' Variant UnorderedList in JSX\nDESCRIPTION: This example demonstrates the use of the UnorderedList component with the 'x' variant, which adds 'x' markers to list items.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/UnorderedList/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<UnorderedList variant=\"x\">\n  <UnorderedList.Item>\n    Automatic security and version updates\n  </UnorderedList.Item>\n  <UnorderedList.Item>GitHub Security Advisories</UnorderedList.Item>\n  <UnorderedList.Item>Code and secret scanning</UnorderedList.Item>\n  <UnorderedList.Item>Dependency review</UnorderedList.Item>\n  <UnorderedList.Item>\n    Automated authentication and identity management\n  </UnorderedList.Item>\n</UnorderedList>\n```\n\n----------------------------------------\n\nTITLE: Importing CTA Banner Component Layout\nDESCRIPTION: Basic import statement for the CTA banner component layout setup.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n```\n\n----------------------------------------\n\nTITLE: Importing and Rendering Homepage Component in React\nDESCRIPTION: This snippet imports a HomepageComponent from a local file and renders it within the page. It's likely part of a static site generator or React-based framework.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport HomepageComponent from './index.tsx'\n\n<HomepageComponent />\n```\n\n----------------------------------------\n\nTITLE: Importing Footnotes Component in React\nDESCRIPTION: Shows how to import the Footnotes component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Footnotes/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Footnotes} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing Component Layout in JSX\nDESCRIPTION: Basic import statement for the ComponentLayout used in the documentation page structure.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/UnorderedList/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n```\n\n----------------------------------------\n\nTITLE: Exporting HeroLayout as Default Component in React\nDESCRIPTION: This code exports the HeroLayout component as the default export for the file. It is likely that the HeroLayout component wraps the content defined above.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nexport default HeroLayout\n```\n\n----------------------------------------\n\nTITLE: Defining FAQGroup Component Props in Markdown\nDESCRIPTION: A markdown table defining the props for the FAQGroup component, including className, id, ref, children, and tabAttributes. It specifies the type, default value, and description for each prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FAQ/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| Name            | Type                                                                                                                           | Default | Description                                                                   |\n| :-------------- | :----------------------------------------------------------------------------------------------------------------------------- | :-----: | :---------------------------------------------------------------------------- |\n| `className`     | `string`                                                                                                                       |         | Sets a custom class                                                           |\n| `id`            | `string`                                                                                                                       |         | Sets a custom id                                                              |\n| `ref`           | `React.RefObject`                                                                                                              |         | Forward a Ref to the underlying DOM node                                      |\n| `children`      | <PropTableValues values={[<a href=\"#faq-required\">FAQ</a>, <a href=\"#faqgroup-heading\">FAQGroup.Heading</a>]} addLineBreaks /> |         | Root element for the FAQGroup component.                                      |\n| `tabAttributes` | `(children: ReactElement, index: number) => Record<string, unknown>`                                                           |         | Spreads the returned attributes onto the tab that's rendered by the FAQGroup. |\n```\n\n----------------------------------------\n\nTITLE: Defining Bento.Heading Component Props in Markdown\nDESCRIPTION: This snippet defines the props for the Bento.Heading component, including className and children. It also mentions that it forwards all props from the Heading component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Bento.mdx#2025-04-12_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| name        | type                       | default     | required | description                                           |\n| ----------- | -------------------------- | ----------- | -------- | ----------------------------------------------------- |\n| `className` | `string`                   |             | `false`  | Custom class name for the heading component           |\n| `children`  | `ReactNode`, `ReactNode[]` | `undefined` | `true`   | Content to be displayed inside the heading component. |\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata for Primer Brand UI Components Documentation\nDESCRIPTION: This YAML snippet defines metadata for a documentation page about Primer Brand UI components. It specifies the title, description, and menu position for the page.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Components\ndescription: Primer Brand UI components\nmenu-position: 3\n---\n```\n\n----------------------------------------\n\nTITLE: Building Doctocat Template Site (Bash)\nDESCRIPTION: This command builds the Doctocat Template site. It only needs to be run once during the initial setup process.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/README.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Importing MinimalFooter Component in JavaScript\nDESCRIPTION: Shows how to import the MinimalFooter component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/MinimalFooter.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {MinimalFooter} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing AnimationProvider\nDESCRIPTION: Shows how to import the AnimationProvider component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/getting-started/animation.mdx#2025-04-12_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {AnimationProvider} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing CustomVideoPlayer Component in JSX\nDESCRIPTION: This code snippet imports a custom video player component and a component layout, likely used for rendering the documentation page.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Heading/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport CustomVideoPlayer from '../../../src/components/custom-video-player'\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n```\n\n----------------------------------------\n\nTITLE: Original Repository Structure in ASCII\nDESCRIPTION: ASCII representation of the original repository structure showing the organization of components, documentation, fonts, and other resources before the monorepo conversion.\nSOURCE: https://github.com/primer/brand/blob/main/contributor-docs/adrs/adr-002-conversion-to-monorepo.md#2025-04-12_snippet_0\n\nLANGUAGE: ascii\nCODE:\n```\n.\n├── .storybook/\n│   ├── main.js\n│   ├── preview.js\n│   └── ...\n├── docs/\n│   ├── src/\n│   └── content/\n│       ├── Button.documentation.mdx\n│       └── ...\n├── fonts/\n│   ├── MonaSans.woff\n│   └── fonts.css\n├── lib/\n│   ├── css/\n│   ├── design-tokens/\n│   ├── Button/\n│   ├── ...\n│   └── index.js\n├── scripts/\n│   ├── build-design-tokens.sh\n│   └── ...\n├── src/\n│   ├── tokens/\n│   │   ├── base/\n│   │   │   └── color.json\n│   │   └── functional/\n│   │       └── color.json\n│   ├── css/\n│   │   ├── reset.css\n│   │   └── global.ts\n│   ├── e2e/\n│   │   └── global-tests.js\n│   └── Button/\n│       ├── Button.tsx\n│       ├── Button.test.tsx\n│       ├── Button.module.css\n│       ├── Button.stories.css\n│       └── index.ts\n└── package.json\n```\n\n----------------------------------------\n\nTITLE: Card.Description Props Table Definition\nDESCRIPTION: Defines the available props for the Card.Description component, with children as the main prop. Notes that id, className and ref are forwarded by default.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Card/react.mdx#2025-04-12_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n| name       | type                       | default     | required | description                                         |\n| ---------- | -------------------------- | ----------- | -------- | --------------------------------------------------- |\n| `children` | `ReactNode`, `ReactNode[]` | `undefined` | `true`   | Content to be displayed inside the pillar component |\n```\n\n----------------------------------------\n\nTITLE: Component Layout Import - React/JSX\nDESCRIPTION: Import statement for the ComponentLayout from the project's source directory\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ButtonGroup/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n```\n\n----------------------------------------\n\nTITLE: Defining Primer Brand Primitives Page Metadata in YAML\nDESCRIPTION: This YAML block defines the metadata for a page about Primer Brand Primitives. It specifies the title, description, and menu position for the page.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/primitives/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Primitives\ndescription: Learn about Primer Brand Primitives\nmenu-position: 2\n---\n```\n\n----------------------------------------\n\nTITLE: VideoPlayer Component Props Interface\nDESCRIPTION: Type definitions for the main VideoPlayer component properties including children, title, visual controls, and player functionality options.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\ninterface VideoPlayerProps {\n  children: React.ReactNode | React.ReactNode[];\n  title: string;\n  visuallyHiddenTitle?: boolean;\n  showBranding?: boolean;\n  poster?: string;\n  className?: string;\n  showPlayPauseButton?: boolean;\n  showSeekControl?: boolean;\n  showCCButton?: boolean;\n  showMuteButton?: boolean;\n  showVolumeControl?: boolean;\n  showFullScreenButton?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Logo Suite Documentation Frontmatter\nDESCRIPTION: YAML frontmatter defining the title and description of the logo suite documentation page.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Logo suite\ndescription: Use a logo suite to present a list logos, such as sponsors or vendors.\n---\n```\n\n----------------------------------------\n\nTITLE: Logo Suite JSX Import Statement\nDESCRIPTION: Import statement for the ComponentLayout used in the logo suite documentation.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/LogoSuite/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n```\n\n----------------------------------------\n\nTITLE: Removed Subtle Button Tokens (CSS)\nDESCRIPTION: Deprecated CSS tokens for subtle button variant borders that are no longer needed.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n--brand-button-subtle-borderColor-rest\n--brand-button-subtle-borderColor-hover\n--brand-button-subtle-borderColor-active\n```\n\n----------------------------------------\n\nTITLE: SubNav with Anchor-Based Submenu\nDESCRIPTION: Implementation of SubNav with an anchor-based submenu variant, which provides an alternative presentation style for submenus that's suitable for longer content sections.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SubNav.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{position: 'relative', height: 300, overflowY: 'scroll'}}>\n  <Box style={{height: 1000}}>\n    <SubNav>\n      <SubNav.Heading href=\"#\">Features</SubNav.Heading>\n      <SubNav.Link href=\"#\" aria-current=\"page\">\n        Actions\n        <SubNav.SubMenu variant=\"anchor\">\n          <SubNav.Link href=\"#\">Actions feature one</SubNav.Link>\n          <SubNav.Link href=\"#\">Actions feature two</SubNav.Link>\n          <SubNav.Link href=\"#\">Actions feature three</SubNav.Link>\n          <SubNav.Link href=\"#\">Actions feature four</SubNav.Link>\n        </SubNav.SubMenu>\n      </SubNav.Link>\n      <SubNav.Link href=\"#\">Packages</SubNav.Link>\n      <SubNav.Link href=\"#\">Copilot</SubNav.Link>\n      <SubNav.Link href=\"#\">Code review</SubNav.Link>\n    </SubNav>\n  </Box>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Defining CTABanner.Description Props in Markdown\nDESCRIPTION: This snippet defines the props for the CTABanner.Description component, including children and variant. It specifies the types, default values, and descriptions for each prop.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTABanner/react.mdx#2025-04-12_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n| name       | type                                                    | default     | required                            | description                                         |\n| ---------- | ------------------------------------------------------- | ----------- | ----------------------------------- | --------------------------------------------------- |\n| `children` | `ReactNode`, `ReactNode[]`                              | `undefined` | `true`                              | Content to be displayed inside the banner component |\n| `variant`  | <PropTableValues values={TextVariants} addLineBreaks /> | `'muted'`   | Specify alternative text appearance |\n```\n\n----------------------------------------\n\nTITLE: React Component Import Statements\nDESCRIPTION: Import statements for the component layout and anatomy image.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CheckboxGroup/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n\nimport anatomy from './images/anatomy.png'\n```\n\n----------------------------------------\n\nTITLE: New Monorepo Structure in ASCII\nDESCRIPTION: ASCII representation of the new monorepo structure showing the reorganized packages and apps directories with clearer separation of concerns.\nSOURCE: https://github.com/primer/brand/blob/main/contributor-docs/adrs/adr-002-conversion-to-monorepo.md#2025-04-12_snippet_1\n\nLANGUAGE: ascii\nCODE:\n```\n.\n├── packages/\n│   ├── design-tokens/\n│   │   ├── base/\n│   │   │   └── color.json\n│   │   ├── functional/\n│   │   │   └── color.json\n│   │   └── scripts/\n│   │       └── build-design-tokens.sh\n│   ├── css/\n│   │   ├── components/\n│   │   │   ├── Button.module.css\n│   │   │   └── ...\n│   │   ├── reset.css\n│   │   └── global.ts\n│   ├── fonts/\n│   │   ├── MonaSans.woff\n│   │   └── fonts.css\n│   ├── e2e/\n│   │   └── global-tests.js\n│   └── react/\n│       └── Button/\n│           ├── Button.tsx\n│           ├── Button.test.tsx\n│           ├── Button.stories.css\n│           ├── Button.documentation.mdx\n│           └── index.ts\n├── apps/\n│   ├── docs/\n│   │   └── src/\n│   │       └── ...\n│   └── storybook/\n│       └── .storybook/\n│           ├── main.js\n│           └── preview.js\n└── package.json\n```\n\n----------------------------------------\n\nTITLE: Markdown Version History Structure\nDESCRIPTION: Basic markdown structure showing version numbers from 0.48.0 through 0.51.0 with heading levels.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/CHANGELOG.md#2025-04-12_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @primer/brand-docs\n\n## 0.51.0\n\n## 0.50.0\n\n## 0.49.0\n\n## 0.48.0\n```\n\n----------------------------------------\n\nTITLE: Importing Components and Images in React/JSX\nDESCRIPTION: Import statements for component layout and image assets used in the footnotes documentation page.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Footnotes/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n\nimport anatomy from './images/anatomy.png'\nimport doPosition from './images/do-position.png'\nimport doReturnLinks from './images/do-use-return-urls.png'\nimport dontReturnLinks from './images/dont-use-return-urls.png'\nimport doUseDisclaimer from './images/do-use-disclaimer.png'\nimport dontUseDisclaimer from './images/dont-use-disclaimer.png'\n```\n\n----------------------------------------\n\nTITLE: Locking Color Modes with Nested ThemeProviders\nDESCRIPTION: This snippet shows how to use nested ThemeProvider components to lock specific sections of a layout to different color modes, providing tighter control over appearance.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/theming.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"vertical\" padding=\"none\">\n  <ThemeProvider\n    colorMode=\"dark\"\n    style={{\n      backgroundColor: 'var(--brand-color-canvas-default)',\n    }}\n  >\n    <River align=\"center\">\n      <River.Visual>\n        <img src=\"/images/placeholder.png\" alt=\"placeholder, blank area with a gray background color\" />\n      </River.Visual>\n      <River.Content>\n        <Heading>Heading</Heading>\n        <Text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit ullamcorper id. Aliquam luctus sed\n          turpis felis nam pulvinar risus elementum.\n        </Text>\n        <Link href=\"#\">Call to action</Link>\n      </River.Content>\n    </River>\n  </ThemeProvider>\n  <ThemeProvider\n    colorMode=\"light\"\n    style={{\n      backgroundColor: 'var(--brand-color-canvas-default)',\n    }}\n  >\n    <River align=\"right\">\n      <River.Visual>\n        <img src=\"/images/placeholder.png\" alt=\"placeholder, blank area with a gray background color\" />\n      </River.Visual>\n      <River.Content>\n        <Heading>Heading</Heading>\n        <Text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien sit ullamcorper id. Aliquam luctus sed\n          turpis felis nam pulvinar risus elementum.\n        </Text>\n        <Link href=\"#\">Call to action</Link>\n      </River.Content>\n    </River>\n  </ThemeProvider>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Importing ComparisonTable Component from Primer React Brand\nDESCRIPTION: Shows how to import the ComparisonTable component from the Primer React Brand library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ComparisonTable.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {ComparisonTable} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter defining the component's title and description.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CheckboxGroup/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Checkbox group\ndescription: Checkbox group renders a set of checkboxes.\n---\n```\n\n----------------------------------------\n\nTITLE: Rendering Centered Pillar Component in React\nDESCRIPTION: Shows how to change the content alignment of the Pillar component to center.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pillar/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Pillar align=\"center\">\n  <Pillar.Icon icon={<CopilotIcon />} color=\"purple\" />\n  <Pillar.Heading>Code search & code view</Pillar.Heading>\n  <Pillar.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Pillar.Description>\n</Pillar>\n```\n\n----------------------------------------\n\nTITLE: Importing CheckboxGroup Component in React\nDESCRIPTION: This snippet shows how to import the CheckboxGroup component from the @primer/react-brand library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CheckboxGroup/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {CheckboxGroup} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: AnchorNav with Fewer Links Example\nDESCRIPTION: Demonstrates AnchorNav behavior with fewer than 5 links, which automatically aligns links to the start of the navigation bar.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/AnchorNav.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{position: 'relative', overflowX: 'scroll'}}>\n  <AnchorNav>\n    <AnchorNav.Link href=\"#fewer-links-section1\">Section one</AnchorNav.Link>\n    <AnchorNav.Link href=\"#fewer-links-section2\">Section two</AnchorNav.Link>\n    <AnchorNav.Link href=\"#fewer-links-section3\">Section three</AnchorNav.Link>\n    <AnchorNav.Action href=\"#\">Sign up</AnchorNav.Action>\n  </AnchorNav>\n\n  <section\n    id=\"fewer-links-section1\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-lemon-0)',\n    }}\n  >\n    Section 1\n  </section>\n  <section\n    id=\"fewer-links-section2\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-yellow-0)',\n    }}\n  >\n    Section 2\n  </section>\n  <section\n    id=\"fewer-links-section3\"\n    style={{\n      padding: '100px 2rem',\n      backgroundColor: 'var(--base-color-scale-lime-0)',\n    }}\n  >\n    Section 3\n  </section>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Importing CTA Form Component from Primer Brand\nDESCRIPTION: Basic import statement for the CTA Form component from the Primer Brand React library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/CTAForm/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {CTAForm} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Running Doctocat Template Development Server (Bash)\nDESCRIPTION: This command starts the development server for the Doctocat Template project, allowing for local development and preview of the site.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/README.md#2025-04-12_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run develop\n```\n\n----------------------------------------\n\nTITLE: Using Refs with Select Component\nDESCRIPTION: Example of using refs with Select in uncontrolled mode for form submission.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst App = () => {\n  const selectRef = React.useRef(null)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!selectRef.current.value) {\n      alert(`Select a handle to continue`)\n      return\n    }\n\n    alert(`Name: ${selectRef.current.value}`)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Container\n        sx={{\n          display: 'grid',\n          gap: 'var(--base-size-16)',\n          maxWidth: 400,\n          marginX: 'auto',\n        }}\n      >\n        <FormControl fullWidth>\n          <FormControl.Label>Name</FormControl.Label>\n          <Select ref={selectRef} defaultValue=\"\">\n            <Select.Option value=\"\" disabled>\n              Select a handle\n            </Select.Option>\n            <Select.Option value=\"mona\">Monalisa</Select.Option>\n            <Select.Option value=\"hubot\">Hubot</Select.Option>\n          </Select>\n        </FormControl>\n        <Button type=\"submit\" variant=\"primary\">\n          Submit\n        </Button>\n      </Container>\n    </form>\n  )\n}\n\nrender(App)\n```\n\n----------------------------------------\n\nTITLE: Importing the Label Component from Primer Brand\nDESCRIPTION: Code snippet showing how to import the Label component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Label/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {Label} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Rendering Default Breadcrumbs Component in JSX\nDESCRIPTION: Demonstrates the default usage of the Breadcrumbs component with multiple items, including a selected item.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Breadcrumbs/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Breadcrumbs>\n  <Breadcrumbs.Item href=\"/\">Resources</Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"/copilot\">GitHub Copilot</Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"/copilot/chat\" selected>\n    Chat\n  </Breadcrumbs.Item>\n</Breadcrumbs>\n```\n\n----------------------------------------\n\nTITLE: Importing EyebrowBanner Component in JavaScript\nDESCRIPTION: Basic import statement for the EyebrowBanner component from the @primer/react-brand library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/EyebrowBanner.mdx#2025-04-12_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport {EyebrowBanner} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Select Component with Different Sizes\nDESCRIPTION: Examples of Select components in medium and large sizes.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{display: 'inline-grid', gap: 3}}>\n  <FormControl size=\"medium\">\n    <FormControl.Label>Medium</FormControl.Label>\n    <Select>\n      <Select.Option value=\"mona\">Monalisa</Select.Option>\n      <Select.Option value=\"hubot\">Hubot</Select.Option>\n    </Select>\n  </FormControl>\n\n  <FormControl size=\"large\">\n    <FormControl.Label>Large</FormControl.Label>\n    <Select>\n      <Select.Option value=\"mona\">Monalisa</Select.Option>\n      <Select.Option value=\"hubot\">Hubot</Select.Option>\n    </Select>\n  </FormControl>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Importing ActionMenu Component\nDESCRIPTION: Basic import statement for the ActionMenu component from the Primer Brand React library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/ActionMenu.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {ActionMenu} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Importing FAQ Components\nDESCRIPTION: Basic import statement for FAQ components from Primer Brand React library\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/FAQ/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {FAQ, FAQGroup} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Configuring Textarea Resize Behavior in JSX\nDESCRIPTION: Demonstrates how to prevent user resizing of the Textarea component by setting the resize prop to 'none'.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Textarea.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Textarea resize=\"none\" />\n```\n\n----------------------------------------\n\nTITLE: Importing Grid Component in JSX\nDESCRIPTION: This snippet shows how to import the Text component from Primer React and custom components for the documentation page layout.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Grid/index.mdx#2025-04-12_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport {Text} from '@primer/react'\nimport CustomVideoPlayer from '../../../src/components/custom-video-player'\nimport ComponentLayout from '../../../src/layouts/component-layout'\nexport default ComponentLayout\n```\n\n----------------------------------------\n\nTITLE: Minimal VideoPlayer Configuration in JSX\nDESCRIPTION: Demonstrates a minimal configuration of the VideoPlayer with most controls hidden and branding disabled.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<VideoPlayer\n  title=\"GitHub media player\"\n  visuallyHiddenTitle\n  showBranding={false}\n  showBranding={false}\n  showPlayPauseButton={false}\n  showSeekControl={true}\n  showCCButton={false}\n  showMuteButton={false}\n  showVolumeControl={false}\n  showFullScreenButton={false}\n>\n  <VideoPlayer.Source\n    src=\"https://primer.github.io/brand/assets/example.mp4\"\n    type=\"video/mp4\"\n  />\n  <VideoPlayer.Track src=\"/brand/assets/example.vtt\" default />\n</VideoPlayer>\n```\n\n----------------------------------------\n\nTITLE: Box Component with Uniform Margin\nDESCRIPTION: Examples showing different margin values including preset values and numeric values\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n    <Box className=\"bg-yellow-lines\">\n      <Box margin=\"condensed\" className=\"bg-red-lines\">\n        condensed\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin=\"normal\" className=\"bg-red-lines\">\n        normal\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin=\"spacious\" className=\"bg-red-lines\">\n        spacious\n      </Box>\n    </Box>\n  </Stack>\n  <Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={24} className=\"bg-red-lines\">\n        24\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={32} className=\"bg-red-lines\">\n        32\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={48} className=\"bg-red-lines\">\n        48\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={64} className=\"bg-red-lines\">\n        64\n      </Box>\n    </Box>\n    <Box className=\"bg-yellow-lines\">\n      <Box margin={96} className=\"bg-red-lines\">\n        96\n      </Box>\n    </Box>\n  </Stack>\n</>\n```\n\n----------------------------------------\n\nTITLE: VideoPlayer with Hidden Controls in JSX\nDESCRIPTION: Shows how to selectively hide various controls of the VideoPlayer component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<VideoPlayer\n  title=\"GitHub media player\"\n  showPlayPauseButton={false}\n  showSeekControl={true}\n  showCCButton={false}\n  showMuteButton={false}\n  showVolumeControl={false}\n  showFullScreenButton={false}\n>\n  <VideoPlayer.Source\n    src=\"https://primer.github.io/brand/assets/example.mp4\"\n    type=\"video/mp4\"\n  />\n  <VideoPlayer.Track src=\"/brand/assets/example.vtt\" default />\n</VideoPlayer>\n```\n\n----------------------------------------\n\nTITLE: Importing Select Component from Primer React Brand\nDESCRIPTION: The import statement for using the Select component from the Primer React Brand library.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Select.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Select} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: VideoPlayer without Branding in JSX\nDESCRIPTION: Shows how to disable the branding on the VideoPlayer component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<VideoPlayer showBranding={false} title=\"GitHub media player\">\n  <VideoPlayer.Source src=\"https://primer.github.io/brand/assets/example.mp4\" />\n  <VideoPlayer.Track src=\"/brand/assets/example.vtt\" default />\n</VideoPlayer>\n```\n\n----------------------------------------\n\nTITLE: VideoPlayer with Poster Image in JSX\nDESCRIPTION: Illustrates how to add a poster image to the VideoPlayer component.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<VideoPlayer\n  poster=\"/brand/assets/example-poster.png\"\n  title=\"GitHub media player\"\n>\n  <VideoPlayer.Source src=\"https://primer.github.io/brand/assets/example.mp4\" />\n  <VideoPlayer.Track src=\"/brand/assets/example.vtt\" default />\n</VideoPlayer>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table: RiverBreakout Props\nDESCRIPTION: A markdown table listing the props for the RiverBreakout component, including their types, defaults, and descriptions.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/River/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| Name        | Type              | Default | Description                              |\n| :---------- | :---------------- | :-----: | :--------------------------------------- |\n| `className` | `string`          |         | Sets a custom class on the root element  |\n| `id`        | `string`          |         | Sets a custom id                         |\n| `ref`       | `React.RefObject` |         | Forward a Ref to the underlying DOM node |\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter defining the page title and description for the footnotes documentation.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Footnotes/index.mdx#2025-04-12_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Footnotes\ndescription: Use footnotes to display contextual information and cite sources in the page content.\n---\n```\n\n----------------------------------------\n\nTITLE: Adding ComparisonTable Featured Gradient Tokens\nDESCRIPTION: Introduces new tokens for customizing the featured gradient in the ComparisonTable component, allowing for start and end color specifications.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_26\n\nLANGUAGE: diff\nCODE:\n```\n+ --brand-ComparisonTable-featured-color-start;\n+ --brand-ComparisonTable-featured-color-end;\n```\n\n----------------------------------------\n\nTITLE: Button Component Token Updates\nDESCRIPTION: Updates to the Button component's shadow and background tokens, introducing more specific naming patterns for primary button states.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_23\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Button-background-base\n+ --brand-Button-background-base\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Button-shadow-default\n+ --brand-Button-shadow-primary-default\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Button-shadow-hover\n+ --brand-Button-shadow-primary-hover\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Button-background-base\n+ --brand-Button-background-base\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Button-shadow-default\n+ --brand-Button-shadow-primary-default\n```\n\nLANGUAGE: diff\nCODE:\n```\n- --brand-Button-shadow-hover\n+ --brand-Button-shadow-primary-hover\n```\n\n----------------------------------------\n\nTITLE: Updating River Component Spacing Tokens in CSS\nDESCRIPTION: Updated and new spacing tokens for the River component, implementing responsive logic for gap and padding values.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_16\n\nLANGUAGE: css\nCODE:\n```\n# Updated medium/large gap and margin on pro of a responsive logic (Small/Medium/Large sizes) and inner/outer spacing\n-  --brand-River-gap-column-medium: var(--base-size-32);\n-  --brand-River-gap-column-large: var(--base-size-48);\n+  --brand-River-spacing-inner: var(--base-size-24)/var(--base-size-36)/var(--base-size-48);\n-  --brand-River-layout-margin-vertical: var(--base-size-24);\n+  --brand-River-spacing-outer: var(--base-size-28)/var(--base-size-36)/var(--base-size-48);\n# Updated heading margin\n-  --brand-River-gap-heading-bottom: var(--base-size-8);\n+  --brand-River-heading-margin: var(--base-size-8);\n```\n\n----------------------------------------\n\nTITLE: Box Component with Responsive Spacing\nDESCRIPTION: Example showing responsive padding and margin values based on viewport sizes\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n  <Box className=\"bg-yellow-lines\">\n    <Box\n      margin={{\n        narrow: 48,\n        regular: 96,\n        wide: 128,\n      }}\n      className=\"bg-red-lines\"\n    >\n      margin\n    </Box>\n  </Box>\n  <Box\n    padding={{\n      narrow: 48,\n      regular: 96,\n      wide: 128,\n    }}\n    className=\"bg-red-lines\"\n  >\n    padding\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Adding Animation Design Tokens in CSS\nDESCRIPTION: New design tokens for animation variants, including scale and slide animations with various properties.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_15\n\nLANGUAGE: css\nCODE:\n```\n--brand-animation-variant-scaleInLeft-end\n--brand-animation-variant-scaleInLeft-start\n--brand-animation-variant-scaleInLeft-distance\n--brand-animation-variant-scaleInRight-end\n--brand-animation-variant-scaleInRight-start\n--brand-animation-variant-scaleInRight-distance\n--brand-animation-variant-scaleInTop-distance\n--brand-animation-variant-scaleIn-end\n--brand-animation-variant-scaleIn-start\n--brand-animation-variant-scaleInDown-end\n--brand-animation-variant-scaleInDown-start\n--brand-animation-variant-scaleInDown-distance\n--brand-animation-variant-scaleInUp-end\n--brand-animation-variant-scaleInUp-start\n--brand-animation-variant-scaleInUp-distance\n--brand-animation-variant-slideInRight-distance\n--brand-animation-variant-slideInLeft-distance\n--brand-animation-variant-slideInDown-distance\n--brand-animation-variant-slideInUp-distance\n--brand-animation-transition-default\n--brand-animation-easing-default\n--brand-animation-duration-extended\n--brand-animation-duration-default\n```\n\n----------------------------------------\n\nTITLE: Box Component with Directional Padding\nDESCRIPTION: Demonstration of applying padding to specific sides using CSS logical properties\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Box/react.mdx#2025-04-12_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack direction=\"horizontal\" alignItems=\"center\" flexWrap=\"wrap\">\n  <Box paddingBlockStart={64} className=\"bg-red-lines\">\n    block start\n  </Box>\n  <Box paddingInlineEnd={64} className=\"bg-red-lines\">\n    inline end\n  </Box>\n  <Box paddingBlockEnd={64} className=\"bg-red-lines\">\n    block end\n  </Box>\n  <Box paddingInlineStart={64} className=\"bg-red-lines\">\n    inline start\n  </Box>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Updating Border Radius Tokens\nDESCRIPTION: Shows changes to border radius tokens in version 0.27.0. Old control-specific tokens are removed, and a new scale of border radius values is introduced, including a new 'xlarge' option.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_9\n\nLANGUAGE: diff\nCODE:\n```\n-  --brand-control-border-radius\n-  --brand-control-large-borderRadius\n-  --brand-control-medium-borderRadius\n\n+ --brand-borderRadius-small: 4px\n+ --brand-borderRadius-medium: 8px\n+ --brand-borderRadius-large: 16px\n+ --brand-borderRadius-xlarge: 24px\n```\n\n----------------------------------------\n\nTITLE: River Component Token (CSS)\nDESCRIPTION: CSS token for controlling vertical spacing in river breakout sections.\nSOURCE: https://github.com/primer/brand/blob/main/packages/design-tokens/CHANGELOG.md#2025-04-12_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n--brand-River-spacing-innerY\n```\n\n----------------------------------------\n\nTITLE: Rendering Pillar Component with External Link in React\nDESCRIPTION: Demonstrates how to add an external link to the Pillar component using the Link subcomponent.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Pillar/react.mdx#2025-04-12_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Pillar>\n  <Pillar.Heading>Code search & code view</Pillar.Heading>\n  <Pillar.Description>\n    Enables you to rapidly search, navigate, and understand code, right from\n    GitHub.com.\n  </Pillar.Description>\n  <Pillar.Link href=\"https://github.com\">Learn more</Pillar.Link>\n</Pillar>\n```\n\n----------------------------------------\n\nTITLE: Importing ColorScalesPlayground Component\nDESCRIPTION: Imports and renders the ColorScalesPlayground component from a local color.tsx file within a markdown context.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/primitives/color.mdx#2025-04-12_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport {ColorScalesPlayground} from './color.tsx'\n\n<ColorScalesPlayground />\n```\n\n----------------------------------------\n\nTITLE: Using Stack Component for Basic Layout in React\nDESCRIPTION: Demonstrates the basic usage of the Stack component to render children in a vertical layout.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/components/Stack/react.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Stack>\n  <Heading size=\"subhead-large\">Code search & code view</Heading>\n  <Text as=\"p\">Enables you to rapidly search, navigate, and understand code, right from GitHub.com.</Text>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Importing AnimationProvider in React\nDESCRIPTION: This snippet shows how to import the AnimationProvider component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/next-docs/content/getting-started/animation.mdx#2025-04-12_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {AnimationProvider} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Default Tooltip Implementation\nDESCRIPTION: Basic implementation of the Tooltip component wrapping a Button element with default settings.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Tooltip.mdx#2025-04-12_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Tooltip text=\"Sample tooltip content\">\n  <Button>Action</Button>\n</Tooltip>\n```\n\n----------------------------------------\n\nTITLE: Importing Text Component from Primer React Brand\nDESCRIPTION: Shows how to import the Text component from the @primer/react-brand package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Text/react.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Text} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Defining Testimonial.Name Component Props in React\nDESCRIPTION: This snippet outlines the props for the Testimonial.Name subcomponent, which displays the name of the person or organization providing the testimonial.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Testimonial/react.mdx#2025-04-12_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| Name        | Type              | Default | Description                                                         |\n| :---------- | :---------------- | :-----: | :------------------------------------------------------------------ |\n| `children`  | `string`          |         | Label text                                                          |\n| `className` | `string`          |         | Applies a custom class                                              |\n| `id`        | `string`          |         | Sets a custom id                                                    |\n| `ref`       | `React.RefObject` |         | Forward a Ref to the underlying DOM node                            |\n| `position`  | `string`          |         | Optional. Applies additional content adjancent to the primary text. |\n```\n\n----------------------------------------\n\nTITLE: Importing Textarea Component in JavaScript\nDESCRIPTION: Shows how to import the Textarea component from the @primer/react package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Textarea.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Textarea} from '@primer/react'\n```\n\n----------------------------------------\n\nTITLE: VideoPlayer Track Component Props Interface\nDESCRIPTION: Type definitions for the VideoPlayer.Track component properties, specifically defining the kind property for text track usage.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/VideoPlayer.mdx#2025-04-12_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\ninterface VideoPlayerTrackProps {\n  kind?: 'subtitles' | 'captions' | 'descriptions' | 'chapters' | 'metadata';\n}\n```\n\n----------------------------------------\n\nTITLE: SubNav with Shadow Effect\nDESCRIPTION: Implementation of the SubNav component with a shadow effect applied, which adds depth and a fixed background color to the navigation.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SubNav.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Container sx={{position: 'relative', height: 100}}>\n  <SubNav hasShadow>\n    <SubNav.Heading href=\"#\">Features</SubNav.Heading>\n    <SubNav.Link href=\"#\">Actions</SubNav.Link>\n    <SubNav.Link href=\"#\">Packages</SubNav.Link>\n    <SubNav.Link href=\"#\" aria-current=\"page\">\n      Copilot\n    </SubNav.Link>\n    <SubNav.Link href=\"#\">Code review</SubNav.Link>\n  </SubNav>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Importing SubNav from Primer Brand\nDESCRIPTION: Basic import statement for the SubNav component from the Primer Brand React package.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/SubNav.mdx#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SubNav} from '@primer/react-brand'\n```\n\n----------------------------------------\n\nTITLE: Implementing Boxed Variant Statistic\nDESCRIPTION: Shows how to use the boxed variant of the Statistic component which adds a visual container.\nSOURCE: https://github.com/primer/brand/blob/main/apps/docs/content/components/Statistic.mdx#2025-04-12_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Statistic variant=\"boxed\">\n  <Statistic.Heading>+25%</Statistic.Heading>\n  <Statistic.Description>increase in developer speed</Statistic.Description>\n</Statistic>\n```\n\n----------------------------------------\n\nTITLE: Updating Font Files in Markdown Changelog\nDESCRIPTION: This snippet documents a change where the 'alliance-1' font was replaced with the latest 'Mona Sans' font files. It notes that Mona Sans was previously dark-shipped and that any visual changes are due to the font files themselves.\nSOURCE: https://github.com/primer/brand/blob/main/packages/fonts/CHANGELOG.md#2025-04-12_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- [#218](https://github.com/primer/brand/pull/218) [`aaabfa0`](https://github.com/primer/brand/commit/aaabfa0ebc66399ae14944c9c13fe00e99e0c912) Thanks [@rezrah](https://github.com/rezrah)! - Replaced `alliance-1` with latest `Mona Sans` font files.\n\n  `Mona Sans` was previously dark-shipped, so this change makes it official. Any visual changes are due to the font files themselves, not the Primer Brand release.\n```"
  }
]
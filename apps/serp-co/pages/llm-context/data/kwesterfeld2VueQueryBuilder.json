[
  {
    "owner": "kwesterfeld2",
    "repo": "vue-query-builder",
    "content": "TITLE: Implementing Vue Query Builder with Minimum Configuration\nDESCRIPTION: A complete Vue.js component example demonstrating the basic usage of the Query Builder with a minimum configuration. It includes the template, script, and style sections.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/getting-started.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<template>\n  <div id=\"app\">\n    <query-builder :config=\"config\" v-model=\"query\"></query-builder>\n  </div>\n</template>\n\n<script>\nimport QueryBuilder from \"query-builder-vue\";\n\nimport Input from \"./components/Input.vue\";\nimport Number from \"./components/Number.vue\";\n\nexport default {\n  components: {\n    QueryBuilder\n  },\n  data() {\n    return {\n      query: null,\n\n      config: {\n        operators: [\n          {\n            name: \"AND\",\n            identifier: \"AND\"\n          },\n          {\n            name: \"OR\",\n            identifier: \"OR\"\n          }\n        ],\n        rules: [\n          {\n            identifier: \"txt\",\n            name: \"Text Selection\",\n            component: Input,\n            initialValue: \"\"\n          },\n          {\n            identifier: \"num\",\n            name: \"Number Selection\",\n            component: Number,\n            initialValue: 10\n          }\n        ],\n      }\n    };\n  }\n};\n</script>\n\n<style>\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n#app {\n  margin: 30px auto;\n  width: 90%;\n  border: 1px solid hsl(0, 0%, 75%);\n}\n</style>\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Rules Components in Vue Query Builder\nDESCRIPTION: Demonstrates how to create custom rule components that adhere to the v-model API. Shows three methods: importing Vue components, registering global components, and defining inline components. Each rule requires an identifier, name, component, and optional initial value.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport InputSelection from './InputSelection.vue';\n\nVue.component('NumberSelection', {\n  template: `\n    <input\n      type=\"text\"\n      v-model=\"model\"\n      placeholder=\"dummy input\"\n    >\n  `,\n  props: [\n    'value',\n  ],\n  computed: {\n    model: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit('input', value);\n      },\n    },\n  },\n});\n\n{\n  rules: [\n    {\n      identifier: 'txt',\n      name: 'Text Selection',\n      component: InputSelection,\n      initialValue: '',\n    },\n    {\n      identifier: 'num',\n      name: 'Number Selection',\n      component: 'NumberSelection',\n      initialValue: 10,\n    },\n    {\n      identifier: 'other-num',\n      name: 'Other Number Selection',\n      component: {\n        template: `\n          <input\n            type=\"text\"\n            v-model=\"model\"\n            placeholder=\"dummy input\"\n          >\n        `,\n        props: [\n          'value',\n        ],\n        computed: {\n          model: {\n            get() {\n              return this.value;\n            },\n            set(value) {\n              this.$emit('input', value);\n            },\n          },\n        },\n      },\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Rule Slot Component in Vue Query Builder\nDESCRIPTION: Shows how to create a custom rule component using Vue's dynamic component feature. The component receives rule control props and handles rule data updates.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/styling.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<script>\nexport default {\n  props: [\"ruleCtrl\"],\n};\n</script>\n\n<template>\n  <div class=\"rule-slot\">\n    <span class=\"slot-text\">SLOT #rule</span>\n    <component\n      :is=\"ruleCtrl.ruleComponent\"\n      :value=\"ruleCtrl.ruleData\"\n      @input=\"ruleCtrl.updateRuleData\"\n    />\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Configuring Operators in Vue Query Builder\nDESCRIPTION: Defines operators that determine how rules within a group are evaluated, such as AND, OR, and their negated counterparts. Each operator requires a unique identifier and display name.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  operators: [\n    {\n      name: 'AND',\n      identifier: 'AND',\n    },\n    {\n      name: 'OR',\n      identifier: 'OR',\n    },\n    {\n      name: 'OR NOT',\n      identifier: 'OR_NOT',\n    },\n    {\n      name: 'AND NOT',\n      identifier: 'AND_NOT',\n    },\n    // ...\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing GroupOperator Slot in Vue Query Builder\nDESCRIPTION: Demonstrates how to customize the group operator selection UI using a slot. The example shows implementation of a custom select dropdown for choosing operators with custom styling.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/styling.md#2025-04-21_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <query-builder\n    :config=\"config\"\n    v-model=\"query\"\n  >\n    <template #groupOperator=\"props\">\n      <div class=\"query-builder-group-slot__group-selection\">\n        Custom #groupOperator slot\n        <select\n          :value=\"props.currentOperator\"\n          @input=\"props.updateCurrentOperator($event.target.value)\"\n        >\n          <option disabled value>Select an operator</option>\n          <option\n            v-for=\"operator in props.operators\"\n            :key=\"operator.identifier\"\n            :value=\"operator.identifier\"\n            v-text=\"operator.name\"\n          />\n        </select>\n      </div>\n    </template>\n  </query-builder>\n</template>\n\n<style>\n  .query-builder-group-slot__group-selection {\n    padding: 16px;\n    background-color: hsl(0, 0, 95%);\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Embedding Custom Components Demo in Vue Query Builder\nDESCRIPTION: This code snippet embeds a CodeSandbox iframe demonstrating the use of custom components in Vue Query Builder. It showcases integration with vue-range-component, vue-select, and vue-flatpickr-component.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/demos.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  src=\"https://codesandbox.io/embed/demo-components-67vro?fontsize=14&hidenavigation=1&module=%2Fsrc%2FApp.vue&theme=dark\"\n  style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n  title=\"demo components\"\n  allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n  sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n></iframe>\n```\n\n----------------------------------------\n\nTITLE: Enabling Drag-and-Drop Sorting in Vue Query Builder\nDESCRIPTION: Configures the sortable functionality using Vue.Draggable to allow reordering of rules and groups. The dragging property accepts Sortable options excluding the 'groups' property and methods starting with 'on'.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  dragging: {\n    animation: 300,\n    disabled: false,\n    dragClass: \"sortable-drag\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Color Schemes for Nested Groups\nDESCRIPTION: Configures colors to visually distinguish nested query groups. The colors property accepts an array of CSS color values with a minimum of two colors, which will be applied cyclically to nested groups.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  colors: [\n    'hsl(88, 50%, 55%)',\n    'hsl(187, 100%, 45%)',\n    'hsl(15, 100%, 55%)',\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: HTML iframe Integration for Vue Query Builder Demo\nDESCRIPTION: CodeSandbox embedded iframe showing a live demo of the Vue Query Builder in action. Demonstrates the basic implementation and features of the library.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  src=\"https://codesandbox.io/embed/introduction-demo-ig55y?fontsize=14&hidenavigation=1&module=%2Fsrc%2FApp.vue&theme=dark&view=preview\"\n  style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n  title=\"Introduction Demo\"\n  allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n  sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n></iframe>\n```\n\n----------------------------------------\n\nTITLE: Embedding Bootstrap 4 Themed Vue Query Builder Demo\nDESCRIPTION: This code snippet embeds a CodeSandbox iframe showcasing the Vue Query Builder with a Bootstrap 4 theme. It demonstrates how the Query Builder can be styled using the Bootstrap 4 CSS framework.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/demos.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  src=\"https://codesandbox.io/embed/demo-bootstrap-4-e37eq?fontsize=14&hidenavigation=1&module=%2Fsrc%2FApp.vue&theme=dark\"\n  style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n  title=\"demo bootstrap 4\"\n  allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n  sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n></iframe>\n```\n\n----------------------------------------\n\nTITLE: Embedding Tailwind CSS Themed Vue Query Builder Demo\nDESCRIPTION: This code snippet embeds a CodeSandbox iframe presenting the Vue Query Builder with a Tailwind CSS theme. It demonstrates how the Query Builder can be styled using the Tailwind CSS framework.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/demos.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  src=\"https://codesandbox.io/embed/demo-tailwind-css-9v9f5?fontsize=14&hidenavigation=1&module=%2Fsrc%2FApp.vue&theme=dark\"\n  style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n  title=\"Demo: Tailwind CSS\"\n  allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n  sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n></iframe>\n```\n\n----------------------------------------\n\nTITLE: Embedding Bulma Themed Vue Query Builder Demo\nDESCRIPTION: This code snippet embeds a CodeSandbox iframe displaying the Vue Query Builder with a Bulma theme. It illustrates how the Query Builder can be styled using the Bulma CSS framework.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/demos.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  src=\"https://codesandbox.io/embed/demo-bulma-9m5r4?fontsize=14&hidenavigation=1&module=%2Fsrc%2FApp.vue&theme=dark\"\n  style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n  title=\"Demo: Bulma\"\n  allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n  sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n></iframe>\n```\n\n----------------------------------------\n\nTITLE: Installing Vue Query Builder with Package Managers\nDESCRIPTION: Commands to install the Vue Query Builder library using yarn or npm package managers.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/getting-started.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add query-builder-vue\nnpm install query-builder-vue\n```\n\n----------------------------------------\n\nTITLE: Installing Vue Query Builder with package managers\nDESCRIPTION: Commands to install the Vue Query Builder package using yarn or npm package managers.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add query-builder-vue\nnpm install query-builder-vue\n```\n\n----------------------------------------\n\nTITLE: Including Vue Query Builder via CDN\nDESCRIPTION: HTML script tag to include the pre-transpiled Vue Query Builder library from the Unpkg.com CDN.\nSOURCE: https://github.com/kwesterfeld2/vue-query-builder/blob/main/docs/getting-started.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/query-builder-vue@latest/dist/query-builder-vue.umd.min.js\"></script>\n```"
  }
]
[
  {
    "owner": "geontech",
    "repo": "gr-redhawk_integration",
    "content": "TITLE: Installing REDHAWK Integration Package for GNURadio\nDESCRIPTION: Commands for installing the REDHAWK Integration Package OOT module for GNURadio. It includes steps for both source/package manager installations and Pybombs installations. The process involves creating a build directory, running cmake, and then installing the package.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build && cd build\ncmake <path>gr-redhawk_integration\n[sudo] make install\n```\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build && cd build\ncmake <path>gr-redhawk_integration\nsource <your prefix>/setup_env.sh\nmake install\n```\n\n----------------------------------------\n\nTITLE: Building and Configuring the gnuradio-redhawk_integration Library\nDESCRIPTION: Creates the shared library for the REDHAWK integration module, configures its properties, and links it with required dependencies including Boost, GNU Radio, and REDHAWK libraries.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/lib/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\nadd_library(gnuradio-redhawk_integration SHARED ${redhawk_integration_sources})\ntarget_link_libraries(gnuradio-redhawk_integration ${Boost_LIBRARIES} ${GNURADIO_ALL_LIBRARIES} ${REDHAWK_LIBRARIES})\nset_target_properties(gnuradio-redhawk_integration PROPERTIES DEFINE_SYMBOL \"gnuradio_redhawk_integration_EXPORTS\")\nadd_dependencies(gnuradio-redhawk_integration redhawk_integration_generated_includes)\n\nif(APPLE)\n    set_target_properties(gnuradio-redhawk_integration PROPERTIES\n        INSTALL_NAME_DIR \"${CMAKE_INSTALL_PREFIX}/lib\"\n    )\nendif(APPLE)\n```\n\n----------------------------------------\n\nTITLE: Generating Source Files for REDHAWK BulkIO Components\nDESCRIPTION: Uses GNU Radio macros to generate implementation files for REDHAWK BulkIO sink and source blocks across multiple data types (complex, float, int, etc.).\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/lib/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(GrMiscUtils)\nGR_EXPAND_X_CC_H(redhawk_integration rh_sink_bulkio_X_impl c f i b s)\nGR_EXPAND_X_CC_H(redhawk_integration rh_source_bulkio_X_impl c f i b s)\n\nlist(APPEND redhawk_integration_sources ${generated_sources})\n\nset(redhawk_integration_sources \"${redhawk_integration_sources}\" PARENT_SCOPE)\nif(NOT redhawk_integration_sources)\n\tMESSAGE(STATUS \"No C++ sources... skipping lib/\")\n\treturn()\nendif(NOT redhawk_integration_sources)\n```\n\n----------------------------------------\n\nTITLE: REDHAWK Library Configuration\nDESCRIPTION: Configures REDHAWK-specific include directories and libraries required for the integration.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\nset(REDHAWK_INCLUDE_DIRS $ENV{OSSIEHOME}/include)\nlist(APPEND REDHAWK_INCLUDE_DIRS $ENV{OSSIEHOME}/include/bulkio)\nlist(APPEND REDHAWK_INCLUDE_DIRS $ENV{OSSIEHOME}/include/ossie)\nlist(APPEND REDHAWK_INCLUDE_DIRS $ENV{OSSIEHOME}/share/idl)\nlist(APPEND REDHAWK_INCLUDE_DIRS /usr/include/omniORB4)\nlist(APPEND REDHAWK_INCLUDE_DIRS /usr/include/omnithread)\n\nset(REDHAWK_LIBRARY_DIRS $ENV{OSSIEHOME}/lib${LIB_SUFFIX})\n\nset(REDHAWK_LIBRARIES bulkio-2.2)\nlist(APPEND REDHAWK_LIBRARIES bulkioInterfaces)\nlist(APPEND REDHAWK_LIBRARIES ossiecf)\nlist(APPEND REDHAWK_LIBRARIES ossieidl)\nlist(APPEND REDHAWK_LIBRARIES COS4)\nlist(APPEND REDHAWK_LIBRARIES omniDynamic4)\nlist(APPEND REDHAWK_LIBRARIES omniORB4)\nlist(APPEND REDHAWK_LIBRARIES omnithread)\n```\n\n----------------------------------------\n\nTITLE: Installing XML Files for GNU Radio Companion Blocks\nDESCRIPTION: This CMake command installs XML files for REDHAWK integration sink and source blocks into the GNU Radio Companion blocks directory. These XML files define the block properties and interfaces for use in the GRC.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/grc/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ninstall(FILES\n    redhawk_integration_rh_sink_bulkio.xml\n    redhawk_integration_rh_source_bulkio.xml DESTINATION share/gnuradio/grc/blocks\n)\n```\n\n----------------------------------------\n\nTITLE: Expanding RedHawk BulkIO Header Templates in CMake\nDESCRIPTION: Uses GNURadio's template expansion utilities to generate type-specific header files for RedHawk BulkIO sink and source blocks. The expansion creates headers for complex, float, integer, byte, and short data types.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/include/redhawk_integration/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ninclude(GrMiscUtils)\nGR_EXPAND_X_H(redhawk_integration rh_sink_bulkio_X c f i b s)\nGR_EXPAND_X_H(redhawk_integration rh_source_bulkio_X c f i b s)\n```\n\n----------------------------------------\n\nTITLE: Initial CMake Setup and Version Configuration\nDESCRIPTION: Sets up basic CMake project configuration including minimum version, project name, and version information.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required(VERSION 2.6)\nproject(gr-redhawk_integration CXX C)\nenable_testing()\n\nset(VERSION_INFO_MAJOR_VERSION 1)\nset(VERSION_INFO_API_COMPAT    0)\nset(VERSION_INFO_MINOR_VERSION 0)\nset(VERSION_INFO_MAINT_VERSION git)\n```\n\n----------------------------------------\n\nTITLE: Installing Library Files for gr-redhawk_integration\nDESCRIPTION: Configures the installation process for the built library files, specifying runtime and development components.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/lib/CMakeLists.txt#2025-04-22_snippet_3\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(GrMiscUtils)\nGR_LIBRARY_FOO(gnuradio-redhawk_integration RUNTIME_COMPONENT \"redhawk_integration_runtime\" DEVEL_COMPONENT \"redhawk_integration_devel\")\n```\n\n----------------------------------------\n\nTITLE: Installing Header Files in CMake\nDESCRIPTION: Configures the installation of both generated header files and the API header file to the appropriate include directory. Uses the 'redhawk_integration_devel' component for package management.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/include/redhawk_integration/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: cmake\nCODE:\n```\ninstall(FILES\n    ${generated_includes}\n    api.h\n    DESTINATION include/redhawk_integration\n    COMPONENT \"redhawk_integration_devel\"\n)\n```\n\n----------------------------------------\n\nTITLE: Directory Structure and Installation Configuration\nDESCRIPTION: Defines installation paths and directory structure for the project components.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\nset(GR_RUNTIME_DIR      bin)\nset(GR_LIBRARY_DIR      lib${LIB_SUFFIX})\nset(GR_INCLUDE_DIR      include/redhawk_integration)\nset(GR_DATA_DIR         share)\nset(GR_PKG_DATA_DIR     ${GR_DATA_DIR}/${CMAKE_PROJECT_NAME})\nset(GR_DOC_DIR          ${GR_DATA_DIR}/doc)\nset(GR_PKG_DOC_DIR      ${GR_DOC_DIR}/${CMAKE_PROJECT_NAME})\nset(GR_CONF_DIR         etc)\nset(GR_PKG_CONF_DIR     ${GR_CONF_DIR}/${CMAKE_PROJECT_NAME}/conf.d)\nset(GR_LIBEXEC_DIR      libexec)\nset(GR_PKG_LIBEXEC_DIR  ${GR_LIBEXEC_DIR}/${CMAKE_PROJECT_NAME})\nset(GRC_BLOCKS_DIR      ${GR_PKG_DATA_DIR}/grc/blocks)\n```\n\n----------------------------------------\n\nTITLE: Configuring Include and Link Directories for gr-redhawk_integration\nDESCRIPTION: Sets up the include and link directories for the build, specifying paths for the module's headers, Boost, and REDHAWK dependencies.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/lib/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(GrPlatform) #define LIB_SUFFIX\n\ninclude_directories(\n    ${CMAKE_CURRENT_BINARY_DIR}/../include\n    ${Boost_INCLUDE_DIR}\n    ${REDHAWK_INCLUDE_DIRS}\n)\nlink_directories(\n    ${Boost_LIBRARY_DIRS}\n    ${REDHAWK_LIBRARY_DIRS}\n)\n```\n\n----------------------------------------\n\nTITLE: Installing Python Sources for redhawk_integration\nDESCRIPTION: Uses the GR_PYTHON_INSTALL macro to install the Python files (specifically __init__.py) to the GNU Radio Python directory.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/python/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\nGR_PYTHON_INSTALL(\n    FILES\n    __init__.py\n    DESTINATION ${GR_PYTHON_DIR}/redhawk_integration\n)\n```\n\n----------------------------------------\n\nTITLE: Setting SWIG Generation Parameters - CMake\nDESCRIPTION: Configures SWIG generation parameters including libraries, documentation file, and directories.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/swig/CMakeLists.txt#2025-04-22_snippet_3\n\nLANGUAGE: cmake\nCODE:\n```\nset(GR_SWIG_LIBRARIES gnuradio-redhawk_integration)\nset(GR_SWIG_DOC_FILE ${CMAKE_CURRENT_BINARY_DIR}/redhawk_integration_swig_doc.i)\nset(GR_SWIG_DOC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/../include)\n\nGR_SWIG_MAKE(redhawk_integration_swig redhawk_integration_swig.i)\n```\n\n----------------------------------------\n\nTITLE: Configuring SWIG Include Directories - CMake\nDESCRIPTION: Sets up SWIG include directories by appending GNU Radio SWIG paths.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/swig/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: cmake\nCODE:\n```\nforeach(incdir ${GNURADIO_RUNTIME_INCLUDE_DIRS})\n    list(APPEND GR_SWIG_INCLUDE_DIRS ${incdir}/gnuradio/swig)\nendforeach(incdir)\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Program Installation for GNU Radio\nDESCRIPTION: This CMake snippet includes the GrPython module and configures the installation of Python programs for a GNU Radio project. It uses the GR_PYTHON_INSTALL function to specify the installation of programs to the 'bin' destination directory.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/apps/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(GrPython)\n\nGR_PYTHON_INSTALL(\n    PROGRAMS\n    DESTINATION bin\n)\n```\n\n----------------------------------------\n\nTITLE: Finding SWIG and Python Dependencies - CMake\nDESCRIPTION: Locates required SWIG and Python 2 libraries. Exits if either dependency is not found.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/swig/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: cmake\nCODE:\n```\nfind_package(SWIG)\nfind_package(PythonLibs 2)\nif(NOT SWIG_FOUND OR NOT PYTHONLIBS_FOUND)\n    return()\nendif()\ninclude(GrSwig)\ninclude(GrPython)\n```\n\n----------------------------------------\n\nTITLE: Installing SWIG Module - CMake\nDESCRIPTION: Installs the built SWIG module to the GNU Radio Python directory.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/swig/CMakeLists.txt#2025-04-22_snippet_4\n\nLANGUAGE: cmake\nCODE:\n```\nGR_SWIG_INSTALL(TARGETS redhawk_integration_swig DESTINATION ${GR_PYTHON_DIR}/redhawk_integration)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Unit Tests for gr-redhawk_integration\nDESCRIPTION: Configures and builds unit tests for the REDHAWK integration module, linking the test executable with necessary libraries and registering it with the GNU Radio test system.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/lib/CMakeLists.txt#2025-04-22_snippet_4\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(GrTest)\n\ninclude_directories(${CPPUNIT_INCLUDE_DIRS})\n\nlist(APPEND test_redhawk_integration_sources\n    ${CMAKE_CURRENT_SOURCE_DIR}/test_redhawk_integration.cc\n    ${CMAKE_CURRENT_SOURCE_DIR}/qa_redhawk_integration.cc\n)\n\nadd_executable(test-redhawk_integration ${test_redhawk_integration_sources})\n\ntarget_link_libraries(\n  test-redhawk_integration\n  ${GNURADIO_RUNTIME_LIBRARIES}\n  ${Boost_LIBRARIES}\n  ${CPPUNIT_LIBRARIES}\n  gnuradio-redhawk_integration\n)\n\nGR_ADD_TEST(test_redhawk_integration test-redhawk_integration)\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Target for Generated Headers in CMake\nDESCRIPTION: Defines a custom target that depends on the generated header includes, ensuring proper build dependencies for the generated files.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/include/redhawk_integration/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: cmake\nCODE:\n```\nadd_custom_target(redhawk_integration_generated_includes DEPENDS\n    ${generated_includes}\n)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Unit Tests for redhawk_integration\nDESCRIPTION: Includes the GrTest module and sets up testing dependencies and Python directories for the unit tests of the redhawk_integration module.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/python/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(GrTest)\n\nset(GR_TEST_TARGET_DEPS gnuradio-redhawk_integration)\nset(GR_TEST_PYTHON_DIRS ${CMAKE_BINARY_DIR}/swig)\n```\n\n----------------------------------------\n\nTITLE: Installing SWIG Development Files - CMake\nDESCRIPTION: Installs SWIG interface files for development purposes.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/swig/CMakeLists.txt#2025-04-22_snippet_5\n\nLANGUAGE: cmake\nCODE:\n```\ninstall(\n    FILES\n    redhawk_integration_swig.i\n    ${CMAKE_CURRENT_BINARY_DIR}/redhawk_integration_swig_doc.i\n    DESTINATION ${GR_INCLUDE_DIR}/redhawk_integration/swig\n)\n```\n\n----------------------------------------\n\nTITLE: Including Python Installation Macros in CMake\nDESCRIPTION: Includes the GrPython macros for Python installation and checks if the Python interpreter is found. If Python is not found, the script returns early.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/python/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(GrPython)\nif(NOT PYTHONINTERP_FOUND)\n    return()\nendif()\n```\n\n----------------------------------------\n\nTITLE: Printing Build Summary Information\nDESCRIPTION: Outputs status messages showing the configured installation prefix and version information for the build.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/lib/CMakeLists.txt#2025-04-22_snippet_5\n\nLANGUAGE: CMake\nCODE:\n```\nmessage(STATUS \"Using install prefix: ${CMAKE_INSTALL_PREFIX}\")\nmessage(STATUS \"Building for version: ${VERSION} / ${LIBVER}\")\n```\n\n----------------------------------------\n\nTITLE: Setting Up Doxygen Configuration in CMake\nDESCRIPTION: This snippet configures paths and options for Doxygen documentation generation. It sets up source and build directories, enables HTML and XML output, and creates the Doxyfile from a template.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/docs/doxygen/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\nfile(TO_NATIVE_PATH ${CMAKE_SOURCE_DIR} top_srcdir)\nfile(TO_NATIVE_PATH ${CMAKE_BINARY_DIR} top_builddir)\nfile(TO_NATIVE_PATH ${CMAKE_SOURCE_DIR} abs_top_srcdir)\nfile(TO_NATIVE_PATH ${CMAKE_BINARY_DIR} abs_top_builddir)\n\nset(HAVE_DOT ${DOXYGEN_DOT_FOUND})\nset(enable_html_docs YES)\nset(enable_latex_docs NO)\nset(enable_xml_docs YES)\n\nconfigure_file(\n    ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in\n    ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile\n@ONLY)\n\nset(BUILT_DIRS ${CMAKE_CURRENT_BINARY_DIR}/xml ${CMAKE_CURRENT_BINARY_DIR}/html)\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Target and Installing Doxygen Documentation in CMake\nDESCRIPTION: This snippet creates a custom target that depends on the generated documentation directories. It also specifies the installation of the generated documentation to the package's documentation directory.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/docs/doxygen/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\nadd_custom_target(doxygen_target ALL DEPENDS ${BUILT_DIRS})\n\ninstall(DIRECTORY ${BUILT_DIRS} DESTINATION ${GR_PKG_DOC_DIR})\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Command for Doxygen Documentation Generation in CMake\nDESCRIPTION: This snippet defines a custom command to generate documentation using Doxygen. It specifies the output directories, the Doxygen executable, and the working directory for documentation generation.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/docs/doxygen/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\nadd_custom_command(\n    OUTPUT ${BUILT_DIRS}\n    COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile\n    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n    COMMENT \"Generating documentation with doxygen\"\n)\n```\n\n----------------------------------------\n\nTITLE: Doxygen Dependency Configuration in CMake\nDESCRIPTION: Configures Doxygen documentation generation for the project. Searches for Doxygen installation and conditionally adds the doxygen subdirectory if documentation generation is enabled.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/docs/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\nfind_package(Doxygen)\n\nif(ENABLE_DOXYGEN)\n\nadd_subdirectory(doxygen)\n\nendif(ENABLE_DOXYGEN)\n```\n\n----------------------------------------\n\nTITLE: Checking C++ Sources Existence - CMake\nDESCRIPTION: Checks if there are any C++ source files defined. If not, skips SWIG processing entirely.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/swig/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\nif(NOT redhawk_integration_sources)\n\tMESSAGE(STATUS \"No C++ sources... skipping swig/\")\n\treturn()\nendif(NOT redhawk_integration_sources)\n```\n\n----------------------------------------\n\nTITLE: Markdown Project Configuration\nDESCRIPTION: YAML frontmatter configuration defining the module metadata including title, description, authors, and licensing information.\nSOURCE: https://github.com/geontech/gr-redhawk_integration/blob/master/MANIFEST.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ntitle: The REDHAWK_INTEGRATION OOT Module\nbrief: This module provides source and sink blocks for streaming data to/from REDHAWK.\ntags:\n  - sdr\n  - redhawk-sdr\nauthor:\n  - Thomas Goodwin <btgoodwin@geontech.com>\n  - Chris Conover <cconover@geontech.com>\n  - Rodrigo Alencar <alencar.fmce@imbel.gov.br> \ncopyright_owner:\n  - Geon Technologies, LLC\n  - IMBEL/FMCE\n\nlicense:\n#repo: # Put the URL of the repository here, or leave blank for default\n#website: <module_website> # If you have a separate project website, put it here\n#icon: <icon_url> # Put a URL to a square image here that will be used as an icon on CGRAN\n```"
  }
]